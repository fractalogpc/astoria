// Made with Amplify Shader Editor v1.9.6.3
// Available at the Unity Asset Store - http://u3d.as/y3X 
Shader "BOXOPHOBIC/The Visual Engine/Geometry/Blanket Simple Lit"
{
	Properties
	{
		[HideInInspector]_motion_highlight_color("_motion_highlight_color", Vector) = (0,0,0,0)
		[HideInInspector]_SpecColor("Specular Color", Color) = (1,1,1,1)
		[HideInInspector]_IsVersion("_IsVersion", Float) = 2040
		[HideInInspector]_IsTVEShader("_IsTVEShader", Float) = 1
		[HideInInspector]_IsShared("_IsShared", Float) = 0
		[HideInInspector]_IsIdentifier("_IsIdentifier", Float) = 0
		[HideInInspector]_IsCollected("_IsCollected", Float) = 0
		[HideInInspector]_IsConverted("_IsConverted", Float) = 0
		[HideInInspector]_IsCustomShader("_IsCustomShader", Float) = 0
		[HideInInspector]_HasDefaultTextures("_HasDefaultTextures", Float) = 0
		[HideInInspector]_MainTex("Legacy MainTex", 2D) = "white" {}
		[HideInInspector]_BumpMap("Legacy BumpMap", 2D) = "white" {}
		[HideInInspector]_Cutoff("Legacy Cutoff", Float) = 0.5
		[HideInInspector]_Color("Legacy Color", Color) = (0,0,0,0)
		[StyledCategory(Render Settings, true, 0, 10)]_RenderCategory("[ Render Category ]", Float) = 1
		[Enum(Opaque,0,Transparent,1)]_RenderMode("Render Mode", Float) = 0
		[Enum(Off,0,On,1)]_RenderZWrite("Render ZWrite", Float) = 1
		[Enum(Both,0,Back,1,Front,2)]_RenderCull("Render Faces", Float) = 2
		[HideInInspector]_render_normal("_render_normal", Vector) = (1,1,1,0)
		[HideInInspector]_RenderQueue("Render Queue", Float) = 0
		[HideInInspector]_RenderPriority("Render Priority", Float) = 0
		[HideInInspector]_RenderBakeGI("Render BakeGI", Float) = 0
		[Enum(Off,0,On,1)]_RenderSSR("Render SSR", Float) = 0
		[Enum(Off,0,On,1)]_RenderDecals("Render Decals", Float) = 0
		[Enum(Auto,0,Off,1,On,2)]_RenderMotion("Render Motion", Float) = 0
		[Enum(Flip,0,Mirror,1,Same,2)]_RenderNormal("Render Normals", Float) = 0
		[Enum(Off,0,On,1)]_RenderSpecular("Render Specular", Float) = 1
		[Enum(Off,0,On,1)]_RenderShadow("Render Shadows", Float) = 1
		[Enum(Default,0,Point ,1,Low,2,Medium,3,High,4)]_RenderFilter("Render Filtering", Float) = 0
		[Enum(Off,0,On,1)]_RenderClip("Render Clipping", Float) = 0
		[StyledSpace(10)]_RenderEnd("[ Render End ]", Float) = 1
		[StyledCategory(Noise Settings, true, 0, 10)]_NoiseCategory("[ Noise Category ]", Float) = 1
		[NoScaleOffset][StyledTextureSingleLine]_NoiseTex3D("Noise Mask 3D", 3D) = "white" {}
		[NoScaleOffset][StyledTextureSingleLine]_NoiseTexSS("Noise Mask SS", 2D) = "white" {}
		[StyledSpace(10)]_NoiseEnd("[ Noise End ]", Float) = 1
		[StyledCategory(Object Settings, true, 0, 10)]_ObjectCategory("[ Object Category ]", Float) = 1
		[StyledMessage(Info, Use the Object Height and Radius to remap the procedural height and spherical masks when used for motion., 0, 10)]_ObjectBoundsInfo("# ObjectBoundsInfo", Float) = 0
		[Enum(Legacy,0,Standard,1)]_ObjectModelMode("Object Model Mode", Float) = 1
		[Enum(Off,0,Baked,1,Procedural,2)]_ObjectPivotMode("Object Pivots Mode", Float) = 0
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3)]_ObjectPhaseMode("Object Phase Mask", Float) = 0
		_ObjectHeightValue("Object Height Value", Range( 0 , 40)) = 1
		_ObjectRadiusValue("Object Radius Value", Range( 0 , 40)) = 1
		[HideInInspector]_object_phase_mode("_object_phase_mode", Vector) = (0,0,0,0)
		[StyledSpace(10)]_ObjectEnd("[ Object End ]", Float) = 1
		[StyledCategory(Global Settings, true, 0, 10)]_GlobalCategory("[ Global Category ]", Float) = 1
		[StyledEnum(Coat Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalCoatLayerValue("Global Coat Layer", Float) = 0
		[StyledEnum(Paint Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalPaintLayerValue("Global Paint Layer", Float) = 0
		[StyledEnum(Atmo Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalAtmoLayerValue("Global Atmo Layer", Float) = 0
		[StyledEnum(Fade Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalFadeLayerValue("Global Fade Layer", Float) = 0
		[StyledEnum(Glow Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalGlowLayerValue("Global Glow Layer", Float) = 0
		[StyledEnum(Form Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalFormLayerValue("Global Form Layer", Float) = 0
		[StyledEnum(Wind Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalWindLayerValue("Global Wind Layer", Float) = 0
		[StyledEnum(Push Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalPushLayerValue("Global Push Layer", Float) = 0
		_GlobalCoatPivotValue("Global Coat Pivots", Range( 0 , 1)) = 0
		_GlobalPaintPivotValue("Global Paint Pivots", Range( 0 , 1)) = 0
		_GlobalAtmoPivotValue("Global Atmo Pivots", Range( 0 , 1)) = 0
		_GlobalFadePivotValue("Global Fade Pivots", Range( 0 , 1)) = 0
		_GlobalGlowPivotValue("Global Glow Pivots", Range( 0 , 1)) = 0
		_GlobalFormPivotValue("Global Form Pivots", Range( 0 , 1)) = 1
		[StyledSpace(10)]_GlobalEnd("[ Global End ]", Float) = 1
		[StyledCategory(Main Settings, true, 0, 10)]_MainCategory("[Main Category ]", Float) = 1
		[StyledMessage(Info, Use the Multi Mask remap sliders to mask out the branches from the leaves when using Dual Colors or for Global Effects. The mask is stored in the Shader texture blue channel. , 0, 10)]_MainMultiMaskInfo("# MainMultiMaskInfo", Float) = 0
		[StyledTextureSingleLine]_MainAlbedoTex("Main Albedo", 2D) = "white" {}
		[StyledTextureSingleLine]_MainNormalTex("Main Normal", 2D) = "bump" {}
		[StyledTextureSingleLine]_MainShaderTex("Main Shader", 2D) = "white" {}
		[Enum(Main UV,0,Extra UV,1,Planar,2,Triplanar,3,Stochastic,4,Stochastic Triplanar,5)][Space(10)]_MainSampleMode("Main Sampling", Float) = 0
		[Enum(Tilling And Offset,0,Scale And Offset,1)]_MainCoordMode("Main UV Mode", Float) = 0
		[StyledVector(9)]_MainCoordValue("Main UV Value", Vector) = (1,1,0,0)
		[HideInInspector]_main_coord_value("_main_coord_value", Vector) = (1,1,0,0)
		[Enum(Constant,0,Dual Colors,1)]_MainColorMode("Main Color", Float) = 0
		[HDR]_MainColor("Main Color", Color) = (1,1,1,1)
		[HDR]_MainColorTwo("Main ColorB", Color) = (1,1,1,1)
		_MainAlphaClipValue("Main Alpha", Range( 0 , 1)) = 0.5
		_MainAlbedoValue("Main Albedo", Range( 0 , 1)) = 1
		_MainNormalValue("Main Normal", Range( -8 , 8)) = 1
		_MainMetallicValue("Main Metallic", Range( 0 , 1)) = 0
		_MainOcclusionValue("Main Occlusion", Range( 0 , 1)) = 0
		[StyledRemapSlider]_MainMultiRemap("Main Multi Mask", Vector) = (0,0,0,0)
		_MainSmoothnessValue("Main Smoothness", Range( 0 , 1)) = 0
		[StyledSpace(10)]_MainEnd("[Main End ]", Float) = 1
		[StyledCategory(Layer Settings, true, 0, 10)]_LayerCategory("[ Layer Category ]", Float) = 1
		_SecondIntensityValue("Layer Intensity", Range( 0 , 1)) = 0
		[Enum(Off,0,Bake Settings To Impostors,1)]_SecondBakeMode("Layer Baking", Float) = 1
		[Space(10)][StyledTextureSingleLine]_SecondAlbedoTex("Layer Albedo", 2D) = "white" {}
		[StyledTextureSingleLine]_SecondNormalTex("Layer Normal", 2D) = "bump" {}
		[StyledTextureSingleLine]_SecondShaderTex("Layer Shader", 2D) = "white" {}
		[Enum(Main UV,0,Extra UV,1,Planar,2,Triplanar,3,Stochastic,4,Stochastic Triplanar,5)][Space(10)]_SecondSampleMode("Layer Sampling", Float) = 0
		[Enum(Tilling And Offset,0,Scale And Offset,1)]_SecondCoordMode("Layer UV Mode", Float) = 0
		[StyledVector(9)]_SecondCoordValue("Layer UV Value", Vector) = (1,1,0,0)
		[Enum(Constant,0,Dual Colors,1)]_SecondColorMode("Layer Color", Float) = 0
		[HDR]_SecondColor("Layer Color", Color) = (1,1,1,1)
		[HDR]_SecondColorTwo("Layer ColorB", Color) = (1,1,1,1)
		_SecondAlphaClipValue("Layer Alpha", Range( 0 , 1)) = 0.5
		_SecondAlbedoValue("Layer Albedo", Range( 0 , 1)) = 1
		_SecondNormalValue("Layer Normal", Range( -8 , 8)) = 1
		_SecondMetallicValue("Layer Metallic", Range( 0 , 1)) = 0
		_SecondOcclusionValue("Layer Occlusion", Range( 0 , 1)) = 0
		[StyledRemapSlider]_SecondMultiRemap("Layer Multi Mask", Vector) = (0,0,0,0)
		_SecondSmoothnessValue("Layer Smoothness", Range( 0 , 1)) = 0
		[Space(10)]_SecondBlendIntensityValue("Layer Blend Intensity", Range( 0 , 1)) = 1
		_SecondBlendAlbedoValue("Layer Blend Albedos", Range( 0 , 1)) = 0
		_SecondBlendNormalValue("Layer Blend Normals", Range( 0 , 1)) = 0
		_SecondBlendShaderValue("Layer Blend Shaders", Range( 0 , 1)) = 0
		[Space(10)][StyledTextureSingleLine]_SecondMaskTex("Layer Mask", 2D) = "white" {}
		[Enum(Main UV,0,Extra UV,1,Planar,2,Triplanar,3)][Space(10)]_SecondMaskSampleMode("Mask Sampling", Float) = 0
		[Enum(Tilling And Offset,0,Scale And Offset,1)]_SecondMaskCoordMode("Mask UV Mode", Float) = 0
		[StyledVector(9)]_SecondMaskCoordValue("Mask UV Value", Vector) = (1,1,0,0)
		_SecondMaskValue("Layer TexB Mask", Range( 0 , 1)) = 1
		[StyledRemapSlider]_SecondMaskRemap("Layer TexB Mask", Vector) = (0,1,0,0)
		_SecondProjValue("Layer ProjY Mask", Range( 0 , 1)) = 0
		[StyledRemapSlider]_SecondProjRemap("Layer ProjY Mask", Vector) = (0,1,0,0)
		_SecondMeshValue("Layer Mesh Mask", Range( 0 , 1)) = 0
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3)]_SecondMeshMode("Layer Mesh Mask", Float) = 2
		[StyledRemapSlider]_SecondMeshRemap("Layer Mesh Mask", Vector) = (0,1,0,0)
		[StyledRemapSlider]_SecondBlendRemap("Layer Blend Mask", Vector) = (0,1,0,0)
		[Space(10)][StyledToggle]_SecondElementMode("Use Coat Globals / Elements", Float) = 0
		[StyledSpace(10)]_LayerEnd("[ Layer End ]", Float) = 1
		[HideInInspector]_second_coord_value("_second_coord_value", Vector) = (1,1,0,0)
		[HideInInspector]_second_vert_mode("_second_vert_mode", Vector) = (0,0,0,0)
		[HideInInspector]_second_mask_coord_value("_second_mask_coord_value", Vector) = (1,1,0,0)
		[StyledCategory(Detail Settings, true, 0, 10)]_DetailCategory("[ Detail Category ]", Float) = 1
		_ThirdIntensityValue("Detail Intensity", Range( 0 , 1)) = 0
		[Enum(Off,0,Bake Settings To Impostors,1)]_ThirdBakeMode("Detail Baking", Float) = 1
		[Space(10)][StyledTextureSingleLine]_ThirdAlbedoTex("Detail Albedo", 2D) = "white" {}
		[StyledTextureSingleLine]_ThirdNormalTex("Detail Normal", 2D) = "bump" {}
		[StyledTextureSingleLine]_ThirdShaderTex("Detail Shader", 2D) = "white" {}
		[Enum(Main UV,0,Extra UV,1,Planar,2,Triplanar,3,Stochastic,4,Stochastic Triplanar,5)][Space(10)]_ThirdSampleMode("Detail Sampling", Float) = 0
		[Enum(Tilling And Offset,0,Scale And Offset,1)]_ThirdCoordMode("Detail UV Mode", Float) = 0
		[StyledVector(9)]_ThirdCoordValue("Detail UV Value", Vector) = (1,1,0,0)
		[Enum(Constant,0,Dual Colors,1)]_ThirdColorMode("Detail Color", Float) = 0
		[HDR]_ThirdColor("Detail Color", Color) = (1,1,1,1)
		[HDR]_ThirdColorTwo("Detail ColorB", Color) = (1,1,1,1)
		_ThirdAlphaClipValue("Detail Alpha", Range( 0 , 1)) = 0.5
		_ThirdAlbedoValue("Detail Albedo", Range( 0 , 1)) = 1
		_ThirdNormalValue("Detail Normal", Range( -8 , 8)) = 1
		_ThirdMetallicValue("Detail Metallic", Range( 0 , 1)) = 0
		_ThirdOcclusionValue("Detail Occlusion", Range( 0 , 1)) = 0
		[StyledRemapSlider]_ThirdMultiRemap("Detail Multi Mask", Vector) = (0,0,0,0)
		_ThirdSmoothnessValue("Detail Smoothness", Range( 0 , 1)) = 0
		[Space(10)]_ThirdBlendIntensityValue("Detail Blend Intensity", Range( 0 , 1)) = 1
		_ThirdBlendAlbedoValue("Detail Blend Albedos", Range( 0 , 1)) = 0
		_ThirdBlendNormalValue("Detail Blend Normals", Range( 0 , 1)) = 0
		_ThirdBlendShaderValue("Detail Blend Shaders", Range( 0 , 1)) = 0
		[Space(10)][StyledTextureSingleLine]_ThirdMaskTex("Detail Mask", 2D) = "white" {}
		[Enum(Main UV,0,Extra UV,1,Planar,2,Triplanar,3)][Space(10)]_ThirdMaskSampleMode("Mask Sampling", Float) = 0
		[Enum(Tilling And Offset,0,Scale And Offset,1)]_ThirdMaskCoordMode("Mask UV Mode", Float) = 0
		[StyledVector(9)]_ThirdMaskCoordValue("Mask UV Value", Vector) = (1,1,0,0)
		_ThirdMaskValue("Detail TexG Mask", Range( 0 , 1)) = 1
		[StyledRemapSlider]_ThirdMaskRemap("Detail TexG Mask", Vector) = (0,1,0,0)
		_ThirdProjValue("Detail ProjY Mask", Range( 0 , 1)) = 0
		[StyledRemapSlider]_ThirdProjRemap("Detail ProjY Mask", Vector) = (0,1,0,0)
		_ThirdMeshValue("Detail Mesh Mask", Range( 0 , 1)) = 0
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3)]_ThirdMeshMode("Detail Mesh Mask", Float) = 1
		[StyledRemapSlider]_ThirdMeshRemap("Detail Mesh Mask", Vector) = (0,1,0,0)
		[StyledRemapSlider]_ThirdBlendRemap("Detail Blend Mask", Vector) = (0,1,0,0)
		[HideInInspector]_third_coord_value("_third_coord_value", Vector) = (1,1,0,0)
		[HideInInspector]_third_vert_mode("_third_vert_mode", Vector) = (0,0,0,0)
		[HideInInspector]_third_mask_coord_value("_third_mask_coord_value", Vector) = (1,1,0,0)
		[StyledSpace(10)]_DetailEnd("[ Detail End ]", Float) = 1
		[StyledCategory(Terrain Settings, true, 0, 10)]_TerrainCategory("[ Terrain Category ]", Float) = 1
		[StyledMessage(Info, The Form Mask feature requires elements to work. Use Form Surface or Form Height elements to send the terrain height data to the shaders., 0, 10)]_TerrainFormInfo("# Terrain Form Info", Float) = 0
		_TerrainIntensityValue("Terrain Intensity", Range( 0 , 1)) = 0
		[HideInInspector]_TerrainSize("Terrain Size", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainPosition("Terrain Position", Vector) = (0,0,0,0)
		[Enum(4 Layers,4,8 Layers,8,12 Layers,12,16 Layers,16)]_TerrainLayersMode("Terrain Layers", Float) = 4
		[Enum(Default,0,Packed,1)]_TerrainTextureMode("Terrain Maps", Float) = 0
		_TerrainColor("Terrain Color", Color) = (1,1,1,1)
		_TerrainNormalValue("Terrain Normal", Range( -8 , 8)) = 1
		_TerrainMetallicValue("Terrain Metallic", Range( 0 , 1)) = 1
		_TerrainOcclusionValue("Terrain Occlusion", Range( 0 , 1)) = 1
		_TerrainSmoothnessValue("Terrain Smoothness", Range( 0 , 1)) = 1
		_TerrainHeightBlendValue("Terrain Height Blend", Range( 0 , 1)) = 1
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)][Space(10)]_TerrainSampleMode1("Terrain 01 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode2("Terrain 02 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode3("Terrain 03 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode4("Terrain 04 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode5("Terrain 05 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode6("Terrain 06 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode7("Terrain 07 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode8("Terrain 08 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode9("Terrain 09 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode10("Terrain 10 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode11("Terrain 11 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode12("Terrain 12 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode13("Terrain 13 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode14("Terrain 14 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode15("Terrain 15 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode16("Terrain 16 Sampling", Float) = 0
		[HideInInspector]_TerrainHolesTex("Terrain Holes", 2D) = "white" {}
		[HideInInspector]_TerrainControlTex1("Terrain Control 01", 2D) = "black" {}
		[HideInInspector]_TerrainControlTex2("Terrain Control 02", 2D) = "black" {}
		[HideInInspector]_TerrainControlTex3("Terrain Control 03", 2D) = "black" {}
		[HideInInspector]_TerrainControlTex4("Terrain Control 04", 2D) = "black" {}
		[HideInInspector]_TerrainColor1("Terrain Color 01", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor2("Terrain Color 02", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor3("Terrain Color 03", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor4("Terrain Color 04", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor5("Terrain Color 05", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor6("Terrain Color 06", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor7("Terrain Color 07", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor8("Terrain Color 08", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor9("Terrain Color 09", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor10("Terrain Color 10", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor11("Terrain Color 11", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor12("Terrain Color 12", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor13("Terrain Color 13", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor14("Terrain Color 14", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor15("Terrain Color 15", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor16("Terrain Color 16", Color) = (1,1,1,1)
		[HideInInspector]_TerrainAlbedoTex1("Terrain Albedo 01", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex2("Terrain Albedo 02", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex3("Terrain Albedo 03", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex4("Terrain Albedo 04", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex5("Terrain Albedo 05", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex6("Terrain Albedo 06", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex7("Terrain Albedo 07", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex8("Terrain Albedo 08", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex9("Terrain Albedo 09", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex10("Terrain Albedo 10", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex11("Terrain Albedo 11", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex12("Terrain Albedo 12", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex13("Terrain Albedo 13", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex14("Terrain Albedo 14", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex15("Terrain Albedo 15", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex16("Terrain Albedo 16", 2D) = "white" {}
		[HideInInspector]_TerrainNormalTex1("Terrain Normal 01", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex2("Terrain Normal 02", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex3("Terrain Normal 03", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex4("Terrain Normal 04", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex5("Terrain Normal 05", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex6("Terrain Normal 06", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex7("Terrain Normal 07", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex8("Terrain Normal 08", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex13("Terrain Normal 13", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex9("Terrain Normal 09", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex10("Terrain Normal 10", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex11("Terrain Normal 11", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex12("Terrain Normal 12", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex14("Terrain Normal 14", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex15("Terrain Normal 15", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex16("Terrain Normal 16", 2D) = "gray" {}
		[HideInInspector]_TerrainShaderTex1("Terrain Shader 01", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex2("Terrain Shader 02", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex3("Terrain Shader 03", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex4("Terrain Shader 04", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex5("Terrain Shader 05", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex6("Terrain Shader 06", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex7("Terrain Shader 07", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex8("Terrain Shader 08", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex9("Terrain Shader 09", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex10("Terrain Shader 10", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex11("Terrain Shader 11", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex12("Terrain Shader 12", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex13("Terrain Shader 13", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex14("Terrain Shader 14", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex15("Terrain Shader 15", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex16("Terrain Shader 16", 2D) = "white" {}
		[HideInInspector]_TerrainShaderMin1("Shader Min 01", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax1("Shader Max 01", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin2("Shader Min 02", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax2("Shader Max 02", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin3("Shader Min 03", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax3("Shader Max 03", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin4("Shader Min 04", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax4("Shader Max 04", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin5("Shader Min 05", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax5("Shader Max 05", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin6("Shader Min 06", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax6("Shader Max 06", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin7("Shader Min 07", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax7("Shader Max 07", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin8("Shader Min 08", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax8("Shader Max 08", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin9("Shader Min 09", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax9("Shader Max 09", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin10("Shader Min 10", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax10("Shader Max 10", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin11("Shader Min 11", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax11("Shader Max 11", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin12("Shader Min 12", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax12("Shader Max 12", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin13("Shader Min 13", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax13("Shader Max 13", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin14("Shader Min 14", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax14("Shader Max 14", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin15("Shader Min 15", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax15("Shader Max 15", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin16("Shader Min 16", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax16("Shader Max 16", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams1("Terrain Params 01", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams2("Terrain Params 02", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams3("Terrain Params 03", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams4("Terrain Params 04", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams5("Terrain Params 05", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams6("Terrain Params 06", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams7("Terrain Params 07", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams8("Terrain Params 08", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams9("Terrain Params 09", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams10("Terrain Params 10", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams11("Terrain Params 11", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams12("Terrain Params 12", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams13("Terrain Params 13", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams14("Terrain Params 14", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams15("Terrain Params 15", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams16("Terrain Params 16", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainCoord1("Terrain Coords 01", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord2("Terrain Coords 02", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord3("Terrain Coords 03", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord5("Terrain Coords 05", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord4("Terrain Coords 04", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord6("Terrain Coords 06", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord7("Terrain Coords 07", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord8("Terrain Coords 08", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord9("Terrain Coords 09", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord10("Terrain Coords 10", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord11("Terrain Coords 11", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord12("Terrain Coords 12", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord13("Terrain Coords 13", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord14("Terrain Coords 14", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord15("Terrain Coords 15", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord16("Terrain Coords 16", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainSpecular1("Terrain Specular 01", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular2("Terrain Specular 02", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular3("Terrain Specular 03", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular4("Terrain Specular 04", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular5("Terrain Specular 05", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular6("Terrain Specular 06", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular7("Terrain Specular 07", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular8("Terrain Specular 08", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular9("Terrain Specular 09", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular10("Terrain Specular 10", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular11("Terrain Specular 11", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular12("Terrain Specular 12", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular13("Terrain Specular 13", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular14("Terrain Specular 14", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular15("Terrain Specular 15", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular16("Terrain Specular 16", Color) = (0,0,0,0)
		[Space(10)][StyledTextureSingleLine]_TerrainMaskTex("Terrain Mask", 2D) = "white" {}
		[Enum(Main UV,0,Extra UV,1,Planar,2,Triplanar,3)][Space(10)]_TerrainMaskSampleMode("Mask Sampling", Float) = 0
		[Enum(Tilling And Offset,0,Scale And Offset,1)]_TerrainMaskCoordMode("Mask UV Mode", Float) = 0
		[StyledVector(9)]_TerrainMaskCoordValue("Mask UV Value", Vector) = (1,1,0,0)
		_TerrainMaskValue("Terrain TexR Mask", Range( 0 , 1)) = 0
		[StyledRemapSlider]_TerrainMaskRemap("Terrain TexR Mask", Vector) = (0,1,0,0)
		_TerrainProjValue("Terrain ProjY Mask", Range( 0 , 1)) = 0
		[StyledRemapSlider]_TerrainProjRemap("Terrain ProjY Mask", Vector) = (0,1,0,0)
		_TerrainLandValue("Terrain Land Mask", Range( 0 , 1)) = 0
		[Enum(Additive,0,Multiply And Additive,1)]_TerrainLandMode("Terrain Land Mode", Float) = 1
		_TerrainLandOffsetValue("Terrain Land Offset", Range( 0 , 16)) = 1
		[StyledRemapSlider]_TerrainBlendRemap("Terrain Blend Mask", Vector) = (0,1,0,0)
		[Space(10)][StyledToggle]_ThirdElementMode("Use Coat Globals / Elements", Float) = 0
		[HideInInspector]_terrain_mask_coord_value("_terrain_mask_coord_value", Vector) = (1,1,0,0)
		[StyledSpace(10)]_TerrainEnd("[ Terrain End ]", Float) = 1
		[StyledCategory(Occlusion Settings, true, 0, 10)]_OcclusionCategory("[ Occlusion Category ]", Float) = 1
		_OcclusionIntensityValue("Occlusion Intensity", Range( 0 , 1)) = 0
		[Enum(Off,0,Bake Settings To Impostors,1)]_OcclusionBakeMode("Occlusion Baking", Float) = 1
		[HDR]_OcclusionColorOne("Occlusion ColorA", Color) = (1,1,1,1)
		[HDR]_OcclusionColorTwo("Occlusion ColorB", Color) = (0.25,0.25,0.25,1)
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3)][Space(10)]_OcclusionMeshMode("Occlusion Mesh Mask", Float) = 1
		[StyledRemapSlider]_OcclusionMeshRemap("Occlusion Mesh Mask", Vector) = (0,1,0,0)
		[StyledSpace(10)]_OcclusionEnd("[ Occlusion End ]", Float) = 1
		[HideInInspector]_occlusion_vert_mode("_occlusion_vert_mode", Vector) = (0,0,0,0)
		[StyledCategory(Gradient Settings, true, 0, 10)]_GradientCategory("[ Gradient Category ]", Float) = 1
		_GradientIntensityValue("Gradient Intensity", Range( 0 , 1)) = 0
		[Enum(Off,0,Bake Settings To Impostors,1)]_GradientBakeMode("Gradient Baking", Float) = 1
		[HDR]_GradientColorOne("Gradient ColorA", Color) = (1,0.6135602,0,1)
		[HDR]_GradientColorTwo("Gradient ColorB", Color) = (0.754717,0.0389044,0.03203986,1)
		[Space(10)]_GradientMultiValue("Gradient Multi Mask", Range( 0 , 1)) = 1
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3)]_GradientMeshMode("Gradient Mesh Mask", Float) = 3
		[StyledRemapSlider]_GradientMeshRemap("Gradient Mesh Mask", Vector) = (0,1,0,0)
		[StyledSpace(10)]_GradientEnd("[ Gradient End ]", Float) = 1
		[HideInInspector]_gradient_vert_mode("_gradient_vert_mode", Vector) = (0,0,0,0)
		[StyledCategory(Variation Settings, true, 0, 10)]_VariationCategory("[ Variation Category ]", Float) = 1
		_VariationIntensityValue("Variation Intensity", Range( 0 , 1)) = 0
		[HDR]_VariationColorOne("Variation ColorA", Color) = (0.4573758,0.6226415,0.2144001,1)
		[HDR]_VariationColorTwo("Variation ColorB", Color) = (0.7450981,0.5238863,0.1098039,1)
		[Space(10)]_VariationMultiValue("Variation Multi Mask", Range( 0 , 1)) = 1
		[StyledRemapSlider()]_VariationNoiseRemap("Variation Noise Mask", Vector) = (0,1,0,0)
		_VariationNoiseTillingValue("Variation Noise Tilling", Range( 0 , 100)) = 10
		_VariationNoisePivotValue("Variation Noise Pivots", Range( 0 , 1)) = 0
		[StyledSpace(10)]_VariationEnd("[ Variation End ]", Float) = 1
		[StyledCategory(Tinting Settings, true, 0, 10)]_TintingCategory("[ Tinting Category ]", Float) = 1
		_TintingIntensityValue("Tinting Intensity", Range( 0 , 1)) = 0
		[Enum(Keep Dynamic On Impostors,0,Bake Settings To Impostors,1)]_TintingBakeMode("Tinting Baking", Float) = 0
		_TintingGrayValue("Tinting Gray", Range( 0 , 1)) = 1
		[HDR][Gamma]_TintingColor("Tinting Color", Color) = (1,1,1,1)
		[StyledSpace(10)]_TintingSpace("[ Tinting Space ]", Float) = 1
		_TintingMultiValue("Tinting Multi Mask", Range( 0 , 1)) = 1
		_TintingLumaValue("Tinting Luma Mask", Range( 0 , 1)) = 1
		[StyledRemapSlider]_TintingLumaRemap("Tinting Luma Mask", Vector) = (0,1,0,0)
		_TintingMeshValue("Tinting Mesh Mask", Range( 0 , 1)) = 0
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3)]_TintingMeshMode("Tinting Mesh Mask", Float) = 3
		[StyledRemapSlider]_TintingMeshRemap("Tinting Mesh Mask", Vector) = (0,1,0,0)
		[StyledRemapSlider]_TintingBlendRemap("Tinting Blend Mask", Vector) = (0.1,0.2,0,0)
		[Space(10)][StyledToggle]_TintingElementMode("Use Paint Globals / Elements", Float) = 1
		[StyledSpace(10)]_TintingEnd("[ Tinting End]", Float) = 1
		[HideInInspector]_tinting_vert_mode("_tinting_vert_mode", Vector) = (0,0,0,0)
		[StyledCategory(Dryness Settings, true, 0, 10)]_DrynessCategory("[ Dryness Category ]", Float) = 1
		_DrynessIntensityValue("Dryness Intensity", Range( 0 , 1)) = 0
		[Enum(Keep Dynamic On Impostors,0,Bake Settings To Impostors,1)]_DrynessBakeMode("Dryness Baking", Float) = 0
		_DrynessGrayValue("Dryness Gray", Range( 0 , 1)) = 1
		_DrynessShiftValue("Dryness Shift", Range( 0 , 1)) = 0
		[HDR][Gamma]_DrynessColor("Dryness Color", Color) = (1,0.7083712,0.495283,1)
		_DrynessSubsurfaceValue("Dryness Subsurface", Range( 0 , 1)) = 0.5
		_DrynessSmoothnessValue("Dryness Smoothness", Range( 0 , 1)) = 0.5
		[StyledSpace(10)]_DrynessSpace("[ Dryness Space ]", Float) = 1
		_DrynessMultiValue("Dryness Multi Mask", Range( 0 , 1)) = 1
		_DrynessLumaValue("Dryness Luma Mask", Range( 0 , 1)) = 1
		[StyledRemapSlider]_DrynessLumaRemap("Dryness Luma Mask", Vector) = (0,1,0,0)
		_DrynessMeshValue("Dryness Mesh Mask", Range( 0 , 1)) = 0
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3)]_DrynessMeshMode("Dryness Mesh Mask", Float) = 3
		[StyledRemapSlider]_DrynessMeshRemap("Dryness Mesh Mask", Vector) = (0,1,0,0)
		[StyledRemapSlider]_DrynessBlendRemap("Dryness Blend Mask", Vector) = (0.1,0.2,0,0)
		[Space(10)][StyledToggle]_DrynessElementMode("Use Atmo Globals / Elements", Float) = 1
		[StyledSpace(10)]_DrynessEnd("[ Dryness End ]", Float) = 1
		[HideInInspector]_dryness_vert_mode("_dryness_vert_mode", Vector) = (0,0,0,0)
		[StyledCategory(Overlay Settings, true, 0, 10)]_OverlayCategory("[ Overlay Category ]", Float) = 1
		_OverlayIntensityValue("Overlay Intensity", Range( 0 , 1)) = 0
		[Enum(Keep Dynamic On Impostors,0,Bake Settings To Impostors,1)]_OverlayBakeMode("Overlay Baking", Float) = 0
		[Enum(Off,0,On,1)]_OverlayTextureMode("Overlay Maps", Float) = 0
		[Space(10)][StyledTextureSingleLine]_OverlayAlbedoTex("Overlay Albedo", 2D) = "white" {}
		[StyledTextureSingleLine]_OverlayNormalTex("Overlay Normal", 2D) = "bump" {}
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochastic Triplanar,3)][Space(10)]_OverlaySampleMode("Overlay Sampling", Float) = 0
		[Enum(Tilling And Offset,0,Scale And Offset,1)]_OverlayCoordMode("Overlay UV Mode", Float) = 0
		[StyledVector(9)]_OverlayCoordValue("Overlay UV Value", Vector) = (1,1,0,0)
		[HDR]_OverlayColor("Overlay Color", Color) = (0.2815503,0.4009458,0.5377358,1)
		_OverlayNormalValue("Overlay Normal", Range( -8 , 8)) = 1
		_OverlaySubsurfaceValue("Overlay Subsurface", Range( 0 , 1)) = 0.5
		_OverlaySmoothnessValue("Overlay Smoothness", Range( 0 , 1)) = 0.5
		[Space(10)][StyledTextureSingleLine]_OverlayGlitterTexRT("Overlay Glitter RT", 2D) = "black" {}
		[Space(10)]_OverlayGlitterIntensityValue("Overlay Glitter Intensity", Range( 0 , 1)) = 0
		[HDR]_OverlayGlitterColor("Overlay Glitter Color", Color) = (0.7215686,1.913725,2.996078,1)
		_OverlayGlitterTillingValue("Overlay Glitter Tilling", Range( 0 , 8)) = 4
		_OverlayGlitterDistValue("Overlay Glitter Limit", Range( 0 , 200)) = 100
		[StyledSpace(10)]_OverlaySpace("[ Overlay Space ]", Float) = 1
		[StyledTextureSingleLine]_OverlayMaskTex("Overlay Mask", 2D) = "white" {}
		[Enum(Main UV,0,Extra UV,1)][Space(10)]_OverlayMaskSampleMode("Mask Sampling", Float) = 0
		[Enum(Tilling And Offset,0,Scale And Offset,1)]_OverlayMaskCoordMode("Mask UV Mode", Float) = 0
		[StyledVector(9)]_OverlayMaskCoordValue("Mask UV Value", Vector) = (1,1,0,0)
		_OverlayMaskValue("Overlay TexB Mask", Range( 0 , 1)) = 0
		[StyledRemapSlider]_OverlayMaskRemap("Overlay TexB Mask", Vector) = (0,1,0,0)
		_OverlayLumaValue("Overlay Luma Mask", Range( 0 , 1)) = 1
		[StyledRemapSlider]_OverlayLumaRemap("Overlay Luma Mask", Vector) = (0,1,0,0)
		_OverlayProjValue("Overlay ProjY Mask", Range( 0 , 1)) = 0.5
		[StyledRemapSlider]_OverlayProjRemap("Overlay ProjY Mask", Vector) = (0,1,0,0)
		_OverlayMeshValue("Overlay Mesh Mask", Range( 0 , 1)) = 0
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3)]_OverlayMeshMode("Overlay Mesh Mask", Float) = 1
		[StyledRemapSlider]_OverlayMeshRemap("Overlay Mesh Mask", Vector) = (0,1,0,0)
		[StyledRemapSlider]_OverlayBlendRemap1("Overlay Blend Mask", Vector) = (0.1,0.2,0,0)
		[Space(10)][StyledToggle]_OverlayElementMode("Use Atmo Globals / Elements", Float) = 1
		[HideInInspector]_overlay_vert_mode("_overlay_vert_mode", Vector) = (0,0,0,0)
		[HideInInspector]_overlay_coord_value("_overlay_coord_value", Vector) = (1,1,0,0)
		[HideInInspector]_overlay_mask_coord_value("_overlay_mask_coord_value", Vector) = (1,1,0,0)
		[StyledSpace(10)]_OverlayEnd("[ Overlay End ]", Float) = 1
		[StyledCategory(Wetness Settings, true, 0, 10)]_WetnessCategory("[ Wetness Category ]", Float) = 1
		_WetnessIntensityValue("Wetness Intensity", Range( 0 , 1)) = 0
		[Enum(Keep Dynamic On Impostors,0,Bake Settings To Impostors,1)]_WetnessBakeMode("Wetness Baking", Float) = 0
		_WetnessContrastValue("Wetness Contrast", Range( 0 , 1)) = 0.2
		_WetnessSmoothnessValue("Wetness Smoothness", Range( 0 , 1)) = 0.8
		[Space(10)]_WetnessMeshValue("Wetness Mesh Mask", Range( 0 , 1)) = 0
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3)]_WetnessMeshMode("Wetness Mesh Mask", Float) = 0
		[StyledRemapSlider]_WetnessMeshRemap("Wetness Mesh Mask", Vector) = (0,1,0,0)
		[Space(10)]_WetnessWaterIntensityValue("Wetness Water Intensity", Range( 0 , 1)) = 0
		[HDR]_WetnessWaterColor("Wetness Water Color", Color) = (0.5420078,0.7924528,0.6068289,1)
		_WetnessWaterBaseValue("Wetness Water Base Mask", Range( 0 , 1)) = 1
		_WetnessWaterMeshValue("Wetness Water Mesh Mask", Range( 0 , 1)) = 0
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3)]_WetnessWaterMeshMode("Wetness Water Mesh Mask", Float) = 1
		[StyledRemapSlider]_WetnessWaterMeshRemap("Wetness Water Mesh Mask", Vector) = (0,1,0,0)
		[StyledRemapSlider]_WetnessWaterBlendRemap("Wetness Water Blend Mask", Vector) = (0.1,0.2,0,0)
		[Space(10)][StyledTextureSingleLine]_WetnessDropsTexRT("Wetness Drops RT", 2D) = "white" {}
		[Space(10)]_WetnessDropsIntensityValue("Wetness Drops Intensity", Range( 0 , 1)) = 1
		_WetnessDropsNormalValue("Wetness Drops Normal", Range( -8 , 8)) = 1
		_WetnessDropsTillingValue("Wetness Drops Tilling", Range( 0 , 8)) = 0.25
		_WetnessDropsDistValue("Wetness Drops Limit", Range( 0 , 200)) = 50
		_WetnessDropsMeshValue("Wetness Drops Mesh Mask", Range( 0 , 1)) = 0
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3)]_WetnessDropsMeshMode("Wetness Drops Mesh Mask", Float) = 2
		[StyledRemapSlider]_WetnessDropsMeshRemap("Wetness Drops Mesh Mask", Vector) = (0,1,0,0)
		[Space(10)][StyledToggle]_WetnessElementMode("Use Atmo Globals / Elements", Float) = 1
		[HideInInspector]_wetness_water_vert_mode("_wetness_water_vert_mode", Vector) = (0,0,0,0)
		[HideInInspector]_wetness_vert_mode("_wetness_vert_mode", Vector) = (0,0,0,0)
		[HideInInspector]_wetness_drops_vert_mode("_wetness_drops_vert_mode", Vector) = (0,0,0,0)
		[StyledSpace(10)]_WetnessEnd("[ Wetness End ]", Float) = 1
		[StyledCategory(Cutout Settings, true, 0, 10)]_CutoutCategory("[ Cutout Category ]", Float) = 1
		_CutoutIntensityValue("Cutout Intensity", Range( 0 , 1)) = 0
		[Enum(Keep Dynamic On Impostors,0,Bake Settings To Impostors,1)]_CutoutBakeMode("Cutout Baking", Float) = 0
		[Space(10)]_CutoutMultiValue("Cutout Multi Mask", Range( 0 , 1)) = 1
		_CutoutAlphaValue("Cutout Alpha Mask", Range( 0 , 1)) = 0
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3)]_CutoutMeshMode("Cutout Mesh Mask", Float) = 0
		_CutoutMeshValue("Cutout Mesh Mask", Range( 0 , 1)) = 0
		[StyledRemapSlider]_CutoutMeshRemap("Cutout Mesh Mask", Vector) = (0,1,0,0)
		_CutoutNoiseValue("Cutout Noise Mask", Range( 0 , 1)) = 1
		_CutoutNoiseTillingValue("Cutout Noise Tilling", Range( 0 , 100)) = 10
		[Space(10)][StyledToggle]_CutoutElementMode("Use Fade Globals / Elements", Float) = 1
		[HideInInspector]_cutout_vert_mode("_cutout_vert_mode", Vector) = (0,0,0,0)
		[StyledSpace(10)]_CutoutEnd("[ Cutout End ]", Float) = 1
		[StyledCategory(Dither Settings, true, 0, 10)]_DitherCategory("[ Dither Category ]", Float) = 1
		_DitherConstantValue("Dither Constant", Range( 0 , 1)) = 0
		_DitherDistanceValue("Dither Distance", Range( 0 , 1)) = 0
		_DitherDistanceMinValue("Dither Distance Start", Range( 0 , 1000)) = 0
		_DitherDistanceMaxValue("Dither Distance Limit", Range( 0 , 1000)) = 0
		_DitherProximityValue("Dither Proximity", Range( 0 , 1)) = 0
		_DitherProximityMinValue("Dither Proximity Start", Range( 0 , 40)) = 0
		_DitherProximityMaxValue("Dither Proximity Limit", Range( 0 , 40)) = 1
		_DitherGlancingValue("Dither Glancing", Range( 0 , 1)) = 0
		_DitherGlancingAngleValue("Dither Glanging Angle", Range( 0 , 8)) = 1
		[Space(10)]_DitherMultiValue("Dither Multi Mask", Range( 0 , 1)) = 1
		_DitherNoiseTillingValue("Dither Noise Tilling", Range( 0 , 100)) = 50
		[StyledSpace(10)]_DitherEnd("[ Dither End ]", Float) = 1
		[StyledCategory(Emissive Settings, true, 0, 10)]_EmissiveCategory("[ Emissive Category ]", Float) = 1
		_EmissiveIntensityValue("Emissive Intensity", Range( 0 , 1)) = 0
		[Enum(None,0,Any,1,Baked,2,Realtime,3)]_EmissiveFlagMode("Emissive GI Mode", Float) = 0
		[Enum(Constant,0,Multiply With Base Albedo,1)]_EmissiveColorMode("Emissive Color", Float) = 0
		[HDR]_EmissiveColor("Emissive Color", Color) = (1,1,1,1)
		[Enum(Nits,0,EV100,1)]_EmissivePowerMode("Emissive Power", Float) = 0
		_EmissivePowerValue("Emissive Power", Float) = 1
		[Space(10)][StyledTextureSingleLine]_EmissiveMaskTex("Emissive Mask", 2D) = "white" {}
		[Enum(Main UV,0,Extra UV,1)][Space(10)]_EmissiveSampleMode("Mask Sampling", Float) = 0
		[Enum(Tilling And Offset,0,Scale And Offset,1)]_EmissiveCoordMode("Mask UV Mode", Float) = 0
		[StyledVector(9)]_EmissiveCoordValue("Mask UV Value", Vector) = (1,1,0,0)
		_EmissiveMaskValue("Emissive TexR Mask", Range( 0 , 1)) = 1
		[StyledRemapSlider]_EmissiveMaskRemap("Emissive TexR Mask", Vector) = (0,1,0,0)
		_EmissiveMeshValue("Emissive Mesh Mask", Range( 0 , 1)) = 0
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3)]_EmissiveMeshMode("Emissive Mesh Mask", Float) = 0
		[StyledRemapSlider]_EmissiveMeshRemap("Emissive Mesh Mask", Vector) = (0,1,0,0)
		[Space(10)][StyledToggle]_EmissiveElementMode("Use Glow Globals / Elements", Float) = 0
		[StyledSpace(10)]_EmissiveEnd("[ Emissive End ]", Float) = 1
		[HideInInspector]_emissive_power_value("_emissive_power_value", Float) = 1
		[HideInInspector]_emissive_vert_mode("_emissive_vert_mode", Vector) = (0,0,0,0)
		[HideInInspector]_emissive_coord_value("_emissive_coord_value", Vector) = (1,1,0,0)
		[StyledCategory(Subsurface Settings, true, 0, 10)]_SubsurfaceCategory("[ Subsurface Category ]", Float) = 1
		[StyledMessage(Info, When using Standard Lit shaders__ the Subsurface feature is an approximation effect designed to work in deferred rendering path., 0, 10)]_SubsurfaceAproxInfo("# Subsurface Aprox Info", Float) = 0
		[DiffusionProfile]_SubsurfaceDiffusion("Subsurface Diffusion", Float) = 0
		[HideInInspector]_SubsurfaceDiffusion_Asset("Subsurface Diffusion", Vector) = (0,0,0,0)
		[StyledSpace(10)]_SubsurfaceSpace("# SubsurfaceSpace", Float) = 0
		_SubsurfaceIntensityValue("Subsurface Intensity", Range( 0 , 1)) = 0
		[HDR]_SubsurfaceColor("Subsurface Color", Color) = (1,1,1,1)
		_SubsurfaceScatteringValue("Subsurface Power", Range( 0 , 16)) = 2
		_SubsurfaceAngleValue("Subsurface Angle", Range( 1 , 16)) = 8
		_SubsurfaceDirectValue("Subsurface Direct", Range( 0 , 1)) = 1
		_SubsurfaceNormalValue("Subsurface Normal", Range( 0 , 1)) = 0
		_SubsurfaceAmbientValue("Subsurface Ambient", Range( 0 , 1)) = 0.2
		_SubsurfaceShadowValue("Subsurface Shadow", Range( 0 , 1)) = 1
		[Space(10)]_SubsurfaceMultiValue("Subsurface Multi Mask", Range( 0 , 1)) = 1
		[Space(10)][StyledToggle]_SubsurfaceElementMode("Use Glow Globals / Elements", Float) = 0
		[StyledSpace(10)]_SubsurfaceEnd("[ Subsurface End ]", Float) = 1
		[StyledCategory(Perspective Settings, true, 0, 10)]_PerspectiveCategory("[ Perspective Category ]", Float) = 1
		_PerspectiveIntensityValue("Perspective Intensity", Range( 0 , 8)) = 0
		_PerspectiveAngleValue("Perspective Angle", Range( 0 , 8)) = 1
		[StyledSpace(10)]_PerspectiveEnd("[ Perspective End ]", Float) = 1
		[StyledCategory(Size Fade Settings, true, 0, 10)]_SizeFadeCategory("[ Size Fade Category ]", Float) = 1
		_SizeFadeIntensityValue("Size Fade Intensity", Range( 0 , 1)) = 0
		[Enum(All Axis,0,Y Axis,1)]_SizeFadeScaleMode("Size Fade Mode", Float) = 0
		_SizeFadeScaleValue("Size Fade Value", Range( 0 , 1)) = 1
		_SizeFadeDistMinValue("Size Fade Start", Range( 0 , 1000)) = 0
		_SizeFadeDistMaxValue("Size Fade Limit", Range( 0 , 1000)) = 0
		[Space(10)][StyledToggle]_SizeFadeElementMode("Use Form Globals / Elements", Float) = 0
		[StyledSpace(10)]_SizeFadeEnd("[ Size Fade End ]", Float) = 1
		[StyledCategory(Blanket Settings, true, 0, 10)]_BlanketCategory("[ Blanket Category ]", Float) = 1
		[StyledMessage(Info, The Conform features require elements to work. Use Form Surface or Form Height and Form Normal elements for conforming and aligning the objects to terrain surfaces. Please note__ the conform effect is only visual and it does not affect the object collision and bounds., 0, 10)]_BlanketInfo("# Blanket Info", Float) = 0
		_BlanketConformValue("Blanket Conform", Range( 0 , 1)) = 0
		[Enum(Freeform Object Position,0,Lock Position With Conform,1)]_BlanketConformOffsetMode("Blanket Conform Mode", Float) = 1
		_BlanketConformOffsetValue("Blanket Conform Offset", Float) = 0
		_BlanketOrientationValue("Blanket Orientation", Range( 0 , 1)) = 0
		[StyledSpace(10)]_BlanketEnd("[ Blanket End ]", Float) = 1
		[StyledCategory(Motion Settings, true, 0, 10)]_MotionWindCategory("[ Motion Wind Category ]", Float) = 1
		[StyledMessage(Info, Use the disabled Wind mode when the wind flow is controlled exclusivly by global elements. , 0, 10)]_MotionWindOffInfo("# Message Off", Float) = 0
		[StyledMessage(Info, The Optimized wind mode uses the precomputed Motion Texture RT which is only calculated once and reused for all materials. , 0, 10)]_MotionWindOptimizedInfo("# Message Optimized", Float) = 0
		[StyledMessage(Info, The Advanced wind mode allows the setting of the wind Noise__ Tilling__ and Speed per motion layer for advanced control. Use the Noise value to randomize the wind direction., 0, 10)]_MotionWindAdvancedInfo("# Message Advanced", Float) = 0
		[NoScaleOffset][StyledTextureSingleLine]_MotionNoiseTex("Motion Texture", 2D) = "white" {}
		[NoScaleOffset][StyledTextureSingleLine]_MotionNoiseTexRT("Motion Texture RT", 2D) = "white" {}
		[Space(10)]_MotionHighlightValue("Motion Waves Intensity", Range( 0 , 1)) = 0
		[HDR]_MotionHighlightColor("Motion Waves Color", Color) = (1,1,1,1)
		[Space(10)]_MotionBaseIntensityValue("Motion LayerA Intensity", Range( 0 , 10)) = 0
		_MotionBasePivotValue("Motion LayerA Pivots", Range( 0 , 1)) = 0.8
		_MotionBasePhaseValue("Motion LayerA Phase", Range( 0 , 1)) = 0
		_MotionBaseNoiseValue("Motion LayerA Noise", Range( 0 , 1)) = 0.5
		_MotionBaseTillingValue("Motion LayerA Tilling", Range( 0 , 100)) = 5
		_MotionBaseSpeedValue("Motion LayerA Speed", Range( 0 , 50)) = 5
		_MotionBaseDelayValue("Motion LayerA Wind Delay", Range( 0 , 1)) = 0
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3,Height,4,Sphere,5)]_MotionBaseMaskMode("Motion LayerA Anim Mask", Float) = 3
		[StyledRemapSlider]_MotionBaseMaskRemap("Motion LayerA Anim Mask", Vector) = (0,1,0,0)
		[Space(10)]_MotionSmallIntensityValue("Motion LayerB Intensity", Range( 0 , 10)) = 0
		_MotionSmallPivotValue("Motion LayerB Pivots", Range( 0 , 1)) = 0.6
		_MotionSmallPhaseValue("Motion LayerB Phase", Range( 0 , 1)) = 0
		_MotionSmallNoiseValue("Motion LayerB Noise", Range( 0 , 1)) = 0.5
		_MotionSmallTillingValue("Motion LayerB Tilling", Range( 0 , 100)) = 5
		_MotionSmallSpeedValue("Motion LayerB Speed", Range( 0 , 50)) = 5
		_MotionSmallDelayValue("Motion LayerB Wind Delay", Range( 0 , 1)) = 0
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3,Height,4,Sphere,5)]_MotionSmallMaskMode("Motion LayerB Anim Mask", Float) = 1
		[StyledRemapSlider]_MotionSmallMaskRemap("Motion LayerB Anim Mask", Vector) = (0,1,0,0)
		[Space(10)]_MotionTinyIntensityValue("Motion Flutter Intensity", Range( 0 , 10)) = 0
		_MotionTinyTillingValue("Motion Flutter Tilling", Range( 0 , 100)) = 20
		_MotionTinySpeedValue("Motion Flutter Speed", Range( 0 , 50)) = 20
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3,Height,4,Sphere,5)]_MotionTinyMaskMode("Motion Flutter Anim Mask", Float) = 2
		[StyledRemapSlider]_MotionTinyMaskRemap("Motion Flutter Anim Mask", Vector) = (0,1,0,0)
		[Space(10)]_MotionIntensityValue("Motion Wind Intensity", Range( 0 , 1)) = 1
		[Enum(Off,0,Optimized,1,Advanced,2)]_MotionWindMode("Motion Wind Mode", Float) = 1
		_MotionTillingValue("Motion Wind Tilling", Range( 0 , 100)) = 5
		_MotionDistValue("Motion Wind Waves Limit", Range( 0 , 1000)) = 100
		_MotionFrontValue("Motion Wind Planar Mask", Range( 0 , 1)) = 0.5
		[Space(10)][StyledToggle]_MotionWindElementMode("Use Wind Elements", Float) = 0
		[StyledSpace(10)]_MotionWindEnd("[ Motion Wind End ]", Float) = 1
		[StyledCategory(Interaction Settings, true, 0, 10)]_MotionInteractionCategory("[ Motion Interaction Category ]", Float) = 1
		_MotionPushIntensityValue("Interaction Intensity", Range( 0 , 8)) = 0
		_MotionPushPivotValue("Interaction Pivots", Range( 0 , 1)) = 1
		_MotionPushPhaseValue("Interaction Phase", Range( 0 , 1)) = 0
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3,Height,4,Sphere,5)]_MotionPushMaskMode("Interaction Anim Mask", Float) = 3
		[StyledRemapSlider]_MotionPushMaskRemap("Interaction Anim Mask", Vector) = (0,1,0,0)
		[Space(10)][StyledToggle]_MotionPushElementMode("Use Push Elements", Float) = 1
		[HideInInspector]_motion_base_mask_mode("_motion_base_mask_mode", Float) = 0
		[HideInInspector]_motion_base_vert_mode("_motion_base_vert_mode", Vector) = (0,0,0,0)
		[HideInInspector]_motion_base_proc_mode("_motion_base_proc_mode", Vector) = (0,0,0,0)
		[HideInInspector]_motion_small_mask_mode("_motion_small_mask_mode", Float) = 0
		[HideInInspector]_motion_small_vert_mode("_motion_small_vert_mode", Vector) = (0,0,0,0)
		[HideInInspector]_motion_small_proc_mode("_motion_small_proc_mode", Vector) = (0,0,0,0)
		[HideInInspector]_motion_tiny_mask_mode("_motion_tiny_mask_mode", Float) = 0
		[HideInInspector]_motion_tiny_vert_mode("_motion_tiny_vert_mode", Vector) = (0,0,0,0)
		[HideInInspector]_motion_tiny_proc_mode("_motion_tiny_proc_mode", Vector) = (0,0,0,0)
		[HideInInspector]_motion_push_mask_mode("_motion_push_mask_mode", Float) = 0
		[HideInInspector]_motion_push_vert_mode("_motion_push_vert_mode", Vector) = (0,0,0,0)
		[HideInInspector]_motion_push_proc_mode("_motion_push_proc_mode", Vector) = (0,0,0,0)
		[HideInInspector]_global_push_layer_value("_global_push_layer_value", Float) = 0
		[HideInInspector]_global_wind_layer_value("_global_wind_layer_value", Float) = 0
		[StyledSpace(10)]_MotionInteractionEnd("[ Motion Interaction End ]", Float) = 1
		[StyledCategory(Normal Settings, true, 0, 10)]_NormalCategory("[ Normal Category ]", Float) = 1
		[StyledMessage(Info, The Normal Blanket feature requires elements to work. Use Form Surface or Form Normal elements to send global normals to the shaders., 0, 10)]_NormalBlanketInfo("# Normal Element Info", Float) = 0
		_NormalFlattenValue("Normal Flattening", Range( 0 , 1)) = 0
		_NormalSphereValue("Normal Spherical", Range( 0 , 1)) = 0
		[StyledVector(18)]_NormalSphereOffsetValue("Normal Spherical Offset", Vector) = (0,0,0,0)
		_NormalComputeValue("Normal Compute", Range( 0 , 1)) = 0
		_NormalBlanketValue("Normal Blanket", Range( 0 , 1)) = 0
		[StyledSpace(10)]_NormalSpace("[ Normal Space ]", Float) = 1
		_NormalProjValue("Normal ProjY Mask", Range( 0 , 1)) = 0
		[StyledRemapSlider]_NormalProjRemap("Normal ProjY Mask", Vector) = (0,1,0,0)
		_NormalMeshValue("Normal Mesh Mask", Range( 0 , 1)) = 0
		[Enum(Vertex R,0,Vertex G,1,Vertex B,2,Vertex A,3)]_NormalMeshMode("Normal Mesh Mask", Float) = 2
		[StyledRemapSlider]_NormalMeshRemap("Normal Mesh Mask", Vector) = (0,1,0,0)
		_NormalLandValue("Normal Land Mask", Range( 0 , 1)) = 0
		[Enum(Additive,0,Multiply And Additive,1)]_NormalLandMode("Normal Land Mode", Float) = 1
		_NormalLandOffsetValue("Normal Land Offset", Range( 0 , 16)) = 1
		[HideInInspector]_normal_vert_mode("_normal_vert_mode", Vector) = (0,0,0,0)
		[StyledSpace(10)]_NormalEnd("[ Normal End ]", Float) = 1
		[HideInInspector]_render_cull("_render_cull", Float) = 0
		[HideInInspector]_render_src("_render_src", Float) = 5
		[HideInInspector]_render_dst("_render_dst", Float) = 10
		[HideInInspector]_render_zw("_render_zw", Float) = 1
		[HideInInspector]_render_coverage("_render_coverage", Float) = 0
		[HideInInspector]_IsBlanketShader("_IsBlanketShader", Float) = 1
		[HideInInspector]_IsSimpleShader("_IsSimpleShader", Float) = 1

		//_TransmissionShadow( "Transmission Shadow", Range( 0, 1 ) ) = 0.5
		//_TransStrength( "Trans Strength", Range( 0, 50 ) ) = 1
		//_TransNormal( "Trans Normal Distortion", Range( 0, 1 ) ) = 0.5
		//_TransScattering( "Trans Scattering", Range( 1, 50 ) ) = 2
		//_TransDirect( "Trans Direct", Range( 0, 1 ) ) = 0.9
		//_TransAmbient( "Trans Ambient", Range( 0, 1 ) ) = 0.1
		//_TransShadow( "Trans Shadow", Range( 0, 1 ) ) = 0.5
		//_TessPhongStrength( "Tess Phong Strength", Range( 0, 1 ) ) = 0.5
		//_TessValue( "Tess Max Tessellation", Range( 1, 32 ) ) = 16
		//_TessMin( "Tess Min Distance", Float ) = 10
		//_TessMax( "Tess Max Distance", Float ) = 25
		//_TessEdgeLength ( "Tess Edge length", Range( 2, 50 ) ) = 16
		//_TessMaxDisp( "Tess Max Displacement", Float ) = 25
		//[ToggleOff] _SpecularHighlights("Specular Highlights", Float) = 1.0
		//[ToggleOff] _GlossyReflections("Reflections", Float) = 1.0
	}

	SubShader
	{
		
		Tags { "RenderType"="Opaque" "Queue"="Geometry" "DisableBatching"="False" }
	LOD 0

		Cull Off
		AlphaToMask [_render_coverage]
		ZWrite [_render_zw]
		ZTest LEqual
		ColorMask RGBA
		
		Blend [_render_src] [_render_dst]
		

		CGINCLUDE
		#pragma target 4.5

		float4 FixedTess( float tessValue )
		{
			return tessValue;
		}

		float CalcDistanceTessFactor (float4 vertex, float minDist, float maxDist, float tess, float4x4 o2w, float3 cameraPos )
		{
			float3 wpos = mul(o2w,vertex).xyz;
			float dist = distance (wpos, cameraPos);
			float f = clamp(1.0 - (dist - minDist) / (maxDist - minDist), 0.01, 1.0) * tess;
			return f;
		}

		float4 CalcTriEdgeTessFactors (float3 triVertexFactors)
		{
			float4 tess;
			tess.x = 0.5 * (triVertexFactors.y + triVertexFactors.z);
			tess.y = 0.5 * (triVertexFactors.x + triVertexFactors.z);
			tess.z = 0.5 * (triVertexFactors.x + triVertexFactors.y);
			tess.w = (triVertexFactors.x + triVertexFactors.y + triVertexFactors.z) / 3.0f;
			return tess;
		}

		float CalcEdgeTessFactor (float3 wpos0, float3 wpos1, float edgeLen, float3 cameraPos, float4 scParams )
		{
			float dist = distance (0.5 * (wpos0+wpos1), cameraPos);
			float len = distance(wpos0, wpos1);
			float f = max(len * scParams.y / (edgeLen * dist), 1.0);
			return f;
		}

		float DistanceFromPlane (float3 pos, float4 plane)
		{
			float d = dot (float4(pos,1.0f), plane);
			return d;
		}

		bool WorldViewFrustumCull (float3 wpos0, float3 wpos1, float3 wpos2, float cullEps, float4 planes[6] )
		{
			float4 planeTest;
			planeTest.x = (( DistanceFromPlane(wpos0, planes[0]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos1, planes[0]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos2, planes[0]) > -cullEps) ? 1.0f : 0.0f );
			planeTest.y = (( DistanceFromPlane(wpos0, planes[1]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos1, planes[1]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos2, planes[1]) > -cullEps) ? 1.0f : 0.0f );
			planeTest.z = (( DistanceFromPlane(wpos0, planes[2]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos1, planes[2]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos2, planes[2]) > -cullEps) ? 1.0f : 0.0f );
			planeTest.w = (( DistanceFromPlane(wpos0, planes[3]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos1, planes[3]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos2, planes[3]) > -cullEps) ? 1.0f : 0.0f );
			return !all (planeTest);
		}

		float4 DistanceBasedTess( float4 v0, float4 v1, float4 v2, float tess, float minDist, float maxDist, float4x4 o2w, float3 cameraPos )
		{
			float3 f;
			f.x = CalcDistanceTessFactor (v0,minDist,maxDist,tess,o2w,cameraPos);
			f.y = CalcDistanceTessFactor (v1,minDist,maxDist,tess,o2w,cameraPos);
			f.z = CalcDistanceTessFactor (v2,minDist,maxDist,tess,o2w,cameraPos);

			return CalcTriEdgeTessFactors (f);
		}

		float4 EdgeLengthBasedTess( float4 v0, float4 v1, float4 v2, float edgeLength, float4x4 o2w, float3 cameraPos, float4 scParams )
		{
			float3 pos0 = mul(o2w,v0).xyz;
			float3 pos1 = mul(o2w,v1).xyz;
			float3 pos2 = mul(o2w,v2).xyz;
			float4 tess;
			tess.x = CalcEdgeTessFactor (pos1, pos2, edgeLength, cameraPos, scParams);
			tess.y = CalcEdgeTessFactor (pos2, pos0, edgeLength, cameraPos, scParams);
			tess.z = CalcEdgeTessFactor (pos0, pos1, edgeLength, cameraPos, scParams);
			tess.w = (tess.x + tess.y + tess.z) / 3.0f;
			return tess;
		}

		float4 EdgeLengthBasedTessCull( float4 v0, float4 v1, float4 v2, float edgeLength, float maxDisplacement, float4x4 o2w, float3 cameraPos, float4 scParams, float4 planes[6] )
		{
			float3 pos0 = mul(o2w,v0).xyz;
			float3 pos1 = mul(o2w,v1).xyz;
			float3 pos2 = mul(o2w,v2).xyz;
			float4 tess;

			if (WorldViewFrustumCull(pos0, pos1, pos2, maxDisplacement, planes))
			{
				tess = 0.0f;
			}
			else
			{
				tess.x = CalcEdgeTessFactor (pos1, pos2, edgeLength, cameraPos, scParams);
				tess.y = CalcEdgeTessFactor (pos2, pos0, edgeLength, cameraPos, scParams);
				tess.z = CalcEdgeTessFactor (pos0, pos1, edgeLength, cameraPos, scParams);
				tess.w = (tess.x + tess.y + tess.z) / 3.0f;
			}
			return tess;
		}
		ENDCG

		
		Pass
		{
			
			Name "ForwardBase"
			Tags { "LightMode"="ForwardBase" }

			Blend [_render_src] [_render_dst]

			CGPROGRAM
			#define ASE_GEOMETRY 1
			#define ASE_NEEDS_FRAG_SHADOWCOORDS
			#pragma shader_feature_local_fragment _ _SPECULARHIGHLIGHTS_OFF
			#pragma multi_compile_instancing
			#pragma multi_compile __ LOD_FADE_CROSSFADE
			#pragma multi_compile_fog
			#define ASE_FOG 1
			#define ASE_ABSOLUTE_VERTEX_POS 1
			#define _SPECULAR_SETUP 1
			#define ASE_LIGHTING_SIMPLE 1
			#define _ENVIRONMENTREFLECTIONS_OFF 1
			#define ASE_USING_SAMPLING_MACROS 1

			#pragma vertex vert
			#pragma fragment frag
			#pragma multi_compile_fwdbase
			#ifndef UNITY_PASS_FORWARDBASE
				#define UNITY_PASS_FORWARDBASE
			#endif
			#include "HLSLSupport.cginc"

			#ifdef ASE_GEOMETRY
				#ifndef UNITY_INSTANCED_LOD_FADE
					#define UNITY_INSTANCED_LOD_FADE
				#endif
				#ifndef UNITY_INSTANCED_SH
					#define UNITY_INSTANCED_SH
				#endif
				#ifndef UNITY_INSTANCED_LIGHTMAPSTS
					#define UNITY_INSTANCED_LIGHTMAPSTS
				#endif
			#endif

			#include "UnityShaderVariables.cginc"
			#include "UnityCG.cginc"
			#include "Lighting.cginc"
			#include "UnityPBSLighting.cginc"
			#include "AutoLight.cginc"

			#include "UnityStandardBRDF.cginc"
			#define ASE_NEEDS_VERT_POSITION
			#define ASE_NEEDS_VERT_NORMAL
			#define ASE_NEEDS_VERT_TANGENT
			#define ASE_NEEDS_FRAG_WORLD_NORMAL
			#define ASE_NEEDS_FRAG_WORLD_TANGENT
			#define ASE_NEEDS_FRAG_WORLD_BITANGENT
			#define ASE_NEEDS_FRAG_WORLD_POSITION
			#pragma shader_feature_local_fragment TVE_PIPELINE_STANDARD TVE_PIPELINE_UNIVERSAL TVE_PIPELINE_HD
			#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
			#pragma shader_feature_local_vertex TVE_SIZEFADE
			#pragma shader_feature_local_vertex TVE_PERSPECTIVE
			#pragma shader_feature_local_vertex TVE_PIVOT_OFF TVE_PIVOT_BAKED TVE_PIVOT_PROC
			#pragma shader_feature_local_vertex TVE_SIZEFADE_ELEMENT
			#pragma shader_feature_local_vertex TVE_MOTION_SMALL_SQUASH
			#pragma shader_feature_local TVE_LEGACY
			#pragma shader_feature_local_vertex TVE_MOTION_WIND_ELEMENT
			#pragma shader_feature_local_vertex TVE_MOTION_WIND_OFF TVE_MOTION_WIND_OPTIMIZED TVE_MOTION_WIND_ADVANCED
			#pragma shader_feature_local_vertex TVE_MOTION_TINY_FLUTTER
			#pragma shader_feature_local_vertex TVE_MOTION_PUSH_BENDING
			#pragma shader_feature_local_vertex TVE_MOTION_BASE_BENDING
			#pragma shader_feature_local_vertex TVE_BLANKET_BENDING
			#pragma shader_feature_local_vertex TVE_NORMAL_COMPUTE
			#pragma shader_feature_local_fragment TVE_SUBSURFACE
			#pragma shader_feature_local_fragment TVE_WETNESS
			#pragma shader_feature_local_fragment TVE_OVERLAY
			#pragma shader_feature_local_fragment TVE_MOTION_HIGHLIGHT
			#pragma shader_feature_local_fragment TVE_DRYNESS
			#pragma shader_feature_local_fragment TVE_TINTING
			#pragma shader_feature_local_fragment TVE_VARIATION
			#pragma shader_feature_local_fragment TVE_GRADIENT
			#pragma shader_feature_local_fragment TVE_OCCLUSION
			#pragma shader_feature_local_fragment TVE_TERRAIN
			#pragma shader_feature_local_fragment TVE_THIRD
			#pragma shader_feature_local_fragment TVE_SECOND
			#pragma shader_feature_local_fragment TVE_MAIN_SAMPLE_MAIN_UV TVE_MAIN_SAMPLE_EXTRA_UV TVE_MAIN_SAMPLE_PLANAR_2D TVE_MAIN_SAMPLE_PLANAR_3D TVE_MAIN_SAMPLE_STOCHASTIC_2D TVE_MAIN_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
			#pragma shader_feature_local_fragment TVE_SECOND_SAMPLE_MAIN_UV TVE_SECOND_SAMPLE_EXTRA_UV TVE_SECOND_SAMPLE_PLANAR_2D TVE_SECOND_SAMPLE_PLANAR_3D TVE_SECOND_SAMPLE_STOCHASTIC_2D TVE_SECOND_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_SECOND_MASK_SAMPLE_MAIN_UV TVE_SECOND_MASK_SAMPLE_EXTRA_UV TVE_SECOND_MASK_SAMPLE_PLANAR_2D TVE_SECOND_MASK_SAMPLE_PLANAR_3D
			#pragma shader_feature_local_fragment TVE_SECOND_ELEMENT
			#pragma shader_feature_local_fragment TVE_THIRD_SAMPLE_MAIN_UV TVE_THIRD_SAMPLE_EXTRA_UV TVE_THIRD_SAMPLE_PLANAR_2D TVE_THIRD_SAMPLE_PLANAR_3D TVE_THIRD_SAMPLE_STOCHASTIC_2D TVE_THIRD_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_THIRD_MASK_SAMPLE_MAIN_UV TVE_THIRD_MASK_SAMPLE_EXTRA_UV TVE_THIRD_MASK_SAMPLE_PLANAR_2D TVE_THIRD_MASK_SAMPLE_PLANAR_3D
			#pragma shader_feature_local_fragment TVE_THIRD_ELEMENT
			#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
			#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_MASK_SAMPLE_MAIN_UV TVE_TERRAIN_MASK_SAMPLE_EXTRA_UV TVE_TERRAIN_MASK_SAMPLE_PLANAR_2D TVE_TERRAIN_MASK_SAMPLE_PLANAR_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_ELEMENT
			#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
			#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
			#pragma shader_feature_local_fragment TVE_DRYNESS_SHIFT
			#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
			#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
			#pragma shader_feature_local_fragment TVE_OVERLAY_MASK_SAMPLE_MAIN_UV TVE_OVERLAY_MASK_SAMPLE_EXTRA_UV
			#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_WATER
			#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_VERT
			#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
			#pragma shader_feature_local_fragment TVE_CUTOUT
			#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
			#pragma shader_feature_local_fragment TVE_DITHER
			#pragma shader_feature_local_fragment TVE_EMISSIVE
			#pragma shader_feature_local_fragment TVE_EMISSIVE_SAMPLE_MAIN_UV TVE_EMISSIVE_SAMPLE_EXTRA_UV
			#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
			#pragma shader_feature_local_fragment TVE_SUBSURFACE_ELEMENT
			//SHADER INJECTION POINT BEGIN
			//SHADER INJECTION POINT END
			  
			struct TVEVisualData
			{  
				half Dummy;  
				half3 Albedo;
				half3 AlbedoRaw;
				half2 NormalTS;
				half3 NormalWS; 
				half4 Shader;
				half4 Emissive;
				half AlphaClip;
				half AlphaFade;
				half MultiMask;
				half Grayscale;
				half Luminosity;
				half3 Translucency;
				half Transmission;
				half Thickness;
				float Diffusion;
			};  
			    
			struct TVEModelData
			{    
				half Dummy;    
				half3 PositionOS;
				half3 PositionWS;
				half3 PositionWO;
				half3 PositionRawOS;
				half3 PositionAddOS;
				half3 PivotOS;
				half3 PivotWS;
				half3 PivotWO;
				half3 NormalOS;
				half3 NormalWS;
				half3 NormalRawOS;
				half3 NormalRawWS;
				half4 TangentOS;
				half3 ViewDirWS;
				half4 VertexData;
				half4 MotionData;
				half4 BoundsData;
				half4 RotationData;
			};    
			      
			struct TVEGlobalData
			{      
				half Dummy;      
				half4 CoatParams;
				half4 PaintParams;
				half4 GlowParams;
				half4 AtmoParams;
				half4 FadeParams;
				half4 FormParams;
				half4 LandParams;
				half4 WindParams;
				half4 PushParams;
			};      
			        
			//#pragma editor_sync_compilation
			#if defined(SHADER_API_D3D11) || defined(SHADER_API_XBOXONE) || defined(UNITY_COMPILER_HLSLCC) || defined(SHADER_API_PSSL) || (defined(SHADER_TARGET_SURFACE_ANALYSIS) && !defined(SHADER_TARGET_SURFACE_ANALYSIS_MOJOSHADER))//ASE Sampler Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex.SampleBias(samplerTex,coord,bias)
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex.SampleGrad(samplerTex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE3D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#else//ASE Sampling Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex2D(tex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex2Dlod(tex,float4(coord,0,lod))
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex2Dbias(tex,float4(coord,0,bias))
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex2Dgrad(tex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE3D(tex,samplerTex,coord) tex3D(tex,coord)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplertex,coord,lod) tex2DArraylod(tex, float4(coord,lod))
			#endif//ASE Sampling Macros
			

			struct appdata {
				float4 vertex : POSITION;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;
				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct v2f {
				#if UNITY_VERSION >= 201810
					UNITY_POSITION(pos);
				#else
					float4 pos : SV_POSITION;
				#endif
				#if defined(LIGHTMAP_ON) || (!defined(LIGHTMAP_ON) && SHADER_TARGET >= 30)
					float4 lmap : TEXCOORD0;
				#endif
				#if !defined(LIGHTMAP_ON) && UNITY_SHOULD_SAMPLE_SH
					half3 sh : TEXCOORD1;
				#endif
				#if defined(UNITY_HALF_PRECISION_FRAGMENT_SHADER_REGISTERS) && UNITY_VERSION >= 201810 && defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					UNITY_LIGHTING_COORDS(2,3)
				#elif defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					#if UNITY_VERSION >= 201710
						UNITY_SHADOW_COORDS(2)
					#else
						SHADOW_COORDS(2)
					#endif
				#endif
				#ifdef ASE_FOG
					UNITY_FOG_COORDS(4)
				#endif
				float4 tSpace0 : TEXCOORD5;
				float4 tSpace1 : TEXCOORD6;
				float4 tSpace2 : TEXCOORD7;
				#if defined(ASE_NEEDS_FRAG_SCREEN_POSITION)
				float4 screenPos : TEXCOORD8;
				#endif
				float4 ase_texcoord9 : TEXCOORD9;
				float4 ase_texcoord10 : TEXCOORD10;
				float4 ase_texcoord11 : TEXCOORD11;
				float4 ase_texcoord12 : TEXCOORD12;
				float4 ase_color : COLOR;
				float4 ase_texcoord13 : TEXCOORD13;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				UNITY_VERTEX_OUTPUT_STEREO
			};

			#ifdef ASE_TRANSMISSION
				float _TransmissionShadow;
			#endif
			#ifdef ASE_TRANSLUCENCY
				float _TransStrength;
				float _TransNormal;
				float _TransScattering;
				float _TransDirect;
				float _TransAmbient;
				float _TransShadow;
			#endif
			#ifdef ASE_TESSELLATION
				float _TessPhongStrength;
				float _TessValue;
				float _TessMin;
				float _TessMax;
				float _TessEdgeLength;
				float _TessMaxDisp;
			#endif
			uniform half _TerrainSampleMode1;
			uniform half _TerrainSampleMode2;
			uniform half _TerrainSampleMode3;
			uniform half _TerrainSampleMode4;
			uniform half _TerrainSampleMode5;
			uniform half _TerrainSampleMode6;
			uniform half _TerrainSampleMode7;
			uniform half _TerrainSampleMode8;
			uniform half _TerrainSampleMode9;
			uniform half _TerrainSampleMode10;
			uniform half _TerrainSampleMode11;
			uniform half _TerrainSampleMode12;
			uniform half _TerrainSampleMode13;
			uniform half _TerrainSampleMode14;
			uniform half _TerrainSampleMode15;
			uniform half _TerrainSampleMode16;
			uniform half _TerrainLayersMode;
			uniform half _TerrainTextureMode;
			uniform half _SubsurfaceScatteringValue;
			uniform half _SubsurfaceAngleValue;
			uniform float _SubsurfaceDiffusion;
			uniform float4 _SubsurfaceDiffusion_Asset;
			uniform half _SubsurfaceSpace;
			uniform half _render_src;
			uniform half _render_cull;
			uniform half _render_dst;
			uniform half _render_zw;
			uniform half _render_coverage;
			uniform half _IsBlanketShader;
			uniform half _IsSimpleShader;
			uniform half _RenderZWrite;
			uniform half4 _Color;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_BumpMap);
			SamplerState sampler_BumpMap;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainTex);
			SamplerState sampler_MainTex;
			uniform half _Cutoff;
			uniform half _IsVersion;
			uniform half _RenderCategory;
			uniform half _RenderEnd;
			uniform half _RenderMode;
			uniform half _NoiseCategory;
			uniform half _NoiseEnd;
			uniform half _RenderCull;
			uniform half _RenderNormal;
			uniform half _RenderBakeGI;
			uniform half _RenderDecals;
			uniform half _RenderSSR;
			uniform half _RenderPriority;
			uniform half _RenderQueue;
			uniform half _RenderMotion;
			uniform half _RenderClip;
			uniform half _RenderShadow;
			uniform half _IsTVEShader;
			uniform half _IsCustomShader;
			uniform half _IsShared;
			uniform half _HasDefaultTextures;
			uniform half _IsCollected;
			uniform half _IsConverted;
			uniform half _IsIdentifier;
			uniform half _RenderFilter;
			UNITY_DECLARE_TEX3D_NOSAMPLER(_NoiseTex3D);
			SamplerState sampler_NoiseTex3D;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_NoiseTexSS);
			SamplerState sampler_NoiseTexSS;
			uniform half _NormalCategory;
			uniform half _NormalEnd;
			uniform half _NormalSpace;
			uniform half _BlanketCategory;
			uniform half _BlanketEnd;
			uniform half _BlanketInfo;
			uniform half _MotionWindCategory;
			uniform half _MotionWindEnd;
			uniform half _MotionInteractionCategory;
			uniform half _MotionInteractionEnd;
			uniform half _MotionWindMode;
			uniform half _MotionWindElementMode;
			uniform half _MotionPushElementMode;
			uniform half _MotionWindOffInfo;
			uniform half _MotionWindOptimizedInfo;
			uniform half _MotionWindAdvancedInfo;
			uniform half _SizeFadeCategory;
			uniform half _SizeFadeEnd;
			uniform half _SizeFadeElementMode;
			uniform half _PerspectiveCategory;
			uniform half _PerspectiveEnd;
			uniform half _ObjectCategory;
			uniform half _ObjectEnd;
			uniform half _ObjectModelMode;
			uniform half _ObjectPivotMode;
			uniform half _ObjectPhaseMode;
			uniform half _ObjectBoundsInfo;
			uniform float3 TVE_WorldOrigin;
			uniform half4 _object_phase_mode;
			uniform half _ObjectHeightValue;
			uniform half _ObjectRadiusValue;
			uniform half _PerspectiveIntensityValue;
			uniform half _PerspectiveAngleValue;
			uniform half _SizeFadeDistMaxValue;
			uniform half _SizeFadeDistMinValue;
			uniform half _SizeFadeScaleValue;
			uniform half _GlobalCategory;
			uniform half _GlobalEnd;
			uniform half _GlobalCoatLayerValue;
			uniform float TVE_CoatLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_CoatBaseTex);
			uniform half4 TVE_RenderBaseCoords;
			uniform half _GlobalCoatPivotValue;
			SamplerState sampler_Linear_Clamp;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_CoatNearTex);
			uniform half4 TVE_RenderNearCoords;
			SamplerState sampler_Linear_Repeat;
			uniform float4 TVE_RenderNearPositionR;
			uniform half TVE_RenderNearFadeValue;
			uniform half4 TVE_CoatParams;
			uniform half _GlobalPaintLayerValue;
			uniform float TVE_PaintLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintBaseTex);
			uniform half _GlobalPaintPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintNearTex);
			uniform half4 TVE_PaintParams;
			uniform half _GlobalGlowLayerValue;
			uniform float TVE_GlowLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowBaseTex);
			uniform half _GlobalGlowPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowNearTex);
			uniform half4 TVE_GlowParams;
			uniform half _GlobalAtmoLayerValue;
			uniform float TVE_AtmoLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoBaseTex);
			uniform half _GlobalAtmoPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoNearTex);
			uniform half4 TVE_AtmoParams;
			uniform half _GlobalFadeLayerValue;
			uniform float TVE_FadeLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeBaseTex);
			uniform half _GlobalFadePivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeNearTex);
			uniform half4 TVE_FadeParams;
			uniform half _GlobalFormLayerValue;
			uniform float TVE_FormLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormBaseTex);
			uniform half _GlobalFormPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormNearTex);
			uniform half4 TVE_FormParams;
			uniform half4 TVE_LandParams;
			uniform half _GlobalWindLayerValue;
			uniform float TVE_WindLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_WindBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_WindNearTex);
			uniform half4 TVE_WindParams;
			uniform half _GlobalPushLayerValue;
			uniform float TVE_PushLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PushBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PushNearTex);
			uniform half4 TVE_PushParams;
			uniform half TVE_IsEnabled;
			uniform half _SizeFadeScaleMode;
			uniform half _SizeFadeIntensityValue;
			uniform half _MotionSmallIntensityValue;
			uniform half4 _motion_small_vert_mode;
			uniform half4 _motion_small_proc_mode;
			uniform half _motion_small_mask_mode;
			uniform half4 _MotionSmallMaskRemap;
			uniform half _MotionSmallMaskMode;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MotionNoiseTexRT);
			uniform half _MotionBasePivotValue;
			uniform half _MotionBasePhaseValue;
			uniform half _MotionTillingValue;
			uniform half _MotionIntensityValue;
			uniform half4 TVE_MotionParams;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MotionNoiseTex);
			uniform half _MotionBaseTillingValue;
			uniform half4 TVE_TimeParams;
			uniform half _MotionBaseSpeedValue;
			uniform half _MotionBaseNoiseValue;
			uniform half _global_wind_layer_value;
			uniform half _MotionSmallPivotValue;
			uniform half _MotionSmallPhaseValue;
			uniform half _MotionSmallTillingValue;
			uniform half _MotionSmallSpeedValue;
			uniform half _MotionSmallNoiseValue;
			uniform half _MotionFrontValue;
			uniform half _MotionSmallDelayValue;
			uniform half _MotionTinyIntensityValue;
			uniform half4 _motion_tiny_vert_mode;
			uniform half4 _motion_tiny_proc_mode;
			uniform half _motion_tiny_mask_mode;
			uniform half4 _MotionTinyMaskRemap;
			uniform half _MotionTinyMaskMode;
			uniform half _MotionTinyTillingValue;
			uniform half _MotionTinySpeedValue;
			uniform half _MotionDistValue;
			uniform half _global_push_layer_value;
			uniform half _MotionPushPivotValue;
			uniform half _MotionPushPhaseValue;
			uniform half _MotionPushIntensityValue;
			uniform half _MotionBaseIntensityValue;
			uniform half4 _motion_base_vert_mode;
			uniform half4 _motion_base_proc_mode;
			uniform half _motion_base_mask_mode;
			uniform half4 _MotionBaseMaskRemap;
			uniform half _MotionBaseMaskMode;
			uniform half _MotionBaseDelayValue;
			uniform half4 _motion_push_vert_mode;
			uniform half4 _motion_push_proc_mode;
			uniform half _motion_push_mask_mode;
			uniform half4 _MotionPushMaskRemap;
			uniform half _MotionPushMaskMode;
			uniform half _BlanketConformOffsetMode;
			uniform half _BlanketConformOffsetValue;
			uniform half _BlanketConformValue;
			uniform half _BlanketOrientationValue;
			uniform half _NormalFlattenValue;
			uniform half3 _NormalSphereOffsetValue;
			uniform half _NormalSphereValue;
			uniform half _NormalComputeValue;
			uniform half _NormalBlanketValue;
			uniform half4 _normal_vert_mode;
			uniform half4 _NormalMeshRemap;
			uniform half _NormalMeshValue;
			uniform half _NormalMeshMode;
			uniform half4 _NormalProjRemap;
			uniform half _NormalProjValue;
			uniform half _NormalLandOffsetValue;
			uniform half _NormalLandValue;
			uniform half _NormalLandMode;
			uniform half _NormalBlanketInfo;
			uniform half _DisableSRPBatcher;
			uniform half _SubsurfaceCategory;
			uniform half _SubsurfaceEnd;
			uniform half _SubsurfaceDirectValue;
			uniform half _SubsurfaceNormalValue;
			uniform half _SubsurfaceAmbientValue;
			uniform half _SubsurfaceShadowValue;
			uniform half _SubsurfaceElementMode;
			uniform half _EmissiveCategory;
			uniform half _EmissiveEnd;
			uniform half _EmissivePowerMode;
			uniform half _EmissivePowerValue;
			uniform half _EmissiveElementMode;
			uniform half _EmissiveFlagMode;
			uniform half _DitherCategory;
			uniform half _DitherEnd;
			uniform half _CutoutCategory;
			uniform half _CutoutEnd;
			uniform half _CutoutElementMode;
			uniform half _CutoutBakeMode;
			uniform half _WetnessCategory;
			uniform half _WetnessEnd;
			uniform half _WetnessElementMode;
			uniform half _WetnessBakeMode;
			uniform half _OverlayCategory;
			uniform half _OverlayEnd;
			uniform half _OverlaySpace;
			uniform half _OverlayElementMode;
			uniform half _OverlayBakeMode;
			uniform half _DrynessCategory;
			uniform half _DrynessEnd;
			uniform half _DrynessSpace;
			uniform half _DrynessElementMode;
			uniform half _DrynessBakeMode;
			uniform half _TintingCategory;
			uniform half _TintingEnd;
			uniform half _TintingSpace;
			uniform half _TintingBakeMode;
			uniform half _VariationCategory;
			uniform half _VariationEnd;
			uniform half _GradientCategory;
			uniform half _GradientEnd;
			uniform half _GradientBakeMode;
			uniform half _OcclusionCategory;
			uniform half _OcclusionEnd;
			uniform half _OcclusionBakeMode;
			uniform half _TerrainCategory;
			uniform half _TerrainEnd;
			uniform half _TerrainFormInfo;
			uniform half _ThirdElementMode;
			uniform half _DetailCategory;
			uniform half _DetailEnd;
			uniform half _ThirdSampleMode;
			uniform half _ThirdCoordMode;
			uniform half4 _ThirdCoordValue;
			uniform half _ThirdMaskSampleMode;
			uniform half _ThirdMaskCoordMode;
			uniform half4 _ThirdMaskCoordValue;
			uniform half _ThirdBakeMode;
			uniform half _LayerCategory;
			uniform half _LayerEnd;
			uniform half _SecondSampleMode;
			uniform half _SecondCoordMode;
			uniform half4 _SecondCoordValue;
			uniform half _SecondMaskSampleMode;
			uniform half _SecondMaskCoordMode;
			uniform half4 _SecondMaskCoordValue;
			uniform half _SecondElementMode;
			uniform half _SecondBakeMode;
			uniform half _MainCategory;
			uniform half _MainEnd;
			uniform half _MainSampleMode;
			uniform half _MainCoordMode;
			uniform half4 _MainCoordValue;
			uniform half _MainMultiMaskInfo;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainAlbedoTex);
			SamplerState sampler_Linear_Repeat_Aniso8;
			SamplerState sampler_Point_Repeat;
			uniform half4 _main_coord_value;
			uniform half _MainAlbedoValue;
			uniform half4 _MainColorTwo;
			uniform half4 _MainColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainShaderTex);
			uniform half _MainMetallicValue;
			uniform half _MainOcclusionValue;
			uniform half _MainSmoothnessValue;
			uniform half4 _MainMultiRemap;
			uniform half _MainColorMode;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainNormalTex);
			uniform half _MainNormalValue;
			uniform half _MainAlphaClipValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondAlbedoTex);
			uniform half4 _second_coord_value;
			uniform half _SecondAlbedoValue;
			uniform half4 _SecondColorTwo;
			uniform half4 _SecondColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondShaderTex);
			uniform half _SecondMetallicValue;
			uniform half _SecondOcclusionValue;
			uniform half _SecondSmoothnessValue;
			uniform half4 _SecondMultiRemap;
			uniform half _SecondColorMode;
			uniform half _SecondBlendAlbedoValue;
			uniform half _SecondIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondMaskTex);
			uniform half4 _second_mask_coord_value;
			uniform half4 _SecondMaskRemap;
			uniform half _SecondMaskValue;
			uniform half4 _SecondProjRemap;
			uniform half _SecondProjValue;
			uniform half4 _second_vert_mode;
			uniform half4 _SecondMeshRemap;
			uniform half _SecondMeshValue;
			uniform half _SecondMeshMode;
			uniform half4 _SecondBlendRemap;
			uniform half _SecondBlendIntensityValue;
			uniform half _SecondBlendNormalValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondNormalTex);
			uniform half _SecondNormalValue;
			uniform half _SecondBlendShaderValue;
			uniform half _SecondAlphaClipValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdAlbedoTex);
			uniform half4 _third_coord_value;
			uniform half _ThirdAlbedoValue;
			uniform half4 _ThirdColorTwo;
			uniform half4 _ThirdColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdShaderTex);
			uniform half _ThirdMetallicValue;
			uniform half _ThirdOcclusionValue;
			uniform half _ThirdSmoothnessValue;
			uniform half4 _ThirdMultiRemap;
			uniform half _ThirdColorMode;
			uniform half _ThirdBlendAlbedoValue;
			uniform half _ThirdIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdMaskTex);
			uniform half4 _third_mask_coord_value;
			uniform half4 _ThirdMaskRemap;
			uniform half _ThirdMaskValue;
			uniform half4 _third_vert_mode;
			uniform half4 _ThirdMeshRemap;
			uniform half _ThirdMeshValue;
			uniform half _ThirdMeshMode;
			uniform half4 _ThirdProjRemap;
			uniform half _ThirdProjValue;
			uniform half4 _ThirdBlendRemap;
			uniform half _ThirdBlendIntensityValue;
			uniform half _ThirdBlendNormalValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdNormalTex);
			uniform half _ThirdNormalValue;
			uniform half _ThirdBlendShaderValue;
			uniform half _ThirdAlphaClipValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex1);
			uniform half4 _TerrainPosition;
			uniform half4 _TerrainSize;
			float4 _TerrainControlTex1_TexelSize;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex1);
			uniform half4 _TerrainCoord1;
			uniform half4 _TerrainShaderMin1;
			uniform half4 _TerrainShaderMax1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex2);
			uniform half4 _TerrainCoord2;
			uniform half4 _TerrainShaderMin2;
			uniform half4 _TerrainShaderMax2;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex3);
			uniform half4 _TerrainCoord3;
			uniform half4 _TerrainShaderMin3;
			uniform half4 _TerrainShaderMax3;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex4);
			uniform half4 _TerrainCoord4;
			uniform half4 _TerrainShaderMin4;
			uniform half4 _TerrainShaderMax4;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex5);
			uniform half4 _TerrainCoord5;
			uniform half4 _TerrainShaderMin5;
			uniform half4 _TerrainShaderMax5;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex6);
			uniform half4 _TerrainCoord6;
			uniform half4 _TerrainShaderMin6;
			uniform half4 _TerrainShaderMax6;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex7);
			uniform half4 _TerrainCoord7;
			uniform half4 _TerrainShaderMin7;
			uniform half4 _TerrainShaderMax7;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex8);
			uniform half4 _TerrainCoord8;
			uniform half4 _TerrainShaderMin8;
			uniform half4 _TerrainShaderMax8;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex9);
			uniform half4 _TerrainCoord9;
			uniform half4 _TerrainShaderMin9;
			uniform half4 _TerrainShaderMax9;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex10);
			uniform half4 _TerrainCoord10;
			uniform half4 _TerrainShaderMin10;
			uniform half4 _TerrainShaderMax10;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex11);
			uniform half4 _TerrainCoord11;
			uniform half4 _TerrainShaderMin11;
			uniform half4 _TerrainShaderMax11;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex12);
			uniform half4 _TerrainCoord12;
			uniform half4 _TerrainShaderMin12;
			uniform half4 _TerrainShaderMax12;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex13);
			uniform half4 _TerrainCoord13;
			uniform half4 _TerrainShaderMin13;
			uniform half4 _TerrainShaderMax13;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex14);
			uniform half4 _TerrainCoord14;
			uniform half4 _TerrainShaderMin14;
			uniform half4 _TerrainShaderMax14;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex15);
			uniform half4 _TerrainCoord15;
			uniform half4 _TerrainShaderMin15;
			uniform half4 _TerrainShaderMax15;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex16);
			uniform half4 _TerrainCoord16;
			uniform half4 _TerrainShaderMin16;
			uniform half4 _TerrainShaderMax16;
			uniform half _TerrainHeightBlendValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex16);
			uniform half4 _TerrainColor1;
			uniform half4 _TerrainColor2;
			uniform half4 _TerrainColor3;
			uniform half4 _TerrainColor4;
			uniform half4 _TerrainColor5;
			uniform half4 _TerrainColor6;
			uniform half4 _TerrainColor7;
			uniform half4 _TerrainColor8;
			uniform half4 _TerrainColor9;
			uniform half4 _TerrainColor10;
			uniform half4 _TerrainColor11;
			uniform half4 _TerrainColor12;
			uniform half4 _TerrainColor13;
			uniform half4 _TerrainColor14;
			uniform half4 _TerrainColor15;
			uniform half4 _TerrainColor16;
			uniform half4 _TerrainColor;
			uniform half _TerrainIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainMaskTex);
			uniform half4 _terrain_mask_coord_value;
			uniform half _TerrainMaskSampleMode;
			uniform half _TerrainMaskCoordMode;
			uniform half4 _TerrainMaskCoordValue;
			uniform half4 _TerrainMaskRemap;
			uniform half _TerrainMaskValue;
			uniform half4 _TerrainProjRemap;
			uniform half _TerrainProjValue;
			uniform float _TerrainLandOffsetValue;
			uniform float _TerrainLandValue;
			uniform half _TerrainLandMode;
			uniform half4 _TerrainBlendRemap;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex16);
			uniform half4 _TerrainParams1;
			uniform half4 _TerrainParams2;
			uniform half4 _TerrainParams3;
			uniform half4 _TerrainParams4;
			uniform half4 _TerrainParams5;
			uniform half4 _TerrainParams6;
			uniform half4 _TerrainParams7;
			uniform half4 _TerrainParams8;
			uniform half4 _TerrainParams9;
			uniform half4 _TerrainParams10;
			uniform half4 _TerrainParams11;
			uniform half4 _TerrainParams12;
			uniform half4 _TerrainParams13;
			uniform half4 _TerrainParams14;
			uniform half4 _TerrainParams15;
			uniform half4 _TerrainParams16;
			uniform half _TerrainNormalValue;
			uniform half _TerrainMetallicValue;
			uniform half _TerrainOcclusionValue;
			uniform half _TerrainSmoothnessValue;
			uniform half4 _TerrainSpecular1;
			uniform half4 _TerrainSpecular2;
			uniform half4 _TerrainSpecular3;
			uniform half4 _TerrainSpecular4;
			uniform half4 _TerrainSpecular5;
			uniform half4 _TerrainSpecular6;
			uniform half4 _TerrainSpecular7;
			uniform half4 _TerrainSpecular8;
			uniform half4 _TerrainSpecular9;
			uniform half4 _TerrainSpecular10;
			uniform half4 _TerrainSpecular11;
			uniform half4 _TerrainSpecular12;
			uniform half4 _TerrainSpecular13;
			uniform half4 _TerrainSpecular14;
			uniform half4 _TerrainSpecular15;
			uniform half4 _TerrainSpecular16;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainHolesTex);
			uniform half4 _OcclusionColorTwo;
			uniform half4 _OcclusionColorOne;
			uniform half4 _occlusion_vert_mode;
			uniform half4 _OcclusionMeshRemap;
			uniform half _OcclusionMeshMode;
			uniform half _OcclusionIntensityValue;
			uniform half4 _GradientColorTwo;
			uniform half4 _GradientColorOne;
			uniform half4 _gradient_vert_mode;
			uniform half4 _GradientMeshRemap;
			uniform half _GradientMeshMode;
			uniform half _GradientIntensityValue;
			uniform half _GradientMultiValue;
			uniform half4 _VariationColorTwo;
			uniform half4 _VariationColorOne;
			uniform half _VariationNoisePivotValue;
			uniform half _VariationNoiseTillingValue;
			uniform half4 _VariationNoiseRemap;
			uniform half _VariationIntensityValue;
			uniform half _VariationMultiValue;
			uniform half _TintingElementMode;
			uniform half _TintingGrayValue;
			uniform float4 _TintingColor;
			uniform half _TintingIntensityValue;
			uniform half _TintingMultiValue;
			uniform half4 _TintingLumaRemap;
			uniform half _TintingLumaValue;
			uniform half4 _tinting_vert_mode;
			uniform half4 _TintingMeshRemap;
			uniform half _TintingMeshValue;
			uniform half _TintingMeshMode;
			uniform half4 _TintingBlendRemap;
			uniform half _DrynessGrayValue;
			uniform half _DrynessShiftValue;
			uniform float4 _DrynessColor;
			uniform half _DrynessIntensityValue;
			uniform half _DrynessMultiValue;
			uniform half4 _DrynessLumaRemap;
			uniform half _DrynessLumaValue;
			uniform half4 _dryness_vert_mode;
			uniform half4 _DrynessMeshRemap;
			uniform half _DrynessMeshValue;
			uniform half _DrynessMeshMode;
			uniform half4 _DrynessBlendRemap;
			uniform half _DrynessSmoothnessValue;
			uniform half _DrynessSubsurfaceValue;
			uniform half3 _motion_highlight_color;
			uniform half _MotionHighlightValue;
			uniform half4 _MotionHighlightColor;
			uniform half4 _OverlayColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayAlbedoTex);
			uniform half4 _overlay_coord_value;
			uniform half _OverlaySampleMode;
			uniform half _OverlayCoordMode;
			uniform half4 _OverlayCoordValue;
			uniform half _OverlayTextureMode;
			uniform half _OverlayGlitterIntensityValue;
			uniform half4 _OverlayGlitterColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayGlitterTexRT);
			uniform half _OverlayGlitterTillingValue;
			uniform half _OverlayGlitterDistValue;
			uniform half _OverlayIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayMaskTex);
			uniform half4 _overlay_mask_coord_value;
			uniform half _OverlayMaskSampleMode;
			uniform half _OverlayMaskCoordMode;
			uniform half4 _OverlayMaskCoordValue;
			uniform half4 _OverlayMaskRemap;
			uniform half _OverlayMaskValue;
			uniform half4 _OverlayProjRemap;
			uniform half _OverlayProjValue;
			uniform half4 _OverlayLumaRemap;
			uniform half _OverlayLumaValue;
			uniform half4 _overlay_vert_mode;
			uniform half4 _OverlayMeshRemap;
			uniform half _OverlayMeshValue;
			uniform half _OverlayMeshMode;
			uniform half4 _OverlayBlendRemap1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayNormalTex);
			uniform half _OverlayNormalValue;
			uniform half _OverlaySmoothnessValue;
			uniform half _OverlaySubsurfaceValue;
			uniform half4 _WetnessWaterColor;
			uniform half _WetnessWaterIntensityValue;
			uniform half _WetnessIntensityValue;
			uniform half4 _wetness_vert_mode;
			uniform half4 _WetnessMeshRemap;
			uniform half _WetnessMeshValue;
			uniform half _WetnessMeshMode;
			uniform half4 _wetness_water_vert_mode;
			uniform half4 _WetnessWaterMeshRemap;
			uniform half _WetnessWaterMeshValue;
			uniform half _WetnessWaterMeshMode;
			uniform half _WetnessWaterBaseValue;
			uniform half4 _WetnessWaterBlendRemap;
			uniform half _WetnessContrastValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_WetnessDropsTexRT);
			uniform half _WetnessDropsTillingValue;
			uniform half _WetnessDropsIntensityValue;
			uniform half _WetnessDropsNormalValue;
			uniform half _WetnessDropsDistValue;
			uniform half4 _wetness_drops_vert_mode;
			uniform half4 _WetnessDropsMeshRemap;
			uniform half _WetnessDropsMeshValue;
			uniform half _WetnessDropsMeshMode;
			uniform half _WetnessSmoothnessValue;
			uniform half _CutoutIntensityValue;
			uniform half _CutoutAlphaValue;
			uniform half _CutoutNoiseTillingValue;
			uniform half _CutoutNoiseValue;
			uniform half4 _cutout_vert_mode;
			uniform half4 _CutoutMeshRemap;
			uniform half _CutoutMeshValue;
			uniform half _CutoutMeshMode;
			uniform half _CutoutMultiValue;
			uniform half _DitherConstantValue;
			uniform half _DitherProximityMaxValue;
			uniform half _DitherProximityMinValue;
			uniform half _DitherProximityValue;
			uniform half _DitherDistanceMinValue;
			uniform half _DitherDistanceMaxValue;
			uniform half _DitherDistanceValue;
			uniform half _DitherGlancingAngleValue;
			uniform half _DitherGlancingValue;
			uniform half _DitherNoiseTillingValue;
			uniform half _DitherMultiValue;
			uniform half4 _emissive_vert_mode;
			uniform half4 _EmissiveMeshRemap;
			uniform half _EmissiveMeshValue;
			uniform half _EmissiveMeshMode;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_EmissiveMaskTex);
			uniform half4 _emissive_coord_value;
			uniform half _EmissiveSampleMode;
			uniform half _EmissiveCoordMode;
			uniform half4 _EmissiveCoordValue;
			uniform half4 _EmissiveMaskRemap;
			uniform half _EmissiveMaskValue;
			uniform half _EmissiveIntensityValue;
			uniform half4 _EmissiveColor;
			uniform half _EmissiveColorMode;
			uniform float _emissive_power_value;
			uniform half4 _SubsurfaceColor;
			uniform half _SubsurfaceIntensityValue;
			uniform half _SubsurfaceMultiValue;
			uniform half3 TVE_MainLightDirection;
			uniform half _SubsurfaceAproxInfo;
			uniform half3 _render_normal;
			uniform half _RenderSpecular;


			float2 DecodeFloatToVector2( float enc )
			{
				float2 result ;
				result.y = enc % 2048;
				result.x = floor(enc / 2048);
				return result / (2048 - 1);
			}
			
			float3 ASESafeNormalize(float3 inVec)
			{
				float dp3 = max(1.175494351e-38, dot(inVec, inVec));
				return inVec* rsqrt(dp3);
			}
			
			void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
			{
				ZX = WorldPosition.xz * Coords.xx - Coords.zz;
				ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
				XY = WorldPosition.xy * Coords.xy - Coords.zw;
			}
			
			half4 SampleMain( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, half2 TexCoord )
			{
				half2 UV = TexCoord * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			half4 SampleExtra( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, half2 TexCoord )
			{
				half2 UV = TexCoord * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			half4 SamplePlanar2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
			{
				half3 powNormal = abs( WorldNormal.xyz );
				half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
				weights /= ( weights.x + weights.y + weights.z ).xxx;
				T1 = weights.y;
				T2 = weights.x;
				T3 = weights.z;
			}
			
			half4 SamplePlanar3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
				half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
				half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
				return tex1 * T1 + tex2 * T2 + tex3 * T3;
			}
			
			void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
			{
				half2 vertex1, vertex2, vertex3;
				// Scaling of the input
				half2 uv = UV * 3.464; // 2 * sqrt (3)
				// Skew input space into simplex triangle grid
				const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
				half2 skewedCoord = mul( gridToSkewedGrid, uv );
				// Compute local triangle vertex IDs and local barycentric coordinates
				int2 baseId = int2( floor( skewedCoord ) );
				half3 temp = half3( frac( skewedCoord ), 0 );
				temp.z = 1.0 - temp.x - temp.y;
				if ( temp.z > 0.0 )
				{
					W1 = temp.z;
					W2 = temp.y;
					W3 = temp.x;
					vertex1 = baseId;
					vertex2 = baseId + int2( 0, 1 );
					vertex3 = baseId + int2( 1, 0 );
				}
				else
				{
					W1 = -temp.z;
					W2 = 1.0 - temp.y;
					W3 = 1.0 - temp.x;
					vertex1 = baseId + int2( 1, 1 );
					vertex2 = baseId + int2( 1, 0 );
					vertex3 = baseId + int2( 0, 1 );
				}
				UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
				UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
				UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
				return;
			}
			
			float4 SampleStochastic2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
				half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
				half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
				half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
				return tex1 * W1 + tex2 * W2 + tex3 * W3;
			}
			
			half4 SampleStochastic3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				half4 tex1, tex2, tex3;
				ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
				half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
				half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
				half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				return texZX * T1 + texZY * T2 + texXY * T3;
			}
			
			half3 HSVToRGB( half3 c )
			{
				half4 K = half4( 1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0 );
				half3 p = abs( frac( c.xxx + K.xyz ) * 6.0 - K.www );
				return c.z * lerp( K.xxx, saturate( p - K.xxx ), c.y );
			}
			
			half3 RGBToHSV(half3 c)
			{
				half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
				half4 p = lerp( half4( c.bg, K.wz ), half4( c.gb, K.xy ), step( c.b, c.g ) );
				half4 q = lerp( half4( p.xyw, c.r ), half4( c.r, p.yzx ), step( p.x, c.r ) );
				half d = q.x - min( q.w, q.y );
				half e = 1.0e-10;
				return half3( abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
			}
			half ShadowPassCheck33_g174879( half True, half False )
			{
				half result;
				#if defined(UNITY_PASS_DEFERRED)
					result = True;
				#else
					result = False;
				#endif
				return result;
			}
			
			half ShadowPassCheck33_g174880( half True, half False )
			{
				half result;
				#if defined(UNITY_PASS_DEFERRED)
					result = True;
				#else
					result = False;
				#endif
				return result;
			}
			

			v2f VertexFunction (appdata v  ) {
				UNITY_SETUP_INSTANCE_ID(v);
				v2f o;
				UNITY_INITIALIZE_OUTPUT(v2f,o);
				UNITY_TRANSFER_INSTANCE_ID(v,o);
				UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);

				TVEModelData Data16_g174866 = (TVEModelData)0;
				float In_Dummy16_g174866 = 0.0;
				TVEModelData Data16_g174843 = (TVEModelData)0;
				half Dummy1575_g174841 = ( _NormalCategory + _NormalEnd + _NormalSpace );
				float In_Dummy16_g174843 = Dummy1575_g174841;
				TVEModelData Data16_g174820 = (TVEModelData)0;
				float In_Dummy16_g174820 = 0.0;
				TVEModelData Data16_g174801 = (TVEModelData)0;
				half Dummy181_g174798 = ( _BlanketCategory + _BlanketEnd + _BlanketInfo );
				float In_Dummy16_g174801 = Dummy181_g174798;
				TVEModelData Data16_g174577 = (TVEModelData)0;
				half Dummy181_g174563 = ( ( _MotionWindCategory + _MotionWindEnd ) + ( _MotionInteractionCategory + _MotionInteractionEnd ) + _MotionWindMode + _MotionWindElementMode + _MotionPushElementMode + ( _MotionWindOffInfo + _MotionWindOptimizedInfo + _MotionWindAdvancedInfo ) );
				float In_Dummy16_g174577 = Dummy181_g174563;
				TVEModelData Data16_g174422 = (TVEModelData)0;
				half Dummy181_g174419 = ( _SizeFadeCategory + _SizeFadeEnd + _SizeFadeElementMode );
				float In_Dummy16_g174422 = Dummy181_g174419;
				TVEModelData Data16_g174385 = (TVEModelData)0;
				half Dummy181_g174382 = ( _PerspectiveCategory + _PerspectiveEnd );
				float In_Dummy16_g174385 = Dummy181_g174382;
				TVEModelData Data16_g174346 = (TVEModelData)0;
				float In_Dummy16_g174346 = 0.0;
				TVEModelData Data16_g164565 = (TVEModelData)0;
				half Dummy207_g164551 = ( _ObjectCategory + _ObjectEnd + _ObjectModelMode + _ObjectPivotMode + _ObjectPhaseMode + _ObjectBoundsInfo );
				float In_Dummy16_g164565 = Dummy207_g164551;
				half3 PositionOS131_g164551 = v.vertex.xyz;
				float3 In_PositionOS16_g164565 = PositionOS131_g164551;
				float3 ase_worldPos = mul(unity_ObjectToWorld, float4( (v.vertex).xyz, 1 )).xyz;
				float3 vertexToFrag73_g164551 = ase_worldPos;
				half3 PositionWS122_g164551 = vertexToFrag73_g164551;
				float3 In_PositionWS16_g164565 = PositionWS122_g164551;
				float4x4 break19_g164553 = unity_ObjectToWorld;
				float3 appendResult20_g164553 = (float3(break19_g164553[ 0 ][ 3 ] , break19_g164553[ 1 ][ 3 ] , break19_g164553[ 2 ][ 3 ]));
				half3 ObjectData20_g164555 = appendResult20_g164553;
				half3 WorldData19_g164555 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g164555 = WorldData19_g164555;
				#else
				float3 staticSwitch14_g164555 = ObjectData20_g164555;
				#endif
				float3 temp_output_124_0_g164553 = staticSwitch14_g164555;
				float3 temp_output_239_7_g164551 = temp_output_124_0_g164553;
				float4x4 break19_g164557 = unity_ObjectToWorld;
				float3 appendResult20_g164557 = (float3(break19_g164557[ 0 ][ 3 ] , break19_g164557[ 1 ][ 3 ] , break19_g164557[ 2 ][ 3 ]));
				float3 _Vector0 = float3(0,0,0);
				float3 appendResult60_g164561 = (float3(v.ase_texcoord3.x , 0.0 , v.ase_texcoord3.y));
				float3 break233_g164551 = PositionOS131_g164551;
				float3 appendResult234_g164551 = (float3(break233_g164551.x , 0.0 , break233_g164551.z));
				#if defined( TVE_PIVOT_OFF )
				float3 staticSwitch229_g164551 = _Vector0;
				#elif defined( TVE_PIVOT_BAKED )
				float3 staticSwitch229_g164551 = appendResult60_g164561;
				#elif defined( TVE_PIVOT_PROC )
				float3 staticSwitch229_g164551 = appendResult234_g164551;
				#else
				float3 staticSwitch229_g164551 = _Vector0;
				#endif
				half3 PivotOS149_g164551 = staticSwitch229_g164551;
				float3 temp_output_122_0_g164557 = PivotOS149_g164551;
				float3 PivotsOnly105_g164557 = (mul( unity_ObjectToWorld, float4( temp_output_122_0_g164557 , 0.0 ) ).xyz).xyz;
				half3 ObjectData20_g164559 = ( appendResult20_g164557 + PivotsOnly105_g164557 );
				half3 WorldData19_g164559 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g164559 = WorldData19_g164559;
				#else
				float3 staticSwitch14_g164559 = ObjectData20_g164559;
				#endif
				float3 temp_output_124_0_g164557 = staticSwitch14_g164559;
				float3 temp_output_237_7_g164551 = temp_output_124_0_g164557;
				#if defined( TVE_PIVOT_OFF )
				float3 staticSwitch236_g164551 = temp_output_239_7_g164551;
				#elif defined( TVE_PIVOT_BAKED )
				float3 staticSwitch236_g164551 = temp_output_237_7_g164551;
				#elif defined( TVE_PIVOT_PROC )
				float3 staticSwitch236_g164551 = temp_output_237_7_g164551;
				#else
				float3 staticSwitch236_g164551 = temp_output_239_7_g164551;
				#endif
				float3 vertexToFrag76_g164551 = staticSwitch236_g164551;
				half3 PivotWS121_g164551 = vertexToFrag76_g164551;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g164551 = ( PositionWS122_g164551 - PivotWS121_g164551 );
				#else
				float3 staticSwitch204_g164551 = PositionWS122_g164551;
				#endif
				half3 PositionWO132_g164551 = ( staticSwitch204_g164551 - TVE_WorldOrigin );
				float3 In_PositionWO16_g164565 = PositionWO132_g164551;
				float3 In_PositionRawOS16_g164565 = PositionOS131_g164551;
				float3 In_PositionAddOS16_g164565 = float3( 0,0,0 );
				float3 In_PivotOS16_g164565 = PivotOS149_g164551;
				float3 In_PivotWS16_g164565 = PivotWS121_g164551;
				half3 PivotWO133_g164551 = ( PivotWS121_g164551 - TVE_WorldOrigin );
				float3 In_PivotWO16_g164565 = PivotWO133_g164551;
				half3 NormalOS134_g164551 = v.normal;
				float3 In_NormalOS16_g164565 = NormalOS134_g164551;
				float3 ase_worldNormal = UnityObjectToWorldNormal(v.normal);
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g164551 = normalizedWorldNormal;
				float3 In_NormalWS16_g164565 = Normal_WS95_g164551;
				float3 In_NormalRawOS16_g164565 = NormalOS134_g164551;
				float3 objToWorldDir298_g164551 = normalize( mul( unity_ObjectToWorld, float4( v.normal, 0 ) ).xyz );
				half3 Normal_RawWS136_g164551 = objToWorldDir298_g164551;
				float3 In_NormalRawWS16_g164565 = Normal_RawWS136_g164551;
				half4 TangentlOS153_g164551 = v.tangent;
				float4 In_TangentOS16_g164565 = TangentlOS153_g164551;
				float3 normalizeResult296_g164551 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g164551 ) );
				half3 ViewDirWS169_g164551 = normalizeResult296_g164551;
				float3 In_ViewDirWS16_g164565 = ViewDirWS169_g164551;
				half4 VertexMasks171_g164551 = v.ase_color;
				float4 In_VertexData16_g164565 = VertexMasks171_g164551;
				float4 break33_g164564 = _object_phase_mode;
				float temp_output_30_0_g164564 = ( v.ase_color.r * break33_g164564.x );
				float temp_output_29_0_g164564 = ( v.ase_color.g * break33_g164564.y );
				float temp_output_31_0_g164564 = ( v.ase_color.b * break33_g164564.z );
				float temp_output_28_0_g164564 = ( temp_output_30_0_g164564 + temp_output_29_0_g164564 + temp_output_31_0_g164564 + ( v.ase_color.a * break33_g164564.w ) );
				float3 break243_g164551 = PivotWO133_g164551;
				float temp_output_315_0_g164551 = (frac( ( temp_output_28_0_g164564 + ( break243_g164551.x + break243_g164551.z ) ) )*2.0 + -1.0);
				float4 appendResult177_g164551 = (float4(1.0 , 1.0 , temp_output_315_0_g164551 , 1.0));
				half4 MotionMasks176_g164551 = appendResult177_g164551;
				float4 In_MotionData16_g164565 = MotionMasks176_g164551;
				half Object_HeightValue267_g164551 = _ObjectHeightValue;
				half Object_RadiusValue268_g164551 = _ObjectRadiusValue;
				half Bounds_HeightMask274_g164551 = saturate( ( (PositionOS131_g164551).y / Object_HeightValue267_g164551 ) );
				half Bounds_SphereMask282_g164551 = saturate( ( length( PositionOS131_g164551 ) / max( Object_HeightValue267_g164551 , Object_RadiusValue268_g164551 ) ) );
				float4 appendResult253_g164551 = (float4(Object_HeightValue267_g164551 , Object_RadiusValue268_g164551 , Bounds_HeightMask274_g164551 , Bounds_SphereMask282_g164551));
				half4 BoundsData254_g164551 = appendResult253_g164551;
				float4 In_BoundsData16_g164565 = BoundsData254_g164551;
				float4 In_RotationData16_g164565 = float4( 0,0,0,0 );
				Data16_g164565.Dummy = In_Dummy16_g164565;
				Data16_g164565.PositionOS = In_PositionOS16_g164565;
				Data16_g164565.PositionWS = In_PositionWS16_g164565;
				Data16_g164565.PositionWO = In_PositionWO16_g164565;
				Data16_g164565.PositionRawOS = In_PositionRawOS16_g164565;
				Data16_g164565.PositionAddOS = In_PositionAddOS16_g164565;
				Data16_g164565.PivotOS = In_PivotOS16_g164565;
				Data16_g164565.PivotWS = In_PivotWS16_g164565;
				Data16_g164565.PivotWO = In_PivotWO16_g164565;
				Data16_g164565.NormalOS = In_NormalOS16_g164565;
				Data16_g164565.NormalWS = In_NormalWS16_g164565;
				Data16_g164565.NormalRawOS = In_NormalRawOS16_g164565;
				Data16_g164565.NormalRawWS = In_NormalRawWS16_g164565;
				Data16_g164565.TangentOS = In_TangentOS16_g164565;
				Data16_g164565.ViewDirWS = In_ViewDirWS16_g164565;
				Data16_g164565.VertexData = In_VertexData16_g164565;
				Data16_g164565.MotionData = In_MotionData16_g164565;
				Data16_g164565.BoundsData = In_BoundsData16_g164565;
				Data16_g164565.RotationData = In_RotationData16_g164565;
				TVEModelData Data15_g174347 = Data16_g164565;
				float Out_Dummy15_g174347 = 0;
				float3 Out_PositionOS15_g174347 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174347 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174347 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174347 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174347 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174347 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174347 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174347 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174347 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174347 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174347 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174347 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174347 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174347 = float3( 0,0,0 );
				float4 Out_VertexData15_g174347 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174347 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174347 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174347 = float4( 0,0,0,0 );
				Out_Dummy15_g174347 = Data15_g174347.Dummy;
				Out_PositionOS15_g174347 = Data15_g174347.PositionOS;
				Out_PositionWS15_g174347 = Data15_g174347.PositionWS;
				Out_PositionWO15_g174347 = Data15_g174347.PositionWO;
				Out_PositionRawOS15_g174347 = Data15_g174347.PositionRawOS;
				Out_PositionAddOS15_g174347 = Data15_g174347.PositionAddOS;
				Out_PivotOS15_g174347 = Data15_g174347.PivotOS;
				Out_PivotWS15_g174347 = Data15_g174347.PivotWS;
				Out_PivotWO15_g174347 = Data15_g174347.PivotWO;
				Out_NormalOS15_g174347 = Data15_g174347.NormalOS;
				Out_NormalWS15_g174347 = Data15_g174347.NormalWS;
				Out_NormalRawOS15_g174347 = Data15_g174347.NormalRawOS;
				Out_NormalRawWS15_g174347 = Data15_g174347.NormalRawWS;
				Out_TangentOS15_g174347 = Data15_g174347.TangentOS;
				Out_ViewDirWS15_g174347 = Data15_g174347.ViewDirWS;
				Out_VertexData15_g174347 = Data15_g174347.VertexData;
				Out_MotionData15_g174347 = Data15_g174347.MotionData;
				Out_BoundsData15_g174347 = Data15_g174347.BoundsData;
				Out_RotationData15_g174347 = Data15_g174347.RotationData;
				float3 temp_output_218_24_g174345 = Out_PivotOS15_g174347;
				float3 In_PositionOS16_g174346 = ( Out_PositionOS15_g174347 - temp_output_218_24_g174345 );
				float3 In_PositionWS16_g174346 = Out_PositionWS15_g174347;
				float3 In_PositionWO16_g174346 = Out_PositionWO15_g174347;
				float3 In_PositionRawOS16_g174346 = Out_PositionRawOS15_g174347;
				float3 In_PositionAddOS16_g174346 = Out_PositionAddOS15_g174347;
				float3 In_PivotOS16_g174346 = temp_output_218_24_g174345;
				float3 In_PivotWS16_g174346 = Out_PivotWS15_g174347;
				float3 In_PivotWO16_g174346 = Out_PivotWO15_g174347;
				float3 In_NormalOS16_g174346 = Out_NormalOS15_g174347;
				float3 In_NormalWS16_g174346 = Out_NormalWS15_g174347;
				float3 In_NormalRawOS16_g174346 = Out_NormalRawOS15_g174347;
				float3 In_NormalRawWS16_g174346 = Out_NormalRawWS15_g174347;
				float4 In_TangentOS16_g174346 = Out_TangentOS15_g174347;
				float3 In_ViewDirWS16_g174346 = Out_ViewDirWS15_g174347;
				float4 In_VertexData16_g174346 = Out_VertexData15_g174347;
				float4 In_MotionData16_g174346 = Out_MotionData15_g174347;
				float4 In_BoundsData16_g174346 = Out_BoundsData15_g174347;
				float4 In_RotationData16_g174346 = Out_RotationData15_g174347;
				Data16_g174346.Dummy = In_Dummy16_g174346;
				Data16_g174346.PositionOS = In_PositionOS16_g174346;
				Data16_g174346.PositionWS = In_PositionWS16_g174346;
				Data16_g174346.PositionWO = In_PositionWO16_g174346;
				Data16_g174346.PositionRawOS = In_PositionRawOS16_g174346;
				Data16_g174346.PositionAddOS = In_PositionAddOS16_g174346;
				Data16_g174346.PivotOS = In_PivotOS16_g174346;
				Data16_g174346.PivotWS = In_PivotWS16_g174346;
				Data16_g174346.PivotWO = In_PivotWO16_g174346;
				Data16_g174346.NormalOS = In_NormalOS16_g174346;
				Data16_g174346.NormalWS = In_NormalWS16_g174346;
				Data16_g174346.NormalRawOS = In_NormalRawOS16_g174346;
				Data16_g174346.NormalRawWS = In_NormalRawWS16_g174346;
				Data16_g174346.TangentOS = In_TangentOS16_g174346;
				Data16_g174346.ViewDirWS = In_ViewDirWS16_g174346;
				Data16_g174346.VertexData = In_VertexData16_g174346;
				Data16_g174346.MotionData = In_MotionData16_g174346;
				Data16_g174346.BoundsData = In_BoundsData16_g174346;
				Data16_g174346.RotationData = In_RotationData16_g174346;
				TVEModelData Data15_g174383 = Data16_g174346;
				float Out_Dummy15_g174383 = 0;
				float3 Out_PositionOS15_g174383 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174383 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174383 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174383 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174383 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174383 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174383 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174383 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174383 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174383 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174383 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174383 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174383 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174383 = float3( 0,0,0 );
				float4 Out_VertexData15_g174383 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174383 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174383 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174383 = float4( 0,0,0,0 );
				Out_Dummy15_g174383 = Data15_g174383.Dummy;
				Out_PositionOS15_g174383 = Data15_g174383.PositionOS;
				Out_PositionWS15_g174383 = Data15_g174383.PositionWS;
				Out_PositionWO15_g174383 = Data15_g174383.PositionWO;
				Out_PositionRawOS15_g174383 = Data15_g174383.PositionRawOS;
				Out_PositionAddOS15_g174383 = Data15_g174383.PositionAddOS;
				Out_PivotOS15_g174383 = Data15_g174383.PivotOS;
				Out_PivotWS15_g174383 = Data15_g174383.PivotWS;
				Out_PivotWO15_g174383 = Data15_g174383.PivotWO;
				Out_NormalOS15_g174383 = Data15_g174383.NormalOS;
				Out_NormalWS15_g174383 = Data15_g174383.NormalWS;
				Out_NormalRawOS15_g174383 = Data15_g174383.NormalRawOS;
				Out_NormalRawWS15_g174383 = Data15_g174383.NormalRawWS;
				Out_TangentOS15_g174383 = Data15_g174383.TangentOS;
				Out_ViewDirWS15_g174383 = Data15_g174383.ViewDirWS;
				Out_VertexData15_g174383 = Data15_g174383.VertexData;
				Out_MotionData15_g174383 = Data15_g174383.MotionData;
				Out_BoundsData15_g174383 = Data15_g174383.BoundsData;
				Out_RotationData15_g174383 = Data15_g174383.RotationData;
				half3 Model_PositionOS147_g174382 = Out_PositionOS15_g174383;
				float3 ase_worldViewDir = UnityWorldSpaceViewDir(ase_worldPos);
				ase_worldViewDir = Unity_SafeNormalize( ase_worldViewDir );
				float4x4 break117_g174384 = unity_CameraToWorld;
				float3 appendResult118_g174384 = (float3(break117_g174384[ 0 ][ 2 ] , break117_g174384[ 1 ][ 2 ] , break117_g174384[ 2 ][ 2 ]));
				float3 lerpResult209_g174382 = lerp( ase_worldViewDir , -appendResult118_g174384 , unity_OrthoParams.w);
				float3 break201_g174382 = cross( lerpResult209_g174382 , half3(0,1,0) );
				float3 appendResult196_g174382 = (float3(-break201_g174382.z , 0.0 , break201_g174382.x));
				float dotResult189_g174382 = dot( ase_worldViewDir , float3(0,1,0) );
				float saferPower192_g174382 = abs( dotResult189_g174382 );
				#ifdef TVE_PERSPECTIVE
				float3 staticSwitch211_g174382 = ( Model_PositionOS147_g174382 + ( mul( unity_WorldToObject, float4( appendResult196_g174382 , 0.0 ) ).xyz * _PerspectiveIntensityValue * pow( saferPower192_g174382 , _PerspectiveAngleValue ) * saturate( (Model_PositionOS147_g174382).y ) ) );
				#else
				float3 staticSwitch211_g174382 = Model_PositionOS147_g174382;
				#endif
				half3 Final_Position178_g174382 = staticSwitch211_g174382;
				float3 In_PositionOS16_g174385 = Final_Position178_g174382;
				float3 In_PositionWS16_g174385 = Out_PositionWS15_g174383;
				float3 In_PositionWO16_g174385 = Out_PositionWO15_g174383;
				float3 In_PositionRawOS16_g174385 = Out_PositionRawOS15_g174383;
				float3 In_PositionAddOS16_g174385 = Out_PositionAddOS15_g174383;
				float3 In_PivotOS16_g174385 = Out_PivotOS15_g174383;
				float3 In_PivotWS16_g174385 = Out_PivotWS15_g174383;
				float3 In_PivotWO16_g174385 = Out_PivotWO15_g174383;
				float3 In_NormalOS16_g174385 = Out_NormalOS15_g174383;
				float3 In_NormalWS16_g174385 = Out_NormalWS15_g174383;
				float3 In_NormalRawOS16_g174385 = Out_NormalRawOS15_g174383;
				float3 In_NormalRawWS16_g174385 = Out_NormalRawWS15_g174383;
				float4 In_TangentOS16_g174385 = Out_TangentOS15_g174383;
				float3 In_ViewDirWS16_g174385 = Out_ViewDirWS15_g174383;
				float4 In_VertexData16_g174385 = Out_VertexData15_g174383;
				float4 In_MotionData16_g174385 = Out_MotionData15_g174383;
				float4 In_BoundsData16_g174385 = Out_BoundsData15_g174383;
				float4 In_RotationData16_g174385 = Out_RotationData15_g174383;
				Data16_g174385.Dummy = In_Dummy16_g174385;
				Data16_g174385.PositionOS = In_PositionOS16_g174385;
				Data16_g174385.PositionWS = In_PositionWS16_g174385;
				Data16_g174385.PositionWO = In_PositionWO16_g174385;
				Data16_g174385.PositionRawOS = In_PositionRawOS16_g174385;
				Data16_g174385.PositionAddOS = In_PositionAddOS16_g174385;
				Data16_g174385.PivotOS = In_PivotOS16_g174385;
				Data16_g174385.PivotWS = In_PivotWS16_g174385;
				Data16_g174385.PivotWO = In_PivotWO16_g174385;
				Data16_g174385.NormalOS = In_NormalOS16_g174385;
				Data16_g174385.NormalWS = In_NormalWS16_g174385;
				Data16_g174385.NormalRawOS = In_NormalRawOS16_g174385;
				Data16_g174385.NormalRawWS = In_NormalRawWS16_g174385;
				Data16_g174385.TangentOS = In_TangentOS16_g174385;
				Data16_g174385.ViewDirWS = In_ViewDirWS16_g174385;
				Data16_g174385.VertexData = In_VertexData16_g174385;
				Data16_g174385.MotionData = In_MotionData16_g174385;
				Data16_g174385.BoundsData = In_BoundsData16_g174385;
				Data16_g174385.RotationData = In_RotationData16_g174385;
				TVEModelData Data15_g174421 = Data16_g174385;
				float Out_Dummy15_g174421 = 0;
				float3 Out_PositionOS15_g174421 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174421 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174421 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174421 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174421 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174421 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174421 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174421 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174421 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174421 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174421 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174421 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174421 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174421 = float3( 0,0,0 );
				float4 Out_VertexData15_g174421 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174421 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174421 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174421 = float4( 0,0,0,0 );
				Out_Dummy15_g174421 = Data15_g174421.Dummy;
				Out_PositionOS15_g174421 = Data15_g174421.PositionOS;
				Out_PositionWS15_g174421 = Data15_g174421.PositionWS;
				Out_PositionWO15_g174421 = Data15_g174421.PositionWO;
				Out_PositionRawOS15_g174421 = Data15_g174421.PositionRawOS;
				Out_PositionAddOS15_g174421 = Data15_g174421.PositionAddOS;
				Out_PivotOS15_g174421 = Data15_g174421.PivotOS;
				Out_PivotWS15_g174421 = Data15_g174421.PivotWS;
				Out_PivotWO15_g174421 = Data15_g174421.PivotWO;
				Out_NormalOS15_g174421 = Data15_g174421.NormalOS;
				Out_NormalWS15_g174421 = Data15_g174421.NormalWS;
				Out_NormalRawOS15_g174421 = Data15_g174421.NormalRawOS;
				Out_NormalRawWS15_g174421 = Data15_g174421.NormalRawWS;
				Out_TangentOS15_g174421 = Data15_g174421.TangentOS;
				Out_ViewDirWS15_g174421 = Data15_g174421.ViewDirWS;
				Out_VertexData15_g174421 = Data15_g174421.VertexData;
				Out_MotionData15_g174421 = Data15_g174421.MotionData;
				Out_BoundsData15_g174421 = Data15_g174421.BoundsData;
				Out_RotationData15_g174421 = Data15_g174421.RotationData;
				half3 Model_PositionOS147_g174419 = Out_PositionOS15_g174421;
				float3 temp_cast_5 = (1.0).xxx;
				float3 temp_output_210_19_g174419 = Out_PivotWO15_g174421;
				half3 Model_PivotWO162_g174419 = temp_output_210_19_g174419;
				float temp_output_7_0_g174420 = _SizeFadeDistMaxValue;
				float temp_output_10_0_g174420 = ( _SizeFadeDistMinValue - temp_output_7_0_g174420 );
				float localBuildGlobalData204_g173897 = ( 0.0 );
				TVEGlobalData Data204_g173897 = (TVEGlobalData)0;
				half Dummy211_g173897 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g173897 = Dummy211_g173897;
				float temp_output_82_0_g173907 = _GlobalCoatLayerValue;
				float temp_output_19_0_g173909 = TVE_CoatLayers[(int)temp_output_82_0_g173907];
				TVEModelData Data16_g164566 = (TVEModelData)0;
				float In_Dummy16_g164566 = 0.0;
				float3 In_PositionWS16_g164566 = PositionWS122_g164551;
				float3 In_PositionWO16_g164566 = PositionWO132_g164551;
				float3 In_PivotWS16_g164566 = PivotWS121_g164551;
				float3 In_PivotWO16_g164566 = PivotWO133_g164551;
				float3 In_NormalWS16_g164566 = Normal_WS95_g164551;
				float3 In_ViewDirWS16_g164566 = ViewDirWS169_g164551;
				float4 In_VertexData16_g164566 = VertexMasks171_g164551;
				float4 In_BoundsData16_g164566 = float4( 1,1,1,1 );
				Data16_g164566.Dummy = In_Dummy16_g164566;
				Data16_g164566.PositionWS = In_PositionWS16_g164566;
				Data16_g164566.PositionWO = In_PositionWO16_g164566;
				Data16_g164566.PivotWS = In_PivotWS16_g164566;
				Data16_g164566.PivotWO = In_PivotWO16_g164566;
				Data16_g164566.NormalWS = In_NormalWS16_g164566;
				Data16_g164566.ViewDirWS = In_ViewDirWS16_g164566;
				Data16_g164566.VertexData = In_VertexData16_g164566;
				Data16_g164566.BoundsData = In_BoundsData16_g164566;
				TVEModelData Data15_g173979 = Data16_g164566;
				float Out_Dummy15_g173979 = 0;
				float3 Out_PositionWS15_g173979 = float3( 0,0,0 );
				float3 Out_PositionWO15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWS15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWO15_g173979 = float3( 0,0,0 );
				float3 Out_NormalWS15_g173979 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g173979 = float3( 0,0,0 );
				float4 Out_VertexData15_g173979 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g173979 = float4( 0,0,0,0 );
				Out_Dummy15_g173979 = Data15_g173979.Dummy;
				Out_PositionWS15_g173979 = Data15_g173979.PositionWS;
				Out_PositionWO15_g173979 = Data15_g173979.PositionWO;
				Out_PivotWS15_g173979 = Data15_g173979.PivotWS;
				Out_PivotWO15_g173979 = Data15_g173979.PivotWO;
				Out_NormalWS15_g173979 = Data15_g173979.NormalWS;
				Out_ViewDirWS15_g173979 = Data15_g173979.ViewDirWS;
				Out_VertexData15_g173979 = Data15_g173979.VertexData;
				Out_BoundsData15_g173979 = Data15_g173979.BoundsData;
				half3 Model_PositionWS143_g173897 = Out_PositionWS15_g173979;
				half3 Model_PivotWS145_g173897 = Out_PivotWS15_g173979;
				float3 lerpResult300_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalCoatPivotValue);
				half3 Input_Position180_g173910 = lerpResult300_g173897;
				float2 temp_output_75_0_g173910 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_82_0_g173910 = temp_output_82_0_g173907;
				float2 temp_output_119_0_g173910 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_7_0_g173915 = 1.0;
				float temp_output_10_0_g173915 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173915 );
				float4 lerpResult131_g173910 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173910,temp_output_82_0_g173910), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173910,temp_output_82_0_g173910), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173910 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173915 ) / temp_output_10_0_g173915 ) ));
				float4 temp_output_17_0_g173909 = lerpResult131_g173910;
				float4 temp_output_3_0_g173909 = TVE_CoatParams;
				float4 ifLocalVar18_g173909 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173909 >= 0.5 )
				ifLocalVar18_g173909 = temp_output_17_0_g173909;
				else
				ifLocalVar18_g173909 = temp_output_3_0_g173909;
				float4 lerpResult22_g173909 = lerp( temp_output_3_0_g173909 , temp_output_17_0_g173909 , temp_output_19_0_g173909);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173909 = lerpResult22_g173909;
				#else
				float4 staticSwitch24_g173909 = ifLocalVar18_g173909;
				#endif
				half4 Coat_Params302_g173897 = staticSwitch24_g173909;
				float4 In_CoatParams204_g173897 = Coat_Params302_g173897;
				float temp_output_82_0_g173898 = _GlobalPaintLayerValue;
				float temp_output_19_0_g173900 = TVE_PaintLayers[(int)temp_output_82_0_g173898];
				float3 lerpResult85_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalPaintPivotValue);
				half3 Input_Position180_g173901 = lerpResult85_g173897;
				float2 temp_output_75_0_g173901 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_82_0_g173901 = temp_output_82_0_g173898;
				float2 temp_output_119_0_g173901 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_7_0_g173906 = 1.0;
				float temp_output_10_0_g173906 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173906 );
				float4 lerpResult131_g173901 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173901,temp_output_82_0_g173901), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173901,temp_output_82_0_g173901), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173901 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173906 ) / temp_output_10_0_g173906 ) ));
				float4 temp_output_17_0_g173900 = lerpResult131_g173901;
				float4 temp_output_3_0_g173900 = TVE_PaintParams;
				float4 ifLocalVar18_g173900 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173900 >= 0.5 )
				ifLocalVar18_g173900 = temp_output_17_0_g173900;
				else
				ifLocalVar18_g173900 = temp_output_3_0_g173900;
				float4 lerpResult22_g173900 = lerp( temp_output_3_0_g173900 , temp_output_17_0_g173900 , temp_output_19_0_g173900);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173900 = lerpResult22_g173900;
				#else
				float4 staticSwitch24_g173900 = ifLocalVar18_g173900;
				#endif
				half4 Paint_Params71_g173897 = staticSwitch24_g173900;
				float4 In_PaintParams204_g173897 = Paint_Params71_g173897;
				float temp_output_82_0_g173916 = _GlobalGlowLayerValue;
				float temp_output_19_0_g173918 = TVE_GlowLayers[(int)temp_output_82_0_g173916];
				float3 lerpResult247_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalGlowPivotValue);
				half3 Input_Position180_g173919 = lerpResult247_g173897;
				float2 temp_output_75_0_g173919 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_82_0_g173919 = temp_output_82_0_g173916;
				float2 temp_output_119_0_g173919 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_7_0_g173924 = 1.0;
				float temp_output_10_0_g173924 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173924 );
				float4 lerpResult131_g173919 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173919,temp_output_82_0_g173919), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173919,temp_output_82_0_g173919), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173919 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173924 ) / temp_output_10_0_g173924 ) ));
				float4 temp_output_17_0_g173918 = lerpResult131_g173919;
				float4 temp_output_3_0_g173918 = TVE_GlowParams;
				float4 ifLocalVar18_g173918 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173918 >= 0.5 )
				ifLocalVar18_g173918 = temp_output_17_0_g173918;
				else
				ifLocalVar18_g173918 = temp_output_3_0_g173918;
				float4 lerpResult22_g173918 = lerp( temp_output_3_0_g173918 , temp_output_17_0_g173918 , temp_output_19_0_g173918);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173918 = lerpResult22_g173918;
				#else
				float4 staticSwitch24_g173918 = ifLocalVar18_g173918;
				#endif
				half4 Glow_Params248_g173897 = staticSwitch24_g173918;
				float4 In_GlowParams204_g173897 = Glow_Params248_g173897;
				float temp_output_132_0_g173961 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g173963 = TVE_AtmoLayers[(int)temp_output_132_0_g173961];
				float3 lerpResult104_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalAtmoPivotValue);
				half3 Input_Position180_g173964 = lerpResult104_g173897;
				float2 temp_output_75_0_g173964 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_82_0_g173964 = temp_output_132_0_g173961;
				float2 temp_output_119_0_g173964 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_7_0_g173969 = 1.0;
				float temp_output_10_0_g173969 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173969 );
				float4 lerpResult131_g173964 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173964,temp_output_82_0_g173964), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173964,temp_output_82_0_g173964), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173964 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173969 ) / temp_output_10_0_g173969 ) ));
				float4 temp_output_17_0_g173963 = lerpResult131_g173964;
				float4 temp_output_3_0_g173963 = TVE_AtmoParams;
				float4 ifLocalVar18_g173963 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173963 >= 0.5 )
				ifLocalVar18_g173963 = temp_output_17_0_g173963;
				else
				ifLocalVar18_g173963 = temp_output_3_0_g173963;
				float4 lerpResult22_g173963 = lerp( temp_output_3_0_g173963 , temp_output_17_0_g173963 , temp_output_19_0_g173963);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173963 = lerpResult22_g173963;
				#else
				float4 staticSwitch24_g173963 = ifLocalVar18_g173963;
				#endif
				half4 Atmo_Params80_g173897 = staticSwitch24_g173963;
				float4 In_AtmoParams204_g173897 = Atmo_Params80_g173897;
				float temp_output_132_0_g173970 = _GlobalFadeLayerValue;
				float temp_output_19_0_g173972 = TVE_FadeLayers[(int)temp_output_132_0_g173970];
				float3 lerpResult382_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFadePivotValue);
				half3 Input_Position180_g173973 = lerpResult382_g173897;
				float2 temp_output_75_0_g173973 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_82_0_g173973 = temp_output_132_0_g173970;
				float2 temp_output_119_0_g173973 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_7_0_g173978 = 1.0;
				float temp_output_10_0_g173978 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173978 );
				float4 lerpResult131_g173973 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173973,temp_output_82_0_g173973), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173973,temp_output_82_0_g173973), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173973 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173978 ) / temp_output_10_0_g173978 ) ));
				float4 temp_output_17_0_g173972 = lerpResult131_g173973;
				float4 temp_output_3_0_g173972 = TVE_FadeParams;
				float4 ifLocalVar18_g173972 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173972 >= 0.5 )
				ifLocalVar18_g173972 = temp_output_17_0_g173972;
				else
				ifLocalVar18_g173972 = temp_output_3_0_g173972;
				float4 lerpResult22_g173972 = lerp( temp_output_3_0_g173972 , temp_output_17_0_g173972 , temp_output_19_0_g173972);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173972 = lerpResult22_g173972;
				#else
				float4 staticSwitch24_g173972 = ifLocalVar18_g173972;
				#endif
				half4 Fade_Params387_g173897 = staticSwitch24_g173972;
				float4 In_FadeParams204_g173897 = Fade_Params387_g173897;
				float temp_output_130_0_g173952 = _GlobalFormLayerValue;
				float temp_output_19_0_g173954 = TVE_FormLayers[(int)temp_output_130_0_g173952];
				float3 lerpResult168_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFormPivotValue);
				half3 Input_Position180_g173955 = lerpResult168_g173897;
				float2 temp_output_75_0_g173955 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_82_0_g173955 = temp_output_130_0_g173952;
				float2 temp_output_119_0_g173955 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_7_0_g173960 = 1.0;
				float temp_output_10_0_g173960 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173960 );
				float4 lerpResult131_g173955 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173955,temp_output_82_0_g173955), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173955,temp_output_82_0_g173955), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173955 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173960 ) / temp_output_10_0_g173960 ) ));
				float4 temp_output_17_0_g173954 = lerpResult131_g173955;
				float4 temp_output_3_0_g173954 = TVE_FormParams;
				float4 ifLocalVar18_g173954 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173954 >= 0.5 )
				ifLocalVar18_g173954 = temp_output_17_0_g173954;
				else
				ifLocalVar18_g173954 = temp_output_3_0_g173954;
				float4 lerpResult22_g173954 = lerp( temp_output_3_0_g173954 , temp_output_17_0_g173954 , temp_output_19_0_g173954);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173954 = lerpResult22_g173954;
				#else
				float4 staticSwitch24_g173954 = ifLocalVar18_g173954;
				#endif
				half4 Form_Params112_g173897 = staticSwitch24_g173954;
				float4 In_FormParams204_g173897 = Form_Params112_g173897;
				half4 Land_Params375_g173897 = TVE_LandParams;
				float4 In_LandParams204_g173897 = Land_Params375_g173897;
				float temp_output_136_0_g173943 = _GlobalWindLayerValue;
				float temp_output_19_0_g173945 = TVE_WindLayers[(int)temp_output_136_0_g173943];
				half3 Input_Position180_g173946 = Model_PositionWS143_g173897;
				float2 temp_output_75_0_g173946 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_82_0_g173946 = temp_output_136_0_g173943;
				float2 temp_output_119_0_g173946 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_7_0_g173951 = 1.0;
				float temp_output_10_0_g173951 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173951 );
				float4 lerpResult131_g173946 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173946,temp_output_82_0_g173946), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173946,temp_output_82_0_g173946), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173946 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173951 ) / temp_output_10_0_g173951 ) ));
				float4 temp_output_17_0_g173945 = lerpResult131_g173946;
				float4 temp_output_3_0_g173945 = TVE_WindParams;
				float4 ifLocalVar18_g173945 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173945 >= 0.5 )
				ifLocalVar18_g173945 = temp_output_17_0_g173945;
				else
				ifLocalVar18_g173945 = temp_output_3_0_g173945;
				float4 lerpResult22_g173945 = lerp( temp_output_3_0_g173945 , temp_output_17_0_g173945 , temp_output_19_0_g173945);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173945 = lerpResult22_g173945;
				#else
				float4 staticSwitch24_g173945 = ifLocalVar18_g173945;
				#endif
				half4 Wind_Params88_g173897 = staticSwitch24_g173945;
				float4 In_WindParams204_g173897 = Wind_Params88_g173897;
				float temp_output_136_0_g173925 = _GlobalPushLayerValue;
				float temp_output_19_0_g173926 = TVE_PushLayers[(int)temp_output_136_0_g173925];
				half3 Input_Position180_g173927 = Model_PivotWS145_g173897;
				float2 temp_output_75_0_g173927 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_82_0_g173927 = temp_output_136_0_g173925;
				float2 temp_output_119_0_g173927 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_7_0_g173932 = 1.0;
				float temp_output_10_0_g173932 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173932 );
				float4 lerpResult131_g173927 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173927,temp_output_82_0_g173927), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173927,temp_output_82_0_g173927), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173927 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173932 ) / temp_output_10_0_g173932 ) ));
				float4 temp_output_17_0_g173926 = lerpResult131_g173927;
				float4 temp_output_3_0_g173926 = TVE_PushParams;
				float4 ifLocalVar18_g173926 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173926 >= 0.5 )
				ifLocalVar18_g173926 = temp_output_17_0_g173926;
				else
				ifLocalVar18_g173926 = temp_output_3_0_g173926;
				float4 lerpResult22_g173926 = lerp( temp_output_3_0_g173926 , temp_output_17_0_g173926 , temp_output_19_0_g173926);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173926 = lerpResult22_g173926;
				#else
				float4 staticSwitch24_g173926 = ifLocalVar18_g173926;
				#endif
				half4 Push_Params335_g173897 = staticSwitch24_g173926;
				float4 In_PushParams204_g173897 = Push_Params335_g173897;
				Data204_g173897.Dummy = In_Dummy204_g173897;
				Data204_g173897.CoatParams = In_CoatParams204_g173897;
				Data204_g173897.PaintParams = In_PaintParams204_g173897;
				Data204_g173897.GlowParams = In_GlowParams204_g173897;
				Data204_g173897.AtmoParams = In_AtmoParams204_g173897;
				Data204_g173897.FadeParams = In_FadeParams204_g173897;
				Data204_g173897.FormParams= In_FormParams204_g173897;
				Data204_g173897.LandParams = In_LandParams204_g173897;
				Data204_g173897.WindParams = In_WindParams204_g173897;
				Data204_g173897.PushParams = In_PushParams204_g173897;
				TVEGlobalData Data15_g174423 = Data204_g173897;
				float Out_Dummy15_g174423 = 0;
				float4 Out_CoatParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174423 = float4( 0,0,0,0 );
				Out_Dummy15_g174423 = Data15_g174423.Dummy;
				Out_CoatParams15_g174423 = Data15_g174423.CoatParams;
				Out_PaintParams15_g174423 = Data15_g174423.PaintParams;
				Out_GlowParams15_g174423 = Data15_g174423.GlowParams;
				Out_AtmoParams15_g174423= Data15_g174423.AtmoParams;
				Out_FadeParams15_g174423= Data15_g174423.FadeParams;
				Out_FormParams15_g174423 = Data15_g174423.FormParams;
				Out_LandParams15_g174423 = Data15_g174423.LandParams;
				Out_WindParams15_g174423 = Data15_g174423.WindParams;
				Out_PushParams15_g174423 = Data15_g174423.PushParams;
				half4 Input_FormParams188_g174419 = Out_FormParams15_g174423;
				float lerpResult213_g174419 = lerp( 1.0 , (Input_FormParams188_g174419).w , TVE_IsEnabled);
				#ifdef TVE_SIZEFADE_ELEMENT
				float staticSwitch194_g174419 = lerpResult213_g174419;
				#else
				float staticSwitch194_g174419 = 1.0;
				#endif
				half SizeFade_MaskGlobal192_g174419 = staticSwitch194_g174419;
				float temp_output_189_0_g174419 = ( saturate( ( ( distance( _WorldSpaceCameraPos , Model_PivotWO162_g174419 ) - temp_output_7_0_g174420 ) / ( temp_output_10_0_g174420 + 0.0001 ) ) ) * _SizeFadeScaleValue * SizeFade_MaskGlobal192_g174419 );
				float3 appendResult200_g174419 = (float3(temp_output_189_0_g174419 , temp_output_189_0_g174419 , temp_output_189_0_g174419));
				float3 appendResult201_g174419 = (float3(1.0 , temp_output_189_0_g174419 , 1.0));
				float3 lerpResult202_g174419 = lerp( appendResult200_g174419 , appendResult201_g174419 , _SizeFadeScaleMode);
				float3 lerpResult184_g174419 = lerp( temp_cast_5 , lerpResult202_g174419 , _SizeFadeIntensityValue);
				float3 temp_output_167_0_g174419 = ( lerpResult184_g174419 * Model_PositionOS147_g174419 );
				#ifdef TVE_SIZEFADE
				float3 staticSwitch199_g174419 = temp_output_167_0_g174419;
				#else
				float3 staticSwitch199_g174419 = Model_PositionOS147_g174419;
				#endif
				half3 Final_Position178_g174419 = staticSwitch199_g174419;
				float3 In_PositionOS16_g174422 = Final_Position178_g174419;
				float3 In_PositionWS16_g174422 = Out_PositionWS15_g174421;
				float3 In_PositionWO16_g174422 = Out_PositionWO15_g174421;
				float3 In_PositionRawOS16_g174422 = Out_PositionRawOS15_g174421;
				float3 In_PositionAddOS16_g174422 = Out_PositionAddOS15_g174421;
				float3 temp_output_210_24_g174419 = Out_PivotOS15_g174421;
				float3 In_PivotOS16_g174422 = temp_output_210_24_g174419;
				float3 In_PivotWS16_g174422 = Out_PivotWS15_g174421;
				float3 In_PivotWO16_g174422 = temp_output_210_19_g174419;
				float3 In_NormalOS16_g174422 = Out_NormalOS15_g174421;
				float3 In_NormalWS16_g174422 = Out_NormalWS15_g174421;
				float3 In_NormalRawOS16_g174422 = Out_NormalRawOS15_g174421;
				float3 In_NormalRawWS16_g174422 = Out_NormalRawWS15_g174421;
				float4 In_TangentOS16_g174422 = Out_TangentOS15_g174421;
				float3 In_ViewDirWS16_g174422 = Out_ViewDirWS15_g174421;
				float4 In_VertexData16_g174422 = Out_VertexData15_g174421;
				float4 In_MotionData16_g174422 = Out_MotionData15_g174421;
				float4 In_BoundsData16_g174422 = Out_BoundsData15_g174421;
				float4 In_RotationData16_g174422 = Out_RotationData15_g174421;
				Data16_g174422.Dummy = In_Dummy16_g174422;
				Data16_g174422.PositionOS = In_PositionOS16_g174422;
				Data16_g174422.PositionWS = In_PositionWS16_g174422;
				Data16_g174422.PositionWO = In_PositionWO16_g174422;
				Data16_g174422.PositionRawOS = In_PositionRawOS16_g174422;
				Data16_g174422.PositionAddOS = In_PositionAddOS16_g174422;
				Data16_g174422.PivotOS = In_PivotOS16_g174422;
				Data16_g174422.PivotWS = In_PivotWS16_g174422;
				Data16_g174422.PivotWO = In_PivotWO16_g174422;
				Data16_g174422.NormalOS = In_NormalOS16_g174422;
				Data16_g174422.NormalWS = In_NormalWS16_g174422;
				Data16_g174422.NormalRawOS = In_NormalRawOS16_g174422;
				Data16_g174422.NormalRawWS = In_NormalRawWS16_g174422;
				Data16_g174422.TangentOS = In_TangentOS16_g174422;
				Data16_g174422.ViewDirWS = In_ViewDirWS16_g174422;
				Data16_g174422.VertexData = In_VertexData16_g174422;
				Data16_g174422.MotionData = In_MotionData16_g174422;
				Data16_g174422.BoundsData = In_BoundsData16_g174422;
				Data16_g174422.RotationData = In_RotationData16_g174422;
				TVEModelData Data15_g174573 = Data16_g174422;
				float Out_Dummy15_g174573 = 0;
				float3 Out_PositionOS15_g174573 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174573 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174573 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174573 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174573 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174573 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174573 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174573 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174573 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174573 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174573 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174573 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174573 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174573 = float3( 0,0,0 );
				float4 Out_VertexData15_g174573 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174573 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174573 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174573 = float4( 0,0,0,0 );
				Out_Dummy15_g174573 = Data15_g174573.Dummy;
				Out_PositionOS15_g174573 = Data15_g174573.PositionOS;
				Out_PositionWS15_g174573 = Data15_g174573.PositionWS;
				Out_PositionWO15_g174573 = Data15_g174573.PositionWO;
				Out_PositionRawOS15_g174573 = Data15_g174573.PositionRawOS;
				Out_PositionAddOS15_g174573 = Data15_g174573.PositionAddOS;
				Out_PivotOS15_g174573 = Data15_g174573.PivotOS;
				Out_PivotWS15_g174573 = Data15_g174573.PivotWS;
				Out_PivotWO15_g174573 = Data15_g174573.PivotWO;
				Out_NormalOS15_g174573 = Data15_g174573.NormalOS;
				Out_NormalWS15_g174573 = Data15_g174573.NormalWS;
				Out_NormalRawOS15_g174573 = Data15_g174573.NormalRawOS;
				Out_NormalRawWS15_g174573 = Data15_g174573.NormalRawWS;
				Out_TangentOS15_g174573 = Data15_g174573.TangentOS;
				Out_ViewDirWS15_g174573 = Data15_g174573.ViewDirWS;
				Out_VertexData15_g174573 = Data15_g174573.VertexData;
				Out_MotionData15_g174573 = Data15_g174573.MotionData;
				Out_BoundsData15_g174573 = Data15_g174573.BoundsData;
				Out_RotationData15_g174573 = Data15_g174573.RotationData;
				float3 temp_output_1567_0_g174563 = Out_PositionOS15_g174573;
				float3 In_PositionOS16_g174577 = temp_output_1567_0_g174563;
				float3 temp_output_1567_16_g174563 = Out_PositionWS15_g174573;
				float3 In_PositionWS16_g174577 = temp_output_1567_16_g174563;
				float3 temp_output_1567_17_g174563 = Out_PositionWO15_g174573;
				float3 In_PositionWO16_g174577 = temp_output_1567_17_g174563;
				float3 In_PositionRawOS16_g174577 = Out_PositionRawOS15_g174573;
				float3 temp_cast_39 = (0.0).xxx;
				half Small_Value2180_g174563 = _MotionSmallIntensityValue;
				float4 temp_output_1567_29_g174563 = Out_VertexData15_g174573;
				half4 Model_VertexMasks518_g174563 = temp_output_1567_29_g174563;
				float4 break1689_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174575 = _motion_small_vert_mode;
				float temp_output_30_0_g174575 = ( break1689_g174563.x * break33_g174575.x );
				float temp_output_29_0_g174575 = ( break1689_g174563.y * break33_g174575.y );
				float temp_output_31_0_g174575 = ( break1689_g174563.z * break33_g174575.z );
				float temp_output_28_0_g174575 = ( temp_output_30_0_g174575 + temp_output_29_0_g174575 + temp_output_31_0_g174575 + ( break1689_g174563.w * break33_g174575.w ) );
				float temp_output_1727_0_g174563 = temp_output_28_0_g174575;
				float4 temp_output_1567_30_g174563 = Out_BoundsData15_g174573;
				half4 Model_BoundsData1322_g174563 = temp_output_1567_30_g174563;
				float4 break33_g174578 = _motion_small_proc_mode;
				float temp_output_30_0_g174578 = ( (Model_BoundsData1322_g174563).z * break33_g174578.x );
				float temp_output_29_0_g174578 = ( (Model_BoundsData1322_g174563).w * break33_g174578.y );
				float temp_output_1734_0_g174563 = ( temp_output_30_0_g174578 + temp_output_29_0_g174578 );
				float lerpResult1906_g174563 = lerp( temp_output_1727_0_g174563 , temp_output_1734_0_g174563 , _motion_small_mask_mode);
				float enc1805_g174563 = v.ase_texcoord.z;
				float2 localDecodeFloatToVector21805_g174563 = DecodeFloatToVector2( enc1805_g174563 );
				float2 break1804_g174563 = localDecodeFloatToVector21805_g174563;
				half Small_Mask_Legacy1806_g174563 = break1804_g174563.x;
				#ifdef TVE_LEGACY
				float staticSwitch1800_g174563 = Small_Mask_Legacy1806_g174563;
				#else
				float staticSwitch1800_g174563 = lerpResult1906_g174563;
				#endif
				float clampResult17_g174580 = clamp( staticSwitch1800_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174581 = _MotionSmallMaskRemap.x;
				float temp_output_10_0_g174581 = ( _MotionSmallMaskRemap.y - temp_output_7_0_g174581 );
				float temp_output_6_0_g174599 = saturate( ( ( clampResult17_g174580 - temp_output_7_0_g174581 ) / ( temp_output_10_0_g174581 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174599 = ( temp_output_6_0_g174599 + ( _MotionSmallMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174599 = temp_output_6_0_g174599;
				#endif
				half Small_Mask640_g174563 = staticSwitch14_g174599;
				half3 Model_PositionOS147_g174563 = temp_output_1567_0_g174563;
				float3 normalizeResult1832_g174563 = normalize( Model_PositionOS147_g174563 );
				half3 Model_PositionWO162_g174563 = temp_output_1567_17_g174563;
				float3 temp_output_1567_19_g174563 = Out_PivotWO15_g174573;
				half3 Model_PivotWO402_g174563 = temp_output_1567_19_g174563;
				float3 lerpResult829_g174563 = lerp( Model_PositionWO162_g174563 , Model_PivotWO402_g174563 , _MotionBasePivotValue);
				float4 temp_output_1567_27_g174563 = Out_MotionData15_g174573;
				half4 Model_MotionMasks489_g174563 = temp_output_1567_27_g174563;
				half3 Base_Position1394_g174563 = ( lerpResult829_g174563 + ( (Model_MotionMasks489_g174563).z * _MotionBasePhaseValue ) );
				half3 Input_PositionWO419_g174606 = Base_Position1394_g174563;
				half Flow_TilllingRT1397_g174563 = _MotionTillingValue;
				half Input_MotionTillingRT670_g174606 = ( Flow_TilllingRT1397_g174563 + 0.2 );
				half2 Noise_CoordRT668_g174606 = ( -(Input_PositionWO419_g174606).xz * Input_MotionTillingRT670_g174606 * 0.005 );
				half4 Noise_ParamsRT535_g174606 = SAMPLE_TEXTURE2D_LOD( _MotionNoiseTexRT, sampler_Linear_Repeat, Noise_CoordRT668_g174606, 0.0 );
				half Flow_Value1855_g174563 = _MotionIntensityValue;
				half Input_MotionValue629_g174606 = Flow_Value1855_g174563;
				float2 lerpResult709_g174606 = lerp( float2( 0.5,0.5 ) , (Noise_ParamsRT535_g174606).rg , Input_MotionValue629_g174606);
				float3 appendResult712_g174606 = (float3(lerpResult709_g174606 , ( (Noise_ParamsRT535_g174606).b * Input_MotionValue629_g174606 )));
				float4 lerpResult627_g174606 = lerp( half4(0,1,1,0) , TVE_MotionParams , TVE_IsEnabled);
				half2 Global_WindDirection593_g174606 = (lerpResult627_g174606).xy;
				half Input_MotionTilling321_g174606 = ( _MotionBaseTillingValue + 0.2 );
				half2 Noise_Coord515_g174606 = ( -(Input_PositionWO419_g174606).xz * Input_MotionTilling321_g174606 * 0.005 );
				float2 temp_output_3_0_g174607 = Noise_Coord515_g174606;
				float2 temp_output_21_0_g174607 = (Global_WindDirection593_g174606*2.0 + -1.0);
				float lerpResult128_g174612 = lerp( _Time.y , ( ( _Time.y * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				half Input_MotionSpeed62_g174606 = _MotionBaseSpeedValue;
				half Noise_Speed516_g174606 = ( ( lerpResult128_g174612 * Input_MotionSpeed62_g174606 ) * 0.02 );
				float temp_output_15_0_g174607 = Noise_Speed516_g174606;
				float temp_output_23_0_g174607 = frac( temp_output_15_0_g174607 );
				float4 lerpResult39_g174607 = lerp( SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174607 + ( temp_output_21_0_g174607 * temp_output_23_0_g174607 ) ), 0.0 ) , SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174607 + ( temp_output_21_0_g174607 * frac( ( temp_output_15_0_g174607 + 0.5 ) ) ) ), 0.0 ) , ( abs( ( temp_output_23_0_g174607 - 0.5 ) ) / 0.5 ));
				half4 Noise_Params685_g174606 = lerpResult39_g174607;
				half Input_MotionNoise552_g174606 = _MotionBaseNoiseValue;
				half Global_WindIntensity576_g174606 = (lerpResult627_g174606).z;
				half Motion_Intensity720_g174606 = ( Global_WindIntensity576_g174606 * Input_MotionValue629_g174606 );
				float lerpResult701_g174606 = lerp( 1.0 , Input_MotionNoise552_g174606 , Motion_Intensity720_g174606);
				float2 lerpResult646_g174606 = lerp( Global_WindDirection593_g174606 , (Noise_Params685_g174606).rg , lerpResult701_g174606);
				float2 lerpResult724_g174606 = lerp( float2( 0.5,0.5 ) , lerpResult646_g174606 , Motion_Intensity720_g174606);
				float3 appendResult708_g174606 = (float3(lerpResult724_g174606 , ( (Noise_Params685_g174606).a * Motion_Intensity720_g174606 )));
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch673_g174606 = half3(0.5,0.5,0);
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch673_g174606 = appendResult712_g174606;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch673_g174606 = appendResult708_g174606;
				#else
				float3 staticSwitch673_g174606 = half3(0.5,0.5,0);
				#endif
				half3 Motion_Local694_g174606 = staticSwitch673_g174606;
				float temp_output_136_0_g174613 = _global_wind_layer_value;
				float temp_output_19_0_g174615 = TVE_WindLayers[(int)temp_output_136_0_g174613];
				half3 Input_Position180_g174616 = Input_PositionWO419_g174606;
				float2 temp_output_75_0_g174616 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g174616).xz ) );
				float temp_output_82_0_g174616 = temp_output_136_0_g174613;
				float2 temp_output_119_0_g174616 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g174616).xz ) );
				float temp_output_7_0_g174621 = 1.0;
				float temp_output_10_0_g174621 = ( TVE_RenderNearFadeValue - temp_output_7_0_g174621 );
				float4 lerpResult131_g174616 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g174616,temp_output_82_0_g174616), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g174616,temp_output_82_0_g174616), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g174616 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g174621 ) / temp_output_10_0_g174621 ) ));
				float4 temp_output_17_0_g174615 = lerpResult131_g174616;
				float4 temp_output_3_0_g174615 = TVE_WindParams;
				float4 ifLocalVar18_g174615 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g174615 >= 0.5 )
				ifLocalVar18_g174615 = temp_output_17_0_g174615;
				else
				ifLocalVar18_g174615 = temp_output_3_0_g174615;
				float4 lerpResult22_g174615 = lerp( temp_output_3_0_g174615 , temp_output_17_0_g174615 , temp_output_19_0_g174615);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g174615 = lerpResult22_g174615;
				#else
				float4 staticSwitch24_g174615 = ifLocalVar18_g174615;
				#endif
				float4 temp_output_610_0_g174606 = staticSwitch24_g174615;
				float2 lerpResult699_g174606 = lerp( float2( 0.5,0.5 ) , (temp_output_610_0_g174606).rg , Input_MotionValue629_g174606);
				float3 appendResult643_g174606 = (float3(lerpResult699_g174606 , ( (temp_output_610_0_g174606).b * Input_MotionValue629_g174606 )));
				float3 lerpResult623_g174606 = lerp( Motion_Local694_g174606 , appendResult643_g174606 , (temp_output_610_0_g174606).a);
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch693_g174606 = appendResult643_g174606;
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch693_g174606 = lerpResult623_g174606;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch693_g174606 = lerpResult623_g174606;
				#else
				float3 staticSwitch693_g174606 = appendResult643_g174606;
				#endif
				#ifdef TVE_MOTION_WIND_ELEMENT
				float3 staticSwitch612_g174606 = staticSwitch693_g174606;
				#else
				float3 staticSwitch612_g174606 = Motion_Local694_g174606;
				#endif
				float3 temp_output_2275_567_g174563 = staticSwitch612_g174606;
				float2 break83_g174595 = ((temp_output_2275_567_g174563).xy*2.0 + -1.0);
				float3 appendResult79_g174595 = (float3(break83_g174595.x , 0.0 , break83_g174595.y));
				float3 ase_parentObjectScale = ( 1.0 / float3( length( unity_WorldToObject[ 0 ].xyz ), length( unity_WorldToObject[ 1 ].xyz ), length( unity_WorldToObject[ 2 ].xyz ) ) );
				half2 Base_Direction893_g174563 = (( mul( unity_WorldToObject, float4( appendResult79_g174595 , 0.0 ) ).xyz * ase_parentObjectScale )).xz;
				float3 lerpResult1411_g174563 = lerp( Model_PositionWO162_g174563 , Model_PivotWO402_g174563 , _MotionSmallPivotValue);
				half3 Small_Position1421_g174563 = ( lerpResult1411_g174563 + ( (Model_MotionMasks489_g174563).z * _MotionSmallPhaseValue ) );
				half3 Input_PositionWO419_g174623 = Small_Position1421_g174563;
				half Input_MotionTillingRT670_g174623 = ( Flow_TilllingRT1397_g174563 + 0.2 );
				half2 Noise_CoordRT668_g174623 = ( -(Input_PositionWO419_g174623).xz * Input_MotionTillingRT670_g174623 * 0.005 );
				half4 Noise_ParamsRT535_g174623 = SAMPLE_TEXTURE2D_LOD( _MotionNoiseTexRT, sampler_Linear_Repeat, Noise_CoordRT668_g174623, 0.0 );
				half Input_MotionValue629_g174623 = Flow_Value1855_g174563;
				float2 lerpResult709_g174623 = lerp( float2( 0.5,0.5 ) , (Noise_ParamsRT535_g174623).rg , Input_MotionValue629_g174623);
				float3 appendResult712_g174623 = (float3(lerpResult709_g174623 , ( (Noise_ParamsRT535_g174623).b * Input_MotionValue629_g174623 )));
				float4 lerpResult627_g174623 = lerp( half4(0,1,1,0) , TVE_MotionParams , TVE_IsEnabled);
				half2 Global_WindDirection593_g174623 = (lerpResult627_g174623).xy;
				half Input_MotionTilling321_g174623 = ( _MotionSmallTillingValue + 0.2 );
				half2 Noise_Coord515_g174623 = ( -(Input_PositionWO419_g174623).xz * Input_MotionTilling321_g174623 * 0.005 );
				float2 temp_output_3_0_g174624 = Noise_Coord515_g174623;
				float2 temp_output_21_0_g174624 = (Global_WindDirection593_g174623*2.0 + -1.0);
				float lerpResult128_g174629 = lerp( _Time.y , ( ( _Time.y * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				half Input_MotionSpeed62_g174623 = _MotionSmallSpeedValue;
				half Noise_Speed516_g174623 = ( ( lerpResult128_g174629 * Input_MotionSpeed62_g174623 ) * 0.02 );
				float temp_output_15_0_g174624 = Noise_Speed516_g174623;
				float temp_output_23_0_g174624 = frac( temp_output_15_0_g174624 );
				float4 lerpResult39_g174624 = lerp( SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174624 + ( temp_output_21_0_g174624 * temp_output_23_0_g174624 ) ), 0.0 ) , SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174624 + ( temp_output_21_0_g174624 * frac( ( temp_output_15_0_g174624 + 0.5 ) ) ) ), 0.0 ) , ( abs( ( temp_output_23_0_g174624 - 0.5 ) ) / 0.5 ));
				half4 Noise_Params685_g174623 = lerpResult39_g174624;
				half Input_MotionNoise552_g174623 = _MotionSmallNoiseValue;
				half Global_WindIntensity576_g174623 = (lerpResult627_g174623).z;
				half Motion_Intensity720_g174623 = ( Global_WindIntensity576_g174623 * Input_MotionValue629_g174623 );
				float lerpResult701_g174623 = lerp( 1.0 , Input_MotionNoise552_g174623 , Motion_Intensity720_g174623);
				float2 lerpResult646_g174623 = lerp( Global_WindDirection593_g174623 , (Noise_Params685_g174623).rg , lerpResult701_g174623);
				float2 lerpResult724_g174623 = lerp( float2( 0.5,0.5 ) , lerpResult646_g174623 , Motion_Intensity720_g174623);
				float3 appendResult708_g174623 = (float3(lerpResult724_g174623 , ( (Noise_Params685_g174623).a * Motion_Intensity720_g174623 )));
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch673_g174623 = half3(0.5,0.5,0);
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch673_g174623 = appendResult712_g174623;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch673_g174623 = appendResult708_g174623;
				#else
				float3 staticSwitch673_g174623 = half3(0.5,0.5,0);
				#endif
				half3 Motion_Local694_g174623 = staticSwitch673_g174623;
				float temp_output_136_0_g174630 = _global_wind_layer_value;
				float temp_output_19_0_g174632 = TVE_WindLayers[(int)temp_output_136_0_g174630];
				half3 Input_Position180_g174633 = Input_PositionWO419_g174623;
				float2 temp_output_75_0_g174633 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g174633).xz ) );
				float temp_output_82_0_g174633 = temp_output_136_0_g174630;
				float2 temp_output_119_0_g174633 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g174633).xz ) );
				float temp_output_7_0_g174638 = 1.0;
				float temp_output_10_0_g174638 = ( TVE_RenderNearFadeValue - temp_output_7_0_g174638 );
				float4 lerpResult131_g174633 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g174633,temp_output_82_0_g174633), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g174633,temp_output_82_0_g174633), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g174633 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g174638 ) / temp_output_10_0_g174638 ) ));
				float4 temp_output_17_0_g174632 = lerpResult131_g174633;
				float4 temp_output_3_0_g174632 = TVE_WindParams;
				float4 ifLocalVar18_g174632 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g174632 >= 0.5 )
				ifLocalVar18_g174632 = temp_output_17_0_g174632;
				else
				ifLocalVar18_g174632 = temp_output_3_0_g174632;
				float4 lerpResult22_g174632 = lerp( temp_output_3_0_g174632 , temp_output_17_0_g174632 , temp_output_19_0_g174632);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g174632 = lerpResult22_g174632;
				#else
				float4 staticSwitch24_g174632 = ifLocalVar18_g174632;
				#endif
				float4 temp_output_610_0_g174623 = staticSwitch24_g174632;
				float2 lerpResult699_g174623 = lerp( float2( 0.5,0.5 ) , (temp_output_610_0_g174623).rg , Input_MotionValue629_g174623);
				float3 appendResult643_g174623 = (float3(lerpResult699_g174623 , ( (temp_output_610_0_g174623).b * Input_MotionValue629_g174623 )));
				float3 lerpResult623_g174623 = lerp( Motion_Local694_g174623 , appendResult643_g174623 , (temp_output_610_0_g174623).a);
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch693_g174623 = appendResult643_g174623;
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch693_g174623 = lerpResult623_g174623;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch693_g174623 = lerpResult623_g174623;
				#else
				float3 staticSwitch693_g174623 = appendResult643_g174623;
				#endif
				#ifdef TVE_MOTION_WIND_ELEMENT
				float3 staticSwitch612_g174623 = staticSwitch693_g174623;
				#else
				float3 staticSwitch612_g174623 = Motion_Local694_g174623;
				#endif
				float3 temp_output_2276_567_g174563 = staticSwitch612_g174623;
				float2 break83_g174594 = ((temp_output_2276_567_g174563).xy*2.0 + -1.0);
				float3 appendResult79_g174594 = (float3(break83_g174594.x , 0.0 , break83_g174594.y));
				half2 Small_Direction1489_g174563 = (( mul( unity_WorldToObject, float4( appendResult79_g174594 , 0.0 ) ).xyz * ase_parentObjectScale )).xz;
				#ifdef TVE_MOTION_SMALL_SQUASH
				float2 staticSwitch1485_g174563 = Small_Direction1489_g174563;
				#else
				float2 staticSwitch1485_g174563 = Base_Direction893_g174563;
				#endif
				half2 Wave_Direction1486_g174563 = staticSwitch1485_g174563;
				float2 break1828_g174563 = -Wave_Direction1486_g174563;
				float3 appendResult1830_g174563 = (float3(break1828_g174563.x , 0.0 , break1828_g174563.y));
				float dotResult1831_g174563 = dot( normalizeResult1832_g174563 , appendResult1830_g174563 );
				float lerpResult1826_g174563 = lerp( 1.0 , (dotResult1831_g174563*0.5 + 0.5) , _MotionFrontValue);
				half Motion_FrontMask1142_g174563 = lerpResult1826_g174563;
				float2 break1939_g174563 = Small_Direction1489_g174563;
				#if defined( TVE_MOTION_WIND_OFF )
				float staticSwitch734_g174623 = 4.0;
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float staticSwitch734_g174623 = 4.0;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float staticSwitch734_g174623 = Input_MotionSpeed62_g174623;
				#else
				float staticSwitch734_g174623 = 4.0;
				#endif
				float mulTime113_g174639 = _Time.y * staticSwitch734_g174623;
				float lerpResult128_g174639 = lerp( mulTime113_g174639 , ( ( mulTime113_g174639 * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				float3 break726_g174623 = Input_PositionWO419_g174623;
				half Small_Vertical2215_g174563 = ( sin( ( lerpResult128_g174639 + ( ( break726_g174623.x + break726_g174623.y + break726_g174623.z ) * 2.0 ) ) ) * 0.1 );
				half Small_Intensity2047_g174563 = length( Small_Direction1489_g174563 );
				float3 appendResult2056_g174563 = (float3(break1939_g174563.x , ( Small_Vertical2215_g174563 * Small_Intensity2047_g174563 ) , break1939_g174563.y));
				float lerpResult2098_g174563 = lerp( 1.0 , ( Small_Intensity2047_g174563 * Small_Intensity2047_g174563 ) , _MotionSmallDelayValue);
				float3 appendResult2101_g174563 = (float3(lerpResult2098_g174563 , 1.0 , lerpResult2098_g174563));
				half3 Small_Squash789_g174563 = ( Small_Value2180_g174563 * Small_Mask640_g174563 * Motion_FrontMask1142_g174563 * appendResult2056_g174563 * appendResult2101_g174563 );
				#ifdef TVE_MOTION_SMALL_SQUASH
				float3 staticSwitch495_g174563 = Small_Squash789_g174563;
				#else
				float3 staticSwitch495_g174563 = temp_cast_39;
				#endif
				float3 temp_cast_50 = (0.0).xxx;
				float4 break1710_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174576 = _motion_tiny_vert_mode;
				float temp_output_30_0_g174576 = ( break1710_g174563.x * break33_g174576.x );
				float temp_output_29_0_g174576 = ( break1710_g174563.y * break33_g174576.y );
				float temp_output_31_0_g174576 = ( break1710_g174563.z * break33_g174576.z );
				float temp_output_28_0_g174576 = ( temp_output_30_0_g174576 + temp_output_29_0_g174576 + temp_output_31_0_g174576 + ( break1710_g174563.w * break33_g174576.w ) );
				float temp_output_1729_0_g174563 = temp_output_28_0_g174576;
				float4 break33_g174579 = _motion_tiny_proc_mode;
				float temp_output_30_0_g174579 = ( (Model_BoundsData1322_g174563).z * break33_g174579.x );
				float temp_output_29_0_g174579 = ( (Model_BoundsData1322_g174563).w * break33_g174579.y );
				float temp_output_1735_0_g174563 = ( temp_output_30_0_g174579 + temp_output_29_0_g174579 );
				float lerpResult1908_g174563 = lerp( temp_output_1729_0_g174563 , temp_output_1735_0_g174563 , _motion_tiny_mask_mode);
				half Tiny_Mask_Legacy1807_g174563 = break1804_g174563.y;
				#ifdef TVE_LEGACY
				float staticSwitch1810_g174563 = Tiny_Mask_Legacy1807_g174563;
				#else
				float staticSwitch1810_g174563 = lerpResult1908_g174563;
				#endif
				float clampResult17_g174582 = clamp( staticSwitch1810_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174583 = _MotionTinyMaskRemap.x;
				float temp_output_10_0_g174583 = ( _MotionTinyMaskRemap.y - temp_output_7_0_g174583 );
				float temp_output_6_0_g174584 = saturate( ( ( clampResult17_g174582 - temp_output_7_0_g174583 ) / ( temp_output_10_0_g174583 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174584 = ( temp_output_6_0_g174584 + ( _MotionTinyMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174584 = temp_output_6_0_g174584;
				#endif
				half Tiny_Mask218_g174563 = staticSwitch14_g174584;
				half3 Input_Position500_g174600 = Model_PositionWO162_g174563;
				half Input_MotionTilling321_g174600 = _MotionTinyTillingValue;
				float lerpResult128_g174604 = lerp( _Time.y , ( ( _Time.y * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				half Input_MotionSpeed62_g174600 = _MotionTinySpeedValue;
				float3 temp_output_519_0_g174600 = (SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( ( (Input_Position500_g174600).xz * Input_MotionTilling321_g174600 * 0.03 ) + ( lerpResult128_g174604 * Input_MotionSpeed62_g174600 * 0.01 ) ), 0.0 ).rgb*2.0 + -1.0);
				half3 Tiny_Direction859_g174563 = temp_output_519_0_g174600;
				half3 Model_PositionWS1819_g174563 = temp_output_1567_16_g174563;
				half Motion_FadeMask1820_g174563 = ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS1819_g174563 ) / _MotionDistValue ) ) );
				half Base_Noise1159_g174563 = abs( (temp_output_2275_567_g174563).z );
				half Small_Noise1427_g174563 = (temp_output_2276_567_g174563).z;
				#ifdef TVE_MOTION_SMALL_SQUASH
				float staticSwitch2013_g174563 = Small_Noise1427_g174563;
				#else
				float staticSwitch2013_g174563 = Base_Noise1159_g174563;
				#endif
				float temp_output_136_0_g174564 = _global_push_layer_value;
				float temp_output_19_0_g174565 = TVE_PushLayers[(int)temp_output_136_0_g174564];
				float3 lerpResult1547_g174563 = lerp( Model_PositionWO162_g174563 , Model_PivotWO402_g174563 , _MotionPushPivotValue);
				half3 Push_Position1549_g174563 = ( lerpResult1547_g174563 + ( (Model_MotionMasks489_g174563).z * _MotionPushPhaseValue ) );
				half3 Input_Position180_g174566 = Push_Position1549_g174563;
				float2 temp_output_75_0_g174566 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g174566).xz ) );
				float temp_output_82_0_g174566 = temp_output_136_0_g174564;
				float2 temp_output_119_0_g174566 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g174566).xz ) );
				float temp_output_7_0_g174571 = 1.0;
				float temp_output_10_0_g174571 = ( TVE_RenderNearFadeValue - temp_output_7_0_g174571 );
				float4 lerpResult131_g174566 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g174566,temp_output_82_0_g174566), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g174566,temp_output_82_0_g174566), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g174566 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g174571 ) / temp_output_10_0_g174571 ) ));
				float4 temp_output_17_0_g174565 = lerpResult131_g174566;
				float4 temp_output_3_0_g174565 = TVE_PushParams;
				float4 ifLocalVar18_g174565 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g174565 >= 0.5 )
				ifLocalVar18_g174565 = temp_output_17_0_g174565;
				else
				ifLocalVar18_g174565 = temp_output_3_0_g174565;
				float4 lerpResult22_g174565 = lerp( temp_output_3_0_g174565 , temp_output_17_0_g174565 , temp_output_19_0_g174565);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g174565 = lerpResult22_g174565;
				#else
				float4 staticSwitch24_g174565 = ifLocalVar18_g174565;
				#endif
				half4 Global_PushParams214_g174563 = staticSwitch24_g174565;
				half Push_Noise1977_g174563 = (Global_PushParams214_g174563).b;
				half Push_Value1501_g174563 = _MotionPushIntensityValue;
				half Push_Influence1504_g174563 = saturate( ( (Global_PushParams214_g174563).a * Push_Value1501_g174563 ) );
				float lerpResult2016_g174563 = lerp( staticSwitch2013_g174563 , Push_Noise1977_g174563 , Push_Influence1504_g174563);
				#ifdef TVE_MOTION_PUSH_BENDING
				float staticSwitch2012_g174563 = lerpResult2016_g174563;
				#else
				float staticSwitch2012_g174563 = staticSwitch2013_g174563;
				#endif
				half Wave_Noise1475_g174563 = staticSwitch2012_g174563;
				half3 Tiny_Flutter1451_g174563 = ( _MotionTinyIntensityValue * Tiny_Mask218_g174563 * Tiny_Direction859_g174563 * Motion_FadeMask1820_g174563 * Flow_Value1855_g174563 * ( Wave_Noise1475_g174563 * Wave_Noise1475_g174563 ) );
				#ifdef TVE_MOTION_TINY_FLUTTER
				float3 staticSwitch414_g174563 = Tiny_Flutter1451_g174563;
				#else
				float3 staticSwitch414_g174563 = temp_cast_50;
				#endif
				half3 Final_PositionADD1569_g174563 = ( staticSwitch495_g174563 + staticSwitch414_g174563 );
				float3 In_PositionAddOS16_g174577 = Final_PositionADD1569_g174563;
				float3 temp_output_1567_24_g174563 = Out_PivotOS15_g174573;
				float3 In_PivotOS16_g174577 = temp_output_1567_24_g174563;
				float3 In_PivotWS16_g174577 = Out_PivotWS15_g174573;
				float3 In_PivotWO16_g174577 = temp_output_1567_19_g174563;
				float3 temp_output_1567_20_g174563 = Out_NormalOS15_g174573;
				float3 In_NormalOS16_g174577 = temp_output_1567_20_g174563;
				float3 In_NormalWS16_g174577 = Out_NormalWS15_g174573;
				float3 In_NormalRawOS16_g174577 = Out_NormalRawOS15_g174573;
				float3 In_NormalRawWS16_g174577 = Out_NormalRawWS15_g174573;
				float4 In_TangentOS16_g174577 = Out_TangentOS15_g174573;
				float3 In_ViewDirWS16_g174577 = Out_ViewDirWS15_g174573;
				float4 In_VertexData16_g174577 = temp_output_1567_29_g174563;
				float4 In_MotionData16_g174577 = temp_output_1567_27_g174563;
				float4 In_BoundsData16_g174577 = temp_output_1567_30_g174563;
				float2 temp_cast_54 = (0.0).xx;
				half Base_Value2242_g174563 = _MotionBaseIntensityValue;
				float4 break748_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174587 = _motion_base_vert_mode;
				float temp_output_30_0_g174587 = ( break748_g174563.x * break33_g174587.x );
				float temp_output_29_0_g174587 = ( break748_g174563.y * break33_g174587.y );
				float temp_output_31_0_g174587 = ( break748_g174563.z * break33_g174587.z );
				float temp_output_28_0_g174587 = ( temp_output_30_0_g174587 + temp_output_29_0_g174587 + temp_output_31_0_g174587 + ( break748_g174563.w * break33_g174587.w ) );
				float temp_output_1731_0_g174563 = temp_output_28_0_g174587;
				float4 break33_g174588 = _motion_base_proc_mode;
				float temp_output_30_0_g174588 = ( (Model_BoundsData1322_g174563).z * break33_g174588.x );
				float temp_output_29_0_g174588 = ( (Model_BoundsData1322_g174563).w * break33_g174588.y );
				float temp_output_1733_0_g174563 = ( temp_output_30_0_g174588 + temp_output_29_0_g174588 );
				float lerpResult1904_g174563 = lerp( temp_output_1731_0_g174563 , temp_output_1733_0_g174563 , _motion_base_mask_mode);
				float clampResult17_g174585 = clamp( lerpResult1904_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174586 = _MotionBaseMaskRemap.x;
				float temp_output_10_0_g174586 = ( _MotionBaseMaskRemap.y - temp_output_7_0_g174586 );
				float temp_output_6_0_g174598 = saturate( ( ( clampResult17_g174585 - temp_output_7_0_g174586 ) / ( temp_output_10_0_g174586 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174598 = ( temp_output_6_0_g174598 + ( _MotionBaseMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174598 = temp_output_6_0_g174598;
				#endif
				half Base_Mask217_g174563 = staticSwitch14_g174598;
				half Base_Intensity2041_g174563 = length( Base_Direction893_g174563 );
				float lerpResult2090_g174563 = lerp( 1.0 , ( Base_Intensity2041_g174563 * Base_Intensity2041_g174563 ) , _MotionBaseDelayValue);
				#ifdef TVE_MOTION_BASE_BENDING
				float2 staticSwitch1573_g174563 = ( Base_Value2242_g174563 * Base_Mask217_g174563 * Base_Direction893_g174563 * lerpResult2090_g174563 );
				#else
				float2 staticSwitch1573_g174563 = temp_cast_54;
				#endif
				float4 break1864_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174591 = _motion_push_vert_mode;
				float temp_output_30_0_g174591 = ( break1864_g174563.x * break33_g174591.x );
				float temp_output_29_0_g174591 = ( break1864_g174563.y * break33_g174591.y );
				float temp_output_31_0_g174591 = ( break1864_g174563.z * break33_g174591.z );
				float temp_output_28_0_g174591 = ( temp_output_30_0_g174591 + temp_output_29_0_g174591 + temp_output_31_0_g174591 + ( break1864_g174563.w * break33_g174591.w ) );
				float temp_output_1867_0_g174563 = temp_output_28_0_g174591;
				float4 break33_g174592 = _motion_push_proc_mode;
				float temp_output_30_0_g174592 = ( (Model_BoundsData1322_g174563).z * break33_g174592.x );
				float temp_output_29_0_g174592 = ( (Model_BoundsData1322_g174563).w * break33_g174592.y );
				float temp_output_1868_0_g174563 = ( temp_output_30_0_g174592 + temp_output_29_0_g174592 );
				float lerpResult1910_g174563 = lerp( temp_output_1867_0_g174563 , temp_output_1868_0_g174563 , _motion_push_mask_mode);
				float clampResult17_g174589 = clamp( lerpResult1910_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174590 = _MotionPushMaskRemap.x;
				float temp_output_10_0_g174590 = ( _MotionPushMaskRemap.y - temp_output_7_0_g174590 );
				float temp_output_6_0_g174593 = saturate( ( ( clampResult17_g174589 - temp_output_7_0_g174590 ) / ( temp_output_10_0_g174590 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174593 = ( temp_output_6_0_g174593 + ( _MotionPushMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174593 = temp_output_6_0_g174593;
				#endif
				half Push_Mask1877_g174563 = staticSwitch14_g174593;
				float2 break83_g174596 = ((Global_PushParams214_g174563).rg*2.0 + -1.0);
				float3 appendResult79_g174596 = (float3(break83_g174596.x , 0.0 , break83_g174596.y));
				half2 Push_Direction1972_g174563 = (( mul( unity_WorldToObject, float4( appendResult79_g174596 , 0.0 ) ).xyz * ase_parentObjectScale )).xz;
				float2 lerpResult1496_g174563 = lerp( staticSwitch1573_g174563 , ( Push_Mask1877_g174563 * Push_Value1501_g174563 * Push_Direction1972_g174563 ) , Push_Influence1504_g174563);
				#ifdef TVE_MOTION_PUSH_BENDING
				float2 staticSwitch1506_g174563 = lerpResult1496_g174563;
				#else
				float2 staticSwitch1506_g174563 = staticSwitch1573_g174563;
				#endif
				half2 Base_Bending1440_g174563 = staticSwitch1506_g174563;
				float4 appendResult2023_g174563 = (float4(Base_Bending1440_g174563 , 0.0 , 0.0));
				half4 Final_RotationData1570_g174563 = appendResult2023_g174563;
				float4 In_RotationData16_g174577 = Final_RotationData1570_g174563;
				Data16_g174577.Dummy = In_Dummy16_g174577;
				Data16_g174577.PositionOS = In_PositionOS16_g174577;
				Data16_g174577.PositionWS = In_PositionWS16_g174577;
				Data16_g174577.PositionWO = In_PositionWO16_g174577;
				Data16_g174577.PositionRawOS = In_PositionRawOS16_g174577;
				Data16_g174577.PositionAddOS = In_PositionAddOS16_g174577;
				Data16_g174577.PivotOS = In_PivotOS16_g174577;
				Data16_g174577.PivotWS = In_PivotWS16_g174577;
				Data16_g174577.PivotWO = In_PivotWO16_g174577;
				Data16_g174577.NormalOS = In_NormalOS16_g174577;
				Data16_g174577.NormalWS = In_NormalWS16_g174577;
				Data16_g174577.NormalRawOS = In_NormalRawOS16_g174577;
				Data16_g174577.NormalRawWS = In_NormalRawWS16_g174577;
				Data16_g174577.TangentOS = In_TangentOS16_g174577;
				Data16_g174577.ViewDirWS = In_ViewDirWS16_g174577;
				Data16_g174577.VertexData = In_VertexData16_g174577;
				Data16_g174577.MotionData = In_MotionData16_g174577;
				Data16_g174577.BoundsData = In_BoundsData16_g174577;
				Data16_g174577.RotationData = In_RotationData16_g174577;
				TVEModelData Data15_g174800 = Data16_g174577;
				float Out_Dummy15_g174800 = 0;
				float3 Out_PositionOS15_g174800 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174800 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174800 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174800 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174800 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174800 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174800 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174800 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174800 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174800 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174800 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174800 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174800 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174800 = float3( 0,0,0 );
				float4 Out_VertexData15_g174800 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174800 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174800 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174800 = float4( 0,0,0,0 );
				Out_Dummy15_g174800 = Data15_g174800.Dummy;
				Out_PositionOS15_g174800 = Data15_g174800.PositionOS;
				Out_PositionWS15_g174800 = Data15_g174800.PositionWS;
				Out_PositionWO15_g174800 = Data15_g174800.PositionWO;
				Out_PositionRawOS15_g174800 = Data15_g174800.PositionRawOS;
				Out_PositionAddOS15_g174800 = Data15_g174800.PositionAddOS;
				Out_PivotOS15_g174800 = Data15_g174800.PivotOS;
				Out_PivotWS15_g174800 = Data15_g174800.PivotWS;
				Out_PivotWO15_g174800 = Data15_g174800.PivotWO;
				Out_NormalOS15_g174800 = Data15_g174800.NormalOS;
				Out_NormalWS15_g174800 = Data15_g174800.NormalWS;
				Out_NormalRawOS15_g174800 = Data15_g174800.NormalRawOS;
				Out_NormalRawWS15_g174800 = Data15_g174800.NormalRawWS;
				Out_TangentOS15_g174800 = Data15_g174800.TangentOS;
				Out_ViewDirWS15_g174800 = Data15_g174800.ViewDirWS;
				Out_VertexData15_g174800 = Data15_g174800.VertexData;
				Out_MotionData15_g174800 = Data15_g174800.MotionData;
				Out_BoundsData15_g174800 = Data15_g174800.BoundsData;
				Out_RotationData15_g174800 = Data15_g174800.RotationData;
				float3 In_PositionOS16_g174801 = Out_PositionOS15_g174800;
				float3 In_PositionWS16_g174801 = Out_PositionWS15_g174800;
				float3 In_PositionWO16_g174801 = Out_PositionWO15_g174800;
				float3 In_PositionRawOS16_g174801 = Out_PositionRawOS15_g174800;
				half3 Model_PositionADD147_g174798 = Out_PositionAddOS15_g174800;
				TVEGlobalData Data15_g174799 = Data204_g173897;
				float Out_Dummy15_g174799 = 0;
				float4 Out_CoatParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174799 = float4( 0,0,0,0 );
				Out_Dummy15_g174799 = Data15_g174799.Dummy;
				Out_CoatParams15_g174799 = Data15_g174799.CoatParams;
				Out_PaintParams15_g174799 = Data15_g174799.PaintParams;
				Out_GlowParams15_g174799 = Data15_g174799.GlowParams;
				Out_AtmoParams15_g174799= Data15_g174799.AtmoParams;
				Out_FadeParams15_g174799= Data15_g174799.FadeParams;
				Out_FormParams15_g174799 = Data15_g174799.FormParams;
				Out_LandParams15_g174799 = Data15_g174799.LandParams;
				Out_WindParams15_g174799 = Data15_g174799.WindParams;
				Out_PushParams15_g174799 = Data15_g174799.PushParams;
				half4 Input_FormParams188_g174798 = Out_FormParams15_g174799;
				float3 temp_output_210_19_g174798 = Out_PivotWO15_g174800;
				half3 Model_PivotWO162_g174798 = temp_output_210_19_g174798;
				float3 ase_objectScale = float3( length( unity_ObjectToWorld[ 0 ].xyz ), length( unity_ObjectToWorld[ 1 ].xyz ), length( unity_ObjectToWorld[ 2 ].xyz ) );
				float3 appendResult233_g174798 = (float3(0.0 , ( ( ( ( (Input_FormParams188_g174798).z - ( (Model_PivotWO162_g174798).y * _BlanketConformOffsetMode ) ) + _BlanketConformOffsetValue ) / ase_objectScale.y ) * ( _BlanketConformValue * TVE_IsEnabled ) ) , 0.0));
				half3 Blanket_Conform238_g174798 = appendResult233_g174798;
				float3 temp_output_249_0_g174798 = ( Model_PositionADD147_g174798 + Blanket_Conform238_g174798 );
				half3 Final_PositionADD178_g174798 = temp_output_249_0_g174798;
				float3 In_PositionAddOS16_g174801 = Final_PositionADD178_g174798;
				float3 In_PivotOS16_g174801 = Out_PivotOS15_g174800;
				float3 In_PivotWS16_g174801 = Out_PivotWS15_g174800;
				float3 In_PivotWO16_g174801 = temp_output_210_19_g174798;
				float3 In_NormalOS16_g174801 = Out_NormalOS15_g174800;
				float3 In_NormalWS16_g174801 = Out_NormalWS15_g174800;
				float3 In_NormalRawOS16_g174801 = Out_NormalRawOS15_g174800;
				float3 In_NormalRawWS16_g174801 = Out_NormalRawWS15_g174800;
				float4 In_TangentOS16_g174801 = Out_TangentOS15_g174800;
				float3 In_ViewDirWS16_g174801 = Out_ViewDirWS15_g174800;
				float4 In_VertexData16_g174801 = Out_VertexData15_g174800;
				float4 In_MotionData16_g174801 = Out_MotionData15_g174800;
				float4 In_BoundsData16_g174801 = Out_BoundsData15_g174800;
				half4 Model_RotationData212_g174798 = Out_RotationData15_g174800;
				float2 break83_g174804 = ((Input_FormParams188_g174798).xy*2.0 + -1.0);
				float3 appendResult79_g174804 = (float3(break83_g174804.x , 0.0 , break83_g174804.y));
				float2 lerpResult227_g174798 = lerp( float2( 0,0 ) , (( mul( unity_WorldToObject, float4( appendResult79_g174804 , 0.0 ) ).xyz * ase_parentObjectScale )).xz , ( _BlanketOrientationValue * TVE_IsEnabled ));
				half2 Blanket_Orientation192_g174798 = lerpResult227_g174798;
				float4 appendResult222_g174798 = (float4(( (Model_RotationData212_g174798).xy + Blanket_Orientation192_g174798 ) , (Model_RotationData212_g174798).zw));
				#ifdef TVE_BLANKET_BENDING
				float4 staticSwitch218_g174798 = appendResult222_g174798;
				#else
				float4 staticSwitch218_g174798 = Model_RotationData212_g174798;
				#endif
				half4 Final_RotationData225_g174798 = staticSwitch218_g174798;
				float4 In_RotationData16_g174801 = Final_RotationData225_g174798;
				Data16_g174801.Dummy = In_Dummy16_g174801;
				Data16_g174801.PositionOS = In_PositionOS16_g174801;
				Data16_g174801.PositionWS = In_PositionWS16_g174801;
				Data16_g174801.PositionWO = In_PositionWO16_g174801;
				Data16_g174801.PositionRawOS = In_PositionRawOS16_g174801;
				Data16_g174801.PositionAddOS = In_PositionAddOS16_g174801;
				Data16_g174801.PivotOS = In_PivotOS16_g174801;
				Data16_g174801.PivotWS = In_PivotWS16_g174801;
				Data16_g174801.PivotWO = In_PivotWO16_g174801;
				Data16_g174801.NormalOS = In_NormalOS16_g174801;
				Data16_g174801.NormalWS = In_NormalWS16_g174801;
				Data16_g174801.NormalRawOS = In_NormalRawOS16_g174801;
				Data16_g174801.NormalRawWS = In_NormalRawWS16_g174801;
				Data16_g174801.TangentOS = In_TangentOS16_g174801;
				Data16_g174801.ViewDirWS = In_ViewDirWS16_g174801;
				Data16_g174801.VertexData = In_VertexData16_g174801;
				Data16_g174801.MotionData = In_MotionData16_g174801;
				Data16_g174801.BoundsData = In_BoundsData16_g174801;
				Data16_g174801.RotationData = In_RotationData16_g174801;
				TVEModelData Data15_g174819 = Data16_g174801;
				float Out_Dummy15_g174819 = 0;
				float3 Out_PositionOS15_g174819 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174819 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174819 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174819 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174819 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174819 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174819 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174819 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174819 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174819 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174819 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174819 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174819 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174819 = float3( 0,0,0 );
				float4 Out_VertexData15_g174819 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174819 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174819 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174819 = float4( 0,0,0,0 );
				Out_Dummy15_g174819 = Data15_g174819.Dummy;
				Out_PositionOS15_g174819 = Data15_g174819.PositionOS;
				Out_PositionWS15_g174819 = Data15_g174819.PositionWS;
				Out_PositionWO15_g174819 = Data15_g174819.PositionWO;
				Out_PositionRawOS15_g174819 = Data15_g174819.PositionRawOS;
				Out_PositionAddOS15_g174819 = Data15_g174819.PositionAddOS;
				Out_PivotOS15_g174819 = Data15_g174819.PivotOS;
				Out_PivotWS15_g174819 = Data15_g174819.PivotWS;
				Out_PivotWO15_g174819 = Data15_g174819.PivotWO;
				Out_NormalOS15_g174819 = Data15_g174819.NormalOS;
				Out_NormalWS15_g174819 = Data15_g174819.NormalWS;
				Out_NormalRawOS15_g174819 = Data15_g174819.NormalRawOS;
				Out_NormalRawWS15_g174819 = Data15_g174819.NormalRawWS;
				Out_TangentOS15_g174819 = Data15_g174819.TangentOS;
				Out_ViewDirWS15_g174819 = Data15_g174819.ViewDirWS;
				Out_VertexData15_g174819 = Data15_g174819.VertexData;
				Out_MotionData15_g174819 = Data15_g174819.MotionData;
				Out_BoundsData15_g174819 = Data15_g174819.BoundsData;
				Out_RotationData15_g174819 = Data15_g174819.RotationData;
				half3 Model_PositionOS147_g174818 = Out_PositionOS15_g174819;
				half3 Input_False58_g174821 = Model_PositionOS147_g174818;
				half3 VertexPos40_g174822 = Model_PositionOS147_g174818;
				half3 VertexPos40_g174823 = VertexPos40_g174822;
				float3 appendResult74_g174823 = (float3(VertexPos40_g174823.x , 0.0 , 0.0));
				half3 VertexPosRotationAxis50_g174823 = appendResult74_g174823;
				float3 break84_g174823 = VertexPos40_g174823;
				float3 appendResult81_g174823 = (float3(0.0 , break84_g174823.y , break84_g174823.z));
				half3 VertexPosOtherAxis82_g174823 = appendResult81_g174823;
				float4 temp_output_1567_33_g174818 = Out_RotationData15_g174819;
				half4 Model_VertexBend1569_g174818 = temp_output_1567_33_g174818;
				half2 Angle44_g174822 = (Model_VertexBend1569_g174818).xy;
				half Angle44_g174823 = (Angle44_g174822).y;
				half3 VertexPos40_g174824 = ( VertexPosRotationAxis50_g174823 + ( VertexPosOtherAxis82_g174823 * cos( Angle44_g174823 ) ) + ( cross( float3(1,0,0) , VertexPosOtherAxis82_g174823 ) * sin( Angle44_g174823 ) ) );
				float3 appendResult74_g174824 = (float3(0.0 , 0.0 , VertexPos40_g174824.z));
				half3 VertexPosRotationAxis50_g174824 = appendResult74_g174824;
				float3 break84_g174824 = VertexPos40_g174824;
				float3 appendResult81_g174824 = (float3(break84_g174824.x , break84_g174824.y , 0.0));
				half3 VertexPosOtherAxis82_g174824 = appendResult81_g174824;
				half Angle44_g174824 = -(Angle44_g174822).x;
				half3 Input_True57_g174821 = ( VertexPosRotationAxis50_g174824 + ( VertexPosOtherAxis82_g174824 * cos( Angle44_g174824 ) ) + ( cross( float3(0,0,1) , VertexPosOtherAxis82_g174824 ) * sin( Angle44_g174824 ) ) );
				#ifdef TVE_MOTION_BASE_BENDING
				float3 staticSwitch65_g174821 = Input_True57_g174821;
				#else
				float3 staticSwitch65_g174821 = Input_False58_g174821;
				#endif
				#ifdef TVE_MOTION_PUSH_BENDING
				float3 staticSwitch67_g174821 = Input_True57_g174821;
				#else
				float3 staticSwitch67_g174821 = staticSwitch65_g174821;
				#endif
				#ifdef TVE_BLANKET_BENDING
				float3 staticSwitch69_g174821 = Input_True57_g174821;
				#else
				float3 staticSwitch69_g174821 = staticSwitch67_g174821;
				#endif
				float3 temp_output_1578_0_g174818 = staticSwitch69_g174821;
				float3 temp_output_1567_31_g174818 = Out_PositionAddOS15_g174819;
				half3 Model_PositionADD1568_g174818 = temp_output_1567_31_g174818;
				half3 Final_PositionOS178_g174818 = ( temp_output_1578_0_g174818 + Model_PositionADD1568_g174818 );
				float3 In_PositionOS16_g174820 = Final_PositionOS178_g174818;
				float3 In_PositionWS16_g174820 = Out_PositionWS15_g174819;
				float3 In_PositionWO16_g174820 = Out_PositionWO15_g174819;
				float3 In_PositionRawOS16_g174820 = Out_PositionRawOS15_g174819;
				float3 In_PositionAddOS16_g174820 = temp_output_1567_31_g174818;
				float3 In_PivotOS16_g174820 = Out_PivotOS15_g174819;
				float3 In_PivotWS16_g174820 = Out_PivotWS15_g174819;
				float3 In_PivotWO16_g174820 = Out_PivotWO15_g174819;
				float3 In_NormalOS16_g174820 = Out_NormalOS15_g174819;
				float3 In_NormalWS16_g174820 = Out_NormalWS15_g174819;
				float3 In_NormalRawOS16_g174820 = Out_NormalRawOS15_g174819;
				float3 In_NormalRawWS16_g174820 = Out_NormalRawWS15_g174819;
				float4 In_TangentOS16_g174820 = Out_TangentOS15_g174819;
				float3 In_ViewDirWS16_g174820 = Out_ViewDirWS15_g174819;
				float4 In_VertexData16_g174820 = Out_VertexData15_g174819;
				float4 In_MotionData16_g174820 = Out_MotionData15_g174819;
				float4 In_BoundsData16_g174820 = Out_BoundsData15_g174819;
				float4 In_RotationData16_g174820 = temp_output_1567_33_g174818;
				Data16_g174820.Dummy = In_Dummy16_g174820;
				Data16_g174820.PositionOS = In_PositionOS16_g174820;
				Data16_g174820.PositionWS = In_PositionWS16_g174820;
				Data16_g174820.PositionWO = In_PositionWO16_g174820;
				Data16_g174820.PositionRawOS = In_PositionRawOS16_g174820;
				Data16_g174820.PositionAddOS = In_PositionAddOS16_g174820;
				Data16_g174820.PivotOS = In_PivotOS16_g174820;
				Data16_g174820.PivotWS = In_PivotWS16_g174820;
				Data16_g174820.PivotWO = In_PivotWO16_g174820;
				Data16_g174820.NormalOS = In_NormalOS16_g174820;
				Data16_g174820.NormalWS = In_NormalWS16_g174820;
				Data16_g174820.NormalRawOS = In_NormalRawOS16_g174820;
				Data16_g174820.NormalRawWS = In_NormalRawWS16_g174820;
				Data16_g174820.TangentOS = In_TangentOS16_g174820;
				Data16_g174820.ViewDirWS = In_ViewDirWS16_g174820;
				Data16_g174820.VertexData = In_VertexData16_g174820;
				Data16_g174820.MotionData = In_MotionData16_g174820;
				Data16_g174820.BoundsData = In_BoundsData16_g174820;
				Data16_g174820.RotationData = In_RotationData16_g174820;
				TVEModelData Data15_g174842 = Data16_g174820;
				float Out_Dummy15_g174842 = 0;
				float3 Out_PositionOS15_g174842 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174842 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174842 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174842 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174842 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174842 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174842 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174842 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174842 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174842 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174842 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174842 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174842 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174842 = float3( 0,0,0 );
				float4 Out_VertexData15_g174842 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174842 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174842 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174842 = float4( 0,0,0,0 );
				Out_Dummy15_g174842 = Data15_g174842.Dummy;
				Out_PositionOS15_g174842 = Data15_g174842.PositionOS;
				Out_PositionWS15_g174842 = Data15_g174842.PositionWS;
				Out_PositionWO15_g174842 = Data15_g174842.PositionWO;
				Out_PositionRawOS15_g174842 = Data15_g174842.PositionRawOS;
				Out_PositionAddOS15_g174842 = Data15_g174842.PositionAddOS;
				Out_PivotOS15_g174842 = Data15_g174842.PivotOS;
				Out_PivotWS15_g174842 = Data15_g174842.PivotWS;
				Out_PivotWO15_g174842 = Data15_g174842.PivotWO;
				Out_NormalOS15_g174842 = Data15_g174842.NormalOS;
				Out_NormalWS15_g174842 = Data15_g174842.NormalWS;
				Out_NormalRawOS15_g174842 = Data15_g174842.NormalRawOS;
				Out_NormalRawWS15_g174842 = Data15_g174842.NormalRawWS;
				Out_TangentOS15_g174842 = Data15_g174842.TangentOS;
				Out_ViewDirWS15_g174842 = Data15_g174842.ViewDirWS;
				Out_VertexData15_g174842 = Data15_g174842.VertexData;
				Out_MotionData15_g174842 = Data15_g174842.MotionData;
				Out_BoundsData15_g174842 = Data15_g174842.BoundsData;
				Out_RotationData15_g174842 = Data15_g174842.RotationData;
				float3 In_PositionOS16_g174843 = Out_PositionOS15_g174842;
				float3 In_PositionWS16_g174843 = Out_PositionWS15_g174842;
				float3 temp_output_1567_17_g174841 = Out_PositionWO15_g174842;
				float3 In_PositionWO16_g174843 = temp_output_1567_17_g174841;
				float3 temp_output_1567_26_g174841 = Out_PositionRawOS15_g174842;
				float3 In_PositionRawOS16_g174843 = temp_output_1567_26_g174841;
				float3 In_PositionAddOS16_g174843 = Out_PositionAddOS15_g174842;
				float3 In_PivotOS16_g174843 = Out_PivotOS15_g174842;
				float3 In_PivotWS16_g174843 = Out_PivotWS15_g174842;
				float3 In_PivotWO16_g174843 = Out_PivotWO15_g174842;
				half3 Model_NormalOS1568_g174841 = Out_NormalOS15_g174842;
				float3 lerpResult1589_g174841 = lerp( Model_NormalOS1568_g174841 , half3(0,1,0) , _NormalFlattenValue);
				half3 Model_PositionRAW1592_g174841 = temp_output_1567_26_g174841;
				float3 normalizeResult1594_g174841 = ASESafeNormalize( ( Model_PositionRAW1592_g174841 + _NormalSphereOffsetValue ) );
				float3 lerpResult1585_g174841 = lerp( lerpResult1589_g174841 , normalizeResult1594_g174841 , _NormalSphereValue);
				half3 Input_False58_g174856 = lerpResult1585_g174841;
				half3 VertexPos40_g174845 = lerpResult1585_g174841;
				half3 VertexPos40_g174846 = VertexPos40_g174845;
				float3 appendResult74_g174846 = (float3(VertexPos40_g174846.x , 0.0 , 0.0));
				half3 VertexPosRotationAxis50_g174846 = appendResult74_g174846;
				float3 break84_g174846 = VertexPos40_g174846;
				float3 appendResult81_g174846 = (float3(0.0 , break84_g174846.y , break84_g174846.z));
				half3 VertexPosOtherAxis82_g174846 = appendResult81_g174846;
				float4 temp_output_1567_33_g174841 = Out_RotationData15_g174842;
				half4 Model_RotationData1583_g174841 = temp_output_1567_33_g174841;
				half2 Angle44_g174845 = Model_RotationData1583_g174841.xy;
				half Angle44_g174846 = (Angle44_g174845).y;
				half3 VertexPos40_g174847 = ( VertexPosRotationAxis50_g174846 + ( VertexPosOtherAxis82_g174846 * cos( Angle44_g174846 ) ) + ( cross( float3(1,0,0) , VertexPosOtherAxis82_g174846 ) * sin( Angle44_g174846 ) ) );
				float3 appendResult74_g174847 = (float3(0.0 , 0.0 , VertexPos40_g174847.z));
				half3 VertexPosRotationAxis50_g174847 = appendResult74_g174847;
				float3 break84_g174847 = VertexPos40_g174847;
				float3 appendResult81_g174847 = (float3(break84_g174847.x , break84_g174847.y , 0.0));
				half3 VertexPosOtherAxis82_g174847 = appendResult81_g174847;
				half Angle44_g174847 = -(Angle44_g174845).x;
				float3 lerpResult1591_g174841 = lerp( lerpResult1585_g174841 , ( VertexPosRotationAxis50_g174847 + ( VertexPosOtherAxis82_g174847 * cos( Angle44_g174847 ) ) + ( cross( float3(0,0,1) , VertexPosOtherAxis82_g174847 ) * sin( Angle44_g174847 ) ) ) , _NormalComputeValue);
				half3 Input_True57_g174856 = lerpResult1591_g174841;
				#ifdef TVE_MOTION_BASE_BENDING
				float3 staticSwitch65_g174856 = Input_True57_g174856;
				#else
				float3 staticSwitch65_g174856 = Input_False58_g174856;
				#endif
				#ifdef TVE_MOTION_PUSH_BENDING
				float3 staticSwitch67_g174856 = Input_True57_g174856;
				#else
				float3 staticSwitch67_g174856 = staticSwitch65_g174856;
				#endif
				#ifdef TVE_BLANKET_BENDING
				float3 staticSwitch69_g174856 = Input_True57_g174856;
				#else
				float3 staticSwitch69_g174856 = staticSwitch67_g174856;
				#endif
				#ifdef TVE_NORMAL_COMPUTE
				float3 staticSwitch1595_g174841 = staticSwitch69_g174856;
				#else
				float3 staticSwitch1595_g174841 = lerpResult1585_g174841;
				#endif
				TVEGlobalData Data15_g174844 = Data204_g173897;
				float Out_Dummy15_g174844 = 0;
				float4 Out_CoatParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174844 = float4( 0,0,0,0 );
				Out_Dummy15_g174844 = Data15_g174844.Dummy;
				Out_CoatParams15_g174844 = Data15_g174844.CoatParams;
				Out_PaintParams15_g174844 = Data15_g174844.PaintParams;
				Out_GlowParams15_g174844 = Data15_g174844.GlowParams;
				Out_AtmoParams15_g174844= Data15_g174844.AtmoParams;
				Out_FadeParams15_g174844= Data15_g174844.FadeParams;
				Out_FormParams15_g174844 = Data15_g174844.FormParams;
				Out_LandParams15_g174844 = Data15_g174844.LandParams;
				Out_WindParams15_g174844 = Data15_g174844.WindParams;
				Out_PushParams15_g174844 = Data15_g174844.PushParams;
				half4 Global_FormParams1633_g174841 = Out_FormParams15_g174844;
				float2 temp_output_1627_0_g174841 = ((Global_FormParams1633_g174841).xy*2.0 + -1.0);
				float2 break1617_g174841 = temp_output_1627_0_g174841;
				float dotResult1619_g174841 = dot( temp_output_1627_0_g174841 , temp_output_1627_0_g174841 );
				float3 appendResult1618_g174841 = (float3(break1617_g174841.x , sqrt( ( 1.0 - saturate( dotResult1619_g174841 ) ) ) , break1617_g174841.y));
				float3 worldToObjDir1623_g174841 = ASESafeNormalize( mul( unity_WorldToObject, float4( appendResult1618_g174841, 0 ) ).xyz );
				half3 Blanket_Normal1630_g174841 = worldToObjDir1623_g174841;
				float3 lerpResult1636_g174841 = lerp( staticSwitch1595_g174841 , Blanket_Normal1630_g174841 , ( _NormalBlanketValue * TVE_IsEnabled ));
				float4 temp_output_1567_29_g174841 = Out_VertexData15_g174842;
				half4 Model_VertexData1608_g174841 = temp_output_1567_29_g174841;
				float4 break1683_g174841 = Model_VertexData1608_g174841;
				float4 break33_g174849 = _normal_vert_mode;
				float temp_output_30_0_g174849 = ( break1683_g174841.x * break33_g174849.x );
				float temp_output_29_0_g174849 = ( break1683_g174841.y * break33_g174849.y );
				float temp_output_31_0_g174849 = ( break1683_g174841.z * break33_g174849.z );
				float temp_output_28_0_g174849 = ( temp_output_30_0_g174849 + temp_output_29_0_g174849 + temp_output_31_0_g174849 + ( break1683_g174841.w * break33_g174849.w ) );
				float clampResult17_g174851 = clamp( temp_output_28_0_g174849 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174850 = _NormalMeshRemap.x;
				float temp_output_10_0_g174850 = ( _NormalMeshRemap.y - temp_output_7_0_g174850 );
				float lerpResult1695_g174841 = lerp( 1.0 , saturate( ( ( clampResult17_g174851 - temp_output_7_0_g174850 ) / ( temp_output_10_0_g174850 + 0.0001 ) ) ) , _NormalMeshValue);
				float temp_output_6_0_g174852 = lerpResult1695_g174841;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174852 = ( temp_output_6_0_g174852 + ( _NormalMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174852 = temp_output_6_0_g174852;
				#endif
				float temp_output_1690_0_g174841 = staticSwitch14_g174852;
				half Normal_MeskMask1691_g174841 = temp_output_1690_0_g174841;
				float3 temp_output_1567_21_g174841 = Out_NormalWS15_g174842;
				half3 Model_NormalWS1639_g174841 = temp_output_1567_21_g174841;
				float clampResult17_g174853 = clamp( (Model_NormalWS1639_g174841).y , 0.0001 , 0.9999 );
				float temp_output_7_0_g174854 = _NormalProjRemap.x;
				float temp_output_10_0_g174854 = ( _NormalProjRemap.y - temp_output_7_0_g174854 );
				float lerpResult1669_g174841 = lerp( 1.0 , saturate( ( ( clampResult17_g174853 - temp_output_7_0_g174854 ) / ( temp_output_10_0_g174854 + 0.0001 ) ) ) , _NormalProjValue);
				half Normal_Proj_Mask1647_g174841 = lerpResult1669_g174841;
				float temp_output_1699_0_g174841 = ( Normal_MeskMask1691_g174841 * Normal_Proj_Mask1647_g174841 );
				half3 Model_PositionWO1640_g174841 = temp_output_1567_17_g174841;
				float temp_output_1704_0_g174841 = saturate( ( ( (Global_FormParams1633_g174841).z - (Model_PositionWO1640_g174841).y ) + _NormalLandOffsetValue ) );
				float lerpResult1707_g174841 = lerp( 1.0 , temp_output_1704_0_g174841 , ( _NormalLandValue * _NormalLandMode ));
				half Normal_Land_Mask_Mul1708_g174841 = lerpResult1707_g174841;
				half Normal_Land_Mask_Add1629_g174841 = ( temp_output_1704_0_g174841 * _NormalLandValue );
				float temp_output_6_0_g174855 = saturate( ( ( temp_output_1699_0_g174841 * Normal_Land_Mask_Mul1708_g174841 ) + Normal_Land_Mask_Add1629_g174841 ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174855 = ( temp_output_6_0_g174855 + ( _NormalBlanketInfo * 0.0 ) );
				#else
				float staticSwitch14_g174855 = temp_output_6_0_g174855;
				#endif
				float3 lerpResult1670_g174841 = lerp( Model_NormalOS1568_g174841 , lerpResult1636_g174841 , staticSwitch14_g174855);
				half3 Final_NormalOS178_g174841 = lerpResult1670_g174841;
				float3 In_NormalOS16_g174843 = Final_NormalOS178_g174841;
				float3 In_NormalWS16_g174843 = temp_output_1567_21_g174841;
				float3 In_NormalRawOS16_g174843 = Out_NormalRawOS15_g174842;
				float3 In_NormalRawWS16_g174843 = Out_NormalRawWS15_g174842;
				float4 In_TangentOS16_g174843 = Out_TangentOS15_g174842;
				float3 In_ViewDirWS16_g174843 = Out_ViewDirWS15_g174842;
				float4 In_VertexData16_g174843 = temp_output_1567_29_g174841;
				float4 In_MotionData16_g174843 = Out_MotionData15_g174842;
				float4 In_BoundsData16_g174843 = Out_BoundsData15_g174842;
				float4 In_RotationData16_g174843 = temp_output_1567_33_g174841;
				Data16_g174843.Dummy = In_Dummy16_g174843;
				Data16_g174843.PositionOS = In_PositionOS16_g174843;
				Data16_g174843.PositionWS = In_PositionWS16_g174843;
				Data16_g174843.PositionWO = In_PositionWO16_g174843;
				Data16_g174843.PositionRawOS = In_PositionRawOS16_g174843;
				Data16_g174843.PositionAddOS = In_PositionAddOS16_g174843;
				Data16_g174843.PivotOS = In_PivotOS16_g174843;
				Data16_g174843.PivotWS = In_PivotWS16_g174843;
				Data16_g174843.PivotWO = In_PivotWO16_g174843;
				Data16_g174843.NormalOS = In_NormalOS16_g174843;
				Data16_g174843.NormalWS = In_NormalWS16_g174843;
				Data16_g174843.NormalRawOS = In_NormalRawOS16_g174843;
				Data16_g174843.NormalRawWS = In_NormalRawWS16_g174843;
				Data16_g174843.TangentOS = In_TangentOS16_g174843;
				Data16_g174843.ViewDirWS = In_ViewDirWS16_g174843;
				Data16_g174843.VertexData = In_VertexData16_g174843;
				Data16_g174843.MotionData = In_MotionData16_g174843;
				Data16_g174843.BoundsData = In_BoundsData16_g174843;
				Data16_g174843.RotationData = In_RotationData16_g174843;
				TVEModelData Data15_g174865 = Data16_g174843;
				float Out_Dummy15_g174865 = 0;
				float3 Out_PositionOS15_g174865 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174865 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174865 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174865 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174865 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174865 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174865 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174865 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174865 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174865 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174865 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174865 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174865 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174865 = float3( 0,0,0 );
				float4 Out_VertexData15_g174865 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174865 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174865 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174865 = float4( 0,0,0,0 );
				Out_Dummy15_g174865 = Data15_g174865.Dummy;
				Out_PositionOS15_g174865 = Data15_g174865.PositionOS;
				Out_PositionWS15_g174865 = Data15_g174865.PositionWS;
				Out_PositionWO15_g174865 = Data15_g174865.PositionWO;
				Out_PositionRawOS15_g174865 = Data15_g174865.PositionRawOS;
				Out_PositionAddOS15_g174865 = Data15_g174865.PositionAddOS;
				Out_PivotOS15_g174865 = Data15_g174865.PivotOS;
				Out_PivotWS15_g174865 = Data15_g174865.PivotWS;
				Out_PivotWO15_g174865 = Data15_g174865.PivotWO;
				Out_NormalOS15_g174865 = Data15_g174865.NormalOS;
				Out_NormalWS15_g174865 = Data15_g174865.NormalWS;
				Out_NormalRawOS15_g174865 = Data15_g174865.NormalRawOS;
				Out_NormalRawWS15_g174865 = Data15_g174865.NormalRawWS;
				Out_TangentOS15_g174865 = Data15_g174865.TangentOS;
				Out_ViewDirWS15_g174865 = Data15_g174865.ViewDirWS;
				Out_VertexData15_g174865 = Data15_g174865.VertexData;
				Out_MotionData15_g174865 = Data15_g174865.MotionData;
				Out_BoundsData15_g174865 = Data15_g174865.BoundsData;
				Out_RotationData15_g174865 = Data15_g174865.RotationData;
				float3 temp_output_217_24_g174864 = Out_PivotOS15_g174865;
				float3 In_PositionOS16_g174866 = ( Out_PositionOS15_g174865 + temp_output_217_24_g174864 );
				float3 In_PositionWS16_g174866 = Out_PositionWS15_g174865;
				float3 In_PositionWO16_g174866 = Out_PositionWO15_g174865;
				float3 In_PositionRawOS16_g174866 = Out_PositionRawOS15_g174865;
				float3 In_PositionAddOS16_g174866 = Out_PositionAddOS15_g174865;
				float3 In_PivotOS16_g174866 = temp_output_217_24_g174864;
				float3 In_PivotWS16_g174866 = Out_PivotWS15_g174865;
				float3 In_PivotWO16_g174866 = Out_PivotWO15_g174865;
				float3 In_NormalOS16_g174866 = Out_NormalOS15_g174865;
				float3 In_NormalWS16_g174866 = Out_NormalWS15_g174865;
				float3 In_NormalRawOS16_g174866 = Out_NormalRawOS15_g174865;
				float3 In_NormalRawWS16_g174866 = Out_NormalRawWS15_g174865;
				float4 In_TangentOS16_g174866 = Out_TangentOS15_g174865;
				float3 In_ViewDirWS16_g174866 = Out_ViewDirWS15_g174865;
				float4 In_VertexData16_g174866 = Out_VertexData15_g174865;
				float4 In_MotionData16_g174866 = Out_MotionData15_g174865;
				float4 In_BoundsData16_g174866 = Out_BoundsData15_g174865;
				float4 In_RotationData16_g174866 = Out_RotationData15_g174865;
				Data16_g174866.Dummy = In_Dummy16_g174866;
				Data16_g174866.PositionOS = In_PositionOS16_g174866;
				Data16_g174866.PositionWS = In_PositionWS16_g174866;
				Data16_g174866.PositionWO = In_PositionWO16_g174866;
				Data16_g174866.PositionRawOS = In_PositionRawOS16_g174866;
				Data16_g174866.PositionAddOS = In_PositionAddOS16_g174866;
				Data16_g174866.PivotOS = In_PivotOS16_g174866;
				Data16_g174866.PivotWS = In_PivotWS16_g174866;
				Data16_g174866.PivotWO = In_PivotWO16_g174866;
				Data16_g174866.NormalOS = In_NormalOS16_g174866;
				Data16_g174866.NormalWS = In_NormalWS16_g174866;
				Data16_g174866.NormalRawOS = In_NormalRawOS16_g174866;
				Data16_g174866.NormalRawWS = In_NormalRawWS16_g174866;
				Data16_g174866.TangentOS = In_TangentOS16_g174866;
				Data16_g174866.ViewDirWS = In_ViewDirWS16_g174866;
				Data16_g174866.VertexData = In_VertexData16_g174866;
				Data16_g174866.MotionData = In_MotionData16_g174866;
				Data16_g174866.BoundsData = In_BoundsData16_g174866;
				Data16_g174866.RotationData = In_RotationData16_g174866;
				TVEModelData Data15_g174871 = Data16_g174866;
				float Out_Dummy15_g174871 = 0;
				float3 Out_PositionOS15_g174871 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174871 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174871 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174871 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174871 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174871 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174871 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174871 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174871 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174871 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174871 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174871 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174871 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174871 = float3( 0,0,0 );
				float4 Out_VertexData15_g174871 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174871 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174871 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174871 = float4( 0,0,0,0 );
				Out_Dummy15_g174871 = Data15_g174871.Dummy;
				Out_PositionOS15_g174871 = Data15_g174871.PositionOS;
				Out_PositionWS15_g174871 = Data15_g174871.PositionWS;
				Out_PositionWO15_g174871 = Data15_g174871.PositionWO;
				Out_PositionRawOS15_g174871 = Data15_g174871.PositionRawOS;
				Out_PositionAddOS15_g174871 = Data15_g174871.PositionAddOS;
				Out_PivotOS15_g174871 = Data15_g174871.PivotOS;
				Out_PivotWS15_g174871 = Data15_g174871.PivotWS;
				Out_PivotWO15_g174871 = Data15_g174871.PivotWO;
				Out_NormalOS15_g174871 = Data15_g174871.NormalOS;
				Out_NormalWS15_g174871 = Data15_g174871.NormalWS;
				Out_NormalRawOS15_g174871 = Data15_g174871.NormalRawOS;
				Out_NormalRawWS15_g174871 = Data15_g174871.NormalRawWS;
				Out_TangentOS15_g174871 = Data15_g174871.TangentOS;
				Out_ViewDirWS15_g174871 = Data15_g174871.ViewDirWS;
				Out_VertexData15_g174871 = Data15_g174871.VertexData;
				Out_MotionData15_g174871 = Data15_g174871.MotionData;
				Out_BoundsData15_g174871 = Data15_g174871.BoundsData;
				Out_RotationData15_g174871 = Data15_g174871.RotationData;
				float3 temp_output_31_0_g174868 = Out_PositionOS15_g174871;
				
				o.ase_texcoord11.xyz = vertexToFrag73_g164551;
				o.ase_texcoord12.xyz = vertexToFrag76_g164551;
				float temp_output_6_0_g174597 = ( _MotionHighlightValue * Motion_FadeMask1820_g174563 * ( Base_Mask217_g174563 * Base_Mask217_g174563 ) * ( Wave_Noise1475_g174563 * Wave_Noise1475_g174563 * Wave_Noise1475_g174563 * Wave_Noise1475_g174563 ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174597 = ( temp_output_6_0_g174597 + ( _MotionHighlightColor.r * 0.0 ) );
				#else
				float staticSwitch14_g174597 = temp_output_6_0_g174597;
				#endif
				half Wave_Mask1000 = staticSwitch14_g174597;
				float4 appendResult23_g174669 = (float4(0.0 , 0.0 , 0.0 , Wave_Mask1000));
				float4 vertexToFrag24_g174669 = appendResult23_g174669;
				o.ase_texcoord13 = vertexToFrag24_g174669;
				
				o.ase_texcoord9 = v.ase_texcoord;
				o.ase_texcoord10.xy = v.texcoord2.xyzw.xy;
				o.ase_color = v.ase_color;
				
				//setting value to unused interpolator channels and avoid initialization warnings
				o.ase_texcoord10.zw = 0;
				o.ase_texcoord11.w = 0;
				o.ase_texcoord12.w = 0;
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					float3 defaultVertexValue = v.vertex.xyz;
				#else
					float3 defaultVertexValue = float3(0, 0, 0);
				#endif
				float3 vertexValue = ( temp_output_31_0_g174868 + _DisableSRPBatcher );
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					v.vertex.xyz = vertexValue;
				#else
					v.vertex.xyz += vertexValue;
				#endif
				v.vertex.w = 1;
				v.normal = Out_NormalOS15_g174871;
				v.tangent = Out_TangentOS15_g174871;

				o.pos = UnityObjectToClipPos(v.vertex);
				float3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;
				fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);
				fixed3 worldTangent = UnityObjectToWorldDir(v.tangent.xyz);
				fixed tangentSign = v.tangent.w * unity_WorldTransformParams.w;
				fixed3 worldBinormal = cross(worldNormal, worldTangent) * tangentSign;
				o.tSpace0 = float4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);
				o.tSpace1 = float4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);
				o.tSpace2 = float4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);

				#ifdef DYNAMICLIGHTMAP_ON
				o.lmap.zw = v.texcoord2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
				#endif
				#ifdef LIGHTMAP_ON
				o.lmap.xy = v.texcoord1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
				#endif

				#ifndef LIGHTMAP_ON
					#if UNITY_SHOULD_SAMPLE_SH && !UNITY_SAMPLE_FULL_SH_PER_PIXEL
						o.sh = 0;
						#ifdef VERTEXLIGHT_ON
						o.sh += Shade4PointLights (
							unity_4LightPosX0, unity_4LightPosY0, unity_4LightPosZ0,
							unity_LightColor[0].rgb, unity_LightColor[1].rgb, unity_LightColor[2].rgb, unity_LightColor[3].rgb,
							unity_4LightAtten0, worldPos, worldNormal);
						#endif
						o.sh = ShadeSHPerVertex (worldNormal, o.sh);
					#endif
				#endif

				#if UNITY_VERSION >= 201810 && defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					UNITY_TRANSFER_LIGHTING(o, v.texcoord1.xy);
				#elif defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					#if UNITY_VERSION >= 201710
						UNITY_TRANSFER_SHADOW(o, v.texcoord1.xy);
					#else
						TRANSFER_SHADOW(o);
					#endif
				#endif

				#ifdef ASE_FOG
					UNITY_TRANSFER_FOG(o,o.pos);
				#endif
				#if defined(ASE_NEEDS_FRAG_SCREEN_POSITION)
					o.screenPos = ComputeScreenPos(o.pos);
				#endif
				return o;
			}

			#if defined(ASE_TESSELLATION)
			struct VertexControl
			{
				float4 vertex : INTERNALTESSPOS;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;

				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct TessellationFactors
			{
				float edge[3] : SV_TessFactor;
				float inside : SV_InsideTessFactor;
			};

			VertexControl vert ( appdata v )
			{
				VertexControl o;
				UNITY_SETUP_INSTANCE_ID(v);
				UNITY_TRANSFER_INSTANCE_ID(v, o);
				o.vertex = v.vertex;
				o.tangent = v.tangent;
				o.normal = v.normal;
				o.texcoord1 = v.texcoord1;
				o.texcoord2 = v.texcoord2;
				o.ase_texcoord3 = v.ase_texcoord3;
				o.ase_color = v.ase_color;
				o.ase_texcoord = v.ase_texcoord;
				return o;
			}

			TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
			{
				TessellationFactors o;
				float4 tf = 1;
				float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
				float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
				#if defined(ASE_FIXED_TESSELLATION)
				tf = FixedTess( tessValue );
				#elif defined(ASE_DISTANCE_TESSELLATION)
				tf = DistanceBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, tessValue, tessMin, tessMax, UNITY_MATRIX_M, _WorldSpaceCameraPos );
				#elif defined(ASE_LENGTH_TESSELLATION)
				tf = EdgeLengthBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams );
				#elif defined(ASE_LENGTH_CULL_TESSELLATION)
				tf = EdgeLengthBasedTessCull(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, tessMaxDisp, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams, unity_CameraWorldClipPlanes );
				#endif
				o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
				return o;
			}

			[domain("tri")]
			[partitioning("fractional_odd")]
			[outputtopology("triangle_cw")]
			[patchconstantfunc("TessellationFunction")]
			[outputcontrolpoints(3)]
			VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
			{
			   return patch[id];
			}

			[domain("tri")]
			v2f DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
			{
				appdata o = (appdata) 0;
				o.vertex = patch[0].vertex * bary.x + patch[1].vertex * bary.y + patch[2].vertex * bary.z;
				o.tangent = patch[0].tangent * bary.x + patch[1].tangent * bary.y + patch[2].tangent * bary.z;
				o.normal = patch[0].normal * bary.x + patch[1].normal * bary.y + patch[2].normal * bary.z;
				o.texcoord1 = patch[0].texcoord1 * bary.x + patch[1].texcoord1 * bary.y + patch[2].texcoord1 * bary.z;
				o.texcoord2 = patch[0].texcoord2 * bary.x + patch[1].texcoord2 * bary.y + patch[2].texcoord2 * bary.z;
				o.ase_texcoord3 = patch[0].ase_texcoord3 * bary.x + patch[1].ase_texcoord3 * bary.y + patch[2].ase_texcoord3 * bary.z;
				o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
				o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
				#if defined(ASE_PHONG_TESSELLATION)
				float3 pp[3];
				for (int i = 0; i < 3; ++i)
					pp[i] = o.vertex.xyz - patch[i].normal * (dot(o.vertex.xyz, patch[i].normal) - dot(patch[i].vertex.xyz, patch[i].normal));
				float phongStrength = _TessPhongStrength;
				o.vertex.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.vertex.xyz;
				#endif
				UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
				return VertexFunction(o);
			}
			#else
			v2f vert ( appdata v )
			{
				return VertexFunction( v );
			}
			#endif

			fixed4 frag (v2f IN , bool ase_vface : SV_IsFrontFace
				#ifdef _DEPTHOFFSET_ON
				, out float outputDepth : SV_Depth
				#endif
				) : SV_Target
			{
				UNITY_SETUP_INSTANCE_ID(IN);

				#ifdef LOD_FADE_CROSSFADE
					UNITY_APPLY_DITHER_CROSSFADE(IN.pos.xy);
				#endif

				#if defined(ASE_LIGHTING_SIMPLE)
					SurfaceOutput o = (SurfaceOutput)0;
				#else
					#if defined(_SPECULAR_SETUP)
						SurfaceOutputStandardSpecular o = (SurfaceOutputStandardSpecular)0;
					#else
						SurfaceOutputStandard o = (SurfaceOutputStandard)0;
					#endif
				#endif

				float3 WorldTangent = float3(IN.tSpace0.x,IN.tSpace1.x,IN.tSpace2.x);
				float3 WorldBiTangent = float3(IN.tSpace0.y,IN.tSpace1.y,IN.tSpace2.y);
				float3 WorldNormal = float3(IN.tSpace0.z,IN.tSpace1.z,IN.tSpace2.z);
				float3 worldPos = float3(IN.tSpace0.w,IN.tSpace1.w,IN.tSpace2.w);
				float3 worldViewDir = normalize(UnityWorldSpaceViewDir(worldPos));
				#if defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					UNITY_LIGHT_ATTENUATION(atten, IN, worldPos)
				#else
					half atten = 1;
				#endif
				#if defined(ASE_NEEDS_FRAG_SCREEN_POSITION)
				float4 ScreenPos = IN.screenPos;
				#endif

				float localBreakData4_g174874 = ( 0.0 );
				float localCompData3_g174859 = ( 0.0 );
				TVEVisualData Data3_g174859 = (TVEVisualData)0;
				half Dummy145_g174857 = ( _SubsurfaceCategory + _SubsurfaceEnd + ( _SubsurfaceDirectValue + _SubsurfaceNormalValue + _SubsurfaceAmbientValue + _SubsurfaceShadowValue ) + _SubsurfaceElementMode );
				float In_Dummy3_g174859 = Dummy145_g174857;
				float localBreakData4_g174858 = ( 0.0 );
				float localCompData3_g174836 = ( 0.0 );
				TVEVisualData Data3_g174836 = (TVEVisualData)0;
				half Dummy145_g174826 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveElementMode + _EmissiveFlagMode );
				float In_Dummy3_g174836 = Dummy145_g174826;
				float localBreakData4_g174835 = ( 0.0 );
				float localCompData3_g174808 = ( 0.0 );
				TVEVisualData Data3_g174808 = (TVEVisualData)0;
				half Dummy594_g174805 = ( _DitherCategory + _DitherEnd );
				float In_Dummy3_g174808 = Dummy594_g174805;
				float localBreakData4_g174807 = ( 0.0 );
				float localCompData3_g174786 = ( 0.0 );
				TVEVisualData Data3_g174786 = (TVEVisualData)0;
				half Dummy594_g174785 = ( _CutoutCategory + _CutoutEnd + _CutoutElementMode + _CutoutBakeMode );
				float In_Dummy3_g174786 = Dummy594_g174785;
				float localBreakData4_g174796 = ( 0.0 );
				float localCompData3_g174758 = ( 0.0 );
				TVEVisualData Data3_g174758 = (TVEVisualData)0;
				half Dummy594_g174756 = ( _WetnessCategory + _WetnessEnd + _WetnessElementMode + _WetnessBakeMode );
				float In_Dummy3_g174758 = Dummy594_g174756;
				float localBreakData4_g174757 = ( 0.0 );
				float localCompData3_g174723 = ( 0.0 );
				TVEVisualData Data3_g174723 = (TVEVisualData)0;
				half Dummy594_g174720 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayElementMode + _OverlayBakeMode );
				float In_Dummy3_g174723 = Dummy594_g174720;
				float localBreakData4_g174721 = ( 0.0 );
				float localCompData3_g174719 = ( 0.0 );
				TVEVisualData Data3_g174719 = (TVEVisualData)0;
				float In_Dummy3_g174719 = 0.0;
				float localBreakData4_g174718 = ( 0.0 );
				float localCompData3_g174697 = ( 0.0 );
				TVEVisualData Data3_g174697 = (TVEVisualData)0;
				half Dummy205_g174694 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessElementMode + _DrynessBakeMode );
				float In_Dummy3_g174697 = Dummy205_g174694;
				float localBreakData4_g174696 = ( 0.0 );
				float localCompData3_g174691 = ( 0.0 );
				TVEVisualData Data3_g174691 = (TVEVisualData)0;
				half Dummy205_g174670 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeMode );
				float In_Dummy3_g174691 = Dummy205_g174670;
				float localBreakData4_g174692 = ( 0.0 );
				float localCompData3_g174663 = ( 0.0 );
				TVEVisualData Data3_g174663 = (TVEVisualData)0;
				half Dummy220_g174660 = ( _VariationCategory + _VariationEnd );
				float In_Dummy3_g174663 = Dummy220_g174660;
				float localBreakData4_g174662 = ( 0.0 );
				float localCompData3_g174653 = ( 0.0 );
				TVEVisualData Data3_g174653 = (TVEVisualData)0;
				half Dummy220_g174650 = ( _GradientCategory + _GradientEnd + _GradientBakeMode );
				float In_Dummy3_g174653 = Dummy220_g174650;
				float localBreakData4_g174652 = ( 0.0 );
				float localCompData3_g174642 = ( 0.0 );
				TVEVisualData Data3_g174642 = (TVEVisualData)0;
				half Dummy202_g174640 = ( _OcclusionCategory + _OcclusionEnd + _OcclusionBakeMode );
				float In_Dummy3_g174642 = Dummy202_g174640;
				float localBreakData4_g174641 = ( 0.0 );
				float localCompData3_g174429 = ( 0.0 );
				TVEVisualData Data3_g174429 = (TVEVisualData)0;
				half Dummy944_g174425 = ( ( _TerrainCategory + _TerrainEnd ) + _TerrainFormInfo + _ThirdElementMode );
				float In_Dummy3_g174429 = Dummy944_g174425;
				float localBreakData4_g174428 = ( 0.0 );
				float localCompData3_g174403 = ( 0.0 );
				TVEVisualData Data3_g174403 = (TVEVisualData)0;
				half4 Dummy944_g174386 = ( ( _DetailCategory + _DetailEnd ) + ( _ThirdSampleMode + _ThirdCoordMode + _ThirdCoordValue ) + ( _ThirdMaskSampleMode + _ThirdMaskCoordMode + _ThirdMaskCoordValue ) + _ThirdElementMode + _ThirdBakeMode );
				float In_Dummy3_g174403 = Dummy944_g174386.x;
				float localBreakData4_g174402 = ( 0.0 );
				float localCompData3_g174381 = ( 0.0 );
				TVEVisualData Data3_g174381 = (TVEVisualData)0;
				half4 Dummy946_g174348 = ( ( _LayerCategory + _LayerEnd ) + ( _SecondSampleMode + _SecondCoordMode + _SecondCoordValue ) + ( _SecondMaskSampleMode + _SecondMaskCoordMode + _SecondMaskCoordValue ) + _SecondElementMode + _SecondBakeMode );
				float In_Dummy3_g174381 = Dummy946_g174348.x;
				float localBreakData4_g174360 = ( 0.0 );
				float localCompData3_g174158 = ( 0.0 );
				TVEVisualData Data3_g174158 = (TVEVisualData)0;
				half4 Dummy130_g174142 = ( _MainCategory + _MainEnd + ( _MainSampleMode + _MainCoordMode + _MainCoordValue ) + _MainMultiMaskInfo );
				float In_Dummy3_g174158 = Dummy130_g174142.x;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174151) = _MainAlbedoTex;
				float localFilterTexture19_g174154 = ( 0.0 );
				SamplerState SamplerDefault19_g174154 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174154 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174154 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174154 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174154 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174154 = SamplerDefault19_g174154;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174154 = SamplerDefault19_g174154;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174154 = SamplerPoint19_g174154;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174154 = SamplerLow19_g174154;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174154 = SamplerMedium19_g174154;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174154 = SamplerHigh19_g174154;
				#endif
				SamplerState Sampler276_g174151 = SS19_g174154;
				half4 Local_Coords180_g174142 = _main_coord_value;
				float4 temp_output_37_0_g174151 = Local_Coords180_g174142;
				half4 Coords276_g174151 = temp_output_37_0_g174151;
				half2 TexCoord276_g174151 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174151 = SampleMain( Texture276_g174151 , Sampler276_g174151 , Coords276_g174151 , TexCoord276_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174151) = _MainAlbedoTex;
				SamplerState Sampler275_g174151 = SS19_g174154;
				half4 Coords275_g174151 = temp_output_37_0_g174151;
				half2 TexCoord275_g174151 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174151 = SampleExtra( Texture275_g174151 , Sampler275_g174151 , Coords275_g174151 , TexCoord275_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174151) = _MainAlbedoTex;
				SamplerState Sampler238_g174151 = SS19_g174154;
				half4 Coords238_g174151 = temp_output_37_0_g174151;
				TVEModelData Data16_g164566 = (TVEModelData)0;
				float In_Dummy16_g164566 = 0.0;
				float3 vertexToFrag73_g164551 = IN.ase_texcoord11.xyz;
				half3 PositionWS122_g164551 = vertexToFrag73_g164551;
				float3 In_PositionWS16_g164566 = PositionWS122_g164551;
				float3 vertexToFrag76_g164551 = IN.ase_texcoord12.xyz;
				half3 PivotWS121_g164551 = vertexToFrag76_g164551;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g164551 = ( PositionWS122_g164551 - PivotWS121_g164551 );
				#else
				float3 staticSwitch204_g164551 = PositionWS122_g164551;
				#endif
				half3 PositionWO132_g164551 = ( staticSwitch204_g164551 - TVE_WorldOrigin );
				float3 In_PositionWO16_g164566 = PositionWO132_g164551;
				float3 In_PivotWS16_g164566 = PivotWS121_g164551;
				half3 PivotWO133_g164551 = ( PivotWS121_g164551 - TVE_WorldOrigin );
				float3 In_PivotWO16_g164566 = PivotWO133_g164551;
				float3 normalizedWorldNormal = normalize( WorldNormal );
				half3 Normal_WS95_g164551 = normalizedWorldNormal;
				float3 In_NormalWS16_g164566 = Normal_WS95_g164551;
				float3 normalizeResult296_g164551 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g164551 ) );
				half3 ViewDirWS169_g164551 = normalizeResult296_g164551;
				float3 In_ViewDirWS16_g164566 = ViewDirWS169_g164551;
				half4 VertexMasks171_g164551 = IN.ase_color;
				float4 In_VertexData16_g164566 = VertexMasks171_g164551;
				float4 In_BoundsData16_g164566 = float4( 1,1,1,1 );
				Data16_g164566.Dummy = In_Dummy16_g164566;
				Data16_g164566.PositionWS = In_PositionWS16_g164566;
				Data16_g164566.PositionWO = In_PositionWO16_g164566;
				Data16_g164566.PivotWS = In_PivotWS16_g164566;
				Data16_g164566.PivotWO = In_PivotWO16_g164566;
				Data16_g164566.NormalWS = In_NormalWS16_g164566;
				Data16_g164566.ViewDirWS = In_ViewDirWS16_g164566;
				Data16_g164566.VertexData = In_VertexData16_g164566;
				Data16_g164566.BoundsData = In_BoundsData16_g164566;
				TVEModelData Data15_g174157 = Data16_g164566;
				float Out_Dummy15_g174157 = 0;
				float3 Out_PositionWS15_g174157 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174157 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174157 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174157 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174157 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174157 = float3( 0,0,0 );
				float4 Out_VertexData15_g174157 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174157 = float4( 0,0,0,0 );
				Out_Dummy15_g174157 = Data15_g174157.Dummy;
				Out_PositionWS15_g174157 = Data15_g174157.PositionWS;
				Out_PositionWO15_g174157 = Data15_g174157.PositionWO;
				Out_PivotWS15_g174157 = Data15_g174157.PivotWS;
				Out_PivotWO15_g174157 = Data15_g174157.PivotWO;
				Out_NormalWS15_g174157 = Data15_g174157.NormalWS;
				Out_ViewDirWS15_g174157 = Data15_g174157.ViewDirWS;
				Out_VertexData15_g174157 = Data15_g174157.VertexData;
				Out_BoundsData15_g174157 = Data15_g174157.BoundsData;
				half3 Model_PositionWO222_g174142 = Out_PositionWO15_g174157;
				float3 temp_output_279_0_g174151 = Model_PositionWO222_g174142;
				half3 WorldPosition238_g174151 = temp_output_279_0_g174151;
				half4 localSamplePlanar2D238_g174151 = SamplePlanar2D( Texture238_g174151 , Sampler238_g174151 , Coords238_g174151 , WorldPosition238_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174151) = _MainAlbedoTex;
				SamplerState Sampler246_g174151 = SS19_g174154;
				half4 Coords246_g174151 = temp_output_37_0_g174151;
				half3 WorldPosition246_g174151 = temp_output_279_0_g174151;
				half3 Model_NormalWS226_g174142 = Out_NormalWS15_g174157;
				float3 temp_output_280_0_g174151 = Model_NormalWS226_g174142;
				half3 WorldNormal246_g174151 = temp_output_280_0_g174151;
				half4 localSamplePlanar3D246_g174151 = SamplePlanar3D( Texture246_g174151 , Sampler246_g174151 , Coords246_g174151 , WorldPosition246_g174151 , WorldNormal246_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174151) = _MainAlbedoTex;
				SamplerState Sampler234_g174151 = SS19_g174154;
				float4 Coords234_g174151 = temp_output_37_0_g174151;
				float3 WorldPosition234_g174151 = temp_output_279_0_g174151;
				float4 localSampleStochastic2D234_g174151 = SampleStochastic2D( Texture234_g174151 , Sampler234_g174151 , Coords234_g174151 , WorldPosition234_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174151) = _MainAlbedoTex;
				SamplerState Sampler263_g174151 = SS19_g174154;
				half4 Coords263_g174151 = temp_output_37_0_g174151;
				half3 WorldPosition263_g174151 = temp_output_279_0_g174151;
				half3 WorldNormal263_g174151 = temp_output_280_0_g174151;
				half4 localSampleStochastic3D263_g174151 = SampleStochastic3D( Texture263_g174151 , Sampler263_g174151 , Coords263_g174151 , WorldPosition263_g174151 , WorldNormal263_g174151 );
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float4 staticSwitch184_g174142 = localSampleMain276_g174151;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float4 staticSwitch184_g174142 = localSampleExtra275_g174151;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float4 staticSwitch184_g174142 = localSamplePlanar2D238_g174151;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float4 staticSwitch184_g174142 = localSamplePlanar3D246_g174151;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch184_g174142 = localSampleStochastic2D234_g174151;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch184_g174142 = localSampleStochastic3D263_g174151;
				#else
				float4 staticSwitch184_g174142 = localSampleMain276_g174151;
				#endif
				half4 Local_AlbedoTex185_g174142 = staticSwitch184_g174142;
				float3 lerpResult53_g174142 = lerp( float3( 1,1,1 ) , (Local_AlbedoTex185_g174142).xyz , _MainAlbedoValue);
				half3 Local_AlbedoRGB107_g174142 = lerpResult53_g174142;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174153) = _MainShaderTex;
				float localFilterTexture30_g174156 = ( 0.0 );
				SamplerState SamplerDefault30_g174156 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174156 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174156 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174156 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174156 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174156 = SamplerDefault30_g174156;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174156 = SamplerDefault30_g174156;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174156 = SamplerPoint30_g174156;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174156 = SamplerLow30_g174156;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174156 = SamplerMedium30_g174156;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174156 = SamplerHigh30_g174156;
				#endif
				SamplerState Sampler276_g174153 = SS30_g174156;
				float4 temp_output_37_0_g174153 = Local_Coords180_g174142;
				half4 Coords276_g174153 = temp_output_37_0_g174153;
				half2 TexCoord276_g174153 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174153 = SampleMain( Texture276_g174153 , Sampler276_g174153 , Coords276_g174153 , TexCoord276_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174153) = _MainShaderTex;
				SamplerState Sampler275_g174153 = SS30_g174156;
				half4 Coords275_g174153 = temp_output_37_0_g174153;
				half2 TexCoord275_g174153 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174153 = SampleExtra( Texture275_g174153 , Sampler275_g174153 , Coords275_g174153 , TexCoord275_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174153) = _MainShaderTex;
				SamplerState Sampler238_g174153 = SS30_g174156;
				half4 Coords238_g174153 = temp_output_37_0_g174153;
				float3 temp_output_279_0_g174153 = Model_PositionWO222_g174142;
				half3 WorldPosition238_g174153 = temp_output_279_0_g174153;
				half4 localSamplePlanar2D238_g174153 = SamplePlanar2D( Texture238_g174153 , Sampler238_g174153 , Coords238_g174153 , WorldPosition238_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174153) = _MainShaderTex;
				SamplerState Sampler246_g174153 = SS30_g174156;
				half4 Coords246_g174153 = temp_output_37_0_g174153;
				half3 WorldPosition246_g174153 = temp_output_279_0_g174153;
				float3 temp_output_280_0_g174153 = Model_NormalWS226_g174142;
				half3 WorldNormal246_g174153 = temp_output_280_0_g174153;
				half4 localSamplePlanar3D246_g174153 = SamplePlanar3D( Texture246_g174153 , Sampler246_g174153 , Coords246_g174153 , WorldPosition246_g174153 , WorldNormal246_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174153) = _MainShaderTex;
				SamplerState Sampler234_g174153 = SS30_g174156;
				float4 Coords234_g174153 = temp_output_37_0_g174153;
				float3 WorldPosition234_g174153 = temp_output_279_0_g174153;
				float4 localSampleStochastic2D234_g174153 = SampleStochastic2D( Texture234_g174153 , Sampler234_g174153 , Coords234_g174153 , WorldPosition234_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174153) = _MainShaderTex;
				SamplerState Sampler263_g174153 = SS30_g174156;
				half4 Coords263_g174153 = temp_output_37_0_g174153;
				half3 WorldPosition263_g174153 = temp_output_279_0_g174153;
				half3 WorldNormal263_g174153 = temp_output_280_0_g174153;
				half4 localSampleStochastic3D263_g174153 = SampleStochastic3D( Texture263_g174153 , Sampler263_g174153 , Coords263_g174153 , WorldPosition263_g174153 , WorldNormal263_g174153 );
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float4 staticSwitch198_g174142 = localSampleMain276_g174153;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float4 staticSwitch198_g174142 = localSampleExtra275_g174153;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float4 staticSwitch198_g174142 = localSamplePlanar2D238_g174153;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float4 staticSwitch198_g174142 = localSamplePlanar3D246_g174153;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch198_g174142 = localSampleStochastic2D234_g174153;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch198_g174142 = localSampleStochastic3D263_g174153;
				#else
				float4 staticSwitch198_g174142 = localSampleMain276_g174153;
				#endif
				half4 Local_MasksTex199_g174142 = staticSwitch198_g174142;
				float lerpResult23_g174142 = lerp( 1.0 , (Local_MasksTex199_g174142).y , _MainOcclusionValue);
				float4 appendResult73_g174142 = (float4(( (Local_MasksTex199_g174142).x * _MainMetallicValue ) , lerpResult23_g174142 , (Local_MasksTex199_g174142).z , ( (Local_MasksTex199_g174142).w * _MainSmoothnessValue )));
				half4 Local_Masks109_g174142 = appendResult73_g174142;
				float clampResult17_g174147 = clamp( (Local_Masks109_g174142).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174148 = _MainMultiRemap.x;
				float temp_output_10_0_g174148 = ( _MainMultiRemap.y - temp_output_7_0_g174148 );
				half Local_MultiMask78_g174142 = saturate( ( ( clampResult17_g174147 - temp_output_7_0_g174148 ) / ( temp_output_10_0_g174148 + 0.0001 ) ) );
				float lerpResult58_g174142 = lerp( 1.0 , Local_MultiMask78_g174142 , _MainColorMode);
				float4 lerpResult62_g174142 = lerp( _MainColorTwo , _MainColor , lerpResult58_g174142);
				half3 Local_ColorRGB93_g174142 = (lerpResult62_g174142).rgb;
				half3 Local_Albedo139_g174142 = ( Local_AlbedoRGB107_g174142 * Local_ColorRGB93_g174142 );
				float3 In_Albedo3_g174158 = Local_Albedo139_g174142;
				float3 In_AlbedoRaw3_g174158 = Local_Albedo139_g174142;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174152) = _MainNormalTex;
				float localFilterTexture29_g174155 = ( 0.0 );
				SamplerState SamplerDefault29_g174155 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174155 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174155 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174155 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174155 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174155 = SamplerDefault29_g174155;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174155 = SamplerDefault29_g174155;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174155 = SamplerPoint29_g174155;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174155 = SamplerLow29_g174155;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174155 = SamplerMedium29_g174155;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174155 = SamplerHigh29_g174155;
				#endif
				SamplerState Sampler276_g174152 = SS29_g174155;
				float4 temp_output_37_0_g174152 = Local_Coords180_g174142;
				half4 Coords276_g174152 = temp_output_37_0_g174152;
				half2 TexCoord276_g174152 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174152 = SampleMain( Texture276_g174152 , Sampler276_g174152 , Coords276_g174152 , TexCoord276_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174152) = _MainNormalTex;
				SamplerState Sampler275_g174152 = SS29_g174155;
				half4 Coords275_g174152 = temp_output_37_0_g174152;
				half2 TexCoord275_g174152 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174152 = SampleExtra( Texture275_g174152 , Sampler275_g174152 , Coords275_g174152 , TexCoord275_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174152) = _MainNormalTex;
				SamplerState Sampler238_g174152 = SS29_g174155;
				half4 Coords238_g174152 = temp_output_37_0_g174152;
				float3 temp_output_279_0_g174152 = Model_PositionWO222_g174142;
				half3 WorldPosition238_g174152 = temp_output_279_0_g174152;
				half4 localSamplePlanar2D238_g174152 = SamplePlanar2D( Texture238_g174152 , Sampler238_g174152 , Coords238_g174152 , WorldPosition238_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174152) = _MainNormalTex;
				SamplerState Sampler246_g174152 = SS29_g174155;
				half4 Coords246_g174152 = temp_output_37_0_g174152;
				half3 WorldPosition246_g174152 = temp_output_279_0_g174152;
				float3 temp_output_280_0_g174152 = Model_NormalWS226_g174142;
				half3 WorldNormal246_g174152 = temp_output_280_0_g174152;
				half4 localSamplePlanar3D246_g174152 = SamplePlanar3D( Texture246_g174152 , Sampler246_g174152 , Coords246_g174152 , WorldPosition246_g174152 , WorldNormal246_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174152) = _MainNormalTex;
				SamplerState Sampler234_g174152 = SS29_g174155;
				float4 Coords234_g174152 = temp_output_37_0_g174152;
				float3 WorldPosition234_g174152 = temp_output_279_0_g174152;
				float4 localSampleStochastic2D234_g174152 = SampleStochastic2D( Texture234_g174152 , Sampler234_g174152 , Coords234_g174152 , WorldPosition234_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174152) = _MainNormalTex;
				SamplerState Sampler263_g174152 = SS29_g174155;
				half4 Coords263_g174152 = temp_output_37_0_g174152;
				half3 WorldPosition263_g174152 = temp_output_279_0_g174152;
				half3 WorldNormal263_g174152 = temp_output_280_0_g174152;
				half4 localSampleStochastic3D263_g174152 = SampleStochastic3D( Texture263_g174152 , Sampler263_g174152 , Coords263_g174152 , WorldPosition263_g174152 , WorldNormal263_g174152 );
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float4 staticSwitch193_g174142 = localSampleMain276_g174152;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float4 staticSwitch193_g174142 = localSampleExtra275_g174152;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float4 staticSwitch193_g174142 = localSamplePlanar2D238_g174152;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float4 staticSwitch193_g174142 = localSamplePlanar3D246_g174152;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch193_g174142 = localSampleStochastic2D234_g174152;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch193_g174142 = localSampleStochastic3D263_g174152;
				#else
				float4 staticSwitch193_g174142 = localSampleMain276_g174152;
				#endif
				half4 Local_NormaTex191_g174142 = staticSwitch193_g174142;
				half4 Normal_Packed45_g174143 = Local_NormaTex191_g174142;
				float2 appendResult58_g174143 = (float2(( (Normal_Packed45_g174143).x * (Normal_Packed45_g174143).w ) , (Normal_Packed45_g174143).y));
				half2 Normal_Default50_g174143 = appendResult58_g174143;
				half2 Normal_ASTC41_g174143 = (Normal_Packed45_g174143).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174143 = Normal_ASTC41_g174143;
				#else
				float2 staticSwitch38_g174143 = Normal_Default50_g174143;
				#endif
				half2 Normal_NO_DTX544_g174143 = (Normal_Packed45_g174143).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174143 = Normal_NO_DTX544_g174143;
				#else
				float2 staticSwitch37_g174143 = staticSwitch38_g174143;
				#endif
				float2 temp_output_26_0_g174142 = ( (staticSwitch37_g174143*2.0 + -1.0) * _MainNormalValue );
				float3x3 ase_worldToTangent = float3x3(WorldTangent,WorldBiTangent,WorldNormal);
				half2 Normal_Planar45_g174144 = temp_output_26_0_g174142;
				float2 break71_g174144 = Normal_Planar45_g174144;
				float3 appendResult72_g174144 = (float3(break71_g174144.x , 0.0 , break71_g174144.y));
				float2 temp_output_205_0_g174142 = (mul( ase_worldToTangent, appendResult72_g174144 )).xy;
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float2 staticSwitch204_g174142 = temp_output_26_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float2 staticSwitch204_g174142 = temp_output_26_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#else
				float2 staticSwitch204_g174142 = temp_output_26_0_g174142;
				#endif
				half2 Local_NormalTS108_g174142 = staticSwitch204_g174142;
				float2 In_NormalTS3_g174158 = Local_NormalTS108_g174142;
				float3 appendResult68_g174145 = (float3(Local_NormalTS108_g174142 , 1.0));
				float3 tanToWorld0 = float3( WorldTangent.x, WorldBiTangent.x, WorldNormal.x );
				float3 tanToWorld1 = float3( WorldTangent.y, WorldBiTangent.y, WorldNormal.y );
				float3 tanToWorld2 = float3( WorldTangent.z, WorldBiTangent.z, WorldNormal.z );
				float3 tanNormal74_g174145 = appendResult68_g174145;
				float3 worldNormal74_g174145 = normalize( float3(dot(tanToWorld0,tanNormal74_g174145), dot(tanToWorld1,tanNormal74_g174145), dot(tanToWorld2,tanNormal74_g174145)) );
				half3 Local_NormalWS250_g174142 = worldNormal74_g174145;
				float3 In_NormalWS3_g174158 = Local_NormalWS250_g174142;
				float4 In_Shader3_g174158 = Local_Masks109_g174142;
				float4 In_Emissive3_g174158 = half4(1,1,1,1);
				float3 temp_output_3_0_g174146 = Local_Albedo139_g174142;
				float dotResult20_g174146 = dot( temp_output_3_0_g174146 , float3(0.2126,0.7152,0.0722) );
				half Local_Grayscale110_g174142 = dotResult20_g174146;
				float In_Grayscale3_g174158 = Local_Grayscale110_g174142;
				float clampResult144_g174142 = clamp( saturate( ( Local_Grayscale110_g174142 * 5.0 ) ) , 0.2 , 1.0 );
				half Local_Luminosity145_g174142 = clampResult144_g174142;
				float In_Luminosity3_g174158 = Local_Luminosity145_g174142;
				float In_MultiMask3_g174158 = Local_MultiMask78_g174142;
				float temp_output_187_0_g174142 = (Local_AlbedoTex185_g174142).w;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch236_g174142 = ( temp_output_187_0_g174142 - _MainAlphaClipValue );
				#else
				float staticSwitch236_g174142 = temp_output_187_0_g174142;
				#endif
				half Local_AlphaClip111_g174142 = staticSwitch236_g174142;
				float In_AlphaClip3_g174158 = Local_AlphaClip111_g174142;
				half Local_AlphaFade246_g174142 = (lerpResult62_g174142).a;
				float In_AlphaFade3_g174158 = Local_AlphaFade246_g174142;
				float3 temp_cast_4 = (1.0).xxx;
				float3 In_Translucency3_g174158 = temp_cast_4;
				float In_Transmission3_g174158 = 1.0;
				float In_Thickness3_g174158 = 0.0;
				float In_Diffusion3_g174158 = 0.0;
				Data3_g174158.Dummy = In_Dummy3_g174158;
				Data3_g174158.Albedo = In_Albedo3_g174158;
				Data3_g174158.AlbedoRaw = In_AlbedoRaw3_g174158;
				Data3_g174158.NormalTS = In_NormalTS3_g174158;
				Data3_g174158.NormalWS = In_NormalWS3_g174158;
				Data3_g174158.Shader = In_Shader3_g174158;
				Data3_g174158.Emissive= In_Emissive3_g174158;
				Data3_g174158.MultiMask = In_MultiMask3_g174158;
				Data3_g174158.Grayscale = In_Grayscale3_g174158;
				Data3_g174158.Luminosity = In_Luminosity3_g174158;
				Data3_g174158.AlphaClip = In_AlphaClip3_g174158;
				Data3_g174158.AlphaFade = In_AlphaFade3_g174158;
				Data3_g174158.Translucency = In_Translucency3_g174158;
				Data3_g174158.Transmission = In_Transmission3_g174158;
				Data3_g174158.Thickness = In_Thickness3_g174158;
				Data3_g174158.Diffusion = In_Diffusion3_g174158;
				TVEVisualData Data4_g174360 = Data3_g174158;
				float Out_Dummy4_g174360 = 0;
				float3 Out_Albedo4_g174360 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174360 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174360 = float2( 0,0 );
				float3 Out_NormalWS4_g174360 = float3( 0,0,0 );
				float4 Out_Shader4_g174360 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174360 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174360 = 0;
				float Out_Grayscale4_g174360 = 0;
				float Out_Luminosity4_g174360 = 0;
				float Out_AlphaClip4_g174360 = 0;
				float Out_AlphaFade4_g174360 = 0;
				float3 Out_Translucency4_g174360 = float3( 0,0,0 );
				float Out_Transmission4_g174360 = 0;
				float Out_Thickness4_g174360 = 0;
				float Out_Diffusion4_g174360 = 0;
				Out_Dummy4_g174360 = Data4_g174360.Dummy;
				Out_Albedo4_g174360 = Data4_g174360.Albedo;
				Out_AlbedoRaw4_g174360 = Data4_g174360.AlbedoRaw;
				Out_NormalTS4_g174360 = Data4_g174360.NormalTS;
				Out_NormalWS4_g174360 = Data4_g174360.NormalWS;
				Out_Shader4_g174360 = Data4_g174360.Shader;
				Out_Emissive4_g174360= Data4_g174360.Emissive;
				Out_MultiMask4_g174360 = Data4_g174360.MultiMask;
				Out_Grayscale4_g174360 = Data4_g174360.Grayscale;
				Out_Luminosity4_g174360= Data4_g174360.Luminosity;
				Out_AlphaClip4_g174360 = Data4_g174360.AlphaClip;
				Out_AlphaFade4_g174360 = Data4_g174360.AlphaFade;
				Out_Translucency4_g174360 = Data4_g174360.Translucency;
				Out_Transmission4_g174360 = Data4_g174360.Transmission;
				Out_Thickness4_g174360 = Data4_g174360.Thickness;
				Out_Diffusion4_g174360 = Data4_g174360.Diffusion;
				half3 Visual_Albedo527_g174348 = Out_Albedo4_g174360;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174349) = _SecondAlbedoTex;
				float localFilterTexture19_g174377 = ( 0.0 );
				SamplerState SamplerDefault19_g174377 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174377 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174377 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174377 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174377 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174377 = SamplerDefault19_g174377;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174377 = SamplerDefault19_g174377;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174377 = SamplerPoint19_g174377;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174377 = SamplerLow19_g174377;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174377 = SamplerMedium19_g174377;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174377 = SamplerHigh19_g174377;
				#endif
				SamplerState Sampler276_g174349 = SS19_g174377;
				half4 Local_LayerCoords790_g174348 = _second_coord_value;
				float4 temp_output_37_0_g174349 = Local_LayerCoords790_g174348;
				half4 Coords276_g174349 = temp_output_37_0_g174349;
				half2 TexCoord276_g174349 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174349 = SampleMain( Texture276_g174349 , Sampler276_g174349 , Coords276_g174349 , TexCoord276_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174349) = _SecondAlbedoTex;
				SamplerState Sampler275_g174349 = SS19_g174377;
				half4 Coords275_g174349 = temp_output_37_0_g174349;
				half2 TexCoord275_g174349 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174349 = SampleExtra( Texture275_g174349 , Sampler275_g174349 , Coords275_g174349 , TexCoord275_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174349) = _SecondAlbedoTex;
				SamplerState Sampler238_g174349 = SS19_g174377;
				half4 Coords238_g174349 = temp_output_37_0_g174349;
				TVEModelData Data15_g174380 = Data16_g164566;
				float Out_Dummy15_g174380 = 0;
				float3 Out_PositionWS15_g174380 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174380 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174380 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174380 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174380 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174380 = float3( 0,0,0 );
				float4 Out_VertexData15_g174380 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174380 = float4( 0,0,0,0 );
				Out_Dummy15_g174380 = Data15_g174380.Dummy;
				Out_PositionWS15_g174380 = Data15_g174380.PositionWS;
				Out_PositionWO15_g174380 = Data15_g174380.PositionWO;
				Out_PivotWS15_g174380 = Data15_g174380.PivotWS;
				Out_PivotWO15_g174380 = Data15_g174380.PivotWO;
				Out_NormalWS15_g174380 = Data15_g174380.NormalWS;
				Out_ViewDirWS15_g174380 = Data15_g174380.ViewDirWS;
				Out_VertexData15_g174380 = Data15_g174380.VertexData;
				Out_BoundsData15_g174380 = Data15_g174380.BoundsData;
				half3 Model_PositionWO636_g174348 = Out_PositionWO15_g174380;
				float3 temp_output_279_0_g174349 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174349 = temp_output_279_0_g174349;
				half4 localSamplePlanar2D238_g174349 = SamplePlanar2D( Texture238_g174349 , Sampler238_g174349 , Coords238_g174349 , WorldPosition238_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174349) = _SecondAlbedoTex;
				SamplerState Sampler246_g174349 = SS19_g174377;
				half4 Coords246_g174349 = temp_output_37_0_g174349;
				half3 WorldPosition246_g174349 = temp_output_279_0_g174349;
				half3 Model_NormalWS869_g174348 = Out_NormalWS15_g174380;
				float3 temp_output_280_0_g174349 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174349 = temp_output_280_0_g174349;
				half4 localSamplePlanar3D246_g174349 = SamplePlanar3D( Texture246_g174349 , Sampler246_g174349 , Coords246_g174349 , WorldPosition246_g174349 , WorldNormal246_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174349) = _SecondAlbedoTex;
				SamplerState Sampler234_g174349 = SS19_g174377;
				float4 Coords234_g174349 = temp_output_37_0_g174349;
				float3 WorldPosition234_g174349 = temp_output_279_0_g174349;
				float4 localSampleStochastic2D234_g174349 = SampleStochastic2D( Texture234_g174349 , Sampler234_g174349 , Coords234_g174349 , WorldPosition234_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174349) = _SecondAlbedoTex;
				SamplerState Sampler263_g174349 = SS19_g174377;
				half4 Coords263_g174349 = temp_output_37_0_g174349;
				half3 WorldPosition263_g174349 = temp_output_279_0_g174349;
				half3 WorldNormal263_g174349 = temp_output_280_0_g174349;
				half4 localSampleStochastic3D263_g174349 = SampleStochastic3D( Texture263_g174349 , Sampler263_g174349 , Coords263_g174349 , WorldPosition263_g174349 , WorldNormal263_g174349 );
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float4 staticSwitch693_g174348 = localSampleMain276_g174349;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float4 staticSwitch693_g174348 = localSampleExtra275_g174349;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float4 staticSwitch693_g174348 = localSamplePlanar2D238_g174349;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float4 staticSwitch693_g174348 = localSamplePlanar3D246_g174349;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch693_g174348 = localSampleStochastic2D234_g174349;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch693_g174348 = localSampleStochastic3D263_g174349;
				#else
				float4 staticSwitch693_g174348 = localSampleMain276_g174349;
				#endif
				half4 Local_AlbedoTex777_g174348 = staticSwitch693_g174348;
				float3 lerpResult716_g174348 = lerp( float3( 1,1,1 ) , (Local_AlbedoTex777_g174348).xyz , _SecondAlbedoValue);
				half3 Local_AlbedoRGB771_g174348 = lerpResult716_g174348;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174351) = _SecondShaderTex;
				float localFilterTexture30_g174379 = ( 0.0 );
				SamplerState SamplerDefault30_g174379 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174379 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174379 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174379 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174379 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174379 = SamplerDefault30_g174379;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174379 = SamplerDefault30_g174379;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174379 = SamplerPoint30_g174379;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174379 = SamplerLow30_g174379;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174379 = SamplerMedium30_g174379;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174379 = SamplerHigh30_g174379;
				#endif
				SamplerState Sampler276_g174351 = SS30_g174379;
				float4 temp_output_37_0_g174351 = Local_LayerCoords790_g174348;
				half4 Coords276_g174351 = temp_output_37_0_g174351;
				half2 TexCoord276_g174351 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174351 = SampleMain( Texture276_g174351 , Sampler276_g174351 , Coords276_g174351 , TexCoord276_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174351) = _SecondShaderTex;
				SamplerState Sampler275_g174351 = SS30_g174379;
				half4 Coords275_g174351 = temp_output_37_0_g174351;
				half2 TexCoord275_g174351 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174351 = SampleExtra( Texture275_g174351 , Sampler275_g174351 , Coords275_g174351 , TexCoord275_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174351) = _SecondShaderTex;
				SamplerState Sampler238_g174351 = SS30_g174379;
				half4 Coords238_g174351 = temp_output_37_0_g174351;
				float3 temp_output_279_0_g174351 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174351 = temp_output_279_0_g174351;
				half4 localSamplePlanar2D238_g174351 = SamplePlanar2D( Texture238_g174351 , Sampler238_g174351 , Coords238_g174351 , WorldPosition238_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174351) = _SecondShaderTex;
				SamplerState Sampler246_g174351 = SS30_g174379;
				half4 Coords246_g174351 = temp_output_37_0_g174351;
				half3 WorldPosition246_g174351 = temp_output_279_0_g174351;
				float3 temp_output_280_0_g174351 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174351 = temp_output_280_0_g174351;
				half4 localSamplePlanar3D246_g174351 = SamplePlanar3D( Texture246_g174351 , Sampler246_g174351 , Coords246_g174351 , WorldPosition246_g174351 , WorldNormal246_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174351) = _SecondShaderTex;
				SamplerState Sampler234_g174351 = SS30_g174379;
				float4 Coords234_g174351 = temp_output_37_0_g174351;
				float3 WorldPosition234_g174351 = temp_output_279_0_g174351;
				float4 localSampleStochastic2D234_g174351 = SampleStochastic2D( Texture234_g174351 , Sampler234_g174351 , Coords234_g174351 , WorldPosition234_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174351) = _SecondShaderTex;
				SamplerState Sampler263_g174351 = SS30_g174379;
				half4 Coords263_g174351 = temp_output_37_0_g174351;
				half3 WorldPosition263_g174351 = temp_output_279_0_g174351;
				half3 WorldNormal263_g174351 = temp_output_280_0_g174351;
				half4 localSampleStochastic3D263_g174351 = SampleStochastic3D( Texture263_g174351 , Sampler263_g174351 , Coords263_g174351 , WorldPosition263_g174351 , WorldNormal263_g174351 );
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float4 staticSwitch722_g174348 = localSampleMain276_g174351;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float4 staticSwitch722_g174348 = localSampleExtra275_g174351;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float4 staticSwitch722_g174348 = localSamplePlanar2D238_g174351;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float4 staticSwitch722_g174348 = localSamplePlanar3D246_g174351;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch722_g174348 = localSampleStochastic2D234_g174351;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch722_g174348 = localSampleStochastic3D263_g174351;
				#else
				float4 staticSwitch722_g174348 = localSampleMain276_g174351;
				#endif
				half4 Local_ShaderTex775_g174348 = staticSwitch722_g174348;
				float lerpResult739_g174348 = lerp( 1.0 , (Local_ShaderTex775_g174348).y , _SecondOcclusionValue);
				float4 appendResult749_g174348 = (float4(( (Local_ShaderTex775_g174348).x * _SecondMetallicValue ) , lerpResult739_g174348 , (Local_ShaderTex775_g174348).z , ( (Local_ShaderTex775_g174348).w * _SecondSmoothnessValue )));
				half4 Local_Masks750_g174348 = appendResult749_g174348;
				float clampResult17_g174355 = clamp( (Local_Masks750_g174348).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174356 = _SecondMultiRemap.x;
				float temp_output_10_0_g174356 = ( _SecondMultiRemap.y - temp_output_7_0_g174356 );
				float temp_output_765_0_g174348 = saturate( ( ( clampResult17_g174355 - temp_output_7_0_g174356 ) / ( temp_output_10_0_g174356 + 0.0001 ) ) );
				half Local_MultiMask767_g174348 = temp_output_765_0_g174348;
				float lerpResult705_g174348 = lerp( 1.0 , Local_MultiMask767_g174348 , _SecondColorMode);
				float4 lerpResult706_g174348 = lerp( _SecondColorTwo , _SecondColor , lerpResult705_g174348);
				half3 Local_ColorRGB774_g174348 = (lerpResult706_g174348).rgb;
				half3 Local_Albedo768_g174348 = ( Local_AlbedoRGB771_g174348 * Local_ColorRGB774_g174348 );
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174373 = 2.0;
				#else
				float staticSwitch1_g174373 = 4.594794;
				#endif
				float3 lerpResult985_g174348 = lerp( Local_Albedo768_g174348 , ( Visual_Albedo527_g174348 * Local_Albedo768_g174348 * staticSwitch1_g174373 ) , _SecondBlendAlbedoValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174352) = _SecondMaskTex;
				SamplerState Sampler276_g174352 = sampler_Linear_Repeat;
				half4 Local_BlendCoords813_g174348 = _second_mask_coord_value;
				float4 temp_output_37_0_g174352 = Local_BlendCoords813_g174348;
				half4 Coords276_g174352 = temp_output_37_0_g174352;
				half2 TexCoord276_g174352 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174352 = SampleMain( Texture276_g174352 , Sampler276_g174352 , Coords276_g174352 , TexCoord276_g174352 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174352) = _SecondMaskTex;
				SamplerState Sampler275_g174352 = sampler_Linear_Repeat;
				half4 Coords275_g174352 = temp_output_37_0_g174352;
				half2 TexCoord275_g174352 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174352 = SampleExtra( Texture275_g174352 , Sampler275_g174352 , Coords275_g174352 , TexCoord275_g174352 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174352) = _SecondMaskTex;
				SamplerState Sampler238_g174352 = sampler_Linear_Repeat;
				half4 Coords238_g174352 = temp_output_37_0_g174352;
				float3 temp_output_279_0_g174352 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174352 = temp_output_279_0_g174352;
				half4 localSamplePlanar2D238_g174352 = SamplePlanar2D( Texture238_g174352 , Sampler238_g174352 , Coords238_g174352 , WorldPosition238_g174352 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174352) = _SecondMaskTex;
				SamplerState Sampler246_g174352 = sampler_Linear_Repeat;
				half4 Coords246_g174352 = temp_output_37_0_g174352;
				half3 WorldPosition246_g174352 = temp_output_279_0_g174352;
				float3 temp_output_280_0_g174352 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174352 = temp_output_280_0_g174352;
				half4 localSamplePlanar3D246_g174352 = SamplePlanar3D( Texture246_g174352 , Sampler246_g174352 , Coords246_g174352 , WorldPosition246_g174352 , WorldNormal246_g174352 );
				#if defined( TVE_SECOND_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch817_g174348 = localSampleMain276_g174352;
				#elif defined( TVE_SECOND_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch817_g174348 = localSampleExtra275_g174352;
				#elif defined( TVE_SECOND_MASK_SAMPLE_PLANAR_2D )
				float4 staticSwitch817_g174348 = localSamplePlanar2D238_g174352;
				#elif defined( TVE_SECOND_MASK_SAMPLE_PLANAR_3D )
				float4 staticSwitch817_g174348 = localSamplePlanar3D246_g174352;
				#else
				float4 staticSwitch817_g174348 = localSampleMain276_g174352;
				#endif
				half4 Local_MaskTex861_g174348 = staticSwitch817_g174348;
				float clampResult17_g174364 = clamp( (Local_MaskTex861_g174348).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174363 = _SecondMaskRemap.x;
				float temp_output_10_0_g174363 = ( _SecondMaskRemap.y - temp_output_7_0_g174363 );
				float lerpResult1015_g174348 = lerp( 1.0 , saturate( ( ( clampResult17_g174364 - temp_output_7_0_g174363 ) / ( temp_output_10_0_g174363 + 0.0001 ) ) ) , _SecondMaskValue);
				half Blend_TexMask429_g174348 = lerpResult1015_g174348;
				half3 Visual_NormalWS951_g174348 = Out_NormalWS4_g174360;
				float clampResult17_g174365 = clamp( saturate( (Visual_NormalWS951_g174348).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174366 = _SecondProjRemap.x;
				float temp_output_10_0_g174366 = ( _SecondProjRemap.y - temp_output_7_0_g174366 );
				float lerpResult996_g174348 = lerp( 1.0 , saturate( ( ( clampResult17_g174365 - temp_output_7_0_g174366 ) / ( temp_output_10_0_g174366 + 0.0001 ) ) ) , _SecondProjValue);
				half Blend_ProjMask434_g174348 = lerpResult996_g174348;
				half4 Model_VertexMasks964_g174348 = Out_VertexData15_g174380;
				float4 break965_g174348 = Model_VertexMasks964_g174348;
				float4 break33_g174367 = _second_vert_mode;
				float temp_output_30_0_g174367 = ( break965_g174348.x * break33_g174367.x );
				float temp_output_29_0_g174367 = ( break965_g174348.y * break33_g174367.y );
				float temp_output_31_0_g174367 = ( break965_g174348.z * break33_g174367.z );
				float temp_output_28_0_g174367 = ( temp_output_30_0_g174367 + temp_output_29_0_g174367 + temp_output_31_0_g174367 + ( break965_g174348.w * break33_g174367.w ) );
				float clampResult17_g174361 = clamp( temp_output_28_0_g174367 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174362 = _SecondMeshRemap.x;
				float temp_output_10_0_g174362 = ( _SecondMeshRemap.y - temp_output_7_0_g174362 );
				float lerpResult1017_g174348 = lerp( 1.0 , saturate( ( ( clampResult17_g174361 - temp_output_7_0_g174362 ) / ( temp_output_10_0_g174362 + 0.0001 ) ) ) , _SecondMeshValue);
				float temp_output_6_0_g174375 = lerpResult1017_g174348;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174375 = ( temp_output_6_0_g174375 + ( _SecondMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174375 = temp_output_6_0_g174375;
				#endif
				float temp_output_987_0_g174348 = staticSwitch14_g174375;
				half Blend_VertMask918_g174348 = temp_output_987_0_g174348;
				float localBuildGlobalData204_g173897 = ( 0.0 );
				TVEGlobalData Data204_g173897 = (TVEGlobalData)0;
				half Dummy211_g173897 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g173897 = Dummy211_g173897;
				float temp_output_82_0_g173907 = _GlobalCoatLayerValue;
				float temp_output_19_0_g173909 = TVE_CoatLayers[(int)temp_output_82_0_g173907];
				TVEModelData Data15_g173979 = Data16_g164566;
				float Out_Dummy15_g173979 = 0;
				float3 Out_PositionWS15_g173979 = float3( 0,0,0 );
				float3 Out_PositionWO15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWS15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWO15_g173979 = float3( 0,0,0 );
				float3 Out_NormalWS15_g173979 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g173979 = float3( 0,0,0 );
				float4 Out_VertexData15_g173979 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g173979 = float4( 0,0,0,0 );
				Out_Dummy15_g173979 = Data15_g173979.Dummy;
				Out_PositionWS15_g173979 = Data15_g173979.PositionWS;
				Out_PositionWO15_g173979 = Data15_g173979.PositionWO;
				Out_PivotWS15_g173979 = Data15_g173979.PivotWS;
				Out_PivotWO15_g173979 = Data15_g173979.PivotWO;
				Out_NormalWS15_g173979 = Data15_g173979.NormalWS;
				Out_ViewDirWS15_g173979 = Data15_g173979.ViewDirWS;
				Out_VertexData15_g173979 = Data15_g173979.VertexData;
				Out_BoundsData15_g173979 = Data15_g173979.BoundsData;
				half3 Model_PositionWS143_g173897 = Out_PositionWS15_g173979;
				half3 Model_PivotWS145_g173897 = Out_PivotWS15_g173979;
				float3 lerpResult300_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalCoatPivotValue);
				half3 Input_Position180_g173910 = lerpResult300_g173897;
				float2 temp_output_75_0_g173910 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_82_0_g173910 = temp_output_82_0_g173907;
				float2 temp_output_119_0_g173910 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_7_0_g173915 = 1.0;
				float temp_output_10_0_g173915 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173915 );
				float4 lerpResult131_g173910 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173910,temp_output_82_0_g173910), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173910,temp_output_82_0_g173910), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173910 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173915 ) / temp_output_10_0_g173915 ) ));
				float4 temp_output_17_0_g173909 = lerpResult131_g173910;
				float4 temp_output_3_0_g173909 = TVE_CoatParams;
				float4 ifLocalVar18_g173909 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173909 >= 0.5 )
				ifLocalVar18_g173909 = temp_output_17_0_g173909;
				else
				ifLocalVar18_g173909 = temp_output_3_0_g173909;
				float4 lerpResult22_g173909 = lerp( temp_output_3_0_g173909 , temp_output_17_0_g173909 , temp_output_19_0_g173909);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173909 = lerpResult22_g173909;
				#else
				float4 staticSwitch24_g173909 = ifLocalVar18_g173909;
				#endif
				half4 Coat_Params302_g173897 = staticSwitch24_g173909;
				float4 In_CoatParams204_g173897 = Coat_Params302_g173897;
				float temp_output_82_0_g173898 = _GlobalPaintLayerValue;
				float temp_output_19_0_g173900 = TVE_PaintLayers[(int)temp_output_82_0_g173898];
				float3 lerpResult85_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalPaintPivotValue);
				half3 Input_Position180_g173901 = lerpResult85_g173897;
				float2 temp_output_75_0_g173901 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_82_0_g173901 = temp_output_82_0_g173898;
				float2 temp_output_119_0_g173901 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_7_0_g173906 = 1.0;
				float temp_output_10_0_g173906 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173906 );
				float4 lerpResult131_g173901 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173901,temp_output_82_0_g173901), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173901,temp_output_82_0_g173901), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173901 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173906 ) / temp_output_10_0_g173906 ) ));
				float4 temp_output_17_0_g173900 = lerpResult131_g173901;
				float4 temp_output_3_0_g173900 = TVE_PaintParams;
				float4 ifLocalVar18_g173900 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173900 >= 0.5 )
				ifLocalVar18_g173900 = temp_output_17_0_g173900;
				else
				ifLocalVar18_g173900 = temp_output_3_0_g173900;
				float4 lerpResult22_g173900 = lerp( temp_output_3_0_g173900 , temp_output_17_0_g173900 , temp_output_19_0_g173900);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173900 = lerpResult22_g173900;
				#else
				float4 staticSwitch24_g173900 = ifLocalVar18_g173900;
				#endif
				half4 Paint_Params71_g173897 = staticSwitch24_g173900;
				float4 In_PaintParams204_g173897 = Paint_Params71_g173897;
				float temp_output_82_0_g173916 = _GlobalGlowLayerValue;
				float temp_output_19_0_g173918 = TVE_GlowLayers[(int)temp_output_82_0_g173916];
				float3 lerpResult247_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalGlowPivotValue);
				half3 Input_Position180_g173919 = lerpResult247_g173897;
				float2 temp_output_75_0_g173919 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_82_0_g173919 = temp_output_82_0_g173916;
				float2 temp_output_119_0_g173919 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_7_0_g173924 = 1.0;
				float temp_output_10_0_g173924 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173924 );
				float4 lerpResult131_g173919 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173919,temp_output_82_0_g173919), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173919,temp_output_82_0_g173919), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173919 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173924 ) / temp_output_10_0_g173924 ) ));
				float4 temp_output_17_0_g173918 = lerpResult131_g173919;
				float4 temp_output_3_0_g173918 = TVE_GlowParams;
				float4 ifLocalVar18_g173918 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173918 >= 0.5 )
				ifLocalVar18_g173918 = temp_output_17_0_g173918;
				else
				ifLocalVar18_g173918 = temp_output_3_0_g173918;
				float4 lerpResult22_g173918 = lerp( temp_output_3_0_g173918 , temp_output_17_0_g173918 , temp_output_19_0_g173918);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173918 = lerpResult22_g173918;
				#else
				float4 staticSwitch24_g173918 = ifLocalVar18_g173918;
				#endif
				half4 Glow_Params248_g173897 = staticSwitch24_g173918;
				float4 In_GlowParams204_g173897 = Glow_Params248_g173897;
				float temp_output_132_0_g173961 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g173963 = TVE_AtmoLayers[(int)temp_output_132_0_g173961];
				float3 lerpResult104_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalAtmoPivotValue);
				half3 Input_Position180_g173964 = lerpResult104_g173897;
				float2 temp_output_75_0_g173964 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_82_0_g173964 = temp_output_132_0_g173961;
				float2 temp_output_119_0_g173964 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_7_0_g173969 = 1.0;
				float temp_output_10_0_g173969 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173969 );
				float4 lerpResult131_g173964 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173964,temp_output_82_0_g173964), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173964,temp_output_82_0_g173964), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173964 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173969 ) / temp_output_10_0_g173969 ) ));
				float4 temp_output_17_0_g173963 = lerpResult131_g173964;
				float4 temp_output_3_0_g173963 = TVE_AtmoParams;
				float4 ifLocalVar18_g173963 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173963 >= 0.5 )
				ifLocalVar18_g173963 = temp_output_17_0_g173963;
				else
				ifLocalVar18_g173963 = temp_output_3_0_g173963;
				float4 lerpResult22_g173963 = lerp( temp_output_3_0_g173963 , temp_output_17_0_g173963 , temp_output_19_0_g173963);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173963 = lerpResult22_g173963;
				#else
				float4 staticSwitch24_g173963 = ifLocalVar18_g173963;
				#endif
				half4 Atmo_Params80_g173897 = staticSwitch24_g173963;
				float4 In_AtmoParams204_g173897 = Atmo_Params80_g173897;
				float temp_output_132_0_g173970 = _GlobalFadeLayerValue;
				float temp_output_19_0_g173972 = TVE_FadeLayers[(int)temp_output_132_0_g173970];
				float3 lerpResult382_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFadePivotValue);
				half3 Input_Position180_g173973 = lerpResult382_g173897;
				float2 temp_output_75_0_g173973 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_82_0_g173973 = temp_output_132_0_g173970;
				float2 temp_output_119_0_g173973 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_7_0_g173978 = 1.0;
				float temp_output_10_0_g173978 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173978 );
				float4 lerpResult131_g173973 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173973,temp_output_82_0_g173973), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173973,temp_output_82_0_g173973), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173973 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173978 ) / temp_output_10_0_g173978 ) ));
				float4 temp_output_17_0_g173972 = lerpResult131_g173973;
				float4 temp_output_3_0_g173972 = TVE_FadeParams;
				float4 ifLocalVar18_g173972 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173972 >= 0.5 )
				ifLocalVar18_g173972 = temp_output_17_0_g173972;
				else
				ifLocalVar18_g173972 = temp_output_3_0_g173972;
				float4 lerpResult22_g173972 = lerp( temp_output_3_0_g173972 , temp_output_17_0_g173972 , temp_output_19_0_g173972);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173972 = lerpResult22_g173972;
				#else
				float4 staticSwitch24_g173972 = ifLocalVar18_g173972;
				#endif
				half4 Fade_Params387_g173897 = staticSwitch24_g173972;
				float4 In_FadeParams204_g173897 = Fade_Params387_g173897;
				float temp_output_130_0_g173952 = _GlobalFormLayerValue;
				float temp_output_19_0_g173954 = TVE_FormLayers[(int)temp_output_130_0_g173952];
				float3 lerpResult168_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFormPivotValue);
				half3 Input_Position180_g173955 = lerpResult168_g173897;
				float2 temp_output_75_0_g173955 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_82_0_g173955 = temp_output_130_0_g173952;
				float2 temp_output_119_0_g173955 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_7_0_g173960 = 1.0;
				float temp_output_10_0_g173960 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173960 );
				float4 lerpResult131_g173955 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173955,temp_output_82_0_g173955), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173955,temp_output_82_0_g173955), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173955 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173960 ) / temp_output_10_0_g173960 ) ));
				float4 temp_output_17_0_g173954 = lerpResult131_g173955;
				float4 temp_output_3_0_g173954 = TVE_FormParams;
				float4 ifLocalVar18_g173954 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173954 >= 0.5 )
				ifLocalVar18_g173954 = temp_output_17_0_g173954;
				else
				ifLocalVar18_g173954 = temp_output_3_0_g173954;
				float4 lerpResult22_g173954 = lerp( temp_output_3_0_g173954 , temp_output_17_0_g173954 , temp_output_19_0_g173954);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173954 = lerpResult22_g173954;
				#else
				float4 staticSwitch24_g173954 = ifLocalVar18_g173954;
				#endif
				half4 Form_Params112_g173897 = staticSwitch24_g173954;
				float4 In_FormParams204_g173897 = Form_Params112_g173897;
				half4 Land_Params375_g173897 = TVE_LandParams;
				float4 In_LandParams204_g173897 = Land_Params375_g173897;
				float temp_output_136_0_g173943 = _GlobalWindLayerValue;
				float temp_output_19_0_g173945 = TVE_WindLayers[(int)temp_output_136_0_g173943];
				half3 Input_Position180_g173946 = Model_PositionWS143_g173897;
				float2 temp_output_75_0_g173946 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_82_0_g173946 = temp_output_136_0_g173943;
				float2 temp_output_119_0_g173946 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_7_0_g173951 = 1.0;
				float temp_output_10_0_g173951 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173951 );
				float4 lerpResult131_g173946 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173946,temp_output_82_0_g173946), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173946,temp_output_82_0_g173946), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173946 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173951 ) / temp_output_10_0_g173951 ) ));
				float4 temp_output_17_0_g173945 = lerpResult131_g173946;
				float4 temp_output_3_0_g173945 = TVE_WindParams;
				float4 ifLocalVar18_g173945 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173945 >= 0.5 )
				ifLocalVar18_g173945 = temp_output_17_0_g173945;
				else
				ifLocalVar18_g173945 = temp_output_3_0_g173945;
				float4 lerpResult22_g173945 = lerp( temp_output_3_0_g173945 , temp_output_17_0_g173945 , temp_output_19_0_g173945);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173945 = lerpResult22_g173945;
				#else
				float4 staticSwitch24_g173945 = ifLocalVar18_g173945;
				#endif
				half4 Wind_Params88_g173897 = staticSwitch24_g173945;
				float4 In_WindParams204_g173897 = Wind_Params88_g173897;
				float temp_output_136_0_g173925 = _GlobalPushLayerValue;
				float temp_output_19_0_g173926 = TVE_PushLayers[(int)temp_output_136_0_g173925];
				half3 Input_Position180_g173927 = Model_PivotWS145_g173897;
				float2 temp_output_75_0_g173927 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_82_0_g173927 = temp_output_136_0_g173925;
				float2 temp_output_119_0_g173927 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_7_0_g173932 = 1.0;
				float temp_output_10_0_g173932 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173932 );
				float4 lerpResult131_g173927 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173927,temp_output_82_0_g173927), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173927,temp_output_82_0_g173927), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173927 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173932 ) / temp_output_10_0_g173932 ) ));
				float4 temp_output_17_0_g173926 = lerpResult131_g173927;
				float4 temp_output_3_0_g173926 = TVE_PushParams;
				float4 ifLocalVar18_g173926 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173926 >= 0.5 )
				ifLocalVar18_g173926 = temp_output_17_0_g173926;
				else
				ifLocalVar18_g173926 = temp_output_3_0_g173926;
				float4 lerpResult22_g173926 = lerp( temp_output_3_0_g173926 , temp_output_17_0_g173926 , temp_output_19_0_g173926);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173926 = lerpResult22_g173926;
				#else
				float4 staticSwitch24_g173926 = ifLocalVar18_g173926;
				#endif
				half4 Push_Params335_g173897 = staticSwitch24_g173926;
				float4 In_PushParams204_g173897 = Push_Params335_g173897;
				Data204_g173897.Dummy = In_Dummy204_g173897;
				Data204_g173897.CoatParams = In_CoatParams204_g173897;
				Data204_g173897.PaintParams = In_PaintParams204_g173897;
				Data204_g173897.GlowParams = In_GlowParams204_g173897;
				Data204_g173897.AtmoParams = In_AtmoParams204_g173897;
				Data204_g173897.FadeParams = In_FadeParams204_g173897;
				Data204_g173897.FormParams= In_FormParams204_g173897;
				Data204_g173897.LandParams = In_LandParams204_g173897;
				Data204_g173897.WindParams = In_WindParams204_g173897;
				Data204_g173897.PushParams = In_PushParams204_g173897;
				TVEGlobalData Data15_g174359 = Data204_g173897;
				float Out_Dummy15_g174359 = 0;
				float4 Out_CoatParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174359 = float4( 0,0,0,0 );
				Out_Dummy15_g174359 = Data15_g174359.Dummy;
				Out_CoatParams15_g174359 = Data15_g174359.CoatParams;
				Out_PaintParams15_g174359 = Data15_g174359.PaintParams;
				Out_GlowParams15_g174359 = Data15_g174359.GlowParams;
				Out_AtmoParams15_g174359= Data15_g174359.AtmoParams;
				Out_FadeParams15_g174359= Data15_g174359.FadeParams;
				Out_FormParams15_g174359 = Data15_g174359.FormParams;
				Out_LandParams15_g174359 = Data15_g174359.LandParams;
				Out_WindParams15_g174359 = Data15_g174359.WindParams;
				Out_PushParams15_g174359 = Data15_g174359.PushParams;
				half4 Global_CoatParams975_g174348 = Out_CoatParams15_g174359;
				float lerpResult1013_g174348 = lerp( 1.0 , (Global_CoatParams975_g174348).z , TVE_IsEnabled);
				#ifdef TVE_SECOND_ELEMENT
				float staticSwitch971_g174348 = lerpResult1013_g174348;
				#else
				float staticSwitch971_g174348 = 1.0;
				#endif
				half Blend_GlobalMask972_g174348 = staticSwitch971_g174348;
				float temp_output_432_0_g174348 = ( _SecondIntensityValue * Blend_TexMask429_g174348 * Blend_ProjMask434_g174348 * Blend_VertMask918_g174348 * Blend_GlobalMask972_g174348 );
				float clampResult17_g174369 = clamp( temp_output_432_0_g174348 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174368 = _SecondBlendRemap.x;
				float temp_output_10_0_g174368 = ( _SecondBlendRemap.y - temp_output_7_0_g174368 );
				half Blend_Mask412_g174348 = ( saturate( ( ( clampResult17_g174369 - temp_output_7_0_g174368 ) / ( temp_output_10_0_g174368 + 0.0001 ) ) ) * _SecondBlendIntensityValue );
				float3 lerpResult403_g174348 = lerp( Visual_Albedo527_g174348 , lerpResult985_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float3 staticSwitch415_g174348 = lerpResult403_g174348;
				#else
				float3 staticSwitch415_g174348 = Visual_Albedo527_g174348;
				#endif
				half3 Final_Albedo601_g174348 = staticSwitch415_g174348;
				float3 In_Albedo3_g174381 = Final_Albedo601_g174348;
				float3 In_AlbedoRaw3_g174381 = Final_Albedo601_g174348;
				half2 Visual_NormalTS529_g174348 = Out_NormalTS4_g174360;
				float2 lerpResult40_g174371 = lerp( float2( 0,0 ) , Visual_NormalTS529_g174348 , _SecondBlendNormalValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174350) = _SecondNormalTex;
				float localFilterTexture29_g174378 = ( 0.0 );
				SamplerState SamplerDefault29_g174378 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174378 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174378 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174378 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174378 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174378 = SamplerDefault29_g174378;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174378 = SamplerDefault29_g174378;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174378 = SamplerPoint29_g174378;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174378 = SamplerLow29_g174378;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174378 = SamplerMedium29_g174378;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174378 = SamplerHigh29_g174378;
				#endif
				SamplerState Sampler276_g174350 = SS29_g174378;
				float4 temp_output_37_0_g174350 = Local_LayerCoords790_g174348;
				half4 Coords276_g174350 = temp_output_37_0_g174350;
				half2 TexCoord276_g174350 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174350 = SampleMain( Texture276_g174350 , Sampler276_g174350 , Coords276_g174350 , TexCoord276_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174350) = _SecondNormalTex;
				SamplerState Sampler275_g174350 = SS29_g174378;
				half4 Coords275_g174350 = temp_output_37_0_g174350;
				half2 TexCoord275_g174350 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174350 = SampleExtra( Texture275_g174350 , Sampler275_g174350 , Coords275_g174350 , TexCoord275_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174350) = _SecondNormalTex;
				SamplerState Sampler238_g174350 = SS29_g174378;
				half4 Coords238_g174350 = temp_output_37_0_g174350;
				float3 temp_output_279_0_g174350 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174350 = temp_output_279_0_g174350;
				half4 localSamplePlanar2D238_g174350 = SamplePlanar2D( Texture238_g174350 , Sampler238_g174350 , Coords238_g174350 , WorldPosition238_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174350) = _SecondNormalTex;
				SamplerState Sampler246_g174350 = SS29_g174378;
				half4 Coords246_g174350 = temp_output_37_0_g174350;
				half3 WorldPosition246_g174350 = temp_output_279_0_g174350;
				float3 temp_output_280_0_g174350 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174350 = temp_output_280_0_g174350;
				half4 localSamplePlanar3D246_g174350 = SamplePlanar3D( Texture246_g174350 , Sampler246_g174350 , Coords246_g174350 , WorldPosition246_g174350 , WorldNormal246_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174350) = _SecondNormalTex;
				SamplerState Sampler234_g174350 = SS29_g174378;
				float4 Coords234_g174350 = temp_output_37_0_g174350;
				float3 WorldPosition234_g174350 = temp_output_279_0_g174350;
				float4 localSampleStochastic2D234_g174350 = SampleStochastic2D( Texture234_g174350 , Sampler234_g174350 , Coords234_g174350 , WorldPosition234_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174350) = _SecondNormalTex;
				SamplerState Sampler263_g174350 = SS29_g174378;
				half4 Coords263_g174350 = temp_output_37_0_g174350;
				half3 WorldPosition263_g174350 = temp_output_279_0_g174350;
				half3 WorldNormal263_g174350 = temp_output_280_0_g174350;
				half4 localSampleStochastic3D263_g174350 = SampleStochastic3D( Texture263_g174350 , Sampler263_g174350 , Coords263_g174350 , WorldPosition263_g174350 , WorldNormal263_g174350 );
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float4 staticSwitch698_g174348 = localSampleMain276_g174350;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float4 staticSwitch698_g174348 = localSampleExtra275_g174350;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float4 staticSwitch698_g174348 = localSamplePlanar2D238_g174350;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float4 staticSwitch698_g174348 = localSamplePlanar3D246_g174350;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch698_g174348 = localSampleStochastic2D234_g174350;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch698_g174348 = localSampleStochastic3D263_g174350;
				#else
				float4 staticSwitch698_g174348 = localSampleMain276_g174350;
				#endif
				half4 Local_NormalTex776_g174348 = staticSwitch698_g174348;
				half4 Normal_Packed45_g174353 = Local_NormalTex776_g174348;
				float2 appendResult58_g174353 = (float2(( (Normal_Packed45_g174353).x * (Normal_Packed45_g174353).w ) , (Normal_Packed45_g174353).y));
				half2 Normal_Default50_g174353 = appendResult58_g174353;
				half2 Normal_ASTC41_g174353 = (Normal_Packed45_g174353).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174353 = Normal_ASTC41_g174353;
				#else
				float2 staticSwitch38_g174353 = Normal_Default50_g174353;
				#endif
				half2 Normal_NO_DTX544_g174353 = (Normal_Packed45_g174353).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174353 = Normal_NO_DTX544_g174353;
				#else
				float2 staticSwitch37_g174353 = staticSwitch38_g174353;
				#endif
				float2 temp_output_724_0_g174348 = ( (staticSwitch37_g174353*2.0 + -1.0) * _SecondNormalValue );
				half2 Normal_Planar45_g174354 = temp_output_724_0_g174348;
				float2 break71_g174354 = Normal_Planar45_g174354;
				float3 appendResult72_g174354 = (float3(break71_g174354.x , 0.0 , break71_g174354.y));
				float2 temp_output_858_0_g174348 = (mul( ase_worldToTangent, appendResult72_g174354 )).xy;
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float2 staticSwitch727_g174348 = temp_output_724_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float2 staticSwitch727_g174348 = temp_output_724_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#else
				float2 staticSwitch727_g174348 = temp_output_724_0_g174348;
				#endif
				half2 Local_NormalTS729_g174348 = staticSwitch727_g174348;
				float2 temp_output_36_0_g174371 = ( lerpResult40_g174371 + Local_NormalTS729_g174348 );
				float2 lerpResult405_g174348 = lerp( Visual_NormalTS529_g174348 , temp_output_36_0_g174371 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float2 staticSwitch418_g174348 = lerpResult405_g174348;
				#else
				float2 staticSwitch418_g174348 = Visual_NormalTS529_g174348;
				#endif
				half2 Final_NormalTS612_g174348 = staticSwitch418_g174348;
				float2 In_NormalTS3_g174381 = Final_NormalTS612_g174348;
				float3 appendResult68_g174372 = (float3(Final_NormalTS612_g174348 , 1.0));
				float3 tanNormal74_g174372 = appendResult68_g174372;
				float3 worldNormal74_g174372 = normalize( float3(dot(tanToWorld0,tanNormal74_g174372), dot(tanToWorld1,tanNormal74_g174372), dot(tanToWorld2,tanNormal74_g174372)) );
				half3 Final_NormalWS950_g174348 = worldNormal74_g174372;
				float3 In_NormalWS3_g174381 = Final_NormalWS950_g174348;
				half4 Visual_Shader531_g174348 = Out_Shader4_g174360;
				float4 lerpResult994_g174348 = lerp( Local_Masks750_g174348 , ( Visual_Shader531_g174348 * Local_Masks750_g174348 ) , _SecondBlendShaderValue);
				float4 lerpResult440_g174348 = lerp( Visual_Shader531_g174348 , lerpResult994_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float4 staticSwitch451_g174348 = lerpResult440_g174348;
				#else
				float4 staticSwitch451_g174348 = Visual_Shader531_g174348;
				#endif
				half4 Final_Masks613_g174348 = staticSwitch451_g174348;
				float4 In_Shader3_g174381 = Final_Masks613_g174348;
				float4 In_Emissive3_g174381 = Out_Emissive4_g174360;
				float3 temp_output_3_0_g174374 = Final_Albedo601_g174348;
				float dotResult20_g174374 = dot( temp_output_3_0_g174374 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale615_g174348 = dotResult20_g174374;
				float In_Grayscale3_g174381 = Final_Grayscale615_g174348;
				float clampResult651_g174348 = clamp( saturate( ( Final_Grayscale615_g174348 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity652_g174348 = clampResult651_g174348;
				float In_Luminosity3_g174381 = Final_Luminosity652_g174348;
				half Visual_MultiMask547_g174348 = Out_MultiMask4_g174360;
				float lerpResult477_g174348 = lerp( Visual_MultiMask547_g174348 , Local_MultiMask767_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float staticSwitch482_g174348 = lerpResult477_g174348;
				#else
				float staticSwitch482_g174348 = Visual_MultiMask547_g174348;
				#endif
				half Final_MultiMask572_g174348 = staticSwitch482_g174348;
				float In_MultiMask3_g174381 = Final_MultiMask572_g174348;
				half Visual_AlphaClip559_g174348 = Out_AlphaClip4_g174360;
				float temp_output_718_0_g174348 = (Local_AlbedoTex777_g174348).w;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch932_g174348 = ( temp_output_718_0_g174348 - _SecondAlphaClipValue );
				#else
				float staticSwitch932_g174348 = temp_output_718_0_g174348;
				#endif
				half Local_AlphaClip772_g174348 = staticSwitch932_g174348;
				float lerpResult448_g174348 = lerp( Visual_AlphaClip559_g174348 , Local_AlphaClip772_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float staticSwitch564_g174348 = lerpResult448_g174348;
				#else
				float staticSwitch564_g174348 = Visual_AlphaClip559_g174348;
				#endif
				half Final_AlphaClip602_g174348 = staticSwitch564_g174348;
				float In_AlphaClip3_g174381 = Final_AlphaClip602_g174348;
				half Visual_AlphaFade588_g174348 = Out_AlphaFade4_g174360;
				half Local_AlphaFade773_g174348 = (lerpResult706_g174348).a;
				float lerpResult604_g174348 = lerp( Visual_AlphaFade588_g174348 , Local_AlphaFade773_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float staticSwitch608_g174348 = lerpResult604_g174348;
				#else
				float staticSwitch608_g174348 = Visual_AlphaFade588_g174348;
				#endif
				half Final_AlphaFade611_g174348 = staticSwitch608_g174348;
				float In_AlphaFade3_g174381 = Final_AlphaFade611_g174348;
				float3 In_Translucency3_g174381 = Out_Translucency4_g174360;
				float In_Transmission3_g174381 = Out_Transmission4_g174360;
				float In_Thickness3_g174381 = Out_Thickness4_g174360;
				float In_Diffusion3_g174381 = Out_Diffusion4_g174360;
				Data3_g174381.Dummy = In_Dummy3_g174381;
				Data3_g174381.Albedo = In_Albedo3_g174381;
				Data3_g174381.AlbedoRaw = In_AlbedoRaw3_g174381;
				Data3_g174381.NormalTS = In_NormalTS3_g174381;
				Data3_g174381.NormalWS = In_NormalWS3_g174381;
				Data3_g174381.Shader = In_Shader3_g174381;
				Data3_g174381.Emissive= In_Emissive3_g174381;
				Data3_g174381.MultiMask = In_MultiMask3_g174381;
				Data3_g174381.Grayscale = In_Grayscale3_g174381;
				Data3_g174381.Luminosity = In_Luminosity3_g174381;
				Data3_g174381.AlphaClip = In_AlphaClip3_g174381;
				Data3_g174381.AlphaFade = In_AlphaFade3_g174381;
				Data3_g174381.Translucency = In_Translucency3_g174381;
				Data3_g174381.Transmission = In_Transmission3_g174381;
				Data3_g174381.Thickness = In_Thickness3_g174381;
				Data3_g174381.Diffusion = In_Diffusion3_g174381;
				TVEVisualData Data4_g174402 = Data3_g174381;
				float Out_Dummy4_g174402 = 0;
				float3 Out_Albedo4_g174402 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174402 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174402 = float2( 0,0 );
				float3 Out_NormalWS4_g174402 = float3( 0,0,0 );
				float4 Out_Shader4_g174402 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174402 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174402 = 0;
				float Out_Grayscale4_g174402 = 0;
				float Out_Luminosity4_g174402 = 0;
				float Out_AlphaClip4_g174402 = 0;
				float Out_AlphaFade4_g174402 = 0;
				float3 Out_Translucency4_g174402 = float3( 0,0,0 );
				float Out_Transmission4_g174402 = 0;
				float Out_Thickness4_g174402 = 0;
				float Out_Diffusion4_g174402 = 0;
				Out_Dummy4_g174402 = Data4_g174402.Dummy;
				Out_Albedo4_g174402 = Data4_g174402.Albedo;
				Out_AlbedoRaw4_g174402 = Data4_g174402.AlbedoRaw;
				Out_NormalTS4_g174402 = Data4_g174402.NormalTS;
				Out_NormalWS4_g174402 = Data4_g174402.NormalWS;
				Out_Shader4_g174402 = Data4_g174402.Shader;
				Out_Emissive4_g174402= Data4_g174402.Emissive;
				Out_MultiMask4_g174402 = Data4_g174402.MultiMask;
				Out_Grayscale4_g174402 = Data4_g174402.Grayscale;
				Out_Luminosity4_g174402= Data4_g174402.Luminosity;
				Out_AlphaClip4_g174402 = Data4_g174402.AlphaClip;
				Out_AlphaFade4_g174402 = Data4_g174402.AlphaFade;
				Out_Translucency4_g174402 = Data4_g174402.Translucency;
				Out_Transmission4_g174402 = Data4_g174402.Transmission;
				Out_Thickness4_g174402 = Data4_g174402.Thickness;
				Out_Diffusion4_g174402 = Data4_g174402.Diffusion;
				half3 Visual_Albedo527_g174386 = Out_Albedo4_g174402;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174387) = _ThirdAlbedoTex;
				float localFilterTexture19_g174415 = ( 0.0 );
				SamplerState SamplerDefault19_g174415 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174415 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174415 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174415 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174415 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174415 = SamplerDefault19_g174415;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174415 = SamplerDefault19_g174415;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174415 = SamplerPoint19_g174415;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174415 = SamplerLow19_g174415;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174415 = SamplerMedium19_g174415;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174415 = SamplerHigh19_g174415;
				#endif
				SamplerState Sampler276_g174387 = SS19_g174415;
				half4 Local_LayerCoords790_g174386 = _third_coord_value;
				float4 temp_output_37_0_g174387 = Local_LayerCoords790_g174386;
				half4 Coords276_g174387 = temp_output_37_0_g174387;
				half2 TexCoord276_g174387 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174387 = SampleMain( Texture276_g174387 , Sampler276_g174387 , Coords276_g174387 , TexCoord276_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler275_g174387 = SS19_g174415;
				half4 Coords275_g174387 = temp_output_37_0_g174387;
				half2 TexCoord275_g174387 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174387 = SampleExtra( Texture275_g174387 , Sampler275_g174387 , Coords275_g174387 , TexCoord275_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler238_g174387 = SS19_g174415;
				half4 Coords238_g174387 = temp_output_37_0_g174387;
				TVEModelData Data15_g174418 = Data16_g164566;
				float Out_Dummy15_g174418 = 0;
				float3 Out_PositionWS15_g174418 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174418 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174418 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174418 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174418 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174418 = float3( 0,0,0 );
				float4 Out_VertexData15_g174418 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174418 = float4( 0,0,0,0 );
				Out_Dummy15_g174418 = Data15_g174418.Dummy;
				Out_PositionWS15_g174418 = Data15_g174418.PositionWS;
				Out_PositionWO15_g174418 = Data15_g174418.PositionWO;
				Out_PivotWS15_g174418 = Data15_g174418.PivotWS;
				Out_PivotWO15_g174418 = Data15_g174418.PivotWO;
				Out_NormalWS15_g174418 = Data15_g174418.NormalWS;
				Out_ViewDirWS15_g174418 = Data15_g174418.ViewDirWS;
				Out_VertexData15_g174418 = Data15_g174418.VertexData;
				Out_BoundsData15_g174418 = Data15_g174418.BoundsData;
				half3 Model_PositionWO636_g174386 = Out_PositionWO15_g174418;
				float3 temp_output_279_0_g174387 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174387 = temp_output_279_0_g174387;
				half4 localSamplePlanar2D238_g174387 = SamplePlanar2D( Texture238_g174387 , Sampler238_g174387 , Coords238_g174387 , WorldPosition238_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler246_g174387 = SS19_g174415;
				half4 Coords246_g174387 = temp_output_37_0_g174387;
				half3 WorldPosition246_g174387 = temp_output_279_0_g174387;
				half3 Model_NormalWS869_g174386 = Out_NormalWS15_g174418;
				float3 temp_output_280_0_g174387 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174387 = temp_output_280_0_g174387;
				half4 localSamplePlanar3D246_g174387 = SamplePlanar3D( Texture246_g174387 , Sampler246_g174387 , Coords246_g174387 , WorldPosition246_g174387 , WorldNormal246_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler234_g174387 = SS19_g174415;
				float4 Coords234_g174387 = temp_output_37_0_g174387;
				float3 WorldPosition234_g174387 = temp_output_279_0_g174387;
				float4 localSampleStochastic2D234_g174387 = SampleStochastic2D( Texture234_g174387 , Sampler234_g174387 , Coords234_g174387 , WorldPosition234_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler263_g174387 = SS19_g174415;
				half4 Coords263_g174387 = temp_output_37_0_g174387;
				half3 WorldPosition263_g174387 = temp_output_279_0_g174387;
				half3 WorldNormal263_g174387 = temp_output_280_0_g174387;
				half4 localSampleStochastic3D263_g174387 = SampleStochastic3D( Texture263_g174387 , Sampler263_g174387 , Coords263_g174387 , WorldPosition263_g174387 , WorldNormal263_g174387 );
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float4 staticSwitch693_g174386 = localSampleMain276_g174387;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float4 staticSwitch693_g174386 = localSampleExtra275_g174387;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float4 staticSwitch693_g174386 = localSamplePlanar2D238_g174387;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float4 staticSwitch693_g174386 = localSamplePlanar3D246_g174387;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch693_g174386 = localSampleStochastic2D234_g174387;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch693_g174386 = localSampleStochastic3D263_g174387;
				#else
				float4 staticSwitch693_g174386 = localSampleMain276_g174387;
				#endif
				half4 Local_AlbedoTex777_g174386 = staticSwitch693_g174386;
				float3 lerpResult716_g174386 = lerp( float3( 1,1,1 ) , (Local_AlbedoTex777_g174386).xyz , _ThirdAlbedoValue);
				half3 Local_AlbedoRGB771_g174386 = lerpResult716_g174386;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174389) = _ThirdShaderTex;
				float localFilterTexture30_g174417 = ( 0.0 );
				SamplerState SamplerDefault30_g174417 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174417 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174417 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174417 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174417 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174417 = SamplerDefault30_g174417;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174417 = SamplerDefault30_g174417;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174417 = SamplerPoint30_g174417;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174417 = SamplerLow30_g174417;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174417 = SamplerMedium30_g174417;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174417 = SamplerHigh30_g174417;
				#endif
				SamplerState Sampler276_g174389 = SS30_g174417;
				float4 temp_output_37_0_g174389 = Local_LayerCoords790_g174386;
				half4 Coords276_g174389 = temp_output_37_0_g174389;
				half2 TexCoord276_g174389 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174389 = SampleMain( Texture276_g174389 , Sampler276_g174389 , Coords276_g174389 , TexCoord276_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174389) = _ThirdShaderTex;
				SamplerState Sampler275_g174389 = SS30_g174417;
				half4 Coords275_g174389 = temp_output_37_0_g174389;
				half2 TexCoord275_g174389 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174389 = SampleExtra( Texture275_g174389 , Sampler275_g174389 , Coords275_g174389 , TexCoord275_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174389) = _ThirdShaderTex;
				SamplerState Sampler238_g174389 = SS30_g174417;
				half4 Coords238_g174389 = temp_output_37_0_g174389;
				float3 temp_output_279_0_g174389 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174389 = temp_output_279_0_g174389;
				half4 localSamplePlanar2D238_g174389 = SamplePlanar2D( Texture238_g174389 , Sampler238_g174389 , Coords238_g174389 , WorldPosition238_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174389) = _ThirdShaderTex;
				SamplerState Sampler246_g174389 = SS30_g174417;
				half4 Coords246_g174389 = temp_output_37_0_g174389;
				half3 WorldPosition246_g174389 = temp_output_279_0_g174389;
				float3 temp_output_280_0_g174389 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174389 = temp_output_280_0_g174389;
				half4 localSamplePlanar3D246_g174389 = SamplePlanar3D( Texture246_g174389 , Sampler246_g174389 , Coords246_g174389 , WorldPosition246_g174389 , WorldNormal246_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174389) = _ThirdShaderTex;
				SamplerState Sampler234_g174389 = SS30_g174417;
				float4 Coords234_g174389 = temp_output_37_0_g174389;
				float3 WorldPosition234_g174389 = temp_output_279_0_g174389;
				float4 localSampleStochastic2D234_g174389 = SampleStochastic2D( Texture234_g174389 , Sampler234_g174389 , Coords234_g174389 , WorldPosition234_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174389) = _ThirdShaderTex;
				SamplerState Sampler263_g174389 = SS30_g174417;
				half4 Coords263_g174389 = temp_output_37_0_g174389;
				half3 WorldPosition263_g174389 = temp_output_279_0_g174389;
				half3 WorldNormal263_g174389 = temp_output_280_0_g174389;
				half4 localSampleStochastic3D263_g174389 = SampleStochastic3D( Texture263_g174389 , Sampler263_g174389 , Coords263_g174389 , WorldPosition263_g174389 , WorldNormal263_g174389 );
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float4 staticSwitch722_g174386 = localSampleMain276_g174389;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float4 staticSwitch722_g174386 = localSampleExtra275_g174389;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float4 staticSwitch722_g174386 = localSamplePlanar2D238_g174389;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float4 staticSwitch722_g174386 = localSamplePlanar3D246_g174389;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch722_g174386 = localSampleStochastic2D234_g174389;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch722_g174386 = localSampleStochastic3D263_g174389;
				#else
				float4 staticSwitch722_g174386 = localSampleMain276_g174389;
				#endif
				half4 Local_ShaderTex775_g174386 = staticSwitch722_g174386;
				float lerpResult739_g174386 = lerp( 1.0 , (Local_ShaderTex775_g174386).y , _ThirdOcclusionValue);
				float4 appendResult749_g174386 = (float4(( (Local_ShaderTex775_g174386).x * _ThirdMetallicValue ) , lerpResult739_g174386 , (Local_ShaderTex775_g174386).z , ( (Local_ShaderTex775_g174386).w * _ThirdSmoothnessValue )));
				half4 Local_Masks750_g174386 = appendResult749_g174386;
				float clampResult17_g174392 = clamp( (Local_Masks750_g174386).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174393 = _ThirdMultiRemap.x;
				float temp_output_10_0_g174393 = ( _ThirdMultiRemap.y - temp_output_7_0_g174393 );
				float temp_output_765_0_g174386 = saturate( ( ( clampResult17_g174392 - temp_output_7_0_g174393 ) / ( temp_output_10_0_g174393 + 0.0001 ) ) );
				half Local_MultiMask767_g174386 = temp_output_765_0_g174386;
				float lerpResult705_g174386 = lerp( 1.0 , Local_MultiMask767_g174386 , _ThirdColorMode);
				float4 lerpResult706_g174386 = lerp( _ThirdColorTwo , _ThirdColor , lerpResult705_g174386);
				half3 Local_ColorRGB774_g174386 = (lerpResult706_g174386).rgb;
				half3 Local_Albedo768_g174386 = ( Local_AlbedoRGB771_g174386 * Local_ColorRGB774_g174386 );
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174410 = 2.0;
				#else
				float staticSwitch1_g174410 = 4.594794;
				#endif
				float3 lerpResult985_g174386 = lerp( Local_Albedo768_g174386 , ( Visual_Albedo527_g174386 * Local_Albedo768_g174386 * staticSwitch1_g174410 ) , _ThirdBlendAlbedoValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174413) = _ThirdMaskTex;
				SamplerState Sampler276_g174413 = sampler_Linear_Repeat;
				half4 Local_MaskCoords813_g174386 = _third_mask_coord_value;
				float4 temp_output_37_0_g174413 = Local_MaskCoords813_g174386;
				half4 Coords276_g174413 = temp_output_37_0_g174413;
				half2 TexCoord276_g174413 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174413 = SampleMain( Texture276_g174413 , Sampler276_g174413 , Coords276_g174413 , TexCoord276_g174413 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174413) = _ThirdMaskTex;
				SamplerState Sampler275_g174413 = sampler_Linear_Repeat;
				half4 Coords275_g174413 = temp_output_37_0_g174413;
				half2 TexCoord275_g174413 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174413 = SampleExtra( Texture275_g174413 , Sampler275_g174413 , Coords275_g174413 , TexCoord275_g174413 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174413) = _ThirdMaskTex;
				SamplerState Sampler238_g174413 = sampler_Linear_Repeat;
				half4 Coords238_g174413 = temp_output_37_0_g174413;
				float3 temp_output_279_0_g174413 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174413 = temp_output_279_0_g174413;
				half4 localSamplePlanar2D238_g174413 = SamplePlanar2D( Texture238_g174413 , Sampler238_g174413 , Coords238_g174413 , WorldPosition238_g174413 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174413) = _ThirdMaskTex;
				SamplerState Sampler246_g174413 = sampler_Linear_Repeat;
				half4 Coords246_g174413 = temp_output_37_0_g174413;
				half3 WorldPosition246_g174413 = temp_output_279_0_g174413;
				float3 temp_output_280_0_g174413 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174413 = temp_output_280_0_g174413;
				half4 localSamplePlanar3D246_g174413 = SamplePlanar3D( Texture246_g174413 , Sampler246_g174413 , Coords246_g174413 , WorldPosition246_g174413 , WorldNormal246_g174413 );
				#if defined( TVE_THIRD_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch817_g174386 = localSampleMain276_g174413;
				#elif defined( TVE_THIRD_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch817_g174386 = localSampleExtra275_g174413;
				#elif defined( TVE_THIRD_MASK_SAMPLE_PLANAR_2D )
				float4 staticSwitch817_g174386 = localSamplePlanar2D238_g174413;
				#elif defined( TVE_THIRD_MASK_SAMPLE_PLANAR_3D )
				float4 staticSwitch817_g174386 = localSamplePlanar3D246_g174413;
				#else
				float4 staticSwitch817_g174386 = localSampleMain276_g174413;
				#endif
				half4 Local_MaskTex861_g174386 = staticSwitch817_g174386;
				float clampResult17_g174397 = clamp( (Local_MaskTex861_g174386).y , 0.0001 , 0.9999 );
				float temp_output_7_0_g174398 = _ThirdMaskRemap.x;
				float temp_output_10_0_g174398 = ( _ThirdMaskRemap.y - temp_output_7_0_g174398 );
				float lerpResult1028_g174386 = lerp( 1.0 , saturate( ( ( clampResult17_g174397 - temp_output_7_0_g174398 ) / ( temp_output_10_0_g174398 + 0.0001 ) ) ) , _ThirdMaskValue);
				half Detail_TexMask429_g174386 = lerpResult1028_g174386;
				half4 Model_VertexMasks960_g174386 = Out_VertexData15_g174418;
				float4 break961_g174386 = Model_VertexMasks960_g174386;
				float4 break33_g174401 = _third_vert_mode;
				float temp_output_30_0_g174401 = ( break961_g174386.x * break33_g174401.x );
				float temp_output_29_0_g174401 = ( break961_g174386.y * break33_g174401.y );
				float temp_output_31_0_g174401 = ( break961_g174386.z * break33_g174401.z );
				float temp_output_28_0_g174401 = ( temp_output_30_0_g174401 + temp_output_29_0_g174401 + temp_output_31_0_g174401 + ( break961_g174386.w * break33_g174401.w ) );
				float clampResult17_g174395 = clamp( temp_output_28_0_g174401 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174396 = _ThirdMeshRemap.x;
				float temp_output_10_0_g174396 = ( _ThirdMeshRemap.y - temp_output_7_0_g174396 );
				float lerpResult1026_g174386 = lerp( 1.0 , saturate( ( ( clampResult17_g174395 - temp_output_7_0_g174396 ) / ( temp_output_10_0_g174396 + 0.0001 ) ) ) , _ThirdMeshValue);
				float temp_output_6_0_g174412 = lerpResult1026_g174386;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174412 = ( temp_output_6_0_g174412 + ( _ThirdMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174412 = temp_output_6_0_g174412;
				#endif
				float temp_output_992_0_g174386 = staticSwitch14_g174412;
				half Blend_VertMask913_g174386 = temp_output_992_0_g174386;
				half3 Visual_NormalWS953_g174386 = Out_NormalWS4_g174402;
				float clampResult17_g174399 = clamp( saturate( (Visual_NormalWS953_g174386).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174400 = _ThirdProjRemap.x;
				float temp_output_10_0_g174400 = ( _ThirdProjRemap.y - temp_output_7_0_g174400 );
				float lerpResult1004_g174386 = lerp( 1.0 , saturate( ( ( clampResult17_g174399 - temp_output_7_0_g174400 ) / ( temp_output_10_0_g174400 + 0.0001 ) ) ) , _ThirdProjValue);
				half Blend_ProjMask912_g174386 = lerpResult1004_g174386;
				TVEGlobalData Data15_g174404 = Data204_g173897;
				float Out_Dummy15_g174404 = 0;
				float4 Out_CoatParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174404 = float4( 0,0,0,0 );
				Out_Dummy15_g174404 = Data15_g174404.Dummy;
				Out_CoatParams15_g174404 = Data15_g174404.CoatParams;
				Out_PaintParams15_g174404 = Data15_g174404.PaintParams;
				Out_GlowParams15_g174404 = Data15_g174404.GlowParams;
				Out_AtmoParams15_g174404= Data15_g174404.AtmoParams;
				Out_FadeParams15_g174404= Data15_g174404.FadeParams;
				Out_FormParams15_g174404 = Data15_g174404.FormParams;
				Out_LandParams15_g174404 = Data15_g174404.LandParams;
				Out_WindParams15_g174404 = Data15_g174404.WindParams;
				Out_PushParams15_g174404 = Data15_g174404.PushParams;
				half4 Global_CoatParams972_g174386 = Out_CoatParams15_g174404;
				float lerpResult1023_g174386 = lerp( 1.0 , (Global_CoatParams972_g174386).y , TVE_IsEnabled);
				#ifdef TVE_THIRD_ELEMENT
				float staticSwitch965_g174386 = lerpResult1023_g174386;
				#else
				float staticSwitch965_g174386 = 1.0;
				#endif
				half Blend_GlobalMask968_g174386 = staticSwitch965_g174386;
				float temp_output_432_0_g174386 = ( _ThirdIntensityValue * Detail_TexMask429_g174386 * Blend_VertMask913_g174386 * Blend_ProjMask912_g174386 * Blend_GlobalMask968_g174386 );
				float clampResult17_g174406 = clamp( temp_output_432_0_g174386 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174405 = _ThirdBlendRemap.x;
				float temp_output_10_0_g174405 = ( _ThirdBlendRemap.y - temp_output_7_0_g174405 );
				half Detail_Mask412_g174386 = ( saturate( ( ( clampResult17_g174406 - temp_output_7_0_g174405 ) / ( temp_output_10_0_g174405 + 0.0001 ) ) ) * _ThirdBlendIntensityValue );
				float3 lerpResult989_g174386 = lerp( Visual_Albedo527_g174386 , lerpResult985_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float3 staticSwitch415_g174386 = lerpResult989_g174386;
				#else
				float3 staticSwitch415_g174386 = Visual_Albedo527_g174386;
				#endif
				half3 Final_Albedo601_g174386 = staticSwitch415_g174386;
				float3 In_Albedo3_g174403 = Final_Albedo601_g174386;
				float3 In_AlbedoRaw3_g174403 = Final_Albedo601_g174386;
				half2 Visual_NormalTS529_g174386 = Out_NormalTS4_g174402;
				float2 lerpResult40_g174408 = lerp( float2( 0,0 ) , Visual_NormalTS529_g174386 , _ThirdBlendNormalValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174388) = _ThirdNormalTex;
				float localFilterTexture29_g174416 = ( 0.0 );
				SamplerState SamplerDefault29_g174416 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174416 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174416 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174416 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174416 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174416 = SamplerDefault29_g174416;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174416 = SamplerDefault29_g174416;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174416 = SamplerPoint29_g174416;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174416 = SamplerLow29_g174416;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174416 = SamplerMedium29_g174416;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174416 = SamplerHigh29_g174416;
				#endif
				SamplerState Sampler276_g174388 = SS29_g174416;
				float4 temp_output_37_0_g174388 = Local_LayerCoords790_g174386;
				half4 Coords276_g174388 = temp_output_37_0_g174388;
				half2 TexCoord276_g174388 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174388 = SampleMain( Texture276_g174388 , Sampler276_g174388 , Coords276_g174388 , TexCoord276_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174388) = _ThirdNormalTex;
				SamplerState Sampler275_g174388 = SS29_g174416;
				half4 Coords275_g174388 = temp_output_37_0_g174388;
				half2 TexCoord275_g174388 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174388 = SampleExtra( Texture275_g174388 , Sampler275_g174388 , Coords275_g174388 , TexCoord275_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174388) = _ThirdNormalTex;
				SamplerState Sampler238_g174388 = SS29_g174416;
				half4 Coords238_g174388 = temp_output_37_0_g174388;
				float3 temp_output_279_0_g174388 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174388 = temp_output_279_0_g174388;
				half4 localSamplePlanar2D238_g174388 = SamplePlanar2D( Texture238_g174388 , Sampler238_g174388 , Coords238_g174388 , WorldPosition238_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174388) = _ThirdNormalTex;
				SamplerState Sampler246_g174388 = SS29_g174416;
				half4 Coords246_g174388 = temp_output_37_0_g174388;
				half3 WorldPosition246_g174388 = temp_output_279_0_g174388;
				float3 temp_output_280_0_g174388 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174388 = temp_output_280_0_g174388;
				half4 localSamplePlanar3D246_g174388 = SamplePlanar3D( Texture246_g174388 , Sampler246_g174388 , Coords246_g174388 , WorldPosition246_g174388 , WorldNormal246_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174388) = _ThirdNormalTex;
				SamplerState Sampler234_g174388 = SS29_g174416;
				float4 Coords234_g174388 = temp_output_37_0_g174388;
				float3 WorldPosition234_g174388 = temp_output_279_0_g174388;
				float4 localSampleStochastic2D234_g174388 = SampleStochastic2D( Texture234_g174388 , Sampler234_g174388 , Coords234_g174388 , WorldPosition234_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174388) = _ThirdNormalTex;
				SamplerState Sampler263_g174388 = SS29_g174416;
				half4 Coords263_g174388 = temp_output_37_0_g174388;
				half3 WorldPosition263_g174388 = temp_output_279_0_g174388;
				half3 WorldNormal263_g174388 = temp_output_280_0_g174388;
				half4 localSampleStochastic3D263_g174388 = SampleStochastic3D( Texture263_g174388 , Sampler263_g174388 , Coords263_g174388 , WorldPosition263_g174388 , WorldNormal263_g174388 );
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float4 staticSwitch698_g174386 = localSampleMain276_g174388;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float4 staticSwitch698_g174386 = localSampleExtra275_g174388;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float4 staticSwitch698_g174386 = localSamplePlanar2D238_g174388;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float4 staticSwitch698_g174386 = localSamplePlanar3D246_g174388;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch698_g174386 = localSampleStochastic2D234_g174388;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch698_g174386 = localSampleStochastic3D263_g174388;
				#else
				float4 staticSwitch698_g174386 = localSampleMain276_g174388;
				#endif
				half4 Local_NormalTex776_g174386 = staticSwitch698_g174386;
				half4 Normal_Packed45_g174390 = Local_NormalTex776_g174386;
				float2 appendResult58_g174390 = (float2(( (Normal_Packed45_g174390).x * (Normal_Packed45_g174390).w ) , (Normal_Packed45_g174390).y));
				half2 Normal_Default50_g174390 = appendResult58_g174390;
				half2 Normal_ASTC41_g174390 = (Normal_Packed45_g174390).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174390 = Normal_ASTC41_g174390;
				#else
				float2 staticSwitch38_g174390 = Normal_Default50_g174390;
				#endif
				half2 Normal_NO_DTX544_g174390 = (Normal_Packed45_g174390).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174390 = Normal_NO_DTX544_g174390;
				#else
				float2 staticSwitch37_g174390 = staticSwitch38_g174390;
				#endif
				float2 temp_output_724_0_g174386 = ( (staticSwitch37_g174390*2.0 + -1.0) * _ThirdNormalValue );
				half2 Normal_Planar45_g174391 = temp_output_724_0_g174386;
				float2 break71_g174391 = Normal_Planar45_g174391;
				float3 appendResult72_g174391 = (float3(break71_g174391.x , 0.0 , break71_g174391.y));
				float2 temp_output_858_0_g174386 = (mul( ase_worldToTangent, appendResult72_g174391 )).xy;
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float2 staticSwitch727_g174386 = temp_output_724_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float2 staticSwitch727_g174386 = temp_output_724_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#else
				float2 staticSwitch727_g174386 = temp_output_724_0_g174386;
				#endif
				half2 Local_NormalTS729_g174386 = staticSwitch727_g174386;
				float2 temp_output_36_0_g174408 = ( lerpResult40_g174408 + Local_NormalTS729_g174386 );
				float2 lerpResult405_g174386 = lerp( Visual_NormalTS529_g174386 , temp_output_36_0_g174408 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float2 staticSwitch418_g174386 = lerpResult405_g174386;
				#else
				float2 staticSwitch418_g174386 = Visual_NormalTS529_g174386;
				#endif
				half2 Final_NormalTS612_g174386 = staticSwitch418_g174386;
				float2 In_NormalTS3_g174403 = Final_NormalTS612_g174386;
				float3 appendResult68_g174409 = (float3(Final_NormalTS612_g174386 , 1.0));
				float3 tanNormal74_g174409 = appendResult68_g174409;
				float3 worldNormal74_g174409 = normalize( float3(dot(tanToWorld0,tanNormal74_g174409), dot(tanToWorld1,tanNormal74_g174409), dot(tanToWorld2,tanNormal74_g174409)) );
				half3 Final_NormalWS956_g174386 = worldNormal74_g174409;
				float3 In_NormalWS3_g174403 = Final_NormalWS956_g174386;
				half4 Visual_Shader531_g174386 = Out_Shader4_g174402;
				float4 lerpResult1000_g174386 = lerp( Local_Masks750_g174386 , ( Visual_Shader531_g174386 * Local_Masks750_g174386 ) , _ThirdBlendShaderValue);
				float4 lerpResult998_g174386 = lerp( Visual_Shader531_g174386 , lerpResult1000_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float4 staticSwitch451_g174386 = lerpResult998_g174386;
				#else
				float4 staticSwitch451_g174386 = Visual_Shader531_g174386;
				#endif
				half4 Final_Masks613_g174386 = staticSwitch451_g174386;
				float4 In_Shader3_g174403 = Final_Masks613_g174386;
				float4 In_Emissive3_g174403 = Out_Emissive4_g174402;
				float3 temp_output_3_0_g174411 = Final_Albedo601_g174386;
				float dotResult20_g174411 = dot( temp_output_3_0_g174411 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale615_g174386 = dotResult20_g174411;
				float In_Grayscale3_g174403 = Final_Grayscale615_g174386;
				float clampResult651_g174386 = clamp( saturate( ( Final_Grayscale615_g174386 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity652_g174386 = clampResult651_g174386;
				float In_Luminosity3_g174403 = Final_Luminosity652_g174386;
				half Visual_MultiMask547_g174386 = Out_MultiMask4_g174402;
				float lerpResult477_g174386 = lerp( Visual_MultiMask547_g174386 , Local_MultiMask767_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float staticSwitch482_g174386 = lerpResult477_g174386;
				#else
				float staticSwitch482_g174386 = Visual_MultiMask547_g174386;
				#endif
				half Final_MultiMask572_g174386 = staticSwitch482_g174386;
				float In_MultiMask3_g174403 = Final_MultiMask572_g174386;
				half Visual_AlphaClip559_g174386 = Out_AlphaClip4_g174402;
				float temp_output_718_0_g174386 = (Local_AlbedoTex777_g174386).w;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch924_g174386 = ( temp_output_718_0_g174386 - _ThirdAlphaClipValue );
				#else
				float staticSwitch924_g174386 = temp_output_718_0_g174386;
				#endif
				half Local_AlphaClip772_g174386 = staticSwitch924_g174386;
				float lerpResult448_g174386 = lerp( Visual_AlphaClip559_g174386 , Local_AlphaClip772_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float staticSwitch564_g174386 = lerpResult448_g174386;
				#else
				float staticSwitch564_g174386 = Visual_AlphaClip559_g174386;
				#endif
				half Final_AlphaClip602_g174386 = staticSwitch564_g174386;
				float In_AlphaClip3_g174403 = Final_AlphaClip602_g174386;
				half Visual_AlphaFade588_g174386 = Out_AlphaFade4_g174402;
				half Local_AlphaFade773_g174386 = (lerpResult706_g174386).a;
				float lerpResult604_g174386 = lerp( Visual_AlphaFade588_g174386 , Local_AlphaFade773_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float staticSwitch608_g174386 = lerpResult604_g174386;
				#else
				float staticSwitch608_g174386 = Visual_AlphaFade588_g174386;
				#endif
				half Final_AlphaFade611_g174386 = staticSwitch608_g174386;
				float In_AlphaFade3_g174403 = Final_AlphaFade611_g174386;
				float3 In_Translucency3_g174403 = Out_Translucency4_g174402;
				float In_Transmission3_g174403 = Out_Transmission4_g174402;
				float In_Thickness3_g174403 = Out_Thickness4_g174402;
				float In_Diffusion3_g174403 = Out_Diffusion4_g174402;
				Data3_g174403.Dummy = In_Dummy3_g174403;
				Data3_g174403.Albedo = In_Albedo3_g174403;
				Data3_g174403.AlbedoRaw = In_AlbedoRaw3_g174403;
				Data3_g174403.NormalTS = In_NormalTS3_g174403;
				Data3_g174403.NormalWS = In_NormalWS3_g174403;
				Data3_g174403.Shader = In_Shader3_g174403;
				Data3_g174403.Emissive= In_Emissive3_g174403;
				Data3_g174403.MultiMask = In_MultiMask3_g174403;
				Data3_g174403.Grayscale = In_Grayscale3_g174403;
				Data3_g174403.Luminosity = In_Luminosity3_g174403;
				Data3_g174403.AlphaClip = In_AlphaClip3_g174403;
				Data3_g174403.AlphaFade = In_AlphaFade3_g174403;
				Data3_g174403.Translucency = In_Translucency3_g174403;
				Data3_g174403.Transmission = In_Transmission3_g174403;
				Data3_g174403.Thickness = In_Thickness3_g174403;
				Data3_g174403.Diffusion = In_Diffusion3_g174403;
				TVEVisualData Data4_g174428 = Data3_g174403;
				float Out_Dummy4_g174428 = 0;
				float3 Out_Albedo4_g174428 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174428 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174428 = float2( 0,0 );
				float3 Out_NormalWS4_g174428 = float3( 0,0,0 );
				float4 Out_Shader4_g174428 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174428 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174428 = 0;
				float Out_Grayscale4_g174428 = 0;
				float Out_Luminosity4_g174428 = 0;
				float Out_AlphaClip4_g174428 = 0;
				float Out_AlphaFade4_g174428 = 0;
				float3 Out_Translucency4_g174428 = float3( 0,0,0 );
				float Out_Transmission4_g174428 = 0;
				float Out_Thickness4_g174428 = 0;
				float Out_Diffusion4_g174428 = 0;
				Out_Dummy4_g174428 = Data4_g174428.Dummy;
				Out_Albedo4_g174428 = Data4_g174428.Albedo;
				Out_AlbedoRaw4_g174428 = Data4_g174428.AlbedoRaw;
				Out_NormalTS4_g174428 = Data4_g174428.NormalTS;
				Out_NormalWS4_g174428 = Data4_g174428.NormalWS;
				Out_Shader4_g174428 = Data4_g174428.Shader;
				Out_Emissive4_g174428= Data4_g174428.Emissive;
				Out_MultiMask4_g174428 = Data4_g174428.MultiMask;
				Out_Grayscale4_g174428 = Data4_g174428.Grayscale;
				Out_Luminosity4_g174428= Data4_g174428.Luminosity;
				Out_AlphaClip4_g174428 = Data4_g174428.AlphaClip;
				Out_AlphaFade4_g174428 = Data4_g174428.AlphaFade;
				Out_Translucency4_g174428 = Data4_g174428.Translucency;
				Out_Transmission4_g174428 = Data4_g174428.Transmission;
				Out_Thickness4_g174428 = Data4_g174428.Thickness;
				Out_Diffusion4_g174428 = Data4_g174428.Diffusion;
				half3 Visual_Albedo527_g174425 = Out_Albedo4_g174428;
				float localHeightBasedBlending7362_g174452 = ( 0.0 );
				float4 appendResult9125_g174452 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
				float4 temp_output_35_0_g174560 = appendResult9125_g174452;
				float2 InputScale48_g174560 = (temp_output_35_0_g174560).zw;
				half2 FinalScale53_g174560 = ( 1.0 / InputScale48_g174560 );
				float2 InputPosition52_g174560 = (temp_output_35_0_g174560).xy;
				half2 FinalPosition58_g174560 = -( FinalScale53_g174560 * InputPosition52_g174560 );
				float2 temp_output_65_0_g174560 = ( ( (worldPos).xz * FinalScale53_g174560 ) + FinalPosition58_g174560 );
				float4 temp_output_70_0_g174560 = _TerrainControlTex1_TexelSize;
				float2 InputTexelSize68_g174560 = (temp_output_70_0_g174560).zw;
				float2 temp_cast_37 = (1.0).xx;
				float2 InputTexelRecip69_g174560 = (temp_output_70_0_g174560).xy;
				float2 Terrain_Control_UV7873_g174452 = ( ( ( temp_output_65_0_g174560 / ( 1.0 / ( InputTexelSize68_g174560 - temp_cast_37 ) ) ) + 0.5 ) * InputTexelRecip69_g174560 );
				half4 Terrain_Control_047365_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_047362_g174452 = Terrain_Control_047365_g174452;
				half4 Terrain_Control_087366_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_087362_g174452 = Terrain_Control_087366_g174452;
				half4 Terrain_Control_127712_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_127362_g174452 = Terrain_Control_127712_g174452;
				half4 Terrain_Control_167711_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_167362_g174452 = Terrain_Control_167711_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174497) = _TerrainShaderTex1;
				float localFilterTexture30_g174557 = ( 0.0 );
				SamplerState SamplerDefault30_g174557 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174557 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174557 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174557 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174557 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174557 = SamplerDefault30_g174557;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174557 = SamplerDefault30_g174557;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174557 = SamplerPoint30_g174557;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174557 = SamplerLow30_g174557;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174557 = SamplerMedium30_g174557;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174557 = SamplerHigh30_g174557;
				#endif
				SamplerState Sampler238_g174497 = SS30_g174557;
				half4 Input_Terrain_Coords_016785_g174452 = _TerrainCoord1;
				float4 temp_output_37_0_g174497 = Input_Terrain_Coords_016785_g174452;
				half4 Coords238_g174497 = temp_output_37_0_g174497;
				TVEModelData Data15_g174562 = Data16_g164566;
				float Out_Dummy15_g174562 = 0;
				float3 Out_PositionWS15_g174562 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174562 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174562 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174562 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174562 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174562 = float3( 0,0,0 );
				float4 Out_VertexData15_g174562 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174562 = float4( 0,0,0,0 );
				Out_Dummy15_g174562 = Data15_g174562.Dummy;
				Out_PositionWS15_g174562 = Data15_g174562.PositionWS;
				Out_PositionWO15_g174562 = Data15_g174562.PositionWO;
				Out_PivotWS15_g174562 = Data15_g174562.PivotWS;
				Out_PivotWO15_g174562 = Data15_g174562.PivotWO;
				Out_NormalWS15_g174562 = Data15_g174562.NormalWS;
				Out_ViewDirWS15_g174562 = Data15_g174562.ViewDirWS;
				Out_VertexData15_g174562 = Data15_g174562.VertexData;
				Out_BoundsData15_g174562 = Data15_g174562.BoundsData;
				half3 Model_PositionWO636_g174425 = Out_PositionWO15_g174562;
				half3 Input_Position9197_g174452 = Model_PositionWO636_g174425;
				float3 temp_output_279_0_g174497 = Input_Position9197_g174452;
				half3 WorldPosition238_g174497 = temp_output_279_0_g174497;
				half4 localSamplePlanar2D238_g174497 = SamplePlanar2D( Texture238_g174497 , Sampler238_g174497 , Coords238_g174497 , WorldPosition238_g174497 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174497) = _TerrainShaderTex1;
				SamplerState Sampler246_g174497 = SS30_g174557;
				half4 Coords246_g174497 = temp_output_37_0_g174497;
				half3 WorldPosition246_g174497 = temp_output_279_0_g174497;
				half3 Model_NormalRawWS869_g174425 = Out_NormalWS15_g174562;
				half3 Input_Normal9199_g174452 = Model_NormalRawWS869_g174425;
				float3 temp_output_280_0_g174497 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174497 = temp_output_280_0_g174497;
				half4 localSamplePlanar3D246_g174497 = SamplePlanar3D( Texture246_g174497 , Sampler246_g174497 , Coords246_g174497 , WorldPosition246_g174497 , WorldNormal246_g174497 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174497) = _TerrainShaderTex1;
				SamplerState Sampler234_g174497 = SS30_g174557;
				float4 Coords234_g174497 = temp_output_37_0_g174497;
				float3 WorldPosition234_g174497 = temp_output_279_0_g174497;
				float4 localSampleStochastic2D234_g174497 = SampleStochastic2D( Texture234_g174497 , Sampler234_g174497 , Coords234_g174497 , WorldPosition234_g174497 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174497) = _TerrainShaderTex1;
				SamplerState Sampler263_g174497 = SS30_g174557;
				half4 Coords263_g174497 = temp_output_37_0_g174497;
				half3 WorldPosition263_g174497 = temp_output_279_0_g174497;
				half3 WorldNormal263_g174497 = temp_output_280_0_g174497;
				half4 localSampleStochastic3D263_g174497 = SampleStochastic3D( Texture263_g174497 , Sampler263_g174497 , Coords263_g174497 , WorldPosition263_g174497 , WorldNormal263_g174497 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8639_g174452 = localSamplePlanar2D238_g174497;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8639_g174452 = localSamplePlanar3D246_g174497;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8639_g174452 = localSampleStochastic2D234_g174497;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8639_g174452 = localSampleStochastic3D263_g174497;
				#else
				float4 staticSwitch8639_g174452 = localSamplePlanar2D238_g174497;
				#endif
				float4 temp_output_7_0_g174454 = _TerrainShaderMin1;
				float4 temp_output_10_0_g174454 = ( _TerrainShaderMax1 - temp_output_7_0_g174454 );
				float4 temp_output_6970_0_g174452 = saturate( ( ( staticSwitch8639_g174452 - temp_output_7_0_g174454 ) / ( temp_output_10_0_g174454 + 0.0001 ) ) );
				half4 Masks_015_g174458 = temp_output_6970_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174501) = _TerrainShaderTex2;
				SamplerState Sampler238_g174501 = SS30_g174557;
				half4 Input_Terrain_Coords_026787_g174452 = _TerrainCoord2;
				float4 temp_output_37_0_g174501 = Input_Terrain_Coords_026787_g174452;
				half4 Coords238_g174501 = temp_output_37_0_g174501;
				float3 temp_output_279_0_g174501 = Input_Position9197_g174452;
				half3 WorldPosition238_g174501 = temp_output_279_0_g174501;
				half4 localSamplePlanar2D238_g174501 = SamplePlanar2D( Texture238_g174501 , Sampler238_g174501 , Coords238_g174501 , WorldPosition238_g174501 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174501) = _TerrainShaderTex2;
				SamplerState Sampler246_g174501 = SS30_g174557;
				half4 Coords246_g174501 = temp_output_37_0_g174501;
				half3 WorldPosition246_g174501 = temp_output_279_0_g174501;
				float3 temp_output_280_0_g174501 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174501 = temp_output_280_0_g174501;
				half4 localSamplePlanar3D246_g174501 = SamplePlanar3D( Texture246_g174501 , Sampler246_g174501 , Coords246_g174501 , WorldPosition246_g174501 , WorldNormal246_g174501 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174501) = _TerrainShaderTex2;
				SamplerState Sampler234_g174501 = SS30_g174557;
				float4 Coords234_g174501 = temp_output_37_0_g174501;
				float3 WorldPosition234_g174501 = temp_output_279_0_g174501;
				float4 localSampleStochastic2D234_g174501 = SampleStochastic2D( Texture234_g174501 , Sampler234_g174501 , Coords234_g174501 , WorldPosition234_g174501 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174501) = _TerrainShaderTex2;
				SamplerState Sampler263_g174501 = SS30_g174557;
				half4 Coords263_g174501 = temp_output_37_0_g174501;
				half3 WorldPosition263_g174501 = temp_output_279_0_g174501;
				half3 WorldNormal263_g174501 = temp_output_280_0_g174501;
				half4 localSampleStochastic3D263_g174501 = SampleStochastic3D( Texture263_g174501 , Sampler263_g174501 , Coords263_g174501 , WorldPosition263_g174501 , WorldNormal263_g174501 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8640_g174452 = localSamplePlanar2D238_g174501;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8640_g174452 = localSamplePlanar3D246_g174501;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8640_g174452 = localSampleStochastic2D234_g174501;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8640_g174452 = localSampleStochastic3D263_g174501;
				#else
				float4 staticSwitch8640_g174452 = localSamplePlanar2D238_g174501;
				#endif
				float4 temp_output_7_0_g174464 = _TerrainShaderMin2;
				float4 temp_output_10_0_g174464 = ( _TerrainShaderMax2 - temp_output_7_0_g174464 );
				float4 temp_output_6977_0_g174452 = saturate( ( ( staticSwitch8640_g174452 - temp_output_7_0_g174464 ) / ( temp_output_10_0_g174464 + 0.0001 ) ) );
				half4 Masks_0210_g174458 = temp_output_6977_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174506) = _TerrainShaderTex3;
				SamplerState Sampler238_g174506 = SS30_g174557;
				half4 Input_Terrain_Coords_036789_g174452 = _TerrainCoord3;
				float4 temp_output_37_0_g174506 = Input_Terrain_Coords_036789_g174452;
				half4 Coords238_g174506 = temp_output_37_0_g174506;
				float3 temp_output_279_0_g174506 = Input_Position9197_g174452;
				half3 WorldPosition238_g174506 = temp_output_279_0_g174506;
				half4 localSamplePlanar2D238_g174506 = SamplePlanar2D( Texture238_g174506 , Sampler238_g174506 , Coords238_g174506 , WorldPosition238_g174506 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174506) = _TerrainShaderTex3;
				SamplerState Sampler246_g174506 = SS30_g174557;
				half4 Coords246_g174506 = temp_output_37_0_g174506;
				half3 WorldPosition246_g174506 = temp_output_279_0_g174506;
				float3 temp_output_280_0_g174506 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174506 = temp_output_280_0_g174506;
				half4 localSamplePlanar3D246_g174506 = SamplePlanar3D( Texture246_g174506 , Sampler246_g174506 , Coords246_g174506 , WorldPosition246_g174506 , WorldNormal246_g174506 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174506) = _TerrainShaderTex3;
				SamplerState Sampler234_g174506 = SS30_g174557;
				float4 Coords234_g174506 = temp_output_37_0_g174506;
				float3 WorldPosition234_g174506 = temp_output_279_0_g174506;
				float4 localSampleStochastic2D234_g174506 = SampleStochastic2D( Texture234_g174506 , Sampler234_g174506 , Coords234_g174506 , WorldPosition234_g174506 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174506) = _TerrainShaderTex3;
				SamplerState Sampler263_g174506 = SS30_g174557;
				half4 Coords263_g174506 = temp_output_37_0_g174506;
				half3 WorldPosition263_g174506 = temp_output_279_0_g174506;
				half3 WorldNormal263_g174506 = temp_output_280_0_g174506;
				half4 localSampleStochastic3D263_g174506 = SampleStochastic3D( Texture263_g174506 , Sampler263_g174506 , Coords263_g174506 , WorldPosition263_g174506 , WorldNormal263_g174506 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8641_g174452 = localSamplePlanar2D238_g174506;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8641_g174452 = localSamplePlanar3D246_g174506;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8641_g174452 = localSampleStochastic2D234_g174506;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8641_g174452 = localSampleStochastic3D263_g174506;
				#else
				float4 staticSwitch8641_g174452 = localSamplePlanar2D238_g174506;
				#endif
				float4 temp_output_7_0_g174465 = _TerrainShaderMin3;
				float4 temp_output_10_0_g174465 = ( _TerrainShaderMax3 - temp_output_7_0_g174465 );
				float4 temp_output_6978_0_g174452 = saturate( ( ( staticSwitch8641_g174452 - temp_output_7_0_g174465 ) / ( temp_output_10_0_g174465 + 0.0001 ) ) );
				half4 Masks_0312_g174458 = temp_output_6978_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174507) = _TerrainShaderTex4;
				SamplerState Sampler238_g174507 = SS30_g174557;
				half4 Input_Terrain_Coords_046791_g174452 = _TerrainCoord4;
				float4 temp_output_37_0_g174507 = Input_Terrain_Coords_046791_g174452;
				half4 Coords238_g174507 = temp_output_37_0_g174507;
				float3 temp_output_279_0_g174507 = Input_Position9197_g174452;
				half3 WorldPosition238_g174507 = temp_output_279_0_g174507;
				half4 localSamplePlanar2D238_g174507 = SamplePlanar2D( Texture238_g174507 , Sampler238_g174507 , Coords238_g174507 , WorldPosition238_g174507 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174507) = _TerrainShaderTex4;
				SamplerState Sampler246_g174507 = SS30_g174557;
				half4 Coords246_g174507 = temp_output_37_0_g174507;
				half3 WorldPosition246_g174507 = temp_output_279_0_g174507;
				float3 temp_output_280_0_g174507 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174507 = temp_output_280_0_g174507;
				half4 localSamplePlanar3D246_g174507 = SamplePlanar3D( Texture246_g174507 , Sampler246_g174507 , Coords246_g174507 , WorldPosition246_g174507 , WorldNormal246_g174507 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174507) = _TerrainShaderTex4;
				SamplerState Sampler234_g174507 = SS30_g174557;
				float4 Coords234_g174507 = temp_output_37_0_g174507;
				float3 WorldPosition234_g174507 = temp_output_279_0_g174507;
				float4 localSampleStochastic2D234_g174507 = SampleStochastic2D( Texture234_g174507 , Sampler234_g174507 , Coords234_g174507 , WorldPosition234_g174507 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174507) = _TerrainShaderTex4;
				SamplerState Sampler263_g174507 = SS30_g174557;
				half4 Coords263_g174507 = temp_output_37_0_g174507;
				half3 WorldPosition263_g174507 = temp_output_279_0_g174507;
				half3 WorldNormal263_g174507 = temp_output_280_0_g174507;
				half4 localSampleStochastic3D263_g174507 = SampleStochastic3D( Texture263_g174507 , Sampler263_g174507 , Coords263_g174507 , WorldPosition263_g174507 , WorldNormal263_g174507 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8642_g174452 = localSamplePlanar2D238_g174507;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8642_g174452 = localSamplePlanar3D246_g174507;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8642_g174452 = localSampleStochastic2D234_g174507;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8642_g174452 = localSampleStochastic3D263_g174507;
				#else
				float4 staticSwitch8642_g174452 = localSamplePlanar2D238_g174507;
				#endif
				float4 temp_output_7_0_g174466 = _TerrainShaderMin4;
				float4 temp_output_10_0_g174466 = ( _TerrainShaderMax4 - temp_output_7_0_g174466 );
				float4 temp_output_6983_0_g174452 = saturate( ( ( staticSwitch8642_g174452 - temp_output_7_0_g174466 ) / ( temp_output_10_0_g174466 + 0.0001 ) ) );
				half4 Masks_0414_g174458 = temp_output_6983_0_g174452;
				float4 appendResult29_g174458 = (float4((Masks_015_g174458).z , (Masks_0210_g174458).z , (Masks_0312_g174458).z , (Masks_0414_g174458).z));
				half4 Control31_g174458 = Terrain_Control_047365_g174452;
				half4 Terrain_Height_047210_g174452 = ( appendResult29_g174458 * Control31_g174458 );
				float4 heights_047362_g174452 = Terrain_Height_047210_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174510) = _TerrainShaderTex5;
				SamplerState Sampler238_g174510 = SS30_g174557;
				half4 Input_Terrain_Coords_058750_g174452 = _TerrainCoord5;
				float4 temp_output_37_0_g174510 = Input_Terrain_Coords_058750_g174452;
				half4 Coords238_g174510 = temp_output_37_0_g174510;
				float3 temp_output_279_0_g174510 = Input_Position9197_g174452;
				half3 WorldPosition238_g174510 = temp_output_279_0_g174510;
				half4 localSamplePlanar2D238_g174510 = SamplePlanar2D( Texture238_g174510 , Sampler238_g174510 , Coords238_g174510 , WorldPosition238_g174510 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174510) = _TerrainShaderTex5;
				SamplerState Sampler246_g174510 = SS30_g174557;
				half4 Coords246_g174510 = temp_output_37_0_g174510;
				half3 WorldPosition246_g174510 = temp_output_279_0_g174510;
				float3 temp_output_280_0_g174510 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174510 = temp_output_280_0_g174510;
				half4 localSamplePlanar3D246_g174510 = SamplePlanar3D( Texture246_g174510 , Sampler246_g174510 , Coords246_g174510 , WorldPosition246_g174510 , WorldNormal246_g174510 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174510) = _TerrainShaderTex5;
				SamplerState Sampler234_g174510 = SS30_g174557;
				float4 Coords234_g174510 = temp_output_37_0_g174510;
				float3 WorldPosition234_g174510 = temp_output_279_0_g174510;
				float4 localSampleStochastic2D234_g174510 = SampleStochastic2D( Texture234_g174510 , Sampler234_g174510 , Coords234_g174510 , WorldPosition234_g174510 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174510) = _TerrainShaderTex5;
				SamplerState Sampler263_g174510 = SS30_g174557;
				half4 Coords263_g174510 = temp_output_37_0_g174510;
				half3 WorldPosition263_g174510 = temp_output_279_0_g174510;
				half3 WorldNormal263_g174510 = temp_output_280_0_g174510;
				half4 localSampleStochastic3D263_g174510 = SampleStochastic3D( Texture263_g174510 , Sampler263_g174510 , Coords263_g174510 , WorldPosition263_g174510 , WorldNormal263_g174510 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8710_g174452 = localSamplePlanar2D238_g174510;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8710_g174452 = localSamplePlanar3D246_g174510;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8710_g174452 = localSampleStochastic2D234_g174510;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8710_g174452 = localSampleStochastic3D263_g174510;
				#else
				float4 staticSwitch8710_g174452 = localSamplePlanar2D238_g174510;
				#endif
				float4 temp_output_7_0_g174469 = _TerrainShaderMin5;
				float4 temp_output_10_0_g174469 = ( _TerrainShaderMax5 - temp_output_7_0_g174469 );
				float4 temp_output_8714_0_g174452 = saturate( ( ( staticSwitch8710_g174452 - temp_output_7_0_g174469 ) / ( temp_output_10_0_g174469 + 0.0001 ) ) );
				half4 Masks_015_g174470 = temp_output_8714_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174541) = _TerrainShaderTex6;
				SamplerState Sampler238_g174541 = SS30_g174557;
				half4 Input_Terrain_Coords_068751_g174452 = _TerrainCoord6;
				float4 temp_output_37_0_g174541 = Input_Terrain_Coords_068751_g174452;
				half4 Coords238_g174541 = temp_output_37_0_g174541;
				float3 temp_output_279_0_g174541 = Input_Position9197_g174452;
				half3 WorldPosition238_g174541 = temp_output_279_0_g174541;
				half4 localSamplePlanar2D238_g174541 = SamplePlanar2D( Texture238_g174541 , Sampler238_g174541 , Coords238_g174541 , WorldPosition238_g174541 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174541) = _TerrainShaderTex6;
				SamplerState Sampler246_g174541 = SS30_g174557;
				half4 Coords246_g174541 = temp_output_37_0_g174541;
				half3 WorldPosition246_g174541 = temp_output_279_0_g174541;
				float3 temp_output_280_0_g174541 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174541 = temp_output_280_0_g174541;
				half4 localSamplePlanar3D246_g174541 = SamplePlanar3D( Texture246_g174541 , Sampler246_g174541 , Coords246_g174541 , WorldPosition246_g174541 , WorldNormal246_g174541 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174541) = _TerrainShaderTex6;
				SamplerState Sampler234_g174541 = SS30_g174557;
				float4 Coords234_g174541 = temp_output_37_0_g174541;
				float3 WorldPosition234_g174541 = temp_output_279_0_g174541;
				float4 localSampleStochastic2D234_g174541 = SampleStochastic2D( Texture234_g174541 , Sampler234_g174541 , Coords234_g174541 , WorldPosition234_g174541 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174541) = _TerrainShaderTex6;
				SamplerState Sampler263_g174541 = SS30_g174557;
				half4 Coords263_g174541 = temp_output_37_0_g174541;
				half3 WorldPosition263_g174541 = temp_output_279_0_g174541;
				half3 WorldNormal263_g174541 = temp_output_280_0_g174541;
				half4 localSampleStochastic3D263_g174541 = SampleStochastic3D( Texture263_g174541 , Sampler263_g174541 , Coords263_g174541 , WorldPosition263_g174541 , WorldNormal263_g174541 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8711_g174452 = localSamplePlanar2D238_g174541;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8711_g174452 = localSamplePlanar3D246_g174541;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8711_g174452 = localSampleStochastic2D234_g174541;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8711_g174452 = localSampleStochastic3D263_g174541;
				#else
				float4 staticSwitch8711_g174452 = localSamplePlanar2D238_g174541;
				#endif
				float4 temp_output_7_0_g174494 = _TerrainShaderMin6;
				float4 temp_output_10_0_g174494 = ( _TerrainShaderMax6 - temp_output_7_0_g174494 );
				float4 temp_output_8721_0_g174452 = saturate( ( ( staticSwitch8711_g174452 - temp_output_7_0_g174494 ) / ( temp_output_10_0_g174494 + 0.0001 ) ) );
				half4 Masks_0210_g174470 = temp_output_8721_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174542) = _TerrainShaderTex7;
				SamplerState Sampler238_g174542 = SS30_g174557;
				half4 Input_Terrain_Coords_078752_g174452 = _TerrainCoord7;
				float4 temp_output_37_0_g174542 = Input_Terrain_Coords_078752_g174452;
				half4 Coords238_g174542 = temp_output_37_0_g174542;
				float3 temp_output_279_0_g174542 = Input_Position9197_g174452;
				half3 WorldPosition238_g174542 = temp_output_279_0_g174542;
				half4 localSamplePlanar2D238_g174542 = SamplePlanar2D( Texture238_g174542 , Sampler238_g174542 , Coords238_g174542 , WorldPosition238_g174542 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174542) = _TerrainShaderTex7;
				SamplerState Sampler246_g174542 = SS30_g174557;
				half4 Coords246_g174542 = temp_output_37_0_g174542;
				half3 WorldPosition246_g174542 = temp_output_279_0_g174542;
				float3 temp_output_280_0_g174542 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174542 = temp_output_280_0_g174542;
				half4 localSamplePlanar3D246_g174542 = SamplePlanar3D( Texture246_g174542 , Sampler246_g174542 , Coords246_g174542 , WorldPosition246_g174542 , WorldNormal246_g174542 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174542) = _TerrainShaderTex7;
				SamplerState Sampler234_g174542 = SS30_g174557;
				float4 Coords234_g174542 = temp_output_37_0_g174542;
				float3 WorldPosition234_g174542 = temp_output_279_0_g174542;
				float4 localSampleStochastic2D234_g174542 = SampleStochastic2D( Texture234_g174542 , Sampler234_g174542 , Coords234_g174542 , WorldPosition234_g174542 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174542) = _TerrainShaderTex7;
				SamplerState Sampler263_g174542 = SS30_g174557;
				half4 Coords263_g174542 = temp_output_37_0_g174542;
				half3 WorldPosition263_g174542 = temp_output_279_0_g174542;
				half3 WorldNormal263_g174542 = temp_output_280_0_g174542;
				half4 localSampleStochastic3D263_g174542 = SampleStochastic3D( Texture263_g174542 , Sampler263_g174542 , Coords263_g174542 , WorldPosition263_g174542 , WorldNormal263_g174542 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8712_g174452 = localSamplePlanar2D238_g174542;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8712_g174452 = localSamplePlanar3D246_g174542;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8712_g174452 = localSampleStochastic2D234_g174542;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8712_g174452 = localSampleStochastic3D263_g174542;
				#else
				float4 staticSwitch8712_g174452 = localSamplePlanar2D238_g174542;
				#endif
				float4 temp_output_7_0_g174495 = _TerrainShaderMin7;
				float4 temp_output_10_0_g174495 = ( _TerrainShaderMax7 - temp_output_7_0_g174495 );
				float4 temp_output_8724_0_g174452 = saturate( ( ( staticSwitch8712_g174452 - temp_output_7_0_g174495 ) / ( temp_output_10_0_g174495 + 0.0001 ) ) );
				half4 Masks_0312_g174470 = temp_output_8724_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174543) = _TerrainShaderTex8;
				SamplerState Sampler238_g174543 = SS30_g174557;
				half4 Input_Terrain_Coords_088749_g174452 = _TerrainCoord8;
				float4 temp_output_37_0_g174543 = Input_Terrain_Coords_088749_g174452;
				half4 Coords238_g174543 = temp_output_37_0_g174543;
				float3 temp_output_279_0_g174543 = Input_Position9197_g174452;
				half3 WorldPosition238_g174543 = temp_output_279_0_g174543;
				half4 localSamplePlanar2D238_g174543 = SamplePlanar2D( Texture238_g174543 , Sampler238_g174543 , Coords238_g174543 , WorldPosition238_g174543 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174543) = _TerrainShaderTex8;
				SamplerState Sampler246_g174543 = SS30_g174557;
				half4 Coords246_g174543 = temp_output_37_0_g174543;
				half3 WorldPosition246_g174543 = temp_output_279_0_g174543;
				float3 temp_output_280_0_g174543 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174543 = temp_output_280_0_g174543;
				half4 localSamplePlanar3D246_g174543 = SamplePlanar3D( Texture246_g174543 , Sampler246_g174543 , Coords246_g174543 , WorldPosition246_g174543 , WorldNormal246_g174543 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174543) = _TerrainShaderTex8;
				SamplerState Sampler234_g174543 = SS30_g174557;
				float4 Coords234_g174543 = temp_output_37_0_g174543;
				float3 WorldPosition234_g174543 = temp_output_279_0_g174543;
				float4 localSampleStochastic2D234_g174543 = SampleStochastic2D( Texture234_g174543 , Sampler234_g174543 , Coords234_g174543 , WorldPosition234_g174543 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174543) = _TerrainShaderTex8;
				SamplerState Sampler263_g174543 = SS30_g174557;
				half4 Coords263_g174543 = temp_output_37_0_g174543;
				half3 WorldPosition263_g174543 = temp_output_279_0_g174543;
				half3 WorldNormal263_g174543 = temp_output_280_0_g174543;
				half4 localSampleStochastic3D263_g174543 = SampleStochastic3D( Texture263_g174543 , Sampler263_g174543 , Coords263_g174543 , WorldPosition263_g174543 , WorldNormal263_g174543 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8713_g174452 = localSamplePlanar2D238_g174543;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8713_g174452 = localSamplePlanar3D246_g174543;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8713_g174452 = localSampleStochastic2D234_g174543;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8713_g174452 = localSampleStochastic3D263_g174543;
				#else
				float4 staticSwitch8713_g174452 = localSamplePlanar2D238_g174543;
				#endif
				float4 temp_output_7_0_g174496 = _TerrainShaderMin8;
				float4 temp_output_10_0_g174496 = ( _TerrainShaderMax8 - temp_output_7_0_g174496 );
				float4 temp_output_8727_0_g174452 = saturate( ( ( staticSwitch8713_g174452 - temp_output_7_0_g174496 ) / ( temp_output_10_0_g174496 + 0.0001 ) ) );
				half4 Masks_0414_g174470 = temp_output_8727_0_g174452;
				float4 appendResult29_g174470 = (float4((Masks_015_g174470).z , (Masks_0210_g174470).z , (Masks_0312_g174470).z , (Masks_0414_g174470).z));
				half4 Control31_g174470 = Terrain_Control_087366_g174452;
				half4 Terrain_Height_088731_g174452 = ( appendResult29_g174470 * Control31_g174470 );
				float4 heights_087362_g174452 = Terrain_Height_088731_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174513) = _TerrainShaderTex9;
				SamplerState Sampler238_g174513 = SS30_g174557;
				half4 Input_Terrain_Coords_098833_g174452 = _TerrainCoord9;
				float4 temp_output_37_0_g174513 = Input_Terrain_Coords_098833_g174452;
				half4 Coords238_g174513 = temp_output_37_0_g174513;
				float3 temp_output_279_0_g174513 = Input_Position9197_g174452;
				half3 WorldPosition238_g174513 = temp_output_279_0_g174513;
				half4 localSamplePlanar2D238_g174513 = SamplePlanar2D( Texture238_g174513 , Sampler238_g174513 , Coords238_g174513 , WorldPosition238_g174513 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174513) = _TerrainShaderTex9;
				SamplerState Sampler246_g174513 = SS30_g174557;
				half4 Coords246_g174513 = temp_output_37_0_g174513;
				half3 WorldPosition246_g174513 = temp_output_279_0_g174513;
				float3 temp_output_280_0_g174513 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174513 = temp_output_280_0_g174513;
				half4 localSamplePlanar3D246_g174513 = SamplePlanar3D( Texture246_g174513 , Sampler246_g174513 , Coords246_g174513 , WorldPosition246_g174513 , WorldNormal246_g174513 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174513) = _TerrainShaderTex9;
				SamplerState Sampler234_g174513 = SS30_g174557;
				float4 Coords234_g174513 = temp_output_37_0_g174513;
				float3 WorldPosition234_g174513 = temp_output_279_0_g174513;
				float4 localSampleStochastic2D234_g174513 = SampleStochastic2D( Texture234_g174513 , Sampler234_g174513 , Coords234_g174513 , WorldPosition234_g174513 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174513) = _TerrainShaderTex9;
				SamplerState Sampler263_g174513 = SS30_g174557;
				half4 Coords263_g174513 = temp_output_37_0_g174513;
				half3 WorldPosition263_g174513 = temp_output_279_0_g174513;
				half3 WorldNormal263_g174513 = temp_output_280_0_g174513;
				half4 localSampleStochastic3D263_g174513 = SampleStochastic3D( Texture263_g174513 , Sampler263_g174513 , Coords263_g174513 , WorldPosition263_g174513 , WorldNormal263_g174513 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8878_g174452 = localSamplePlanar2D238_g174513;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8878_g174452 = localSamplePlanar3D246_g174513;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8878_g174452 = localSampleStochastic2D234_g174513;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8878_g174452 = localSampleStochastic3D263_g174513;
				#else
				float4 staticSwitch8878_g174452 = localSamplePlanar2D238_g174513;
				#endif
				float4 temp_output_7_0_g174476 = _TerrainShaderMin9;
				float4 temp_output_10_0_g174476 = ( _TerrainShaderMax9 - temp_output_7_0_g174476 );
				float4 temp_output_8815_0_g174452 = saturate( ( ( staticSwitch8878_g174452 - temp_output_7_0_g174476 ) / ( temp_output_10_0_g174476 + 0.0001 ) ) );
				half4 Masks_015_g174477 = temp_output_8815_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174523) = _TerrainShaderTex10;
				SamplerState Sampler238_g174523 = SS30_g174557;
				half4 Input_Terrain_Coords_108834_g174452 = _TerrainCoord10;
				float4 temp_output_37_0_g174523 = Input_Terrain_Coords_108834_g174452;
				half4 Coords238_g174523 = temp_output_37_0_g174523;
				float3 temp_output_279_0_g174523 = Input_Position9197_g174452;
				half3 WorldPosition238_g174523 = temp_output_279_0_g174523;
				half4 localSamplePlanar2D238_g174523 = SamplePlanar2D( Texture238_g174523 , Sampler238_g174523 , Coords238_g174523 , WorldPosition238_g174523 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174523) = _TerrainShaderTex10;
				SamplerState Sampler246_g174523 = SS30_g174557;
				half4 Coords246_g174523 = temp_output_37_0_g174523;
				half3 WorldPosition246_g174523 = temp_output_279_0_g174523;
				float3 temp_output_280_0_g174523 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174523 = temp_output_280_0_g174523;
				half4 localSamplePlanar3D246_g174523 = SamplePlanar3D( Texture246_g174523 , Sampler246_g174523 , Coords246_g174523 , WorldPosition246_g174523 , WorldNormal246_g174523 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174523) = _TerrainShaderTex10;
				SamplerState Sampler234_g174523 = SS30_g174557;
				float4 Coords234_g174523 = temp_output_37_0_g174523;
				float3 WorldPosition234_g174523 = temp_output_279_0_g174523;
				float4 localSampleStochastic2D234_g174523 = SampleStochastic2D( Texture234_g174523 , Sampler234_g174523 , Coords234_g174523 , WorldPosition234_g174523 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174523) = _TerrainShaderTex10;
				SamplerState Sampler263_g174523 = SS30_g174557;
				half4 Coords263_g174523 = temp_output_37_0_g174523;
				half3 WorldPosition263_g174523 = temp_output_279_0_g174523;
				half3 WorldNormal263_g174523 = temp_output_280_0_g174523;
				half4 localSampleStochastic3D263_g174523 = SampleStochastic3D( Texture263_g174523 , Sampler263_g174523 , Coords263_g174523 , WorldPosition263_g174523 , WorldNormal263_g174523 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8860_g174452 = localSamplePlanar2D238_g174523;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8860_g174452 = localSamplePlanar3D246_g174523;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8860_g174452 = localSampleStochastic2D234_g174523;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8860_g174452 = localSampleStochastic3D263_g174523;
				#else
				float4 staticSwitch8860_g174452 = localSamplePlanar2D238_g174523;
				#endif
				float4 temp_output_7_0_g174488 = _TerrainShaderMin10;
				float4 temp_output_10_0_g174488 = ( _TerrainShaderMax10 - temp_output_7_0_g174488 );
				float4 temp_output_8818_0_g174452 = saturate( ( ( staticSwitch8860_g174452 - temp_output_7_0_g174488 ) / ( temp_output_10_0_g174488 + 0.0001 ) ) );
				half4 Masks_0210_g174477 = temp_output_8818_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174524) = _TerrainShaderTex11;
				SamplerState Sampler238_g174524 = SS30_g174557;
				half4 Input_Terrain_Coords_118835_g174452 = _TerrainCoord11;
				float4 temp_output_37_0_g174524 = Input_Terrain_Coords_118835_g174452;
				half4 Coords238_g174524 = temp_output_37_0_g174524;
				float3 temp_output_279_0_g174524 = Input_Position9197_g174452;
				half3 WorldPosition238_g174524 = temp_output_279_0_g174524;
				half4 localSamplePlanar2D238_g174524 = SamplePlanar2D( Texture238_g174524 , Sampler238_g174524 , Coords238_g174524 , WorldPosition238_g174524 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174524) = _TerrainShaderTex11;
				SamplerState Sampler246_g174524 = SS30_g174557;
				half4 Coords246_g174524 = temp_output_37_0_g174524;
				half3 WorldPosition246_g174524 = temp_output_279_0_g174524;
				float3 temp_output_280_0_g174524 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174524 = temp_output_280_0_g174524;
				half4 localSamplePlanar3D246_g174524 = SamplePlanar3D( Texture246_g174524 , Sampler246_g174524 , Coords246_g174524 , WorldPosition246_g174524 , WorldNormal246_g174524 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174524) = _TerrainShaderTex11;
				SamplerState Sampler234_g174524 = SS30_g174557;
				float4 Coords234_g174524 = temp_output_37_0_g174524;
				float3 WorldPosition234_g174524 = temp_output_279_0_g174524;
				float4 localSampleStochastic2D234_g174524 = SampleStochastic2D( Texture234_g174524 , Sampler234_g174524 , Coords234_g174524 , WorldPosition234_g174524 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174524) = _TerrainShaderTex11;
				SamplerState Sampler263_g174524 = SS30_g174557;
				half4 Coords263_g174524 = temp_output_37_0_g174524;
				half3 WorldPosition263_g174524 = temp_output_279_0_g174524;
				half3 WorldNormal263_g174524 = temp_output_280_0_g174524;
				half4 localSampleStochastic3D263_g174524 = SampleStochastic3D( Texture263_g174524 , Sampler263_g174524 , Coords263_g174524 , WorldPosition263_g174524 , WorldNormal263_g174524 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8861_g174452 = localSamplePlanar2D238_g174524;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8861_g174452 = localSamplePlanar3D246_g174524;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8861_g174452 = localSampleStochastic2D234_g174524;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8861_g174452 = localSampleStochastic3D263_g174524;
				#else
				float4 staticSwitch8861_g174452 = localSamplePlanar2D238_g174524;
				#endif
				float4 temp_output_7_0_g174489 = _TerrainShaderMin11;
				float4 temp_output_10_0_g174489 = ( _TerrainShaderMax11 - temp_output_7_0_g174489 );
				float4 temp_output_8819_0_g174452 = saturate( ( ( staticSwitch8861_g174452 - temp_output_7_0_g174489 ) / ( temp_output_10_0_g174489 + 0.0001 ) ) );
				half4 Masks_0312_g174477 = temp_output_8819_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174525) = _TerrainShaderTex12;
				SamplerState Sampler238_g174525 = SS30_g174557;
				half4 Input_Terrain_Coords_128836_g174452 = _TerrainCoord12;
				float4 temp_output_37_0_g174525 = Input_Terrain_Coords_128836_g174452;
				half4 Coords238_g174525 = temp_output_37_0_g174525;
				float3 temp_output_279_0_g174525 = Input_Position9197_g174452;
				half3 WorldPosition238_g174525 = temp_output_279_0_g174525;
				half4 localSamplePlanar2D238_g174525 = SamplePlanar2D( Texture238_g174525 , Sampler238_g174525 , Coords238_g174525 , WorldPosition238_g174525 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174525) = _TerrainShaderTex12;
				SamplerState Sampler246_g174525 = SS30_g174557;
				half4 Coords246_g174525 = temp_output_37_0_g174525;
				half3 WorldPosition246_g174525 = temp_output_279_0_g174525;
				float3 temp_output_280_0_g174525 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174525 = temp_output_280_0_g174525;
				half4 localSamplePlanar3D246_g174525 = SamplePlanar3D( Texture246_g174525 , Sampler246_g174525 , Coords246_g174525 , WorldPosition246_g174525 , WorldNormal246_g174525 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174525) = _TerrainShaderTex12;
				SamplerState Sampler234_g174525 = SS30_g174557;
				float4 Coords234_g174525 = temp_output_37_0_g174525;
				float3 WorldPosition234_g174525 = temp_output_279_0_g174525;
				float4 localSampleStochastic2D234_g174525 = SampleStochastic2D( Texture234_g174525 , Sampler234_g174525 , Coords234_g174525 , WorldPosition234_g174525 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174525) = _TerrainShaderTex12;
				SamplerState Sampler263_g174525 = SS30_g174557;
				half4 Coords263_g174525 = temp_output_37_0_g174525;
				half3 WorldPosition263_g174525 = temp_output_279_0_g174525;
				half3 WorldNormal263_g174525 = temp_output_280_0_g174525;
				half4 localSampleStochastic3D263_g174525 = SampleStochastic3D( Texture263_g174525 , Sampler263_g174525 , Coords263_g174525 , WorldPosition263_g174525 , WorldNormal263_g174525 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8879_g174452 = localSamplePlanar2D238_g174525;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8879_g174452 = localSamplePlanar3D246_g174525;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8879_g174452 = localSampleStochastic2D234_g174525;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8879_g174452 = localSampleStochastic3D263_g174525;
				#else
				float4 staticSwitch8879_g174452 = localSamplePlanar2D238_g174525;
				#endif
				float4 temp_output_7_0_g174490 = _TerrainShaderMin12;
				float4 temp_output_10_0_g174490 = ( _TerrainShaderMax12 - temp_output_7_0_g174490 );
				float4 temp_output_8820_0_g174452 = saturate( ( ( staticSwitch8879_g174452 - temp_output_7_0_g174490 ) / ( temp_output_10_0_g174490 + 0.0001 ) ) );
				half4 Masks_0414_g174477 = temp_output_8820_0_g174452;
				float4 appendResult29_g174477 = (float4((Masks_015_g174477).z , (Masks_0210_g174477).z , (Masks_0312_g174477).z , (Masks_0414_g174477).z));
				half4 Control31_g174477 = Terrain_Control_127712_g174452;
				half4 Terrain_Height_128870_g174452 = ( appendResult29_g174477 * Control31_g174477 );
				float4 heights_127362_g174452 = Terrain_Height_128870_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174521) = _TerrainShaderTex13;
				SamplerState Sampler238_g174521 = SS30_g174557;
				half4 Input_Terrain_Coords_138960_g174452 = _TerrainCoord13;
				float4 temp_output_37_0_g174521 = Input_Terrain_Coords_138960_g174452;
				half4 Coords238_g174521 = temp_output_37_0_g174521;
				float3 temp_output_279_0_g174521 = Input_Position9197_g174452;
				half3 WorldPosition238_g174521 = temp_output_279_0_g174521;
				half4 localSamplePlanar2D238_g174521 = SamplePlanar2D( Texture238_g174521 , Sampler238_g174521 , Coords238_g174521 , WorldPosition238_g174521 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174521) = _TerrainShaderTex13;
				SamplerState Sampler246_g174521 = SS30_g174557;
				half4 Coords246_g174521 = temp_output_37_0_g174521;
				half3 WorldPosition246_g174521 = temp_output_279_0_g174521;
				float3 temp_output_280_0_g174521 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174521 = temp_output_280_0_g174521;
				half4 localSamplePlanar3D246_g174521 = SamplePlanar3D( Texture246_g174521 , Sampler246_g174521 , Coords246_g174521 , WorldPosition246_g174521 , WorldNormal246_g174521 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174521) = _TerrainShaderTex13;
				SamplerState Sampler234_g174521 = SS30_g174557;
				float4 Coords234_g174521 = temp_output_37_0_g174521;
				float3 WorldPosition234_g174521 = temp_output_279_0_g174521;
				float4 localSampleStochastic2D234_g174521 = SampleStochastic2D( Texture234_g174521 , Sampler234_g174521 , Coords234_g174521 , WorldPosition234_g174521 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174521) = _TerrainShaderTex13;
				SamplerState Sampler263_g174521 = SS30_g174557;
				half4 Coords263_g174521 = temp_output_37_0_g174521;
				half3 WorldPosition263_g174521 = temp_output_279_0_g174521;
				half3 WorldNormal263_g174521 = temp_output_280_0_g174521;
				half4 localSampleStochastic3D263_g174521 = SampleStochastic3D( Texture263_g174521 , Sampler263_g174521 , Coords263_g174521 , WorldPosition263_g174521 , WorldNormal263_g174521 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch9000_g174452 = localSamplePlanar2D238_g174521;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch9000_g174452 = localSamplePlanar3D246_g174521;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch9000_g174452 = localSampleStochastic2D234_g174521;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch9000_g174452 = localSampleStochastic3D263_g174521;
				#else
				float4 staticSwitch9000_g174452 = localSamplePlanar2D238_g174521;
				#endif
				float4 temp_output_7_0_g174483 = _TerrainShaderMin13;
				float4 temp_output_10_0_g174483 = ( _TerrainShaderMax13 - temp_output_7_0_g174483 );
				float4 temp_output_8931_0_g174452 = saturate( ( ( staticSwitch9000_g174452 - temp_output_7_0_g174483 ) / ( temp_output_10_0_g174483 + 0.0001 ) ) );
				half4 Masks_015_g174484 = temp_output_8931_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174532) = _TerrainShaderTex14;
				SamplerState Sampler238_g174532 = SS30_g174557;
				half4 Input_Terrain_Coords_148961_g174452 = _TerrainCoord14;
				float4 temp_output_37_0_g174532 = Input_Terrain_Coords_148961_g174452;
				half4 Coords238_g174532 = temp_output_37_0_g174532;
				float3 temp_output_279_0_g174532 = Input_Position9197_g174452;
				half3 WorldPosition238_g174532 = temp_output_279_0_g174532;
				half4 localSamplePlanar2D238_g174532 = SamplePlanar2D( Texture238_g174532 , Sampler238_g174532 , Coords238_g174532 , WorldPosition238_g174532 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174532) = _TerrainShaderTex14;
				SamplerState Sampler246_g174532 = SS30_g174557;
				half4 Coords246_g174532 = temp_output_37_0_g174532;
				half3 WorldPosition246_g174532 = temp_output_279_0_g174532;
				float3 temp_output_280_0_g174532 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174532 = temp_output_280_0_g174532;
				half4 localSamplePlanar3D246_g174532 = SamplePlanar3D( Texture246_g174532 , Sampler246_g174532 , Coords246_g174532 , WorldPosition246_g174532 , WorldNormal246_g174532 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174532) = _TerrainShaderTex14;
				SamplerState Sampler234_g174532 = SS30_g174557;
				float4 Coords234_g174532 = temp_output_37_0_g174532;
				float3 WorldPosition234_g174532 = temp_output_279_0_g174532;
				float4 localSampleStochastic2D234_g174532 = SampleStochastic2D( Texture234_g174532 , Sampler234_g174532 , Coords234_g174532 , WorldPosition234_g174532 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174532) = _TerrainShaderTex14;
				SamplerState Sampler263_g174532 = SS30_g174557;
				half4 Coords263_g174532 = temp_output_37_0_g174532;
				half3 WorldPosition263_g174532 = temp_output_279_0_g174532;
				half3 WorldNormal263_g174532 = temp_output_280_0_g174532;
				half4 localSampleStochastic3D263_g174532 = SampleStochastic3D( Texture263_g174532 , Sampler263_g174532 , Coords263_g174532 , WorldPosition263_g174532 , WorldNormal263_g174532 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch9001_g174452 = localSamplePlanar2D238_g174532;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch9001_g174452 = localSamplePlanar3D246_g174532;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch9001_g174452 = localSampleStochastic2D234_g174532;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch9001_g174452 = localSampleStochastic3D263_g174532;
				#else
				float4 staticSwitch9001_g174452 = localSamplePlanar2D238_g174532;
				#endif
				float4 temp_output_7_0_g174491 = _TerrainShaderMin14;
				float4 temp_output_10_0_g174491 = ( _TerrainShaderMax14 - temp_output_7_0_g174491 );
				float4 temp_output_8934_0_g174452 = saturate( ( ( staticSwitch9001_g174452 - temp_output_7_0_g174491 ) / ( temp_output_10_0_g174491 + 0.0001 ) ) );
				half4 Masks_0210_g174484 = temp_output_8934_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174533) = _TerrainShaderTex15;
				SamplerState Sampler238_g174533 = SS30_g174557;
				half4 Input_Terrain_Coords_158962_g174452 = _TerrainCoord15;
				float4 temp_output_37_0_g174533 = Input_Terrain_Coords_158962_g174452;
				half4 Coords238_g174533 = temp_output_37_0_g174533;
				float3 temp_output_279_0_g174533 = Input_Position9197_g174452;
				half3 WorldPosition238_g174533 = temp_output_279_0_g174533;
				half4 localSamplePlanar2D238_g174533 = SamplePlanar2D( Texture238_g174533 , Sampler238_g174533 , Coords238_g174533 , WorldPosition238_g174533 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174533) = _TerrainShaderTex15;
				SamplerState Sampler246_g174533 = SS30_g174557;
				half4 Coords246_g174533 = temp_output_37_0_g174533;
				half3 WorldPosition246_g174533 = temp_output_279_0_g174533;
				float3 temp_output_280_0_g174533 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174533 = temp_output_280_0_g174533;
				half4 localSamplePlanar3D246_g174533 = SamplePlanar3D( Texture246_g174533 , Sampler246_g174533 , Coords246_g174533 , WorldPosition246_g174533 , WorldNormal246_g174533 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174533) = _TerrainShaderTex15;
				SamplerState Sampler234_g174533 = SS30_g174557;
				float4 Coords234_g174533 = temp_output_37_0_g174533;
				float3 WorldPosition234_g174533 = temp_output_279_0_g174533;
				float4 localSampleStochastic2D234_g174533 = SampleStochastic2D( Texture234_g174533 , Sampler234_g174533 , Coords234_g174533 , WorldPosition234_g174533 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174533) = _TerrainShaderTex15;
				SamplerState Sampler263_g174533 = SS30_g174557;
				half4 Coords263_g174533 = temp_output_37_0_g174533;
				half3 WorldPosition263_g174533 = temp_output_279_0_g174533;
				half3 WorldNormal263_g174533 = temp_output_280_0_g174533;
				half4 localSampleStochastic3D263_g174533 = SampleStochastic3D( Texture263_g174533 , Sampler263_g174533 , Coords263_g174533 , WorldPosition263_g174533 , WorldNormal263_g174533 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch9002_g174452 = localSamplePlanar2D238_g174533;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch9002_g174452 = localSamplePlanar3D246_g174533;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch9002_g174452 = localSampleStochastic2D234_g174533;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch9002_g174452 = localSampleStochastic3D263_g174533;
				#else
				float4 staticSwitch9002_g174452 = localSamplePlanar2D238_g174533;
				#endif
				float4 temp_output_7_0_g174492 = _TerrainShaderMin15;
				float4 temp_output_10_0_g174492 = ( _TerrainShaderMax15 - temp_output_7_0_g174492 );
				float4 temp_output_8935_0_g174452 = saturate( ( ( staticSwitch9002_g174452 - temp_output_7_0_g174492 ) / ( temp_output_10_0_g174492 + 0.0001 ) ) );
				half4 Masks_0312_g174484 = temp_output_8935_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174534) = _TerrainShaderTex16;
				SamplerState Sampler238_g174534 = SS30_g174557;
				half4 Input_Terrain_Coords_168959_g174452 = _TerrainCoord16;
				float4 temp_output_37_0_g174534 = Input_Terrain_Coords_168959_g174452;
				half4 Coords238_g174534 = temp_output_37_0_g174534;
				float3 temp_output_279_0_g174534 = Input_Position9197_g174452;
				half3 WorldPosition238_g174534 = temp_output_279_0_g174534;
				half4 localSamplePlanar2D238_g174534 = SamplePlanar2D( Texture238_g174534 , Sampler238_g174534 , Coords238_g174534 , WorldPosition238_g174534 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174534) = _TerrainShaderTex16;
				SamplerState Sampler246_g174534 = SS30_g174557;
				half4 Coords246_g174534 = temp_output_37_0_g174534;
				half3 WorldPosition246_g174534 = temp_output_279_0_g174534;
				float3 temp_output_280_0_g174534 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174534 = temp_output_280_0_g174534;
				half4 localSamplePlanar3D246_g174534 = SamplePlanar3D( Texture246_g174534 , Sampler246_g174534 , Coords246_g174534 , WorldPosition246_g174534 , WorldNormal246_g174534 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174534) = _TerrainShaderTex16;
				SamplerState Sampler234_g174534 = SS30_g174557;
				float4 Coords234_g174534 = temp_output_37_0_g174534;
				float3 WorldPosition234_g174534 = temp_output_279_0_g174534;
				float4 localSampleStochastic2D234_g174534 = SampleStochastic2D( Texture234_g174534 , Sampler234_g174534 , Coords234_g174534 , WorldPosition234_g174534 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174534) = _TerrainShaderTex16;
				SamplerState Sampler263_g174534 = SS30_g174557;
				half4 Coords263_g174534 = temp_output_37_0_g174534;
				half3 WorldPosition263_g174534 = temp_output_279_0_g174534;
				half3 WorldNormal263_g174534 = temp_output_280_0_g174534;
				half4 localSampleStochastic3D263_g174534 = SampleStochastic3D( Texture263_g174534 , Sampler263_g174534 , Coords263_g174534 , WorldPosition263_g174534 , WorldNormal263_g174534 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch9003_g174452 = localSamplePlanar2D238_g174534;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch9003_g174452 = localSamplePlanar3D246_g174534;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch9003_g174452 = localSampleStochastic2D234_g174534;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch9003_g174452 = localSampleStochastic3D263_g174534;
				#else
				float4 staticSwitch9003_g174452 = localSamplePlanar2D238_g174534;
				#endif
				float4 temp_output_7_0_g174493 = _TerrainShaderMin16;
				float4 temp_output_10_0_g174493 = ( _TerrainShaderMax16 - temp_output_7_0_g174493 );
				float4 temp_output_8936_0_g174452 = saturate( ( ( staticSwitch9003_g174452 - temp_output_7_0_g174493 ) / ( temp_output_10_0_g174493 + 0.0001 ) ) );
				half4 Masks_0414_g174484 = temp_output_8936_0_g174452;
				float4 appendResult29_g174484 = (float4((Masks_015_g174484).z , (Masks_0210_g174484).z , (Masks_0312_g174484).z , (Masks_0414_g174484).z));
				half4 Control31_g174484 = Terrain_Control_167711_g174452;
				half4 Terrain_Height_169015_g174452 = ( appendResult29_g174484 * Control31_g174484 );
				float4 heights_167362_g174452 = Terrain_Height_169015_g174452;
				float heightTransition7362_g174452 = ( 1.0 - _TerrainHeightBlendValue );
				float4 weights_047362_g174452 = float4( 0,0,0,0 );
				float4 weights_087362_g174452 = float4( 0,0,0,0 );
				float4 weights_127362_g174452 = float4( 0,0,0,0 );
				float4 weights_167362_g174452 = float4( 0,0,0,0 );
				//Modified version of the HDRP terrain height based blending
				float maxHeight = 0;
				float4 weightedHeights_04 = float4( 0,0,0,0 );
				float4 weightedHeights_08 = float4( 0,0,0,0 );
				float4 weightedHeights_12 = float4( 0,0,0,0 );
				float4 weightedHeights_16 = float4( 0,0,0,0 );
				maxHeight = heights_047362_g174452.x;
				maxHeight = max(maxHeight, heights_047362_g174452.y);
				maxHeight = max(maxHeight, heights_047362_g174452.z);
				maxHeight = max(maxHeight, heights_047362_g174452.w);
				#ifdef TVE_TERRAIN_08
				maxHeight = max(maxHeight, heights_087362_g174452.x);
				maxHeight = max(maxHeight, heights_087362_g174452.y);
				maxHeight = max(maxHeight, heights_087362_g174452.z);
				maxHeight = max(maxHeight, heights_087362_g174452.w);
				#endif
				#ifdef TVE_TERRAIN_12
				maxHeight = max(maxHeight, heights_087362_g174452.x);
				maxHeight = max(maxHeight, heights_087362_g174452.y);
				maxHeight = max(maxHeight, heights_087362_g174452.z);
				maxHeight = max(maxHeight, heights_087362_g174452.w);
				maxHeight = max(maxHeight, heights_127362_g174452.x);
				maxHeight = max(maxHeight, heights_127362_g174452.y);
				maxHeight = max(maxHeight, heights_127362_g174452.z);
				maxHeight = max(maxHeight, heights_127362_g174452.w);
				#endif
				#ifdef TVE_TERRAIN_16
				maxHeight = max(maxHeight, heights_087362_g174452.x);
				maxHeight = max(maxHeight, heights_087362_g174452.y);
				maxHeight = max(maxHeight, heights_087362_g174452.z);
				maxHeight = max(maxHeight, heights_087362_g174452.w);
				maxHeight = max(maxHeight, heights_127362_g174452.x);
				maxHeight = max(maxHeight, heights_127362_g174452.y);
				maxHeight = max(maxHeight, heights_127362_g174452.z);
				maxHeight = max(maxHeight, heights_127362_g174452.w);
				maxHeight = max(maxHeight, heights_167362_g174452.x);
				maxHeight = max(maxHeight, heights_167362_g174452.y);
				maxHeight = max(maxHeight, heights_167362_g174452.z);
				maxHeight = max(maxHeight, heights_167362_g174452.w);
				#endif
				float transition = max(heightTransition7362_g174452, 0.01);
				weightedHeights_04 = float4 ( heights_047362_g174452.x, heights_047362_g174452.y, heights_047362_g174452.z, heights_047362_g174452.w );
				weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
				weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g174452;
				#ifdef TVE_TERRAIN_08
				weightedHeights_08 = float4 ( heights_087362_g174452.x, heights_087362_g174452.y, heights_087362_g174452.z, heights_087362_g174452.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g174452;
				#endif
				#ifdef TVE_TERRAIN_12
				weightedHeights_08 = float4 ( heights_087362_g174452.x, heights_087362_g174452.y, heights_087362_g174452.z, heights_087362_g174452.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g174452;
				weightedHeights_12 = float4 ( heights_127362_g174452.x, heights_127362_g174452.y, heights_127362_g174452.z, heights_127362_g174452.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g174452;
				#endif
				#ifdef TVE_TERRAIN_16
				weightedHeights_08 = float4 ( heights_087362_g174452.x, heights_087362_g174452.y, heights_087362_g174452.z, heights_087362_g174452.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g174452;
				weightedHeights_12 = float4 ( heights_127362_g174452.x, heights_127362_g174452.y, heights_127362_g174452.z, heights_127362_g174452.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g174452;
				weightedHeights_16 = float4 ( heights_167362_g174452.x, heights_167362_g174452.y, heights_167362_g174452.z, heights_167362_g174452.w );
				weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
				weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g174452;
				#endif
				float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
				float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
				float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
				float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
				float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
				weights_047362_g174452 = weightedHeights_04 / sumHeight.xxxx;
				#ifdef TVE_TERRAIN_08
				weights_087362_g174452 = weightedHeights_08 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_12
				weights_087362_g174452 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g174452 = weightedHeights_12 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_16
				weights_087362_g174452 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g174452 = weightedHeights_12 / sumHeight.xxxx;
				weights_167362_g174452 = weightedHeights_16 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8792_g174452 = weights_047362_g174452;
				#else
				float4 staticSwitch8792_g174452 = control_047362_g174452;
				#endif
				half4 Terrain_Weights_046781_g174452 = staticSwitch8792_g174452;
				half4 Weights52_g174457 = Terrain_Weights_046781_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174498) = _TerrainAlbedoTex1;
				float localFilterTexture19_g174558 = ( 0.0 );
				SamplerState SamplerDefault19_g174558 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174558 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174558 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174558 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174558 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174558 = SamplerDefault19_g174558;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174558 = SamplerDefault19_g174558;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174558 = SamplerPoint19_g174558;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174558 = SamplerLow19_g174558;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174558 = SamplerMedium19_g174558;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174558 = SamplerHigh19_g174558;
				#endif
				SamplerState Sampler238_g174498 = SS19_g174558;
				float4 temp_output_37_0_g174498 = Input_Terrain_Coords_016785_g174452;
				half4 Coords238_g174498 = temp_output_37_0_g174498;
				float3 temp_output_279_0_g174498 = Input_Position9197_g174452;
				half3 WorldPosition238_g174498 = temp_output_279_0_g174498;
				half4 localSamplePlanar2D238_g174498 = SamplePlanar2D( Texture238_g174498 , Sampler238_g174498 , Coords238_g174498 , WorldPosition238_g174498 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174498) = _TerrainAlbedoTex1;
				SamplerState Sampler246_g174498 = SS19_g174558;
				half4 Coords246_g174498 = temp_output_37_0_g174498;
				half3 WorldPosition246_g174498 = temp_output_279_0_g174498;
				float3 temp_output_280_0_g174498 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174498 = temp_output_280_0_g174498;
				half4 localSamplePlanar3D246_g174498 = SamplePlanar3D( Texture246_g174498 , Sampler246_g174498 , Coords246_g174498 , WorldPosition246_g174498 , WorldNormal246_g174498 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174498) = _TerrainAlbedoTex1;
				SamplerState Sampler234_g174498 = SS19_g174558;
				float4 Coords234_g174498 = temp_output_37_0_g174498;
				float3 WorldPosition234_g174498 = temp_output_279_0_g174498;
				float4 localSampleStochastic2D234_g174498 = SampleStochastic2D( Texture234_g174498 , Sampler234_g174498 , Coords234_g174498 , WorldPosition234_g174498 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174498) = _TerrainAlbedoTex1;
				SamplerState Sampler263_g174498 = SS19_g174558;
				half4 Coords263_g174498 = temp_output_37_0_g174498;
				half3 WorldPosition263_g174498 = temp_output_279_0_g174498;
				half3 WorldNormal263_g174498 = temp_output_280_0_g174498;
				half4 localSampleStochastic3D263_g174498 = SampleStochastic3D( Texture263_g174498 , Sampler263_g174498 , Coords263_g174498 , WorldPosition263_g174498 , WorldNormal263_g174498 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8614_g174452 = localSamplePlanar2D238_g174498;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8614_g174452 = localSamplePlanar3D246_g174498;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8614_g174452 = localSampleStochastic2D234_g174498;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8614_g174452 = localSampleStochastic3D263_g174498;
				#else
				float4 staticSwitch8614_g174452 = localSamplePlanar2D238_g174498;
				#endif
				half4 Layer133_g174457 = staticSwitch8614_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler238_g174499 = SS19_g174558;
				float4 temp_output_37_0_g174499 = Input_Terrain_Coords_026787_g174452;
				half4 Coords238_g174499 = temp_output_37_0_g174499;
				float3 temp_output_279_0_g174499 = Input_Position9197_g174452;
				half3 WorldPosition238_g174499 = temp_output_279_0_g174499;
				half4 localSamplePlanar2D238_g174499 = SamplePlanar2D( Texture238_g174499 , Sampler238_g174499 , Coords238_g174499 , WorldPosition238_g174499 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler246_g174499 = SS19_g174558;
				half4 Coords246_g174499 = temp_output_37_0_g174499;
				half3 WorldPosition246_g174499 = temp_output_279_0_g174499;
				float3 temp_output_280_0_g174499 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174499 = temp_output_280_0_g174499;
				half4 localSamplePlanar3D246_g174499 = SamplePlanar3D( Texture246_g174499 , Sampler246_g174499 , Coords246_g174499 , WorldPosition246_g174499 , WorldNormal246_g174499 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler234_g174499 = SS19_g174558;
				float4 Coords234_g174499 = temp_output_37_0_g174499;
				float3 WorldPosition234_g174499 = temp_output_279_0_g174499;
				float4 localSampleStochastic2D234_g174499 = SampleStochastic2D( Texture234_g174499 , Sampler234_g174499 , Coords234_g174499 , WorldPosition234_g174499 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler263_g174499 = SS19_g174558;
				half4 Coords263_g174499 = temp_output_37_0_g174499;
				half3 WorldPosition263_g174499 = temp_output_279_0_g174499;
				half3 WorldNormal263_g174499 = temp_output_280_0_g174499;
				half4 localSampleStochastic3D263_g174499 = SampleStochastic3D( Texture263_g174499 , Sampler263_g174499 , Coords263_g174499 , WorldPosition263_g174499 , WorldNormal263_g174499 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8629_g174452 = localSamplePlanar2D238_g174499;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8629_g174452 = localSamplePlanar3D246_g174499;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8629_g174452 = localSampleStochastic2D234_g174499;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8629_g174452 = localSampleStochastic3D263_g174499;
				#else
				float4 staticSwitch8629_g174452 = localSamplePlanar2D238_g174499;
				#endif
				half4 Layer237_g174457 = staticSwitch8629_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler238_g174502 = SS19_g174558;
				float4 temp_output_37_0_g174502 = Input_Terrain_Coords_036789_g174452;
				half4 Coords238_g174502 = temp_output_37_0_g174502;
				float3 temp_output_279_0_g174502 = Input_Position9197_g174452;
				half3 WorldPosition238_g174502 = temp_output_279_0_g174502;
				half4 localSamplePlanar2D238_g174502 = SamplePlanar2D( Texture238_g174502 , Sampler238_g174502 , Coords238_g174502 , WorldPosition238_g174502 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler246_g174502 = SS19_g174558;
				half4 Coords246_g174502 = temp_output_37_0_g174502;
				half3 WorldPosition246_g174502 = temp_output_279_0_g174502;
				float3 temp_output_280_0_g174502 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174502 = temp_output_280_0_g174502;
				half4 localSamplePlanar3D246_g174502 = SamplePlanar3D( Texture246_g174502 , Sampler246_g174502 , Coords246_g174502 , WorldPosition246_g174502 , WorldNormal246_g174502 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler234_g174502 = SS19_g174558;
				float4 Coords234_g174502 = temp_output_37_0_g174502;
				float3 WorldPosition234_g174502 = temp_output_279_0_g174502;
				float4 localSampleStochastic2D234_g174502 = SampleStochastic2D( Texture234_g174502 , Sampler234_g174502 , Coords234_g174502 , WorldPosition234_g174502 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler263_g174502 = SS19_g174558;
				half4 Coords263_g174502 = temp_output_37_0_g174502;
				half3 WorldPosition263_g174502 = temp_output_279_0_g174502;
				half3 WorldNormal263_g174502 = temp_output_280_0_g174502;
				half4 localSampleStochastic3D263_g174502 = SampleStochastic3D( Texture263_g174502 , Sampler263_g174502 , Coords263_g174502 , WorldPosition263_g174502 , WorldNormal263_g174502 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8630_g174452 = localSamplePlanar2D238_g174502;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8630_g174452 = localSamplePlanar3D246_g174502;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8630_g174452 = localSampleStochastic2D234_g174502;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8630_g174452 = localSampleStochastic3D263_g174502;
				#else
				float4 staticSwitch8630_g174452 = localSamplePlanar2D238_g174502;
				#endif
				half4 Layer338_g174457 = staticSwitch8630_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler238_g174504 = SS19_g174558;
				float4 temp_output_37_0_g174504 = Input_Terrain_Coords_046791_g174452;
				half4 Coords238_g174504 = temp_output_37_0_g174504;
				float3 temp_output_279_0_g174504 = Input_Position9197_g174452;
				half3 WorldPosition238_g174504 = temp_output_279_0_g174504;
				half4 localSamplePlanar2D238_g174504 = SamplePlanar2D( Texture238_g174504 , Sampler238_g174504 , Coords238_g174504 , WorldPosition238_g174504 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler246_g174504 = SS19_g174558;
				half4 Coords246_g174504 = temp_output_37_0_g174504;
				half3 WorldPosition246_g174504 = temp_output_279_0_g174504;
				float3 temp_output_280_0_g174504 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174504 = temp_output_280_0_g174504;
				half4 localSamplePlanar3D246_g174504 = SamplePlanar3D( Texture246_g174504 , Sampler246_g174504 , Coords246_g174504 , WorldPosition246_g174504 , WorldNormal246_g174504 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler234_g174504 = SS19_g174558;
				float4 Coords234_g174504 = temp_output_37_0_g174504;
				float3 WorldPosition234_g174504 = temp_output_279_0_g174504;
				float4 localSampleStochastic2D234_g174504 = SampleStochastic2D( Texture234_g174504 , Sampler234_g174504 , Coords234_g174504 , WorldPosition234_g174504 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler263_g174504 = SS19_g174558;
				half4 Coords263_g174504 = temp_output_37_0_g174504;
				half3 WorldPosition263_g174504 = temp_output_279_0_g174504;
				half3 WorldNormal263_g174504 = temp_output_280_0_g174504;
				half4 localSampleStochastic3D263_g174504 = SampleStochastic3D( Texture263_g174504 , Sampler263_g174504 , Coords263_g174504 , WorldPosition263_g174504 , WorldNormal263_g174504 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8631_g174452 = localSamplePlanar2D238_g174504;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8631_g174452 = localSamplePlanar3D246_g174504;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8631_g174452 = localSampleStochastic2D234_g174504;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8631_g174452 = localSampleStochastic3D263_g174504;
				#else
				float4 staticSwitch8631_g174452 = localSamplePlanar2D238_g174504;
				#endif
				half4 Layer439_g174457 = staticSwitch8631_g174452;
				float4 weightedBlendVar31_g174457 = Weights52_g174457;
				float4 weightedBlend31_g174457 = ( weightedBlendVar31_g174457.x*Layer133_g174457 + weightedBlendVar31_g174457.y*Layer237_g174457 + weightedBlendVar31_g174457.z*Layer338_g174457 + weightedBlendVar31_g174457.w*Layer439_g174457 );
				half4 Terrain_AAAA_047200_g174452 = weightedBlend31_g174457;
				half4 Layer_045_g174460 = Terrain_AAAA_047200_g174452;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8793_g174452 = weights_087362_g174452;
				#else
				float4 staticSwitch8793_g174452 = control_087362_g174452;
				#endif
				half4 Terrain_Weights_087340_g174452 = staticSwitch8793_g174452;
				half4 Weights52_g174467 = Terrain_Weights_087340_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler238_g174508 = SS19_g174558;
				float4 temp_output_37_0_g174508 = Input_Terrain_Coords_058750_g174452;
				half4 Coords238_g174508 = temp_output_37_0_g174508;
				float3 temp_output_279_0_g174508 = Input_Position9197_g174452;
				half3 WorldPosition238_g174508 = temp_output_279_0_g174508;
				half4 localSamplePlanar2D238_g174508 = SamplePlanar2D( Texture238_g174508 , Sampler238_g174508 , Coords238_g174508 , WorldPosition238_g174508 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler246_g174508 = SS19_g174558;
				half4 Coords246_g174508 = temp_output_37_0_g174508;
				half3 WorldPosition246_g174508 = temp_output_279_0_g174508;
				float3 temp_output_280_0_g174508 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174508 = temp_output_280_0_g174508;
				half4 localSamplePlanar3D246_g174508 = SamplePlanar3D( Texture246_g174508 , Sampler246_g174508 , Coords246_g174508 , WorldPosition246_g174508 , WorldNormal246_g174508 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler234_g174508 = SS19_g174558;
				float4 Coords234_g174508 = temp_output_37_0_g174508;
				float3 WorldPosition234_g174508 = temp_output_279_0_g174508;
				float4 localSampleStochastic2D234_g174508 = SampleStochastic2D( Texture234_g174508 , Sampler234_g174508 , Coords234_g174508 , WorldPosition234_g174508 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler263_g174508 = SS19_g174558;
				half4 Coords263_g174508 = temp_output_37_0_g174508;
				half3 WorldPosition263_g174508 = temp_output_279_0_g174508;
				half3 WorldNormal263_g174508 = temp_output_280_0_g174508;
				half4 localSampleStochastic3D263_g174508 = SampleStochastic3D( Texture263_g174508 , Sampler263_g174508 , Coords263_g174508 , WorldPosition263_g174508 , WorldNormal263_g174508 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8690_g174452 = localSamplePlanar2D238_g174508;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8690_g174452 = localSamplePlanar3D246_g174508;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8690_g174452 = localSampleStochastic2D234_g174508;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8690_g174452 = localSampleStochastic3D263_g174508;
				#else
				float4 staticSwitch8690_g174452 = localSamplePlanar2D238_g174508;
				#endif
				half4 Layer133_g174467 = staticSwitch8690_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler238_g174535 = SS19_g174558;
				float4 temp_output_37_0_g174535 = Input_Terrain_Coords_068751_g174452;
				half4 Coords238_g174535 = temp_output_37_0_g174535;
				float3 temp_output_279_0_g174535 = Input_Position9197_g174452;
				half3 WorldPosition238_g174535 = temp_output_279_0_g174535;
				half4 localSamplePlanar2D238_g174535 = SamplePlanar2D( Texture238_g174535 , Sampler238_g174535 , Coords238_g174535 , WorldPosition238_g174535 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler246_g174535 = SS19_g174558;
				half4 Coords246_g174535 = temp_output_37_0_g174535;
				half3 WorldPosition246_g174535 = temp_output_279_0_g174535;
				float3 temp_output_280_0_g174535 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174535 = temp_output_280_0_g174535;
				half4 localSamplePlanar3D246_g174535 = SamplePlanar3D( Texture246_g174535 , Sampler246_g174535 , Coords246_g174535 , WorldPosition246_g174535 , WorldNormal246_g174535 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler234_g174535 = SS19_g174558;
				float4 Coords234_g174535 = temp_output_37_0_g174535;
				float3 WorldPosition234_g174535 = temp_output_279_0_g174535;
				float4 localSampleStochastic2D234_g174535 = SampleStochastic2D( Texture234_g174535 , Sampler234_g174535 , Coords234_g174535 , WorldPosition234_g174535 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler263_g174535 = SS19_g174558;
				half4 Coords263_g174535 = temp_output_37_0_g174535;
				half3 WorldPosition263_g174535 = temp_output_279_0_g174535;
				half3 WorldNormal263_g174535 = temp_output_280_0_g174535;
				half4 localSampleStochastic3D263_g174535 = SampleStochastic3D( Texture263_g174535 , Sampler263_g174535 , Coords263_g174535 , WorldPosition263_g174535 , WorldNormal263_g174535 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8691_g174452 = localSamplePlanar2D238_g174535;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8691_g174452 = localSamplePlanar3D246_g174535;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8691_g174452 = localSampleStochastic2D234_g174535;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8691_g174452 = localSampleStochastic3D263_g174535;
				#else
				float4 staticSwitch8691_g174452 = localSamplePlanar2D238_g174535;
				#endif
				half4 Layer237_g174467 = staticSwitch8691_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler238_g174536 = SS19_g174558;
				float4 temp_output_37_0_g174536 = Input_Terrain_Coords_078752_g174452;
				half4 Coords238_g174536 = temp_output_37_0_g174536;
				float3 temp_output_279_0_g174536 = Input_Position9197_g174452;
				half3 WorldPosition238_g174536 = temp_output_279_0_g174536;
				half4 localSamplePlanar2D238_g174536 = SamplePlanar2D( Texture238_g174536 , Sampler238_g174536 , Coords238_g174536 , WorldPosition238_g174536 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler246_g174536 = SS19_g174558;
				half4 Coords246_g174536 = temp_output_37_0_g174536;
				half3 WorldPosition246_g174536 = temp_output_279_0_g174536;
				float3 temp_output_280_0_g174536 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174536 = temp_output_280_0_g174536;
				half4 localSamplePlanar3D246_g174536 = SamplePlanar3D( Texture246_g174536 , Sampler246_g174536 , Coords246_g174536 , WorldPosition246_g174536 , WorldNormal246_g174536 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler234_g174536 = SS19_g174558;
				float4 Coords234_g174536 = temp_output_37_0_g174536;
				float3 WorldPosition234_g174536 = temp_output_279_0_g174536;
				float4 localSampleStochastic2D234_g174536 = SampleStochastic2D( Texture234_g174536 , Sampler234_g174536 , Coords234_g174536 , WorldPosition234_g174536 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler263_g174536 = SS19_g174558;
				half4 Coords263_g174536 = temp_output_37_0_g174536;
				half3 WorldPosition263_g174536 = temp_output_279_0_g174536;
				half3 WorldNormal263_g174536 = temp_output_280_0_g174536;
				half4 localSampleStochastic3D263_g174536 = SampleStochastic3D( Texture263_g174536 , Sampler263_g174536 , Coords263_g174536 , WorldPosition263_g174536 , WorldNormal263_g174536 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8692_g174452 = localSamplePlanar2D238_g174536;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8692_g174452 = localSamplePlanar3D246_g174536;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8692_g174452 = localSampleStochastic2D234_g174536;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8692_g174452 = localSampleStochastic3D263_g174536;
				#else
				float4 staticSwitch8692_g174452 = localSamplePlanar2D238_g174536;
				#endif
				half4 Layer338_g174467 = staticSwitch8692_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler238_g174537 = SS19_g174558;
				float4 temp_output_37_0_g174537 = Input_Terrain_Coords_088749_g174452;
				half4 Coords238_g174537 = temp_output_37_0_g174537;
				float3 temp_output_279_0_g174537 = Input_Position9197_g174452;
				half3 WorldPosition238_g174537 = temp_output_279_0_g174537;
				half4 localSamplePlanar2D238_g174537 = SamplePlanar2D( Texture238_g174537 , Sampler238_g174537 , Coords238_g174537 , WorldPosition238_g174537 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler246_g174537 = SS19_g174558;
				half4 Coords246_g174537 = temp_output_37_0_g174537;
				half3 WorldPosition246_g174537 = temp_output_279_0_g174537;
				float3 temp_output_280_0_g174537 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174537 = temp_output_280_0_g174537;
				half4 localSamplePlanar3D246_g174537 = SamplePlanar3D( Texture246_g174537 , Sampler246_g174537 , Coords246_g174537 , WorldPosition246_g174537 , WorldNormal246_g174537 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler234_g174537 = SS19_g174558;
				float4 Coords234_g174537 = temp_output_37_0_g174537;
				float3 WorldPosition234_g174537 = temp_output_279_0_g174537;
				float4 localSampleStochastic2D234_g174537 = SampleStochastic2D( Texture234_g174537 , Sampler234_g174537 , Coords234_g174537 , WorldPosition234_g174537 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler263_g174537 = SS19_g174558;
				half4 Coords263_g174537 = temp_output_37_0_g174537;
				half3 WorldPosition263_g174537 = temp_output_279_0_g174537;
				half3 WorldNormal263_g174537 = temp_output_280_0_g174537;
				half4 localSampleStochastic3D263_g174537 = SampleStochastic3D( Texture263_g174537 , Sampler263_g174537 , Coords263_g174537 , WorldPosition263_g174537 , WorldNormal263_g174537 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8693_g174452 = localSamplePlanar2D238_g174537;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8693_g174452 = localSamplePlanar3D246_g174537;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8693_g174452 = localSampleStochastic2D234_g174537;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8693_g174452 = localSampleStochastic3D263_g174537;
				#else
				float4 staticSwitch8693_g174452 = localSamplePlanar2D238_g174537;
				#endif
				half4 Layer439_g174467 = staticSwitch8693_g174452;
				float4 weightedBlendVar31_g174467 = Weights52_g174467;
				float4 weightedBlend31_g174467 = ( weightedBlendVar31_g174467.x*Layer133_g174467 + weightedBlendVar31_g174467.y*Layer237_g174467 + weightedBlendVar31_g174467.z*Layer338_g174467 + weightedBlendVar31_g174467.w*Layer439_g174467 );
				half4 Terrain_AAAA_088665_g174452 = weightedBlend31_g174467;
				half4 Layer_0810_g174460 = Terrain_AAAA_088665_g174452;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8794_g174452 = weights_127362_g174452;
				#else
				float4 staticSwitch8794_g174452 = control_127362_g174452;
				#endif
				half4 Terrain_Weights_127710_g174452 = staticSwitch8794_g174452;
				half4 Weights52_g174474 = Terrain_Weights_127710_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler238_g174511 = SS19_g174558;
				float4 temp_output_37_0_g174511 = Input_Terrain_Coords_098833_g174452;
				half4 Coords238_g174511 = temp_output_37_0_g174511;
				float3 temp_output_279_0_g174511 = Input_Position9197_g174452;
				half3 WorldPosition238_g174511 = temp_output_279_0_g174511;
				half4 localSamplePlanar2D238_g174511 = SamplePlanar2D( Texture238_g174511 , Sampler238_g174511 , Coords238_g174511 , WorldPosition238_g174511 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler246_g174511 = SS19_g174558;
				half4 Coords246_g174511 = temp_output_37_0_g174511;
				half3 WorldPosition246_g174511 = temp_output_279_0_g174511;
				float3 temp_output_280_0_g174511 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174511 = temp_output_280_0_g174511;
				half4 localSamplePlanar3D246_g174511 = SamplePlanar3D( Texture246_g174511 , Sampler246_g174511 , Coords246_g174511 , WorldPosition246_g174511 , WorldNormal246_g174511 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler234_g174511 = SS19_g174558;
				float4 Coords234_g174511 = temp_output_37_0_g174511;
				float3 WorldPosition234_g174511 = temp_output_279_0_g174511;
				float4 localSampleStochastic2D234_g174511 = SampleStochastic2D( Texture234_g174511 , Sampler234_g174511 , Coords234_g174511 , WorldPosition234_g174511 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler263_g174511 = SS19_g174558;
				half4 Coords263_g174511 = temp_output_37_0_g174511;
				half3 WorldPosition263_g174511 = temp_output_279_0_g174511;
				half3 WorldNormal263_g174511 = temp_output_280_0_g174511;
				half4 localSampleStochastic3D263_g174511 = SampleStochastic3D( Texture263_g174511 , Sampler263_g174511 , Coords263_g174511 , WorldPosition263_g174511 , WorldNormal263_g174511 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8872_g174452 = localSamplePlanar2D238_g174511;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8872_g174452 = localSamplePlanar3D246_g174511;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8872_g174452 = localSampleStochastic2D234_g174511;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8872_g174452 = localSampleStochastic3D263_g174511;
				#else
				float4 staticSwitch8872_g174452 = localSamplePlanar2D238_g174511;
				#endif
				half4 Layer133_g174474 = staticSwitch8872_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler238_g174514 = SS19_g174558;
				float4 temp_output_37_0_g174514 = Input_Terrain_Coords_108834_g174452;
				half4 Coords238_g174514 = temp_output_37_0_g174514;
				float3 temp_output_279_0_g174514 = Input_Position9197_g174452;
				half3 WorldPosition238_g174514 = temp_output_279_0_g174514;
				half4 localSamplePlanar2D238_g174514 = SamplePlanar2D( Texture238_g174514 , Sampler238_g174514 , Coords238_g174514 , WorldPosition238_g174514 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler246_g174514 = SS19_g174558;
				half4 Coords246_g174514 = temp_output_37_0_g174514;
				half3 WorldPosition246_g174514 = temp_output_279_0_g174514;
				float3 temp_output_280_0_g174514 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174514 = temp_output_280_0_g174514;
				half4 localSamplePlanar3D246_g174514 = SamplePlanar3D( Texture246_g174514 , Sampler246_g174514 , Coords246_g174514 , WorldPosition246_g174514 , WorldNormal246_g174514 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler234_g174514 = SS19_g174558;
				float4 Coords234_g174514 = temp_output_37_0_g174514;
				float3 WorldPosition234_g174514 = temp_output_279_0_g174514;
				float4 localSampleStochastic2D234_g174514 = SampleStochastic2D( Texture234_g174514 , Sampler234_g174514 , Coords234_g174514 , WorldPosition234_g174514 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler263_g174514 = SS19_g174558;
				half4 Coords263_g174514 = temp_output_37_0_g174514;
				half3 WorldPosition263_g174514 = temp_output_279_0_g174514;
				half3 WorldNormal263_g174514 = temp_output_280_0_g174514;
				half4 localSampleStochastic3D263_g174514 = SampleStochastic3D( Texture263_g174514 , Sampler263_g174514 , Coords263_g174514 , WorldPosition263_g174514 , WorldNormal263_g174514 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8873_g174452 = localSamplePlanar2D238_g174514;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8873_g174452 = localSamplePlanar3D246_g174514;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8873_g174452 = localSampleStochastic2D234_g174514;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8873_g174452 = localSampleStochastic3D263_g174514;
				#else
				float4 staticSwitch8873_g174452 = localSamplePlanar2D238_g174514;
				#endif
				half4 Layer237_g174474 = staticSwitch8873_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler238_g174515 = SS19_g174558;
				float4 temp_output_37_0_g174515 = Input_Terrain_Coords_118835_g174452;
				half4 Coords238_g174515 = temp_output_37_0_g174515;
				float3 temp_output_279_0_g174515 = Input_Position9197_g174452;
				half3 WorldPosition238_g174515 = temp_output_279_0_g174515;
				half4 localSamplePlanar2D238_g174515 = SamplePlanar2D( Texture238_g174515 , Sampler238_g174515 , Coords238_g174515 , WorldPosition238_g174515 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler246_g174515 = SS19_g174558;
				half4 Coords246_g174515 = temp_output_37_0_g174515;
				half3 WorldPosition246_g174515 = temp_output_279_0_g174515;
				float3 temp_output_280_0_g174515 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174515 = temp_output_280_0_g174515;
				half4 localSamplePlanar3D246_g174515 = SamplePlanar3D( Texture246_g174515 , Sampler246_g174515 , Coords246_g174515 , WorldPosition246_g174515 , WorldNormal246_g174515 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler234_g174515 = SS19_g174558;
				float4 Coords234_g174515 = temp_output_37_0_g174515;
				float3 WorldPosition234_g174515 = temp_output_279_0_g174515;
				float4 localSampleStochastic2D234_g174515 = SampleStochastic2D( Texture234_g174515 , Sampler234_g174515 , Coords234_g174515 , WorldPosition234_g174515 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler263_g174515 = SS19_g174558;
				half4 Coords263_g174515 = temp_output_37_0_g174515;
				half3 WorldPosition263_g174515 = temp_output_279_0_g174515;
				half3 WorldNormal263_g174515 = temp_output_280_0_g174515;
				half4 localSampleStochastic3D263_g174515 = SampleStochastic3D( Texture263_g174515 , Sampler263_g174515 , Coords263_g174515 , WorldPosition263_g174515 , WorldNormal263_g174515 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8874_g174452 = localSamplePlanar2D238_g174515;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8874_g174452 = localSamplePlanar3D246_g174515;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8874_g174452 = localSampleStochastic2D234_g174515;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8874_g174452 = localSampleStochastic3D263_g174515;
				#else
				float4 staticSwitch8874_g174452 = localSamplePlanar2D238_g174515;
				#endif
				half4 Layer338_g174474 = staticSwitch8874_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler238_g174516 = SS19_g174558;
				float4 temp_output_37_0_g174516 = Input_Terrain_Coords_128836_g174452;
				half4 Coords238_g174516 = temp_output_37_0_g174516;
				float3 temp_output_279_0_g174516 = Input_Position9197_g174452;
				half3 WorldPosition238_g174516 = temp_output_279_0_g174516;
				half4 localSamplePlanar2D238_g174516 = SamplePlanar2D( Texture238_g174516 , Sampler238_g174516 , Coords238_g174516 , WorldPosition238_g174516 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler246_g174516 = SS19_g174558;
				half4 Coords246_g174516 = temp_output_37_0_g174516;
				half3 WorldPosition246_g174516 = temp_output_279_0_g174516;
				float3 temp_output_280_0_g174516 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174516 = temp_output_280_0_g174516;
				half4 localSamplePlanar3D246_g174516 = SamplePlanar3D( Texture246_g174516 , Sampler246_g174516 , Coords246_g174516 , WorldPosition246_g174516 , WorldNormal246_g174516 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler234_g174516 = SS19_g174558;
				float4 Coords234_g174516 = temp_output_37_0_g174516;
				float3 WorldPosition234_g174516 = temp_output_279_0_g174516;
				float4 localSampleStochastic2D234_g174516 = SampleStochastic2D( Texture234_g174516 , Sampler234_g174516 , Coords234_g174516 , WorldPosition234_g174516 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler263_g174516 = SS19_g174558;
				half4 Coords263_g174516 = temp_output_37_0_g174516;
				half3 WorldPosition263_g174516 = temp_output_279_0_g174516;
				half3 WorldNormal263_g174516 = temp_output_280_0_g174516;
				half4 localSampleStochastic3D263_g174516 = SampleStochastic3D( Texture263_g174516 , Sampler263_g174516 , Coords263_g174516 , WorldPosition263_g174516 , WorldNormal263_g174516 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8875_g174452 = localSamplePlanar2D238_g174516;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8875_g174452 = localSamplePlanar3D246_g174516;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8875_g174452 = localSampleStochastic2D234_g174516;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8875_g174452 = localSampleStochastic3D263_g174516;
				#else
				float4 staticSwitch8875_g174452 = localSamplePlanar2D238_g174516;
				#endif
				half4 Layer439_g174474 = staticSwitch8875_g174452;
				float4 weightedBlendVar31_g174474 = Weights52_g174474;
				float4 weightedBlend31_g174474 = ( weightedBlendVar31_g174474.x*Layer133_g174474 + weightedBlendVar31_g174474.y*Layer237_g174474 + weightedBlendVar31_g174474.z*Layer338_g174474 + weightedBlendVar31_g174474.w*Layer439_g174474 );
				half4 Terrain_AAAA_128851_g174452 = weightedBlend31_g174474;
				half4 Layer_1243_g174460 = Terrain_AAAA_128851_g174452;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8795_g174452 = weights_167362_g174452;
				#else
				float4 staticSwitch8795_g174452 = control_167362_g174452;
				#endif
				half4 Terrain_Weights_167709_g174452 = staticSwitch8795_g174452;
				half4 Weights52_g174481 = Terrain_Weights_167709_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler238_g174520 = SS19_g174558;
				float4 temp_output_37_0_g174520 = Input_Terrain_Coords_138960_g174452;
				half4 Coords238_g174520 = temp_output_37_0_g174520;
				float3 temp_output_279_0_g174520 = Input_Position9197_g174452;
				half3 WorldPosition238_g174520 = temp_output_279_0_g174520;
				half4 localSamplePlanar2D238_g174520 = SamplePlanar2D( Texture238_g174520 , Sampler238_g174520 , Coords238_g174520 , WorldPosition238_g174520 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler246_g174520 = SS19_g174558;
				half4 Coords246_g174520 = temp_output_37_0_g174520;
				half3 WorldPosition246_g174520 = temp_output_279_0_g174520;
				float3 temp_output_280_0_g174520 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174520 = temp_output_280_0_g174520;
				half4 localSamplePlanar3D246_g174520 = SamplePlanar3D( Texture246_g174520 , Sampler246_g174520 , Coords246_g174520 , WorldPosition246_g174520 , WorldNormal246_g174520 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler234_g174520 = SS19_g174558;
				float4 Coords234_g174520 = temp_output_37_0_g174520;
				float3 WorldPosition234_g174520 = temp_output_279_0_g174520;
				float4 localSampleStochastic2D234_g174520 = SampleStochastic2D( Texture234_g174520 , Sampler234_g174520 , Coords234_g174520 , WorldPosition234_g174520 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler263_g174520 = SS19_g174558;
				half4 Coords263_g174520 = temp_output_37_0_g174520;
				half3 WorldPosition263_g174520 = temp_output_279_0_g174520;
				half3 WorldNormal263_g174520 = temp_output_280_0_g174520;
				half4 localSampleStochastic3D263_g174520 = SampleStochastic3D( Texture263_g174520 , Sampler263_g174520 , Coords263_g174520 , WorldPosition263_g174520 , WorldNormal263_g174520 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8972_g174452 = localSamplePlanar2D238_g174520;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8972_g174452 = localSamplePlanar3D246_g174520;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8972_g174452 = localSampleStochastic2D234_g174520;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8972_g174452 = localSampleStochastic3D263_g174520;
				#else
				float4 staticSwitch8972_g174452 = localSamplePlanar2D238_g174520;
				#endif
				half4 Layer133_g174481 = staticSwitch8972_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler238_g174526 = SS19_g174558;
				float4 temp_output_37_0_g174526 = Input_Terrain_Coords_148961_g174452;
				half4 Coords238_g174526 = temp_output_37_0_g174526;
				float3 temp_output_279_0_g174526 = Input_Position9197_g174452;
				half3 WorldPosition238_g174526 = temp_output_279_0_g174526;
				half4 localSamplePlanar2D238_g174526 = SamplePlanar2D( Texture238_g174526 , Sampler238_g174526 , Coords238_g174526 , WorldPosition238_g174526 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler246_g174526 = SS19_g174558;
				half4 Coords246_g174526 = temp_output_37_0_g174526;
				half3 WorldPosition246_g174526 = temp_output_279_0_g174526;
				float3 temp_output_280_0_g174526 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174526 = temp_output_280_0_g174526;
				half4 localSamplePlanar3D246_g174526 = SamplePlanar3D( Texture246_g174526 , Sampler246_g174526 , Coords246_g174526 , WorldPosition246_g174526 , WorldNormal246_g174526 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler234_g174526 = SS19_g174558;
				float4 Coords234_g174526 = temp_output_37_0_g174526;
				float3 WorldPosition234_g174526 = temp_output_279_0_g174526;
				float4 localSampleStochastic2D234_g174526 = SampleStochastic2D( Texture234_g174526 , Sampler234_g174526 , Coords234_g174526 , WorldPosition234_g174526 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler263_g174526 = SS19_g174558;
				half4 Coords263_g174526 = temp_output_37_0_g174526;
				half3 WorldPosition263_g174526 = temp_output_279_0_g174526;
				half3 WorldNormal263_g174526 = temp_output_280_0_g174526;
				half4 localSampleStochastic3D263_g174526 = SampleStochastic3D( Texture263_g174526 , Sampler263_g174526 , Coords263_g174526 , WorldPosition263_g174526 , WorldNormal263_g174526 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8973_g174452 = localSamplePlanar2D238_g174526;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8973_g174452 = localSamplePlanar3D246_g174526;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8973_g174452 = localSampleStochastic2D234_g174526;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8973_g174452 = localSampleStochastic3D263_g174526;
				#else
				float4 staticSwitch8973_g174452 = localSamplePlanar2D238_g174526;
				#endif
				half4 Layer237_g174481 = staticSwitch8973_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler238_g174527 = SS19_g174558;
				float4 temp_output_37_0_g174527 = Input_Terrain_Coords_158962_g174452;
				half4 Coords238_g174527 = temp_output_37_0_g174527;
				float3 temp_output_279_0_g174527 = Input_Position9197_g174452;
				half3 WorldPosition238_g174527 = temp_output_279_0_g174527;
				half4 localSamplePlanar2D238_g174527 = SamplePlanar2D( Texture238_g174527 , Sampler238_g174527 , Coords238_g174527 , WorldPosition238_g174527 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler246_g174527 = SS19_g174558;
				half4 Coords246_g174527 = temp_output_37_0_g174527;
				half3 WorldPosition246_g174527 = temp_output_279_0_g174527;
				float3 temp_output_280_0_g174527 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174527 = temp_output_280_0_g174527;
				half4 localSamplePlanar3D246_g174527 = SamplePlanar3D( Texture246_g174527 , Sampler246_g174527 , Coords246_g174527 , WorldPosition246_g174527 , WorldNormal246_g174527 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler234_g174527 = SS19_g174558;
				float4 Coords234_g174527 = temp_output_37_0_g174527;
				float3 WorldPosition234_g174527 = temp_output_279_0_g174527;
				float4 localSampleStochastic2D234_g174527 = SampleStochastic2D( Texture234_g174527 , Sampler234_g174527 , Coords234_g174527 , WorldPosition234_g174527 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler263_g174527 = SS19_g174558;
				half4 Coords263_g174527 = temp_output_37_0_g174527;
				half3 WorldPosition263_g174527 = temp_output_279_0_g174527;
				half3 WorldNormal263_g174527 = temp_output_280_0_g174527;
				half4 localSampleStochastic3D263_g174527 = SampleStochastic3D( Texture263_g174527 , Sampler263_g174527 , Coords263_g174527 , WorldPosition263_g174527 , WorldNormal263_g174527 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8974_g174452 = localSamplePlanar2D238_g174527;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8974_g174452 = localSamplePlanar3D246_g174527;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8974_g174452 = localSampleStochastic2D234_g174527;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8974_g174452 = localSampleStochastic3D263_g174527;
				#else
				float4 staticSwitch8974_g174452 = localSamplePlanar2D238_g174527;
				#endif
				half4 Layer338_g174481 = staticSwitch8974_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler238_g174528 = SS19_g174558;
				float4 temp_output_37_0_g174528 = Input_Terrain_Coords_168959_g174452;
				half4 Coords238_g174528 = temp_output_37_0_g174528;
				float3 temp_output_279_0_g174528 = Input_Position9197_g174452;
				half3 WorldPosition238_g174528 = temp_output_279_0_g174528;
				half4 localSamplePlanar2D238_g174528 = SamplePlanar2D( Texture238_g174528 , Sampler238_g174528 , Coords238_g174528 , WorldPosition238_g174528 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler246_g174528 = SS19_g174558;
				half4 Coords246_g174528 = temp_output_37_0_g174528;
				half3 WorldPosition246_g174528 = temp_output_279_0_g174528;
				float3 temp_output_280_0_g174528 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174528 = temp_output_280_0_g174528;
				half4 localSamplePlanar3D246_g174528 = SamplePlanar3D( Texture246_g174528 , Sampler246_g174528 , Coords246_g174528 , WorldPosition246_g174528 , WorldNormal246_g174528 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler234_g174528 = SS19_g174558;
				float4 Coords234_g174528 = temp_output_37_0_g174528;
				float3 WorldPosition234_g174528 = temp_output_279_0_g174528;
				float4 localSampleStochastic2D234_g174528 = SampleStochastic2D( Texture234_g174528 , Sampler234_g174528 , Coords234_g174528 , WorldPosition234_g174528 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler263_g174528 = SS19_g174558;
				half4 Coords263_g174528 = temp_output_37_0_g174528;
				half3 WorldPosition263_g174528 = temp_output_279_0_g174528;
				half3 WorldNormal263_g174528 = temp_output_280_0_g174528;
				half4 localSampleStochastic3D263_g174528 = SampleStochastic3D( Texture263_g174528 , Sampler263_g174528 , Coords263_g174528 , WorldPosition263_g174528 , WorldNormal263_g174528 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8975_g174452 = localSamplePlanar2D238_g174528;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8975_g174452 = localSamplePlanar3D246_g174528;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8975_g174452 = localSampleStochastic2D234_g174528;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8975_g174452 = localSampleStochastic3D263_g174528;
				#else
				float4 staticSwitch8975_g174452 = localSamplePlanar2D238_g174528;
				#endif
				half4 Layer439_g174481 = staticSwitch8975_g174452;
				float4 weightedBlendVar31_g174481 = Weights52_g174481;
				float4 weightedBlend31_g174481 = ( weightedBlendVar31_g174481.x*Layer133_g174481 + weightedBlendVar31_g174481.y*Layer237_g174481 + weightedBlendVar31_g174481.z*Layer338_g174481 + weightedBlendVar31_g174481.w*Layer439_g174481 );
				half4 Terrain_AAAA_168986_g174452 = weightedBlend31_g174481;
				half4 Layer_1644_g174460 = Terrain_AAAA_168986_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174460 = Layer_045_g174460;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174460 = ( Layer_045_g174460 + Layer_0810_g174460 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174460 = ( Layer_045_g174460 + Layer_0810_g174460 + Layer_1243_g174460 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174460 = ( Layer_045_g174460 + Layer_0810_g174460 + Layer_1243_g174460 + Layer_1644_g174460 );
				#else
				float4 staticSwitch40_g174460 = Layer_045_g174460;
				#endif
				half4 Blend_Albedo7468_g174452 = staticSwitch40_g174460;
				half4 Weights52_g174546 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174546 = _TerrainColor1;
				half4 Layer237_g174546 = _TerrainColor2;
				half4 Layer338_g174546 = _TerrainColor3;
				half4 Layer439_g174546 = _TerrainColor4;
				float4 weightedBlendVar31_g174546 = Weights52_g174546;
				float4 weightedBlend31_g174546 = ( weightedBlendVar31_g174546.x*Layer133_g174546 + weightedBlendVar31_g174546.y*Layer237_g174546 + weightedBlendVar31_g174546.z*Layer338_g174546 + weightedBlendVar31_g174546.w*Layer439_g174546 );
				half4 Terrain_Color_049349_g174452 = weightedBlend31_g174546;
				half4 Layer_045_g174551 = Terrain_Color_049349_g174452;
				half4 Weights52_g174547 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174547 = _TerrainColor5;
				half4 Layer237_g174547 = _TerrainColor6;
				half4 Layer338_g174547 = _TerrainColor7;
				half4 Layer439_g174547 = _TerrainColor8;
				float4 weightedBlendVar31_g174547 = Weights52_g174547;
				float4 weightedBlend31_g174547 = ( weightedBlendVar31_g174547.x*Layer133_g174547 + weightedBlendVar31_g174547.y*Layer237_g174547 + weightedBlendVar31_g174547.z*Layer338_g174547 + weightedBlendVar31_g174547.w*Layer439_g174547 );
				half4 Terrain_Color_089361_g174452 = weightedBlend31_g174547;
				half4 Layer_0810_g174551 = Terrain_Color_089361_g174452;
				half4 Weights52_g174548 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174548 = _TerrainColor9;
				half4 Layer237_g174548 = _TerrainColor10;
				half4 Layer338_g174548 = _TerrainColor11;
				half4 Layer439_g174548 = _TerrainColor12;
				float4 weightedBlendVar31_g174548 = Weights52_g174548;
				float4 weightedBlend31_g174548 = ( weightedBlendVar31_g174548.x*Layer133_g174548 + weightedBlendVar31_g174548.y*Layer237_g174548 + weightedBlendVar31_g174548.z*Layer338_g174548 + weightedBlendVar31_g174548.w*Layer439_g174548 );
				half4 Terrain_Color_129373_g174452 = weightedBlend31_g174548;
				half4 Layer_1243_g174551 = Terrain_Color_129373_g174452;
				half4 Weights52_g174549 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174549 = _TerrainColor13;
				half4 Layer237_g174549 = _TerrainColor14;
				half4 Layer338_g174549 = _TerrainColor15;
				half4 Layer439_g174549 = _TerrainColor16;
				float4 weightedBlendVar31_g174549 = Weights52_g174549;
				float4 weightedBlend31_g174549 = ( weightedBlendVar31_g174549.x*Layer133_g174549 + weightedBlendVar31_g174549.y*Layer237_g174549 + weightedBlendVar31_g174549.z*Layer338_g174549 + weightedBlendVar31_g174549.w*Layer439_g174549 );
				half4 Terrain_Color_169381_g174452 = weightedBlend31_g174549;
				half4 Layer_1644_g174551 = Terrain_Color_169381_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174551 = Layer_045_g174551;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174551 = ( Layer_045_g174551 + Layer_0810_g174551 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174551 = ( Layer_045_g174551 + Layer_0810_g174551 + Layer_1243_g174551 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174551 = ( Layer_045_g174551 + Layer_0810_g174551 + Layer_1243_g174551 + Layer_1644_g174551 );
				#else
				float4 staticSwitch40_g174551 = Layer_045_g174551;
				#endif
				half4 Blend_TerrainColor9387_g174452 = staticSwitch40_g174551;
				half3 Final_Albedo9144_g174452 = ( (Blend_Albedo7468_g174452).xyz * (Blend_TerrainColor9387_g174452).rgb * (_TerrainColor).rgb );
				half3 Local_Albedo768_g174425 = Final_Albedo9144_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174446) = _TerrainMaskTex;
				SamplerState Sampler276_g174446 = sampler_Linear_Repeat;
				float4 temp_output_6_0_g174444 = _terrain_mask_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174444 = ( temp_output_6_0_g174444 + ( ( _TerrainMaskSampleMode + _TerrainMaskCoordMode + _TerrainMaskCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174444 = temp_output_6_0_g174444;
				#endif
				half4 Local_MaskCoords813_g174425 = staticSwitch14_g174444;
				float4 temp_output_37_0_g174446 = Local_MaskCoords813_g174425;
				half4 Coords276_g174446 = temp_output_37_0_g174446;
				half2 TexCoord276_g174446 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174446 = SampleMain( Texture276_g174446 , Sampler276_g174446 , Coords276_g174446 , TexCoord276_g174446 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174446) = _TerrainMaskTex;
				SamplerState Sampler275_g174446 = sampler_Linear_Repeat;
				half4 Coords275_g174446 = temp_output_37_0_g174446;
				half2 TexCoord275_g174446 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174446 = SampleExtra( Texture275_g174446 , Sampler275_g174446 , Coords275_g174446 , TexCoord275_g174446 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174446) = _TerrainMaskTex;
				SamplerState Sampler238_g174446 = sampler_Linear_Repeat;
				half4 Coords238_g174446 = temp_output_37_0_g174446;
				float3 temp_output_279_0_g174446 = Model_PositionWO636_g174425;
				half3 WorldPosition238_g174446 = temp_output_279_0_g174446;
				half4 localSamplePlanar2D238_g174446 = SamplePlanar2D( Texture238_g174446 , Sampler238_g174446 , Coords238_g174446 , WorldPosition238_g174446 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174446) = _TerrainMaskTex;
				SamplerState Sampler246_g174446 = sampler_Linear_Repeat;
				half4 Coords246_g174446 = temp_output_37_0_g174446;
				half3 WorldPosition246_g174446 = temp_output_279_0_g174446;
				float3 temp_output_280_0_g174446 = Model_NormalRawWS869_g174425;
				half3 WorldNormal246_g174446 = temp_output_280_0_g174446;
				half4 localSamplePlanar3D246_g174446 = SamplePlanar3D( Texture246_g174446 , Sampler246_g174446 , Coords246_g174446 , WorldPosition246_g174446 , WorldNormal246_g174446 );
				#if defined( TVE_TERRAIN_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch817_g174425 = localSampleMain276_g174446;
				#elif defined( TVE_TERRAIN_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch817_g174425 = localSampleExtra275_g174446;
				#elif defined( TVE_TERRAIN_MASK_SAMPLE_PLANAR_2D )
				float4 staticSwitch817_g174425 = localSamplePlanar2D238_g174446;
				#elif defined( TVE_TERRAIN_MASK_SAMPLE_PLANAR_3D )
				float4 staticSwitch817_g174425 = localSamplePlanar3D246_g174446;
				#else
				float4 staticSwitch817_g174425 = localSampleMain276_g174446;
				#endif
				half4 Local_MaskTex861_g174425 = staticSwitch817_g174425;
				float clampResult17_g174435 = clamp( (Local_MaskTex861_g174425).x , 0.0001 , 0.9999 );
				float temp_output_7_0_g174436 = _TerrainMaskRemap.x;
				float temp_output_10_0_g174436 = ( _TerrainMaskRemap.y - temp_output_7_0_g174436 );
				float lerpResult1108_g174425 = lerp( 1.0 , saturate( ( ( clampResult17_g174435 - temp_output_7_0_g174436 ) / ( temp_output_10_0_g174436 + 0.0001 ) ) ) , _TerrainMaskValue);
				half Detail_TexMask429_g174425 = lerpResult1108_g174425;
				half3 Visual_NormalWS953_g174425 = Out_NormalWS4_g174428;
				float clampResult17_g174437 = clamp( saturate( (Visual_NormalWS953_g174425).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174438 = _TerrainProjRemap.x;
				float temp_output_10_0_g174438 = ( _TerrainProjRemap.y - temp_output_7_0_g174438 );
				float lerpResult1106_g174425 = lerp( 1.0 , saturate( ( ( clampResult17_g174437 - temp_output_7_0_g174438 ) / ( temp_output_10_0_g174438 + 0.0001 ) ) ) , _TerrainProjValue);
				half Blend_ProjMask912_g174425 = lerpResult1106_g174425;
				TVEGlobalData Data15_g174430 = Data204_g173897;
				float Out_Dummy15_g174430 = 0;
				float4 Out_CoatParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174430 = float4( 0,0,0,0 );
				Out_Dummy15_g174430 = Data15_g174430.Dummy;
				Out_CoatParams15_g174430 = Data15_g174430.CoatParams;
				Out_PaintParams15_g174430 = Data15_g174430.PaintParams;
				Out_GlowParams15_g174430 = Data15_g174430.GlowParams;
				Out_AtmoParams15_g174430= Data15_g174430.AtmoParams;
				Out_FadeParams15_g174430= Data15_g174430.FadeParams;
				Out_FormParams15_g174430 = Data15_g174430.FormParams;
				Out_LandParams15_g174430 = Data15_g174430.LandParams;
				Out_WindParams15_g174430 = Data15_g174430.WindParams;
				Out_PushParams15_g174430 = Data15_g174430.PushParams;
				half4 Global_CoatParams972_g174425 = Out_CoatParams15_g174430;
				float lerpResult1103_g174425 = lerp( 1.0 , (Global_CoatParams972_g174425).x , TVE_IsEnabled);
				#ifdef TVE_TERRAIN_ELEMENT
				float staticSwitch965_g174425 = lerpResult1103_g174425;
				#else
				float staticSwitch965_g174425 = 1.0;
				#endif
				half Blend_GlobalMask968_g174425 = staticSwitch965_g174425;
				half4 Global_FormParams1018_g174425 = Out_FormParams15_g174430;
				float temp_output_1128_0_g174425 = saturate( ( ( (Global_FormParams1018_g174425).z - (Model_PositionWO636_g174425).y ) + _TerrainLandOffsetValue ) );
				float lerpResult1130_g174425 = lerp( 1.0 , temp_output_1128_0_g174425 , ( _TerrainLandValue * _TerrainLandMode ));
				half Blend_LandMask_Mul1132_g174425 = lerpResult1130_g174425;
				half Blend_LandMask_Add1131_g174425 = ( temp_output_1128_0_g174425 * _TerrainLandValue );
				float clampResult17_g174450 = clamp( ( ( _TerrainIntensityValue * Detail_TexMask429_g174425 * Blend_ProjMask912_g174425 * Blend_GlobalMask968_g174425 * Blend_LandMask_Mul1132_g174425 ) + Blend_LandMask_Add1131_g174425 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174449 = _TerrainBlendRemap.x;
				float temp_output_10_0_g174449 = ( _TerrainBlendRemap.y - temp_output_7_0_g174449 );
				half Terrain_Mask412_g174425 = saturate( ( ( clampResult17_g174450 - temp_output_7_0_g174449 ) / ( temp_output_10_0_g174449 + 0.0001 ) ) );
				float3 lerpResult989_g174425 = lerp( Visual_Albedo527_g174425 , Local_Albedo768_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float3 staticSwitch415_g174425 = lerpResult989_g174425;
				#else
				float3 staticSwitch415_g174425 = Visual_Albedo527_g174425;
				#endif
				half3 Final_Albedo601_g174425 = staticSwitch415_g174425;
				float3 In_Albedo3_g174429 = Final_Albedo601_g174425;
				float3 In_AlbedoRaw3_g174429 = Final_Albedo601_g174425;
				half2 Visual_NormalTS529_g174425 = Out_NormalTS4_g174428;
				half4 Weights52_g174453 = Terrain_Weights_046781_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174544) = _TerrainNormalTex1;
				float localFilterTexture29_g174559 = ( 0.0 );
				SamplerState SamplerDefault29_g174559 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174559 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174559 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174559 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174559 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174559 = SamplerDefault29_g174559;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174559 = SamplerDefault29_g174559;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174559 = SamplerPoint29_g174559;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174559 = SamplerLow29_g174559;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174559 = SamplerMedium29_g174559;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174559 = SamplerHigh29_g174559;
				#endif
				SamplerState Sampler238_g174544 = SS29_g174559;
				float4 temp_output_37_0_g174544 = Input_Terrain_Coords_016785_g174452;
				half4 Coords238_g174544 = temp_output_37_0_g174544;
				float3 temp_output_279_0_g174544 = Input_Position9197_g174452;
				half3 WorldPosition238_g174544 = temp_output_279_0_g174544;
				half4 localSamplePlanar2D238_g174544 = SamplePlanar2D( Texture238_g174544 , Sampler238_g174544 , Coords238_g174544 , WorldPosition238_g174544 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174544) = _TerrainNormalTex1;
				SamplerState Sampler246_g174544 = SS29_g174559;
				half4 Coords246_g174544 = temp_output_37_0_g174544;
				half3 WorldPosition246_g174544 = temp_output_279_0_g174544;
				float3 temp_output_280_0_g174544 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174544 = temp_output_280_0_g174544;
				half4 localSamplePlanar3D246_g174544 = SamplePlanar3D( Texture246_g174544 , Sampler246_g174544 , Coords246_g174544 , WorldPosition246_g174544 , WorldNormal246_g174544 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174544) = _TerrainNormalTex1;
				SamplerState Sampler234_g174544 = SS29_g174559;
				float4 Coords234_g174544 = temp_output_37_0_g174544;
				float3 WorldPosition234_g174544 = temp_output_279_0_g174544;
				float4 localSampleStochastic2D234_g174544 = SampleStochastic2D( Texture234_g174544 , Sampler234_g174544 , Coords234_g174544 , WorldPosition234_g174544 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174544) = _TerrainNormalTex1;
				SamplerState Sampler263_g174544 = SS29_g174559;
				half4 Coords263_g174544 = temp_output_37_0_g174544;
				half3 WorldPosition263_g174544 = temp_output_279_0_g174544;
				half3 WorldNormal263_g174544 = temp_output_280_0_g174544;
				half4 localSampleStochastic3D263_g174544 = SampleStochastic3D( Texture263_g174544 , Sampler263_g174544 , Coords263_g174544 , WorldPosition263_g174544 , WorldNormal263_g174544 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8635_g174452 = localSamplePlanar2D238_g174544;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8635_g174452 = localSamplePlanar3D246_g174544;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8635_g174452 = localSampleStochastic2D234_g174544;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8635_g174452 = localSampleStochastic3D263_g174544;
				#else
				float4 staticSwitch8635_g174452 = localSamplePlanar2D238_g174544;
				#endif
				half4 Layer133_g174453 = staticSwitch8635_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174500) = _TerrainNormalTex2;
				SamplerState Sampler238_g174500 = SS29_g174559;
				float4 temp_output_37_0_g174500 = Input_Terrain_Coords_026787_g174452;
				half4 Coords238_g174500 = temp_output_37_0_g174500;
				float3 temp_output_279_0_g174500 = Input_Position9197_g174452;
				half3 WorldPosition238_g174500 = temp_output_279_0_g174500;
				half4 localSamplePlanar2D238_g174500 = SamplePlanar2D( Texture238_g174500 , Sampler238_g174500 , Coords238_g174500 , WorldPosition238_g174500 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174500) = _TerrainNormalTex2;
				SamplerState Sampler246_g174500 = SS29_g174559;
				half4 Coords246_g174500 = temp_output_37_0_g174500;
				half3 WorldPosition246_g174500 = temp_output_279_0_g174500;
				float3 temp_output_280_0_g174500 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174500 = temp_output_280_0_g174500;
				half4 localSamplePlanar3D246_g174500 = SamplePlanar3D( Texture246_g174500 , Sampler246_g174500 , Coords246_g174500 , WorldPosition246_g174500 , WorldNormal246_g174500 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174500) = _TerrainNormalTex2;
				SamplerState Sampler234_g174500 = SS29_g174559;
				float4 Coords234_g174500 = temp_output_37_0_g174500;
				float3 WorldPosition234_g174500 = temp_output_279_0_g174500;
				float4 localSampleStochastic2D234_g174500 = SampleStochastic2D( Texture234_g174500 , Sampler234_g174500 , Coords234_g174500 , WorldPosition234_g174500 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174500) = _TerrainNormalTex2;
				SamplerState Sampler263_g174500 = SS29_g174559;
				half4 Coords263_g174500 = temp_output_37_0_g174500;
				half3 WorldPosition263_g174500 = temp_output_279_0_g174500;
				half3 WorldNormal263_g174500 = temp_output_280_0_g174500;
				half4 localSampleStochastic3D263_g174500 = SampleStochastic3D( Texture263_g174500 , Sampler263_g174500 , Coords263_g174500 , WorldPosition263_g174500 , WorldNormal263_g174500 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8636_g174452 = localSamplePlanar2D238_g174500;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8636_g174452 = localSamplePlanar3D246_g174500;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8636_g174452 = localSampleStochastic2D234_g174500;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8636_g174452 = localSampleStochastic3D263_g174500;
				#else
				float4 staticSwitch8636_g174452 = localSamplePlanar2D238_g174500;
				#endif
				half4 Layer237_g174453 = staticSwitch8636_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174503) = _TerrainNormalTex3;
				SamplerState Sampler238_g174503 = SS29_g174559;
				float4 temp_output_37_0_g174503 = Input_Terrain_Coords_036789_g174452;
				half4 Coords238_g174503 = temp_output_37_0_g174503;
				float3 temp_output_279_0_g174503 = Input_Position9197_g174452;
				half3 WorldPosition238_g174503 = temp_output_279_0_g174503;
				half4 localSamplePlanar2D238_g174503 = SamplePlanar2D( Texture238_g174503 , Sampler238_g174503 , Coords238_g174503 , WorldPosition238_g174503 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174503) = _TerrainNormalTex3;
				SamplerState Sampler246_g174503 = SS29_g174559;
				half4 Coords246_g174503 = temp_output_37_0_g174503;
				half3 WorldPosition246_g174503 = temp_output_279_0_g174503;
				float3 temp_output_280_0_g174503 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174503 = temp_output_280_0_g174503;
				half4 localSamplePlanar3D246_g174503 = SamplePlanar3D( Texture246_g174503 , Sampler246_g174503 , Coords246_g174503 , WorldPosition246_g174503 , WorldNormal246_g174503 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174503) = _TerrainNormalTex3;
				SamplerState Sampler234_g174503 = SS29_g174559;
				float4 Coords234_g174503 = temp_output_37_0_g174503;
				float3 WorldPosition234_g174503 = temp_output_279_0_g174503;
				float4 localSampleStochastic2D234_g174503 = SampleStochastic2D( Texture234_g174503 , Sampler234_g174503 , Coords234_g174503 , WorldPosition234_g174503 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174503) = _TerrainNormalTex3;
				SamplerState Sampler263_g174503 = SS29_g174559;
				half4 Coords263_g174503 = temp_output_37_0_g174503;
				half3 WorldPosition263_g174503 = temp_output_279_0_g174503;
				half3 WorldNormal263_g174503 = temp_output_280_0_g174503;
				half4 localSampleStochastic3D263_g174503 = SampleStochastic3D( Texture263_g174503 , Sampler263_g174503 , Coords263_g174503 , WorldPosition263_g174503 , WorldNormal263_g174503 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8637_g174452 = localSamplePlanar2D238_g174503;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8637_g174452 = localSamplePlanar3D246_g174503;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8637_g174452 = localSampleStochastic2D234_g174503;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8637_g174452 = localSampleStochastic3D263_g174503;
				#else
				float4 staticSwitch8637_g174452 = localSamplePlanar2D238_g174503;
				#endif
				half4 Layer338_g174453 = staticSwitch8637_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174505) = _TerrainNormalTex4;
				SamplerState Sampler238_g174505 = SS29_g174559;
				float4 temp_output_37_0_g174505 = Input_Terrain_Coords_046791_g174452;
				half4 Coords238_g174505 = temp_output_37_0_g174505;
				float3 temp_output_279_0_g174505 = Input_Position9197_g174452;
				half3 WorldPosition238_g174505 = temp_output_279_0_g174505;
				half4 localSamplePlanar2D238_g174505 = SamplePlanar2D( Texture238_g174505 , Sampler238_g174505 , Coords238_g174505 , WorldPosition238_g174505 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174505) = _TerrainNormalTex4;
				SamplerState Sampler246_g174505 = SS29_g174559;
				half4 Coords246_g174505 = temp_output_37_0_g174505;
				half3 WorldPosition246_g174505 = temp_output_279_0_g174505;
				float3 temp_output_280_0_g174505 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174505 = temp_output_280_0_g174505;
				half4 localSamplePlanar3D246_g174505 = SamplePlanar3D( Texture246_g174505 , Sampler246_g174505 , Coords246_g174505 , WorldPosition246_g174505 , WorldNormal246_g174505 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174505) = _TerrainNormalTex4;
				SamplerState Sampler234_g174505 = SS29_g174559;
				float4 Coords234_g174505 = temp_output_37_0_g174505;
				float3 WorldPosition234_g174505 = temp_output_279_0_g174505;
				float4 localSampleStochastic2D234_g174505 = SampleStochastic2D( Texture234_g174505 , Sampler234_g174505 , Coords234_g174505 , WorldPosition234_g174505 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174505) = _TerrainNormalTex4;
				SamplerState Sampler263_g174505 = SS29_g174559;
				half4 Coords263_g174505 = temp_output_37_0_g174505;
				half3 WorldPosition263_g174505 = temp_output_279_0_g174505;
				half3 WorldNormal263_g174505 = temp_output_280_0_g174505;
				half4 localSampleStochastic3D263_g174505 = SampleStochastic3D( Texture263_g174505 , Sampler263_g174505 , Coords263_g174505 , WorldPosition263_g174505 , WorldNormal263_g174505 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8638_g174452 = localSamplePlanar2D238_g174505;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8638_g174452 = localSamplePlanar3D246_g174505;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8638_g174452 = localSampleStochastic2D234_g174505;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8638_g174452 = localSampleStochastic3D263_g174505;
				#else
				float4 staticSwitch8638_g174452 = localSamplePlanar2D238_g174505;
				#endif
				half4 Layer439_g174453 = staticSwitch8638_g174452;
				float4 weightedBlendVar31_g174453 = Weights52_g174453;
				float4 weightedBlend31_g174453 = ( weightedBlendVar31_g174453.x*Layer133_g174453 + weightedBlendVar31_g174453.y*Layer237_g174453 + weightedBlendVar31_g174453.z*Layer338_g174453 + weightedBlendVar31_g174453.w*Layer439_g174453 );
				half4 Terrain_B_047202_g174452 = weightedBlend31_g174453;
				half4 Layer_045_g174459 = Terrain_B_047202_g174452;
				half4 Weights52_g174468 = Terrain_Weights_087340_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174509) = _TerrainNormalTex5;
				SamplerState Sampler238_g174509 = SS29_g174559;
				float4 temp_output_37_0_g174509 = Input_Terrain_Coords_058750_g174452;
				half4 Coords238_g174509 = temp_output_37_0_g174509;
				float3 temp_output_279_0_g174509 = Input_Position9197_g174452;
				half3 WorldPosition238_g174509 = temp_output_279_0_g174509;
				half4 localSamplePlanar2D238_g174509 = SamplePlanar2D( Texture238_g174509 , Sampler238_g174509 , Coords238_g174509 , WorldPosition238_g174509 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174509) = _TerrainNormalTex5;
				SamplerState Sampler246_g174509 = SS29_g174559;
				half4 Coords246_g174509 = temp_output_37_0_g174509;
				half3 WorldPosition246_g174509 = temp_output_279_0_g174509;
				float3 temp_output_280_0_g174509 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174509 = temp_output_280_0_g174509;
				half4 localSamplePlanar3D246_g174509 = SamplePlanar3D( Texture246_g174509 , Sampler246_g174509 , Coords246_g174509 , WorldPosition246_g174509 , WorldNormal246_g174509 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174509) = _TerrainNormalTex5;
				SamplerState Sampler234_g174509 = SS29_g174559;
				float4 Coords234_g174509 = temp_output_37_0_g174509;
				float3 WorldPosition234_g174509 = temp_output_279_0_g174509;
				float4 localSampleStochastic2D234_g174509 = SampleStochastic2D( Texture234_g174509 , Sampler234_g174509 , Coords234_g174509 , WorldPosition234_g174509 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174509) = _TerrainNormalTex5;
				SamplerState Sampler263_g174509 = SS29_g174559;
				half4 Coords263_g174509 = temp_output_37_0_g174509;
				half3 WorldPosition263_g174509 = temp_output_279_0_g174509;
				half3 WorldNormal263_g174509 = temp_output_280_0_g174509;
				half4 localSampleStochastic3D263_g174509 = SampleStochastic3D( Texture263_g174509 , Sampler263_g174509 , Coords263_g174509 , WorldPosition263_g174509 , WorldNormal263_g174509 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8686_g174452 = localSamplePlanar2D238_g174509;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8686_g174452 = localSamplePlanar3D246_g174509;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8686_g174452 = localSampleStochastic2D234_g174509;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8686_g174452 = localSampleStochastic3D263_g174509;
				#else
				float4 staticSwitch8686_g174452 = localSamplePlanar2D238_g174509;
				#endif
				half4 Layer133_g174468 = staticSwitch8686_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174538) = _TerrainNormalTex6;
				SamplerState Sampler238_g174538 = SS29_g174559;
				float4 temp_output_37_0_g174538 = Input_Terrain_Coords_068751_g174452;
				half4 Coords238_g174538 = temp_output_37_0_g174538;
				float3 temp_output_279_0_g174538 = Input_Position9197_g174452;
				half3 WorldPosition238_g174538 = temp_output_279_0_g174538;
				half4 localSamplePlanar2D238_g174538 = SamplePlanar2D( Texture238_g174538 , Sampler238_g174538 , Coords238_g174538 , WorldPosition238_g174538 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174538) = _TerrainNormalTex6;
				SamplerState Sampler246_g174538 = SS29_g174559;
				half4 Coords246_g174538 = temp_output_37_0_g174538;
				half3 WorldPosition246_g174538 = temp_output_279_0_g174538;
				float3 temp_output_280_0_g174538 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174538 = temp_output_280_0_g174538;
				half4 localSamplePlanar3D246_g174538 = SamplePlanar3D( Texture246_g174538 , Sampler246_g174538 , Coords246_g174538 , WorldPosition246_g174538 , WorldNormal246_g174538 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174538) = _TerrainNormalTex6;
				SamplerState Sampler234_g174538 = SS29_g174559;
				float4 Coords234_g174538 = temp_output_37_0_g174538;
				float3 WorldPosition234_g174538 = temp_output_279_0_g174538;
				float4 localSampleStochastic2D234_g174538 = SampleStochastic2D( Texture234_g174538 , Sampler234_g174538 , Coords234_g174538 , WorldPosition234_g174538 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174538) = _TerrainNormalTex6;
				SamplerState Sampler263_g174538 = SS29_g174559;
				half4 Coords263_g174538 = temp_output_37_0_g174538;
				half3 WorldPosition263_g174538 = temp_output_279_0_g174538;
				half3 WorldNormal263_g174538 = temp_output_280_0_g174538;
				half4 localSampleStochastic3D263_g174538 = SampleStochastic3D( Texture263_g174538 , Sampler263_g174538 , Coords263_g174538 , WorldPosition263_g174538 , WorldNormal263_g174538 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8687_g174452 = localSamplePlanar2D238_g174538;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8687_g174452 = localSamplePlanar3D246_g174538;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8687_g174452 = localSampleStochastic2D234_g174538;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8687_g174452 = localSampleStochastic3D263_g174538;
				#else
				float4 staticSwitch8687_g174452 = localSamplePlanar2D238_g174538;
				#endif
				half4 Layer237_g174468 = staticSwitch8687_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174539) = _TerrainNormalTex7;
				SamplerState Sampler238_g174539 = SS29_g174559;
				float4 temp_output_37_0_g174539 = Input_Terrain_Coords_078752_g174452;
				half4 Coords238_g174539 = temp_output_37_0_g174539;
				float3 temp_output_279_0_g174539 = Input_Position9197_g174452;
				half3 WorldPosition238_g174539 = temp_output_279_0_g174539;
				half4 localSamplePlanar2D238_g174539 = SamplePlanar2D( Texture238_g174539 , Sampler238_g174539 , Coords238_g174539 , WorldPosition238_g174539 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174539) = _TerrainNormalTex7;
				SamplerState Sampler246_g174539 = SS29_g174559;
				half4 Coords246_g174539 = temp_output_37_0_g174539;
				half3 WorldPosition246_g174539 = temp_output_279_0_g174539;
				float3 temp_output_280_0_g174539 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174539 = temp_output_280_0_g174539;
				half4 localSamplePlanar3D246_g174539 = SamplePlanar3D( Texture246_g174539 , Sampler246_g174539 , Coords246_g174539 , WorldPosition246_g174539 , WorldNormal246_g174539 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174539) = _TerrainNormalTex7;
				SamplerState Sampler234_g174539 = SS29_g174559;
				float4 Coords234_g174539 = temp_output_37_0_g174539;
				float3 WorldPosition234_g174539 = temp_output_279_0_g174539;
				float4 localSampleStochastic2D234_g174539 = SampleStochastic2D( Texture234_g174539 , Sampler234_g174539 , Coords234_g174539 , WorldPosition234_g174539 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174539) = _TerrainNormalTex7;
				SamplerState Sampler263_g174539 = SS29_g174559;
				half4 Coords263_g174539 = temp_output_37_0_g174539;
				half3 WorldPosition263_g174539 = temp_output_279_0_g174539;
				half3 WorldNormal263_g174539 = temp_output_280_0_g174539;
				half4 localSampleStochastic3D263_g174539 = SampleStochastic3D( Texture263_g174539 , Sampler263_g174539 , Coords263_g174539 , WorldPosition263_g174539 , WorldNormal263_g174539 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8688_g174452 = localSamplePlanar2D238_g174539;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8688_g174452 = localSamplePlanar3D246_g174539;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8688_g174452 = localSampleStochastic2D234_g174539;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8688_g174452 = localSampleStochastic3D263_g174539;
				#else
				float4 staticSwitch8688_g174452 = localSamplePlanar2D238_g174539;
				#endif
				half4 Layer338_g174468 = staticSwitch8688_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174540) = _TerrainNormalTex8;
				SamplerState Sampler238_g174540 = SS29_g174559;
				float4 temp_output_37_0_g174540 = Input_Terrain_Coords_088749_g174452;
				half4 Coords238_g174540 = temp_output_37_0_g174540;
				float3 temp_output_279_0_g174540 = Input_Position9197_g174452;
				half3 WorldPosition238_g174540 = temp_output_279_0_g174540;
				half4 localSamplePlanar2D238_g174540 = SamplePlanar2D( Texture238_g174540 , Sampler238_g174540 , Coords238_g174540 , WorldPosition238_g174540 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174540) = _TerrainNormalTex8;
				SamplerState Sampler246_g174540 = SS29_g174559;
				half4 Coords246_g174540 = temp_output_37_0_g174540;
				half3 WorldPosition246_g174540 = temp_output_279_0_g174540;
				float3 temp_output_280_0_g174540 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174540 = temp_output_280_0_g174540;
				half4 localSamplePlanar3D246_g174540 = SamplePlanar3D( Texture246_g174540 , Sampler246_g174540 , Coords246_g174540 , WorldPosition246_g174540 , WorldNormal246_g174540 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174540) = _TerrainNormalTex8;
				SamplerState Sampler234_g174540 = SS29_g174559;
				float4 Coords234_g174540 = temp_output_37_0_g174540;
				float3 WorldPosition234_g174540 = temp_output_279_0_g174540;
				float4 localSampleStochastic2D234_g174540 = SampleStochastic2D( Texture234_g174540 , Sampler234_g174540 , Coords234_g174540 , WorldPosition234_g174540 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174540) = _TerrainNormalTex8;
				SamplerState Sampler263_g174540 = SS29_g174559;
				half4 Coords263_g174540 = temp_output_37_0_g174540;
				half3 WorldPosition263_g174540 = temp_output_279_0_g174540;
				half3 WorldNormal263_g174540 = temp_output_280_0_g174540;
				half4 localSampleStochastic3D263_g174540 = SampleStochastic3D( Texture263_g174540 , Sampler263_g174540 , Coords263_g174540 , WorldPosition263_g174540 , WorldNormal263_g174540 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8689_g174452 = localSamplePlanar2D238_g174540;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8689_g174452 = localSamplePlanar3D246_g174540;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8689_g174452 = localSampleStochastic2D234_g174540;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8689_g174452 = localSampleStochastic3D263_g174540;
				#else
				float4 staticSwitch8689_g174452 = localSamplePlanar2D238_g174540;
				#endif
				half4 Layer439_g174468 = staticSwitch8689_g174452;
				float4 weightedBlendVar31_g174468 = Weights52_g174468;
				float4 weightedBlend31_g174468 = ( weightedBlendVar31_g174468.x*Layer133_g174468 + weightedBlendVar31_g174468.y*Layer237_g174468 + weightedBlendVar31_g174468.z*Layer338_g174468 + weightedBlendVar31_g174468.w*Layer439_g174468 );
				half4 Terrain_B_088684_g174452 = weightedBlend31_g174468;
				half4 Layer_0810_g174459 = Terrain_B_088684_g174452;
				half4 Weights52_g174475 = Terrain_Weights_127710_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174512) = _TerrainNormalTex9;
				SamplerState Sampler238_g174512 = SS29_g174559;
				float4 temp_output_37_0_g174512 = Input_Terrain_Coords_098833_g174452;
				half4 Coords238_g174512 = temp_output_37_0_g174512;
				float3 temp_output_279_0_g174512 = Input_Position9197_g174452;
				half3 WorldPosition238_g174512 = temp_output_279_0_g174512;
				half4 localSamplePlanar2D238_g174512 = SamplePlanar2D( Texture238_g174512 , Sampler238_g174512 , Coords238_g174512 , WorldPosition238_g174512 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174512) = _TerrainNormalTex9;
				SamplerState Sampler246_g174512 = SS29_g174559;
				half4 Coords246_g174512 = temp_output_37_0_g174512;
				half3 WorldPosition246_g174512 = temp_output_279_0_g174512;
				float3 temp_output_280_0_g174512 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174512 = temp_output_280_0_g174512;
				half4 localSamplePlanar3D246_g174512 = SamplePlanar3D( Texture246_g174512 , Sampler246_g174512 , Coords246_g174512 , WorldPosition246_g174512 , WorldNormal246_g174512 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174512) = _TerrainNormalTex9;
				SamplerState Sampler234_g174512 = SS29_g174559;
				float4 Coords234_g174512 = temp_output_37_0_g174512;
				float3 WorldPosition234_g174512 = temp_output_279_0_g174512;
				float4 localSampleStochastic2D234_g174512 = SampleStochastic2D( Texture234_g174512 , Sampler234_g174512 , Coords234_g174512 , WorldPosition234_g174512 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174512) = _TerrainNormalTex9;
				SamplerState Sampler263_g174512 = SS29_g174559;
				half4 Coords263_g174512 = temp_output_37_0_g174512;
				half3 WorldPosition263_g174512 = temp_output_279_0_g174512;
				half3 WorldNormal263_g174512 = temp_output_280_0_g174512;
				half4 localSampleStochastic3D263_g174512 = SampleStochastic3D( Texture263_g174512 , Sampler263_g174512 , Coords263_g174512 , WorldPosition263_g174512 , WorldNormal263_g174512 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8849_g174452 = localSamplePlanar2D238_g174512;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8849_g174452 = localSamplePlanar3D246_g174512;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8849_g174452 = localSampleStochastic2D234_g174512;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8849_g174452 = localSampleStochastic3D263_g174512;
				#else
				float4 staticSwitch8849_g174452 = localSamplePlanar2D238_g174512;
				#endif
				half4 Layer133_g174475 = staticSwitch8849_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174517) = _TerrainNormalTex10;
				SamplerState Sampler238_g174517 = SS29_g174559;
				float4 temp_output_37_0_g174517 = Input_Terrain_Coords_108834_g174452;
				half4 Coords238_g174517 = temp_output_37_0_g174517;
				float3 temp_output_279_0_g174517 = Input_Position9197_g174452;
				half3 WorldPosition238_g174517 = temp_output_279_0_g174517;
				half4 localSamplePlanar2D238_g174517 = SamplePlanar2D( Texture238_g174517 , Sampler238_g174517 , Coords238_g174517 , WorldPosition238_g174517 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174517) = _TerrainNormalTex10;
				SamplerState Sampler246_g174517 = SS29_g174559;
				half4 Coords246_g174517 = temp_output_37_0_g174517;
				half3 WorldPosition246_g174517 = temp_output_279_0_g174517;
				float3 temp_output_280_0_g174517 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174517 = temp_output_280_0_g174517;
				half4 localSamplePlanar3D246_g174517 = SamplePlanar3D( Texture246_g174517 , Sampler246_g174517 , Coords246_g174517 , WorldPosition246_g174517 , WorldNormal246_g174517 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174517) = _TerrainNormalTex10;
				SamplerState Sampler234_g174517 = SS29_g174559;
				float4 Coords234_g174517 = temp_output_37_0_g174517;
				float3 WorldPosition234_g174517 = temp_output_279_0_g174517;
				float4 localSampleStochastic2D234_g174517 = SampleStochastic2D( Texture234_g174517 , Sampler234_g174517 , Coords234_g174517 , WorldPosition234_g174517 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174517) = _TerrainNormalTex10;
				SamplerState Sampler263_g174517 = SS29_g174559;
				half4 Coords263_g174517 = temp_output_37_0_g174517;
				half3 WorldPosition263_g174517 = temp_output_279_0_g174517;
				half3 WorldNormal263_g174517 = temp_output_280_0_g174517;
				half4 localSampleStochastic3D263_g174517 = SampleStochastic3D( Texture263_g174517 , Sampler263_g174517 , Coords263_g174517 , WorldPosition263_g174517 , WorldNormal263_g174517 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8876_g174452 = localSamplePlanar2D238_g174517;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8876_g174452 = localSamplePlanar3D246_g174517;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8876_g174452 = localSampleStochastic2D234_g174517;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8876_g174452 = localSampleStochastic3D263_g174517;
				#else
				float4 staticSwitch8876_g174452 = localSamplePlanar2D238_g174517;
				#endif
				half4 Layer237_g174475 = staticSwitch8876_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174518) = _TerrainNormalTex11;
				SamplerState Sampler238_g174518 = SS29_g174559;
				float4 temp_output_37_0_g174518 = Input_Terrain_Coords_118835_g174452;
				half4 Coords238_g174518 = temp_output_37_0_g174518;
				float3 temp_output_279_0_g174518 = Input_Position9197_g174452;
				half3 WorldPosition238_g174518 = temp_output_279_0_g174518;
				half4 localSamplePlanar2D238_g174518 = SamplePlanar2D( Texture238_g174518 , Sampler238_g174518 , Coords238_g174518 , WorldPosition238_g174518 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174518) = _TerrainNormalTex11;
				SamplerState Sampler246_g174518 = SS29_g174559;
				half4 Coords246_g174518 = temp_output_37_0_g174518;
				half3 WorldPosition246_g174518 = temp_output_279_0_g174518;
				float3 temp_output_280_0_g174518 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174518 = temp_output_280_0_g174518;
				half4 localSamplePlanar3D246_g174518 = SamplePlanar3D( Texture246_g174518 , Sampler246_g174518 , Coords246_g174518 , WorldPosition246_g174518 , WorldNormal246_g174518 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174518) = _TerrainNormalTex11;
				SamplerState Sampler234_g174518 = SS29_g174559;
				float4 Coords234_g174518 = temp_output_37_0_g174518;
				float3 WorldPosition234_g174518 = temp_output_279_0_g174518;
				float4 localSampleStochastic2D234_g174518 = SampleStochastic2D( Texture234_g174518 , Sampler234_g174518 , Coords234_g174518 , WorldPosition234_g174518 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174518) = _TerrainNormalTex11;
				SamplerState Sampler263_g174518 = SS29_g174559;
				half4 Coords263_g174518 = temp_output_37_0_g174518;
				half3 WorldPosition263_g174518 = temp_output_279_0_g174518;
				half3 WorldNormal263_g174518 = temp_output_280_0_g174518;
				half4 localSampleStochastic3D263_g174518 = SampleStochastic3D( Texture263_g174518 , Sampler263_g174518 , Coords263_g174518 , WorldPosition263_g174518 , WorldNormal263_g174518 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8850_g174452 = localSamplePlanar2D238_g174518;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8850_g174452 = localSamplePlanar3D246_g174518;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8850_g174452 = localSampleStochastic2D234_g174518;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8850_g174452 = localSampleStochastic3D263_g174518;
				#else
				float4 staticSwitch8850_g174452 = localSamplePlanar2D238_g174518;
				#endif
				half4 Layer338_g174475 = staticSwitch8850_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174519) = _TerrainNormalTex12;
				SamplerState Sampler238_g174519 = SS29_g174559;
				float4 temp_output_37_0_g174519 = Input_Terrain_Coords_128836_g174452;
				half4 Coords238_g174519 = temp_output_37_0_g174519;
				float3 temp_output_279_0_g174519 = Input_Position9197_g174452;
				half3 WorldPosition238_g174519 = temp_output_279_0_g174519;
				half4 localSamplePlanar2D238_g174519 = SamplePlanar2D( Texture238_g174519 , Sampler238_g174519 , Coords238_g174519 , WorldPosition238_g174519 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174519) = _TerrainNormalTex12;
				SamplerState Sampler246_g174519 = SS29_g174559;
				half4 Coords246_g174519 = temp_output_37_0_g174519;
				half3 WorldPosition246_g174519 = temp_output_279_0_g174519;
				float3 temp_output_280_0_g174519 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174519 = temp_output_280_0_g174519;
				half4 localSamplePlanar3D246_g174519 = SamplePlanar3D( Texture246_g174519 , Sampler246_g174519 , Coords246_g174519 , WorldPosition246_g174519 , WorldNormal246_g174519 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174519) = _TerrainNormalTex12;
				SamplerState Sampler234_g174519 = SS29_g174559;
				float4 Coords234_g174519 = temp_output_37_0_g174519;
				float3 WorldPosition234_g174519 = temp_output_279_0_g174519;
				float4 localSampleStochastic2D234_g174519 = SampleStochastic2D( Texture234_g174519 , Sampler234_g174519 , Coords234_g174519 , WorldPosition234_g174519 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174519) = _TerrainNormalTex12;
				SamplerState Sampler263_g174519 = SS29_g174559;
				half4 Coords263_g174519 = temp_output_37_0_g174519;
				half3 WorldPosition263_g174519 = temp_output_279_0_g174519;
				half3 WorldNormal263_g174519 = temp_output_280_0_g174519;
				half4 localSampleStochastic3D263_g174519 = SampleStochastic3D( Texture263_g174519 , Sampler263_g174519 , Coords263_g174519 , WorldPosition263_g174519 , WorldNormal263_g174519 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8877_g174452 = localSamplePlanar2D238_g174519;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8877_g174452 = localSamplePlanar3D246_g174519;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8877_g174452 = localSampleStochastic2D234_g174519;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8877_g174452 = localSampleStochastic3D263_g174519;
				#else
				float4 staticSwitch8877_g174452 = localSamplePlanar2D238_g174519;
				#endif
				half4 Layer439_g174475 = staticSwitch8877_g174452;
				float4 weightedBlendVar31_g174475 = Weights52_g174475;
				float4 weightedBlend31_g174475 = ( weightedBlendVar31_g174475.x*Layer133_g174475 + weightedBlendVar31_g174475.y*Layer237_g174475 + weightedBlendVar31_g174475.z*Layer338_g174475 + weightedBlendVar31_g174475.w*Layer439_g174475 );
				half4 Terrain_B_128865_g174452 = weightedBlend31_g174475;
				half4 Layer_1243_g174459 = Terrain_B_128865_g174452;
				half4 Weights52_g174482 = Terrain_Weights_167709_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174522) = _TerrainNormalTex13;
				SamplerState Sampler238_g174522 = SS29_g174559;
				float4 temp_output_37_0_g174522 = Input_Terrain_Coords_138960_g174452;
				half4 Coords238_g174522 = temp_output_37_0_g174522;
				float3 temp_output_279_0_g174522 = Input_Position9197_g174452;
				half3 WorldPosition238_g174522 = temp_output_279_0_g174522;
				half4 localSamplePlanar2D238_g174522 = SamplePlanar2D( Texture238_g174522 , Sampler238_g174522 , Coords238_g174522 , WorldPosition238_g174522 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174522) = _TerrainNormalTex13;
				SamplerState Sampler246_g174522 = SS29_g174559;
				half4 Coords246_g174522 = temp_output_37_0_g174522;
				half3 WorldPosition246_g174522 = temp_output_279_0_g174522;
				float3 temp_output_280_0_g174522 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174522 = temp_output_280_0_g174522;
				half4 localSamplePlanar3D246_g174522 = SamplePlanar3D( Texture246_g174522 , Sampler246_g174522 , Coords246_g174522 , WorldPosition246_g174522 , WorldNormal246_g174522 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174522) = _TerrainNormalTex13;
				SamplerState Sampler234_g174522 = SS29_g174559;
				float4 Coords234_g174522 = temp_output_37_0_g174522;
				float3 WorldPosition234_g174522 = temp_output_279_0_g174522;
				float4 localSampleStochastic2D234_g174522 = SampleStochastic2D( Texture234_g174522 , Sampler234_g174522 , Coords234_g174522 , WorldPosition234_g174522 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174522) = _TerrainNormalTex13;
				SamplerState Sampler263_g174522 = SS29_g174559;
				half4 Coords263_g174522 = temp_output_37_0_g174522;
				half3 WorldPosition263_g174522 = temp_output_279_0_g174522;
				half3 WorldNormal263_g174522 = temp_output_280_0_g174522;
				half4 localSampleStochastic3D263_g174522 = SampleStochastic3D( Texture263_g174522 , Sampler263_g174522 , Coords263_g174522 , WorldPosition263_g174522 , WorldNormal263_g174522 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8991_g174452 = localSamplePlanar2D238_g174522;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8991_g174452 = localSamplePlanar3D246_g174522;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8991_g174452 = localSampleStochastic2D234_g174522;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8991_g174452 = localSampleStochastic3D263_g174522;
				#else
				float4 staticSwitch8991_g174452 = localSamplePlanar2D238_g174522;
				#endif
				half4 Layer133_g174482 = staticSwitch8991_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174529) = _TerrainNormalTex14;
				SamplerState Sampler238_g174529 = SS29_g174559;
				float4 temp_output_37_0_g174529 = Input_Terrain_Coords_148961_g174452;
				half4 Coords238_g174529 = temp_output_37_0_g174529;
				float3 temp_output_279_0_g174529 = Input_Position9197_g174452;
				half3 WorldPosition238_g174529 = temp_output_279_0_g174529;
				half4 localSamplePlanar2D238_g174529 = SamplePlanar2D( Texture238_g174529 , Sampler238_g174529 , Coords238_g174529 , WorldPosition238_g174529 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174529) = _TerrainNormalTex14;
				SamplerState Sampler246_g174529 = SS29_g174559;
				half4 Coords246_g174529 = temp_output_37_0_g174529;
				half3 WorldPosition246_g174529 = temp_output_279_0_g174529;
				float3 temp_output_280_0_g174529 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174529 = temp_output_280_0_g174529;
				half4 localSamplePlanar3D246_g174529 = SamplePlanar3D( Texture246_g174529 , Sampler246_g174529 , Coords246_g174529 , WorldPosition246_g174529 , WorldNormal246_g174529 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174529) = _TerrainNormalTex14;
				SamplerState Sampler234_g174529 = SS29_g174559;
				float4 Coords234_g174529 = temp_output_37_0_g174529;
				float3 WorldPosition234_g174529 = temp_output_279_0_g174529;
				float4 localSampleStochastic2D234_g174529 = SampleStochastic2D( Texture234_g174529 , Sampler234_g174529 , Coords234_g174529 , WorldPosition234_g174529 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174529) = _TerrainNormalTex14;
				SamplerState Sampler263_g174529 = SS29_g174559;
				half4 Coords263_g174529 = temp_output_37_0_g174529;
				half3 WorldPosition263_g174529 = temp_output_279_0_g174529;
				half3 WorldNormal263_g174529 = temp_output_280_0_g174529;
				half4 localSampleStochastic3D263_g174529 = SampleStochastic3D( Texture263_g174529 , Sampler263_g174529 , Coords263_g174529 , WorldPosition263_g174529 , WorldNormal263_g174529 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8990_g174452 = localSamplePlanar2D238_g174529;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8990_g174452 = localSamplePlanar3D246_g174529;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8990_g174452 = localSampleStochastic2D234_g174529;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8990_g174452 = localSampleStochastic3D263_g174529;
				#else
				float4 staticSwitch8990_g174452 = localSamplePlanar2D238_g174529;
				#endif
				half4 Layer237_g174482 = staticSwitch8990_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174530) = _TerrainNormalTex15;
				SamplerState Sampler238_g174530 = SS29_g174559;
				float4 temp_output_37_0_g174530 = Input_Terrain_Coords_158962_g174452;
				half4 Coords238_g174530 = temp_output_37_0_g174530;
				float3 temp_output_279_0_g174530 = Input_Position9197_g174452;
				half3 WorldPosition238_g174530 = temp_output_279_0_g174530;
				half4 localSamplePlanar2D238_g174530 = SamplePlanar2D( Texture238_g174530 , Sampler238_g174530 , Coords238_g174530 , WorldPosition238_g174530 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174530) = _TerrainNormalTex15;
				SamplerState Sampler246_g174530 = SS29_g174559;
				half4 Coords246_g174530 = temp_output_37_0_g174530;
				half3 WorldPosition246_g174530 = temp_output_279_0_g174530;
				float3 temp_output_280_0_g174530 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174530 = temp_output_280_0_g174530;
				half4 localSamplePlanar3D246_g174530 = SamplePlanar3D( Texture246_g174530 , Sampler246_g174530 , Coords246_g174530 , WorldPosition246_g174530 , WorldNormal246_g174530 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174530) = _TerrainNormalTex15;
				SamplerState Sampler234_g174530 = SS29_g174559;
				float4 Coords234_g174530 = temp_output_37_0_g174530;
				float3 WorldPosition234_g174530 = temp_output_279_0_g174530;
				float4 localSampleStochastic2D234_g174530 = SampleStochastic2D( Texture234_g174530 , Sampler234_g174530 , Coords234_g174530 , WorldPosition234_g174530 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174530) = _TerrainNormalTex15;
				SamplerState Sampler263_g174530 = SS29_g174559;
				half4 Coords263_g174530 = temp_output_37_0_g174530;
				half3 WorldPosition263_g174530 = temp_output_279_0_g174530;
				half3 WorldNormal263_g174530 = temp_output_280_0_g174530;
				half4 localSampleStochastic3D263_g174530 = SampleStochastic3D( Texture263_g174530 , Sampler263_g174530 , Coords263_g174530 , WorldPosition263_g174530 , WorldNormal263_g174530 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8989_g174452 = localSamplePlanar2D238_g174530;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8989_g174452 = localSamplePlanar3D246_g174530;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8989_g174452 = localSampleStochastic2D234_g174530;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8989_g174452 = localSampleStochastic3D263_g174530;
				#else
				float4 staticSwitch8989_g174452 = localSamplePlanar2D238_g174530;
				#endif
				half4 Layer338_g174482 = staticSwitch8989_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174531) = _TerrainNormalTex16;
				SamplerState Sampler238_g174531 = SS29_g174559;
				float4 temp_output_37_0_g174531 = Input_Terrain_Coords_168959_g174452;
				half4 Coords238_g174531 = temp_output_37_0_g174531;
				float3 temp_output_279_0_g174531 = Input_Position9197_g174452;
				half3 WorldPosition238_g174531 = temp_output_279_0_g174531;
				half4 localSamplePlanar2D238_g174531 = SamplePlanar2D( Texture238_g174531 , Sampler238_g174531 , Coords238_g174531 , WorldPosition238_g174531 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174531) = _TerrainNormalTex16;
				SamplerState Sampler246_g174531 = SS29_g174559;
				half4 Coords246_g174531 = temp_output_37_0_g174531;
				half3 WorldPosition246_g174531 = temp_output_279_0_g174531;
				float3 temp_output_280_0_g174531 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174531 = temp_output_280_0_g174531;
				half4 localSamplePlanar3D246_g174531 = SamplePlanar3D( Texture246_g174531 , Sampler246_g174531 , Coords246_g174531 , WorldPosition246_g174531 , WorldNormal246_g174531 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174531) = _TerrainNormalTex16;
				SamplerState Sampler234_g174531 = SS29_g174559;
				float4 Coords234_g174531 = temp_output_37_0_g174531;
				float3 WorldPosition234_g174531 = temp_output_279_0_g174531;
				float4 localSampleStochastic2D234_g174531 = SampleStochastic2D( Texture234_g174531 , Sampler234_g174531 , Coords234_g174531 , WorldPosition234_g174531 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174531) = _TerrainNormalTex16;
				SamplerState Sampler263_g174531 = SS29_g174559;
				half4 Coords263_g174531 = temp_output_37_0_g174531;
				half3 WorldPosition263_g174531 = temp_output_279_0_g174531;
				half3 WorldNormal263_g174531 = temp_output_280_0_g174531;
				half4 localSampleStochastic3D263_g174531 = SampleStochastic3D( Texture263_g174531 , Sampler263_g174531 , Coords263_g174531 , WorldPosition263_g174531 , WorldNormal263_g174531 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8988_g174452 = localSamplePlanar2D238_g174531;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8988_g174452 = localSamplePlanar3D246_g174531;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8988_g174452 = localSampleStochastic2D234_g174531;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8988_g174452 = localSampleStochastic3D263_g174531;
				#else
				float4 staticSwitch8988_g174452 = localSamplePlanar2D238_g174531;
				#endif
				half4 Layer439_g174482 = staticSwitch8988_g174452;
				float4 weightedBlendVar31_g174482 = Weights52_g174482;
				float4 weightedBlend31_g174482 = ( weightedBlendVar31_g174482.x*Layer133_g174482 + weightedBlendVar31_g174482.y*Layer237_g174482 + weightedBlendVar31_g174482.z*Layer338_g174482 + weightedBlendVar31_g174482.w*Layer439_g174482 );
				half4 Terrain_B_168987_g174452 = weightedBlend31_g174482;
				half4 Layer_1644_g174459 = Terrain_B_168987_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174459 = Layer_045_g174459;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174459 = ( Layer_045_g174459 + Layer_0810_g174459 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174459 = ( Layer_045_g174459 + Layer_0810_g174459 + Layer_1243_g174459 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174459 = ( Layer_045_g174459 + Layer_0810_g174459 + Layer_1243_g174459 + Layer_1644_g174459 );
				#else
				float4 staticSwitch40_g174459 = Layer_045_g174459;
				#endif
				half4 Blend_Normal7512_g174452 = staticSwitch40_g174459;
				half4 Normal_Packed45_g174553 = Blend_Normal7512_g174452;
				float2 appendResult58_g174553 = (float2(( (Normal_Packed45_g174553).x * (Normal_Packed45_g174553).w ) , (Normal_Packed45_g174553).y));
				half2 Normal_Default50_g174553 = appendResult58_g174553;
				half2 Normal_ASTC41_g174553 = (Normal_Packed45_g174553).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174553 = Normal_ASTC41_g174553;
				#else
				float2 staticSwitch38_g174553 = Normal_Default50_g174553;
				#endif
				half2 Normal_NO_DTX544_g174553 = (Normal_Packed45_g174553).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174553 = Normal_NO_DTX544_g174553;
				#else
				float2 staticSwitch37_g174553 = staticSwitch38_g174553;
				#endif
				half4 Weights52_g174455 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174455 = temp_output_6970_0_g174452;
				half4 Layer237_g174455 = temp_output_6977_0_g174452;
				half4 Layer338_g174455 = temp_output_6978_0_g174452;
				half4 Layer439_g174455 = temp_output_6983_0_g174452;
				float4 weightedBlendVar31_g174455 = Weights52_g174455;
				float4 weightedBlend31_g174455 = ( weightedBlendVar31_g174455.x*Layer133_g174455 + weightedBlendVar31_g174455.y*Layer237_g174455 + weightedBlendVar31_g174455.z*Layer338_g174455 + weightedBlendVar31_g174455.w*Layer439_g174455 );
				half4 Terrain_Shaders_047203_g174452 = weightedBlend31_g174455;
				half4 Layer_045_g174461 = Terrain_Shaders_047203_g174452;
				half4 Weights52_g174471 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174471 = temp_output_8714_0_g174452;
				half4 Layer237_g174471 = temp_output_8721_0_g174452;
				half4 Layer338_g174471 = temp_output_8724_0_g174452;
				half4 Layer439_g174471 = temp_output_8727_0_g174452;
				float4 weightedBlendVar31_g174471 = Weights52_g174471;
				float4 weightedBlend31_g174471 = ( weightedBlendVar31_g174471.x*Layer133_g174471 + weightedBlendVar31_g174471.y*Layer237_g174471 + weightedBlendVar31_g174471.z*Layer338_g174471 + weightedBlendVar31_g174471.w*Layer439_g174471 );
				half4 Terrain_Shaders_088730_g174452 = weightedBlend31_g174471;
				half4 Layer_0810_g174461 = Terrain_Shaders_088730_g174452;
				half4 Weights52_g174478 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174478 = temp_output_8815_0_g174452;
				half4 Layer237_g174478 = temp_output_8818_0_g174452;
				half4 Layer338_g174478 = temp_output_8819_0_g174452;
				half4 Layer439_g174478 = temp_output_8820_0_g174452;
				float4 weightedBlendVar31_g174478 = Weights52_g174478;
				float4 weightedBlend31_g174478 = ( weightedBlendVar31_g174478.x*Layer133_g174478 + weightedBlendVar31_g174478.y*Layer237_g174478 + weightedBlendVar31_g174478.z*Layer338_g174478 + weightedBlendVar31_g174478.w*Layer439_g174478 );
				half4 Terrain_Shaders_128871_g174452 = weightedBlend31_g174478;
				half4 Layer_1243_g174461 = Terrain_Shaders_128871_g174452;
				half4 Weights52_g174485 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174485 = temp_output_8931_0_g174452;
				half4 Layer237_g174485 = temp_output_8934_0_g174452;
				half4 Layer338_g174485 = temp_output_8935_0_g174452;
				half4 Layer439_g174485 = temp_output_8936_0_g174452;
				float4 weightedBlendVar31_g174485 = Weights52_g174485;
				float4 weightedBlend31_g174485 = ( weightedBlendVar31_g174485.x*Layer133_g174485 + weightedBlendVar31_g174485.y*Layer237_g174485 + weightedBlendVar31_g174485.z*Layer338_g174485 + weightedBlendVar31_g174485.w*Layer439_g174485 );
				half4 Terrain_Shaders_169014_g174452 = weightedBlend31_g174485;
				half4 Layer_1644_g174461 = Terrain_Shaders_169014_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174461 = Layer_045_g174461;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174461 = ( Layer_045_g174461 + Layer_0810_g174461 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174461 = ( Layer_045_g174461 + Layer_0810_g174461 + Layer_1243_g174461 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174461 = ( Layer_045_g174461 + Layer_0810_g174461 + Layer_1243_g174461 + Layer_1644_g174461 );
				#else
				float4 staticSwitch40_g174461 = Layer_045_g174461;
				#endif
				half4 Blend_Shaders7420_g174452 = staticSwitch40_g174461;
				half4 Normal_Packed45_g174552 = Blend_Shaders7420_g174452;
				half2 Normal_NO_DTX544_g174552 = (Normal_Packed45_g174552).wy;
				#ifdef TVE_TERRAIN_PACKED
				float2 staticSwitch9080_g174452 = (Normal_NO_DTX544_g174552*2.0 + -1.0);
				#else
				float2 staticSwitch9080_g174452 = (staticSwitch37_g174553*2.0 + -1.0);
				#endif
				half4 Weights52_g174456 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174456 = _TerrainParams1;
				half4 Layer237_g174456 = _TerrainParams2;
				half4 Layer338_g174456 = _TerrainParams3;
				half4 Layer439_g174456 = _TerrainParams4;
				float4 weightedBlendVar31_g174456 = Weights52_g174456;
				float4 weightedBlend31_g174456 = ( weightedBlendVar31_g174456.x*Layer133_g174456 + weightedBlendVar31_g174456.y*Layer237_g174456 + weightedBlendVar31_g174456.z*Layer338_g174456 + weightedBlendVar31_g174456.w*Layer439_g174456 );
				half4 Terrain_Params_047533_g174452 = weightedBlend31_g174456;
				half4 Layer_045_g174462 = Terrain_Params_047533_g174452;
				half4 Weights52_g174472 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174472 = _TerrainParams5;
				half4 Layer237_g174472 = _TerrainParams6;
				half4 Layer338_g174472 = _TerrainParams7;
				half4 Layer439_g174472 = _TerrainParams8;
				float4 weightedBlendVar31_g174472 = Weights52_g174472;
				float4 weightedBlend31_g174472 = ( weightedBlendVar31_g174472.x*Layer133_g174472 + weightedBlendVar31_g174472.y*Layer237_g174472 + weightedBlendVar31_g174472.z*Layer338_g174472 + weightedBlendVar31_g174472.w*Layer439_g174472 );
				half4 Terrain_Params_088739_g174452 = weightedBlend31_g174472;
				half4 Layer_0810_g174462 = Terrain_Params_088739_g174452;
				half4 Weights52_g174479 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174479 = _TerrainParams9;
				half4 Layer237_g174479 = _TerrainParams10;
				half4 Layer338_g174479 = _TerrainParams11;
				half4 Layer439_g174479 = _TerrainParams12;
				float4 weightedBlendVar31_g174479 = Weights52_g174479;
				float4 weightedBlend31_g174479 = ( weightedBlendVar31_g174479.x*Layer133_g174479 + weightedBlendVar31_g174479.y*Layer237_g174479 + weightedBlendVar31_g174479.z*Layer338_g174479 + weightedBlendVar31_g174479.w*Layer439_g174479 );
				half4 Terrain_Params_128867_g174452 = weightedBlend31_g174479;
				half4 Layer_1243_g174462 = Terrain_Params_128867_g174452;
				half4 Weights52_g174486 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174486 = _TerrainParams13;
				half4 Layer237_g174486 = _TerrainParams14;
				half4 Layer338_g174486 = _TerrainParams15;
				half4 Layer439_g174486 = _TerrainParams16;
				float4 weightedBlendVar31_g174486 = Weights52_g174486;
				float4 weightedBlend31_g174486 = ( weightedBlendVar31_g174486.x*Layer133_g174486 + weightedBlendVar31_g174486.y*Layer237_g174486 + weightedBlendVar31_g174486.z*Layer338_g174486 + weightedBlendVar31_g174486.w*Layer439_g174486 );
				half4 Terrain_Params_169017_g174452 = weightedBlend31_g174486;
				half4 Layer_1644_g174462 = Terrain_Params_169017_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174462 = Layer_045_g174462;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174462 = ( Layer_045_g174462 + Layer_0810_g174462 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174462 = ( Layer_045_g174462 + Layer_0810_g174462 + Layer_1243_g174462 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174462 = ( Layer_045_g174462 + Layer_0810_g174462 + Layer_1243_g174462 + Layer_1644_g174462 );
				#else
				float4 staticSwitch40_g174462 = Layer_045_g174462;
				#endif
				half4 Blend_Params7547_g174452 = staticSwitch40_g174462;
				half2 Normal_Planar45_g174554 = ( ( staticSwitch9080_g174452 * (Blend_Params7547_g174452).z ) * _TerrainNormalValue );
				float2 break71_g174554 = Normal_Planar45_g174554;
				float3 appendResult72_g174554 = (float3(break71_g174554.x , 0.0 , break71_g174554.y));
				half2 Final_NormalTS9145_g174452 = (mul( ase_worldToTangent, appendResult72_g174554 )).xy;
				half2 Local_NormalTS729_g174425 = Final_NormalTS9145_g174452;
				float2 lerpResult405_g174425 = lerp( Visual_NormalTS529_g174425 , Local_NormalTS729_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float2 staticSwitch418_g174425 = lerpResult405_g174425;
				#else
				float2 staticSwitch418_g174425 = Visual_NormalTS529_g174425;
				#endif
				half2 Final_NormalTS612_g174425 = staticSwitch418_g174425;
				float2 In_NormalTS3_g174429 = Final_NormalTS612_g174425;
				float3 appendResult68_g174427 = (float3(Final_NormalTS612_g174425 , 1.0));
				float3 tanNormal74_g174427 = appendResult68_g174427;
				float3 worldNormal74_g174427 = normalize( float3(dot(tanToWorld0,tanNormal74_g174427), dot(tanToWorld1,tanNormal74_g174427), dot(tanToWorld2,tanNormal74_g174427)) );
				half3 Final_NormalWS956_g174425 = worldNormal74_g174427;
				float3 In_NormalWS3_g174429 = Final_NormalWS956_g174425;
				half4 Visual_Shader531_g174425 = Out_Shader4_g174428;
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9139_g174452 = 0.0;
				#else
				float staticSwitch9139_g174452 = ( (Blend_Shaders7420_g174452).x * (Blend_Params7547_g174452).x * _TerrainMetallicValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9097_g174452 = 1.0;
				#else
				float staticSwitch9097_g174452 = ( (Blend_Shaders7420_g174452).y * _TerrainOcclusionValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9105_g174452 = (Blend_Shaders7420_g174452).x;
				#else
				float staticSwitch9105_g174452 = (Blend_Shaders7420_g174452).w;
				#endif
				float4 appendResult9147_g174452 = (float4(staticSwitch9139_g174452 , staticSwitch9097_g174452 , (Blend_Shaders7420_g174452).z , ( staticSwitch9105_g174452 * (Blend_Params7547_g174452).w * _TerrainSmoothnessValue )));
				half4 Final_Shaders9146_g174452 = appendResult9147_g174452;
				half4 Local_Masks750_g174425 = Final_Shaders9146_g174452;
				float4 lerpResult998_g174425 = lerp( Visual_Shader531_g174425 , Local_Masks750_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float4 staticSwitch451_g174425 = lerpResult998_g174425;
				#else
				float4 staticSwitch451_g174425 = Visual_Shader531_g174425;
				#endif
				half4 Final_Masks613_g174425 = staticSwitch451_g174425;
				float4 In_Shader3_g174429 = Final_Masks613_g174425;
				half4 Weights52_g174545 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174545 = _TerrainSpecular1;
				half4 Layer237_g174545 = _TerrainSpecular2;
				half4 Layer338_g174545 = _TerrainSpecular3;
				half4 Layer439_g174545 = _TerrainSpecular4;
				float4 weightedBlendVar31_g174545 = Weights52_g174545;
				float4 weightedBlend31_g174545 = ( weightedBlendVar31_g174545.x*Layer133_g174545 + weightedBlendVar31_g174545.y*Layer237_g174545 + weightedBlendVar31_g174545.z*Layer338_g174545 + weightedBlendVar31_g174545.w*Layer439_g174545 );
				half4 Terrain_Specular_047390_g174452 = weightedBlend31_g174545;
				half4 Layer_045_g174550 = Terrain_Specular_047390_g174452;
				half4 Weights52_g174473 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174473 = _TerrainSpecular5;
				half4 Layer237_g174473 = _TerrainSpecular6;
				half4 Layer338_g174473 = _TerrainSpecular7;
				half4 Layer439_g174473 = _TerrainSpecular8;
				float4 weightedBlendVar31_g174473 = Weights52_g174473;
				float4 weightedBlend31_g174473 = ( weightedBlendVar31_g174473.x*Layer133_g174473 + weightedBlendVar31_g174473.y*Layer237_g174473 + weightedBlendVar31_g174473.z*Layer338_g174473 + weightedBlendVar31_g174473.w*Layer439_g174473 );
				half4 Terrain_Specular_088745_g174452 = weightedBlend31_g174473;
				half4 Layer_0810_g174550 = Terrain_Specular_088745_g174452;
				half4 Weights52_g174480 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174480 = _TerrainSpecular9;
				half4 Layer237_g174480 = _TerrainSpecular10;
				half4 Layer338_g174480 = _TerrainSpecular11;
				half4 Layer439_g174480 = _TerrainSpecular12;
				float4 weightedBlendVar31_g174480 = Weights52_g174480;
				float4 weightedBlend31_g174480 = ( weightedBlendVar31_g174480.x*Layer133_g174480 + weightedBlendVar31_g174480.y*Layer237_g174480 + weightedBlendVar31_g174480.z*Layer338_g174480 + weightedBlendVar31_g174480.w*Layer439_g174480 );
				half4 Terrain_Specular_128869_g174452 = weightedBlend31_g174480;
				half4 Layer_1243_g174550 = Terrain_Specular_128869_g174452;
				half4 Weights52_g174487 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174487 = _TerrainSpecular13;
				half4 Layer237_g174487 = _TerrainSpecular14;
				half4 Layer338_g174487 = _TerrainSpecular15;
				half4 Layer439_g174487 = _TerrainSpecular16;
				float4 weightedBlendVar31_g174487 = Weights52_g174487;
				float4 weightedBlend31_g174487 = ( weightedBlendVar31_g174487.x*Layer133_g174487 + weightedBlendVar31_g174487.y*Layer237_g174487 + weightedBlendVar31_g174487.z*Layer338_g174487 + weightedBlendVar31_g174487.w*Layer439_g174487 );
				half4 Terrain_Specular_169019_g174452 = weightedBlend31_g174487;
				half4 Layer_1644_g174550 = Terrain_Specular_169019_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174550 = Layer_045_g174550;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174550 = ( Layer_045_g174550 + Layer_0810_g174550 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174550 = ( Layer_045_g174550 + Layer_0810_g174550 + Layer_1243_g174550 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174550 = ( Layer_045_g174550 + Layer_0810_g174550 + Layer_1243_g174550 + Layer_1644_g174550 );
				#else
				float4 staticSwitch40_g174550 = Layer_045_g174550;
				#endif
				half4 Blend_TerrainSpecular7446_g174452 = staticSwitch40_g174550;
				float3 temp_output_9088_0_g174452 = (Blend_TerrainSpecular7446_g174452).rgb;
				float4 appendResult9189_g174452 = (float4(temp_output_9088_0_g174452 , 1.0));
				half4 Final_Emissive9151_g174452 = appendResult9189_g174452;
				half4 Local_Emissive1006_g174425 = Final_Emissive9151_g174452;
				float4 appendResult1092_g174425 = (float4((Local_Emissive1006_g174425).xyz , Terrain_Mask412_g174425));
				#ifdef TVE_TERRAIN
				float4 staticSwitch1096_g174425 = appendResult1092_g174425;
				#else
				float4 staticSwitch1096_g174425 = half4(1,1,1,0);
				#endif
				half4 Final_EmissiveLDR1094_g174425 = staticSwitch1096_g174425;
				float4 In_Emissive3_g174429 = Final_EmissiveLDR1094_g174425;
				float3 temp_output_3_0_g174432 = Final_Albedo601_g174425;
				float dotResult20_g174432 = dot( temp_output_3_0_g174432 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale615_g174425 = dotResult20_g174432;
				float In_Grayscale3_g174429 = Final_Grayscale615_g174425;
				float clampResult651_g174425 = clamp( saturate( ( Final_Grayscale615_g174425 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity652_g174425 = clampResult651_g174425;
				float In_Luminosity3_g174429 = Final_Luminosity652_g174425;
				half Visual_MultiMask547_g174425 = Out_MultiMask4_g174428;
				half Final_MultiShader9150_g174452 = ( (Blend_TerrainSpecular7446_g174452).a * (Blend_Albedo7468_g174452).w );
				half Local_MultiMask767_g174425 = Final_MultiShader9150_g174452;
				float lerpResult477_g174425 = lerp( Visual_MultiMask547_g174425 , Local_MultiMask767_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float staticSwitch482_g174425 = lerpResult477_g174425;
				#else
				float staticSwitch482_g174425 = Visual_MultiMask547_g174425;
				#endif
				half Final_MultiMask572_g174425 = staticSwitch482_g174425;
				float In_MultiMask3_g174429 = Final_MultiMask572_g174425;
				half Visual_AlphaClip559_g174425 = Out_AlphaClip4_g174428;
				float4 temp_output_35_0_g174561 = appendResult9125_g174452;
				float2 InputScale48_g174561 = (temp_output_35_0_g174561).zw;
				half2 FinalScale53_g174561 = ( 1.0 / InputScale48_g174561 );
				float2 InputPosition52_g174561 = (temp_output_35_0_g174561).xy;
				half2 FinalPosition58_g174561 = -( FinalScale53_g174561 * InputPosition52_g174561 );
				float2 temp_output_65_0_g174561 = ( ( (worldPos).xz * FinalScale53_g174561 ) + FinalPosition58_g174561 );
				float2 Terrain_Holes_UV9409_g174452 = temp_output_65_0_g174561;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch9188_g174452 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9409_g174452 ).r;
				#else
				float staticSwitch9188_g174452 = 1.0;
				#endif
				half Terrain_Holes7437_g174452 = staticSwitch9188_g174452;
				float temp_output_1141_9195_g174425 = Terrain_Holes7437_g174452;
				half Local_AlphaClip772_g174425 = temp_output_1141_9195_g174425;
				float lerpResult448_g174425 = lerp( Visual_AlphaClip559_g174425 , Local_AlphaClip772_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float staticSwitch564_g174425 = lerpResult448_g174425;
				#else
				float staticSwitch564_g174425 = Visual_AlphaClip559_g174425;
				#endif
				half Final_AlphaClip602_g174425 = staticSwitch564_g174425;
				float In_AlphaClip3_g174429 = Final_AlphaClip602_g174425;
				half Visual_AlphaFade588_g174425 = Out_AlphaFade4_g174428;
				half Local_AlphaFade773_g174425 = temp_output_1141_9195_g174425;
				float lerpResult604_g174425 = lerp( Visual_AlphaFade588_g174425 , Local_AlphaFade773_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float staticSwitch608_g174425 = lerpResult604_g174425;
				#else
				float staticSwitch608_g174425 = Visual_AlphaFade588_g174425;
				#endif
				half Final_AlphaFade611_g174425 = staticSwitch608_g174425;
				float In_AlphaFade3_g174429 = Final_AlphaFade611_g174425;
				float3 In_Translucency3_g174429 = Out_Translucency4_g174428;
				float In_Transmission3_g174429 = Out_Transmission4_g174428;
				float In_Thickness3_g174429 = Out_Thickness4_g174428;
				float In_Diffusion3_g174429 = Out_Diffusion4_g174428;
				Data3_g174429.Dummy = In_Dummy3_g174429;
				Data3_g174429.Albedo = In_Albedo3_g174429;
				Data3_g174429.AlbedoRaw = In_AlbedoRaw3_g174429;
				Data3_g174429.NormalTS = In_NormalTS3_g174429;
				Data3_g174429.NormalWS = In_NormalWS3_g174429;
				Data3_g174429.Shader = In_Shader3_g174429;
				Data3_g174429.Emissive= In_Emissive3_g174429;
				Data3_g174429.MultiMask = In_MultiMask3_g174429;
				Data3_g174429.Grayscale = In_Grayscale3_g174429;
				Data3_g174429.Luminosity = In_Luminosity3_g174429;
				Data3_g174429.AlphaClip = In_AlphaClip3_g174429;
				Data3_g174429.AlphaFade = In_AlphaFade3_g174429;
				Data3_g174429.Translucency = In_Translucency3_g174429;
				Data3_g174429.Transmission = In_Transmission3_g174429;
				Data3_g174429.Thickness = In_Thickness3_g174429;
				Data3_g174429.Diffusion = In_Diffusion3_g174429;
				TVEVisualData Data4_g174641 = Data3_g174429;
				float Out_Dummy4_g174641 = 0;
				float3 Out_Albedo4_g174641 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174641 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174641 = float2( 0,0 );
				float3 Out_NormalWS4_g174641 = float3( 0,0,0 );
				float4 Out_Shader4_g174641 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174641 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174641 = 0;
				float Out_Grayscale4_g174641 = 0;
				float Out_Luminosity4_g174641 = 0;
				float Out_AlphaClip4_g174641 = 0;
				float Out_AlphaFade4_g174641 = 0;
				float3 Out_Translucency4_g174641 = float3( 0,0,0 );
				float Out_Transmission4_g174641 = 0;
				float Out_Thickness4_g174641 = 0;
				float Out_Diffusion4_g174641 = 0;
				Out_Dummy4_g174641 = Data4_g174641.Dummy;
				Out_Albedo4_g174641 = Data4_g174641.Albedo;
				Out_AlbedoRaw4_g174641 = Data4_g174641.AlbedoRaw;
				Out_NormalTS4_g174641 = Data4_g174641.NormalTS;
				Out_NormalWS4_g174641 = Data4_g174641.NormalWS;
				Out_Shader4_g174641 = Data4_g174641.Shader;
				Out_Emissive4_g174641= Data4_g174641.Emissive;
				Out_MultiMask4_g174641 = Data4_g174641.MultiMask;
				Out_Grayscale4_g174641 = Data4_g174641.Grayscale;
				Out_Luminosity4_g174641= Data4_g174641.Luminosity;
				Out_AlphaClip4_g174641 = Data4_g174641.AlphaClip;
				Out_AlphaFade4_g174641 = Data4_g174641.AlphaFade;
				Out_Translucency4_g174641 = Data4_g174641.Translucency;
				Out_Transmission4_g174641 = Data4_g174641.Transmission;
				Out_Thickness4_g174641 = Data4_g174641.Thickness;
				Out_Diffusion4_g174641 = Data4_g174641.Diffusion;
				half3 Visual_Albedo127_g174640 = Out_Albedo4_g174641;
				TVEModelData Data15_g174649 = Data16_g164566;
				float Out_Dummy15_g174649 = 0;
				float3 Out_PositionWS15_g174649 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174649 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174649 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174649 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174649 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174649 = float3( 0,0,0 );
				float4 Out_VertexData15_g174649 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174649 = float4( 0,0,0,0 );
				Out_Dummy15_g174649 = Data15_g174649.Dummy;
				Out_PositionWS15_g174649 = Data15_g174649.PositionWS;
				Out_PositionWO15_g174649 = Data15_g174649.PositionWO;
				Out_PivotWS15_g174649 = Data15_g174649.PivotWS;
				Out_PivotWO15_g174649 = Data15_g174649.PivotWO;
				Out_NormalWS15_g174649 = Data15_g174649.NormalWS;
				Out_ViewDirWS15_g174649 = Data15_g174649.ViewDirWS;
				Out_VertexData15_g174649 = Data15_g174649.VertexData;
				Out_BoundsData15_g174649 = Data15_g174649.BoundsData;
				half4 Model_VertexData206_g174640 = Out_VertexData15_g174649;
				float4 break208_g174640 = Model_VertexData206_g174640;
				float4 break33_g174647 = _occlusion_vert_mode;
				float temp_output_30_0_g174647 = ( break208_g174640.x * break33_g174647.x );
				float temp_output_29_0_g174647 = ( break208_g174640.y * break33_g174647.y );
				float temp_output_31_0_g174647 = ( break208_g174640.z * break33_g174647.z );
				float temp_output_28_0_g174647 = ( temp_output_30_0_g174647 + temp_output_29_0_g174647 + temp_output_31_0_g174647 + ( break208_g174640.w * break33_g174647.w ) );
				float temp_output_194_0_g174640 = temp_output_28_0_g174647;
				float clampResult17_g174645 = clamp( temp_output_194_0_g174640 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174644 = _OcclusionMeshRemap.x;
				float temp_output_10_0_g174644 = ( _OcclusionMeshRemap.y - temp_output_7_0_g174644 );
				float temp_output_6_0_g174646 = saturate( ( ( clampResult17_g174645 - temp_output_7_0_g174644 ) / ( temp_output_10_0_g174644 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174646 = ( temp_output_6_0_g174646 + ( _OcclusionMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174646 = temp_output_6_0_g174646;
				#endif
				half Occlusion_Mask82_g174640 = staticSwitch14_g174646;
				float3 lerpResult75_g174640 = lerp( (_OcclusionColorTwo).rgb , (_OcclusionColorOne).rgb , Occlusion_Mask82_g174640);
				float3 lerpResult186_g174640 = lerp( Visual_Albedo127_g174640 , ( Visual_Albedo127_g174640 * lerpResult75_g174640 ) , _OcclusionIntensityValue);
				#ifdef TVE_OCCLUSION
				float3 staticSwitch171_g174640 = lerpResult186_g174640;
				#else
				float3 staticSwitch171_g174640 = Visual_Albedo127_g174640;
				#endif
				half3 Final_Albedo160_g174640 = staticSwitch171_g174640;
				float3 In_Albedo3_g174642 = Final_Albedo160_g174640;
				float3 In_AlbedoRaw3_g174642 = Final_Albedo160_g174640;
				float2 In_NormalTS3_g174642 = Out_NormalTS4_g174641;
				float3 In_NormalWS3_g174642 = Out_NormalWS4_g174641;
				float4 In_Shader3_g174642 = Out_Shader4_g174641;
				float4 In_Emissive3_g174642 = Out_Emissive4_g174641;
				float3 temp_output_3_0_g174643 = Final_Albedo160_g174640;
				float dotResult20_g174643 = dot( temp_output_3_0_g174643 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale164_g174640 = dotResult20_g174643;
				float In_Grayscale3_g174642 = Final_Grayscale164_g174640;
				float clampResult180_g174640 = clamp( saturate( ( Final_Grayscale164_g174640 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Shading181_g174640 = clampResult180_g174640;
				float In_Luminosity3_g174642 = Final_Shading181_g174640;
				float In_MultiMask3_g174642 = Out_MultiMask4_g174641;
				float In_AlphaClip3_g174642 = Out_AlphaClip4_g174641;
				float In_AlphaFade3_g174642 = Out_AlphaFade4_g174641;
				float3 In_Translucency3_g174642 = Out_Translucency4_g174641;
				float In_Transmission3_g174642 = Out_Transmission4_g174641;
				float In_Thickness3_g174642 = Out_Thickness4_g174641;
				float In_Diffusion3_g174642 = Out_Diffusion4_g174641;
				Data3_g174642.Dummy = In_Dummy3_g174642;
				Data3_g174642.Albedo = In_Albedo3_g174642;
				Data3_g174642.AlbedoRaw = In_AlbedoRaw3_g174642;
				Data3_g174642.NormalTS = In_NormalTS3_g174642;
				Data3_g174642.NormalWS = In_NormalWS3_g174642;
				Data3_g174642.Shader = In_Shader3_g174642;
				Data3_g174642.Emissive= In_Emissive3_g174642;
				Data3_g174642.MultiMask = In_MultiMask3_g174642;
				Data3_g174642.Grayscale = In_Grayscale3_g174642;
				Data3_g174642.Luminosity = In_Luminosity3_g174642;
				Data3_g174642.AlphaClip = In_AlphaClip3_g174642;
				Data3_g174642.AlphaFade = In_AlphaFade3_g174642;
				Data3_g174642.Translucency = In_Translucency3_g174642;
				Data3_g174642.Transmission = In_Transmission3_g174642;
				Data3_g174642.Thickness = In_Thickness3_g174642;
				Data3_g174642.Diffusion = In_Diffusion3_g174642;
				TVEVisualData Data4_g174652 = Data3_g174642;
				float Out_Dummy4_g174652 = 0;
				float3 Out_Albedo4_g174652 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174652 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174652 = float2( 0,0 );
				float3 Out_NormalWS4_g174652 = float3( 0,0,0 );
				float4 Out_Shader4_g174652 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174652 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174652 = 0;
				float Out_Grayscale4_g174652 = 0;
				float Out_Luminosity4_g174652 = 0;
				float Out_AlphaClip4_g174652 = 0;
				float Out_AlphaFade4_g174652 = 0;
				float3 Out_Translucency4_g174652 = float3( 0,0,0 );
				float Out_Transmission4_g174652 = 0;
				float Out_Thickness4_g174652 = 0;
				float Out_Diffusion4_g174652 = 0;
				Out_Dummy4_g174652 = Data4_g174652.Dummy;
				Out_Albedo4_g174652 = Data4_g174652.Albedo;
				Out_AlbedoRaw4_g174652 = Data4_g174652.AlbedoRaw;
				Out_NormalTS4_g174652 = Data4_g174652.NormalTS;
				Out_NormalWS4_g174652 = Data4_g174652.NormalWS;
				Out_Shader4_g174652 = Data4_g174652.Shader;
				Out_Emissive4_g174652= Data4_g174652.Emissive;
				Out_MultiMask4_g174652 = Data4_g174652.MultiMask;
				Out_Grayscale4_g174652 = Data4_g174652.Grayscale;
				Out_Luminosity4_g174652= Data4_g174652.Luminosity;
				Out_AlphaClip4_g174652 = Data4_g174652.AlphaClip;
				Out_AlphaFade4_g174652 = Data4_g174652.AlphaFade;
				Out_Translucency4_g174652 = Data4_g174652.Translucency;
				Out_Transmission4_g174652 = Data4_g174652.Transmission;
				Out_Thickness4_g174652 = Data4_g174652.Thickness;
				Out_Diffusion4_g174652 = Data4_g174652.Diffusion;
				half3 Visual_Albedo127_g174650 = Out_Albedo4_g174652;
				TVEModelData Data15_g174659 = Data16_g164566;
				float Out_Dummy15_g174659 = 0;
				float3 Out_PositionWS15_g174659 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174659 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174659 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174659 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174659 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174659 = float3( 0,0,0 );
				float4 Out_VertexData15_g174659 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174659 = float4( 0,0,0,0 );
				Out_Dummy15_g174659 = Data15_g174659.Dummy;
				Out_PositionWS15_g174659 = Data15_g174659.PositionWS;
				Out_PositionWO15_g174659 = Data15_g174659.PositionWO;
				Out_PivotWS15_g174659 = Data15_g174659.PivotWS;
				Out_PivotWO15_g174659 = Data15_g174659.PivotWO;
				Out_NormalWS15_g174659 = Data15_g174659.NormalWS;
				Out_ViewDirWS15_g174659 = Data15_g174659.ViewDirWS;
				Out_VertexData15_g174659 = Data15_g174659.VertexData;
				Out_BoundsData15_g174659 = Data15_g174659.BoundsData;
				half4 Model_VertexData224_g174650 = Out_VertexData15_g174659;
				float4 break226_g174650 = Model_VertexData224_g174650;
				float4 break33_g174651 = _gradient_vert_mode;
				float temp_output_30_0_g174651 = ( break226_g174650.x * break33_g174651.x );
				float temp_output_29_0_g174651 = ( break226_g174650.y * break33_g174651.y );
				float temp_output_31_0_g174651 = ( break226_g174650.z * break33_g174651.z );
				float temp_output_28_0_g174651 = ( temp_output_30_0_g174651 + temp_output_29_0_g174651 + temp_output_31_0_g174651 + ( break226_g174650.w * break33_g174651.w ) );
				float temp_output_211_0_g174650 = temp_output_28_0_g174651;
				float clampResult17_g174656 = clamp( temp_output_211_0_g174650 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174657 = _GradientMeshRemap.x;
				float temp_output_10_0_g174657 = ( _GradientMeshRemap.y - temp_output_7_0_g174657 );
				float temp_output_6_0_g174658 = saturate( ( ( clampResult17_g174656 - temp_output_7_0_g174657 ) / ( temp_output_10_0_g174657 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174658 = ( temp_output_6_0_g174658 + ( _GradientMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174658 = temp_output_6_0_g174658;
				#endif
				half Gradient_VertMask82_g174650 = staticSwitch14_g174658;
				half Gradient_Mask200_g174650 = Gradient_VertMask82_g174650;
				float3 lerpResult75_g174650 = lerp( (_GradientColorTwo).rgb , (_GradientColorOne).rgb , Gradient_Mask200_g174650);
				float temp_output_162_11_g174650 = Out_MultiMask4_g174652;
				half Visual_MultiMask196_g174650 = temp_output_162_11_g174650;
				float lerpResult190_g174650 = lerp( 1.0 , Visual_MultiMask196_g174650 , _GradientMultiValue);
				half Gradient_MultiMask194_g174650 = lerpResult190_g174650;
				float3 lerpResult186_g174650 = lerp( Visual_Albedo127_g174650 , ( Visual_Albedo127_g174650 * lerpResult75_g174650 ) , ( _GradientIntensityValue * Gradient_MultiMask194_g174650 ));
				#ifdef TVE_GRADIENT
				float3 staticSwitch171_g174650 = lerpResult186_g174650;
				#else
				float3 staticSwitch171_g174650 = Visual_Albedo127_g174650;
				#endif
				half3 Final_Albedo160_g174650 = staticSwitch171_g174650;
				float3 In_Albedo3_g174653 = Final_Albedo160_g174650;
				float3 In_AlbedoRaw3_g174653 = Final_Albedo160_g174650;
				float2 In_NormalTS3_g174653 = Out_NormalTS4_g174652;
				float3 In_NormalWS3_g174653 = Out_NormalWS4_g174652;
				float4 In_Shader3_g174653 = Out_Shader4_g174652;
				float4 In_Emissive3_g174653 = Out_Emissive4_g174652;
				float3 temp_output_3_0_g174654 = Final_Albedo160_g174650;
				float dotResult20_g174654 = dot( temp_output_3_0_g174654 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale164_g174650 = dotResult20_g174654;
				float In_Grayscale3_g174653 = Final_Grayscale164_g174650;
				float clampResult180_g174650 = clamp( saturate( ( Final_Grayscale164_g174650 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity181_g174650 = clampResult180_g174650;
				float In_Luminosity3_g174653 = Final_Luminosity181_g174650;
				float In_MultiMask3_g174653 = temp_output_162_11_g174650;
				float In_AlphaClip3_g174653 = Out_AlphaClip4_g174652;
				float In_AlphaFade3_g174653 = Out_AlphaFade4_g174652;
				float3 In_Translucency3_g174653 = Out_Translucency4_g174652;
				float In_Transmission3_g174653 = Out_Transmission4_g174652;
				float In_Thickness3_g174653 = Out_Thickness4_g174652;
				float In_Diffusion3_g174653 = Out_Diffusion4_g174652;
				Data3_g174653.Dummy = In_Dummy3_g174653;
				Data3_g174653.Albedo = In_Albedo3_g174653;
				Data3_g174653.AlbedoRaw = In_AlbedoRaw3_g174653;
				Data3_g174653.NormalTS = In_NormalTS3_g174653;
				Data3_g174653.NormalWS = In_NormalWS3_g174653;
				Data3_g174653.Shader = In_Shader3_g174653;
				Data3_g174653.Emissive= In_Emissive3_g174653;
				Data3_g174653.MultiMask = In_MultiMask3_g174653;
				Data3_g174653.Grayscale = In_Grayscale3_g174653;
				Data3_g174653.Luminosity = In_Luminosity3_g174653;
				Data3_g174653.AlphaClip = In_AlphaClip3_g174653;
				Data3_g174653.AlphaFade = In_AlphaFade3_g174653;
				Data3_g174653.Translucency = In_Translucency3_g174653;
				Data3_g174653.Transmission = In_Transmission3_g174653;
				Data3_g174653.Thickness = In_Thickness3_g174653;
				Data3_g174653.Diffusion = In_Diffusion3_g174653;
				TVEVisualData Data4_g174662 = Data3_g174653;
				float Out_Dummy4_g174662 = 0;
				float3 Out_Albedo4_g174662 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174662 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174662 = float2( 0,0 );
				float3 Out_NormalWS4_g174662 = float3( 0,0,0 );
				float4 Out_Shader4_g174662 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174662 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174662 = 0;
				float Out_Grayscale4_g174662 = 0;
				float Out_Luminosity4_g174662 = 0;
				float Out_AlphaClip4_g174662 = 0;
				float Out_AlphaFade4_g174662 = 0;
				float3 Out_Translucency4_g174662 = float3( 0,0,0 );
				float Out_Transmission4_g174662 = 0;
				float Out_Thickness4_g174662 = 0;
				float Out_Diffusion4_g174662 = 0;
				Out_Dummy4_g174662 = Data4_g174662.Dummy;
				Out_Albedo4_g174662 = Data4_g174662.Albedo;
				Out_AlbedoRaw4_g174662 = Data4_g174662.AlbedoRaw;
				Out_NormalTS4_g174662 = Data4_g174662.NormalTS;
				Out_NormalWS4_g174662 = Data4_g174662.NormalWS;
				Out_Shader4_g174662 = Data4_g174662.Shader;
				Out_Emissive4_g174662= Data4_g174662.Emissive;
				Out_MultiMask4_g174662 = Data4_g174662.MultiMask;
				Out_Grayscale4_g174662 = Data4_g174662.Grayscale;
				Out_Luminosity4_g174662= Data4_g174662.Luminosity;
				Out_AlphaClip4_g174662 = Data4_g174662.AlphaClip;
				Out_AlphaFade4_g174662 = Data4_g174662.AlphaFade;
				Out_Translucency4_g174662 = Data4_g174662.Translucency;
				Out_Transmission4_g174662 = Data4_g174662.Transmission;
				Out_Thickness4_g174662 = Data4_g174662.Thickness;
				Out_Diffusion4_g174662 = Data4_g174662.Diffusion;
				half3 Visual_Albedo127_g174660 = Out_Albedo4_g174662;
				TVEModelData Data15_g174668 = Data16_g164566;
				float Out_Dummy15_g174668 = 0;
				float3 Out_PositionWS15_g174668 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174668 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174668 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174668 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174668 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174668 = float3( 0,0,0 );
				float4 Out_VertexData15_g174668 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174668 = float4( 0,0,0,0 );
				Out_Dummy15_g174668 = Data15_g174668.Dummy;
				Out_PositionWS15_g174668 = Data15_g174668.PositionWS;
				Out_PositionWO15_g174668 = Data15_g174668.PositionWO;
				Out_PivotWS15_g174668 = Data15_g174668.PivotWS;
				Out_PivotWO15_g174668 = Data15_g174668.PivotWO;
				Out_NormalWS15_g174668 = Data15_g174668.NormalWS;
				Out_ViewDirWS15_g174668 = Data15_g174668.ViewDirWS;
				Out_VertexData15_g174668 = Data15_g174668.VertexData;
				Out_BoundsData15_g174668 = Data15_g174668.BoundsData;
				half3 Model_PositionWO224_g174660 = Out_PositionWO15_g174668;
				half3 Model_PivotWO239_g174660 = Out_PivotWO15_g174668;
				float3 lerpResult242_g174660 = lerp( Model_PositionWO224_g174660 , Model_PivotWO239_g174660 , _VariationNoisePivotValue);
				float4 tex3DNode60_g174664 = SAMPLE_TEXTURE3D( _NoiseTex3D, sampler_Linear_Repeat, ( lerpResult242_g174660 * ( _VariationNoiseTillingValue * 0.01 ) ) );
				float clampResult17_g174666 = clamp( tex3DNode60_g174664.r , 0.0001 , 0.9999 );
				float temp_output_7_0_g174667 = _VariationNoiseRemap.x;
				float temp_output_10_0_g174667 = ( _VariationNoiseRemap.y - temp_output_7_0_g174667 );
				float temp_output_238_0_g174660 = saturate( ( ( clampResult17_g174666 - temp_output_7_0_g174667 ) / ( temp_output_10_0_g174667 + 0.0001 ) ) );
				half Variaton_NoiseMask82_g174660 = temp_output_238_0_g174660;
				half Variaton_Mask200_g174660 = Variaton_NoiseMask82_g174660;
				float3 lerpResult75_g174660 = lerp( (_VariationColorTwo).rgb , (_VariationColorOne).rgb , Variaton_Mask200_g174660);
				float temp_output_162_11_g174660 = Out_MultiMask4_g174662;
				half Visual_MultiMask196_g174660 = temp_output_162_11_g174660;
				float lerpResult190_g174660 = lerp( 1.0 , Visual_MultiMask196_g174660 , _VariationMultiValue);
				half Variaton_MultiMask194_g174660 = lerpResult190_g174660;
				float3 lerpResult186_g174660 = lerp( Visual_Albedo127_g174660 , ( Visual_Albedo127_g174660 * lerpResult75_g174660 ) , ( _VariationIntensityValue * Variaton_MultiMask194_g174660 ));
				#ifdef TVE_VARIATION
				float3 staticSwitch171_g174660 = lerpResult186_g174660;
				#else
				float3 staticSwitch171_g174660 = Visual_Albedo127_g174660;
				#endif
				half3 Final_Albedo160_g174660 = staticSwitch171_g174660;
				float3 In_Albedo3_g174663 = Final_Albedo160_g174660;
				float3 In_AlbedoRaw3_g174663 = Final_Albedo160_g174660;
				float2 In_NormalTS3_g174663 = Out_NormalTS4_g174662;
				float3 In_NormalWS3_g174663 = Out_NormalWS4_g174662;
				float4 In_Shader3_g174663 = Out_Shader4_g174662;
				float4 In_Emissive3_g174663 = Out_Emissive4_g174662;
				float3 temp_output_3_0_g174661 = Final_Albedo160_g174660;
				float dotResult20_g174661 = dot( temp_output_3_0_g174661 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale164_g174660 = dotResult20_g174661;
				float In_Grayscale3_g174663 = Final_Grayscale164_g174660;
				float clampResult180_g174660 = clamp( saturate( ( Final_Grayscale164_g174660 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity181_g174660 = clampResult180_g174660;
				float In_Luminosity3_g174663 = Final_Luminosity181_g174660;
				float In_MultiMask3_g174663 = temp_output_162_11_g174660;
				float In_AlphaClip3_g174663 = Out_AlphaClip4_g174662;
				float In_AlphaFade3_g174663 = Out_AlphaFade4_g174662;
				float3 In_Translucency3_g174663 = Out_Translucency4_g174662;
				float In_Transmission3_g174663 = Out_Transmission4_g174662;
				float In_Thickness3_g174663 = Out_Thickness4_g174662;
				float In_Diffusion3_g174663 = Out_Diffusion4_g174662;
				Data3_g174663.Dummy = In_Dummy3_g174663;
				Data3_g174663.Albedo = In_Albedo3_g174663;
				Data3_g174663.AlbedoRaw = In_AlbedoRaw3_g174663;
				Data3_g174663.NormalTS = In_NormalTS3_g174663;
				Data3_g174663.NormalWS = In_NormalWS3_g174663;
				Data3_g174663.Shader = In_Shader3_g174663;
				Data3_g174663.Emissive= In_Emissive3_g174663;
				Data3_g174663.MultiMask = In_MultiMask3_g174663;
				Data3_g174663.Grayscale = In_Grayscale3_g174663;
				Data3_g174663.Luminosity = In_Luminosity3_g174663;
				Data3_g174663.AlphaClip = In_AlphaClip3_g174663;
				Data3_g174663.AlphaFade = In_AlphaFade3_g174663;
				Data3_g174663.Translucency = In_Translucency3_g174663;
				Data3_g174663.Transmission = In_Transmission3_g174663;
				Data3_g174663.Thickness = In_Thickness3_g174663;
				Data3_g174663.Diffusion = In_Diffusion3_g174663;
				TVEVisualData Data4_g174692 = Data3_g174663;
				float Out_Dummy4_g174692 = 0;
				float3 Out_Albedo4_g174692 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174692 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174692 = float2( 0,0 );
				float3 Out_NormalWS4_g174692 = float3( 0,0,0 );
				float4 Out_Shader4_g174692 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174692 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174692 = 0;
				float Out_Grayscale4_g174692 = 0;
				float Out_Luminosity4_g174692 = 0;
				float Out_AlphaClip4_g174692 = 0;
				float Out_AlphaFade4_g174692 = 0;
				float3 Out_Translucency4_g174692 = float3( 0,0,0 );
				float Out_Transmission4_g174692 = 0;
				float Out_Thickness4_g174692 = 0;
				float Out_Diffusion4_g174692 = 0;
				Out_Dummy4_g174692 = Data4_g174692.Dummy;
				Out_Albedo4_g174692 = Data4_g174692.Albedo;
				Out_AlbedoRaw4_g174692 = Data4_g174692.AlbedoRaw;
				Out_NormalTS4_g174692 = Data4_g174692.NormalTS;
				Out_NormalWS4_g174692 = Data4_g174692.NormalWS;
				Out_Shader4_g174692 = Data4_g174692.Shader;
				Out_Emissive4_g174692= Data4_g174692.Emissive;
				Out_MultiMask4_g174692 = Data4_g174692.MultiMask;
				Out_Grayscale4_g174692 = Data4_g174692.Grayscale;
				Out_Luminosity4_g174692= Data4_g174692.Luminosity;
				Out_AlphaClip4_g174692 = Data4_g174692.AlphaClip;
				Out_AlphaFade4_g174692 = Data4_g174692.AlphaFade;
				Out_Translucency4_g174692 = Data4_g174692.Translucency;
				Out_Transmission4_g174692 = Data4_g174692.Transmission;
				Out_Thickness4_g174692 = Data4_g174692.Thickness;
				Out_Diffusion4_g174692 = Data4_g174692.Diffusion;
				half3 Visual_Albedo139_g174670 = Out_Albedo4_g174692;
				float temp_output_200_12_g174670 = Out_Grayscale4_g174692;
				half Visual_Grayscale150_g174670 = temp_output_200_12_g174670;
				float3 temp_cast_46 = (Visual_Grayscale150_g174670).xxx;
				TVEGlobalData Data15_g174671 = Data204_g173897;
				float Out_Dummy15_g174671 = 0;
				float4 Out_CoatParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174671 = float4( 0,0,0,0 );
				Out_Dummy15_g174671 = Data15_g174671.Dummy;
				Out_CoatParams15_g174671 = Data15_g174671.CoatParams;
				Out_PaintParams15_g174671 = Data15_g174671.PaintParams;
				Out_GlowParams15_g174671 = Data15_g174671.GlowParams;
				Out_AtmoParams15_g174671= Data15_g174671.AtmoParams;
				Out_FadeParams15_g174671= Data15_g174671.FadeParams;
				Out_FormParams15_g174671 = Data15_g174671.FormParams;
				Out_LandParams15_g174671 = Data15_g174671.LandParams;
				Out_WindParams15_g174671 = Data15_g174671.WindParams;
				Out_PushParams15_g174671 = Data15_g174671.PushParams;
				half4 Global_PaintParams209_g174670 = Out_PaintParams15_g174671;
				float temp_output_6_0_g174672 = ( saturate( (Global_PaintParams209_g174670).w ) * TVE_IsEnabled );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174672 = ( temp_output_6_0_g174672 + ( _TintingElementMode * 0.0 ) );
				#else
				float staticSwitch14_g174672 = temp_output_6_0_g174672;
				#endif
				#ifdef TVE_TINTING_ELEMENT
				float staticSwitch283_g174670 = staticSwitch14_g174672;
				#else
				float staticSwitch283_g174670 = 1.0;
				#endif
				half Tinting_GlobalValue285_g174670 = staticSwitch283_g174670;
				float3 lerpResult368_g174670 = lerp( Visual_Albedo139_g174670 , temp_cast_46 , ( Tinting_GlobalValue285_g174670 * _TintingGrayValue ));
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174690 = 2.0;
				#else
				float staticSwitch1_g174690 = 4.594794;
				#endif
				float3 temp_cast_47 = (1.0).xxx;
				#ifdef TVE_TINTING_ELEMENT
				float3 staticSwitch288_g174670 = (Global_PaintParams209_g174670).xyz;
				#else
				float3 staticSwitch288_g174670 = temp_cast_47;
				#endif
				half3 Tinting_ColorGlobal290_g174670 = staticSwitch288_g174670;
				float temp_output_200_11_g174670 = Out_MultiMask4_g174692;
				half Visual_MultiMask181_g174670 = temp_output_200_11_g174670;
				float lerpResult147_g174670 = lerp( 1.0 , Visual_MultiMask181_g174670 , _TintingMultiValue);
				half Tinting_MutiMask121_g174670 = lerpResult147_g174670;
				half Tinting_TexMask385_g174670 = 1.0;
				float temp_output_200_15_g174670 = Out_Luminosity4_g174692;
				half Visual_Luminosity257_g174670 = temp_output_200_15_g174670;
				float clampResult17_g174684 = clamp( Visual_Luminosity257_g174670 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174683 = _TintingLumaRemap.x;
				float temp_output_10_0_g174683 = ( _TintingLumaRemap.y - temp_output_7_0_g174683 );
				float lerpResult228_g174670 = lerp( 1.0 , saturate( ( ( clampResult17_g174684 - temp_output_7_0_g174683 ) / ( temp_output_10_0_g174683 + 0.0001 ) ) ) , _TintingLumaValue);
				half Tinting_LumaMask153_g174670 = lerpResult228_g174670;
				TVEModelData Data15_g174693 = Data16_g164566;
				float Out_Dummy15_g174693 = 0;
				float3 Out_PositionWS15_g174693 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174693 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174693 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174693 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174693 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174693 = float3( 0,0,0 );
				float4 Out_VertexData15_g174693 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174693 = float4( 0,0,0,0 );
				Out_Dummy15_g174693 = Data15_g174693.Dummy;
				Out_PositionWS15_g174693 = Data15_g174693.PositionWS;
				Out_PositionWO15_g174693 = Data15_g174693.PositionWO;
				Out_PivotWS15_g174693 = Data15_g174693.PivotWS;
				Out_PivotWO15_g174693 = Data15_g174693.PivotWO;
				Out_NormalWS15_g174693 = Data15_g174693.NormalWS;
				Out_ViewDirWS15_g174693 = Data15_g174693.ViewDirWS;
				Out_VertexData15_g174693 = Data15_g174693.VertexData;
				Out_BoundsData15_g174693 = Data15_g174693.BoundsData;
				half4 Model_VertexMasks307_g174670 = Out_VertexData15_g174693;
				float4 break311_g174670 = Model_VertexMasks307_g174670;
				float4 break33_g174676 = _tinting_vert_mode;
				float temp_output_30_0_g174676 = ( break311_g174670.x * break33_g174676.x );
				float temp_output_29_0_g174676 = ( break311_g174670.y * break33_g174676.y );
				float temp_output_31_0_g174676 = ( break311_g174670.z * break33_g174676.z );
				float temp_output_28_0_g174676 = ( temp_output_30_0_g174676 + temp_output_29_0_g174676 + temp_output_31_0_g174676 + ( break311_g174670.w * break33_g174676.w ) );
				float clampResult17_g174682 = clamp( temp_output_28_0_g174676 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174681 = _TintingMeshRemap.x;
				float temp_output_10_0_g174681 = ( _TintingMeshRemap.y - temp_output_7_0_g174681 );
				float lerpResult370_g174670 = lerp( 1.0 , saturate( ( ( clampResult17_g174682 - temp_output_7_0_g174681 ) / ( temp_output_10_0_g174681 + 0.0001 ) ) ) , _TintingMeshValue);
				float temp_output_6_0_g174685 = lerpResult370_g174670;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174685 = ( temp_output_6_0_g174685 + ( _TintingMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174685 = temp_output_6_0_g174685;
				#endif
				float temp_output_333_0_g174670 = staticSwitch14_g174685;
				half Tinting_VertMask309_g174670 = temp_output_333_0_g174670;
				half Tinting_NoiseMask213_g174670 = 1.0;
				half Custom_Mask345_g174670 = 1.0;
				float temp_output_7_0_g174679 = _TintingBlendRemap.x;
				float temp_output_10_0_g174679 = ( _TintingBlendRemap.y - temp_output_7_0_g174679 );
				half Tinting_Mask242_g174670 = ( saturate( ( ( ( _TintingIntensityValue * Tinting_MutiMask121_g174670 * Tinting_TexMask385_g174670 * Tinting_LumaMask153_g174670 * Tinting_VertMask309_g174670 * Tinting_NoiseMask213_g174670 * Tinting_GlobalValue285_g174670 * Custom_Mask345_g174670 ) - temp_output_7_0_g174679 ) / ( temp_output_10_0_g174679 + 0.0001 ) ) ) * TVE_IsEnabled );
				float3 lerpResult90_g174670 = lerp( Visual_Albedo139_g174670 , ( lerpResult368_g174670 * staticSwitch1_g174690 * Tinting_ColorGlobal290_g174670 * (_TintingColor).rgb ) , Tinting_Mask242_g174670);
				#ifdef TVE_TINTING
				float3 staticSwitch286_g174670 = lerpResult90_g174670;
				#else
				float3 staticSwitch286_g174670 = Visual_Albedo139_g174670;
				#endif
				half3 Final_Albedo97_g174670 = staticSwitch286_g174670;
				float3 In_Albedo3_g174691 = Final_Albedo97_g174670;
				float3 In_AlbedoRaw3_g174691 = Out_AlbedoRaw4_g174692;
				float2 In_NormalTS3_g174691 = Out_NormalTS4_g174692;
				float3 In_NormalWS3_g174691 = Out_NormalWS4_g174692;
				float4 In_Shader3_g174691 = Out_Shader4_g174692;
				float4 In_Emissive3_g174691 = Out_Emissive4_g174692;
				float In_Grayscale3_g174691 = temp_output_200_12_g174670;
				float In_Luminosity3_g174691 = temp_output_200_15_g174670;
				float In_MultiMask3_g174691 = temp_output_200_11_g174670;
				float In_AlphaClip3_g174691 = Out_AlphaClip4_g174692;
				float In_AlphaFade3_g174691 = Out_AlphaFade4_g174692;
				float3 In_Translucency3_g174691 = Out_Translucency4_g174692;
				float In_Transmission3_g174691 = Out_Transmission4_g174692;
				float In_Thickness3_g174691 = Out_Thickness4_g174692;
				float In_Diffusion3_g174691 = Out_Diffusion4_g174692;
				Data3_g174691.Dummy = In_Dummy3_g174691;
				Data3_g174691.Albedo = In_Albedo3_g174691;
				Data3_g174691.AlbedoRaw = In_AlbedoRaw3_g174691;
				Data3_g174691.NormalTS = In_NormalTS3_g174691;
				Data3_g174691.NormalWS = In_NormalWS3_g174691;
				Data3_g174691.Shader = In_Shader3_g174691;
				Data3_g174691.Emissive= In_Emissive3_g174691;
				Data3_g174691.MultiMask = In_MultiMask3_g174691;
				Data3_g174691.Grayscale = In_Grayscale3_g174691;
				Data3_g174691.Luminosity = In_Luminosity3_g174691;
				Data3_g174691.AlphaClip = In_AlphaClip3_g174691;
				Data3_g174691.AlphaFade = In_AlphaFade3_g174691;
				Data3_g174691.Translucency = In_Translucency3_g174691;
				Data3_g174691.Transmission = In_Transmission3_g174691;
				Data3_g174691.Thickness = In_Thickness3_g174691;
				Data3_g174691.Diffusion = In_Diffusion3_g174691;
				TVEVisualData Data4_g174696 = Data3_g174691;
				float Out_Dummy4_g174696 = 0;
				float3 Out_Albedo4_g174696 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174696 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174696 = float2( 0,0 );
				float3 Out_NormalWS4_g174696 = float3( 0,0,0 );
				float4 Out_Shader4_g174696 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174696 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174696 = 0;
				float Out_Grayscale4_g174696 = 0;
				float Out_Luminosity4_g174696 = 0;
				float Out_AlphaClip4_g174696 = 0;
				float Out_AlphaFade4_g174696 = 0;
				float3 Out_Translucency4_g174696 = float3( 0,0,0 );
				float Out_Transmission4_g174696 = 0;
				float Out_Thickness4_g174696 = 0;
				float Out_Diffusion4_g174696 = 0;
				Out_Dummy4_g174696 = Data4_g174696.Dummy;
				Out_Albedo4_g174696 = Data4_g174696.Albedo;
				Out_AlbedoRaw4_g174696 = Data4_g174696.AlbedoRaw;
				Out_NormalTS4_g174696 = Data4_g174696.NormalTS;
				Out_NormalWS4_g174696 = Data4_g174696.NormalWS;
				Out_Shader4_g174696 = Data4_g174696.Shader;
				Out_Emissive4_g174696= Data4_g174696.Emissive;
				Out_MultiMask4_g174696 = Data4_g174696.MultiMask;
				Out_Grayscale4_g174696 = Data4_g174696.Grayscale;
				Out_Luminosity4_g174696= Data4_g174696.Luminosity;
				Out_AlphaClip4_g174696 = Data4_g174696.AlphaClip;
				Out_AlphaFade4_g174696 = Data4_g174696.AlphaFade;
				Out_Translucency4_g174696 = Data4_g174696.Translucency;
				Out_Transmission4_g174696 = Data4_g174696.Transmission;
				Out_Thickness4_g174696 = Data4_g174696.Thickness;
				Out_Diffusion4_g174696 = Data4_g174696.Diffusion;
				half3 Visual_Albedo292_g174694 = Out_Albedo4_g174696;
				float temp_output_280_12_g174694 = Out_Grayscale4_g174696;
				half Visual_Grayscale308_g174694 = temp_output_280_12_g174694;
				float3 temp_cast_48 = (Visual_Grayscale308_g174694).xxx;
				TVEGlobalData Data15_g174695 = Data204_g173897;
				float Out_Dummy15_g174695 = 0;
				float4 Out_CoatParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174695 = float4( 0,0,0,0 );
				Out_Dummy15_g174695 = Data15_g174695.Dummy;
				Out_CoatParams15_g174695 = Data15_g174695.CoatParams;
				Out_PaintParams15_g174695 = Data15_g174695.PaintParams;
				Out_GlowParams15_g174695 = Data15_g174695.GlowParams;
				Out_AtmoParams15_g174695= Data15_g174695.AtmoParams;
				Out_FadeParams15_g174695= Data15_g174695.FadeParams;
				Out_FormParams15_g174695 = Data15_g174695.FormParams;
				Out_LandParams15_g174695 = Data15_g174695.LandParams;
				Out_WindParams15_g174695 = Data15_g174695.WindParams;
				Out_PushParams15_g174695 = Data15_g174695.PushParams;
				half4 Global_AtmoParams314_g174694 = Out_AtmoParams15_g174695;
				#ifdef TVE_DRYNESS_ELEMENT
				float staticSwitch351_g174694 = ( (Global_AtmoParams314_g174694).x * TVE_IsEnabled );
				#else
				float staticSwitch351_g174694 = 1.0;
				#endif
				half Dryness_GlobalMask352_g174694 = staticSwitch351_g174694;
				float3 lerpResult485_g174694 = lerp( Visual_Albedo292_g174694 , temp_cast_48 , ( Dryness_GlobalMask352_g174694 * _DrynessGrayValue ));
				half3 hsvTorgb58_g174715 = RGBToHSV( lerpResult485_g174694 );
				half3 hsvTorgb61_g174715 = HSVToRGB( half3(( hsvTorgb58_g174715.x + _DrynessShiftValue ),hsvTorgb58_g174715.y,hsvTorgb58_g174715.z) );
				#ifdef TVE_DRYNESS_SHIFT
				float3 staticSwitch499_g174694 = hsvTorgb61_g174715;
				#else
				float3 staticSwitch499_g174694 = lerpResult485_g174694;
				#endif
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174714 = 2.0;
				#else
				float staticSwitch1_g174714 = 4.594794;
				#endif
				half Dryness_TexMask478_g174694 = 1.0;
				float temp_output_280_11_g174694 = Out_MultiMask4_g174696;
				half Visual_MultiMask310_g174694 = temp_output_280_11_g174694;
				float lerpResult283_g174694 = lerp( 1.0 , Visual_MultiMask310_g174694 , _DrynessMultiValue);
				half Dryness_MultiMask302_g174694 = lerpResult283_g174694;
				float temp_output_280_15_g174694 = Out_Luminosity4_g174696;
				half Visual_Luminosity309_g174694 = temp_output_280_15_g174694;
				float clampResult17_g174710 = clamp( Visual_Luminosity309_g174694 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174709 = _DrynessLumaRemap.x;
				float temp_output_10_0_g174709 = ( _DrynessLumaRemap.y - temp_output_7_0_g174709 );
				float lerpResult295_g174694 = lerp( 1.0 , saturate( ( ( clampResult17_g174710 - temp_output_7_0_g174709 ) / ( temp_output_10_0_g174709 + 0.0001 ) ) ) , _DrynessLumaValue);
				half Dryness_LumaMask301_g174694 = lerpResult295_g174694;
				TVEModelData Data15_g174716 = Data16_g164566;
				float Out_Dummy15_g174716 = 0;
				float3 Out_PositionWS15_g174716 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174716 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174716 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174716 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174716 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174716 = float3( 0,0,0 );
				float4 Out_VertexData15_g174716 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174716 = float4( 0,0,0,0 );
				Out_Dummy15_g174716 = Data15_g174716.Dummy;
				Out_PositionWS15_g174716 = Data15_g174716.PositionWS;
				Out_PositionWO15_g174716 = Data15_g174716.PositionWO;
				Out_PivotWS15_g174716 = Data15_g174716.PivotWS;
				Out_PivotWO15_g174716 = Data15_g174716.PivotWO;
				Out_NormalWS15_g174716 = Data15_g174716.NormalWS;
				Out_ViewDirWS15_g174716 = Data15_g174716.ViewDirWS;
				Out_VertexData15_g174716 = Data15_g174716.VertexData;
				Out_BoundsData15_g174716 = Data15_g174716.BoundsData;
				half4 Model_VertexMasks386_g174694 = Out_VertexData15_g174716;
				float4 break375_g174694 = Model_VertexMasks386_g174694;
				float4 break33_g174703 = _dryness_vert_mode;
				float temp_output_30_0_g174703 = ( break375_g174694.x * break33_g174703.x );
				float temp_output_29_0_g174703 = ( break375_g174694.y * break33_g174703.y );
				float temp_output_31_0_g174703 = ( break375_g174694.z * break33_g174703.z );
				float temp_output_28_0_g174703 = ( temp_output_30_0_g174703 + temp_output_29_0_g174703 + temp_output_31_0_g174703 + ( break375_g174694.w * break33_g174703.w ) );
				float clampResult17_g174704 = clamp( temp_output_28_0_g174703 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174705 = _DrynessMeshRemap.x;
				float temp_output_10_0_g174705 = ( _DrynessMeshRemap.y - temp_output_7_0_g174705 );
				float lerpResult452_g174694 = lerp( 1.0 , saturate( ( ( clampResult17_g174704 - temp_output_7_0_g174705 ) / ( temp_output_10_0_g174705 + 0.0001 ) ) ) , _DrynessMeshValue);
				float temp_output_6_0_g174711 = lerpResult452_g174694;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174711 = ( temp_output_6_0_g174711 + ( _DrynessMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174711 = temp_output_6_0_g174711;
				#endif
				float temp_output_448_0_g174694 = staticSwitch14_g174711;
				half Dryness_VertMask378_g174694 = temp_output_448_0_g174694;
				half Dryness_MaskNoise291_g174694 = 1.0;
				half Custom_Mask411_g174694 = 1.0;
				float temp_output_7_0_g174708 = _DrynessBlendRemap.x;
				float temp_output_10_0_g174708 = ( _DrynessBlendRemap.y - temp_output_7_0_g174708 );
				half Dryness_Mask329_g174694 = saturate( ( ( ( _DrynessIntensityValue * Dryness_TexMask478_g174694 * Dryness_MultiMask302_g174694 * Dryness_LumaMask301_g174694 * Dryness_VertMask378_g174694 * Dryness_MaskNoise291_g174694 * Dryness_GlobalMask352_g174694 * Custom_Mask411_g174694 ) - temp_output_7_0_g174708 ) / ( temp_output_10_0_g174708 + 0.0001 ) ) );
				float3 lerpResult336_g174694 = lerp( Visual_Albedo292_g174694 , ( staticSwitch499_g174694 * staticSwitch1_g174714 * (_DrynessColor).rgb ) , Dryness_Mask329_g174694);
				#ifdef TVE_DRYNESS
				float3 staticSwitch356_g174694 = lerpResult336_g174694;
				#else
				float3 staticSwitch356_g174694 = Visual_Albedo292_g174694;
				#endif
				half3 Final_Albedo331_g174694 = staticSwitch356_g174694;
				float3 In_Albedo3_g174697 = Final_Albedo331_g174694;
				float3 In_AlbedoRaw3_g174697 = Out_AlbedoRaw4_g174696;
				float2 In_NormalTS3_g174697 = Out_NormalTS4_g174696;
				float3 In_NormalWS3_g174697 = Out_NormalWS4_g174696;
				half4 Visual_Shader415_g174694 = Out_Shader4_g174696;
				float4 break438_g174694 = Visual_Shader415_g174694;
				float4 appendResult439_g174694 = (float4(break438_g174694.x , break438_g174694.y , break438_g174694.z , ( break438_g174694.w * _DrynessSmoothnessValue )));
				float4 lerpResult427_g174694 = lerp( Visual_Shader415_g174694 , appendResult439_g174694 , Dryness_Mask329_g174694);
				#ifdef TVE_DRYNESS
				float4 staticSwitch426_g174694 = lerpResult427_g174694;
				#else
				float4 staticSwitch426_g174694 = Visual_Shader415_g174694;
				#endif
				half4 Final_Shader433_g174694 = staticSwitch426_g174694;
				float4 In_Shader3_g174697 = Final_Shader433_g174694;
				float4 In_Emissive3_g174697 = Out_Emissive4_g174696;
				float In_Grayscale3_g174697 = temp_output_280_12_g174694;
				float In_Luminosity3_g174697 = temp_output_280_15_g174694;
				float In_MultiMask3_g174697 = temp_output_280_11_g174694;
				float In_AlphaClip3_g174697 = Out_AlphaClip4_g174696;
				float In_AlphaFade3_g174697 = Out_AlphaFade4_g174696;
				float3 In_Translucency3_g174697 = Out_Translucency4_g174696;
				half Visual_Transmission416_g174694 = Out_Transmission4_g174696;
				float lerpResult421_g174694 = lerp( Visual_Transmission416_g174694 , ( Visual_Transmission416_g174694 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g174694);
				#ifdef TVE_DRYNESS
				float staticSwitch418_g174694 = lerpResult421_g174694;
				#else
				float staticSwitch418_g174694 = Visual_Transmission416_g174694;
				#endif
				half Final_Transmission425_g174694 = staticSwitch418_g174694;
				float In_Transmission3_g174697 = Final_Transmission425_g174694;
				float In_Thickness3_g174697 = Out_Thickness4_g174696;
				float In_Diffusion3_g174697 = Out_Diffusion4_g174696;
				Data3_g174697.Dummy = In_Dummy3_g174697;
				Data3_g174697.Albedo = In_Albedo3_g174697;
				Data3_g174697.AlbedoRaw = In_AlbedoRaw3_g174697;
				Data3_g174697.NormalTS = In_NormalTS3_g174697;
				Data3_g174697.NormalWS = In_NormalWS3_g174697;
				Data3_g174697.Shader = In_Shader3_g174697;
				Data3_g174697.Emissive= In_Emissive3_g174697;
				Data3_g174697.MultiMask = In_MultiMask3_g174697;
				Data3_g174697.Grayscale = In_Grayscale3_g174697;
				Data3_g174697.Luminosity = In_Luminosity3_g174697;
				Data3_g174697.AlphaClip = In_AlphaClip3_g174697;
				Data3_g174697.AlphaFade = In_AlphaFade3_g174697;
				Data3_g174697.Translucency = In_Translucency3_g174697;
				Data3_g174697.Transmission = In_Transmission3_g174697;
				Data3_g174697.Thickness = In_Thickness3_g174697;
				Data3_g174697.Diffusion = In_Diffusion3_g174697;
				TVEVisualData Data4_g174718 = Data3_g174697;
				float Out_Dummy4_g174718 = 0;
				float3 Out_Albedo4_g174718 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174718 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174718 = float2( 0,0 );
				float3 Out_NormalWS4_g174718 = float3( 0,0,0 );
				float4 Out_Shader4_g174718 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174718 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174718 = 0;
				float Out_Grayscale4_g174718 = 0;
				float Out_Luminosity4_g174718 = 0;
				float Out_AlphaClip4_g174718 = 0;
				float Out_AlphaFade4_g174718 = 0;
				float3 Out_Translucency4_g174718 = float3( 0,0,0 );
				float Out_Transmission4_g174718 = 0;
				float Out_Thickness4_g174718 = 0;
				float Out_Diffusion4_g174718 = 0;
				Out_Dummy4_g174718 = Data4_g174718.Dummy;
				Out_Albedo4_g174718 = Data4_g174718.Albedo;
				Out_AlbedoRaw4_g174718 = Data4_g174718.AlbedoRaw;
				Out_NormalTS4_g174718 = Data4_g174718.NormalTS;
				Out_NormalWS4_g174718 = Data4_g174718.NormalWS;
				Out_Shader4_g174718 = Data4_g174718.Shader;
				Out_Emissive4_g174718= Data4_g174718.Emissive;
				Out_MultiMask4_g174718 = Data4_g174718.MultiMask;
				Out_Grayscale4_g174718 = Data4_g174718.Grayscale;
				Out_Luminosity4_g174718= Data4_g174718.Luminosity;
				Out_AlphaClip4_g174718 = Data4_g174718.AlphaClip;
				Out_AlphaFade4_g174718 = Data4_g174718.AlphaFade;
				Out_Translucency4_g174718 = Data4_g174718.Translucency;
				Out_Transmission4_g174718 = Data4_g174718.Transmission;
				Out_Thickness4_g174718 = Data4_g174718.Thickness;
				Out_Diffusion4_g174718 = Data4_g174718.Diffusion;
				half3 Visual_Albedo127_g174717 = Out_Albedo4_g174718;
				float4 vertexToFrag24_g174669 = IN.ase_texcoord13;
				half4 Interp_Data1003 = vertexToFrag24_g174669;
				float clampResult208_g174717 = clamp( (Interp_Data1003).w , 0.0 , 0.09 );
				#ifdef TVE_MOTION_HIGHLIGHT
				float3 staticSwitch214_g174717 = ( Visual_Albedo127_g174717 + ( ( Visual_Albedo127_g174717 * Visual_Albedo127_g174717 * 200.0 * _motion_highlight_color ) * clampResult208_g174717 ) );
				#else
				float3 staticSwitch214_g174717 = Visual_Albedo127_g174717;
				#endif
				half3 Final_Albedo160_g174717 = staticSwitch214_g174717;
				float3 In_Albedo3_g174719 = Final_Albedo160_g174717;
				float3 In_AlbedoRaw3_g174719 = Out_AlbedoRaw4_g174718;
				float2 In_NormalTS3_g174719 = Out_NormalTS4_g174718;
				float3 In_NormalWS3_g174719 = Out_NormalWS4_g174718;
				float4 In_Shader3_g174719 = Out_Shader4_g174718;
				float4 In_Emissive3_g174719 = Out_Emissive4_g174718;
				float In_Grayscale3_g174719 = Out_Grayscale4_g174718;
				float In_Luminosity3_g174719 = Out_Luminosity4_g174718;
				float In_MultiMask3_g174719 = Out_MultiMask4_g174718;
				float In_AlphaClip3_g174719 = Out_AlphaClip4_g174718;
				float In_AlphaFade3_g174719 = Out_AlphaFade4_g174718;
				float3 In_Translucency3_g174719 = Out_Translucency4_g174718;
				float In_Transmission3_g174719 = Out_Transmission4_g174718;
				float In_Thickness3_g174719 = Out_Thickness4_g174718;
				float In_Diffusion3_g174719 = Out_Diffusion4_g174718;
				Data3_g174719.Dummy = In_Dummy3_g174719;
				Data3_g174719.Albedo = In_Albedo3_g174719;
				Data3_g174719.AlbedoRaw = In_AlbedoRaw3_g174719;
				Data3_g174719.NormalTS = In_NormalTS3_g174719;
				Data3_g174719.NormalWS = In_NormalWS3_g174719;
				Data3_g174719.Shader = In_Shader3_g174719;
				Data3_g174719.Emissive= In_Emissive3_g174719;
				Data3_g174719.MultiMask = In_MultiMask3_g174719;
				Data3_g174719.Grayscale = In_Grayscale3_g174719;
				Data3_g174719.Luminosity = In_Luminosity3_g174719;
				Data3_g174719.AlphaClip = In_AlphaClip3_g174719;
				Data3_g174719.AlphaFade = In_AlphaFade3_g174719;
				Data3_g174719.Translucency = In_Translucency3_g174719;
				Data3_g174719.Transmission = In_Transmission3_g174719;
				Data3_g174719.Thickness = In_Thickness3_g174719;
				Data3_g174719.Diffusion = In_Diffusion3_g174719;
				TVEVisualData Data4_g174721 = Data3_g174719;
				float Out_Dummy4_g174721 = 0;
				float3 Out_Albedo4_g174721 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174721 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174721 = float2( 0,0 );
				float3 Out_NormalWS4_g174721 = float3( 0,0,0 );
				float4 Out_Shader4_g174721 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174721 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174721 = 0;
				float Out_Grayscale4_g174721 = 0;
				float Out_Luminosity4_g174721 = 0;
				float Out_AlphaClip4_g174721 = 0;
				float Out_AlphaFade4_g174721 = 0;
				float3 Out_Translucency4_g174721 = float3( 0,0,0 );
				float Out_Transmission4_g174721 = 0;
				float Out_Thickness4_g174721 = 0;
				float Out_Diffusion4_g174721 = 0;
				Out_Dummy4_g174721 = Data4_g174721.Dummy;
				Out_Albedo4_g174721 = Data4_g174721.Albedo;
				Out_AlbedoRaw4_g174721 = Data4_g174721.AlbedoRaw;
				Out_NormalTS4_g174721 = Data4_g174721.NormalTS;
				Out_NormalWS4_g174721 = Data4_g174721.NormalWS;
				Out_Shader4_g174721 = Data4_g174721.Shader;
				Out_Emissive4_g174721= Data4_g174721.Emissive;
				Out_MultiMask4_g174721 = Data4_g174721.MultiMask;
				Out_Grayscale4_g174721 = Data4_g174721.Grayscale;
				Out_Luminosity4_g174721= Data4_g174721.Luminosity;
				Out_AlphaClip4_g174721 = Data4_g174721.AlphaClip;
				Out_AlphaFade4_g174721 = Data4_g174721.AlphaFade;
				Out_Translucency4_g174721 = Data4_g174721.Translucency;
				Out_Transmission4_g174721 = Data4_g174721.Transmission;
				Out_Thickness4_g174721 = Data4_g174721.Thickness;
				Out_Diffusion4_g174721 = Data4_g174721.Diffusion;
				half3 Visual_Albedo127_g174720 = Out_Albedo4_g174721;
				float3 temp_output_622_0_g174720 = (_OverlayColor).rgb;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174724) = _OverlayAlbedoTex;
				float localFilterTexture19_g174753 = ( 0.0 );
				SamplerState SamplerDefault19_g174753 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174753 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174753 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174753 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174753 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174753 = SamplerDefault19_g174753;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174753 = SamplerDefault19_g174753;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174753 = SamplerPoint19_g174753;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174753 = SamplerLow19_g174753;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174753 = SamplerMedium19_g174753;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174753 = SamplerHigh19_g174753;
				#endif
				SamplerState Sampler238_g174724 = SS19_g174753;
				float4 temp_output_6_0_g174725 = _overlay_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174725 = ( temp_output_6_0_g174725 + ( ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174725 = temp_output_6_0_g174725;
				#endif
				half4 Overlay_Coords639_g174720 = staticSwitch14_g174725;
				float4 temp_output_37_0_g174724 = Overlay_Coords639_g174720;
				half4 Coords238_g174724 = temp_output_37_0_g174724;
				TVEModelData Data15_g174755 = Data16_g164566;
				float Out_Dummy15_g174755 = 0;
				float3 Out_PositionWS15_g174755 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174755 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174755 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174755 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174755 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174755 = float3( 0,0,0 );
				float4 Out_VertexData15_g174755 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174755 = float4( 0,0,0,0 );
				Out_Dummy15_g174755 = Data15_g174755.Dummy;
				Out_PositionWS15_g174755 = Data15_g174755.PositionWS;
				Out_PositionWO15_g174755 = Data15_g174755.PositionWO;
				Out_PivotWS15_g174755 = Data15_g174755.PivotWS;
				Out_PivotWO15_g174755 = Data15_g174755.PivotWO;
				Out_NormalWS15_g174755 = Data15_g174755.NormalWS;
				Out_ViewDirWS15_g174755 = Data15_g174755.ViewDirWS;
				Out_VertexData15_g174755 = Data15_g174755.VertexData;
				Out_BoundsData15_g174755 = Data15_g174755.BoundsData;
				half3 Model_PositionWO602_g174720 = Out_PositionWO15_g174755;
				float3 temp_output_279_0_g174724 = Model_PositionWO602_g174720;
				half3 WorldPosition238_g174724 = temp_output_279_0_g174724;
				half4 localSamplePlanar2D238_g174724 = SamplePlanar2D( Texture238_g174724 , Sampler238_g174724 , Coords238_g174724 , WorldPosition238_g174724 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174724) = _OverlayAlbedoTex;
				SamplerState Sampler246_g174724 = SS19_g174753;
				half4 Coords246_g174724 = temp_output_37_0_g174724;
				half3 WorldPosition246_g174724 = temp_output_279_0_g174724;
				half3 Model_NormalWS712_g174720 = Out_NormalWS15_g174755;
				float3 temp_output_280_0_g174724 = Model_NormalWS712_g174720;
				half3 WorldNormal246_g174724 = temp_output_280_0_g174724;
				half4 localSamplePlanar3D246_g174724 = SamplePlanar3D( Texture246_g174724 , Sampler246_g174724 , Coords246_g174724 , WorldPosition246_g174724 , WorldNormal246_g174724 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174724) = _OverlayAlbedoTex;
				SamplerState Sampler234_g174724 = SS19_g174753;
				float4 Coords234_g174724 = temp_output_37_0_g174724;
				float3 WorldPosition234_g174724 = temp_output_279_0_g174724;
				float4 localSampleStochastic2D234_g174724 = SampleStochastic2D( Texture234_g174724 , Sampler234_g174724 , Coords234_g174724 , WorldPosition234_g174724 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174724) = _OverlayAlbedoTex;
				SamplerState Sampler263_g174724 = SS19_g174753;
				half4 Coords263_g174724 = temp_output_37_0_g174724;
				half3 WorldPosition263_g174724 = temp_output_279_0_g174724;
				half3 WorldNormal263_g174724 = temp_output_280_0_g174724;
				half4 localSampleStochastic3D263_g174724 = SampleStochastic3D( Texture263_g174724 , Sampler263_g174724 , Coords263_g174724 , WorldPosition263_g174724 , WorldNormal263_g174724 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch676_g174720 = localSamplePlanar2D238_g174724;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch676_g174720 = localSamplePlanar3D246_g174724;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch676_g174720 = localSampleStochastic2D234_g174724;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch676_g174720 = localSampleStochastic3D263_g174724;
				#else
				float4 staticSwitch676_g174720 = localSamplePlanar2D238_g174724;
				#endif
				half3 Overlay_Albedo526_g174720 = (staticSwitch676_g174720).xyz;
				#ifdef TVE_OVERLAY_TEX
				float3 staticSwitch578_g174720 = ( temp_output_622_0_g174720 * Overlay_Albedo526_g174720 );
				#else
				float3 staticSwitch578_g174720 = temp_output_622_0_g174720;
				#endif
				float3 temp_output_6_0_g174731 = staticSwitch578_g174720;
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g174731 = ( temp_output_6_0_g174731 + ( _OverlayTextureMode * 0.0 ) );
				#else
				float3 staticSwitch14_g174731 = temp_output_6_0_g174731;
				#endif
				float3 temp_cast_49 = (0.0).xxx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174728) = _OverlayGlitterTexRT;
				SamplerState Sampler246_g174728 = sampler_Linear_Repeat;
				float4 appendResult863_g174720 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g174728 = appendResult863_g174720;
				half4 Coords246_g174728 = temp_output_37_0_g174728;
				float3 temp_output_279_0_g174728 = Model_PositionWO602_g174720;
				half3 WorldPosition246_g174728 = temp_output_279_0_g174728;
				float3 temp_output_280_0_g174728 = Model_NormalWS712_g174720;
				half3 WorldNormal246_g174728 = temp_output_280_0_g174728;
				half4 localSamplePlanar3D246_g174728 = SamplePlanar3D( Texture246_g174728 , Sampler246_g174728 , Coords246_g174728 , WorldPosition246_g174728 , WorldNormal246_g174728 );
				half Overlay_GlitterTex854_g174720 = (localSamplePlanar3D246_g174728).x;
				half3 Model_PositionWS879_g174720 = Out_PositionWS15_g174755;
				#ifdef TVE_OVERLAY_GLITTER
				float3 staticSwitch868_g174720 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g174720 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g174720 ) / _OverlayGlitterDistValue ) ) ) );
				#else
				float3 staticSwitch868_g174720 = temp_cast_49;
				#endif
				half3 Overlay_GlitterColor865_g174720 = staticSwitch868_g174720;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174745) = _OverlayMaskTex;
				SamplerState Sampler276_g174745 = sampler_Linear_Repeat;
				float4 temp_output_6_0_g174746 = _overlay_mask_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174746 = ( temp_output_6_0_g174746 + ( ( _OverlayMaskSampleMode + _OverlayMaskCoordMode + _OverlayMaskCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174746 = temp_output_6_0_g174746;
				#endif
				half4 Local_MaskCoords888_g174720 = staticSwitch14_g174746;
				float4 temp_output_37_0_g174745 = Local_MaskCoords888_g174720;
				half4 Coords276_g174745 = temp_output_37_0_g174745;
				half2 TexCoord276_g174745 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174745 = SampleMain( Texture276_g174745 , Sampler276_g174745 , Coords276_g174745 , TexCoord276_g174745 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174745) = _OverlayMaskTex;
				SamplerState Sampler275_g174745 = sampler_Linear_Repeat;
				half4 Coords275_g174745 = temp_output_37_0_g174745;
				half2 TexCoord275_g174745 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174745 = SampleExtra( Texture275_g174745 , Sampler275_g174745 , Coords275_g174745 , TexCoord275_g174745 );
				#if defined( TVE_OVERLAY_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch894_g174720 = localSampleMain276_g174745;
				#elif defined( TVE_OVERLAY_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch894_g174720 = localSampleExtra275_g174745;
				#else
				float4 staticSwitch894_g174720 = localSampleMain276_g174745;
				#endif
				half4 Local_MaskTex887_g174720 = staticSwitch894_g174720;
				float clampResult17_g174747 = clamp( (Local_MaskTex887_g174720).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174748 = _OverlayMaskRemap.x;
				float temp_output_10_0_g174748 = ( _OverlayMaskRemap.y - temp_output_7_0_g174748 );
				float lerpResult900_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174747 - temp_output_7_0_g174748 ) / ( temp_output_10_0_g174748 + 0.0001 ) ) ) , _OverlayMaskValue);
				half Overlay_TexMask908_g174720 = lerpResult900_g174720;
				float3 temp_output_739_21_g174720 = Out_NormalWS4_g174721;
				half3 Visual_NormalWS749_g174720 = temp_output_739_21_g174720;
				float clampResult17_g174741 = clamp( saturate( (Visual_NormalWS749_g174720).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174740 = _OverlayProjRemap.x;
				float temp_output_10_0_g174740 = ( _OverlayProjRemap.y - temp_output_7_0_g174740 );
				float lerpResult842_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174741 - temp_output_7_0_g174740 ) / ( temp_output_10_0_g174740 + 0.0001 ) ) ) , _OverlayProjValue);
				half Overlay_MaskProj457_g174720 = lerpResult842_g174720;
				float temp_output_739_15_g174720 = Out_Luminosity4_g174721;
				half Visual_Luminosity654_g174720 = temp_output_739_15_g174720;
				float clampResult17_g174743 = clamp( Visual_Luminosity654_g174720 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174742 = _OverlayLumaRemap.x;
				float temp_output_10_0_g174742 = ( _OverlayLumaRemap.y - temp_output_7_0_g174742 );
				float lerpResult587_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174743 - temp_output_7_0_g174742 ) / ( temp_output_10_0_g174742 + 0.0001 ) ) ) , _OverlayLumaValue);
				half Overlay_MaskLuma438_g174720 = lerpResult587_g174720;
				half4 Model_VertexMasks791_g174720 = Out_VertexData15_g174755;
				float4 break792_g174720 = Model_VertexMasks791_g174720;
				float4 break33_g174733 = _overlay_vert_mode;
				float temp_output_30_0_g174733 = ( break792_g174720.x * break33_g174733.x );
				float temp_output_29_0_g174733 = ( break792_g174720.y * break33_g174733.y );
				float temp_output_31_0_g174733 = ( break792_g174720.z * break33_g174733.z );
				float temp_output_28_0_g174733 = ( temp_output_30_0_g174733 + temp_output_29_0_g174733 + temp_output_31_0_g174733 + ( break792_g174720.w * break33_g174733.w ) );
				float clampResult17_g174734 = clamp( temp_output_28_0_g174733 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174737 = _OverlayMeshRemap.x;
				float temp_output_10_0_g174737 = ( _OverlayMeshRemap.y - temp_output_7_0_g174737 );
				float lerpResult881_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174734 - temp_output_7_0_g174737 ) / ( temp_output_10_0_g174737 + 0.0001 ) ) ) , _OverlayMeshValue);
				float temp_output_6_0_g174744 = lerpResult881_g174720;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174744 = ( temp_output_6_0_g174744 + ( _OverlayMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174744 = temp_output_6_0_g174744;
				#endif
				float temp_output_831_0_g174720 = staticSwitch14_g174744;
				half Overlay_VertMask801_g174720 = temp_output_831_0_g174720;
				half Overlay_MaskNoise427_g174720 = 1.0;
				TVEGlobalData Data15_g174722 = Data204_g173897;
				float Out_Dummy15_g174722 = 0;
				float4 Out_CoatParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174722 = float4( 0,0,0,0 );
				Out_Dummy15_g174722 = Data15_g174722.Dummy;
				Out_CoatParams15_g174722 = Data15_g174722.CoatParams;
				Out_PaintParams15_g174722 = Data15_g174722.PaintParams;
				Out_GlowParams15_g174722 = Data15_g174722.GlowParams;
				Out_AtmoParams15_g174722= Data15_g174722.AtmoParams;
				Out_FadeParams15_g174722= Data15_g174722.FadeParams;
				Out_FormParams15_g174722 = Data15_g174722.FormParams;
				Out_LandParams15_g174722 = Data15_g174722.LandParams;
				Out_WindParams15_g174722 = Data15_g174722.WindParams;
				Out_PushParams15_g174722 = Data15_g174722.PushParams;
				half4 Global_AtmoParams516_g174720 = Out_AtmoParams15_g174722;
				#ifdef TVE_OVERLAY_ELEMENT
				float staticSwitch705_g174720 = ( (Global_AtmoParams516_g174720).z * TVE_IsEnabled );
				#else
				float staticSwitch705_g174720 = 1.0;
				#endif
				half Overlay_MaskGlobal429_g174720 = staticSwitch705_g174720;
				half Custom_Mask646_g174720 = 1.0;
				float temp_output_7_0_g174749 = _OverlayBlendRemap1.x;
				float temp_output_10_0_g174749 = ( _OverlayBlendRemap1.y - temp_output_7_0_g174749 );
				half Overlay_Mask494_g174720 = saturate( ( ( ( _OverlayIntensityValue * Overlay_TexMask908_g174720 * Overlay_MaskProj457_g174720 * Overlay_MaskLuma438_g174720 * Overlay_VertMask801_g174720 * Overlay_MaskNoise427_g174720 * Overlay_MaskGlobal429_g174720 * Custom_Mask646_g174720 ) - temp_output_7_0_g174749 ) / ( temp_output_10_0_g174749 + 0.0001 ) ) );
				float3 lerpResult467_g174720 = lerp( Visual_Albedo127_g174720 , ( staticSwitch14_g174731 + Overlay_GlitterColor865_g174720 ) , Overlay_Mask494_g174720);
				#ifdef TVE_OVERLAY
				float3 staticSwitch577_g174720 = lerpResult467_g174720;
				#else
				float3 staticSwitch577_g174720 = Visual_Albedo127_g174720;
				#endif
				half3 Final_Albedo493_g174720 = staticSwitch577_g174720;
				float3 In_Albedo3_g174723 = Final_Albedo493_g174720;
				float3 In_AlbedoRaw3_g174723 = Out_AlbedoRaw4_g174721;
				half2 Visual_NormalTS535_g174720 = Out_NormalTS4_g174721;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174726) = _OverlayNormalTex;
				float localFilterTexture29_g174754 = ( 0.0 );
				SamplerState SamplerDefault29_g174754 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174754 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174754 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174754 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174754 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174754 = SamplerDefault29_g174754;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174754 = SamplerDefault29_g174754;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174754 = SamplerPoint29_g174754;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174754 = SamplerLow29_g174754;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174754 = SamplerMedium29_g174754;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174754 = SamplerHigh29_g174754;
				#endif
				SamplerState Sampler238_g174726 = SS29_g174754;
				float4 temp_output_37_0_g174726 = Overlay_Coords639_g174720;
				half4 Coords238_g174726 = temp_output_37_0_g174726;
				float3 temp_output_279_0_g174726 = Model_PositionWO602_g174720;
				half3 WorldPosition238_g174726 = temp_output_279_0_g174726;
				half4 localSamplePlanar2D238_g174726 = SamplePlanar2D( Texture238_g174726 , Sampler238_g174726 , Coords238_g174726 , WorldPosition238_g174726 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174726) = _OverlayNormalTex;
				SamplerState Sampler246_g174726 = SS29_g174754;
				half4 Coords246_g174726 = temp_output_37_0_g174726;
				half3 WorldPosition246_g174726 = temp_output_279_0_g174726;
				float3 temp_output_280_0_g174726 = Model_NormalWS712_g174720;
				half3 WorldNormal246_g174726 = temp_output_280_0_g174726;
				half4 localSamplePlanar3D246_g174726 = SamplePlanar3D( Texture246_g174726 , Sampler246_g174726 , Coords246_g174726 , WorldPosition246_g174726 , WorldNormal246_g174726 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174726) = _OverlayNormalTex;
				SamplerState Sampler234_g174726 = SS29_g174754;
				float4 Coords234_g174726 = temp_output_37_0_g174726;
				float3 WorldPosition234_g174726 = temp_output_279_0_g174726;
				float4 localSampleStochastic2D234_g174726 = SampleStochastic2D( Texture234_g174726 , Sampler234_g174726 , Coords234_g174726 , WorldPosition234_g174726 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174726) = _OverlayNormalTex;
				SamplerState Sampler263_g174726 = SS29_g174754;
				half4 Coords263_g174726 = temp_output_37_0_g174726;
				half3 WorldPosition263_g174726 = temp_output_279_0_g174726;
				half3 WorldNormal263_g174726 = temp_output_280_0_g174726;
				half4 localSampleStochastic3D263_g174726 = SampleStochastic3D( Texture263_g174726 , Sampler263_g174726 , Coords263_g174726 , WorldPosition263_g174726 , WorldNormal263_g174726 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch686_g174720 = localSamplePlanar2D238_g174726;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch686_g174720 = localSamplePlanar3D246_g174726;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch686_g174720 = localSampleStochastic2D234_g174726;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch686_g174720 = localSampleStochastic3D263_g174726;
				#else
				float4 staticSwitch686_g174720 = localSamplePlanar2D238_g174726;
				#endif
				half4 Normal_Packed45_g174730 = staticSwitch686_g174720;
				float2 appendResult58_g174730 = (float2(( (Normal_Packed45_g174730).x * (Normal_Packed45_g174730).w ) , (Normal_Packed45_g174730).y));
				half2 Normal_Default50_g174730 = appendResult58_g174730;
				half2 Normal_ASTC41_g174730 = (Normal_Packed45_g174730).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174730 = Normal_ASTC41_g174730;
				#else
				float2 staticSwitch38_g174730 = Normal_Default50_g174730;
				#endif
				half2 Normal_NO_DTX544_g174730 = (Normal_Packed45_g174730).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174730 = Normal_NO_DTX544_g174730;
				#else
				float2 staticSwitch37_g174730 = staticSwitch38_g174730;
				#endif
				half2 Normal_Planar45_g174729 = (staticSwitch37_g174730*2.0 + -1.0);
				float2 break71_g174729 = Normal_Planar45_g174729;
				float3 appendResult72_g174729 = (float3(break71_g174729.x , 0.0 , break71_g174729.y));
				half2 Overlay_Normal528_g174720 = (mul( ase_worldToTangent, appendResult72_g174729 )).xy;
				#ifdef TVE_OVERLAY_TEX
				float2 staticSwitch579_g174720 = Overlay_Normal528_g174720;
				#else
				float2 staticSwitch579_g174720 = Visual_NormalTS535_g174720;
				#endif
				float2 lerpResult551_g174720 = lerp( Visual_NormalTS535_g174720 , ( staticSwitch579_g174720 * _OverlayNormalValue ) , Overlay_Mask494_g174720);
				#ifdef TVE_OVERLAY
				float2 staticSwitch583_g174720 = lerpResult551_g174720;
				#else
				float2 staticSwitch583_g174720 = Visual_NormalTS535_g174720;
				#endif
				half2 Final_NormalTS499_g174720 = staticSwitch583_g174720;
				float2 In_NormalTS3_g174723 = Final_NormalTS499_g174720;
				float3 In_NormalWS3_g174723 = temp_output_739_21_g174720;
				half4 Visual_Masks536_g174720 = Out_Shader4_g174721;
				float4 appendResult585_g174720 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
				float4 lerpResult584_g174720 = lerp( Visual_Masks536_g174720 , appendResult585_g174720 , Overlay_Mask494_g174720);
				#ifdef TVE_OVERLAY
				float4 staticSwitch586_g174720 = lerpResult584_g174720;
				#else
				float4 staticSwitch586_g174720 = Visual_Masks536_g174720;
				#endif
				half4 Final_Masks482_g174720 = staticSwitch586_g174720;
				float4 In_Shader3_g174723 = Final_Masks482_g174720;
				float4 In_Emissive3_g174723 = Out_Emissive4_g174721;
				float temp_output_739_12_g174720 = Out_Grayscale4_g174721;
				float In_Grayscale3_g174723 = temp_output_739_12_g174720;
				float In_Luminosity3_g174723 = temp_output_739_15_g174720;
				float In_MultiMask3_g174723 = Out_MultiMask4_g174721;
				float In_AlphaClip3_g174723 = Out_AlphaClip4_g174721;
				float In_AlphaFade3_g174723 = Out_AlphaFade4_g174721;
				float3 In_Translucency3_g174723 = Out_Translucency4_g174721;
				half Visual_Transmission699_g174720 = Out_Transmission4_g174721;
				float lerpResult746_g174720 = lerp( Visual_Transmission699_g174720 , ( Visual_Transmission699_g174720 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g174720 * Overlay_MaskNoise427_g174720 * Overlay_MaskGlobal429_g174720 ));
				#ifdef TVE_OVERLAY
				float staticSwitch703_g174720 = lerpResult746_g174720;
				#else
				float staticSwitch703_g174720 = Visual_Transmission699_g174720;
				#endif
				half Final_Transmission702_g174720 = staticSwitch703_g174720;
				float In_Transmission3_g174723 = Final_Transmission702_g174720;
				float In_Thickness3_g174723 = Out_Thickness4_g174721;
				float In_Diffusion3_g174723 = Out_Diffusion4_g174721;
				Data3_g174723.Dummy = In_Dummy3_g174723;
				Data3_g174723.Albedo = In_Albedo3_g174723;
				Data3_g174723.AlbedoRaw = In_AlbedoRaw3_g174723;
				Data3_g174723.NormalTS = In_NormalTS3_g174723;
				Data3_g174723.NormalWS = In_NormalWS3_g174723;
				Data3_g174723.Shader = In_Shader3_g174723;
				Data3_g174723.Emissive= In_Emissive3_g174723;
				Data3_g174723.MultiMask = In_MultiMask3_g174723;
				Data3_g174723.Grayscale = In_Grayscale3_g174723;
				Data3_g174723.Luminosity = In_Luminosity3_g174723;
				Data3_g174723.AlphaClip = In_AlphaClip3_g174723;
				Data3_g174723.AlphaFade = In_AlphaFade3_g174723;
				Data3_g174723.Translucency = In_Translucency3_g174723;
				Data3_g174723.Transmission = In_Transmission3_g174723;
				Data3_g174723.Thickness = In_Thickness3_g174723;
				Data3_g174723.Diffusion = In_Diffusion3_g174723;
				TVEVisualData Data4_g174757 = Data3_g174723;
				float Out_Dummy4_g174757 = 0;
				float3 Out_Albedo4_g174757 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174757 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174757 = float2( 0,0 );
				float3 Out_NormalWS4_g174757 = float3( 0,0,0 );
				float4 Out_Shader4_g174757 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174757 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174757 = 0;
				float Out_Grayscale4_g174757 = 0;
				float Out_Luminosity4_g174757 = 0;
				float Out_AlphaClip4_g174757 = 0;
				float Out_AlphaFade4_g174757 = 0;
				float3 Out_Translucency4_g174757 = float3( 0,0,0 );
				float Out_Transmission4_g174757 = 0;
				float Out_Thickness4_g174757 = 0;
				float Out_Diffusion4_g174757 = 0;
				Out_Dummy4_g174757 = Data4_g174757.Dummy;
				Out_Albedo4_g174757 = Data4_g174757.Albedo;
				Out_AlbedoRaw4_g174757 = Data4_g174757.AlbedoRaw;
				Out_NormalTS4_g174757 = Data4_g174757.NormalTS;
				Out_NormalWS4_g174757 = Data4_g174757.NormalWS;
				Out_Shader4_g174757 = Data4_g174757.Shader;
				Out_Emissive4_g174757= Data4_g174757.Emissive;
				Out_MultiMask4_g174757 = Data4_g174757.MultiMask;
				Out_Grayscale4_g174757 = Data4_g174757.Grayscale;
				Out_Luminosity4_g174757= Data4_g174757.Luminosity;
				Out_AlphaClip4_g174757 = Data4_g174757.AlphaClip;
				Out_AlphaFade4_g174757 = Data4_g174757.AlphaFade;
				Out_Translucency4_g174757 = Data4_g174757.Translucency;
				Out_Transmission4_g174757 = Data4_g174757.Transmission;
				Out_Thickness4_g174757 = Data4_g174757.Thickness;
				Out_Diffusion4_g174757 = Data4_g174757.Diffusion;
				half3 Visual_Albedo127_g174756 = Out_Albedo4_g174757;
				TVEGlobalData Data15_g174762 = Data204_g173897;
				float Out_Dummy15_g174762 = 0;
				float4 Out_CoatParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174762 = float4( 0,0,0,0 );
				Out_Dummy15_g174762 = Data15_g174762.Dummy;
				Out_CoatParams15_g174762 = Data15_g174762.CoatParams;
				Out_PaintParams15_g174762 = Data15_g174762.PaintParams;
				Out_GlowParams15_g174762 = Data15_g174762.GlowParams;
				Out_AtmoParams15_g174762= Data15_g174762.AtmoParams;
				Out_FadeParams15_g174762= Data15_g174762.FadeParams;
				Out_FormParams15_g174762 = Data15_g174762.FormParams;
				Out_LandParams15_g174762 = Data15_g174762.LandParams;
				Out_WindParams15_g174762 = Data15_g174762.WindParams;
				Out_PushParams15_g174762 = Data15_g174762.PushParams;
				half4 Global_AtmoParams516_g174756 = Out_AtmoParams15_g174762;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch663_g174756 = ( (Global_AtmoParams516_g174756).y * TVE_IsEnabled );
				#else
				float staticSwitch663_g174756 = 1.0;
				#endif
				half Global_Wetness429_g174756 = staticSwitch663_g174756;
				half Wetness_Value1042_g174756 = ( _WetnessIntensityValue * Global_Wetness429_g174756 );
				TVEModelData Data15_g174770 = Data16_g164566;
				float Out_Dummy15_g174770 = 0;
				float3 Out_PositionWS15_g174770 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174770 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174770 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174770 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174770 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174770 = float3( 0,0,0 );
				float4 Out_VertexData15_g174770 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174770 = float4( 0,0,0,0 );
				Out_Dummy15_g174770 = Data15_g174770.Dummy;
				Out_PositionWS15_g174770 = Data15_g174770.PositionWS;
				Out_PositionWO15_g174770 = Data15_g174770.PositionWO;
				Out_PivotWS15_g174770 = Data15_g174770.PivotWS;
				Out_PivotWO15_g174770 = Data15_g174770.PivotWO;
				Out_NormalWS15_g174770 = Data15_g174770.NormalWS;
				Out_ViewDirWS15_g174770 = Data15_g174770.ViewDirWS;
				Out_VertexData15_g174770 = Data15_g174770.VertexData;
				Out_BoundsData15_g174770 = Data15_g174770.BoundsData;
				half4 Model_VertexData1030_g174756 = Out_VertexData15_g174770;
				float4 break1019_g174756 = Model_VertexData1030_g174756;
				float4 break33_g174775 = _wetness_vert_mode;
				float temp_output_30_0_g174775 = ( break1019_g174756.x * break33_g174775.x );
				float temp_output_29_0_g174775 = ( break1019_g174756.y * break33_g174775.y );
				float temp_output_31_0_g174775 = ( break1019_g174756.z * break33_g174775.z );
				float temp_output_28_0_g174775 = ( temp_output_30_0_g174775 + temp_output_29_0_g174775 + temp_output_31_0_g174775 + ( break1019_g174756.w * break33_g174775.w ) );
				float clampResult17_g174773 = clamp( temp_output_28_0_g174775 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174774 = _WetnessMeshRemap.x;
				float temp_output_10_0_g174774 = ( _WetnessMeshRemap.y - temp_output_7_0_g174774 );
				float lerpResult1026_g174756 = lerp( 1.0 , saturate( ( ( clampResult17_g174773 - temp_output_7_0_g174774 ) / ( temp_output_10_0_g174774 + 0.0001 ) ) ) , _WetnessMeshValue);
				float temp_output_6_0_g174776 = lerpResult1026_g174756;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174776 = ( temp_output_6_0_g174776 + ( _WetnessMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174776 = temp_output_6_0_g174776;
				#endif
				#ifdef TVE_WETNESS_VERT
				float staticSwitch1110_g174756 = staticSwitch14_g174776;
				#else
				float staticSwitch1110_g174756 = 1.0;
				#endif
				half Wetness_VertMask1024_g174756 = staticSwitch1110_g174756;
				float temp_output_1043_0_g174756 = ( Wetness_Value1042_g174756 * Wetness_VertMask1024_g174756 );
				half Wetness_Mask866_g174756 = temp_output_1043_0_g174756;
				float4 break1083_g174756 = Model_VertexData1030_g174756;
				float4 break33_g174779 = _wetness_water_vert_mode;
				float temp_output_30_0_g174779 = ( break1083_g174756.x * break33_g174779.x );
				float temp_output_29_0_g174779 = ( break1083_g174756.y * break33_g174779.y );
				float temp_output_31_0_g174779 = ( break1083_g174756.z * break33_g174779.z );
				float temp_output_28_0_g174779 = ( temp_output_30_0_g174779 + temp_output_29_0_g174779 + temp_output_31_0_g174779 + ( break1083_g174756.w * break33_g174779.w ) );
				float clampResult17_g174777 = clamp( temp_output_28_0_g174779 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174778 = _WetnessWaterMeshRemap.x;
				float temp_output_10_0_g174778 = ( _WetnessWaterMeshRemap.y - temp_output_7_0_g174778 );
				float lerpResult1089_g174756 = lerp( 1.0 , saturate( ( ( clampResult17_g174777 - temp_output_7_0_g174778 ) / ( temp_output_10_0_g174778 + 0.0001 ) ) ) , _WetnessWaterMeshValue);
				float temp_output_6_0_g174780 = lerpResult1089_g174756;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174780 = ( temp_output_6_0_g174780 + ( _WetnessWaterMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174780 = temp_output_6_0_g174780;
				#endif
				#ifdef TVE_WETNESS_VERT
				float staticSwitch1113_g174756 = staticSwitch14_g174780;
				#else
				float staticSwitch1113_g174756 = 1.0;
				#endif
				half Water_VertMask1094_g174756 = staticSwitch1113_g174756;
				half4 Visual_Masks536_g174756 = Out_Shader4_g174757;
				float lerpResult1013_g174756 = lerp( 1.0 , (Visual_Masks536_g174756).z , _WetnessWaterBaseValue);
				half Water_HeightMask782_g174756 = lerpResult1013_g174756;
				float clampResult17_g174771 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g174756 * Water_VertMask1094_g174756 ) - Water_HeightMask782_g174756 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174772 = _WetnessWaterBlendRemap.x;
				float temp_output_10_0_g174772 = ( _WetnessWaterBlendRemap.y - temp_output_7_0_g174772 );
				half3 Model_NormalWS798_g174756 = Out_NormalWS15_g174770;
				float temp_output_786_0_g174756 = saturate( (Model_NormalWS798_g174756).y );
				half Wetness_ProjMask790_g174756 = temp_output_786_0_g174756;
				half Water_Mask760_g174756 = ( saturate( ( ( clampResult17_g174771 - temp_output_7_0_g174772 ) / ( temp_output_10_0_g174772 + 0.0001 ) ) ) * Wetness_ProjMask790_g174756 );
				float3 lerpResult918_g174756 = lerp( Visual_Albedo127_g174756 , ( Visual_Albedo127_g174756 * (_WetnessWaterColor).rgb ) , Water_Mask760_g174756);
				#ifdef TVE_WETNESS_WATER
				float3 staticSwitch946_g174756 = lerpResult918_g174756;
				#else
				float3 staticSwitch946_g174756 = Visual_Albedo127_g174756;
				#endif
				float3 lerpResult768_g174756 = lerp( staticSwitch946_g174756 , ( staticSwitch946_g174756 * staticSwitch946_g174756 ) , _WetnessContrastValue);
				float3 lerpResult651_g174756 = lerp( Visual_Albedo127_g174756 , lerpResult768_g174756 , Wetness_Mask866_g174756);
				#ifdef TVE_WETNESS
				float3 staticSwitch577_g174756 = lerpResult651_g174756;
				#else
				float3 staticSwitch577_g174756 = Visual_Albedo127_g174756;
				#endif
				half3 Final_Albedo493_g174756 = staticSwitch577_g174756;
				float3 In_Albedo3_g174758 = Final_Albedo493_g174756;
				float3 In_AlbedoRaw3_g174758 = Out_AlbedoRaw4_g174757;
				half2 Visual_Normal535_g174756 = Out_NormalTS4_g174757;
				float lerpResult877_g174756 = lerp( 1.0 , 0.0 , ( Water_Mask760_g174756 * Water_Mask760_g174756 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch957_g174756 = ( Visual_Normal535_g174756 * lerpResult877_g174756 );
				#else
				float2 staticSwitch957_g174756 = Visual_Normal535_g174756;
				#endif
				float2 temp_cast_50 = (0.0).xx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174768) = _WetnessDropsTexRT;
				SamplerState Sampler238_g174768 = sampler_Linear_Repeat_Aniso8;
				float4 appendResult924_g174756 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g174768 = appendResult924_g174756;
				half4 Coords238_g174768 = temp_output_37_0_g174768;
				half3 Model_PositionWO602_g174756 = Out_PositionWO15_g174770;
				float3 temp_output_279_0_g174768 = Model_PositionWO602_g174756;
				half3 WorldPosition238_g174768 = temp_output_279_0_g174768;
				half4 localSamplePlanar2D238_g174768 = SamplePlanar2D( Texture238_g174768 , Sampler238_g174768 , Coords238_g174768 , WorldPosition238_g174768 );
				float4 temp_output_1010_0_g174756 = localSamplePlanar2D238_g174768;
				half2 Rain_DropsNormal919_g174756 = (temp_output_1010_0_g174756).zw;
				float2 temp_output_903_0_g174756 = (Rain_DropsNormal919_g174756*2.0 + -1.0);
				half2 Rain_RingsNormal713_g174756 = (temp_output_1010_0_g174756).xy;
				float2 lerpResult904_g174756 = lerp( temp_output_903_0_g174756 , (Rain_RingsNormal713_g174756*2.0 + -1.0) , ( Water_Mask760_g174756 * Water_Mask760_g174756 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch960_g174756 = lerpResult904_g174756;
				#else
				float2 staticSwitch960_g174756 = temp_output_903_0_g174756;
				#endif
				half2 Rain_Drops1002_g174756 = ( staticSwitch960_g174756 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
				half3 Model_PositionWS823_g174756 = Out_PositionWS15_g174770;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch949_g174756 = ( (Global_AtmoParams516_g174756).w * TVE_IsEnabled );
				#else
				float staticSwitch949_g174756 = 1.0;
				#endif
				half Global_Rain955_g174756 = staticSwitch949_g174756;
				half Rain_Value1067_g174756 = Global_Rain955_g174756;
				float4 break1097_g174756 = Model_VertexData1030_g174756;
				float4 break33_g174783 = _wetness_drops_vert_mode;
				float temp_output_30_0_g174783 = ( break1097_g174756.x * break33_g174783.x );
				float temp_output_29_0_g174783 = ( break1097_g174756.y * break33_g174783.y );
				float temp_output_31_0_g174783 = ( break1097_g174756.z * break33_g174783.z );
				float temp_output_28_0_g174783 = ( temp_output_30_0_g174783 + temp_output_29_0_g174783 + temp_output_31_0_g174783 + ( break1097_g174756.w * break33_g174783.w ) );
				float clampResult17_g174781 = clamp( temp_output_28_0_g174783 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174782 = _WetnessDropsMeshRemap.x;
				float temp_output_10_0_g174782 = ( _WetnessDropsMeshRemap.y - temp_output_7_0_g174782 );
				float lerpResult1100_g174756 = lerp( 1.0 , saturate( ( ( clampResult17_g174781 - temp_output_7_0_g174782 ) / ( temp_output_10_0_g174782 + 0.0001 ) ) ) , _WetnessDropsMeshValue);
				float temp_output_6_0_g174784 = lerpResult1100_g174756;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174784 = ( temp_output_6_0_g174784 + ( _WetnessDropsMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174784 = temp_output_6_0_g174784;
				#endif
				#ifdef TVE_WETNESS_VERT
				float staticSwitch1115_g174756 = staticSwitch14_g174784;
				#else
				float staticSwitch1115_g174756 = 1.0;
				#endif
				half Rain_VertMask1108_g174756 = staticSwitch1115_g174756;
				half Rain_Mask999_g174756 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g174756 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g174756 * Rain_VertMask1108_g174756 );
				half2 Normal_Planar45_g174767 = ( Rain_Drops1002_g174756 * Rain_Mask999_g174756 * Wetness_ProjMask790_g174756 );
				float2 break71_g174767 = Normal_Planar45_g174767;
				float3 appendResult72_g174767 = (float3(break71_g174767.x , 0.0 , break71_g174767.y));
				half2 Wetness_Normal526_g174756 = (mul( ase_worldToTangent, appendResult72_g174767 )).xy;
				#ifdef TVE_WETNESS_DROPS
				float2 staticSwitch583_g174756 = Wetness_Normal526_g174756;
				#else
				float2 staticSwitch583_g174756 = temp_cast_50;
				#endif
				#ifdef TVE_WETNESS
				float2 staticSwitch774_g174756 = ( staticSwitch957_g174756 + staticSwitch583_g174756 );
				#else
				float2 staticSwitch774_g174756 = Visual_Normal535_g174756;
				#endif
				half2 Final_Normal499_g174756 = staticSwitch774_g174756;
				float2 In_NormalTS3_g174758 = Final_Normal499_g174756;
				float3 In_NormalWS3_g174758 = Out_NormalWS4_g174757;
				float4 break658_g174756 = Visual_Masks536_g174756;
				float temp_output_935_0_g174756 = ( Wetness_Mask866_g174756 * _WetnessSmoothnessValue );
				float lerpResult941_g174756 = lerp( temp_output_935_0_g174756 , 2.0 , Water_Mask760_g174756);
				#ifdef TVE_WETNESS_WATER
				float staticSwitch959_g174756 = lerpResult941_g174756;
				#else
				float staticSwitch959_g174756 = temp_output_935_0_g174756;
				#endif
				float4 appendResult661_g174756 = (float4(break658_g174756.x , break658_g174756.y , break658_g174756.z , saturate( ( break658_g174756.w + staticSwitch959_g174756 ) )));
				#ifdef TVE_WETNESS
				float4 staticSwitch586_g174756 = appendResult661_g174756;
				#else
				float4 staticSwitch586_g174756 = Visual_Masks536_g174756;
				#endif
				half4 Final_Masks482_g174756 = staticSwitch586_g174756;
				float4 In_Shader3_g174758 = Final_Masks482_g174756;
				float4 In_Emissive3_g174758 = Out_Emissive4_g174757;
				float In_Grayscale3_g174758 = Out_Grayscale4_g174757;
				float In_Luminosity3_g174758 = Out_Luminosity4_g174757;
				float In_MultiMask3_g174758 = Out_MultiMask4_g174757;
				float In_AlphaClip3_g174758 = Out_AlphaClip4_g174757;
				float In_AlphaFade3_g174758 = Out_AlphaFade4_g174757;
				float3 In_Translucency3_g174758 = Out_Translucency4_g174757;
				float In_Transmission3_g174758 = Out_Transmission4_g174757;
				float In_Thickness3_g174758 = Out_Thickness4_g174757;
				float In_Diffusion3_g174758 = Out_Diffusion4_g174757;
				Data3_g174758.Dummy = In_Dummy3_g174758;
				Data3_g174758.Albedo = In_Albedo3_g174758;
				Data3_g174758.AlbedoRaw = In_AlbedoRaw3_g174758;
				Data3_g174758.NormalTS = In_NormalTS3_g174758;
				Data3_g174758.NormalWS = In_NormalWS3_g174758;
				Data3_g174758.Shader = In_Shader3_g174758;
				Data3_g174758.Emissive= In_Emissive3_g174758;
				Data3_g174758.MultiMask = In_MultiMask3_g174758;
				Data3_g174758.Grayscale = In_Grayscale3_g174758;
				Data3_g174758.Luminosity = In_Luminosity3_g174758;
				Data3_g174758.AlphaClip = In_AlphaClip3_g174758;
				Data3_g174758.AlphaFade = In_AlphaFade3_g174758;
				Data3_g174758.Translucency = In_Translucency3_g174758;
				Data3_g174758.Transmission = In_Transmission3_g174758;
				Data3_g174758.Thickness = In_Thickness3_g174758;
				Data3_g174758.Diffusion = In_Diffusion3_g174758;
				TVEVisualData Data4_g174796 = Data3_g174758;
				float Out_Dummy4_g174796 = 0;
				float3 Out_Albedo4_g174796 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174796 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174796 = float2( 0,0 );
				float3 Out_NormalWS4_g174796 = float3( 0,0,0 );
				float4 Out_Shader4_g174796 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174796 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174796 = 0;
				float Out_Grayscale4_g174796 = 0;
				float Out_Luminosity4_g174796 = 0;
				float Out_AlphaClip4_g174796 = 0;
				float Out_AlphaFade4_g174796 = 0;
				float3 Out_Translucency4_g174796 = float3( 0,0,0 );
				float Out_Transmission4_g174796 = 0;
				float Out_Thickness4_g174796 = 0;
				float Out_Diffusion4_g174796 = 0;
				Out_Dummy4_g174796 = Data4_g174796.Dummy;
				Out_Albedo4_g174796 = Data4_g174796.Albedo;
				Out_AlbedoRaw4_g174796 = Data4_g174796.AlbedoRaw;
				Out_NormalTS4_g174796 = Data4_g174796.NormalTS;
				Out_NormalWS4_g174796 = Data4_g174796.NormalWS;
				Out_Shader4_g174796 = Data4_g174796.Shader;
				Out_Emissive4_g174796= Data4_g174796.Emissive;
				Out_MultiMask4_g174796 = Data4_g174796.MultiMask;
				Out_Grayscale4_g174796 = Data4_g174796.Grayscale;
				Out_Luminosity4_g174796= Data4_g174796.Luminosity;
				Out_AlphaClip4_g174796 = Data4_g174796.AlphaClip;
				Out_AlphaFade4_g174796 = Data4_g174796.AlphaFade;
				Out_Translucency4_g174796 = Data4_g174796.Translucency;
				Out_Transmission4_g174796 = Data4_g174796.Transmission;
				Out_Thickness4_g174796 = Data4_g174796.Thickness;
				Out_Diffusion4_g174796 = Data4_g174796.Diffusion;
				float3 In_Albedo3_g174786 = Out_Albedo4_g174796;
				float3 In_AlbedoRaw3_g174786 = Out_AlbedoRaw4_g174796;
				float2 In_NormalTS3_g174786 = Out_NormalTS4_g174796;
				float3 In_NormalWS3_g174786 = Out_NormalWS4_g174796;
				float4 In_Shader3_g174786 = Out_Shader4_g174796;
				float4 In_Emissive3_g174786 = Out_Emissive4_g174796;
				float In_Grayscale3_g174786 = Out_Grayscale4_g174796;
				float In_Luminosity3_g174786 = Out_Luminosity4_g174796;
				float temp_output_836_11_g174785 = Out_MultiMask4_g174796;
				float In_MultiMask3_g174786 = temp_output_836_11_g174785;
				half Visual_AlphaClip667_g174785 = Out_AlphaClip4_g174796;
				TVEGlobalData Data15_g174795 = Data204_g173897;
				float Out_Dummy15_g174795 = 0;
				float4 Out_CoatParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174795 = float4( 0,0,0,0 );
				Out_Dummy15_g174795 = Data15_g174795.Dummy;
				Out_CoatParams15_g174795 = Data15_g174795.CoatParams;
				Out_PaintParams15_g174795 = Data15_g174795.PaintParams;
				Out_GlowParams15_g174795 = Data15_g174795.GlowParams;
				Out_AtmoParams15_g174795= Data15_g174795.AtmoParams;
				Out_FadeParams15_g174795= Data15_g174795.FadeParams;
				Out_FormParams15_g174795 = Data15_g174795.FormParams;
				Out_LandParams15_g174795 = Data15_g174795.LandParams;
				Out_WindParams15_g174795 = Data15_g174795.WindParams;
				Out_PushParams15_g174795 = Data15_g174795.PushParams;
				half4 Global_FadeParams516_g174785 = Out_FadeParams15_g174795;
				#ifdef TVE_CUTOUT_ELEMENT
				float staticSwitch663_g174785 = saturate( (Global_FadeParams516_g174785).w );
				#else
				float staticSwitch663_g174785 = 1.0;
				#endif
				half Local_GlobalMask429_g174785 = staticSwitch663_g174785;
				float lerpResult811_g174785 = lerp( 1.0 , Visual_AlphaClip667_g174785 , _CutoutAlphaValue);
				half Local_AlphaMask814_g174785 = lerpResult811_g174785;
				TVEModelData Data15_g174797 = Data16_g164566;
				float Out_Dummy15_g174797 = 0;
				float3 Out_PositionWS15_g174797 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174797 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174797 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174797 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174797 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174797 = float3( 0,0,0 );
				float4 Out_VertexData15_g174797 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174797 = float4( 0,0,0,0 );
				Out_Dummy15_g174797 = Data15_g174797.Dummy;
				Out_PositionWS15_g174797 = Data15_g174797.PositionWS;
				Out_PositionWO15_g174797 = Data15_g174797.PositionWO;
				Out_PivotWS15_g174797 = Data15_g174797.PivotWS;
				Out_PivotWO15_g174797 = Data15_g174797.PivotWO;
				Out_NormalWS15_g174797 = Data15_g174797.NormalWS;
				Out_ViewDirWS15_g174797 = Data15_g174797.ViewDirWS;
				Out_VertexData15_g174797 = Data15_g174797.VertexData;
				Out_BoundsData15_g174797 = Data15_g174797.BoundsData;
				half3 Model_PositionWO602_g174785 = Out_PositionWO15_g174797;
				float4 tex3DNode60_g174789 = SAMPLE_TEXTURE3D( _NoiseTex3D, sampler_Linear_Repeat, ( Model_PositionWO602_g174785 * ( _CutoutNoiseTillingValue * 0.01 ) ) );
				float lerpResult673_g174785 = lerp( 1.0 , tex3DNode60_g174789.r , _CutoutNoiseValue);
				half Local_NoiseMask678_g174785 = lerpResult673_g174785;
				half4 Model_VertexMasks752_g174785 = Out_VertexData15_g174797;
				float4 break755_g174785 = Model_VertexMasks752_g174785;
				float4 break33_g174787 = _cutout_vert_mode;
				float temp_output_30_0_g174787 = ( break755_g174785.x * break33_g174787.x );
				float temp_output_29_0_g174787 = ( break755_g174785.y * break33_g174787.y );
				float temp_output_31_0_g174787 = ( break755_g174785.z * break33_g174787.z );
				float temp_output_28_0_g174787 = ( temp_output_30_0_g174787 + temp_output_29_0_g174787 + temp_output_31_0_g174787 + ( break755_g174785.w * break33_g174787.w ) );
				float clampResult17_g174788 = clamp( temp_output_28_0_g174787 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174791 = _CutoutMeshRemap.x;
				float temp_output_10_0_g174791 = ( _CutoutMeshRemap.y - temp_output_7_0_g174791 );
				float lerpResult820_g174785 = lerp( 1.0 , saturate( ( ( clampResult17_g174788 - temp_output_7_0_g174791 ) / ( temp_output_10_0_g174791 + 0.0001 ) ) ) , _CutoutMeshValue);
				float temp_output_6_0_g174792 = lerpResult820_g174785;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174792 = ( temp_output_6_0_g174792 + ( _CutoutMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174792 = temp_output_6_0_g174792;
				#endif
				float temp_output_801_0_g174785 = staticSwitch14_g174792;
				half Local_VertMask766_g174785 = temp_output_801_0_g174785;
				half Visual_MultiMask671_g174785 = temp_output_836_11_g174785;
				float lerpResult683_g174785 = lerp( 1.0 , Visual_MultiMask671_g174785 , _CutoutMultiValue);
				half Local_MultiMask685_g174785 = lerpResult683_g174785;
				float lerpResult728_g174785 = lerp( Visual_AlphaClip667_g174785 , min( Visual_AlphaClip667_g174785 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g174785 ) - ( Local_AlphaMask814_g174785 * Local_NoiseMask678_g174785 * Local_VertMask766_g174785 ) ) ) ) , Local_MultiMask685_g174785);
				half Local_AlphaClip784_g174785 = lerpResult728_g174785;
				#ifdef TVE_CUTOUT
				float staticSwitch577_g174785 = Local_AlphaClip784_g174785;
				#else
				float staticSwitch577_g174785 = Visual_AlphaClip667_g174785;
				#endif
				half Final_AlphaClip795_g174785 = staticSwitch577_g174785;
				float In_AlphaClip3_g174786 = Final_AlphaClip795_g174785;
				float In_AlphaFade3_g174786 = Out_AlphaFade4_g174796;
				float3 In_Translucency3_g174786 = Out_Translucency4_g174796;
				float In_Transmission3_g174786 = Out_Transmission4_g174796;
				float In_Thickness3_g174786 = Out_Thickness4_g174796;
				float In_Diffusion3_g174786 = Out_Diffusion4_g174796;
				Data3_g174786.Dummy = In_Dummy3_g174786;
				Data3_g174786.Albedo = In_Albedo3_g174786;
				Data3_g174786.AlbedoRaw = In_AlbedoRaw3_g174786;
				Data3_g174786.NormalTS = In_NormalTS3_g174786;
				Data3_g174786.NormalWS = In_NormalWS3_g174786;
				Data3_g174786.Shader = In_Shader3_g174786;
				Data3_g174786.Emissive= In_Emissive3_g174786;
				Data3_g174786.MultiMask = In_MultiMask3_g174786;
				Data3_g174786.Grayscale = In_Grayscale3_g174786;
				Data3_g174786.Luminosity = In_Luminosity3_g174786;
				Data3_g174786.AlphaClip = In_AlphaClip3_g174786;
				Data3_g174786.AlphaFade = In_AlphaFade3_g174786;
				Data3_g174786.Translucency = In_Translucency3_g174786;
				Data3_g174786.Transmission = In_Transmission3_g174786;
				Data3_g174786.Thickness = In_Thickness3_g174786;
				Data3_g174786.Diffusion = In_Diffusion3_g174786;
				TVEVisualData Data4_g174807 = Data3_g174786;
				float Out_Dummy4_g174807 = 0;
				float3 Out_Albedo4_g174807 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174807 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174807 = float2( 0,0 );
				float3 Out_NormalWS4_g174807 = float3( 0,0,0 );
				float4 Out_Shader4_g174807 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174807 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174807 = 0;
				float Out_Grayscale4_g174807 = 0;
				float Out_Luminosity4_g174807 = 0;
				float Out_AlphaClip4_g174807 = 0;
				float Out_AlphaFade4_g174807 = 0;
				float3 Out_Translucency4_g174807 = float3( 0,0,0 );
				float Out_Transmission4_g174807 = 0;
				float Out_Thickness4_g174807 = 0;
				float Out_Diffusion4_g174807 = 0;
				Out_Dummy4_g174807 = Data4_g174807.Dummy;
				Out_Albedo4_g174807 = Data4_g174807.Albedo;
				Out_AlbedoRaw4_g174807 = Data4_g174807.AlbedoRaw;
				Out_NormalTS4_g174807 = Data4_g174807.NormalTS;
				Out_NormalWS4_g174807 = Data4_g174807.NormalWS;
				Out_Shader4_g174807 = Data4_g174807.Shader;
				Out_Emissive4_g174807= Data4_g174807.Emissive;
				Out_MultiMask4_g174807 = Data4_g174807.MultiMask;
				Out_Grayscale4_g174807 = Data4_g174807.Grayscale;
				Out_Luminosity4_g174807= Data4_g174807.Luminosity;
				Out_AlphaClip4_g174807 = Data4_g174807.AlphaClip;
				Out_AlphaFade4_g174807 = Data4_g174807.AlphaFade;
				Out_Translucency4_g174807 = Data4_g174807.Translucency;
				Out_Transmission4_g174807 = Data4_g174807.Transmission;
				Out_Thickness4_g174807 = Data4_g174807.Thickness;
				Out_Diffusion4_g174807 = Data4_g174807.Diffusion;
				float3 In_Albedo3_g174808 = Out_Albedo4_g174807;
				float3 In_AlbedoRaw3_g174808 = Out_AlbedoRaw4_g174807;
				float2 In_NormalTS3_g174808 = Out_NormalTS4_g174807;
				float3 In_NormalWS3_g174808 = Out_NormalWS4_g174807;
				float4 In_Shader3_g174808 = Out_Shader4_g174807;
				float4 In_Emissive3_g174808 = Out_Emissive4_g174807;
				float In_Grayscale3_g174808 = Out_Grayscale4_g174807;
				float In_Luminosity3_g174808 = Out_Luminosity4_g174807;
				float temp_output_821_11_g174805 = Out_MultiMask4_g174807;
				float In_MultiMask3_g174808 = temp_output_821_11_g174805;
				half Visual_AlphaClip754_g174805 = Out_AlphaClip4_g174807;
				half Dither_Constant768_g174805 = _DitherConstantValue;
				float temp_output_7_0_g174815 = _DitherProximityMaxValue;
				float temp_output_10_0_g174815 = ( _DitherProximityMinValue - temp_output_7_0_g174815 );
				half Dither_Proximity767_g174805 = ( saturate( ( ( distance( worldPos , _WorldSpaceCameraPos ) - temp_output_7_0_g174815 ) / ( temp_output_10_0_g174815 + 0.0001 ) ) ) * _DitherProximityValue );
				TVEModelData Data15_g174814 = Data16_g164566;
				float Out_Dummy15_g174814 = 0;
				float3 Out_PositionWS15_g174814 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174814 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174814 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174814 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174814 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174814 = float3( 0,0,0 );
				float4 Out_VertexData15_g174814 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174814 = float4( 0,0,0,0 );
				Out_Dummy15_g174814 = Data15_g174814.Dummy;
				Out_PositionWS15_g174814 = Data15_g174814.PositionWS;
				Out_PositionWO15_g174814 = Data15_g174814.PositionWO;
				Out_PivotWS15_g174814 = Data15_g174814.PivotWS;
				Out_PivotWO15_g174814 = Data15_g174814.PivotWO;
				Out_NormalWS15_g174814 = Data15_g174814.NormalWS;
				Out_ViewDirWS15_g174814 = Data15_g174814.ViewDirWS;
				Out_VertexData15_g174814 = Data15_g174814.VertexData;
				Out_BoundsData15_g174814 = Data15_g174814.BoundsData;
				half3 Model_PositionWS776_g174805 = Out_PositionWS15_g174814;
				float temp_output_7_0_g174813 = _DitherDistanceMinValue;
				float temp_output_10_0_g174813 = ( _DitherDistanceMaxValue - temp_output_7_0_g174813 );
				half Dither_Distance856_g174805 = ( saturate( ( ( distance( Model_PositionWS776_g174805 , _WorldSpaceCameraPos ) - temp_output_7_0_g174813 ) / ( temp_output_10_0_g174813 + 0.0001 ) ) ) * _DitherDistanceValue );
				half3 Model_ViewDirWS845_g174805 = Out_ViewDirWS15_g174814;
				float3 normalizeResult792_g174805 = normalize( cross( ddy( worldPos ) , ddx( worldPos ) ) );
				float dotResult778_g174805 = dot( Model_ViewDirWS845_g174805 , normalizeResult792_g174805 );
				half Dither_Glancing784_g174805 = ( saturate( ( ( 1.0 - abs( dotResult778_g174805 ) ) * _DitherGlancingAngleValue ) ) * _DitherGlancingValue );
				half Dither_Value429_g174805 = max( max( max( Dither_Constant768_g174805 , Dither_Proximity767_g174805 ) , Dither_Distance856_g174805 ) , Dither_Glancing784_g174805 );
				half3 Model_PositionWO602_g174805 = Out_PositionWO15_g174814;
				float4 tex3DNode60_g174811 = SAMPLE_TEXTURE3D( _NoiseTex3D, sampler_Linear_Repeat, ( ( Model_PositionWO602_g174805 * 20.0 ) * ( _DitherNoiseTillingValue * 0.01 ) ) );
				float temp_output_809_0_g174805 = tex3DNode60_g174811.r;
				half Local_MaskNoise678_g174805 = temp_output_809_0_g174805;
				half Visual_MultiMask671_g174805 = temp_output_821_11_g174805;
				float lerpResult683_g174805 = lerp( 1.0 , Visual_MultiMask671_g174805 , _DitherMultiValue);
				half Local_MaskMulti685_g174805 = lerpResult683_g174805;
				half Custom_Mask826_g174805 = 1.0;
				float lerpResult728_g174805 = lerp( Visual_AlphaClip754_g174805 , min( Visual_AlphaClip754_g174805 , ( -0.001 - ( Dither_Value429_g174805 - Local_MaskNoise678_g174805 ) ) ) , ( Local_MaskMulti685_g174805 * Custom_Mask826_g174805 ));
				half Local_AlphaClip834_g174805 = lerpResult728_g174805;
				#ifdef TVE_DITHER
				float staticSwitch577_g174805 = Local_AlphaClip834_g174805;
				#else
				float staticSwitch577_g174805 = Visual_AlphaClip754_g174805;
				#endif
				half Final_AlphaClip493_g174805 = staticSwitch577_g174805;
				float In_AlphaClip3_g174808 = Final_AlphaClip493_g174805;
				float In_AlphaFade3_g174808 = Out_AlphaFade4_g174807;
				float3 In_Translucency3_g174808 = Out_Translucency4_g174807;
				float In_Transmission3_g174808 = Out_Transmission4_g174807;
				float In_Thickness3_g174808 = Out_Thickness4_g174807;
				float In_Diffusion3_g174808 = Out_Diffusion4_g174807;
				Data3_g174808.Dummy = In_Dummy3_g174808;
				Data3_g174808.Albedo = In_Albedo3_g174808;
				Data3_g174808.AlbedoRaw = In_AlbedoRaw3_g174808;
				Data3_g174808.NormalTS = In_NormalTS3_g174808;
				Data3_g174808.NormalWS = In_NormalWS3_g174808;
				Data3_g174808.Shader = In_Shader3_g174808;
				Data3_g174808.Emissive= In_Emissive3_g174808;
				Data3_g174808.MultiMask = In_MultiMask3_g174808;
				Data3_g174808.Grayscale = In_Grayscale3_g174808;
				Data3_g174808.Luminosity = In_Luminosity3_g174808;
				Data3_g174808.AlphaClip = In_AlphaClip3_g174808;
				Data3_g174808.AlphaFade = In_AlphaFade3_g174808;
				Data3_g174808.Translucency = In_Translucency3_g174808;
				Data3_g174808.Transmission = In_Transmission3_g174808;
				Data3_g174808.Thickness = In_Thickness3_g174808;
				Data3_g174808.Diffusion = In_Diffusion3_g174808;
				TVEVisualData Data4_g174835 = Data3_g174808;
				float Out_Dummy4_g174835 = 0;
				float3 Out_Albedo4_g174835 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174835 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174835 = float2( 0,0 );
				float3 Out_NormalWS4_g174835 = float3( 0,0,0 );
				float4 Out_Shader4_g174835 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174835 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174835 = 0;
				float Out_Grayscale4_g174835 = 0;
				float Out_Luminosity4_g174835 = 0;
				float Out_AlphaClip4_g174835 = 0;
				float Out_AlphaFade4_g174835 = 0;
				float3 Out_Translucency4_g174835 = float3( 0,0,0 );
				float Out_Transmission4_g174835 = 0;
				float Out_Thickness4_g174835 = 0;
				float Out_Diffusion4_g174835 = 0;
				Out_Dummy4_g174835 = Data4_g174835.Dummy;
				Out_Albedo4_g174835 = Data4_g174835.Albedo;
				Out_AlbedoRaw4_g174835 = Data4_g174835.AlbedoRaw;
				Out_NormalTS4_g174835 = Data4_g174835.NormalTS;
				Out_NormalWS4_g174835 = Data4_g174835.NormalWS;
				Out_Shader4_g174835 = Data4_g174835.Shader;
				Out_Emissive4_g174835= Data4_g174835.Emissive;
				Out_MultiMask4_g174835 = Data4_g174835.MultiMask;
				Out_Grayscale4_g174835 = Data4_g174835.Grayscale;
				Out_Luminosity4_g174835= Data4_g174835.Luminosity;
				Out_AlphaClip4_g174835 = Data4_g174835.AlphaClip;
				Out_AlphaFade4_g174835 = Data4_g174835.AlphaFade;
				Out_Translucency4_g174835 = Data4_g174835.Translucency;
				Out_Transmission4_g174835 = Data4_g174835.Transmission;
				Out_Thickness4_g174835 = Data4_g174835.Thickness;
				Out_Diffusion4_g174835 = Data4_g174835.Diffusion;
				float3 temp_output_297_0_g174826 = Out_Albedo4_g174835;
				float3 In_Albedo3_g174836 = temp_output_297_0_g174826;
				float3 temp_output_297_23_g174826 = Out_AlbedoRaw4_g174835;
				float3 In_AlbedoRaw3_g174836 = temp_output_297_23_g174826;
				float2 In_NormalTS3_g174836 = Out_NormalTS4_g174835;
				float3 In_NormalWS3_g174836 = Out_NormalWS4_g174835;
				float4 In_Shader3_g174836 = Out_Shader4_g174835;
				float4 temp_cast_51 = (0.0).xxxx;
				TVEModelData Data15_g174839 = Data16_g164566;
				float Out_Dummy15_g174839 = 0;
				float3 Out_PositionWS15_g174839 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174839 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174839 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174839 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174839 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174839 = float3( 0,0,0 );
				float4 Out_VertexData15_g174839 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174839 = float4( 0,0,0,0 );
				Out_Dummy15_g174839 = Data15_g174839.Dummy;
				Out_PositionWS15_g174839 = Data15_g174839.PositionWS;
				Out_PositionWO15_g174839 = Data15_g174839.PositionWO;
				Out_PivotWS15_g174839 = Data15_g174839.PivotWS;
				Out_PivotWO15_g174839 = Data15_g174839.PivotWO;
				Out_NormalWS15_g174839 = Data15_g174839.NormalWS;
				Out_ViewDirWS15_g174839 = Data15_g174839.ViewDirWS;
				Out_VertexData15_g174839 = Data15_g174839.VertexData;
				Out_BoundsData15_g174839 = Data15_g174839.BoundsData;
				half4 Model_VertexMasks216_g174826 = Out_VertexData15_g174839;
				float4 break251_g174826 = Model_VertexMasks216_g174826;
				float4 break33_g174830 = _emissive_vert_mode;
				float temp_output_30_0_g174830 = ( break251_g174826.x * break33_g174830.x );
				float temp_output_29_0_g174830 = ( break251_g174826.y * break33_g174830.y );
				float temp_output_31_0_g174830 = ( break251_g174826.z * break33_g174830.z );
				float temp_output_28_0_g174830 = ( temp_output_30_0_g174830 + temp_output_29_0_g174830 + temp_output_31_0_g174830 + ( break251_g174826.w * break33_g174830.w ) );
				float clampResult17_g174829 = clamp( temp_output_28_0_g174830 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174833 = _EmissiveMeshRemap.x;
				float temp_output_10_0_g174833 = ( _EmissiveMeshRemap.y - temp_output_7_0_g174833 );
				float lerpResult303_g174826 = lerp( 1.0 , saturate( ( ( clampResult17_g174829 - temp_output_7_0_g174833 ) / ( temp_output_10_0_g174833 + 0.0001 ) ) ) , _EmissiveMeshValue);
				float temp_output_6_0_g174838 = lerpResult303_g174826;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174838 = ( temp_output_6_0_g174838 + ( _EmissiveMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174838 = temp_output_6_0_g174838;
				#endif
				float temp_output_263_0_g174826 = staticSwitch14_g174838;
				half Emissive_MeshMask221_g174826 = temp_output_263_0_g174826;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174828) = _EmissiveMaskTex;
				SamplerState Sampler276_g174828 = sampler_Linear_Repeat;
				float4 temp_output_6_0_g174834 = _emissive_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174834 = ( temp_output_6_0_g174834 + ( ( _EmissiveSampleMode + _EmissiveCoordMode + _EmissiveCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174834 = temp_output_6_0_g174834;
				#endif
				half4 Emissive_Coords167_g174826 = staticSwitch14_g174834;
				float4 temp_output_37_0_g174828 = Emissive_Coords167_g174826;
				half4 Coords276_g174828 = temp_output_37_0_g174828;
				half2 TexCoord276_g174828 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174828 = SampleMain( Texture276_g174828 , Sampler276_g174828 , Coords276_g174828 , TexCoord276_g174828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174828) = _EmissiveMaskTex;
				SamplerState Sampler275_g174828 = sampler_Linear_Repeat;
				half4 Coords275_g174828 = temp_output_37_0_g174828;
				half2 TexCoord275_g174828 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174828 = SampleExtra( Texture275_g174828 , Sampler275_g174828 , Coords275_g174828 , TexCoord275_g174828 );
				#if defined( TVE_EMISSIVE_SAMPLE_MAIN_UV )
				float4 staticSwitch176_g174826 = localSampleMain276_g174828;
				#elif defined( TVE_EMISSIVE_SAMPLE_EXTRA_UV )
				float4 staticSwitch176_g174826 = localSampleExtra275_g174828;
				#else
				float4 staticSwitch176_g174826 = localSampleMain276_g174828;
				#endif
				half4 Emissive_MaskTex201_g174826 = staticSwitch176_g174826;
				float clampResult17_g174832 = clamp( (Emissive_MaskTex201_g174826).x , 0.0001 , 0.9999 );
				float temp_output_7_0_g174831 = _EmissiveMaskRemap.x;
				float temp_output_10_0_g174831 = ( _EmissiveMaskRemap.y - temp_output_7_0_g174831 );
				float lerpResult302_g174826 = lerp( 1.0 , saturate( ( ( clampResult17_g174832 - temp_output_7_0_g174831 ) / ( temp_output_10_0_g174831 + 0.0001 ) ) ) , _EmissiveMaskValue);
				half Emissive_Mask103_g174826 = lerpResult302_g174826;
				float temp_output_279_0_g174826 = ( Emissive_MeshMask221_g174826 * Emissive_Mask103_g174826 );
				float3 appendResult293_g174826 = (float3(temp_output_279_0_g174826 , temp_output_279_0_g174826 , temp_output_279_0_g174826));
				half3 Local_EmissiveColor278_g174826 = appendResult293_g174826;
				half4 Visual_Emissive255_g174826 = Out_Emissive4_g174835;
				float3 lerpResult285_g174826 = lerp( Local_EmissiveColor278_g174826 , (Visual_Emissive255_g174826).xyz , (Visual_Emissive255_g174826).w);
				float3 temp_cast_52 = (1.0).xxx;
				TVEGlobalData Data15_g174827 = Data204_g173897;
				float Out_Dummy15_g174827 = 0;
				float4 Out_CoatParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174827 = float4( 0,0,0,0 );
				Out_Dummy15_g174827 = Data15_g174827.Dummy;
				Out_CoatParams15_g174827 = Data15_g174827.CoatParams;
				Out_PaintParams15_g174827 = Data15_g174827.PaintParams;
				Out_GlowParams15_g174827 = Data15_g174827.GlowParams;
				Out_AtmoParams15_g174827= Data15_g174827.AtmoParams;
				Out_FadeParams15_g174827= Data15_g174827.FadeParams;
				Out_FormParams15_g174827 = Data15_g174827.FormParams;
				Out_LandParams15_g174827 = Data15_g174827.LandParams;
				Out_WindParams15_g174827 = Data15_g174827.WindParams;
				Out_PushParams15_g174827 = Data15_g174827.PushParams;
				half4 Global_GlowParams179_g174826 = Out_GlowParams15_g174827;
				float3 lerpResult299_g174826 = lerp( float3( 1,1,1 ) , (Global_GlowParams179_g174826).xyz , TVE_IsEnabled);
				#ifdef TVE_EMISSIVE_ELEMENT
				float3 staticSwitch228_g174826 = lerpResult299_g174826;
				#else
				float3 staticSwitch228_g174826 = temp_cast_52;
				#endif
				half3 Emissive_GlobalMask248_g174826 = staticSwitch228_g174826;
				half3 Visual_AlbedoRaw306_g174826 = temp_output_297_23_g174826;
				float3 lerpResult307_g174826 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g174826 , _EmissiveColorMode);
				half3 Local_EmissiveValue88_g174826 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g174826 * lerpResult307_g174826 );
				half3 Emissive_Blend260_g174826 = ( lerpResult285_g174826 * Local_EmissiveValue88_g174826 );
				float3 temp_output_3_0_g174840 = Emissive_Blend260_g174826;
				float temp_output_15_0_g174840 = _emissive_power_value;
				float3 temp_output_23_0_g174840 = ( temp_output_3_0_g174840 * temp_output_15_0_g174840 );
				half Local_EmissiveMask294_g174826 = temp_output_279_0_g174826;
				float4 appendResult295_g174826 = (float4(temp_output_23_0_g174840 , Local_EmissiveMask294_g174826));
				#ifdef TVE_EMISSIVE
				float4 staticSwitch129_g174826 = appendResult295_g174826;
				#else
				float4 staticSwitch129_g174826 = temp_cast_51;
				#endif
				half4 Final_Emissive184_g174826 = staticSwitch129_g174826;
				float4 In_Emissive3_g174836 = Final_Emissive184_g174826;
				float In_Grayscale3_g174836 = Out_Grayscale4_g174835;
				float In_Luminosity3_g174836 = Out_Luminosity4_g174835;
				float temp_output_297_11_g174826 = Out_MultiMask4_g174835;
				float In_MultiMask3_g174836 = temp_output_297_11_g174826;
				float In_AlphaClip3_g174836 = Out_AlphaClip4_g174835;
				float In_AlphaFade3_g174836 = Out_AlphaFade4_g174835;
				float3 In_Translucency3_g174836 = Out_Translucency4_g174835;
				float In_Transmission3_g174836 = Out_Transmission4_g174835;
				float In_Thickness3_g174836 = Out_Thickness4_g174835;
				float In_Diffusion3_g174836 = Out_Diffusion4_g174835;
				Data3_g174836.Dummy = In_Dummy3_g174836;
				Data3_g174836.Albedo = In_Albedo3_g174836;
				Data3_g174836.AlbedoRaw = In_AlbedoRaw3_g174836;
				Data3_g174836.NormalTS = In_NormalTS3_g174836;
				Data3_g174836.NormalWS = In_NormalWS3_g174836;
				Data3_g174836.Shader = In_Shader3_g174836;
				Data3_g174836.Emissive= In_Emissive3_g174836;
				Data3_g174836.MultiMask = In_MultiMask3_g174836;
				Data3_g174836.Grayscale = In_Grayscale3_g174836;
				Data3_g174836.Luminosity = In_Luminosity3_g174836;
				Data3_g174836.AlphaClip = In_AlphaClip3_g174836;
				Data3_g174836.AlphaFade = In_AlphaFade3_g174836;
				Data3_g174836.Translucency = In_Translucency3_g174836;
				Data3_g174836.Transmission = In_Transmission3_g174836;
				Data3_g174836.Thickness = In_Thickness3_g174836;
				Data3_g174836.Diffusion = In_Diffusion3_g174836;
				TVEVisualData Data4_g174858 = Data3_g174836;
				float Out_Dummy4_g174858 = 0;
				float3 Out_Albedo4_g174858 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174858 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174858 = float2( 0,0 );
				float3 Out_NormalWS4_g174858 = float3( 0,0,0 );
				float4 Out_Shader4_g174858 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174858 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174858 = 0;
				float Out_Grayscale4_g174858 = 0;
				float Out_Luminosity4_g174858 = 0;
				float Out_AlphaClip4_g174858 = 0;
				float Out_AlphaFade4_g174858 = 0;
				float3 Out_Translucency4_g174858 = float3( 0,0,0 );
				float Out_Transmission4_g174858 = 0;
				float Out_Thickness4_g174858 = 0;
				float Out_Diffusion4_g174858 = 0;
				Out_Dummy4_g174858 = Data4_g174858.Dummy;
				Out_Albedo4_g174858 = Data4_g174858.Albedo;
				Out_AlbedoRaw4_g174858 = Data4_g174858.AlbedoRaw;
				Out_NormalTS4_g174858 = Data4_g174858.NormalTS;
				Out_NormalWS4_g174858 = Data4_g174858.NormalWS;
				Out_Shader4_g174858 = Data4_g174858.Shader;
				Out_Emissive4_g174858= Data4_g174858.Emissive;
				Out_MultiMask4_g174858 = Data4_g174858.MultiMask;
				Out_Grayscale4_g174858 = Data4_g174858.Grayscale;
				Out_Luminosity4_g174858= Data4_g174858.Luminosity;
				Out_AlphaClip4_g174858 = Data4_g174858.AlphaClip;
				Out_AlphaFade4_g174858 = Data4_g174858.AlphaFade;
				Out_Translucency4_g174858 = Data4_g174858.Translucency;
				Out_Transmission4_g174858 = Data4_g174858.Transmission;
				Out_Thickness4_g174858 = Data4_g174858.Thickness;
				Out_Diffusion4_g174858 = Data4_g174858.Diffusion;
				half3 Visual_Albedo199_g174857 = Out_Albedo4_g174858;
				float3 temp_cast_53 = (0.0).xxx;
				half3 Subsurface_Color264_g174857 = ( (_SubsurfaceColor).rgb * Visual_Albedo199_g174857 );
				half Visual_Transmission138_g174857 = Out_Transmission4_g174858;
				half Subsurface_Value268_g174857 = _SubsurfaceIntensityValue;
				TVEGlobalData Data15_g174860 = Data204_g173897;
				float Out_Dummy15_g174860 = 0;
				float4 Out_CoatParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174860 = float4( 0,0,0,0 );
				Out_Dummy15_g174860 = Data15_g174860.Dummy;
				Out_CoatParams15_g174860 = Data15_g174860.CoatParams;
				Out_PaintParams15_g174860 = Data15_g174860.PaintParams;
				Out_GlowParams15_g174860 = Data15_g174860.GlowParams;
				Out_AtmoParams15_g174860= Data15_g174860.AtmoParams;
				Out_FadeParams15_g174860= Data15_g174860.FadeParams;
				Out_FormParams15_g174860 = Data15_g174860.FormParams;
				Out_LandParams15_g174860 = Data15_g174860.LandParams;
				Out_WindParams15_g174860 = Data15_g174860.WindParams;
				Out_PushParams15_g174860 = Data15_g174860.PushParams;
				half4 Global_GlowParams373_g174857 = Out_GlowParams15_g174860;
				float lerpResult403_g174857 = lerp( 1.0 , saturate( (Global_GlowParams373_g174857).w ) , TVE_IsEnabled);
				#ifdef TVE_SUBSURFACE_ELEMENT
				float staticSwitch367_g174857 = lerpResult403_g174857;
				#else
				float staticSwitch367_g174857 = 1.0;
				#endif
				half Subsurface_GlobalMask369_g174857 = staticSwitch367_g174857;
				float temp_output_301_11_g174857 = Out_MultiMask4_g174858;
				half Visual_MultiMask292_g174857 = temp_output_301_11_g174857;
				float lerpResult293_g174857 = lerp( 1.0 , Visual_MultiMask292_g174857 , _SubsurfaceMultiValue);
				half Subsurface_MultiMask296_g174857 = lerpResult293_g174857;
				half Custom_Mask363_g174857 = 1.0;
				#ifdef TVE_SUBSURFACE
				float staticSwitch345_g174857 = ( Visual_Transmission138_g174857 * Subsurface_Value268_g174857 * Subsurface_GlobalMask369_g174857 * Subsurface_MultiMask296_g174857 * Custom_Mask363_g174857 );
				#else
				float staticSwitch345_g174857 = 0.0;
				#endif
				half Final_Transmission269_g174857 = staticSwitch345_g174857;
				#ifdef TVE_SUBSURFACE
				float3 staticSwitch348_g174857 = ( Subsurface_Color264_g174857 * Final_Transmission269_g174857 * 10.0 );
				#else
				float3 staticSwitch348_g174857 = temp_cast_53;
				#endif
				half3 Final_Translucency254_g174857 = staticSwitch348_g174857;
				TVEModelData Data15_g174863 = Data16_g164566;
				float Out_Dummy15_g174863 = 0;
				float3 Out_PositionWS15_g174863 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174863 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174863 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174863 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174863 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174863 = float3( 0,0,0 );
				float4 Out_VertexData15_g174863 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174863 = float4( 0,0,0,0 );
				Out_Dummy15_g174863 = Data15_g174863.Dummy;
				Out_PositionWS15_g174863 = Data15_g174863.PositionWS;
				Out_PositionWO15_g174863 = Data15_g174863.PositionWO;
				Out_PivotWS15_g174863 = Data15_g174863.PivotWS;
				Out_PivotWO15_g174863 = Data15_g174863.PivotWO;
				Out_NormalWS15_g174863 = Data15_g174863.NormalWS;
				Out_ViewDirWS15_g174863 = Data15_g174863.ViewDirWS;
				Out_VertexData15_g174863 = Data15_g174863.VertexData;
				Out_BoundsData15_g174863 = Data15_g174863.BoundsData;
				half3 Model_ViewDirWS392_g174857 = Out_ViewDirWS15_g174863;
				float dotResult324_g174857 = dot( -TVE_MainLightDirection , Model_ViewDirWS392_g174857 );
				float saferPower323_g174857 = abs( saturate( dotResult324_g174857 ) );
				#ifdef UNITY_PASS_FORWARDADD
				float staticSwitch330_g174857 = 0.0;
				#else
				float staticSwitch330_g174857 = ( pow( saferPower323_g174857 , _SubsurfaceAngleValue ) * _SubsurfaceScatteringValue );
				#endif
				half Mask_Subsurface_View320_g174857 = staticSwitch330_g174857;
				float3 temp_output_6_0_g174861 = ( Final_Translucency254_g174857 * Mask_Subsurface_View320_g174857 );
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g174861 = ( temp_output_6_0_g174861 + ( _SubsurfaceAproxInfo * 0.0 ) );
				#else
				float3 staticSwitch14_g174861 = temp_output_6_0_g174861;
				#endif
				half3 Subsurface_Approximation333_g174857 = staticSwitch14_g174861;
				#ifdef TVE_SUBSURFACE
				float3 staticSwitch353_g174857 = ( Visual_Albedo199_g174857 + Subsurface_Approximation333_g174857 );
				#else
				float3 staticSwitch353_g174857 = Visual_Albedo199_g174857;
				#endif
				half3 Final_Albedo312_g174857 = staticSwitch353_g174857;
				float3 In_Albedo3_g174859 = Final_Albedo312_g174857;
				float3 In_AlbedoRaw3_g174859 = Out_AlbedoRaw4_g174858;
				float2 In_NormalTS3_g174859 = Out_NormalTS4_g174858;
				float3 In_NormalWS3_g174859 = Out_NormalWS4_g174858;
				float4 In_Shader3_g174859 = Out_Shader4_g174858;
				float4 In_Emissive3_g174859 = Out_Emissive4_g174858;
				float In_Grayscale3_g174859 = Out_Grayscale4_g174858;
				float In_Luminosity3_g174859 = Out_Luminosity4_g174858;
				float In_MultiMask3_g174859 = temp_output_301_11_g174857;
				float In_AlphaClip3_g174859 = Out_AlphaClip4_g174858;
				float In_AlphaFade3_g174859 = Out_AlphaFade4_g174858;
				float3 In_Translucency3_g174859 = Final_Translucency254_g174857;
				float In_Transmission3_g174859 = Final_Transmission269_g174857;
				#ifdef TVE_SUBSURFACE
				float staticSwitch351_g174857 = 0.0;
				#else
				float staticSwitch351_g174857 = 1.0;
				#endif
				half Final_Thickness275_g174857 = staticSwitch351_g174857;
				float In_Thickness3_g174859 = Final_Thickness275_g174857;
				float Final_Diffusion340_g174857 = _SubsurfaceDiffusion;
				float In_Diffusion3_g174859 = Final_Diffusion340_g174857;
				Data3_g174859.Dummy = In_Dummy3_g174859;
				Data3_g174859.Albedo = In_Albedo3_g174859;
				Data3_g174859.AlbedoRaw = In_AlbedoRaw3_g174859;
				Data3_g174859.NormalTS = In_NormalTS3_g174859;
				Data3_g174859.NormalWS = In_NormalWS3_g174859;
				Data3_g174859.Shader = In_Shader3_g174859;
				Data3_g174859.Emissive= In_Emissive3_g174859;
				Data3_g174859.MultiMask = In_MultiMask3_g174859;
				Data3_g174859.Grayscale = In_Grayscale3_g174859;
				Data3_g174859.Luminosity = In_Luminosity3_g174859;
				Data3_g174859.AlphaClip = In_AlphaClip3_g174859;
				Data3_g174859.AlphaFade = In_AlphaFade3_g174859;
				Data3_g174859.Translucency = In_Translucency3_g174859;
				Data3_g174859.Transmission = In_Transmission3_g174859;
				Data3_g174859.Thickness = In_Thickness3_g174859;
				Data3_g174859.Diffusion = In_Diffusion3_g174859;
				TVEVisualData Data4_g174874 = Data3_g174859;
				float Out_Dummy4_g174874 = 0;
				float3 Out_Albedo4_g174874 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174874 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174874 = float2( 0,0 );
				float3 Out_NormalWS4_g174874 = float3( 0,0,0 );
				float4 Out_Shader4_g174874 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174874 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174874 = 0;
				float Out_Grayscale4_g174874 = 0;
				float Out_Luminosity4_g174874 = 0;
				float Out_AlphaClip4_g174874 = 0;
				float Out_AlphaFade4_g174874 = 0;
				float3 Out_Translucency4_g174874 = float3( 0,0,0 );
				float Out_Transmission4_g174874 = 0;
				float Out_Thickness4_g174874 = 0;
				float Out_Diffusion4_g174874 = 0;
				Out_Dummy4_g174874 = Data4_g174874.Dummy;
				Out_Albedo4_g174874 = Data4_g174874.Albedo;
				Out_AlbedoRaw4_g174874 = Data4_g174874.AlbedoRaw;
				Out_NormalTS4_g174874 = Data4_g174874.NormalTS;
				Out_NormalWS4_g174874 = Data4_g174874.NormalWS;
				Out_Shader4_g174874 = Data4_g174874.Shader;
				Out_Emissive4_g174874= Data4_g174874.Emissive;
				Out_MultiMask4_g174874 = Data4_g174874.MultiMask;
				Out_Grayscale4_g174874 = Data4_g174874.Grayscale;
				Out_Luminosity4_g174874= Data4_g174874.Luminosity;
				Out_AlphaClip4_g174874 = Data4_g174874.AlphaClip;
				Out_AlphaFade4_g174874 = Data4_g174874.AlphaFade;
				Out_Translucency4_g174874 = Data4_g174874.Translucency;
				Out_Transmission4_g174874 = Data4_g174874.Transmission;
				Out_Thickness4_g174874 = Data4_g174874.Thickness;
				Out_Diffusion4_g174874 = Data4_g174874.Diffusion;
				half3 Input_Albedo24_g174873 = Out_Albedo4_g174874;
				#ifdef UNITY_COLORSPACE_GAMMA
				float4 staticSwitch22_g174873 = half4(0.2209163,0.2209163,0.2209163,0.7790837);
				#else
				float4 staticSwitch22_g174873 = half4(0.04,0.04,0.04,0.96);
				#endif
				half4 ColorSpaceDielectricSpec23_g174873 = staticSwitch22_g174873;
				float4 break24_g174868 = Out_Shader4_g174874;
				half Metallic95_g174868 = break24_g174868.x;
				half Input_Metallic25_g174873 = Metallic95_g174868;
				half OneMinusReflectivity31_g174873 = ( (ColorSpaceDielectricSpec23_g174873).w - ( (ColorSpaceDielectricSpec23_g174873).w * Input_Metallic25_g174873 ) );
				
				float3 appendResult23_g174868 = (float3(Out_NormalTS4_g174874 , 1.0));
				float3 temp_output_13_0_g174872 = appendResult23_g174868;
				float3 temp_output_33_0_g174872 = ( temp_output_13_0_g174872 * _render_normal );
				float3 switchResult12_g174872 = (((ase_vface>0)?(temp_output_13_0_g174872):(temp_output_33_0_g174872)));
				
				half Smoothness105_g174868 = break24_g174868.w;
				half Input_Smoothness43_g174877 = Smoothness105_g174868;
				half Input_True57_g174879 = Input_Smoothness43_g174877;
				half True33_g174879 = Input_True57_g174879;
				half RenderSpec102_g174868 = _RenderSpecular;
				half Input_RenderSpec58_g174877 = RenderSpec102_g174868;
				float temp_output_46_0_g174877 = max( ( Input_Smoothness43_g174877 * Input_RenderSpec58_g174877 ) , 0.001 );
				float temp_output_6_0_g174878 = temp_output_46_0_g174877;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174878 = ( temp_output_6_0_g174878 + ( _SpecColor.r * 0.0 ) );
				#else
				float staticSwitch14_g174878 = temp_output_6_0_g174878;
				#endif
				float temp_output_61_0_g174877 = staticSwitch14_g174878;
				half Input_False58_g174879 = temp_output_61_0_g174877;
				half False33_g174879 = Input_False58_g174879;
				half localShadowPassCheck33_g174879 = ShadowPassCheck33_g174879( True33_g174879 , False33_g174879 );
				
				half Input_True57_g174880 = 0.04;
				half True33_g174880 = Input_True57_g174880;
				half Input_False58_g174880 = temp_output_46_0_g174877;
				half False33_g174880 = Input_False58_g174880;
				half localShadowPassCheck33_g174880 = ShadowPassCheck33_g174880( True33_g174880 , False33_g174880 );
				
				float localCustomAlphaClip19_g174875 = ( 0.0 );
				float temp_output_3_0_g174875 = Out_AlphaClip4_g174874;
				float Alpha19_g174875 = temp_output_3_0_g174875;
				float temp_output_15_0_g174875 = 0.0;
				float Treshold19_g174875 = temp_output_15_0_g174875;
				#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_DITHER)
				#if defined ( TVE_PIPELINE_HD)
				#if !defined(SHADERPASS_FORWARD_BYPASS_ALPHA_TEST) && !defined(SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST)
				clip(Alpha19_g174875 - Treshold19_g174875);
				#endif
				#else
				clip(Alpha19_g174875 - Treshold19_g174875);
				#endif
				#endif
				
				o.Albedo = ( Input_Albedo24_g174873 * OneMinusReflectivity31_g174873 );
				o.Normal = switchResult12_g174872;
				o.Emission = (Out_Emissive4_g174874).xyz;

				#if defined(ASE_LIGHTING_SIMPLE)
					o.Specular = localShadowPassCheck33_g174879;
					o.Gloss = localShadowPassCheck33_g174880;
				#else
					#if defined(_SPECULAR_SETUP)
						o.Specular = fixed3( 1, 1, 1 );
					#else
						o.Metallic = 0;
					#endif
					o.Occlusion = 1;
					o.Smoothness = 0;
				#endif

				o.Alpha = saturate( ( Alpha19_g174875 * Out_AlphaFade4_g174874 ) );
				float AlphaClipThreshold = 0.5;
				float AlphaClipThresholdShadow = 0.5;
				float3 BakedGI = 0;
				float3 RefractionColor = 1;
				float RefractionIndex = 1;
				float3 Transmission = 1;
				float3 Translucency = 1;

				#ifdef _ALPHATEST_ON
					clip( o.Alpha - AlphaClipThreshold );
				#endif

				#ifdef _DEPTHOFFSET_ON
					outputDepth = IN.pos.z;
				#endif

				#ifndef USING_DIRECTIONAL_LIGHT
					fixed3 lightDir = normalize(UnityWorldSpaceLightDir(worldPos));
				#else
					fixed3 lightDir = _WorldSpaceLightPos0.xyz;
				#endif

				fixed4 c = 0;
				float3 worldN;
				worldN.x = dot(IN.tSpace0.xyz, o.Normal);
				worldN.y = dot(IN.tSpace1.xyz, o.Normal);
				worldN.z = dot(IN.tSpace2.xyz, o.Normal);
				worldN = normalize(worldN);
				o.Normal = worldN;

				UnityGI gi;
				UNITY_INITIALIZE_OUTPUT(UnityGI, gi);
				gi.indirect.diffuse = 0;
				gi.indirect.specular = 0;
				gi.light.color = _LightColor0.rgb;
				gi.light.dir = lightDir;

				UnityGIInput giInput;
				UNITY_INITIALIZE_OUTPUT(UnityGIInput, giInput);
				giInput.light = gi.light;
				giInput.worldPos = worldPos;
				giInput.worldViewDir = worldViewDir;
				giInput.atten = atten;
				#if defined(LIGHTMAP_ON) || defined(DYNAMICLIGHTMAP_ON)
					giInput.lightmapUV = IN.lmap;
				#else
					giInput.lightmapUV = 0.0;
				#endif
				#if UNITY_SHOULD_SAMPLE_SH && !UNITY_SAMPLE_FULL_SH_PER_PIXEL
					giInput.ambient = IN.sh;
				#else
					giInput.ambient.rgb = 0.0;
				#endif
				giInput.probeHDR[0] = unity_SpecCube0_HDR;
				giInput.probeHDR[1] = unity_SpecCube1_HDR;
				#if defined(UNITY_SPECCUBE_BLENDING) || defined(UNITY_SPECCUBE_BOX_PROJECTION)
					giInput.boxMin[0] = unity_SpecCube0_BoxMin;
				#endif
				#ifdef UNITY_SPECCUBE_BOX_PROJECTION
					giInput.boxMax[0] = unity_SpecCube0_BoxMax;
					giInput.probePosition[0] = unity_SpecCube0_ProbePosition;
					giInput.boxMax[1] = unity_SpecCube1_BoxMax;
					giInput.boxMin[1] = unity_SpecCube1_BoxMin;
					giInput.probePosition[1] = unity_SpecCube1_ProbePosition;
				#endif

				#if defined(ASE_LIGHTING_SIMPLE)
					#if defined(_SPECULAR_SETUP)
						LightingBlinnPhong_GI(o, giInput, gi);
					#else
						LightingLambert_GI(o, giInput, gi);
					#endif
				#else
					#if defined(_SPECULAR_SETUP)
						LightingStandardSpecular_GI(o, giInput, gi);
					#else
						LightingStandard_GI(o, giInput, gi);
					#endif
				#endif

				#ifdef ASE_BAKEDGI
					gi.indirect.diffuse = BakedGI;
				#endif

				#if UNITY_SHOULD_SAMPLE_SH && !defined(LIGHTMAP_ON) && defined(ASE_NO_AMBIENT)
					gi.indirect.diffuse = 0;
				#endif

				#if defined(ASE_LIGHTING_SIMPLE)
					#if defined(_SPECULAR_SETUP)
						c += LightingBlinnPhong (o, worldViewDir, gi);
					#else
						c += LightingLambert( o, gi );
					#endif
				#else
					#if defined(_SPECULAR_SETUP)
						c += LightingStandardSpecular (o, worldViewDir, gi);
					#else
						c += LightingStandard(o, worldViewDir, gi);
					#endif
				#endif

				#ifdef ASE_TRANSMISSION
				{
					float shadow = _TransmissionShadow;
					#ifdef DIRECTIONAL
						float3 lightAtten = lerp( _LightColor0.rgb, gi.light.color, shadow );
					#else
						float3 lightAtten = gi.light.color;
					#endif
					half3 transmission = max(0 , -dot(o.Normal, gi.light.dir)) * lightAtten * Transmission;
					c.rgb += o.Albedo * transmission;
				}
				#endif

				#ifdef ASE_TRANSLUCENCY
				{
					float shadow = _TransShadow;
					float normal = _TransNormal;
					float scattering = _TransScattering;
					float direct = _TransDirect;
					float ambient = _TransAmbient;
					float strength = _TransStrength;

					#ifdef DIRECTIONAL
						float3 lightAtten = lerp( _LightColor0.rgb, gi.light.color, shadow );
					#else
						float3 lightAtten = gi.light.color;
					#endif
					half3 lightDir = gi.light.dir + o.Normal * normal;
					half transVdotL = pow( saturate( dot( worldViewDir, -lightDir ) ), scattering );
					half3 translucency = lightAtten * (transVdotL * direct + gi.indirect.diffuse * ambient) * Translucency;
					c.rgb += o.Albedo * translucency * strength;
				}
				#endif

				//#ifdef ASE_REFRACTION
				//	float4 projScreenPos = ScreenPos / ScreenPos.w;
				//	float3 refractionOffset = ( RefractionIndex - 1.0 ) * mul( UNITY_MATRIX_V, WorldNormal ).xyz * ( 1.0 - dot( WorldNormal, WorldViewDirection ) );
				//	projScreenPos.xy += refractionOffset.xy;
				//	float3 refraction = UNITY_SAMPLE_SCREENSPACE_TEXTURE( _GrabTexture, projScreenPos ) * RefractionColor;
				//	color.rgb = lerp( refraction, color.rgb, color.a );
				//	color.a = 1;
				//#endif

				c.rgb += o.Emission;

				#ifdef ASE_FOG
					UNITY_APPLY_FOG(IN.fogCoord, c);
				#endif
				return c;
			}
			ENDCG
		}

		
		Pass
		{
			
			Name "ForwardAdd"
			Tags { "LightMode"="ForwardAdd" }
			ZWrite Off
			Blend One One

			CGPROGRAM
			#define ASE_GEOMETRY 1
			#define ASE_NEEDS_FRAG_SHADOWCOORDS
			#pragma shader_feature_local_fragment _ _SPECULARHIGHLIGHTS_OFF
			#pragma multi_compile_instancing
			#pragma multi_compile __ LOD_FADE_CROSSFADE
			#pragma multi_compile_fog
			#define ASE_FOG 1
			#define ASE_ABSOLUTE_VERTEX_POS 1
			#define _SPECULAR_SETUP 1
			#define ASE_LIGHTING_SIMPLE 1
			#define _ENVIRONMENTREFLECTIONS_OFF 1
			#define ASE_USING_SAMPLING_MACROS 1

			#pragma vertex vert
			#pragma fragment frag
			#pragma skip_variants INSTANCING_ON
			#pragma multi_compile_fwdadd_fullshadows
			#ifndef UNITY_PASS_FORWARDADD
				#define UNITY_PASS_FORWARDADD
			#endif
			#include "HLSLSupport.cginc"

			#ifdef ASE_GEOMETRY
				#ifndef UNITY_INSTANCED_LOD_FADE
					#define UNITY_INSTANCED_LOD_FADE
				#endif
				#ifndef UNITY_INSTANCED_SH
					#define UNITY_INSTANCED_SH
				#endif
				#ifndef UNITY_INSTANCED_LIGHTMAPSTS
					#define UNITY_INSTANCED_LIGHTMAPSTS
				#endif
			#endif

			#include "UnityShaderVariables.cginc"
			#include "UnityCG.cginc"
			#include "Lighting.cginc"
			#include "UnityPBSLighting.cginc"
			#include "AutoLight.cginc"

			#include "UnityStandardBRDF.cginc"
			#define ASE_NEEDS_VERT_POSITION
			#define ASE_NEEDS_VERT_NORMAL
			#define ASE_NEEDS_VERT_TANGENT
			#define ASE_NEEDS_FRAG_WORLD_NORMAL
			#define ASE_NEEDS_FRAG_WORLD_TANGENT
			#define ASE_NEEDS_FRAG_WORLD_BITANGENT
			#define ASE_NEEDS_FRAG_WORLD_POSITION
			#pragma shader_feature_local_fragment TVE_PIPELINE_STANDARD TVE_PIPELINE_UNIVERSAL TVE_PIPELINE_HD
			#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
			#pragma shader_feature_local_vertex TVE_SIZEFADE
			#pragma shader_feature_local_vertex TVE_PERSPECTIVE
			#pragma shader_feature_local_vertex TVE_PIVOT_OFF TVE_PIVOT_BAKED TVE_PIVOT_PROC
			#pragma shader_feature_local_vertex TVE_SIZEFADE_ELEMENT
			#pragma shader_feature_local_vertex TVE_MOTION_SMALL_SQUASH
			#pragma shader_feature_local TVE_LEGACY
			#pragma shader_feature_local_vertex TVE_MOTION_WIND_ELEMENT
			#pragma shader_feature_local_vertex TVE_MOTION_WIND_OFF TVE_MOTION_WIND_OPTIMIZED TVE_MOTION_WIND_ADVANCED
			#pragma shader_feature_local_vertex TVE_MOTION_TINY_FLUTTER
			#pragma shader_feature_local_vertex TVE_MOTION_PUSH_BENDING
			#pragma shader_feature_local_vertex TVE_MOTION_BASE_BENDING
			#pragma shader_feature_local_vertex TVE_BLANKET_BENDING
			#pragma shader_feature_local_vertex TVE_NORMAL_COMPUTE
			#pragma shader_feature_local_fragment TVE_SUBSURFACE
			#pragma shader_feature_local_fragment TVE_WETNESS
			#pragma shader_feature_local_fragment TVE_OVERLAY
			#pragma shader_feature_local_fragment TVE_MOTION_HIGHLIGHT
			#pragma shader_feature_local_fragment TVE_DRYNESS
			#pragma shader_feature_local_fragment TVE_TINTING
			#pragma shader_feature_local_fragment TVE_VARIATION
			#pragma shader_feature_local_fragment TVE_GRADIENT
			#pragma shader_feature_local_fragment TVE_OCCLUSION
			#pragma shader_feature_local_fragment TVE_TERRAIN
			#pragma shader_feature_local_fragment TVE_THIRD
			#pragma shader_feature_local_fragment TVE_SECOND
			#pragma shader_feature_local_fragment TVE_MAIN_SAMPLE_MAIN_UV TVE_MAIN_SAMPLE_EXTRA_UV TVE_MAIN_SAMPLE_PLANAR_2D TVE_MAIN_SAMPLE_PLANAR_3D TVE_MAIN_SAMPLE_STOCHASTIC_2D TVE_MAIN_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
			#pragma shader_feature_local_fragment TVE_SECOND_SAMPLE_MAIN_UV TVE_SECOND_SAMPLE_EXTRA_UV TVE_SECOND_SAMPLE_PLANAR_2D TVE_SECOND_SAMPLE_PLANAR_3D TVE_SECOND_SAMPLE_STOCHASTIC_2D TVE_SECOND_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_SECOND_MASK_SAMPLE_MAIN_UV TVE_SECOND_MASK_SAMPLE_EXTRA_UV TVE_SECOND_MASK_SAMPLE_PLANAR_2D TVE_SECOND_MASK_SAMPLE_PLANAR_3D
			#pragma shader_feature_local_fragment TVE_SECOND_ELEMENT
			#pragma shader_feature_local_fragment TVE_THIRD_SAMPLE_MAIN_UV TVE_THIRD_SAMPLE_EXTRA_UV TVE_THIRD_SAMPLE_PLANAR_2D TVE_THIRD_SAMPLE_PLANAR_3D TVE_THIRD_SAMPLE_STOCHASTIC_2D TVE_THIRD_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_THIRD_MASK_SAMPLE_MAIN_UV TVE_THIRD_MASK_SAMPLE_EXTRA_UV TVE_THIRD_MASK_SAMPLE_PLANAR_2D TVE_THIRD_MASK_SAMPLE_PLANAR_3D
			#pragma shader_feature_local_fragment TVE_THIRD_ELEMENT
			#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
			#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_MASK_SAMPLE_MAIN_UV TVE_TERRAIN_MASK_SAMPLE_EXTRA_UV TVE_TERRAIN_MASK_SAMPLE_PLANAR_2D TVE_TERRAIN_MASK_SAMPLE_PLANAR_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_ELEMENT
			#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
			#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
			#pragma shader_feature_local_fragment TVE_DRYNESS_SHIFT
			#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
			#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
			#pragma shader_feature_local_fragment TVE_OVERLAY_MASK_SAMPLE_MAIN_UV TVE_OVERLAY_MASK_SAMPLE_EXTRA_UV
			#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_WATER
			#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_VERT
			#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
			#pragma shader_feature_local_fragment TVE_CUTOUT
			#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
			#pragma shader_feature_local_fragment TVE_DITHER
			#pragma shader_feature_local_fragment TVE_EMISSIVE
			#pragma shader_feature_local_fragment TVE_EMISSIVE_SAMPLE_MAIN_UV TVE_EMISSIVE_SAMPLE_EXTRA_UV
			#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
			#pragma shader_feature_local_fragment TVE_SUBSURFACE_ELEMENT
			//SHADER INJECTION POINT BEGIN
			//SHADER INJECTION POINT END
			  
			struct TVEVisualData
			{  
				half Dummy;  
				half3 Albedo;
				half3 AlbedoRaw;
				half2 NormalTS;
				half3 NormalWS; 
				half4 Shader;
				half4 Emissive;
				half AlphaClip;
				half AlphaFade;
				half MultiMask;
				half Grayscale;
				half Luminosity;
				half3 Translucency;
				half Transmission;
				half Thickness;
				float Diffusion;
			};  
			    
			struct TVEModelData
			{    
				half Dummy;    
				half3 PositionOS;
				half3 PositionWS;
				half3 PositionWO;
				half3 PositionRawOS;
				half3 PositionAddOS;
				half3 PivotOS;
				half3 PivotWS;
				half3 PivotWO;
				half3 NormalOS;
				half3 NormalWS;
				half3 NormalRawOS;
				half3 NormalRawWS;
				half4 TangentOS;
				half3 ViewDirWS;
				half4 VertexData;
				half4 MotionData;
				half4 BoundsData;
				half4 RotationData;
			};    
			      
			struct TVEGlobalData
			{      
				half Dummy;      
				half4 CoatParams;
				half4 PaintParams;
				half4 GlowParams;
				half4 AtmoParams;
				half4 FadeParams;
				half4 FormParams;
				half4 LandParams;
				half4 WindParams;
				half4 PushParams;
			};      
			        
			//#pragma editor_sync_compilation
			#if defined(SHADER_API_D3D11) || defined(SHADER_API_XBOXONE) || defined(UNITY_COMPILER_HLSLCC) || defined(SHADER_API_PSSL) || (defined(SHADER_TARGET_SURFACE_ANALYSIS) && !defined(SHADER_TARGET_SURFACE_ANALYSIS_MOJOSHADER))//ASE Sampler Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex.SampleBias(samplerTex,coord,bias)
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex.SampleGrad(samplerTex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE3D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#else//ASE Sampling Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex2D(tex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex2Dlod(tex,float4(coord,0,lod))
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex2Dbias(tex,float4(coord,0,bias))
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex2Dgrad(tex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE3D(tex,samplerTex,coord) tex3D(tex,coord)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplertex,coord,lod) tex2DArraylod(tex, float4(coord,lod))
			#endif//ASE Sampling Macros
			

			struct appdata {
				float4 vertex : POSITION;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;
				UNITY_VERTEX_INPUT_INSTANCE_ID
			};
			struct v2f {
				#if UNITY_VERSION >= 201810
					UNITY_POSITION(pos);
				#else
					float4 pos : SV_POSITION;
				#endif
				#if UNITY_VERSION >= 201810 && defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					UNITY_LIGHTING_COORDS(1,2)
				#elif defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					#if UNITY_VERSION >= 201710
						UNITY_SHADOW_COORDS(1)
					#else
						SHADOW_COORDS(1)
					#endif
				#endif
				#ifdef ASE_FOG
					UNITY_FOG_COORDS(3)
				#endif
				float4 tSpace0 : TEXCOORD5;
				float4 tSpace1 : TEXCOORD6;
				float4 tSpace2 : TEXCOORD7;
				#if defined(ASE_NEEDS_FRAG_SCREEN_POSITION)
				float4 screenPos : TEXCOORD8;
				#endif
				float4 ase_texcoord9 : TEXCOORD9;
				float4 ase_texcoord10 : TEXCOORD10;
				float4 ase_texcoord11 : TEXCOORD11;
				float4 ase_texcoord12 : TEXCOORD12;
				float4 ase_color : COLOR;
				float4 ase_texcoord13 : TEXCOORD13;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				UNITY_VERTEX_OUTPUT_STEREO
			};

			#ifdef ASE_TRANSMISSION
				float _TransmissionShadow;
			#endif
			#ifdef ASE_TRANSLUCENCY
				float _TransStrength;
				float _TransNormal;
				float _TransScattering;
				float _TransDirect;
				float _TransAmbient;
				float _TransShadow;
			#endif
			#ifdef ASE_TESSELLATION
				float _TessPhongStrength;
				float _TessValue;
				float _TessMin;
				float _TessMax;
				float _TessEdgeLength;
				float _TessMaxDisp;
			#endif
			uniform half _TerrainSampleMode1;
			uniform half _TerrainSampleMode2;
			uniform half _TerrainSampleMode3;
			uniform half _TerrainSampleMode4;
			uniform half _TerrainSampleMode5;
			uniform half _TerrainSampleMode6;
			uniform half _TerrainSampleMode7;
			uniform half _TerrainSampleMode8;
			uniform half _TerrainSampleMode9;
			uniform half _TerrainSampleMode10;
			uniform half _TerrainSampleMode11;
			uniform half _TerrainSampleMode12;
			uniform half _TerrainSampleMode13;
			uniform half _TerrainSampleMode14;
			uniform half _TerrainSampleMode15;
			uniform half _TerrainSampleMode16;
			uniform half _TerrainLayersMode;
			uniform half _TerrainTextureMode;
			uniform half _SubsurfaceScatteringValue;
			uniform half _SubsurfaceAngleValue;
			uniform float _SubsurfaceDiffusion;
			uniform float4 _SubsurfaceDiffusion_Asset;
			uniform half _SubsurfaceSpace;
			uniform half _render_src;
			uniform half _render_cull;
			uniform half _render_dst;
			uniform half _render_zw;
			uniform half _render_coverage;
			uniform half _IsBlanketShader;
			uniform half _IsSimpleShader;
			uniform half _RenderZWrite;
			uniform half4 _Color;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_BumpMap);
			SamplerState sampler_BumpMap;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainTex);
			SamplerState sampler_MainTex;
			uniform half _Cutoff;
			uniform half _IsVersion;
			uniform half _RenderCategory;
			uniform half _RenderEnd;
			uniform half _RenderMode;
			uniform half _NoiseCategory;
			uniform half _NoiseEnd;
			uniform half _RenderCull;
			uniform half _RenderNormal;
			uniform half _RenderBakeGI;
			uniform half _RenderDecals;
			uniform half _RenderSSR;
			uniform half _RenderPriority;
			uniform half _RenderQueue;
			uniform half _RenderMotion;
			uniform half _RenderClip;
			uniform half _RenderShadow;
			uniform half _IsTVEShader;
			uniform half _IsCustomShader;
			uniform half _IsShared;
			uniform half _HasDefaultTextures;
			uniform half _IsCollected;
			uniform half _IsConverted;
			uniform half _IsIdentifier;
			uniform half _RenderFilter;
			UNITY_DECLARE_TEX3D_NOSAMPLER(_NoiseTex3D);
			SamplerState sampler_NoiseTex3D;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_NoiseTexSS);
			SamplerState sampler_NoiseTexSS;
			uniform half _NormalCategory;
			uniform half _NormalEnd;
			uniform half _NormalSpace;
			uniform half _BlanketCategory;
			uniform half _BlanketEnd;
			uniform half _BlanketInfo;
			uniform half _MotionWindCategory;
			uniform half _MotionWindEnd;
			uniform half _MotionInteractionCategory;
			uniform half _MotionInteractionEnd;
			uniform half _MotionWindMode;
			uniform half _MotionWindElementMode;
			uniform half _MotionPushElementMode;
			uniform half _MotionWindOffInfo;
			uniform half _MotionWindOptimizedInfo;
			uniform half _MotionWindAdvancedInfo;
			uniform half _SizeFadeCategory;
			uniform half _SizeFadeEnd;
			uniform half _SizeFadeElementMode;
			uniform half _PerspectiveCategory;
			uniform half _PerspectiveEnd;
			uniform half _ObjectCategory;
			uniform half _ObjectEnd;
			uniform half _ObjectModelMode;
			uniform half _ObjectPivotMode;
			uniform half _ObjectPhaseMode;
			uniform half _ObjectBoundsInfo;
			uniform float3 TVE_WorldOrigin;
			uniform half4 _object_phase_mode;
			uniform half _ObjectHeightValue;
			uniform half _ObjectRadiusValue;
			uniform half _PerspectiveIntensityValue;
			uniform half _PerspectiveAngleValue;
			uniform half _SizeFadeDistMaxValue;
			uniform half _SizeFadeDistMinValue;
			uniform half _SizeFadeScaleValue;
			uniform half _GlobalCategory;
			uniform half _GlobalEnd;
			uniform half _GlobalCoatLayerValue;
			uniform float TVE_CoatLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_CoatBaseTex);
			uniform half4 TVE_RenderBaseCoords;
			uniform half _GlobalCoatPivotValue;
			SamplerState sampler_Linear_Clamp;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_CoatNearTex);
			uniform half4 TVE_RenderNearCoords;
			SamplerState sampler_Linear_Repeat;
			uniform float4 TVE_RenderNearPositionR;
			uniform half TVE_RenderNearFadeValue;
			uniform half4 TVE_CoatParams;
			uniform half _GlobalPaintLayerValue;
			uniform float TVE_PaintLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintBaseTex);
			uniform half _GlobalPaintPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintNearTex);
			uniform half4 TVE_PaintParams;
			uniform half _GlobalGlowLayerValue;
			uniform float TVE_GlowLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowBaseTex);
			uniform half _GlobalGlowPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowNearTex);
			uniform half4 TVE_GlowParams;
			uniform half _GlobalAtmoLayerValue;
			uniform float TVE_AtmoLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoBaseTex);
			uniform half _GlobalAtmoPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoNearTex);
			uniform half4 TVE_AtmoParams;
			uniform half _GlobalFadeLayerValue;
			uniform float TVE_FadeLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeBaseTex);
			uniform half _GlobalFadePivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeNearTex);
			uniform half4 TVE_FadeParams;
			uniform half _GlobalFormLayerValue;
			uniform float TVE_FormLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormBaseTex);
			uniform half _GlobalFormPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormNearTex);
			uniform half4 TVE_FormParams;
			uniform half4 TVE_LandParams;
			uniform half _GlobalWindLayerValue;
			uniform float TVE_WindLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_WindBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_WindNearTex);
			uniform half4 TVE_WindParams;
			uniform half _GlobalPushLayerValue;
			uniform float TVE_PushLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PushBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PushNearTex);
			uniform half4 TVE_PushParams;
			uniform half TVE_IsEnabled;
			uniform half _SizeFadeScaleMode;
			uniform half _SizeFadeIntensityValue;
			uniform half _MotionSmallIntensityValue;
			uniform half4 _motion_small_vert_mode;
			uniform half4 _motion_small_proc_mode;
			uniform half _motion_small_mask_mode;
			uniform half4 _MotionSmallMaskRemap;
			uniform half _MotionSmallMaskMode;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MotionNoiseTexRT);
			uniform half _MotionBasePivotValue;
			uniform half _MotionBasePhaseValue;
			uniform half _MotionTillingValue;
			uniform half _MotionIntensityValue;
			uniform half4 TVE_MotionParams;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MotionNoiseTex);
			uniform half _MotionBaseTillingValue;
			uniform half4 TVE_TimeParams;
			uniform half _MotionBaseSpeedValue;
			uniform half _MotionBaseNoiseValue;
			uniform half _global_wind_layer_value;
			uniform half _MotionSmallPivotValue;
			uniform half _MotionSmallPhaseValue;
			uniform half _MotionSmallTillingValue;
			uniform half _MotionSmallSpeedValue;
			uniform half _MotionSmallNoiseValue;
			uniform half _MotionFrontValue;
			uniform half _MotionSmallDelayValue;
			uniform half _MotionTinyIntensityValue;
			uniform half4 _motion_tiny_vert_mode;
			uniform half4 _motion_tiny_proc_mode;
			uniform half _motion_tiny_mask_mode;
			uniform half4 _MotionTinyMaskRemap;
			uniform half _MotionTinyMaskMode;
			uniform half _MotionTinyTillingValue;
			uniform half _MotionTinySpeedValue;
			uniform half _MotionDistValue;
			uniform half _global_push_layer_value;
			uniform half _MotionPushPivotValue;
			uniform half _MotionPushPhaseValue;
			uniform half _MotionPushIntensityValue;
			uniform half _MotionBaseIntensityValue;
			uniform half4 _motion_base_vert_mode;
			uniform half4 _motion_base_proc_mode;
			uniform half _motion_base_mask_mode;
			uniform half4 _MotionBaseMaskRemap;
			uniform half _MotionBaseMaskMode;
			uniform half _MotionBaseDelayValue;
			uniform half4 _motion_push_vert_mode;
			uniform half4 _motion_push_proc_mode;
			uniform half _motion_push_mask_mode;
			uniform half4 _MotionPushMaskRemap;
			uniform half _MotionPushMaskMode;
			uniform half _BlanketConformOffsetMode;
			uniform half _BlanketConformOffsetValue;
			uniform half _BlanketConformValue;
			uniform half _BlanketOrientationValue;
			uniform half _NormalFlattenValue;
			uniform half3 _NormalSphereOffsetValue;
			uniform half _NormalSphereValue;
			uniform half _NormalComputeValue;
			uniform half _NormalBlanketValue;
			uniform half4 _normal_vert_mode;
			uniform half4 _NormalMeshRemap;
			uniform half _NormalMeshValue;
			uniform half _NormalMeshMode;
			uniform half4 _NormalProjRemap;
			uniform half _NormalProjValue;
			uniform half _NormalLandOffsetValue;
			uniform half _NormalLandValue;
			uniform half _NormalLandMode;
			uniform half _NormalBlanketInfo;
			uniform half _DisableSRPBatcher;
			uniform half _SubsurfaceCategory;
			uniform half _SubsurfaceEnd;
			uniform half _SubsurfaceDirectValue;
			uniform half _SubsurfaceNormalValue;
			uniform half _SubsurfaceAmbientValue;
			uniform half _SubsurfaceShadowValue;
			uniform half _SubsurfaceElementMode;
			uniform half _EmissiveCategory;
			uniform half _EmissiveEnd;
			uniform half _EmissivePowerMode;
			uniform half _EmissivePowerValue;
			uniform half _EmissiveElementMode;
			uniform half _EmissiveFlagMode;
			uniform half _DitherCategory;
			uniform half _DitherEnd;
			uniform half _CutoutCategory;
			uniform half _CutoutEnd;
			uniform half _CutoutElementMode;
			uniform half _CutoutBakeMode;
			uniform half _WetnessCategory;
			uniform half _WetnessEnd;
			uniform half _WetnessElementMode;
			uniform half _WetnessBakeMode;
			uniform half _OverlayCategory;
			uniform half _OverlayEnd;
			uniform half _OverlaySpace;
			uniform half _OverlayElementMode;
			uniform half _OverlayBakeMode;
			uniform half _DrynessCategory;
			uniform half _DrynessEnd;
			uniform half _DrynessSpace;
			uniform half _DrynessElementMode;
			uniform half _DrynessBakeMode;
			uniform half _TintingCategory;
			uniform half _TintingEnd;
			uniform half _TintingSpace;
			uniform half _TintingBakeMode;
			uniform half _VariationCategory;
			uniform half _VariationEnd;
			uniform half _GradientCategory;
			uniform half _GradientEnd;
			uniform half _GradientBakeMode;
			uniform half _OcclusionCategory;
			uniform half _OcclusionEnd;
			uniform half _OcclusionBakeMode;
			uniform half _TerrainCategory;
			uniform half _TerrainEnd;
			uniform half _TerrainFormInfo;
			uniform half _ThirdElementMode;
			uniform half _DetailCategory;
			uniform half _DetailEnd;
			uniform half _ThirdSampleMode;
			uniform half _ThirdCoordMode;
			uniform half4 _ThirdCoordValue;
			uniform half _ThirdMaskSampleMode;
			uniform half _ThirdMaskCoordMode;
			uniform half4 _ThirdMaskCoordValue;
			uniform half _ThirdBakeMode;
			uniform half _LayerCategory;
			uniform half _LayerEnd;
			uniform half _SecondSampleMode;
			uniform half _SecondCoordMode;
			uniform half4 _SecondCoordValue;
			uniform half _SecondMaskSampleMode;
			uniform half _SecondMaskCoordMode;
			uniform half4 _SecondMaskCoordValue;
			uniform half _SecondElementMode;
			uniform half _SecondBakeMode;
			uniform half _MainCategory;
			uniform half _MainEnd;
			uniform half _MainSampleMode;
			uniform half _MainCoordMode;
			uniform half4 _MainCoordValue;
			uniform half _MainMultiMaskInfo;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainAlbedoTex);
			SamplerState sampler_Linear_Repeat_Aniso8;
			SamplerState sampler_Point_Repeat;
			uniform half4 _main_coord_value;
			uniform half _MainAlbedoValue;
			uniform half4 _MainColorTwo;
			uniform half4 _MainColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainShaderTex);
			uniform half _MainMetallicValue;
			uniform half _MainOcclusionValue;
			uniform half _MainSmoothnessValue;
			uniform half4 _MainMultiRemap;
			uniform half _MainColorMode;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainNormalTex);
			uniform half _MainNormalValue;
			uniform half _MainAlphaClipValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondAlbedoTex);
			uniform half4 _second_coord_value;
			uniform half _SecondAlbedoValue;
			uniform half4 _SecondColorTwo;
			uniform half4 _SecondColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondShaderTex);
			uniform half _SecondMetallicValue;
			uniform half _SecondOcclusionValue;
			uniform half _SecondSmoothnessValue;
			uniform half4 _SecondMultiRemap;
			uniform half _SecondColorMode;
			uniform half _SecondBlendAlbedoValue;
			uniform half _SecondIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondMaskTex);
			uniform half4 _second_mask_coord_value;
			uniform half4 _SecondMaskRemap;
			uniform half _SecondMaskValue;
			uniform half4 _SecondProjRemap;
			uniform half _SecondProjValue;
			uniform half4 _second_vert_mode;
			uniform half4 _SecondMeshRemap;
			uniform half _SecondMeshValue;
			uniform half _SecondMeshMode;
			uniform half4 _SecondBlendRemap;
			uniform half _SecondBlendIntensityValue;
			uniform half _SecondBlendNormalValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondNormalTex);
			uniform half _SecondNormalValue;
			uniform half _SecondBlendShaderValue;
			uniform half _SecondAlphaClipValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdAlbedoTex);
			uniform half4 _third_coord_value;
			uniform half _ThirdAlbedoValue;
			uniform half4 _ThirdColorTwo;
			uniform half4 _ThirdColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdShaderTex);
			uniform half _ThirdMetallicValue;
			uniform half _ThirdOcclusionValue;
			uniform half _ThirdSmoothnessValue;
			uniform half4 _ThirdMultiRemap;
			uniform half _ThirdColorMode;
			uniform half _ThirdBlendAlbedoValue;
			uniform half _ThirdIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdMaskTex);
			uniform half4 _third_mask_coord_value;
			uniform half4 _ThirdMaskRemap;
			uniform half _ThirdMaskValue;
			uniform half4 _third_vert_mode;
			uniform half4 _ThirdMeshRemap;
			uniform half _ThirdMeshValue;
			uniform half _ThirdMeshMode;
			uniform half4 _ThirdProjRemap;
			uniform half _ThirdProjValue;
			uniform half4 _ThirdBlendRemap;
			uniform half _ThirdBlendIntensityValue;
			uniform half _ThirdBlendNormalValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdNormalTex);
			uniform half _ThirdNormalValue;
			uniform half _ThirdBlendShaderValue;
			uniform half _ThirdAlphaClipValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex1);
			uniform half4 _TerrainPosition;
			uniform half4 _TerrainSize;
			float4 _TerrainControlTex1_TexelSize;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex1);
			uniform half4 _TerrainCoord1;
			uniform half4 _TerrainShaderMin1;
			uniform half4 _TerrainShaderMax1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex2);
			uniform half4 _TerrainCoord2;
			uniform half4 _TerrainShaderMin2;
			uniform half4 _TerrainShaderMax2;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex3);
			uniform half4 _TerrainCoord3;
			uniform half4 _TerrainShaderMin3;
			uniform half4 _TerrainShaderMax3;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex4);
			uniform half4 _TerrainCoord4;
			uniform half4 _TerrainShaderMin4;
			uniform half4 _TerrainShaderMax4;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex5);
			uniform half4 _TerrainCoord5;
			uniform half4 _TerrainShaderMin5;
			uniform half4 _TerrainShaderMax5;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex6);
			uniform half4 _TerrainCoord6;
			uniform half4 _TerrainShaderMin6;
			uniform half4 _TerrainShaderMax6;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex7);
			uniform half4 _TerrainCoord7;
			uniform half4 _TerrainShaderMin7;
			uniform half4 _TerrainShaderMax7;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex8);
			uniform half4 _TerrainCoord8;
			uniform half4 _TerrainShaderMin8;
			uniform half4 _TerrainShaderMax8;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex9);
			uniform half4 _TerrainCoord9;
			uniform half4 _TerrainShaderMin9;
			uniform half4 _TerrainShaderMax9;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex10);
			uniform half4 _TerrainCoord10;
			uniform half4 _TerrainShaderMin10;
			uniform half4 _TerrainShaderMax10;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex11);
			uniform half4 _TerrainCoord11;
			uniform half4 _TerrainShaderMin11;
			uniform half4 _TerrainShaderMax11;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex12);
			uniform half4 _TerrainCoord12;
			uniform half4 _TerrainShaderMin12;
			uniform half4 _TerrainShaderMax12;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex13);
			uniform half4 _TerrainCoord13;
			uniform half4 _TerrainShaderMin13;
			uniform half4 _TerrainShaderMax13;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex14);
			uniform half4 _TerrainCoord14;
			uniform half4 _TerrainShaderMin14;
			uniform half4 _TerrainShaderMax14;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex15);
			uniform half4 _TerrainCoord15;
			uniform half4 _TerrainShaderMin15;
			uniform half4 _TerrainShaderMax15;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex16);
			uniform half4 _TerrainCoord16;
			uniform half4 _TerrainShaderMin16;
			uniform half4 _TerrainShaderMax16;
			uniform half _TerrainHeightBlendValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex16);
			uniform half4 _TerrainColor1;
			uniform half4 _TerrainColor2;
			uniform half4 _TerrainColor3;
			uniform half4 _TerrainColor4;
			uniform half4 _TerrainColor5;
			uniform half4 _TerrainColor6;
			uniform half4 _TerrainColor7;
			uniform half4 _TerrainColor8;
			uniform half4 _TerrainColor9;
			uniform half4 _TerrainColor10;
			uniform half4 _TerrainColor11;
			uniform half4 _TerrainColor12;
			uniform half4 _TerrainColor13;
			uniform half4 _TerrainColor14;
			uniform half4 _TerrainColor15;
			uniform half4 _TerrainColor16;
			uniform half4 _TerrainColor;
			uniform half _TerrainIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainMaskTex);
			uniform half4 _terrain_mask_coord_value;
			uniform half _TerrainMaskSampleMode;
			uniform half _TerrainMaskCoordMode;
			uniform half4 _TerrainMaskCoordValue;
			uniform half4 _TerrainMaskRemap;
			uniform half _TerrainMaskValue;
			uniform half4 _TerrainProjRemap;
			uniform half _TerrainProjValue;
			uniform float _TerrainLandOffsetValue;
			uniform float _TerrainLandValue;
			uniform half _TerrainLandMode;
			uniform half4 _TerrainBlendRemap;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex16);
			uniform half4 _TerrainParams1;
			uniform half4 _TerrainParams2;
			uniform half4 _TerrainParams3;
			uniform half4 _TerrainParams4;
			uniform half4 _TerrainParams5;
			uniform half4 _TerrainParams6;
			uniform half4 _TerrainParams7;
			uniform half4 _TerrainParams8;
			uniform half4 _TerrainParams9;
			uniform half4 _TerrainParams10;
			uniform half4 _TerrainParams11;
			uniform half4 _TerrainParams12;
			uniform half4 _TerrainParams13;
			uniform half4 _TerrainParams14;
			uniform half4 _TerrainParams15;
			uniform half4 _TerrainParams16;
			uniform half _TerrainNormalValue;
			uniform half _TerrainMetallicValue;
			uniform half _TerrainOcclusionValue;
			uniform half _TerrainSmoothnessValue;
			uniform half4 _TerrainSpecular1;
			uniform half4 _TerrainSpecular2;
			uniform half4 _TerrainSpecular3;
			uniform half4 _TerrainSpecular4;
			uniform half4 _TerrainSpecular5;
			uniform half4 _TerrainSpecular6;
			uniform half4 _TerrainSpecular7;
			uniform half4 _TerrainSpecular8;
			uniform half4 _TerrainSpecular9;
			uniform half4 _TerrainSpecular10;
			uniform half4 _TerrainSpecular11;
			uniform half4 _TerrainSpecular12;
			uniform half4 _TerrainSpecular13;
			uniform half4 _TerrainSpecular14;
			uniform half4 _TerrainSpecular15;
			uniform half4 _TerrainSpecular16;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainHolesTex);
			uniform half4 _OcclusionColorTwo;
			uniform half4 _OcclusionColorOne;
			uniform half4 _occlusion_vert_mode;
			uniform half4 _OcclusionMeshRemap;
			uniform half _OcclusionMeshMode;
			uniform half _OcclusionIntensityValue;
			uniform half4 _GradientColorTwo;
			uniform half4 _GradientColorOne;
			uniform half4 _gradient_vert_mode;
			uniform half4 _GradientMeshRemap;
			uniform half _GradientMeshMode;
			uniform half _GradientIntensityValue;
			uniform half _GradientMultiValue;
			uniform half4 _VariationColorTwo;
			uniform half4 _VariationColorOne;
			uniform half _VariationNoisePivotValue;
			uniform half _VariationNoiseTillingValue;
			uniform half4 _VariationNoiseRemap;
			uniform half _VariationIntensityValue;
			uniform half _VariationMultiValue;
			uniform half _TintingElementMode;
			uniform half _TintingGrayValue;
			uniform float4 _TintingColor;
			uniform half _TintingIntensityValue;
			uniform half _TintingMultiValue;
			uniform half4 _TintingLumaRemap;
			uniform half _TintingLumaValue;
			uniform half4 _tinting_vert_mode;
			uniform half4 _TintingMeshRemap;
			uniform half _TintingMeshValue;
			uniform half _TintingMeshMode;
			uniform half4 _TintingBlendRemap;
			uniform half _DrynessGrayValue;
			uniform half _DrynessShiftValue;
			uniform float4 _DrynessColor;
			uniform half _DrynessIntensityValue;
			uniform half _DrynessMultiValue;
			uniform half4 _DrynessLumaRemap;
			uniform half _DrynessLumaValue;
			uniform half4 _dryness_vert_mode;
			uniform half4 _DrynessMeshRemap;
			uniform half _DrynessMeshValue;
			uniform half _DrynessMeshMode;
			uniform half4 _DrynessBlendRemap;
			uniform half _DrynessSmoothnessValue;
			uniform half _DrynessSubsurfaceValue;
			uniform half3 _motion_highlight_color;
			uniform half _MotionHighlightValue;
			uniform half4 _MotionHighlightColor;
			uniform half4 _OverlayColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayAlbedoTex);
			uniform half4 _overlay_coord_value;
			uniform half _OverlaySampleMode;
			uniform half _OverlayCoordMode;
			uniform half4 _OverlayCoordValue;
			uniform half _OverlayTextureMode;
			uniform half _OverlayGlitterIntensityValue;
			uniform half4 _OverlayGlitterColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayGlitterTexRT);
			uniform half _OverlayGlitterTillingValue;
			uniform half _OverlayGlitterDistValue;
			uniform half _OverlayIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayMaskTex);
			uniform half4 _overlay_mask_coord_value;
			uniform half _OverlayMaskSampleMode;
			uniform half _OverlayMaskCoordMode;
			uniform half4 _OverlayMaskCoordValue;
			uniform half4 _OverlayMaskRemap;
			uniform half _OverlayMaskValue;
			uniform half4 _OverlayProjRemap;
			uniform half _OverlayProjValue;
			uniform half4 _OverlayLumaRemap;
			uniform half _OverlayLumaValue;
			uniform half4 _overlay_vert_mode;
			uniform half4 _OverlayMeshRemap;
			uniform half _OverlayMeshValue;
			uniform half _OverlayMeshMode;
			uniform half4 _OverlayBlendRemap1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayNormalTex);
			uniform half _OverlayNormalValue;
			uniform half _OverlaySmoothnessValue;
			uniform half _OverlaySubsurfaceValue;
			uniform half4 _WetnessWaterColor;
			uniform half _WetnessWaterIntensityValue;
			uniform half _WetnessIntensityValue;
			uniform half4 _wetness_vert_mode;
			uniform half4 _WetnessMeshRemap;
			uniform half _WetnessMeshValue;
			uniform half _WetnessMeshMode;
			uniform half4 _wetness_water_vert_mode;
			uniform half4 _WetnessWaterMeshRemap;
			uniform half _WetnessWaterMeshValue;
			uniform half _WetnessWaterMeshMode;
			uniform half _WetnessWaterBaseValue;
			uniform half4 _WetnessWaterBlendRemap;
			uniform half _WetnessContrastValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_WetnessDropsTexRT);
			uniform half _WetnessDropsTillingValue;
			uniform half _WetnessDropsIntensityValue;
			uniform half _WetnessDropsNormalValue;
			uniform half _WetnessDropsDistValue;
			uniform half4 _wetness_drops_vert_mode;
			uniform half4 _WetnessDropsMeshRemap;
			uniform half _WetnessDropsMeshValue;
			uniform half _WetnessDropsMeshMode;
			uniform half _WetnessSmoothnessValue;
			uniform half _CutoutIntensityValue;
			uniform half _CutoutAlphaValue;
			uniform half _CutoutNoiseTillingValue;
			uniform half _CutoutNoiseValue;
			uniform half4 _cutout_vert_mode;
			uniform half4 _CutoutMeshRemap;
			uniform half _CutoutMeshValue;
			uniform half _CutoutMeshMode;
			uniform half _CutoutMultiValue;
			uniform half _DitherConstantValue;
			uniform half _DitherProximityMaxValue;
			uniform half _DitherProximityMinValue;
			uniform half _DitherProximityValue;
			uniform half _DitherDistanceMinValue;
			uniform half _DitherDistanceMaxValue;
			uniform half _DitherDistanceValue;
			uniform half _DitherGlancingAngleValue;
			uniform half _DitherGlancingValue;
			uniform half _DitherNoiseTillingValue;
			uniform half _DitherMultiValue;
			uniform half4 _emissive_vert_mode;
			uniform half4 _EmissiveMeshRemap;
			uniform half _EmissiveMeshValue;
			uniform half _EmissiveMeshMode;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_EmissiveMaskTex);
			uniform half4 _emissive_coord_value;
			uniform half _EmissiveSampleMode;
			uniform half _EmissiveCoordMode;
			uniform half4 _EmissiveCoordValue;
			uniform half4 _EmissiveMaskRemap;
			uniform half _EmissiveMaskValue;
			uniform half _EmissiveIntensityValue;
			uniform half4 _EmissiveColor;
			uniform half _EmissiveColorMode;
			uniform float _emissive_power_value;
			uniform half4 _SubsurfaceColor;
			uniform half _SubsurfaceIntensityValue;
			uniform half _SubsurfaceMultiValue;
			uniform half3 TVE_MainLightDirection;
			uniform half _SubsurfaceAproxInfo;
			uniform half3 _render_normal;
			uniform half _RenderSpecular;


			float2 DecodeFloatToVector2( float enc )
			{
				float2 result ;
				result.y = enc % 2048;
				result.x = floor(enc / 2048);
				return result / (2048 - 1);
			}
			
			float3 ASESafeNormalize(float3 inVec)
			{
				float dp3 = max(1.175494351e-38, dot(inVec, inVec));
				return inVec* rsqrt(dp3);
			}
			
			void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
			{
				ZX = WorldPosition.xz * Coords.xx - Coords.zz;
				ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
				XY = WorldPosition.xy * Coords.xy - Coords.zw;
			}
			
			half4 SampleMain( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, half2 TexCoord )
			{
				half2 UV = TexCoord * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			half4 SampleExtra( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, half2 TexCoord )
			{
				half2 UV = TexCoord * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			half4 SamplePlanar2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
			{
				half3 powNormal = abs( WorldNormal.xyz );
				half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
				weights /= ( weights.x + weights.y + weights.z ).xxx;
				T1 = weights.y;
				T2 = weights.x;
				T3 = weights.z;
			}
			
			half4 SamplePlanar3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
				half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
				half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
				return tex1 * T1 + tex2 * T2 + tex3 * T3;
			}
			
			void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
			{
				half2 vertex1, vertex2, vertex3;
				// Scaling of the input
				half2 uv = UV * 3.464; // 2 * sqrt (3)
				// Skew input space into simplex triangle grid
				const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
				half2 skewedCoord = mul( gridToSkewedGrid, uv );
				// Compute local triangle vertex IDs and local barycentric coordinates
				int2 baseId = int2( floor( skewedCoord ) );
				half3 temp = half3( frac( skewedCoord ), 0 );
				temp.z = 1.0 - temp.x - temp.y;
				if ( temp.z > 0.0 )
				{
					W1 = temp.z;
					W2 = temp.y;
					W3 = temp.x;
					vertex1 = baseId;
					vertex2 = baseId + int2( 0, 1 );
					vertex3 = baseId + int2( 1, 0 );
				}
				else
				{
					W1 = -temp.z;
					W2 = 1.0 - temp.y;
					W3 = 1.0 - temp.x;
					vertex1 = baseId + int2( 1, 1 );
					vertex2 = baseId + int2( 1, 0 );
					vertex3 = baseId + int2( 0, 1 );
				}
				UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
				UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
				UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
				return;
			}
			
			float4 SampleStochastic2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
				half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
				half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
				half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
				return tex1 * W1 + tex2 * W2 + tex3 * W3;
			}
			
			half4 SampleStochastic3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				half4 tex1, tex2, tex3;
				ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
				half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
				half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
				half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				return texZX * T1 + texZY * T2 + texXY * T3;
			}
			
			half3 HSVToRGB( half3 c )
			{
				half4 K = half4( 1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0 );
				half3 p = abs( frac( c.xxx + K.xyz ) * 6.0 - K.www );
				return c.z * lerp( K.xxx, saturate( p - K.xxx ), c.y );
			}
			
			half3 RGBToHSV(half3 c)
			{
				half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
				half4 p = lerp( half4( c.bg, K.wz ), half4( c.gb, K.xy ), step( c.b, c.g ) );
				half4 q = lerp( half4( p.xyw, c.r ), half4( c.r, p.yzx ), step( p.x, c.r ) );
				half d = q.x - min( q.w, q.y );
				half e = 1.0e-10;
				return half3( abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
			}
			half ShadowPassCheck33_g174879( half True, half False )
			{
				half result;
				#if defined(UNITY_PASS_DEFERRED)
					result = True;
				#else
					result = False;
				#endif
				return result;
			}
			
			half ShadowPassCheck33_g174880( half True, half False )
			{
				half result;
				#if defined(UNITY_PASS_DEFERRED)
					result = True;
				#else
					result = False;
				#endif
				return result;
			}
			

			v2f VertexFunction (appdata v  ) {
				UNITY_SETUP_INSTANCE_ID(v);
				v2f o;
				UNITY_INITIALIZE_OUTPUT(v2f,o);
				UNITY_TRANSFER_INSTANCE_ID(v,o);
				UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);

				TVEModelData Data16_g174866 = (TVEModelData)0;
				float In_Dummy16_g174866 = 0.0;
				TVEModelData Data16_g174843 = (TVEModelData)0;
				half Dummy1575_g174841 = ( _NormalCategory + _NormalEnd + _NormalSpace );
				float In_Dummy16_g174843 = Dummy1575_g174841;
				TVEModelData Data16_g174820 = (TVEModelData)0;
				float In_Dummy16_g174820 = 0.0;
				TVEModelData Data16_g174801 = (TVEModelData)0;
				half Dummy181_g174798 = ( _BlanketCategory + _BlanketEnd + _BlanketInfo );
				float In_Dummy16_g174801 = Dummy181_g174798;
				TVEModelData Data16_g174577 = (TVEModelData)0;
				half Dummy181_g174563 = ( ( _MotionWindCategory + _MotionWindEnd ) + ( _MotionInteractionCategory + _MotionInteractionEnd ) + _MotionWindMode + _MotionWindElementMode + _MotionPushElementMode + ( _MotionWindOffInfo + _MotionWindOptimizedInfo + _MotionWindAdvancedInfo ) );
				float In_Dummy16_g174577 = Dummy181_g174563;
				TVEModelData Data16_g174422 = (TVEModelData)0;
				half Dummy181_g174419 = ( _SizeFadeCategory + _SizeFadeEnd + _SizeFadeElementMode );
				float In_Dummy16_g174422 = Dummy181_g174419;
				TVEModelData Data16_g174385 = (TVEModelData)0;
				half Dummy181_g174382 = ( _PerspectiveCategory + _PerspectiveEnd );
				float In_Dummy16_g174385 = Dummy181_g174382;
				TVEModelData Data16_g174346 = (TVEModelData)0;
				float In_Dummy16_g174346 = 0.0;
				TVEModelData Data16_g164565 = (TVEModelData)0;
				half Dummy207_g164551 = ( _ObjectCategory + _ObjectEnd + _ObjectModelMode + _ObjectPivotMode + _ObjectPhaseMode + _ObjectBoundsInfo );
				float In_Dummy16_g164565 = Dummy207_g164551;
				half3 PositionOS131_g164551 = v.vertex.xyz;
				float3 In_PositionOS16_g164565 = PositionOS131_g164551;
				float3 ase_worldPos = mul(unity_ObjectToWorld, float4( (v.vertex).xyz, 1 )).xyz;
				float3 vertexToFrag73_g164551 = ase_worldPos;
				half3 PositionWS122_g164551 = vertexToFrag73_g164551;
				float3 In_PositionWS16_g164565 = PositionWS122_g164551;
				float4x4 break19_g164553 = unity_ObjectToWorld;
				float3 appendResult20_g164553 = (float3(break19_g164553[ 0 ][ 3 ] , break19_g164553[ 1 ][ 3 ] , break19_g164553[ 2 ][ 3 ]));
				half3 ObjectData20_g164555 = appendResult20_g164553;
				half3 WorldData19_g164555 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g164555 = WorldData19_g164555;
				#else
				float3 staticSwitch14_g164555 = ObjectData20_g164555;
				#endif
				float3 temp_output_124_0_g164553 = staticSwitch14_g164555;
				float3 temp_output_239_7_g164551 = temp_output_124_0_g164553;
				float4x4 break19_g164557 = unity_ObjectToWorld;
				float3 appendResult20_g164557 = (float3(break19_g164557[ 0 ][ 3 ] , break19_g164557[ 1 ][ 3 ] , break19_g164557[ 2 ][ 3 ]));
				float3 _Vector0 = float3(0,0,0);
				float3 appendResult60_g164561 = (float3(v.ase_texcoord3.x , 0.0 , v.ase_texcoord3.y));
				float3 break233_g164551 = PositionOS131_g164551;
				float3 appendResult234_g164551 = (float3(break233_g164551.x , 0.0 , break233_g164551.z));
				#if defined( TVE_PIVOT_OFF )
				float3 staticSwitch229_g164551 = _Vector0;
				#elif defined( TVE_PIVOT_BAKED )
				float3 staticSwitch229_g164551 = appendResult60_g164561;
				#elif defined( TVE_PIVOT_PROC )
				float3 staticSwitch229_g164551 = appendResult234_g164551;
				#else
				float3 staticSwitch229_g164551 = _Vector0;
				#endif
				half3 PivotOS149_g164551 = staticSwitch229_g164551;
				float3 temp_output_122_0_g164557 = PivotOS149_g164551;
				float3 PivotsOnly105_g164557 = (mul( unity_ObjectToWorld, float4( temp_output_122_0_g164557 , 0.0 ) ).xyz).xyz;
				half3 ObjectData20_g164559 = ( appendResult20_g164557 + PivotsOnly105_g164557 );
				half3 WorldData19_g164559 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g164559 = WorldData19_g164559;
				#else
				float3 staticSwitch14_g164559 = ObjectData20_g164559;
				#endif
				float3 temp_output_124_0_g164557 = staticSwitch14_g164559;
				float3 temp_output_237_7_g164551 = temp_output_124_0_g164557;
				#if defined( TVE_PIVOT_OFF )
				float3 staticSwitch236_g164551 = temp_output_239_7_g164551;
				#elif defined( TVE_PIVOT_BAKED )
				float3 staticSwitch236_g164551 = temp_output_237_7_g164551;
				#elif defined( TVE_PIVOT_PROC )
				float3 staticSwitch236_g164551 = temp_output_237_7_g164551;
				#else
				float3 staticSwitch236_g164551 = temp_output_239_7_g164551;
				#endif
				float3 vertexToFrag76_g164551 = staticSwitch236_g164551;
				half3 PivotWS121_g164551 = vertexToFrag76_g164551;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g164551 = ( PositionWS122_g164551 - PivotWS121_g164551 );
				#else
				float3 staticSwitch204_g164551 = PositionWS122_g164551;
				#endif
				half3 PositionWO132_g164551 = ( staticSwitch204_g164551 - TVE_WorldOrigin );
				float3 In_PositionWO16_g164565 = PositionWO132_g164551;
				float3 In_PositionRawOS16_g164565 = PositionOS131_g164551;
				float3 In_PositionAddOS16_g164565 = float3( 0,0,0 );
				float3 In_PivotOS16_g164565 = PivotOS149_g164551;
				float3 In_PivotWS16_g164565 = PivotWS121_g164551;
				half3 PivotWO133_g164551 = ( PivotWS121_g164551 - TVE_WorldOrigin );
				float3 In_PivotWO16_g164565 = PivotWO133_g164551;
				half3 NormalOS134_g164551 = v.normal;
				float3 In_NormalOS16_g164565 = NormalOS134_g164551;
				float3 ase_worldNormal = UnityObjectToWorldNormal(v.normal);
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g164551 = normalizedWorldNormal;
				float3 In_NormalWS16_g164565 = Normal_WS95_g164551;
				float3 In_NormalRawOS16_g164565 = NormalOS134_g164551;
				float3 objToWorldDir298_g164551 = normalize( mul( unity_ObjectToWorld, float4( v.normal, 0 ) ).xyz );
				half3 Normal_RawWS136_g164551 = objToWorldDir298_g164551;
				float3 In_NormalRawWS16_g164565 = Normal_RawWS136_g164551;
				half4 TangentlOS153_g164551 = v.tangent;
				float4 In_TangentOS16_g164565 = TangentlOS153_g164551;
				float3 normalizeResult296_g164551 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g164551 ) );
				half3 ViewDirWS169_g164551 = normalizeResult296_g164551;
				float3 In_ViewDirWS16_g164565 = ViewDirWS169_g164551;
				half4 VertexMasks171_g164551 = v.ase_color;
				float4 In_VertexData16_g164565 = VertexMasks171_g164551;
				float4 break33_g164564 = _object_phase_mode;
				float temp_output_30_0_g164564 = ( v.ase_color.r * break33_g164564.x );
				float temp_output_29_0_g164564 = ( v.ase_color.g * break33_g164564.y );
				float temp_output_31_0_g164564 = ( v.ase_color.b * break33_g164564.z );
				float temp_output_28_0_g164564 = ( temp_output_30_0_g164564 + temp_output_29_0_g164564 + temp_output_31_0_g164564 + ( v.ase_color.a * break33_g164564.w ) );
				float3 break243_g164551 = PivotWO133_g164551;
				float temp_output_315_0_g164551 = (frac( ( temp_output_28_0_g164564 + ( break243_g164551.x + break243_g164551.z ) ) )*2.0 + -1.0);
				float4 appendResult177_g164551 = (float4(1.0 , 1.0 , temp_output_315_0_g164551 , 1.0));
				half4 MotionMasks176_g164551 = appendResult177_g164551;
				float4 In_MotionData16_g164565 = MotionMasks176_g164551;
				half Object_HeightValue267_g164551 = _ObjectHeightValue;
				half Object_RadiusValue268_g164551 = _ObjectRadiusValue;
				half Bounds_HeightMask274_g164551 = saturate( ( (PositionOS131_g164551).y / Object_HeightValue267_g164551 ) );
				half Bounds_SphereMask282_g164551 = saturate( ( length( PositionOS131_g164551 ) / max( Object_HeightValue267_g164551 , Object_RadiusValue268_g164551 ) ) );
				float4 appendResult253_g164551 = (float4(Object_HeightValue267_g164551 , Object_RadiusValue268_g164551 , Bounds_HeightMask274_g164551 , Bounds_SphereMask282_g164551));
				half4 BoundsData254_g164551 = appendResult253_g164551;
				float4 In_BoundsData16_g164565 = BoundsData254_g164551;
				float4 In_RotationData16_g164565 = float4( 0,0,0,0 );
				Data16_g164565.Dummy = In_Dummy16_g164565;
				Data16_g164565.PositionOS = In_PositionOS16_g164565;
				Data16_g164565.PositionWS = In_PositionWS16_g164565;
				Data16_g164565.PositionWO = In_PositionWO16_g164565;
				Data16_g164565.PositionRawOS = In_PositionRawOS16_g164565;
				Data16_g164565.PositionAddOS = In_PositionAddOS16_g164565;
				Data16_g164565.PivotOS = In_PivotOS16_g164565;
				Data16_g164565.PivotWS = In_PivotWS16_g164565;
				Data16_g164565.PivotWO = In_PivotWO16_g164565;
				Data16_g164565.NormalOS = In_NormalOS16_g164565;
				Data16_g164565.NormalWS = In_NormalWS16_g164565;
				Data16_g164565.NormalRawOS = In_NormalRawOS16_g164565;
				Data16_g164565.NormalRawWS = In_NormalRawWS16_g164565;
				Data16_g164565.TangentOS = In_TangentOS16_g164565;
				Data16_g164565.ViewDirWS = In_ViewDirWS16_g164565;
				Data16_g164565.VertexData = In_VertexData16_g164565;
				Data16_g164565.MotionData = In_MotionData16_g164565;
				Data16_g164565.BoundsData = In_BoundsData16_g164565;
				Data16_g164565.RotationData = In_RotationData16_g164565;
				TVEModelData Data15_g174347 = Data16_g164565;
				float Out_Dummy15_g174347 = 0;
				float3 Out_PositionOS15_g174347 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174347 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174347 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174347 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174347 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174347 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174347 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174347 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174347 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174347 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174347 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174347 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174347 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174347 = float3( 0,0,0 );
				float4 Out_VertexData15_g174347 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174347 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174347 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174347 = float4( 0,0,0,0 );
				Out_Dummy15_g174347 = Data15_g174347.Dummy;
				Out_PositionOS15_g174347 = Data15_g174347.PositionOS;
				Out_PositionWS15_g174347 = Data15_g174347.PositionWS;
				Out_PositionWO15_g174347 = Data15_g174347.PositionWO;
				Out_PositionRawOS15_g174347 = Data15_g174347.PositionRawOS;
				Out_PositionAddOS15_g174347 = Data15_g174347.PositionAddOS;
				Out_PivotOS15_g174347 = Data15_g174347.PivotOS;
				Out_PivotWS15_g174347 = Data15_g174347.PivotWS;
				Out_PivotWO15_g174347 = Data15_g174347.PivotWO;
				Out_NormalOS15_g174347 = Data15_g174347.NormalOS;
				Out_NormalWS15_g174347 = Data15_g174347.NormalWS;
				Out_NormalRawOS15_g174347 = Data15_g174347.NormalRawOS;
				Out_NormalRawWS15_g174347 = Data15_g174347.NormalRawWS;
				Out_TangentOS15_g174347 = Data15_g174347.TangentOS;
				Out_ViewDirWS15_g174347 = Data15_g174347.ViewDirWS;
				Out_VertexData15_g174347 = Data15_g174347.VertexData;
				Out_MotionData15_g174347 = Data15_g174347.MotionData;
				Out_BoundsData15_g174347 = Data15_g174347.BoundsData;
				Out_RotationData15_g174347 = Data15_g174347.RotationData;
				float3 temp_output_218_24_g174345 = Out_PivotOS15_g174347;
				float3 In_PositionOS16_g174346 = ( Out_PositionOS15_g174347 - temp_output_218_24_g174345 );
				float3 In_PositionWS16_g174346 = Out_PositionWS15_g174347;
				float3 In_PositionWO16_g174346 = Out_PositionWO15_g174347;
				float3 In_PositionRawOS16_g174346 = Out_PositionRawOS15_g174347;
				float3 In_PositionAddOS16_g174346 = Out_PositionAddOS15_g174347;
				float3 In_PivotOS16_g174346 = temp_output_218_24_g174345;
				float3 In_PivotWS16_g174346 = Out_PivotWS15_g174347;
				float3 In_PivotWO16_g174346 = Out_PivotWO15_g174347;
				float3 In_NormalOS16_g174346 = Out_NormalOS15_g174347;
				float3 In_NormalWS16_g174346 = Out_NormalWS15_g174347;
				float3 In_NormalRawOS16_g174346 = Out_NormalRawOS15_g174347;
				float3 In_NormalRawWS16_g174346 = Out_NormalRawWS15_g174347;
				float4 In_TangentOS16_g174346 = Out_TangentOS15_g174347;
				float3 In_ViewDirWS16_g174346 = Out_ViewDirWS15_g174347;
				float4 In_VertexData16_g174346 = Out_VertexData15_g174347;
				float4 In_MotionData16_g174346 = Out_MotionData15_g174347;
				float4 In_BoundsData16_g174346 = Out_BoundsData15_g174347;
				float4 In_RotationData16_g174346 = Out_RotationData15_g174347;
				Data16_g174346.Dummy = In_Dummy16_g174346;
				Data16_g174346.PositionOS = In_PositionOS16_g174346;
				Data16_g174346.PositionWS = In_PositionWS16_g174346;
				Data16_g174346.PositionWO = In_PositionWO16_g174346;
				Data16_g174346.PositionRawOS = In_PositionRawOS16_g174346;
				Data16_g174346.PositionAddOS = In_PositionAddOS16_g174346;
				Data16_g174346.PivotOS = In_PivotOS16_g174346;
				Data16_g174346.PivotWS = In_PivotWS16_g174346;
				Data16_g174346.PivotWO = In_PivotWO16_g174346;
				Data16_g174346.NormalOS = In_NormalOS16_g174346;
				Data16_g174346.NormalWS = In_NormalWS16_g174346;
				Data16_g174346.NormalRawOS = In_NormalRawOS16_g174346;
				Data16_g174346.NormalRawWS = In_NormalRawWS16_g174346;
				Data16_g174346.TangentOS = In_TangentOS16_g174346;
				Data16_g174346.ViewDirWS = In_ViewDirWS16_g174346;
				Data16_g174346.VertexData = In_VertexData16_g174346;
				Data16_g174346.MotionData = In_MotionData16_g174346;
				Data16_g174346.BoundsData = In_BoundsData16_g174346;
				Data16_g174346.RotationData = In_RotationData16_g174346;
				TVEModelData Data15_g174383 = Data16_g174346;
				float Out_Dummy15_g174383 = 0;
				float3 Out_PositionOS15_g174383 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174383 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174383 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174383 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174383 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174383 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174383 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174383 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174383 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174383 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174383 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174383 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174383 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174383 = float3( 0,0,0 );
				float4 Out_VertexData15_g174383 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174383 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174383 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174383 = float4( 0,0,0,0 );
				Out_Dummy15_g174383 = Data15_g174383.Dummy;
				Out_PositionOS15_g174383 = Data15_g174383.PositionOS;
				Out_PositionWS15_g174383 = Data15_g174383.PositionWS;
				Out_PositionWO15_g174383 = Data15_g174383.PositionWO;
				Out_PositionRawOS15_g174383 = Data15_g174383.PositionRawOS;
				Out_PositionAddOS15_g174383 = Data15_g174383.PositionAddOS;
				Out_PivotOS15_g174383 = Data15_g174383.PivotOS;
				Out_PivotWS15_g174383 = Data15_g174383.PivotWS;
				Out_PivotWO15_g174383 = Data15_g174383.PivotWO;
				Out_NormalOS15_g174383 = Data15_g174383.NormalOS;
				Out_NormalWS15_g174383 = Data15_g174383.NormalWS;
				Out_NormalRawOS15_g174383 = Data15_g174383.NormalRawOS;
				Out_NormalRawWS15_g174383 = Data15_g174383.NormalRawWS;
				Out_TangentOS15_g174383 = Data15_g174383.TangentOS;
				Out_ViewDirWS15_g174383 = Data15_g174383.ViewDirWS;
				Out_VertexData15_g174383 = Data15_g174383.VertexData;
				Out_MotionData15_g174383 = Data15_g174383.MotionData;
				Out_BoundsData15_g174383 = Data15_g174383.BoundsData;
				Out_RotationData15_g174383 = Data15_g174383.RotationData;
				half3 Model_PositionOS147_g174382 = Out_PositionOS15_g174383;
				float3 ase_worldViewDir = UnityWorldSpaceViewDir(ase_worldPos);
				ase_worldViewDir = Unity_SafeNormalize( ase_worldViewDir );
				float4x4 break117_g174384 = unity_CameraToWorld;
				float3 appendResult118_g174384 = (float3(break117_g174384[ 0 ][ 2 ] , break117_g174384[ 1 ][ 2 ] , break117_g174384[ 2 ][ 2 ]));
				float3 lerpResult209_g174382 = lerp( ase_worldViewDir , -appendResult118_g174384 , unity_OrthoParams.w);
				float3 break201_g174382 = cross( lerpResult209_g174382 , half3(0,1,0) );
				float3 appendResult196_g174382 = (float3(-break201_g174382.z , 0.0 , break201_g174382.x));
				float dotResult189_g174382 = dot( ase_worldViewDir , float3(0,1,0) );
				float saferPower192_g174382 = abs( dotResult189_g174382 );
				#ifdef TVE_PERSPECTIVE
				float3 staticSwitch211_g174382 = ( Model_PositionOS147_g174382 + ( mul( unity_WorldToObject, float4( appendResult196_g174382 , 0.0 ) ).xyz * _PerspectiveIntensityValue * pow( saferPower192_g174382 , _PerspectiveAngleValue ) * saturate( (Model_PositionOS147_g174382).y ) ) );
				#else
				float3 staticSwitch211_g174382 = Model_PositionOS147_g174382;
				#endif
				half3 Final_Position178_g174382 = staticSwitch211_g174382;
				float3 In_PositionOS16_g174385 = Final_Position178_g174382;
				float3 In_PositionWS16_g174385 = Out_PositionWS15_g174383;
				float3 In_PositionWO16_g174385 = Out_PositionWO15_g174383;
				float3 In_PositionRawOS16_g174385 = Out_PositionRawOS15_g174383;
				float3 In_PositionAddOS16_g174385 = Out_PositionAddOS15_g174383;
				float3 In_PivotOS16_g174385 = Out_PivotOS15_g174383;
				float3 In_PivotWS16_g174385 = Out_PivotWS15_g174383;
				float3 In_PivotWO16_g174385 = Out_PivotWO15_g174383;
				float3 In_NormalOS16_g174385 = Out_NormalOS15_g174383;
				float3 In_NormalWS16_g174385 = Out_NormalWS15_g174383;
				float3 In_NormalRawOS16_g174385 = Out_NormalRawOS15_g174383;
				float3 In_NormalRawWS16_g174385 = Out_NormalRawWS15_g174383;
				float4 In_TangentOS16_g174385 = Out_TangentOS15_g174383;
				float3 In_ViewDirWS16_g174385 = Out_ViewDirWS15_g174383;
				float4 In_VertexData16_g174385 = Out_VertexData15_g174383;
				float4 In_MotionData16_g174385 = Out_MotionData15_g174383;
				float4 In_BoundsData16_g174385 = Out_BoundsData15_g174383;
				float4 In_RotationData16_g174385 = Out_RotationData15_g174383;
				Data16_g174385.Dummy = In_Dummy16_g174385;
				Data16_g174385.PositionOS = In_PositionOS16_g174385;
				Data16_g174385.PositionWS = In_PositionWS16_g174385;
				Data16_g174385.PositionWO = In_PositionWO16_g174385;
				Data16_g174385.PositionRawOS = In_PositionRawOS16_g174385;
				Data16_g174385.PositionAddOS = In_PositionAddOS16_g174385;
				Data16_g174385.PivotOS = In_PivotOS16_g174385;
				Data16_g174385.PivotWS = In_PivotWS16_g174385;
				Data16_g174385.PivotWO = In_PivotWO16_g174385;
				Data16_g174385.NormalOS = In_NormalOS16_g174385;
				Data16_g174385.NormalWS = In_NormalWS16_g174385;
				Data16_g174385.NormalRawOS = In_NormalRawOS16_g174385;
				Data16_g174385.NormalRawWS = In_NormalRawWS16_g174385;
				Data16_g174385.TangentOS = In_TangentOS16_g174385;
				Data16_g174385.ViewDirWS = In_ViewDirWS16_g174385;
				Data16_g174385.VertexData = In_VertexData16_g174385;
				Data16_g174385.MotionData = In_MotionData16_g174385;
				Data16_g174385.BoundsData = In_BoundsData16_g174385;
				Data16_g174385.RotationData = In_RotationData16_g174385;
				TVEModelData Data15_g174421 = Data16_g174385;
				float Out_Dummy15_g174421 = 0;
				float3 Out_PositionOS15_g174421 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174421 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174421 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174421 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174421 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174421 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174421 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174421 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174421 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174421 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174421 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174421 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174421 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174421 = float3( 0,0,0 );
				float4 Out_VertexData15_g174421 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174421 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174421 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174421 = float4( 0,0,0,0 );
				Out_Dummy15_g174421 = Data15_g174421.Dummy;
				Out_PositionOS15_g174421 = Data15_g174421.PositionOS;
				Out_PositionWS15_g174421 = Data15_g174421.PositionWS;
				Out_PositionWO15_g174421 = Data15_g174421.PositionWO;
				Out_PositionRawOS15_g174421 = Data15_g174421.PositionRawOS;
				Out_PositionAddOS15_g174421 = Data15_g174421.PositionAddOS;
				Out_PivotOS15_g174421 = Data15_g174421.PivotOS;
				Out_PivotWS15_g174421 = Data15_g174421.PivotWS;
				Out_PivotWO15_g174421 = Data15_g174421.PivotWO;
				Out_NormalOS15_g174421 = Data15_g174421.NormalOS;
				Out_NormalWS15_g174421 = Data15_g174421.NormalWS;
				Out_NormalRawOS15_g174421 = Data15_g174421.NormalRawOS;
				Out_NormalRawWS15_g174421 = Data15_g174421.NormalRawWS;
				Out_TangentOS15_g174421 = Data15_g174421.TangentOS;
				Out_ViewDirWS15_g174421 = Data15_g174421.ViewDirWS;
				Out_VertexData15_g174421 = Data15_g174421.VertexData;
				Out_MotionData15_g174421 = Data15_g174421.MotionData;
				Out_BoundsData15_g174421 = Data15_g174421.BoundsData;
				Out_RotationData15_g174421 = Data15_g174421.RotationData;
				half3 Model_PositionOS147_g174419 = Out_PositionOS15_g174421;
				float3 temp_cast_5 = (1.0).xxx;
				float3 temp_output_210_19_g174419 = Out_PivotWO15_g174421;
				half3 Model_PivotWO162_g174419 = temp_output_210_19_g174419;
				float temp_output_7_0_g174420 = _SizeFadeDistMaxValue;
				float temp_output_10_0_g174420 = ( _SizeFadeDistMinValue - temp_output_7_0_g174420 );
				float localBuildGlobalData204_g173897 = ( 0.0 );
				TVEGlobalData Data204_g173897 = (TVEGlobalData)0;
				half Dummy211_g173897 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g173897 = Dummy211_g173897;
				float temp_output_82_0_g173907 = _GlobalCoatLayerValue;
				float temp_output_19_0_g173909 = TVE_CoatLayers[(int)temp_output_82_0_g173907];
				TVEModelData Data16_g164566 = (TVEModelData)0;
				float In_Dummy16_g164566 = 0.0;
				float3 In_PositionWS16_g164566 = PositionWS122_g164551;
				float3 In_PositionWO16_g164566 = PositionWO132_g164551;
				float3 In_PivotWS16_g164566 = PivotWS121_g164551;
				float3 In_PivotWO16_g164566 = PivotWO133_g164551;
				float3 In_NormalWS16_g164566 = Normal_WS95_g164551;
				float3 In_ViewDirWS16_g164566 = ViewDirWS169_g164551;
				float4 In_VertexData16_g164566 = VertexMasks171_g164551;
				float4 In_BoundsData16_g164566 = float4( 1,1,1,1 );
				Data16_g164566.Dummy = In_Dummy16_g164566;
				Data16_g164566.PositionWS = In_PositionWS16_g164566;
				Data16_g164566.PositionWO = In_PositionWO16_g164566;
				Data16_g164566.PivotWS = In_PivotWS16_g164566;
				Data16_g164566.PivotWO = In_PivotWO16_g164566;
				Data16_g164566.NormalWS = In_NormalWS16_g164566;
				Data16_g164566.ViewDirWS = In_ViewDirWS16_g164566;
				Data16_g164566.VertexData = In_VertexData16_g164566;
				Data16_g164566.BoundsData = In_BoundsData16_g164566;
				TVEModelData Data15_g173979 = Data16_g164566;
				float Out_Dummy15_g173979 = 0;
				float3 Out_PositionWS15_g173979 = float3( 0,0,0 );
				float3 Out_PositionWO15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWS15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWO15_g173979 = float3( 0,0,0 );
				float3 Out_NormalWS15_g173979 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g173979 = float3( 0,0,0 );
				float4 Out_VertexData15_g173979 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g173979 = float4( 0,0,0,0 );
				Out_Dummy15_g173979 = Data15_g173979.Dummy;
				Out_PositionWS15_g173979 = Data15_g173979.PositionWS;
				Out_PositionWO15_g173979 = Data15_g173979.PositionWO;
				Out_PivotWS15_g173979 = Data15_g173979.PivotWS;
				Out_PivotWO15_g173979 = Data15_g173979.PivotWO;
				Out_NormalWS15_g173979 = Data15_g173979.NormalWS;
				Out_ViewDirWS15_g173979 = Data15_g173979.ViewDirWS;
				Out_VertexData15_g173979 = Data15_g173979.VertexData;
				Out_BoundsData15_g173979 = Data15_g173979.BoundsData;
				half3 Model_PositionWS143_g173897 = Out_PositionWS15_g173979;
				half3 Model_PivotWS145_g173897 = Out_PivotWS15_g173979;
				float3 lerpResult300_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalCoatPivotValue);
				half3 Input_Position180_g173910 = lerpResult300_g173897;
				float2 temp_output_75_0_g173910 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_82_0_g173910 = temp_output_82_0_g173907;
				float2 temp_output_119_0_g173910 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_7_0_g173915 = 1.0;
				float temp_output_10_0_g173915 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173915 );
				float4 lerpResult131_g173910 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173910,temp_output_82_0_g173910), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173910,temp_output_82_0_g173910), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173910 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173915 ) / temp_output_10_0_g173915 ) ));
				float4 temp_output_17_0_g173909 = lerpResult131_g173910;
				float4 temp_output_3_0_g173909 = TVE_CoatParams;
				float4 ifLocalVar18_g173909 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173909 >= 0.5 )
				ifLocalVar18_g173909 = temp_output_17_0_g173909;
				else
				ifLocalVar18_g173909 = temp_output_3_0_g173909;
				float4 lerpResult22_g173909 = lerp( temp_output_3_0_g173909 , temp_output_17_0_g173909 , temp_output_19_0_g173909);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173909 = lerpResult22_g173909;
				#else
				float4 staticSwitch24_g173909 = ifLocalVar18_g173909;
				#endif
				half4 Coat_Params302_g173897 = staticSwitch24_g173909;
				float4 In_CoatParams204_g173897 = Coat_Params302_g173897;
				float temp_output_82_0_g173898 = _GlobalPaintLayerValue;
				float temp_output_19_0_g173900 = TVE_PaintLayers[(int)temp_output_82_0_g173898];
				float3 lerpResult85_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalPaintPivotValue);
				half3 Input_Position180_g173901 = lerpResult85_g173897;
				float2 temp_output_75_0_g173901 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_82_0_g173901 = temp_output_82_0_g173898;
				float2 temp_output_119_0_g173901 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_7_0_g173906 = 1.0;
				float temp_output_10_0_g173906 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173906 );
				float4 lerpResult131_g173901 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173901,temp_output_82_0_g173901), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173901,temp_output_82_0_g173901), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173901 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173906 ) / temp_output_10_0_g173906 ) ));
				float4 temp_output_17_0_g173900 = lerpResult131_g173901;
				float4 temp_output_3_0_g173900 = TVE_PaintParams;
				float4 ifLocalVar18_g173900 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173900 >= 0.5 )
				ifLocalVar18_g173900 = temp_output_17_0_g173900;
				else
				ifLocalVar18_g173900 = temp_output_3_0_g173900;
				float4 lerpResult22_g173900 = lerp( temp_output_3_0_g173900 , temp_output_17_0_g173900 , temp_output_19_0_g173900);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173900 = lerpResult22_g173900;
				#else
				float4 staticSwitch24_g173900 = ifLocalVar18_g173900;
				#endif
				half4 Paint_Params71_g173897 = staticSwitch24_g173900;
				float4 In_PaintParams204_g173897 = Paint_Params71_g173897;
				float temp_output_82_0_g173916 = _GlobalGlowLayerValue;
				float temp_output_19_0_g173918 = TVE_GlowLayers[(int)temp_output_82_0_g173916];
				float3 lerpResult247_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalGlowPivotValue);
				half3 Input_Position180_g173919 = lerpResult247_g173897;
				float2 temp_output_75_0_g173919 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_82_0_g173919 = temp_output_82_0_g173916;
				float2 temp_output_119_0_g173919 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_7_0_g173924 = 1.0;
				float temp_output_10_0_g173924 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173924 );
				float4 lerpResult131_g173919 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173919,temp_output_82_0_g173919), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173919,temp_output_82_0_g173919), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173919 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173924 ) / temp_output_10_0_g173924 ) ));
				float4 temp_output_17_0_g173918 = lerpResult131_g173919;
				float4 temp_output_3_0_g173918 = TVE_GlowParams;
				float4 ifLocalVar18_g173918 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173918 >= 0.5 )
				ifLocalVar18_g173918 = temp_output_17_0_g173918;
				else
				ifLocalVar18_g173918 = temp_output_3_0_g173918;
				float4 lerpResult22_g173918 = lerp( temp_output_3_0_g173918 , temp_output_17_0_g173918 , temp_output_19_0_g173918);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173918 = lerpResult22_g173918;
				#else
				float4 staticSwitch24_g173918 = ifLocalVar18_g173918;
				#endif
				half4 Glow_Params248_g173897 = staticSwitch24_g173918;
				float4 In_GlowParams204_g173897 = Glow_Params248_g173897;
				float temp_output_132_0_g173961 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g173963 = TVE_AtmoLayers[(int)temp_output_132_0_g173961];
				float3 lerpResult104_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalAtmoPivotValue);
				half3 Input_Position180_g173964 = lerpResult104_g173897;
				float2 temp_output_75_0_g173964 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_82_0_g173964 = temp_output_132_0_g173961;
				float2 temp_output_119_0_g173964 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_7_0_g173969 = 1.0;
				float temp_output_10_0_g173969 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173969 );
				float4 lerpResult131_g173964 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173964,temp_output_82_0_g173964), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173964,temp_output_82_0_g173964), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173964 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173969 ) / temp_output_10_0_g173969 ) ));
				float4 temp_output_17_0_g173963 = lerpResult131_g173964;
				float4 temp_output_3_0_g173963 = TVE_AtmoParams;
				float4 ifLocalVar18_g173963 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173963 >= 0.5 )
				ifLocalVar18_g173963 = temp_output_17_0_g173963;
				else
				ifLocalVar18_g173963 = temp_output_3_0_g173963;
				float4 lerpResult22_g173963 = lerp( temp_output_3_0_g173963 , temp_output_17_0_g173963 , temp_output_19_0_g173963);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173963 = lerpResult22_g173963;
				#else
				float4 staticSwitch24_g173963 = ifLocalVar18_g173963;
				#endif
				half4 Atmo_Params80_g173897 = staticSwitch24_g173963;
				float4 In_AtmoParams204_g173897 = Atmo_Params80_g173897;
				float temp_output_132_0_g173970 = _GlobalFadeLayerValue;
				float temp_output_19_0_g173972 = TVE_FadeLayers[(int)temp_output_132_0_g173970];
				float3 lerpResult382_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFadePivotValue);
				half3 Input_Position180_g173973 = lerpResult382_g173897;
				float2 temp_output_75_0_g173973 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_82_0_g173973 = temp_output_132_0_g173970;
				float2 temp_output_119_0_g173973 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_7_0_g173978 = 1.0;
				float temp_output_10_0_g173978 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173978 );
				float4 lerpResult131_g173973 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173973,temp_output_82_0_g173973), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173973,temp_output_82_0_g173973), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173973 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173978 ) / temp_output_10_0_g173978 ) ));
				float4 temp_output_17_0_g173972 = lerpResult131_g173973;
				float4 temp_output_3_0_g173972 = TVE_FadeParams;
				float4 ifLocalVar18_g173972 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173972 >= 0.5 )
				ifLocalVar18_g173972 = temp_output_17_0_g173972;
				else
				ifLocalVar18_g173972 = temp_output_3_0_g173972;
				float4 lerpResult22_g173972 = lerp( temp_output_3_0_g173972 , temp_output_17_0_g173972 , temp_output_19_0_g173972);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173972 = lerpResult22_g173972;
				#else
				float4 staticSwitch24_g173972 = ifLocalVar18_g173972;
				#endif
				half4 Fade_Params387_g173897 = staticSwitch24_g173972;
				float4 In_FadeParams204_g173897 = Fade_Params387_g173897;
				float temp_output_130_0_g173952 = _GlobalFormLayerValue;
				float temp_output_19_0_g173954 = TVE_FormLayers[(int)temp_output_130_0_g173952];
				float3 lerpResult168_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFormPivotValue);
				half3 Input_Position180_g173955 = lerpResult168_g173897;
				float2 temp_output_75_0_g173955 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_82_0_g173955 = temp_output_130_0_g173952;
				float2 temp_output_119_0_g173955 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_7_0_g173960 = 1.0;
				float temp_output_10_0_g173960 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173960 );
				float4 lerpResult131_g173955 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173955,temp_output_82_0_g173955), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173955,temp_output_82_0_g173955), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173955 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173960 ) / temp_output_10_0_g173960 ) ));
				float4 temp_output_17_0_g173954 = lerpResult131_g173955;
				float4 temp_output_3_0_g173954 = TVE_FormParams;
				float4 ifLocalVar18_g173954 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173954 >= 0.5 )
				ifLocalVar18_g173954 = temp_output_17_0_g173954;
				else
				ifLocalVar18_g173954 = temp_output_3_0_g173954;
				float4 lerpResult22_g173954 = lerp( temp_output_3_0_g173954 , temp_output_17_0_g173954 , temp_output_19_0_g173954);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173954 = lerpResult22_g173954;
				#else
				float4 staticSwitch24_g173954 = ifLocalVar18_g173954;
				#endif
				half4 Form_Params112_g173897 = staticSwitch24_g173954;
				float4 In_FormParams204_g173897 = Form_Params112_g173897;
				half4 Land_Params375_g173897 = TVE_LandParams;
				float4 In_LandParams204_g173897 = Land_Params375_g173897;
				float temp_output_136_0_g173943 = _GlobalWindLayerValue;
				float temp_output_19_0_g173945 = TVE_WindLayers[(int)temp_output_136_0_g173943];
				half3 Input_Position180_g173946 = Model_PositionWS143_g173897;
				float2 temp_output_75_0_g173946 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_82_0_g173946 = temp_output_136_0_g173943;
				float2 temp_output_119_0_g173946 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_7_0_g173951 = 1.0;
				float temp_output_10_0_g173951 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173951 );
				float4 lerpResult131_g173946 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173946,temp_output_82_0_g173946), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173946,temp_output_82_0_g173946), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173946 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173951 ) / temp_output_10_0_g173951 ) ));
				float4 temp_output_17_0_g173945 = lerpResult131_g173946;
				float4 temp_output_3_0_g173945 = TVE_WindParams;
				float4 ifLocalVar18_g173945 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173945 >= 0.5 )
				ifLocalVar18_g173945 = temp_output_17_0_g173945;
				else
				ifLocalVar18_g173945 = temp_output_3_0_g173945;
				float4 lerpResult22_g173945 = lerp( temp_output_3_0_g173945 , temp_output_17_0_g173945 , temp_output_19_0_g173945);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173945 = lerpResult22_g173945;
				#else
				float4 staticSwitch24_g173945 = ifLocalVar18_g173945;
				#endif
				half4 Wind_Params88_g173897 = staticSwitch24_g173945;
				float4 In_WindParams204_g173897 = Wind_Params88_g173897;
				float temp_output_136_0_g173925 = _GlobalPushLayerValue;
				float temp_output_19_0_g173926 = TVE_PushLayers[(int)temp_output_136_0_g173925];
				half3 Input_Position180_g173927 = Model_PivotWS145_g173897;
				float2 temp_output_75_0_g173927 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_82_0_g173927 = temp_output_136_0_g173925;
				float2 temp_output_119_0_g173927 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_7_0_g173932 = 1.0;
				float temp_output_10_0_g173932 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173932 );
				float4 lerpResult131_g173927 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173927,temp_output_82_0_g173927), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173927,temp_output_82_0_g173927), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173927 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173932 ) / temp_output_10_0_g173932 ) ));
				float4 temp_output_17_0_g173926 = lerpResult131_g173927;
				float4 temp_output_3_0_g173926 = TVE_PushParams;
				float4 ifLocalVar18_g173926 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173926 >= 0.5 )
				ifLocalVar18_g173926 = temp_output_17_0_g173926;
				else
				ifLocalVar18_g173926 = temp_output_3_0_g173926;
				float4 lerpResult22_g173926 = lerp( temp_output_3_0_g173926 , temp_output_17_0_g173926 , temp_output_19_0_g173926);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173926 = lerpResult22_g173926;
				#else
				float4 staticSwitch24_g173926 = ifLocalVar18_g173926;
				#endif
				half4 Push_Params335_g173897 = staticSwitch24_g173926;
				float4 In_PushParams204_g173897 = Push_Params335_g173897;
				Data204_g173897.Dummy = In_Dummy204_g173897;
				Data204_g173897.CoatParams = In_CoatParams204_g173897;
				Data204_g173897.PaintParams = In_PaintParams204_g173897;
				Data204_g173897.GlowParams = In_GlowParams204_g173897;
				Data204_g173897.AtmoParams = In_AtmoParams204_g173897;
				Data204_g173897.FadeParams = In_FadeParams204_g173897;
				Data204_g173897.FormParams= In_FormParams204_g173897;
				Data204_g173897.LandParams = In_LandParams204_g173897;
				Data204_g173897.WindParams = In_WindParams204_g173897;
				Data204_g173897.PushParams = In_PushParams204_g173897;
				TVEGlobalData Data15_g174423 = Data204_g173897;
				float Out_Dummy15_g174423 = 0;
				float4 Out_CoatParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174423 = float4( 0,0,0,0 );
				Out_Dummy15_g174423 = Data15_g174423.Dummy;
				Out_CoatParams15_g174423 = Data15_g174423.CoatParams;
				Out_PaintParams15_g174423 = Data15_g174423.PaintParams;
				Out_GlowParams15_g174423 = Data15_g174423.GlowParams;
				Out_AtmoParams15_g174423= Data15_g174423.AtmoParams;
				Out_FadeParams15_g174423= Data15_g174423.FadeParams;
				Out_FormParams15_g174423 = Data15_g174423.FormParams;
				Out_LandParams15_g174423 = Data15_g174423.LandParams;
				Out_WindParams15_g174423 = Data15_g174423.WindParams;
				Out_PushParams15_g174423 = Data15_g174423.PushParams;
				half4 Input_FormParams188_g174419 = Out_FormParams15_g174423;
				float lerpResult213_g174419 = lerp( 1.0 , (Input_FormParams188_g174419).w , TVE_IsEnabled);
				#ifdef TVE_SIZEFADE_ELEMENT
				float staticSwitch194_g174419 = lerpResult213_g174419;
				#else
				float staticSwitch194_g174419 = 1.0;
				#endif
				half SizeFade_MaskGlobal192_g174419 = staticSwitch194_g174419;
				float temp_output_189_0_g174419 = ( saturate( ( ( distance( _WorldSpaceCameraPos , Model_PivotWO162_g174419 ) - temp_output_7_0_g174420 ) / ( temp_output_10_0_g174420 + 0.0001 ) ) ) * _SizeFadeScaleValue * SizeFade_MaskGlobal192_g174419 );
				float3 appendResult200_g174419 = (float3(temp_output_189_0_g174419 , temp_output_189_0_g174419 , temp_output_189_0_g174419));
				float3 appendResult201_g174419 = (float3(1.0 , temp_output_189_0_g174419 , 1.0));
				float3 lerpResult202_g174419 = lerp( appendResult200_g174419 , appendResult201_g174419 , _SizeFadeScaleMode);
				float3 lerpResult184_g174419 = lerp( temp_cast_5 , lerpResult202_g174419 , _SizeFadeIntensityValue);
				float3 temp_output_167_0_g174419 = ( lerpResult184_g174419 * Model_PositionOS147_g174419 );
				#ifdef TVE_SIZEFADE
				float3 staticSwitch199_g174419 = temp_output_167_0_g174419;
				#else
				float3 staticSwitch199_g174419 = Model_PositionOS147_g174419;
				#endif
				half3 Final_Position178_g174419 = staticSwitch199_g174419;
				float3 In_PositionOS16_g174422 = Final_Position178_g174419;
				float3 In_PositionWS16_g174422 = Out_PositionWS15_g174421;
				float3 In_PositionWO16_g174422 = Out_PositionWO15_g174421;
				float3 In_PositionRawOS16_g174422 = Out_PositionRawOS15_g174421;
				float3 In_PositionAddOS16_g174422 = Out_PositionAddOS15_g174421;
				float3 temp_output_210_24_g174419 = Out_PivotOS15_g174421;
				float3 In_PivotOS16_g174422 = temp_output_210_24_g174419;
				float3 In_PivotWS16_g174422 = Out_PivotWS15_g174421;
				float3 In_PivotWO16_g174422 = temp_output_210_19_g174419;
				float3 In_NormalOS16_g174422 = Out_NormalOS15_g174421;
				float3 In_NormalWS16_g174422 = Out_NormalWS15_g174421;
				float3 In_NormalRawOS16_g174422 = Out_NormalRawOS15_g174421;
				float3 In_NormalRawWS16_g174422 = Out_NormalRawWS15_g174421;
				float4 In_TangentOS16_g174422 = Out_TangentOS15_g174421;
				float3 In_ViewDirWS16_g174422 = Out_ViewDirWS15_g174421;
				float4 In_VertexData16_g174422 = Out_VertexData15_g174421;
				float4 In_MotionData16_g174422 = Out_MotionData15_g174421;
				float4 In_BoundsData16_g174422 = Out_BoundsData15_g174421;
				float4 In_RotationData16_g174422 = Out_RotationData15_g174421;
				Data16_g174422.Dummy = In_Dummy16_g174422;
				Data16_g174422.PositionOS = In_PositionOS16_g174422;
				Data16_g174422.PositionWS = In_PositionWS16_g174422;
				Data16_g174422.PositionWO = In_PositionWO16_g174422;
				Data16_g174422.PositionRawOS = In_PositionRawOS16_g174422;
				Data16_g174422.PositionAddOS = In_PositionAddOS16_g174422;
				Data16_g174422.PivotOS = In_PivotOS16_g174422;
				Data16_g174422.PivotWS = In_PivotWS16_g174422;
				Data16_g174422.PivotWO = In_PivotWO16_g174422;
				Data16_g174422.NormalOS = In_NormalOS16_g174422;
				Data16_g174422.NormalWS = In_NormalWS16_g174422;
				Data16_g174422.NormalRawOS = In_NormalRawOS16_g174422;
				Data16_g174422.NormalRawWS = In_NormalRawWS16_g174422;
				Data16_g174422.TangentOS = In_TangentOS16_g174422;
				Data16_g174422.ViewDirWS = In_ViewDirWS16_g174422;
				Data16_g174422.VertexData = In_VertexData16_g174422;
				Data16_g174422.MotionData = In_MotionData16_g174422;
				Data16_g174422.BoundsData = In_BoundsData16_g174422;
				Data16_g174422.RotationData = In_RotationData16_g174422;
				TVEModelData Data15_g174573 = Data16_g174422;
				float Out_Dummy15_g174573 = 0;
				float3 Out_PositionOS15_g174573 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174573 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174573 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174573 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174573 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174573 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174573 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174573 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174573 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174573 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174573 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174573 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174573 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174573 = float3( 0,0,0 );
				float4 Out_VertexData15_g174573 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174573 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174573 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174573 = float4( 0,0,0,0 );
				Out_Dummy15_g174573 = Data15_g174573.Dummy;
				Out_PositionOS15_g174573 = Data15_g174573.PositionOS;
				Out_PositionWS15_g174573 = Data15_g174573.PositionWS;
				Out_PositionWO15_g174573 = Data15_g174573.PositionWO;
				Out_PositionRawOS15_g174573 = Data15_g174573.PositionRawOS;
				Out_PositionAddOS15_g174573 = Data15_g174573.PositionAddOS;
				Out_PivotOS15_g174573 = Data15_g174573.PivotOS;
				Out_PivotWS15_g174573 = Data15_g174573.PivotWS;
				Out_PivotWO15_g174573 = Data15_g174573.PivotWO;
				Out_NormalOS15_g174573 = Data15_g174573.NormalOS;
				Out_NormalWS15_g174573 = Data15_g174573.NormalWS;
				Out_NormalRawOS15_g174573 = Data15_g174573.NormalRawOS;
				Out_NormalRawWS15_g174573 = Data15_g174573.NormalRawWS;
				Out_TangentOS15_g174573 = Data15_g174573.TangentOS;
				Out_ViewDirWS15_g174573 = Data15_g174573.ViewDirWS;
				Out_VertexData15_g174573 = Data15_g174573.VertexData;
				Out_MotionData15_g174573 = Data15_g174573.MotionData;
				Out_BoundsData15_g174573 = Data15_g174573.BoundsData;
				Out_RotationData15_g174573 = Data15_g174573.RotationData;
				float3 temp_output_1567_0_g174563 = Out_PositionOS15_g174573;
				float3 In_PositionOS16_g174577 = temp_output_1567_0_g174563;
				float3 temp_output_1567_16_g174563 = Out_PositionWS15_g174573;
				float3 In_PositionWS16_g174577 = temp_output_1567_16_g174563;
				float3 temp_output_1567_17_g174563 = Out_PositionWO15_g174573;
				float3 In_PositionWO16_g174577 = temp_output_1567_17_g174563;
				float3 In_PositionRawOS16_g174577 = Out_PositionRawOS15_g174573;
				float3 temp_cast_39 = (0.0).xxx;
				half Small_Value2180_g174563 = _MotionSmallIntensityValue;
				float4 temp_output_1567_29_g174563 = Out_VertexData15_g174573;
				half4 Model_VertexMasks518_g174563 = temp_output_1567_29_g174563;
				float4 break1689_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174575 = _motion_small_vert_mode;
				float temp_output_30_0_g174575 = ( break1689_g174563.x * break33_g174575.x );
				float temp_output_29_0_g174575 = ( break1689_g174563.y * break33_g174575.y );
				float temp_output_31_0_g174575 = ( break1689_g174563.z * break33_g174575.z );
				float temp_output_28_0_g174575 = ( temp_output_30_0_g174575 + temp_output_29_0_g174575 + temp_output_31_0_g174575 + ( break1689_g174563.w * break33_g174575.w ) );
				float temp_output_1727_0_g174563 = temp_output_28_0_g174575;
				float4 temp_output_1567_30_g174563 = Out_BoundsData15_g174573;
				half4 Model_BoundsData1322_g174563 = temp_output_1567_30_g174563;
				float4 break33_g174578 = _motion_small_proc_mode;
				float temp_output_30_0_g174578 = ( (Model_BoundsData1322_g174563).z * break33_g174578.x );
				float temp_output_29_0_g174578 = ( (Model_BoundsData1322_g174563).w * break33_g174578.y );
				float temp_output_1734_0_g174563 = ( temp_output_30_0_g174578 + temp_output_29_0_g174578 );
				float lerpResult1906_g174563 = lerp( temp_output_1727_0_g174563 , temp_output_1734_0_g174563 , _motion_small_mask_mode);
				float enc1805_g174563 = v.ase_texcoord.z;
				float2 localDecodeFloatToVector21805_g174563 = DecodeFloatToVector2( enc1805_g174563 );
				float2 break1804_g174563 = localDecodeFloatToVector21805_g174563;
				half Small_Mask_Legacy1806_g174563 = break1804_g174563.x;
				#ifdef TVE_LEGACY
				float staticSwitch1800_g174563 = Small_Mask_Legacy1806_g174563;
				#else
				float staticSwitch1800_g174563 = lerpResult1906_g174563;
				#endif
				float clampResult17_g174580 = clamp( staticSwitch1800_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174581 = _MotionSmallMaskRemap.x;
				float temp_output_10_0_g174581 = ( _MotionSmallMaskRemap.y - temp_output_7_0_g174581 );
				float temp_output_6_0_g174599 = saturate( ( ( clampResult17_g174580 - temp_output_7_0_g174581 ) / ( temp_output_10_0_g174581 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174599 = ( temp_output_6_0_g174599 + ( _MotionSmallMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174599 = temp_output_6_0_g174599;
				#endif
				half Small_Mask640_g174563 = staticSwitch14_g174599;
				half3 Model_PositionOS147_g174563 = temp_output_1567_0_g174563;
				float3 normalizeResult1832_g174563 = normalize( Model_PositionOS147_g174563 );
				half3 Model_PositionWO162_g174563 = temp_output_1567_17_g174563;
				float3 temp_output_1567_19_g174563 = Out_PivotWO15_g174573;
				half3 Model_PivotWO402_g174563 = temp_output_1567_19_g174563;
				float3 lerpResult829_g174563 = lerp( Model_PositionWO162_g174563 , Model_PivotWO402_g174563 , _MotionBasePivotValue);
				float4 temp_output_1567_27_g174563 = Out_MotionData15_g174573;
				half4 Model_MotionMasks489_g174563 = temp_output_1567_27_g174563;
				half3 Base_Position1394_g174563 = ( lerpResult829_g174563 + ( (Model_MotionMasks489_g174563).z * _MotionBasePhaseValue ) );
				half3 Input_PositionWO419_g174606 = Base_Position1394_g174563;
				half Flow_TilllingRT1397_g174563 = _MotionTillingValue;
				half Input_MotionTillingRT670_g174606 = ( Flow_TilllingRT1397_g174563 + 0.2 );
				half2 Noise_CoordRT668_g174606 = ( -(Input_PositionWO419_g174606).xz * Input_MotionTillingRT670_g174606 * 0.005 );
				half4 Noise_ParamsRT535_g174606 = SAMPLE_TEXTURE2D_LOD( _MotionNoiseTexRT, sampler_Linear_Repeat, Noise_CoordRT668_g174606, 0.0 );
				half Flow_Value1855_g174563 = _MotionIntensityValue;
				half Input_MotionValue629_g174606 = Flow_Value1855_g174563;
				float2 lerpResult709_g174606 = lerp( float2( 0.5,0.5 ) , (Noise_ParamsRT535_g174606).rg , Input_MotionValue629_g174606);
				float3 appendResult712_g174606 = (float3(lerpResult709_g174606 , ( (Noise_ParamsRT535_g174606).b * Input_MotionValue629_g174606 )));
				float4 lerpResult627_g174606 = lerp( half4(0,1,1,0) , TVE_MotionParams , TVE_IsEnabled);
				half2 Global_WindDirection593_g174606 = (lerpResult627_g174606).xy;
				half Input_MotionTilling321_g174606 = ( _MotionBaseTillingValue + 0.2 );
				half2 Noise_Coord515_g174606 = ( -(Input_PositionWO419_g174606).xz * Input_MotionTilling321_g174606 * 0.005 );
				float2 temp_output_3_0_g174607 = Noise_Coord515_g174606;
				float2 temp_output_21_0_g174607 = (Global_WindDirection593_g174606*2.0 + -1.0);
				float lerpResult128_g174612 = lerp( _Time.y , ( ( _Time.y * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				half Input_MotionSpeed62_g174606 = _MotionBaseSpeedValue;
				half Noise_Speed516_g174606 = ( ( lerpResult128_g174612 * Input_MotionSpeed62_g174606 ) * 0.02 );
				float temp_output_15_0_g174607 = Noise_Speed516_g174606;
				float temp_output_23_0_g174607 = frac( temp_output_15_0_g174607 );
				float4 lerpResult39_g174607 = lerp( SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174607 + ( temp_output_21_0_g174607 * temp_output_23_0_g174607 ) ), 0.0 ) , SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174607 + ( temp_output_21_0_g174607 * frac( ( temp_output_15_0_g174607 + 0.5 ) ) ) ), 0.0 ) , ( abs( ( temp_output_23_0_g174607 - 0.5 ) ) / 0.5 ));
				half4 Noise_Params685_g174606 = lerpResult39_g174607;
				half Input_MotionNoise552_g174606 = _MotionBaseNoiseValue;
				half Global_WindIntensity576_g174606 = (lerpResult627_g174606).z;
				half Motion_Intensity720_g174606 = ( Global_WindIntensity576_g174606 * Input_MotionValue629_g174606 );
				float lerpResult701_g174606 = lerp( 1.0 , Input_MotionNoise552_g174606 , Motion_Intensity720_g174606);
				float2 lerpResult646_g174606 = lerp( Global_WindDirection593_g174606 , (Noise_Params685_g174606).rg , lerpResult701_g174606);
				float2 lerpResult724_g174606 = lerp( float2( 0.5,0.5 ) , lerpResult646_g174606 , Motion_Intensity720_g174606);
				float3 appendResult708_g174606 = (float3(lerpResult724_g174606 , ( (Noise_Params685_g174606).a * Motion_Intensity720_g174606 )));
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch673_g174606 = half3(0.5,0.5,0);
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch673_g174606 = appendResult712_g174606;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch673_g174606 = appendResult708_g174606;
				#else
				float3 staticSwitch673_g174606 = half3(0.5,0.5,0);
				#endif
				half3 Motion_Local694_g174606 = staticSwitch673_g174606;
				float temp_output_136_0_g174613 = _global_wind_layer_value;
				float temp_output_19_0_g174615 = TVE_WindLayers[(int)temp_output_136_0_g174613];
				half3 Input_Position180_g174616 = Input_PositionWO419_g174606;
				float2 temp_output_75_0_g174616 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g174616).xz ) );
				float temp_output_82_0_g174616 = temp_output_136_0_g174613;
				float2 temp_output_119_0_g174616 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g174616).xz ) );
				float temp_output_7_0_g174621 = 1.0;
				float temp_output_10_0_g174621 = ( TVE_RenderNearFadeValue - temp_output_7_0_g174621 );
				float4 lerpResult131_g174616 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g174616,temp_output_82_0_g174616), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g174616,temp_output_82_0_g174616), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g174616 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g174621 ) / temp_output_10_0_g174621 ) ));
				float4 temp_output_17_0_g174615 = lerpResult131_g174616;
				float4 temp_output_3_0_g174615 = TVE_WindParams;
				float4 ifLocalVar18_g174615 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g174615 >= 0.5 )
				ifLocalVar18_g174615 = temp_output_17_0_g174615;
				else
				ifLocalVar18_g174615 = temp_output_3_0_g174615;
				float4 lerpResult22_g174615 = lerp( temp_output_3_0_g174615 , temp_output_17_0_g174615 , temp_output_19_0_g174615);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g174615 = lerpResult22_g174615;
				#else
				float4 staticSwitch24_g174615 = ifLocalVar18_g174615;
				#endif
				float4 temp_output_610_0_g174606 = staticSwitch24_g174615;
				float2 lerpResult699_g174606 = lerp( float2( 0.5,0.5 ) , (temp_output_610_0_g174606).rg , Input_MotionValue629_g174606);
				float3 appendResult643_g174606 = (float3(lerpResult699_g174606 , ( (temp_output_610_0_g174606).b * Input_MotionValue629_g174606 )));
				float3 lerpResult623_g174606 = lerp( Motion_Local694_g174606 , appendResult643_g174606 , (temp_output_610_0_g174606).a);
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch693_g174606 = appendResult643_g174606;
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch693_g174606 = lerpResult623_g174606;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch693_g174606 = lerpResult623_g174606;
				#else
				float3 staticSwitch693_g174606 = appendResult643_g174606;
				#endif
				#ifdef TVE_MOTION_WIND_ELEMENT
				float3 staticSwitch612_g174606 = staticSwitch693_g174606;
				#else
				float3 staticSwitch612_g174606 = Motion_Local694_g174606;
				#endif
				float3 temp_output_2275_567_g174563 = staticSwitch612_g174606;
				float2 break83_g174595 = ((temp_output_2275_567_g174563).xy*2.0 + -1.0);
				float3 appendResult79_g174595 = (float3(break83_g174595.x , 0.0 , break83_g174595.y));
				float3 ase_parentObjectScale = ( 1.0 / float3( length( unity_WorldToObject[ 0 ].xyz ), length( unity_WorldToObject[ 1 ].xyz ), length( unity_WorldToObject[ 2 ].xyz ) ) );
				half2 Base_Direction893_g174563 = (( mul( unity_WorldToObject, float4( appendResult79_g174595 , 0.0 ) ).xyz * ase_parentObjectScale )).xz;
				float3 lerpResult1411_g174563 = lerp( Model_PositionWO162_g174563 , Model_PivotWO402_g174563 , _MotionSmallPivotValue);
				half3 Small_Position1421_g174563 = ( lerpResult1411_g174563 + ( (Model_MotionMasks489_g174563).z * _MotionSmallPhaseValue ) );
				half3 Input_PositionWO419_g174623 = Small_Position1421_g174563;
				half Input_MotionTillingRT670_g174623 = ( Flow_TilllingRT1397_g174563 + 0.2 );
				half2 Noise_CoordRT668_g174623 = ( -(Input_PositionWO419_g174623).xz * Input_MotionTillingRT670_g174623 * 0.005 );
				half4 Noise_ParamsRT535_g174623 = SAMPLE_TEXTURE2D_LOD( _MotionNoiseTexRT, sampler_Linear_Repeat, Noise_CoordRT668_g174623, 0.0 );
				half Input_MotionValue629_g174623 = Flow_Value1855_g174563;
				float2 lerpResult709_g174623 = lerp( float2( 0.5,0.5 ) , (Noise_ParamsRT535_g174623).rg , Input_MotionValue629_g174623);
				float3 appendResult712_g174623 = (float3(lerpResult709_g174623 , ( (Noise_ParamsRT535_g174623).b * Input_MotionValue629_g174623 )));
				float4 lerpResult627_g174623 = lerp( half4(0,1,1,0) , TVE_MotionParams , TVE_IsEnabled);
				half2 Global_WindDirection593_g174623 = (lerpResult627_g174623).xy;
				half Input_MotionTilling321_g174623 = ( _MotionSmallTillingValue + 0.2 );
				half2 Noise_Coord515_g174623 = ( -(Input_PositionWO419_g174623).xz * Input_MotionTilling321_g174623 * 0.005 );
				float2 temp_output_3_0_g174624 = Noise_Coord515_g174623;
				float2 temp_output_21_0_g174624 = (Global_WindDirection593_g174623*2.0 + -1.0);
				float lerpResult128_g174629 = lerp( _Time.y , ( ( _Time.y * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				half Input_MotionSpeed62_g174623 = _MotionSmallSpeedValue;
				half Noise_Speed516_g174623 = ( ( lerpResult128_g174629 * Input_MotionSpeed62_g174623 ) * 0.02 );
				float temp_output_15_0_g174624 = Noise_Speed516_g174623;
				float temp_output_23_0_g174624 = frac( temp_output_15_0_g174624 );
				float4 lerpResult39_g174624 = lerp( SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174624 + ( temp_output_21_0_g174624 * temp_output_23_0_g174624 ) ), 0.0 ) , SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174624 + ( temp_output_21_0_g174624 * frac( ( temp_output_15_0_g174624 + 0.5 ) ) ) ), 0.0 ) , ( abs( ( temp_output_23_0_g174624 - 0.5 ) ) / 0.5 ));
				half4 Noise_Params685_g174623 = lerpResult39_g174624;
				half Input_MotionNoise552_g174623 = _MotionSmallNoiseValue;
				half Global_WindIntensity576_g174623 = (lerpResult627_g174623).z;
				half Motion_Intensity720_g174623 = ( Global_WindIntensity576_g174623 * Input_MotionValue629_g174623 );
				float lerpResult701_g174623 = lerp( 1.0 , Input_MotionNoise552_g174623 , Motion_Intensity720_g174623);
				float2 lerpResult646_g174623 = lerp( Global_WindDirection593_g174623 , (Noise_Params685_g174623).rg , lerpResult701_g174623);
				float2 lerpResult724_g174623 = lerp( float2( 0.5,0.5 ) , lerpResult646_g174623 , Motion_Intensity720_g174623);
				float3 appendResult708_g174623 = (float3(lerpResult724_g174623 , ( (Noise_Params685_g174623).a * Motion_Intensity720_g174623 )));
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch673_g174623 = half3(0.5,0.5,0);
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch673_g174623 = appendResult712_g174623;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch673_g174623 = appendResult708_g174623;
				#else
				float3 staticSwitch673_g174623 = half3(0.5,0.5,0);
				#endif
				half3 Motion_Local694_g174623 = staticSwitch673_g174623;
				float temp_output_136_0_g174630 = _global_wind_layer_value;
				float temp_output_19_0_g174632 = TVE_WindLayers[(int)temp_output_136_0_g174630];
				half3 Input_Position180_g174633 = Input_PositionWO419_g174623;
				float2 temp_output_75_0_g174633 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g174633).xz ) );
				float temp_output_82_0_g174633 = temp_output_136_0_g174630;
				float2 temp_output_119_0_g174633 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g174633).xz ) );
				float temp_output_7_0_g174638 = 1.0;
				float temp_output_10_0_g174638 = ( TVE_RenderNearFadeValue - temp_output_7_0_g174638 );
				float4 lerpResult131_g174633 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g174633,temp_output_82_0_g174633), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g174633,temp_output_82_0_g174633), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g174633 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g174638 ) / temp_output_10_0_g174638 ) ));
				float4 temp_output_17_0_g174632 = lerpResult131_g174633;
				float4 temp_output_3_0_g174632 = TVE_WindParams;
				float4 ifLocalVar18_g174632 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g174632 >= 0.5 )
				ifLocalVar18_g174632 = temp_output_17_0_g174632;
				else
				ifLocalVar18_g174632 = temp_output_3_0_g174632;
				float4 lerpResult22_g174632 = lerp( temp_output_3_0_g174632 , temp_output_17_0_g174632 , temp_output_19_0_g174632);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g174632 = lerpResult22_g174632;
				#else
				float4 staticSwitch24_g174632 = ifLocalVar18_g174632;
				#endif
				float4 temp_output_610_0_g174623 = staticSwitch24_g174632;
				float2 lerpResult699_g174623 = lerp( float2( 0.5,0.5 ) , (temp_output_610_0_g174623).rg , Input_MotionValue629_g174623);
				float3 appendResult643_g174623 = (float3(lerpResult699_g174623 , ( (temp_output_610_0_g174623).b * Input_MotionValue629_g174623 )));
				float3 lerpResult623_g174623 = lerp( Motion_Local694_g174623 , appendResult643_g174623 , (temp_output_610_0_g174623).a);
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch693_g174623 = appendResult643_g174623;
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch693_g174623 = lerpResult623_g174623;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch693_g174623 = lerpResult623_g174623;
				#else
				float3 staticSwitch693_g174623 = appendResult643_g174623;
				#endif
				#ifdef TVE_MOTION_WIND_ELEMENT
				float3 staticSwitch612_g174623 = staticSwitch693_g174623;
				#else
				float3 staticSwitch612_g174623 = Motion_Local694_g174623;
				#endif
				float3 temp_output_2276_567_g174563 = staticSwitch612_g174623;
				float2 break83_g174594 = ((temp_output_2276_567_g174563).xy*2.0 + -1.0);
				float3 appendResult79_g174594 = (float3(break83_g174594.x , 0.0 , break83_g174594.y));
				half2 Small_Direction1489_g174563 = (( mul( unity_WorldToObject, float4( appendResult79_g174594 , 0.0 ) ).xyz * ase_parentObjectScale )).xz;
				#ifdef TVE_MOTION_SMALL_SQUASH
				float2 staticSwitch1485_g174563 = Small_Direction1489_g174563;
				#else
				float2 staticSwitch1485_g174563 = Base_Direction893_g174563;
				#endif
				half2 Wave_Direction1486_g174563 = staticSwitch1485_g174563;
				float2 break1828_g174563 = -Wave_Direction1486_g174563;
				float3 appendResult1830_g174563 = (float3(break1828_g174563.x , 0.0 , break1828_g174563.y));
				float dotResult1831_g174563 = dot( normalizeResult1832_g174563 , appendResult1830_g174563 );
				float lerpResult1826_g174563 = lerp( 1.0 , (dotResult1831_g174563*0.5 + 0.5) , _MotionFrontValue);
				half Motion_FrontMask1142_g174563 = lerpResult1826_g174563;
				float2 break1939_g174563 = Small_Direction1489_g174563;
				#if defined( TVE_MOTION_WIND_OFF )
				float staticSwitch734_g174623 = 4.0;
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float staticSwitch734_g174623 = 4.0;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float staticSwitch734_g174623 = Input_MotionSpeed62_g174623;
				#else
				float staticSwitch734_g174623 = 4.0;
				#endif
				float mulTime113_g174639 = _Time.y * staticSwitch734_g174623;
				float lerpResult128_g174639 = lerp( mulTime113_g174639 , ( ( mulTime113_g174639 * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				float3 break726_g174623 = Input_PositionWO419_g174623;
				half Small_Vertical2215_g174563 = ( sin( ( lerpResult128_g174639 + ( ( break726_g174623.x + break726_g174623.y + break726_g174623.z ) * 2.0 ) ) ) * 0.1 );
				half Small_Intensity2047_g174563 = length( Small_Direction1489_g174563 );
				float3 appendResult2056_g174563 = (float3(break1939_g174563.x , ( Small_Vertical2215_g174563 * Small_Intensity2047_g174563 ) , break1939_g174563.y));
				float lerpResult2098_g174563 = lerp( 1.0 , ( Small_Intensity2047_g174563 * Small_Intensity2047_g174563 ) , _MotionSmallDelayValue);
				float3 appendResult2101_g174563 = (float3(lerpResult2098_g174563 , 1.0 , lerpResult2098_g174563));
				half3 Small_Squash789_g174563 = ( Small_Value2180_g174563 * Small_Mask640_g174563 * Motion_FrontMask1142_g174563 * appendResult2056_g174563 * appendResult2101_g174563 );
				#ifdef TVE_MOTION_SMALL_SQUASH
				float3 staticSwitch495_g174563 = Small_Squash789_g174563;
				#else
				float3 staticSwitch495_g174563 = temp_cast_39;
				#endif
				float3 temp_cast_50 = (0.0).xxx;
				float4 break1710_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174576 = _motion_tiny_vert_mode;
				float temp_output_30_0_g174576 = ( break1710_g174563.x * break33_g174576.x );
				float temp_output_29_0_g174576 = ( break1710_g174563.y * break33_g174576.y );
				float temp_output_31_0_g174576 = ( break1710_g174563.z * break33_g174576.z );
				float temp_output_28_0_g174576 = ( temp_output_30_0_g174576 + temp_output_29_0_g174576 + temp_output_31_0_g174576 + ( break1710_g174563.w * break33_g174576.w ) );
				float temp_output_1729_0_g174563 = temp_output_28_0_g174576;
				float4 break33_g174579 = _motion_tiny_proc_mode;
				float temp_output_30_0_g174579 = ( (Model_BoundsData1322_g174563).z * break33_g174579.x );
				float temp_output_29_0_g174579 = ( (Model_BoundsData1322_g174563).w * break33_g174579.y );
				float temp_output_1735_0_g174563 = ( temp_output_30_0_g174579 + temp_output_29_0_g174579 );
				float lerpResult1908_g174563 = lerp( temp_output_1729_0_g174563 , temp_output_1735_0_g174563 , _motion_tiny_mask_mode);
				half Tiny_Mask_Legacy1807_g174563 = break1804_g174563.y;
				#ifdef TVE_LEGACY
				float staticSwitch1810_g174563 = Tiny_Mask_Legacy1807_g174563;
				#else
				float staticSwitch1810_g174563 = lerpResult1908_g174563;
				#endif
				float clampResult17_g174582 = clamp( staticSwitch1810_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174583 = _MotionTinyMaskRemap.x;
				float temp_output_10_0_g174583 = ( _MotionTinyMaskRemap.y - temp_output_7_0_g174583 );
				float temp_output_6_0_g174584 = saturate( ( ( clampResult17_g174582 - temp_output_7_0_g174583 ) / ( temp_output_10_0_g174583 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174584 = ( temp_output_6_0_g174584 + ( _MotionTinyMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174584 = temp_output_6_0_g174584;
				#endif
				half Tiny_Mask218_g174563 = staticSwitch14_g174584;
				half3 Input_Position500_g174600 = Model_PositionWO162_g174563;
				half Input_MotionTilling321_g174600 = _MotionTinyTillingValue;
				float lerpResult128_g174604 = lerp( _Time.y , ( ( _Time.y * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				half Input_MotionSpeed62_g174600 = _MotionTinySpeedValue;
				float3 temp_output_519_0_g174600 = (SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( ( (Input_Position500_g174600).xz * Input_MotionTilling321_g174600 * 0.03 ) + ( lerpResult128_g174604 * Input_MotionSpeed62_g174600 * 0.01 ) ), 0.0 ).rgb*2.0 + -1.0);
				half3 Tiny_Direction859_g174563 = temp_output_519_0_g174600;
				half3 Model_PositionWS1819_g174563 = temp_output_1567_16_g174563;
				half Motion_FadeMask1820_g174563 = ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS1819_g174563 ) / _MotionDistValue ) ) );
				half Base_Noise1159_g174563 = abs( (temp_output_2275_567_g174563).z );
				half Small_Noise1427_g174563 = (temp_output_2276_567_g174563).z;
				#ifdef TVE_MOTION_SMALL_SQUASH
				float staticSwitch2013_g174563 = Small_Noise1427_g174563;
				#else
				float staticSwitch2013_g174563 = Base_Noise1159_g174563;
				#endif
				float temp_output_136_0_g174564 = _global_push_layer_value;
				float temp_output_19_0_g174565 = TVE_PushLayers[(int)temp_output_136_0_g174564];
				float3 lerpResult1547_g174563 = lerp( Model_PositionWO162_g174563 , Model_PivotWO402_g174563 , _MotionPushPivotValue);
				half3 Push_Position1549_g174563 = ( lerpResult1547_g174563 + ( (Model_MotionMasks489_g174563).z * _MotionPushPhaseValue ) );
				half3 Input_Position180_g174566 = Push_Position1549_g174563;
				float2 temp_output_75_0_g174566 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g174566).xz ) );
				float temp_output_82_0_g174566 = temp_output_136_0_g174564;
				float2 temp_output_119_0_g174566 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g174566).xz ) );
				float temp_output_7_0_g174571 = 1.0;
				float temp_output_10_0_g174571 = ( TVE_RenderNearFadeValue - temp_output_7_0_g174571 );
				float4 lerpResult131_g174566 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g174566,temp_output_82_0_g174566), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g174566,temp_output_82_0_g174566), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g174566 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g174571 ) / temp_output_10_0_g174571 ) ));
				float4 temp_output_17_0_g174565 = lerpResult131_g174566;
				float4 temp_output_3_0_g174565 = TVE_PushParams;
				float4 ifLocalVar18_g174565 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g174565 >= 0.5 )
				ifLocalVar18_g174565 = temp_output_17_0_g174565;
				else
				ifLocalVar18_g174565 = temp_output_3_0_g174565;
				float4 lerpResult22_g174565 = lerp( temp_output_3_0_g174565 , temp_output_17_0_g174565 , temp_output_19_0_g174565);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g174565 = lerpResult22_g174565;
				#else
				float4 staticSwitch24_g174565 = ifLocalVar18_g174565;
				#endif
				half4 Global_PushParams214_g174563 = staticSwitch24_g174565;
				half Push_Noise1977_g174563 = (Global_PushParams214_g174563).b;
				half Push_Value1501_g174563 = _MotionPushIntensityValue;
				half Push_Influence1504_g174563 = saturate( ( (Global_PushParams214_g174563).a * Push_Value1501_g174563 ) );
				float lerpResult2016_g174563 = lerp( staticSwitch2013_g174563 , Push_Noise1977_g174563 , Push_Influence1504_g174563);
				#ifdef TVE_MOTION_PUSH_BENDING
				float staticSwitch2012_g174563 = lerpResult2016_g174563;
				#else
				float staticSwitch2012_g174563 = staticSwitch2013_g174563;
				#endif
				half Wave_Noise1475_g174563 = staticSwitch2012_g174563;
				half3 Tiny_Flutter1451_g174563 = ( _MotionTinyIntensityValue * Tiny_Mask218_g174563 * Tiny_Direction859_g174563 * Motion_FadeMask1820_g174563 * Flow_Value1855_g174563 * ( Wave_Noise1475_g174563 * Wave_Noise1475_g174563 ) );
				#ifdef TVE_MOTION_TINY_FLUTTER
				float3 staticSwitch414_g174563 = Tiny_Flutter1451_g174563;
				#else
				float3 staticSwitch414_g174563 = temp_cast_50;
				#endif
				half3 Final_PositionADD1569_g174563 = ( staticSwitch495_g174563 + staticSwitch414_g174563 );
				float3 In_PositionAddOS16_g174577 = Final_PositionADD1569_g174563;
				float3 temp_output_1567_24_g174563 = Out_PivotOS15_g174573;
				float3 In_PivotOS16_g174577 = temp_output_1567_24_g174563;
				float3 In_PivotWS16_g174577 = Out_PivotWS15_g174573;
				float3 In_PivotWO16_g174577 = temp_output_1567_19_g174563;
				float3 temp_output_1567_20_g174563 = Out_NormalOS15_g174573;
				float3 In_NormalOS16_g174577 = temp_output_1567_20_g174563;
				float3 In_NormalWS16_g174577 = Out_NormalWS15_g174573;
				float3 In_NormalRawOS16_g174577 = Out_NormalRawOS15_g174573;
				float3 In_NormalRawWS16_g174577 = Out_NormalRawWS15_g174573;
				float4 In_TangentOS16_g174577 = Out_TangentOS15_g174573;
				float3 In_ViewDirWS16_g174577 = Out_ViewDirWS15_g174573;
				float4 In_VertexData16_g174577 = temp_output_1567_29_g174563;
				float4 In_MotionData16_g174577 = temp_output_1567_27_g174563;
				float4 In_BoundsData16_g174577 = temp_output_1567_30_g174563;
				float2 temp_cast_54 = (0.0).xx;
				half Base_Value2242_g174563 = _MotionBaseIntensityValue;
				float4 break748_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174587 = _motion_base_vert_mode;
				float temp_output_30_0_g174587 = ( break748_g174563.x * break33_g174587.x );
				float temp_output_29_0_g174587 = ( break748_g174563.y * break33_g174587.y );
				float temp_output_31_0_g174587 = ( break748_g174563.z * break33_g174587.z );
				float temp_output_28_0_g174587 = ( temp_output_30_0_g174587 + temp_output_29_0_g174587 + temp_output_31_0_g174587 + ( break748_g174563.w * break33_g174587.w ) );
				float temp_output_1731_0_g174563 = temp_output_28_0_g174587;
				float4 break33_g174588 = _motion_base_proc_mode;
				float temp_output_30_0_g174588 = ( (Model_BoundsData1322_g174563).z * break33_g174588.x );
				float temp_output_29_0_g174588 = ( (Model_BoundsData1322_g174563).w * break33_g174588.y );
				float temp_output_1733_0_g174563 = ( temp_output_30_0_g174588 + temp_output_29_0_g174588 );
				float lerpResult1904_g174563 = lerp( temp_output_1731_0_g174563 , temp_output_1733_0_g174563 , _motion_base_mask_mode);
				float clampResult17_g174585 = clamp( lerpResult1904_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174586 = _MotionBaseMaskRemap.x;
				float temp_output_10_0_g174586 = ( _MotionBaseMaskRemap.y - temp_output_7_0_g174586 );
				float temp_output_6_0_g174598 = saturate( ( ( clampResult17_g174585 - temp_output_7_0_g174586 ) / ( temp_output_10_0_g174586 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174598 = ( temp_output_6_0_g174598 + ( _MotionBaseMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174598 = temp_output_6_0_g174598;
				#endif
				half Base_Mask217_g174563 = staticSwitch14_g174598;
				half Base_Intensity2041_g174563 = length( Base_Direction893_g174563 );
				float lerpResult2090_g174563 = lerp( 1.0 , ( Base_Intensity2041_g174563 * Base_Intensity2041_g174563 ) , _MotionBaseDelayValue);
				#ifdef TVE_MOTION_BASE_BENDING
				float2 staticSwitch1573_g174563 = ( Base_Value2242_g174563 * Base_Mask217_g174563 * Base_Direction893_g174563 * lerpResult2090_g174563 );
				#else
				float2 staticSwitch1573_g174563 = temp_cast_54;
				#endif
				float4 break1864_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174591 = _motion_push_vert_mode;
				float temp_output_30_0_g174591 = ( break1864_g174563.x * break33_g174591.x );
				float temp_output_29_0_g174591 = ( break1864_g174563.y * break33_g174591.y );
				float temp_output_31_0_g174591 = ( break1864_g174563.z * break33_g174591.z );
				float temp_output_28_0_g174591 = ( temp_output_30_0_g174591 + temp_output_29_0_g174591 + temp_output_31_0_g174591 + ( break1864_g174563.w * break33_g174591.w ) );
				float temp_output_1867_0_g174563 = temp_output_28_0_g174591;
				float4 break33_g174592 = _motion_push_proc_mode;
				float temp_output_30_0_g174592 = ( (Model_BoundsData1322_g174563).z * break33_g174592.x );
				float temp_output_29_0_g174592 = ( (Model_BoundsData1322_g174563).w * break33_g174592.y );
				float temp_output_1868_0_g174563 = ( temp_output_30_0_g174592 + temp_output_29_0_g174592 );
				float lerpResult1910_g174563 = lerp( temp_output_1867_0_g174563 , temp_output_1868_0_g174563 , _motion_push_mask_mode);
				float clampResult17_g174589 = clamp( lerpResult1910_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174590 = _MotionPushMaskRemap.x;
				float temp_output_10_0_g174590 = ( _MotionPushMaskRemap.y - temp_output_7_0_g174590 );
				float temp_output_6_0_g174593 = saturate( ( ( clampResult17_g174589 - temp_output_7_0_g174590 ) / ( temp_output_10_0_g174590 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174593 = ( temp_output_6_0_g174593 + ( _MotionPushMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174593 = temp_output_6_0_g174593;
				#endif
				half Push_Mask1877_g174563 = staticSwitch14_g174593;
				float2 break83_g174596 = ((Global_PushParams214_g174563).rg*2.0 + -1.0);
				float3 appendResult79_g174596 = (float3(break83_g174596.x , 0.0 , break83_g174596.y));
				half2 Push_Direction1972_g174563 = (( mul( unity_WorldToObject, float4( appendResult79_g174596 , 0.0 ) ).xyz * ase_parentObjectScale )).xz;
				float2 lerpResult1496_g174563 = lerp( staticSwitch1573_g174563 , ( Push_Mask1877_g174563 * Push_Value1501_g174563 * Push_Direction1972_g174563 ) , Push_Influence1504_g174563);
				#ifdef TVE_MOTION_PUSH_BENDING
				float2 staticSwitch1506_g174563 = lerpResult1496_g174563;
				#else
				float2 staticSwitch1506_g174563 = staticSwitch1573_g174563;
				#endif
				half2 Base_Bending1440_g174563 = staticSwitch1506_g174563;
				float4 appendResult2023_g174563 = (float4(Base_Bending1440_g174563 , 0.0 , 0.0));
				half4 Final_RotationData1570_g174563 = appendResult2023_g174563;
				float4 In_RotationData16_g174577 = Final_RotationData1570_g174563;
				Data16_g174577.Dummy = In_Dummy16_g174577;
				Data16_g174577.PositionOS = In_PositionOS16_g174577;
				Data16_g174577.PositionWS = In_PositionWS16_g174577;
				Data16_g174577.PositionWO = In_PositionWO16_g174577;
				Data16_g174577.PositionRawOS = In_PositionRawOS16_g174577;
				Data16_g174577.PositionAddOS = In_PositionAddOS16_g174577;
				Data16_g174577.PivotOS = In_PivotOS16_g174577;
				Data16_g174577.PivotWS = In_PivotWS16_g174577;
				Data16_g174577.PivotWO = In_PivotWO16_g174577;
				Data16_g174577.NormalOS = In_NormalOS16_g174577;
				Data16_g174577.NormalWS = In_NormalWS16_g174577;
				Data16_g174577.NormalRawOS = In_NormalRawOS16_g174577;
				Data16_g174577.NormalRawWS = In_NormalRawWS16_g174577;
				Data16_g174577.TangentOS = In_TangentOS16_g174577;
				Data16_g174577.ViewDirWS = In_ViewDirWS16_g174577;
				Data16_g174577.VertexData = In_VertexData16_g174577;
				Data16_g174577.MotionData = In_MotionData16_g174577;
				Data16_g174577.BoundsData = In_BoundsData16_g174577;
				Data16_g174577.RotationData = In_RotationData16_g174577;
				TVEModelData Data15_g174800 = Data16_g174577;
				float Out_Dummy15_g174800 = 0;
				float3 Out_PositionOS15_g174800 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174800 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174800 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174800 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174800 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174800 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174800 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174800 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174800 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174800 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174800 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174800 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174800 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174800 = float3( 0,0,0 );
				float4 Out_VertexData15_g174800 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174800 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174800 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174800 = float4( 0,0,0,0 );
				Out_Dummy15_g174800 = Data15_g174800.Dummy;
				Out_PositionOS15_g174800 = Data15_g174800.PositionOS;
				Out_PositionWS15_g174800 = Data15_g174800.PositionWS;
				Out_PositionWO15_g174800 = Data15_g174800.PositionWO;
				Out_PositionRawOS15_g174800 = Data15_g174800.PositionRawOS;
				Out_PositionAddOS15_g174800 = Data15_g174800.PositionAddOS;
				Out_PivotOS15_g174800 = Data15_g174800.PivotOS;
				Out_PivotWS15_g174800 = Data15_g174800.PivotWS;
				Out_PivotWO15_g174800 = Data15_g174800.PivotWO;
				Out_NormalOS15_g174800 = Data15_g174800.NormalOS;
				Out_NormalWS15_g174800 = Data15_g174800.NormalWS;
				Out_NormalRawOS15_g174800 = Data15_g174800.NormalRawOS;
				Out_NormalRawWS15_g174800 = Data15_g174800.NormalRawWS;
				Out_TangentOS15_g174800 = Data15_g174800.TangentOS;
				Out_ViewDirWS15_g174800 = Data15_g174800.ViewDirWS;
				Out_VertexData15_g174800 = Data15_g174800.VertexData;
				Out_MotionData15_g174800 = Data15_g174800.MotionData;
				Out_BoundsData15_g174800 = Data15_g174800.BoundsData;
				Out_RotationData15_g174800 = Data15_g174800.RotationData;
				float3 In_PositionOS16_g174801 = Out_PositionOS15_g174800;
				float3 In_PositionWS16_g174801 = Out_PositionWS15_g174800;
				float3 In_PositionWO16_g174801 = Out_PositionWO15_g174800;
				float3 In_PositionRawOS16_g174801 = Out_PositionRawOS15_g174800;
				half3 Model_PositionADD147_g174798 = Out_PositionAddOS15_g174800;
				TVEGlobalData Data15_g174799 = Data204_g173897;
				float Out_Dummy15_g174799 = 0;
				float4 Out_CoatParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174799 = float4( 0,0,0,0 );
				Out_Dummy15_g174799 = Data15_g174799.Dummy;
				Out_CoatParams15_g174799 = Data15_g174799.CoatParams;
				Out_PaintParams15_g174799 = Data15_g174799.PaintParams;
				Out_GlowParams15_g174799 = Data15_g174799.GlowParams;
				Out_AtmoParams15_g174799= Data15_g174799.AtmoParams;
				Out_FadeParams15_g174799= Data15_g174799.FadeParams;
				Out_FormParams15_g174799 = Data15_g174799.FormParams;
				Out_LandParams15_g174799 = Data15_g174799.LandParams;
				Out_WindParams15_g174799 = Data15_g174799.WindParams;
				Out_PushParams15_g174799 = Data15_g174799.PushParams;
				half4 Input_FormParams188_g174798 = Out_FormParams15_g174799;
				float3 temp_output_210_19_g174798 = Out_PivotWO15_g174800;
				half3 Model_PivotWO162_g174798 = temp_output_210_19_g174798;
				float3 ase_objectScale = float3( length( unity_ObjectToWorld[ 0 ].xyz ), length( unity_ObjectToWorld[ 1 ].xyz ), length( unity_ObjectToWorld[ 2 ].xyz ) );
				float3 appendResult233_g174798 = (float3(0.0 , ( ( ( ( (Input_FormParams188_g174798).z - ( (Model_PivotWO162_g174798).y * _BlanketConformOffsetMode ) ) + _BlanketConformOffsetValue ) / ase_objectScale.y ) * ( _BlanketConformValue * TVE_IsEnabled ) ) , 0.0));
				half3 Blanket_Conform238_g174798 = appendResult233_g174798;
				float3 temp_output_249_0_g174798 = ( Model_PositionADD147_g174798 + Blanket_Conform238_g174798 );
				half3 Final_PositionADD178_g174798 = temp_output_249_0_g174798;
				float3 In_PositionAddOS16_g174801 = Final_PositionADD178_g174798;
				float3 In_PivotOS16_g174801 = Out_PivotOS15_g174800;
				float3 In_PivotWS16_g174801 = Out_PivotWS15_g174800;
				float3 In_PivotWO16_g174801 = temp_output_210_19_g174798;
				float3 In_NormalOS16_g174801 = Out_NormalOS15_g174800;
				float3 In_NormalWS16_g174801 = Out_NormalWS15_g174800;
				float3 In_NormalRawOS16_g174801 = Out_NormalRawOS15_g174800;
				float3 In_NormalRawWS16_g174801 = Out_NormalRawWS15_g174800;
				float4 In_TangentOS16_g174801 = Out_TangentOS15_g174800;
				float3 In_ViewDirWS16_g174801 = Out_ViewDirWS15_g174800;
				float4 In_VertexData16_g174801 = Out_VertexData15_g174800;
				float4 In_MotionData16_g174801 = Out_MotionData15_g174800;
				float4 In_BoundsData16_g174801 = Out_BoundsData15_g174800;
				half4 Model_RotationData212_g174798 = Out_RotationData15_g174800;
				float2 break83_g174804 = ((Input_FormParams188_g174798).xy*2.0 + -1.0);
				float3 appendResult79_g174804 = (float3(break83_g174804.x , 0.0 , break83_g174804.y));
				float2 lerpResult227_g174798 = lerp( float2( 0,0 ) , (( mul( unity_WorldToObject, float4( appendResult79_g174804 , 0.0 ) ).xyz * ase_parentObjectScale )).xz , ( _BlanketOrientationValue * TVE_IsEnabled ));
				half2 Blanket_Orientation192_g174798 = lerpResult227_g174798;
				float4 appendResult222_g174798 = (float4(( (Model_RotationData212_g174798).xy + Blanket_Orientation192_g174798 ) , (Model_RotationData212_g174798).zw));
				#ifdef TVE_BLANKET_BENDING
				float4 staticSwitch218_g174798 = appendResult222_g174798;
				#else
				float4 staticSwitch218_g174798 = Model_RotationData212_g174798;
				#endif
				half4 Final_RotationData225_g174798 = staticSwitch218_g174798;
				float4 In_RotationData16_g174801 = Final_RotationData225_g174798;
				Data16_g174801.Dummy = In_Dummy16_g174801;
				Data16_g174801.PositionOS = In_PositionOS16_g174801;
				Data16_g174801.PositionWS = In_PositionWS16_g174801;
				Data16_g174801.PositionWO = In_PositionWO16_g174801;
				Data16_g174801.PositionRawOS = In_PositionRawOS16_g174801;
				Data16_g174801.PositionAddOS = In_PositionAddOS16_g174801;
				Data16_g174801.PivotOS = In_PivotOS16_g174801;
				Data16_g174801.PivotWS = In_PivotWS16_g174801;
				Data16_g174801.PivotWO = In_PivotWO16_g174801;
				Data16_g174801.NormalOS = In_NormalOS16_g174801;
				Data16_g174801.NormalWS = In_NormalWS16_g174801;
				Data16_g174801.NormalRawOS = In_NormalRawOS16_g174801;
				Data16_g174801.NormalRawWS = In_NormalRawWS16_g174801;
				Data16_g174801.TangentOS = In_TangentOS16_g174801;
				Data16_g174801.ViewDirWS = In_ViewDirWS16_g174801;
				Data16_g174801.VertexData = In_VertexData16_g174801;
				Data16_g174801.MotionData = In_MotionData16_g174801;
				Data16_g174801.BoundsData = In_BoundsData16_g174801;
				Data16_g174801.RotationData = In_RotationData16_g174801;
				TVEModelData Data15_g174819 = Data16_g174801;
				float Out_Dummy15_g174819 = 0;
				float3 Out_PositionOS15_g174819 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174819 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174819 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174819 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174819 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174819 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174819 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174819 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174819 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174819 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174819 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174819 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174819 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174819 = float3( 0,0,0 );
				float4 Out_VertexData15_g174819 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174819 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174819 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174819 = float4( 0,0,0,0 );
				Out_Dummy15_g174819 = Data15_g174819.Dummy;
				Out_PositionOS15_g174819 = Data15_g174819.PositionOS;
				Out_PositionWS15_g174819 = Data15_g174819.PositionWS;
				Out_PositionWO15_g174819 = Data15_g174819.PositionWO;
				Out_PositionRawOS15_g174819 = Data15_g174819.PositionRawOS;
				Out_PositionAddOS15_g174819 = Data15_g174819.PositionAddOS;
				Out_PivotOS15_g174819 = Data15_g174819.PivotOS;
				Out_PivotWS15_g174819 = Data15_g174819.PivotWS;
				Out_PivotWO15_g174819 = Data15_g174819.PivotWO;
				Out_NormalOS15_g174819 = Data15_g174819.NormalOS;
				Out_NormalWS15_g174819 = Data15_g174819.NormalWS;
				Out_NormalRawOS15_g174819 = Data15_g174819.NormalRawOS;
				Out_NormalRawWS15_g174819 = Data15_g174819.NormalRawWS;
				Out_TangentOS15_g174819 = Data15_g174819.TangentOS;
				Out_ViewDirWS15_g174819 = Data15_g174819.ViewDirWS;
				Out_VertexData15_g174819 = Data15_g174819.VertexData;
				Out_MotionData15_g174819 = Data15_g174819.MotionData;
				Out_BoundsData15_g174819 = Data15_g174819.BoundsData;
				Out_RotationData15_g174819 = Data15_g174819.RotationData;
				half3 Model_PositionOS147_g174818 = Out_PositionOS15_g174819;
				half3 Input_False58_g174821 = Model_PositionOS147_g174818;
				half3 VertexPos40_g174822 = Model_PositionOS147_g174818;
				half3 VertexPos40_g174823 = VertexPos40_g174822;
				float3 appendResult74_g174823 = (float3(VertexPos40_g174823.x , 0.0 , 0.0));
				half3 VertexPosRotationAxis50_g174823 = appendResult74_g174823;
				float3 break84_g174823 = VertexPos40_g174823;
				float3 appendResult81_g174823 = (float3(0.0 , break84_g174823.y , break84_g174823.z));
				half3 VertexPosOtherAxis82_g174823 = appendResult81_g174823;
				float4 temp_output_1567_33_g174818 = Out_RotationData15_g174819;
				half4 Model_VertexBend1569_g174818 = temp_output_1567_33_g174818;
				half2 Angle44_g174822 = (Model_VertexBend1569_g174818).xy;
				half Angle44_g174823 = (Angle44_g174822).y;
				half3 VertexPos40_g174824 = ( VertexPosRotationAxis50_g174823 + ( VertexPosOtherAxis82_g174823 * cos( Angle44_g174823 ) ) + ( cross( float3(1,0,0) , VertexPosOtherAxis82_g174823 ) * sin( Angle44_g174823 ) ) );
				float3 appendResult74_g174824 = (float3(0.0 , 0.0 , VertexPos40_g174824.z));
				half3 VertexPosRotationAxis50_g174824 = appendResult74_g174824;
				float3 break84_g174824 = VertexPos40_g174824;
				float3 appendResult81_g174824 = (float3(break84_g174824.x , break84_g174824.y , 0.0));
				half3 VertexPosOtherAxis82_g174824 = appendResult81_g174824;
				half Angle44_g174824 = -(Angle44_g174822).x;
				half3 Input_True57_g174821 = ( VertexPosRotationAxis50_g174824 + ( VertexPosOtherAxis82_g174824 * cos( Angle44_g174824 ) ) + ( cross( float3(0,0,1) , VertexPosOtherAxis82_g174824 ) * sin( Angle44_g174824 ) ) );
				#ifdef TVE_MOTION_BASE_BENDING
				float3 staticSwitch65_g174821 = Input_True57_g174821;
				#else
				float3 staticSwitch65_g174821 = Input_False58_g174821;
				#endif
				#ifdef TVE_MOTION_PUSH_BENDING
				float3 staticSwitch67_g174821 = Input_True57_g174821;
				#else
				float3 staticSwitch67_g174821 = staticSwitch65_g174821;
				#endif
				#ifdef TVE_BLANKET_BENDING
				float3 staticSwitch69_g174821 = Input_True57_g174821;
				#else
				float3 staticSwitch69_g174821 = staticSwitch67_g174821;
				#endif
				float3 temp_output_1578_0_g174818 = staticSwitch69_g174821;
				float3 temp_output_1567_31_g174818 = Out_PositionAddOS15_g174819;
				half3 Model_PositionADD1568_g174818 = temp_output_1567_31_g174818;
				half3 Final_PositionOS178_g174818 = ( temp_output_1578_0_g174818 + Model_PositionADD1568_g174818 );
				float3 In_PositionOS16_g174820 = Final_PositionOS178_g174818;
				float3 In_PositionWS16_g174820 = Out_PositionWS15_g174819;
				float3 In_PositionWO16_g174820 = Out_PositionWO15_g174819;
				float3 In_PositionRawOS16_g174820 = Out_PositionRawOS15_g174819;
				float3 In_PositionAddOS16_g174820 = temp_output_1567_31_g174818;
				float3 In_PivotOS16_g174820 = Out_PivotOS15_g174819;
				float3 In_PivotWS16_g174820 = Out_PivotWS15_g174819;
				float3 In_PivotWO16_g174820 = Out_PivotWO15_g174819;
				float3 In_NormalOS16_g174820 = Out_NormalOS15_g174819;
				float3 In_NormalWS16_g174820 = Out_NormalWS15_g174819;
				float3 In_NormalRawOS16_g174820 = Out_NormalRawOS15_g174819;
				float3 In_NormalRawWS16_g174820 = Out_NormalRawWS15_g174819;
				float4 In_TangentOS16_g174820 = Out_TangentOS15_g174819;
				float3 In_ViewDirWS16_g174820 = Out_ViewDirWS15_g174819;
				float4 In_VertexData16_g174820 = Out_VertexData15_g174819;
				float4 In_MotionData16_g174820 = Out_MotionData15_g174819;
				float4 In_BoundsData16_g174820 = Out_BoundsData15_g174819;
				float4 In_RotationData16_g174820 = temp_output_1567_33_g174818;
				Data16_g174820.Dummy = In_Dummy16_g174820;
				Data16_g174820.PositionOS = In_PositionOS16_g174820;
				Data16_g174820.PositionWS = In_PositionWS16_g174820;
				Data16_g174820.PositionWO = In_PositionWO16_g174820;
				Data16_g174820.PositionRawOS = In_PositionRawOS16_g174820;
				Data16_g174820.PositionAddOS = In_PositionAddOS16_g174820;
				Data16_g174820.PivotOS = In_PivotOS16_g174820;
				Data16_g174820.PivotWS = In_PivotWS16_g174820;
				Data16_g174820.PivotWO = In_PivotWO16_g174820;
				Data16_g174820.NormalOS = In_NormalOS16_g174820;
				Data16_g174820.NormalWS = In_NormalWS16_g174820;
				Data16_g174820.NormalRawOS = In_NormalRawOS16_g174820;
				Data16_g174820.NormalRawWS = In_NormalRawWS16_g174820;
				Data16_g174820.TangentOS = In_TangentOS16_g174820;
				Data16_g174820.ViewDirWS = In_ViewDirWS16_g174820;
				Data16_g174820.VertexData = In_VertexData16_g174820;
				Data16_g174820.MotionData = In_MotionData16_g174820;
				Data16_g174820.BoundsData = In_BoundsData16_g174820;
				Data16_g174820.RotationData = In_RotationData16_g174820;
				TVEModelData Data15_g174842 = Data16_g174820;
				float Out_Dummy15_g174842 = 0;
				float3 Out_PositionOS15_g174842 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174842 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174842 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174842 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174842 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174842 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174842 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174842 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174842 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174842 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174842 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174842 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174842 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174842 = float3( 0,0,0 );
				float4 Out_VertexData15_g174842 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174842 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174842 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174842 = float4( 0,0,0,0 );
				Out_Dummy15_g174842 = Data15_g174842.Dummy;
				Out_PositionOS15_g174842 = Data15_g174842.PositionOS;
				Out_PositionWS15_g174842 = Data15_g174842.PositionWS;
				Out_PositionWO15_g174842 = Data15_g174842.PositionWO;
				Out_PositionRawOS15_g174842 = Data15_g174842.PositionRawOS;
				Out_PositionAddOS15_g174842 = Data15_g174842.PositionAddOS;
				Out_PivotOS15_g174842 = Data15_g174842.PivotOS;
				Out_PivotWS15_g174842 = Data15_g174842.PivotWS;
				Out_PivotWO15_g174842 = Data15_g174842.PivotWO;
				Out_NormalOS15_g174842 = Data15_g174842.NormalOS;
				Out_NormalWS15_g174842 = Data15_g174842.NormalWS;
				Out_NormalRawOS15_g174842 = Data15_g174842.NormalRawOS;
				Out_NormalRawWS15_g174842 = Data15_g174842.NormalRawWS;
				Out_TangentOS15_g174842 = Data15_g174842.TangentOS;
				Out_ViewDirWS15_g174842 = Data15_g174842.ViewDirWS;
				Out_VertexData15_g174842 = Data15_g174842.VertexData;
				Out_MotionData15_g174842 = Data15_g174842.MotionData;
				Out_BoundsData15_g174842 = Data15_g174842.BoundsData;
				Out_RotationData15_g174842 = Data15_g174842.RotationData;
				float3 In_PositionOS16_g174843 = Out_PositionOS15_g174842;
				float3 In_PositionWS16_g174843 = Out_PositionWS15_g174842;
				float3 temp_output_1567_17_g174841 = Out_PositionWO15_g174842;
				float3 In_PositionWO16_g174843 = temp_output_1567_17_g174841;
				float3 temp_output_1567_26_g174841 = Out_PositionRawOS15_g174842;
				float3 In_PositionRawOS16_g174843 = temp_output_1567_26_g174841;
				float3 In_PositionAddOS16_g174843 = Out_PositionAddOS15_g174842;
				float3 In_PivotOS16_g174843 = Out_PivotOS15_g174842;
				float3 In_PivotWS16_g174843 = Out_PivotWS15_g174842;
				float3 In_PivotWO16_g174843 = Out_PivotWO15_g174842;
				half3 Model_NormalOS1568_g174841 = Out_NormalOS15_g174842;
				float3 lerpResult1589_g174841 = lerp( Model_NormalOS1568_g174841 , half3(0,1,0) , _NormalFlattenValue);
				half3 Model_PositionRAW1592_g174841 = temp_output_1567_26_g174841;
				float3 normalizeResult1594_g174841 = ASESafeNormalize( ( Model_PositionRAW1592_g174841 + _NormalSphereOffsetValue ) );
				float3 lerpResult1585_g174841 = lerp( lerpResult1589_g174841 , normalizeResult1594_g174841 , _NormalSphereValue);
				half3 Input_False58_g174856 = lerpResult1585_g174841;
				half3 VertexPos40_g174845 = lerpResult1585_g174841;
				half3 VertexPos40_g174846 = VertexPos40_g174845;
				float3 appendResult74_g174846 = (float3(VertexPos40_g174846.x , 0.0 , 0.0));
				half3 VertexPosRotationAxis50_g174846 = appendResult74_g174846;
				float3 break84_g174846 = VertexPos40_g174846;
				float3 appendResult81_g174846 = (float3(0.0 , break84_g174846.y , break84_g174846.z));
				half3 VertexPosOtherAxis82_g174846 = appendResult81_g174846;
				float4 temp_output_1567_33_g174841 = Out_RotationData15_g174842;
				half4 Model_RotationData1583_g174841 = temp_output_1567_33_g174841;
				half2 Angle44_g174845 = Model_RotationData1583_g174841.xy;
				half Angle44_g174846 = (Angle44_g174845).y;
				half3 VertexPos40_g174847 = ( VertexPosRotationAxis50_g174846 + ( VertexPosOtherAxis82_g174846 * cos( Angle44_g174846 ) ) + ( cross( float3(1,0,0) , VertexPosOtherAxis82_g174846 ) * sin( Angle44_g174846 ) ) );
				float3 appendResult74_g174847 = (float3(0.0 , 0.0 , VertexPos40_g174847.z));
				half3 VertexPosRotationAxis50_g174847 = appendResult74_g174847;
				float3 break84_g174847 = VertexPos40_g174847;
				float3 appendResult81_g174847 = (float3(break84_g174847.x , break84_g174847.y , 0.0));
				half3 VertexPosOtherAxis82_g174847 = appendResult81_g174847;
				half Angle44_g174847 = -(Angle44_g174845).x;
				float3 lerpResult1591_g174841 = lerp( lerpResult1585_g174841 , ( VertexPosRotationAxis50_g174847 + ( VertexPosOtherAxis82_g174847 * cos( Angle44_g174847 ) ) + ( cross( float3(0,0,1) , VertexPosOtherAxis82_g174847 ) * sin( Angle44_g174847 ) ) ) , _NormalComputeValue);
				half3 Input_True57_g174856 = lerpResult1591_g174841;
				#ifdef TVE_MOTION_BASE_BENDING
				float3 staticSwitch65_g174856 = Input_True57_g174856;
				#else
				float3 staticSwitch65_g174856 = Input_False58_g174856;
				#endif
				#ifdef TVE_MOTION_PUSH_BENDING
				float3 staticSwitch67_g174856 = Input_True57_g174856;
				#else
				float3 staticSwitch67_g174856 = staticSwitch65_g174856;
				#endif
				#ifdef TVE_BLANKET_BENDING
				float3 staticSwitch69_g174856 = Input_True57_g174856;
				#else
				float3 staticSwitch69_g174856 = staticSwitch67_g174856;
				#endif
				#ifdef TVE_NORMAL_COMPUTE
				float3 staticSwitch1595_g174841 = staticSwitch69_g174856;
				#else
				float3 staticSwitch1595_g174841 = lerpResult1585_g174841;
				#endif
				TVEGlobalData Data15_g174844 = Data204_g173897;
				float Out_Dummy15_g174844 = 0;
				float4 Out_CoatParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174844 = float4( 0,0,0,0 );
				Out_Dummy15_g174844 = Data15_g174844.Dummy;
				Out_CoatParams15_g174844 = Data15_g174844.CoatParams;
				Out_PaintParams15_g174844 = Data15_g174844.PaintParams;
				Out_GlowParams15_g174844 = Data15_g174844.GlowParams;
				Out_AtmoParams15_g174844= Data15_g174844.AtmoParams;
				Out_FadeParams15_g174844= Data15_g174844.FadeParams;
				Out_FormParams15_g174844 = Data15_g174844.FormParams;
				Out_LandParams15_g174844 = Data15_g174844.LandParams;
				Out_WindParams15_g174844 = Data15_g174844.WindParams;
				Out_PushParams15_g174844 = Data15_g174844.PushParams;
				half4 Global_FormParams1633_g174841 = Out_FormParams15_g174844;
				float2 temp_output_1627_0_g174841 = ((Global_FormParams1633_g174841).xy*2.0 + -1.0);
				float2 break1617_g174841 = temp_output_1627_0_g174841;
				float dotResult1619_g174841 = dot( temp_output_1627_0_g174841 , temp_output_1627_0_g174841 );
				float3 appendResult1618_g174841 = (float3(break1617_g174841.x , sqrt( ( 1.0 - saturate( dotResult1619_g174841 ) ) ) , break1617_g174841.y));
				float3 worldToObjDir1623_g174841 = ASESafeNormalize( mul( unity_WorldToObject, float4( appendResult1618_g174841, 0 ) ).xyz );
				half3 Blanket_Normal1630_g174841 = worldToObjDir1623_g174841;
				float3 lerpResult1636_g174841 = lerp( staticSwitch1595_g174841 , Blanket_Normal1630_g174841 , ( _NormalBlanketValue * TVE_IsEnabled ));
				float4 temp_output_1567_29_g174841 = Out_VertexData15_g174842;
				half4 Model_VertexData1608_g174841 = temp_output_1567_29_g174841;
				float4 break1683_g174841 = Model_VertexData1608_g174841;
				float4 break33_g174849 = _normal_vert_mode;
				float temp_output_30_0_g174849 = ( break1683_g174841.x * break33_g174849.x );
				float temp_output_29_0_g174849 = ( break1683_g174841.y * break33_g174849.y );
				float temp_output_31_0_g174849 = ( break1683_g174841.z * break33_g174849.z );
				float temp_output_28_0_g174849 = ( temp_output_30_0_g174849 + temp_output_29_0_g174849 + temp_output_31_0_g174849 + ( break1683_g174841.w * break33_g174849.w ) );
				float clampResult17_g174851 = clamp( temp_output_28_0_g174849 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174850 = _NormalMeshRemap.x;
				float temp_output_10_0_g174850 = ( _NormalMeshRemap.y - temp_output_7_0_g174850 );
				float lerpResult1695_g174841 = lerp( 1.0 , saturate( ( ( clampResult17_g174851 - temp_output_7_0_g174850 ) / ( temp_output_10_0_g174850 + 0.0001 ) ) ) , _NormalMeshValue);
				float temp_output_6_0_g174852 = lerpResult1695_g174841;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174852 = ( temp_output_6_0_g174852 + ( _NormalMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174852 = temp_output_6_0_g174852;
				#endif
				float temp_output_1690_0_g174841 = staticSwitch14_g174852;
				half Normal_MeskMask1691_g174841 = temp_output_1690_0_g174841;
				float3 temp_output_1567_21_g174841 = Out_NormalWS15_g174842;
				half3 Model_NormalWS1639_g174841 = temp_output_1567_21_g174841;
				float clampResult17_g174853 = clamp( (Model_NormalWS1639_g174841).y , 0.0001 , 0.9999 );
				float temp_output_7_0_g174854 = _NormalProjRemap.x;
				float temp_output_10_0_g174854 = ( _NormalProjRemap.y - temp_output_7_0_g174854 );
				float lerpResult1669_g174841 = lerp( 1.0 , saturate( ( ( clampResult17_g174853 - temp_output_7_0_g174854 ) / ( temp_output_10_0_g174854 + 0.0001 ) ) ) , _NormalProjValue);
				half Normal_Proj_Mask1647_g174841 = lerpResult1669_g174841;
				float temp_output_1699_0_g174841 = ( Normal_MeskMask1691_g174841 * Normal_Proj_Mask1647_g174841 );
				half3 Model_PositionWO1640_g174841 = temp_output_1567_17_g174841;
				float temp_output_1704_0_g174841 = saturate( ( ( (Global_FormParams1633_g174841).z - (Model_PositionWO1640_g174841).y ) + _NormalLandOffsetValue ) );
				float lerpResult1707_g174841 = lerp( 1.0 , temp_output_1704_0_g174841 , ( _NormalLandValue * _NormalLandMode ));
				half Normal_Land_Mask_Mul1708_g174841 = lerpResult1707_g174841;
				half Normal_Land_Mask_Add1629_g174841 = ( temp_output_1704_0_g174841 * _NormalLandValue );
				float temp_output_6_0_g174855 = saturate( ( ( temp_output_1699_0_g174841 * Normal_Land_Mask_Mul1708_g174841 ) + Normal_Land_Mask_Add1629_g174841 ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174855 = ( temp_output_6_0_g174855 + ( _NormalBlanketInfo * 0.0 ) );
				#else
				float staticSwitch14_g174855 = temp_output_6_0_g174855;
				#endif
				float3 lerpResult1670_g174841 = lerp( Model_NormalOS1568_g174841 , lerpResult1636_g174841 , staticSwitch14_g174855);
				half3 Final_NormalOS178_g174841 = lerpResult1670_g174841;
				float3 In_NormalOS16_g174843 = Final_NormalOS178_g174841;
				float3 In_NormalWS16_g174843 = temp_output_1567_21_g174841;
				float3 In_NormalRawOS16_g174843 = Out_NormalRawOS15_g174842;
				float3 In_NormalRawWS16_g174843 = Out_NormalRawWS15_g174842;
				float4 In_TangentOS16_g174843 = Out_TangentOS15_g174842;
				float3 In_ViewDirWS16_g174843 = Out_ViewDirWS15_g174842;
				float4 In_VertexData16_g174843 = temp_output_1567_29_g174841;
				float4 In_MotionData16_g174843 = Out_MotionData15_g174842;
				float4 In_BoundsData16_g174843 = Out_BoundsData15_g174842;
				float4 In_RotationData16_g174843 = temp_output_1567_33_g174841;
				Data16_g174843.Dummy = In_Dummy16_g174843;
				Data16_g174843.PositionOS = In_PositionOS16_g174843;
				Data16_g174843.PositionWS = In_PositionWS16_g174843;
				Data16_g174843.PositionWO = In_PositionWO16_g174843;
				Data16_g174843.PositionRawOS = In_PositionRawOS16_g174843;
				Data16_g174843.PositionAddOS = In_PositionAddOS16_g174843;
				Data16_g174843.PivotOS = In_PivotOS16_g174843;
				Data16_g174843.PivotWS = In_PivotWS16_g174843;
				Data16_g174843.PivotWO = In_PivotWO16_g174843;
				Data16_g174843.NormalOS = In_NormalOS16_g174843;
				Data16_g174843.NormalWS = In_NormalWS16_g174843;
				Data16_g174843.NormalRawOS = In_NormalRawOS16_g174843;
				Data16_g174843.NormalRawWS = In_NormalRawWS16_g174843;
				Data16_g174843.TangentOS = In_TangentOS16_g174843;
				Data16_g174843.ViewDirWS = In_ViewDirWS16_g174843;
				Data16_g174843.VertexData = In_VertexData16_g174843;
				Data16_g174843.MotionData = In_MotionData16_g174843;
				Data16_g174843.BoundsData = In_BoundsData16_g174843;
				Data16_g174843.RotationData = In_RotationData16_g174843;
				TVEModelData Data15_g174865 = Data16_g174843;
				float Out_Dummy15_g174865 = 0;
				float3 Out_PositionOS15_g174865 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174865 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174865 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174865 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174865 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174865 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174865 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174865 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174865 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174865 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174865 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174865 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174865 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174865 = float3( 0,0,0 );
				float4 Out_VertexData15_g174865 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174865 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174865 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174865 = float4( 0,0,0,0 );
				Out_Dummy15_g174865 = Data15_g174865.Dummy;
				Out_PositionOS15_g174865 = Data15_g174865.PositionOS;
				Out_PositionWS15_g174865 = Data15_g174865.PositionWS;
				Out_PositionWO15_g174865 = Data15_g174865.PositionWO;
				Out_PositionRawOS15_g174865 = Data15_g174865.PositionRawOS;
				Out_PositionAddOS15_g174865 = Data15_g174865.PositionAddOS;
				Out_PivotOS15_g174865 = Data15_g174865.PivotOS;
				Out_PivotWS15_g174865 = Data15_g174865.PivotWS;
				Out_PivotWO15_g174865 = Data15_g174865.PivotWO;
				Out_NormalOS15_g174865 = Data15_g174865.NormalOS;
				Out_NormalWS15_g174865 = Data15_g174865.NormalWS;
				Out_NormalRawOS15_g174865 = Data15_g174865.NormalRawOS;
				Out_NormalRawWS15_g174865 = Data15_g174865.NormalRawWS;
				Out_TangentOS15_g174865 = Data15_g174865.TangentOS;
				Out_ViewDirWS15_g174865 = Data15_g174865.ViewDirWS;
				Out_VertexData15_g174865 = Data15_g174865.VertexData;
				Out_MotionData15_g174865 = Data15_g174865.MotionData;
				Out_BoundsData15_g174865 = Data15_g174865.BoundsData;
				Out_RotationData15_g174865 = Data15_g174865.RotationData;
				float3 temp_output_217_24_g174864 = Out_PivotOS15_g174865;
				float3 In_PositionOS16_g174866 = ( Out_PositionOS15_g174865 + temp_output_217_24_g174864 );
				float3 In_PositionWS16_g174866 = Out_PositionWS15_g174865;
				float3 In_PositionWO16_g174866 = Out_PositionWO15_g174865;
				float3 In_PositionRawOS16_g174866 = Out_PositionRawOS15_g174865;
				float3 In_PositionAddOS16_g174866 = Out_PositionAddOS15_g174865;
				float3 In_PivotOS16_g174866 = temp_output_217_24_g174864;
				float3 In_PivotWS16_g174866 = Out_PivotWS15_g174865;
				float3 In_PivotWO16_g174866 = Out_PivotWO15_g174865;
				float3 In_NormalOS16_g174866 = Out_NormalOS15_g174865;
				float3 In_NormalWS16_g174866 = Out_NormalWS15_g174865;
				float3 In_NormalRawOS16_g174866 = Out_NormalRawOS15_g174865;
				float3 In_NormalRawWS16_g174866 = Out_NormalRawWS15_g174865;
				float4 In_TangentOS16_g174866 = Out_TangentOS15_g174865;
				float3 In_ViewDirWS16_g174866 = Out_ViewDirWS15_g174865;
				float4 In_VertexData16_g174866 = Out_VertexData15_g174865;
				float4 In_MotionData16_g174866 = Out_MotionData15_g174865;
				float4 In_BoundsData16_g174866 = Out_BoundsData15_g174865;
				float4 In_RotationData16_g174866 = Out_RotationData15_g174865;
				Data16_g174866.Dummy = In_Dummy16_g174866;
				Data16_g174866.PositionOS = In_PositionOS16_g174866;
				Data16_g174866.PositionWS = In_PositionWS16_g174866;
				Data16_g174866.PositionWO = In_PositionWO16_g174866;
				Data16_g174866.PositionRawOS = In_PositionRawOS16_g174866;
				Data16_g174866.PositionAddOS = In_PositionAddOS16_g174866;
				Data16_g174866.PivotOS = In_PivotOS16_g174866;
				Data16_g174866.PivotWS = In_PivotWS16_g174866;
				Data16_g174866.PivotWO = In_PivotWO16_g174866;
				Data16_g174866.NormalOS = In_NormalOS16_g174866;
				Data16_g174866.NormalWS = In_NormalWS16_g174866;
				Data16_g174866.NormalRawOS = In_NormalRawOS16_g174866;
				Data16_g174866.NormalRawWS = In_NormalRawWS16_g174866;
				Data16_g174866.TangentOS = In_TangentOS16_g174866;
				Data16_g174866.ViewDirWS = In_ViewDirWS16_g174866;
				Data16_g174866.VertexData = In_VertexData16_g174866;
				Data16_g174866.MotionData = In_MotionData16_g174866;
				Data16_g174866.BoundsData = In_BoundsData16_g174866;
				Data16_g174866.RotationData = In_RotationData16_g174866;
				TVEModelData Data15_g174871 = Data16_g174866;
				float Out_Dummy15_g174871 = 0;
				float3 Out_PositionOS15_g174871 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174871 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174871 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174871 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174871 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174871 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174871 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174871 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174871 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174871 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174871 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174871 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174871 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174871 = float3( 0,0,0 );
				float4 Out_VertexData15_g174871 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174871 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174871 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174871 = float4( 0,0,0,0 );
				Out_Dummy15_g174871 = Data15_g174871.Dummy;
				Out_PositionOS15_g174871 = Data15_g174871.PositionOS;
				Out_PositionWS15_g174871 = Data15_g174871.PositionWS;
				Out_PositionWO15_g174871 = Data15_g174871.PositionWO;
				Out_PositionRawOS15_g174871 = Data15_g174871.PositionRawOS;
				Out_PositionAddOS15_g174871 = Data15_g174871.PositionAddOS;
				Out_PivotOS15_g174871 = Data15_g174871.PivotOS;
				Out_PivotWS15_g174871 = Data15_g174871.PivotWS;
				Out_PivotWO15_g174871 = Data15_g174871.PivotWO;
				Out_NormalOS15_g174871 = Data15_g174871.NormalOS;
				Out_NormalWS15_g174871 = Data15_g174871.NormalWS;
				Out_NormalRawOS15_g174871 = Data15_g174871.NormalRawOS;
				Out_NormalRawWS15_g174871 = Data15_g174871.NormalRawWS;
				Out_TangentOS15_g174871 = Data15_g174871.TangentOS;
				Out_ViewDirWS15_g174871 = Data15_g174871.ViewDirWS;
				Out_VertexData15_g174871 = Data15_g174871.VertexData;
				Out_MotionData15_g174871 = Data15_g174871.MotionData;
				Out_BoundsData15_g174871 = Data15_g174871.BoundsData;
				Out_RotationData15_g174871 = Data15_g174871.RotationData;
				float3 temp_output_31_0_g174868 = Out_PositionOS15_g174871;
				
				o.ase_texcoord11.xyz = vertexToFrag73_g164551;
				o.ase_texcoord12.xyz = vertexToFrag76_g164551;
				float temp_output_6_0_g174597 = ( _MotionHighlightValue * Motion_FadeMask1820_g174563 * ( Base_Mask217_g174563 * Base_Mask217_g174563 ) * ( Wave_Noise1475_g174563 * Wave_Noise1475_g174563 * Wave_Noise1475_g174563 * Wave_Noise1475_g174563 ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174597 = ( temp_output_6_0_g174597 + ( _MotionHighlightColor.r * 0.0 ) );
				#else
				float staticSwitch14_g174597 = temp_output_6_0_g174597;
				#endif
				half Wave_Mask1000 = staticSwitch14_g174597;
				float4 appendResult23_g174669 = (float4(0.0 , 0.0 , 0.0 , Wave_Mask1000));
				float4 vertexToFrag24_g174669 = appendResult23_g174669;
				o.ase_texcoord13 = vertexToFrag24_g174669;
				
				o.ase_texcoord9 = v.ase_texcoord;
				o.ase_texcoord10.xy = v.texcoord2.xyzw.xy;
				o.ase_color = v.ase_color;
				
				//setting value to unused interpolator channels and avoid initialization warnings
				o.ase_texcoord10.zw = 0;
				o.ase_texcoord11.w = 0;
				o.ase_texcoord12.w = 0;
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					float3 defaultVertexValue = v.vertex.xyz;
				#else
					float3 defaultVertexValue = float3(0, 0, 0);
				#endif
				float3 vertexValue = ( temp_output_31_0_g174868 + _DisableSRPBatcher );
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					v.vertex.xyz = vertexValue;
				#else
					v.vertex.xyz += vertexValue;
				#endif
				v.vertex.w = 1;
				v.normal = Out_NormalOS15_g174871;
				v.tangent = Out_TangentOS15_g174871;

				o.pos = UnityObjectToClipPos(v.vertex);
				float3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;
				fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);
				fixed3 worldTangent = UnityObjectToWorldDir(v.tangent.xyz);
				fixed tangentSign = v.tangent.w * unity_WorldTransformParams.w;
				fixed3 worldBinormal = cross(worldNormal, worldTangent) * tangentSign;
				o.tSpace0 = float4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);
				o.tSpace1 = float4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);
				o.tSpace2 = float4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);

				#if UNITY_VERSION >= 201810 && defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					UNITY_TRANSFER_LIGHTING(o, v.texcoord1.xy);
				#elif defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					#if UNITY_VERSION >= 201710
						UNITY_TRANSFER_SHADOW(o, v.texcoord1.xy);
					#else
						TRANSFER_SHADOW(o);
					#endif
				#endif

				#ifdef ASE_FOG
					UNITY_TRANSFER_FOG(o,o.pos);
				#endif
				#if defined(ASE_NEEDS_FRAG_SCREEN_POSITION)
					o.screenPos = ComputeScreenPos(o.pos);
				#endif
				return o;
			}

			#if defined(ASE_TESSELLATION)
			struct VertexControl
			{
				float4 vertex : INTERNALTESSPOS;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;

				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct TessellationFactors
			{
				float edge[3] : SV_TessFactor;
				float inside : SV_InsideTessFactor;
			};

			VertexControl vert ( appdata v )
			{
				VertexControl o;
				UNITY_SETUP_INSTANCE_ID(v);
				UNITY_TRANSFER_INSTANCE_ID(v, o);
				o.vertex = v.vertex;
				o.tangent = v.tangent;
				o.normal = v.normal;
				o.texcoord1 = v.texcoord1;
				o.texcoord2 = v.texcoord2;
				o.ase_texcoord3 = v.ase_texcoord3;
				o.ase_color = v.ase_color;
				o.ase_texcoord = v.ase_texcoord;
				return o;
			}

			TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
			{
				TessellationFactors o;
				float4 tf = 1;
				float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
				float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
				#if defined(ASE_FIXED_TESSELLATION)
				tf = FixedTess( tessValue );
				#elif defined(ASE_DISTANCE_TESSELLATION)
				tf = DistanceBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, tessValue, tessMin, tessMax, UNITY_MATRIX_M, _WorldSpaceCameraPos );
				#elif defined(ASE_LENGTH_TESSELLATION)
				tf = EdgeLengthBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams );
				#elif defined(ASE_LENGTH_CULL_TESSELLATION)
				tf = EdgeLengthBasedTessCull(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, tessMaxDisp, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams, unity_CameraWorldClipPlanes );
				#endif
				o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
				return o;
			}

			[domain("tri")]
			[partitioning("fractional_odd")]
			[outputtopology("triangle_cw")]
			[patchconstantfunc("TessellationFunction")]
			[outputcontrolpoints(3)]
			VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
			{
			   return patch[id];
			}

			[domain("tri")]
			v2f DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
			{
				appdata o = (appdata) 0;
				o.vertex = patch[0].vertex * bary.x + patch[1].vertex * bary.y + patch[2].vertex * bary.z;
				o.tangent = patch[0].tangent * bary.x + patch[1].tangent * bary.y + patch[2].tangent * bary.z;
				o.normal = patch[0].normal * bary.x + patch[1].normal * bary.y + patch[2].normal * bary.z;
				o.texcoord1 = patch[0].texcoord1 * bary.x + patch[1].texcoord1 * bary.y + patch[2].texcoord1 * bary.z;
				o.texcoord2 = patch[0].texcoord2 * bary.x + patch[1].texcoord2 * bary.y + patch[2].texcoord2 * bary.z;
				o.ase_texcoord3 = patch[0].ase_texcoord3 * bary.x + patch[1].ase_texcoord3 * bary.y + patch[2].ase_texcoord3 * bary.z;
				o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
				o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
				#if defined(ASE_PHONG_TESSELLATION)
				float3 pp[3];
				for (int i = 0; i < 3; ++i)
					pp[i] = o.vertex.xyz - patch[i].normal * (dot(o.vertex.xyz, patch[i].normal) - dot(patch[i].vertex.xyz, patch[i].normal));
				float phongStrength = _TessPhongStrength;
				o.vertex.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.vertex.xyz;
				#endif
				UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
				return VertexFunction(o);
			}
			#else
			v2f vert ( appdata v )
			{
				return VertexFunction( v );
			}
			#endif

			fixed4 frag ( v2f IN , bool ase_vface : SV_IsFrontFace
				#ifdef _DEPTHOFFSET_ON
				, out float outputDepth : SV_Depth
				#endif
				) : SV_Target
			{
				UNITY_SETUP_INSTANCE_ID(IN);

				#ifdef LOD_FADE_CROSSFADE
					UNITY_APPLY_DITHER_CROSSFADE(IN.pos.xy);
				#endif

				#if defined(ASE_LIGHTING_SIMPLE)
					SurfaceOutput o = (SurfaceOutput)0;
				#else
					#if defined(_SPECULAR_SETUP)
						SurfaceOutputStandardSpecular o = (SurfaceOutputStandardSpecular)0;
					#else
						SurfaceOutputStandard o = (SurfaceOutputStandard)0;
					#endif
				#endif

				float3 WorldTangent = float3(IN.tSpace0.x,IN.tSpace1.x,IN.tSpace2.x);
				float3 WorldBiTangent = float3(IN.tSpace0.y,IN.tSpace1.y,IN.tSpace2.y);
				float3 WorldNormal = float3(IN.tSpace0.z,IN.tSpace1.z,IN.tSpace2.z);
				float3 worldPos = float3(IN.tSpace0.w,IN.tSpace1.w,IN.tSpace2.w);
				float3 worldViewDir = normalize(UnityWorldSpaceViewDir(worldPos));
				#if defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					UNITY_LIGHT_ATTENUATION(atten, IN, worldPos)
				#else
					half atten = 1;
				#endif
				#if defined(ASE_NEEDS_FRAG_SCREEN_POSITION)
				float4 ScreenPos = IN.screenPos;
				#endif


				float localBreakData4_g174874 = ( 0.0 );
				float localCompData3_g174859 = ( 0.0 );
				TVEVisualData Data3_g174859 = (TVEVisualData)0;
				half Dummy145_g174857 = ( _SubsurfaceCategory + _SubsurfaceEnd + ( _SubsurfaceDirectValue + _SubsurfaceNormalValue + _SubsurfaceAmbientValue + _SubsurfaceShadowValue ) + _SubsurfaceElementMode );
				float In_Dummy3_g174859 = Dummy145_g174857;
				float localBreakData4_g174858 = ( 0.0 );
				float localCompData3_g174836 = ( 0.0 );
				TVEVisualData Data3_g174836 = (TVEVisualData)0;
				half Dummy145_g174826 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveElementMode + _EmissiveFlagMode );
				float In_Dummy3_g174836 = Dummy145_g174826;
				float localBreakData4_g174835 = ( 0.0 );
				float localCompData3_g174808 = ( 0.0 );
				TVEVisualData Data3_g174808 = (TVEVisualData)0;
				half Dummy594_g174805 = ( _DitherCategory + _DitherEnd );
				float In_Dummy3_g174808 = Dummy594_g174805;
				float localBreakData4_g174807 = ( 0.0 );
				float localCompData3_g174786 = ( 0.0 );
				TVEVisualData Data3_g174786 = (TVEVisualData)0;
				half Dummy594_g174785 = ( _CutoutCategory + _CutoutEnd + _CutoutElementMode + _CutoutBakeMode );
				float In_Dummy3_g174786 = Dummy594_g174785;
				float localBreakData4_g174796 = ( 0.0 );
				float localCompData3_g174758 = ( 0.0 );
				TVEVisualData Data3_g174758 = (TVEVisualData)0;
				half Dummy594_g174756 = ( _WetnessCategory + _WetnessEnd + _WetnessElementMode + _WetnessBakeMode );
				float In_Dummy3_g174758 = Dummy594_g174756;
				float localBreakData4_g174757 = ( 0.0 );
				float localCompData3_g174723 = ( 0.0 );
				TVEVisualData Data3_g174723 = (TVEVisualData)0;
				half Dummy594_g174720 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayElementMode + _OverlayBakeMode );
				float In_Dummy3_g174723 = Dummy594_g174720;
				float localBreakData4_g174721 = ( 0.0 );
				float localCompData3_g174719 = ( 0.0 );
				TVEVisualData Data3_g174719 = (TVEVisualData)0;
				float In_Dummy3_g174719 = 0.0;
				float localBreakData4_g174718 = ( 0.0 );
				float localCompData3_g174697 = ( 0.0 );
				TVEVisualData Data3_g174697 = (TVEVisualData)0;
				half Dummy205_g174694 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessElementMode + _DrynessBakeMode );
				float In_Dummy3_g174697 = Dummy205_g174694;
				float localBreakData4_g174696 = ( 0.0 );
				float localCompData3_g174691 = ( 0.0 );
				TVEVisualData Data3_g174691 = (TVEVisualData)0;
				half Dummy205_g174670 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeMode );
				float In_Dummy3_g174691 = Dummy205_g174670;
				float localBreakData4_g174692 = ( 0.0 );
				float localCompData3_g174663 = ( 0.0 );
				TVEVisualData Data3_g174663 = (TVEVisualData)0;
				half Dummy220_g174660 = ( _VariationCategory + _VariationEnd );
				float In_Dummy3_g174663 = Dummy220_g174660;
				float localBreakData4_g174662 = ( 0.0 );
				float localCompData3_g174653 = ( 0.0 );
				TVEVisualData Data3_g174653 = (TVEVisualData)0;
				half Dummy220_g174650 = ( _GradientCategory + _GradientEnd + _GradientBakeMode );
				float In_Dummy3_g174653 = Dummy220_g174650;
				float localBreakData4_g174652 = ( 0.0 );
				float localCompData3_g174642 = ( 0.0 );
				TVEVisualData Data3_g174642 = (TVEVisualData)0;
				half Dummy202_g174640 = ( _OcclusionCategory + _OcclusionEnd + _OcclusionBakeMode );
				float In_Dummy3_g174642 = Dummy202_g174640;
				float localBreakData4_g174641 = ( 0.0 );
				float localCompData3_g174429 = ( 0.0 );
				TVEVisualData Data3_g174429 = (TVEVisualData)0;
				half Dummy944_g174425 = ( ( _TerrainCategory + _TerrainEnd ) + _TerrainFormInfo + _ThirdElementMode );
				float In_Dummy3_g174429 = Dummy944_g174425;
				float localBreakData4_g174428 = ( 0.0 );
				float localCompData3_g174403 = ( 0.0 );
				TVEVisualData Data3_g174403 = (TVEVisualData)0;
				half4 Dummy944_g174386 = ( ( _DetailCategory + _DetailEnd ) + ( _ThirdSampleMode + _ThirdCoordMode + _ThirdCoordValue ) + ( _ThirdMaskSampleMode + _ThirdMaskCoordMode + _ThirdMaskCoordValue ) + _ThirdElementMode + _ThirdBakeMode );
				float In_Dummy3_g174403 = Dummy944_g174386.x;
				float localBreakData4_g174402 = ( 0.0 );
				float localCompData3_g174381 = ( 0.0 );
				TVEVisualData Data3_g174381 = (TVEVisualData)0;
				half4 Dummy946_g174348 = ( ( _LayerCategory + _LayerEnd ) + ( _SecondSampleMode + _SecondCoordMode + _SecondCoordValue ) + ( _SecondMaskSampleMode + _SecondMaskCoordMode + _SecondMaskCoordValue ) + _SecondElementMode + _SecondBakeMode );
				float In_Dummy3_g174381 = Dummy946_g174348.x;
				float localBreakData4_g174360 = ( 0.0 );
				float localCompData3_g174158 = ( 0.0 );
				TVEVisualData Data3_g174158 = (TVEVisualData)0;
				half4 Dummy130_g174142 = ( _MainCategory + _MainEnd + ( _MainSampleMode + _MainCoordMode + _MainCoordValue ) + _MainMultiMaskInfo );
				float In_Dummy3_g174158 = Dummy130_g174142.x;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174151) = _MainAlbedoTex;
				float localFilterTexture19_g174154 = ( 0.0 );
				SamplerState SamplerDefault19_g174154 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174154 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174154 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174154 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174154 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174154 = SamplerDefault19_g174154;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174154 = SamplerDefault19_g174154;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174154 = SamplerPoint19_g174154;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174154 = SamplerLow19_g174154;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174154 = SamplerMedium19_g174154;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174154 = SamplerHigh19_g174154;
				#endif
				SamplerState Sampler276_g174151 = SS19_g174154;
				half4 Local_Coords180_g174142 = _main_coord_value;
				float4 temp_output_37_0_g174151 = Local_Coords180_g174142;
				half4 Coords276_g174151 = temp_output_37_0_g174151;
				half2 TexCoord276_g174151 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174151 = SampleMain( Texture276_g174151 , Sampler276_g174151 , Coords276_g174151 , TexCoord276_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174151) = _MainAlbedoTex;
				SamplerState Sampler275_g174151 = SS19_g174154;
				half4 Coords275_g174151 = temp_output_37_0_g174151;
				half2 TexCoord275_g174151 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174151 = SampleExtra( Texture275_g174151 , Sampler275_g174151 , Coords275_g174151 , TexCoord275_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174151) = _MainAlbedoTex;
				SamplerState Sampler238_g174151 = SS19_g174154;
				half4 Coords238_g174151 = temp_output_37_0_g174151;
				TVEModelData Data16_g164566 = (TVEModelData)0;
				float In_Dummy16_g164566 = 0.0;
				float3 vertexToFrag73_g164551 = IN.ase_texcoord11.xyz;
				half3 PositionWS122_g164551 = vertexToFrag73_g164551;
				float3 In_PositionWS16_g164566 = PositionWS122_g164551;
				float3 vertexToFrag76_g164551 = IN.ase_texcoord12.xyz;
				half3 PivotWS121_g164551 = vertexToFrag76_g164551;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g164551 = ( PositionWS122_g164551 - PivotWS121_g164551 );
				#else
				float3 staticSwitch204_g164551 = PositionWS122_g164551;
				#endif
				half3 PositionWO132_g164551 = ( staticSwitch204_g164551 - TVE_WorldOrigin );
				float3 In_PositionWO16_g164566 = PositionWO132_g164551;
				float3 In_PivotWS16_g164566 = PivotWS121_g164551;
				half3 PivotWO133_g164551 = ( PivotWS121_g164551 - TVE_WorldOrigin );
				float3 In_PivotWO16_g164566 = PivotWO133_g164551;
				float3 normalizedWorldNormal = normalize( WorldNormal );
				half3 Normal_WS95_g164551 = normalizedWorldNormal;
				float3 In_NormalWS16_g164566 = Normal_WS95_g164551;
				float3 normalizeResult296_g164551 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g164551 ) );
				half3 ViewDirWS169_g164551 = normalizeResult296_g164551;
				float3 In_ViewDirWS16_g164566 = ViewDirWS169_g164551;
				half4 VertexMasks171_g164551 = IN.ase_color;
				float4 In_VertexData16_g164566 = VertexMasks171_g164551;
				float4 In_BoundsData16_g164566 = float4( 1,1,1,1 );
				Data16_g164566.Dummy = In_Dummy16_g164566;
				Data16_g164566.PositionWS = In_PositionWS16_g164566;
				Data16_g164566.PositionWO = In_PositionWO16_g164566;
				Data16_g164566.PivotWS = In_PivotWS16_g164566;
				Data16_g164566.PivotWO = In_PivotWO16_g164566;
				Data16_g164566.NormalWS = In_NormalWS16_g164566;
				Data16_g164566.ViewDirWS = In_ViewDirWS16_g164566;
				Data16_g164566.VertexData = In_VertexData16_g164566;
				Data16_g164566.BoundsData = In_BoundsData16_g164566;
				TVEModelData Data15_g174157 = Data16_g164566;
				float Out_Dummy15_g174157 = 0;
				float3 Out_PositionWS15_g174157 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174157 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174157 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174157 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174157 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174157 = float3( 0,0,0 );
				float4 Out_VertexData15_g174157 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174157 = float4( 0,0,0,0 );
				Out_Dummy15_g174157 = Data15_g174157.Dummy;
				Out_PositionWS15_g174157 = Data15_g174157.PositionWS;
				Out_PositionWO15_g174157 = Data15_g174157.PositionWO;
				Out_PivotWS15_g174157 = Data15_g174157.PivotWS;
				Out_PivotWO15_g174157 = Data15_g174157.PivotWO;
				Out_NormalWS15_g174157 = Data15_g174157.NormalWS;
				Out_ViewDirWS15_g174157 = Data15_g174157.ViewDirWS;
				Out_VertexData15_g174157 = Data15_g174157.VertexData;
				Out_BoundsData15_g174157 = Data15_g174157.BoundsData;
				half3 Model_PositionWO222_g174142 = Out_PositionWO15_g174157;
				float3 temp_output_279_0_g174151 = Model_PositionWO222_g174142;
				half3 WorldPosition238_g174151 = temp_output_279_0_g174151;
				half4 localSamplePlanar2D238_g174151 = SamplePlanar2D( Texture238_g174151 , Sampler238_g174151 , Coords238_g174151 , WorldPosition238_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174151) = _MainAlbedoTex;
				SamplerState Sampler246_g174151 = SS19_g174154;
				half4 Coords246_g174151 = temp_output_37_0_g174151;
				half3 WorldPosition246_g174151 = temp_output_279_0_g174151;
				half3 Model_NormalWS226_g174142 = Out_NormalWS15_g174157;
				float3 temp_output_280_0_g174151 = Model_NormalWS226_g174142;
				half3 WorldNormal246_g174151 = temp_output_280_0_g174151;
				half4 localSamplePlanar3D246_g174151 = SamplePlanar3D( Texture246_g174151 , Sampler246_g174151 , Coords246_g174151 , WorldPosition246_g174151 , WorldNormal246_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174151) = _MainAlbedoTex;
				SamplerState Sampler234_g174151 = SS19_g174154;
				float4 Coords234_g174151 = temp_output_37_0_g174151;
				float3 WorldPosition234_g174151 = temp_output_279_0_g174151;
				float4 localSampleStochastic2D234_g174151 = SampleStochastic2D( Texture234_g174151 , Sampler234_g174151 , Coords234_g174151 , WorldPosition234_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174151) = _MainAlbedoTex;
				SamplerState Sampler263_g174151 = SS19_g174154;
				half4 Coords263_g174151 = temp_output_37_0_g174151;
				half3 WorldPosition263_g174151 = temp_output_279_0_g174151;
				half3 WorldNormal263_g174151 = temp_output_280_0_g174151;
				half4 localSampleStochastic3D263_g174151 = SampleStochastic3D( Texture263_g174151 , Sampler263_g174151 , Coords263_g174151 , WorldPosition263_g174151 , WorldNormal263_g174151 );
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float4 staticSwitch184_g174142 = localSampleMain276_g174151;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float4 staticSwitch184_g174142 = localSampleExtra275_g174151;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float4 staticSwitch184_g174142 = localSamplePlanar2D238_g174151;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float4 staticSwitch184_g174142 = localSamplePlanar3D246_g174151;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch184_g174142 = localSampleStochastic2D234_g174151;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch184_g174142 = localSampleStochastic3D263_g174151;
				#else
				float4 staticSwitch184_g174142 = localSampleMain276_g174151;
				#endif
				half4 Local_AlbedoTex185_g174142 = staticSwitch184_g174142;
				float3 lerpResult53_g174142 = lerp( float3( 1,1,1 ) , (Local_AlbedoTex185_g174142).xyz , _MainAlbedoValue);
				half3 Local_AlbedoRGB107_g174142 = lerpResult53_g174142;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174153) = _MainShaderTex;
				float localFilterTexture30_g174156 = ( 0.0 );
				SamplerState SamplerDefault30_g174156 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174156 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174156 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174156 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174156 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174156 = SamplerDefault30_g174156;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174156 = SamplerDefault30_g174156;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174156 = SamplerPoint30_g174156;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174156 = SamplerLow30_g174156;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174156 = SamplerMedium30_g174156;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174156 = SamplerHigh30_g174156;
				#endif
				SamplerState Sampler276_g174153 = SS30_g174156;
				float4 temp_output_37_0_g174153 = Local_Coords180_g174142;
				half4 Coords276_g174153 = temp_output_37_0_g174153;
				half2 TexCoord276_g174153 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174153 = SampleMain( Texture276_g174153 , Sampler276_g174153 , Coords276_g174153 , TexCoord276_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174153) = _MainShaderTex;
				SamplerState Sampler275_g174153 = SS30_g174156;
				half4 Coords275_g174153 = temp_output_37_0_g174153;
				half2 TexCoord275_g174153 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174153 = SampleExtra( Texture275_g174153 , Sampler275_g174153 , Coords275_g174153 , TexCoord275_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174153) = _MainShaderTex;
				SamplerState Sampler238_g174153 = SS30_g174156;
				half4 Coords238_g174153 = temp_output_37_0_g174153;
				float3 temp_output_279_0_g174153 = Model_PositionWO222_g174142;
				half3 WorldPosition238_g174153 = temp_output_279_0_g174153;
				half4 localSamplePlanar2D238_g174153 = SamplePlanar2D( Texture238_g174153 , Sampler238_g174153 , Coords238_g174153 , WorldPosition238_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174153) = _MainShaderTex;
				SamplerState Sampler246_g174153 = SS30_g174156;
				half4 Coords246_g174153 = temp_output_37_0_g174153;
				half3 WorldPosition246_g174153 = temp_output_279_0_g174153;
				float3 temp_output_280_0_g174153 = Model_NormalWS226_g174142;
				half3 WorldNormal246_g174153 = temp_output_280_0_g174153;
				half4 localSamplePlanar3D246_g174153 = SamplePlanar3D( Texture246_g174153 , Sampler246_g174153 , Coords246_g174153 , WorldPosition246_g174153 , WorldNormal246_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174153) = _MainShaderTex;
				SamplerState Sampler234_g174153 = SS30_g174156;
				float4 Coords234_g174153 = temp_output_37_0_g174153;
				float3 WorldPosition234_g174153 = temp_output_279_0_g174153;
				float4 localSampleStochastic2D234_g174153 = SampleStochastic2D( Texture234_g174153 , Sampler234_g174153 , Coords234_g174153 , WorldPosition234_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174153) = _MainShaderTex;
				SamplerState Sampler263_g174153 = SS30_g174156;
				half4 Coords263_g174153 = temp_output_37_0_g174153;
				half3 WorldPosition263_g174153 = temp_output_279_0_g174153;
				half3 WorldNormal263_g174153 = temp_output_280_0_g174153;
				half4 localSampleStochastic3D263_g174153 = SampleStochastic3D( Texture263_g174153 , Sampler263_g174153 , Coords263_g174153 , WorldPosition263_g174153 , WorldNormal263_g174153 );
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float4 staticSwitch198_g174142 = localSampleMain276_g174153;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float4 staticSwitch198_g174142 = localSampleExtra275_g174153;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float4 staticSwitch198_g174142 = localSamplePlanar2D238_g174153;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float4 staticSwitch198_g174142 = localSamplePlanar3D246_g174153;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch198_g174142 = localSampleStochastic2D234_g174153;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch198_g174142 = localSampleStochastic3D263_g174153;
				#else
				float4 staticSwitch198_g174142 = localSampleMain276_g174153;
				#endif
				half4 Local_MasksTex199_g174142 = staticSwitch198_g174142;
				float lerpResult23_g174142 = lerp( 1.0 , (Local_MasksTex199_g174142).y , _MainOcclusionValue);
				float4 appendResult73_g174142 = (float4(( (Local_MasksTex199_g174142).x * _MainMetallicValue ) , lerpResult23_g174142 , (Local_MasksTex199_g174142).z , ( (Local_MasksTex199_g174142).w * _MainSmoothnessValue )));
				half4 Local_Masks109_g174142 = appendResult73_g174142;
				float clampResult17_g174147 = clamp( (Local_Masks109_g174142).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174148 = _MainMultiRemap.x;
				float temp_output_10_0_g174148 = ( _MainMultiRemap.y - temp_output_7_0_g174148 );
				half Local_MultiMask78_g174142 = saturate( ( ( clampResult17_g174147 - temp_output_7_0_g174148 ) / ( temp_output_10_0_g174148 + 0.0001 ) ) );
				float lerpResult58_g174142 = lerp( 1.0 , Local_MultiMask78_g174142 , _MainColorMode);
				float4 lerpResult62_g174142 = lerp( _MainColorTwo , _MainColor , lerpResult58_g174142);
				half3 Local_ColorRGB93_g174142 = (lerpResult62_g174142).rgb;
				half3 Local_Albedo139_g174142 = ( Local_AlbedoRGB107_g174142 * Local_ColorRGB93_g174142 );
				float3 In_Albedo3_g174158 = Local_Albedo139_g174142;
				float3 In_AlbedoRaw3_g174158 = Local_Albedo139_g174142;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174152) = _MainNormalTex;
				float localFilterTexture29_g174155 = ( 0.0 );
				SamplerState SamplerDefault29_g174155 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174155 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174155 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174155 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174155 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174155 = SamplerDefault29_g174155;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174155 = SamplerDefault29_g174155;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174155 = SamplerPoint29_g174155;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174155 = SamplerLow29_g174155;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174155 = SamplerMedium29_g174155;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174155 = SamplerHigh29_g174155;
				#endif
				SamplerState Sampler276_g174152 = SS29_g174155;
				float4 temp_output_37_0_g174152 = Local_Coords180_g174142;
				half4 Coords276_g174152 = temp_output_37_0_g174152;
				half2 TexCoord276_g174152 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174152 = SampleMain( Texture276_g174152 , Sampler276_g174152 , Coords276_g174152 , TexCoord276_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174152) = _MainNormalTex;
				SamplerState Sampler275_g174152 = SS29_g174155;
				half4 Coords275_g174152 = temp_output_37_0_g174152;
				half2 TexCoord275_g174152 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174152 = SampleExtra( Texture275_g174152 , Sampler275_g174152 , Coords275_g174152 , TexCoord275_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174152) = _MainNormalTex;
				SamplerState Sampler238_g174152 = SS29_g174155;
				half4 Coords238_g174152 = temp_output_37_0_g174152;
				float3 temp_output_279_0_g174152 = Model_PositionWO222_g174142;
				half3 WorldPosition238_g174152 = temp_output_279_0_g174152;
				half4 localSamplePlanar2D238_g174152 = SamplePlanar2D( Texture238_g174152 , Sampler238_g174152 , Coords238_g174152 , WorldPosition238_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174152) = _MainNormalTex;
				SamplerState Sampler246_g174152 = SS29_g174155;
				half4 Coords246_g174152 = temp_output_37_0_g174152;
				half3 WorldPosition246_g174152 = temp_output_279_0_g174152;
				float3 temp_output_280_0_g174152 = Model_NormalWS226_g174142;
				half3 WorldNormal246_g174152 = temp_output_280_0_g174152;
				half4 localSamplePlanar3D246_g174152 = SamplePlanar3D( Texture246_g174152 , Sampler246_g174152 , Coords246_g174152 , WorldPosition246_g174152 , WorldNormal246_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174152) = _MainNormalTex;
				SamplerState Sampler234_g174152 = SS29_g174155;
				float4 Coords234_g174152 = temp_output_37_0_g174152;
				float3 WorldPosition234_g174152 = temp_output_279_0_g174152;
				float4 localSampleStochastic2D234_g174152 = SampleStochastic2D( Texture234_g174152 , Sampler234_g174152 , Coords234_g174152 , WorldPosition234_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174152) = _MainNormalTex;
				SamplerState Sampler263_g174152 = SS29_g174155;
				half4 Coords263_g174152 = temp_output_37_0_g174152;
				half3 WorldPosition263_g174152 = temp_output_279_0_g174152;
				half3 WorldNormal263_g174152 = temp_output_280_0_g174152;
				half4 localSampleStochastic3D263_g174152 = SampleStochastic3D( Texture263_g174152 , Sampler263_g174152 , Coords263_g174152 , WorldPosition263_g174152 , WorldNormal263_g174152 );
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float4 staticSwitch193_g174142 = localSampleMain276_g174152;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float4 staticSwitch193_g174142 = localSampleExtra275_g174152;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float4 staticSwitch193_g174142 = localSamplePlanar2D238_g174152;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float4 staticSwitch193_g174142 = localSamplePlanar3D246_g174152;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch193_g174142 = localSampleStochastic2D234_g174152;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch193_g174142 = localSampleStochastic3D263_g174152;
				#else
				float4 staticSwitch193_g174142 = localSampleMain276_g174152;
				#endif
				half4 Local_NormaTex191_g174142 = staticSwitch193_g174142;
				half4 Normal_Packed45_g174143 = Local_NormaTex191_g174142;
				float2 appendResult58_g174143 = (float2(( (Normal_Packed45_g174143).x * (Normal_Packed45_g174143).w ) , (Normal_Packed45_g174143).y));
				half2 Normal_Default50_g174143 = appendResult58_g174143;
				half2 Normal_ASTC41_g174143 = (Normal_Packed45_g174143).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174143 = Normal_ASTC41_g174143;
				#else
				float2 staticSwitch38_g174143 = Normal_Default50_g174143;
				#endif
				half2 Normal_NO_DTX544_g174143 = (Normal_Packed45_g174143).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174143 = Normal_NO_DTX544_g174143;
				#else
				float2 staticSwitch37_g174143 = staticSwitch38_g174143;
				#endif
				float2 temp_output_26_0_g174142 = ( (staticSwitch37_g174143*2.0 + -1.0) * _MainNormalValue );
				float3x3 ase_worldToTangent = float3x3(WorldTangent,WorldBiTangent,WorldNormal);
				half2 Normal_Planar45_g174144 = temp_output_26_0_g174142;
				float2 break71_g174144 = Normal_Planar45_g174144;
				float3 appendResult72_g174144 = (float3(break71_g174144.x , 0.0 , break71_g174144.y));
				float2 temp_output_205_0_g174142 = (mul( ase_worldToTangent, appendResult72_g174144 )).xy;
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float2 staticSwitch204_g174142 = temp_output_26_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float2 staticSwitch204_g174142 = temp_output_26_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#else
				float2 staticSwitch204_g174142 = temp_output_26_0_g174142;
				#endif
				half2 Local_NormalTS108_g174142 = staticSwitch204_g174142;
				float2 In_NormalTS3_g174158 = Local_NormalTS108_g174142;
				float3 appendResult68_g174145 = (float3(Local_NormalTS108_g174142 , 1.0));
				float3 tanToWorld0 = float3( WorldTangent.x, WorldBiTangent.x, WorldNormal.x );
				float3 tanToWorld1 = float3( WorldTangent.y, WorldBiTangent.y, WorldNormal.y );
				float3 tanToWorld2 = float3( WorldTangent.z, WorldBiTangent.z, WorldNormal.z );
				float3 tanNormal74_g174145 = appendResult68_g174145;
				float3 worldNormal74_g174145 = normalize( float3(dot(tanToWorld0,tanNormal74_g174145), dot(tanToWorld1,tanNormal74_g174145), dot(tanToWorld2,tanNormal74_g174145)) );
				half3 Local_NormalWS250_g174142 = worldNormal74_g174145;
				float3 In_NormalWS3_g174158 = Local_NormalWS250_g174142;
				float4 In_Shader3_g174158 = Local_Masks109_g174142;
				float4 In_Emissive3_g174158 = half4(1,1,1,1);
				float3 temp_output_3_0_g174146 = Local_Albedo139_g174142;
				float dotResult20_g174146 = dot( temp_output_3_0_g174146 , float3(0.2126,0.7152,0.0722) );
				half Local_Grayscale110_g174142 = dotResult20_g174146;
				float In_Grayscale3_g174158 = Local_Grayscale110_g174142;
				float clampResult144_g174142 = clamp( saturate( ( Local_Grayscale110_g174142 * 5.0 ) ) , 0.2 , 1.0 );
				half Local_Luminosity145_g174142 = clampResult144_g174142;
				float In_Luminosity3_g174158 = Local_Luminosity145_g174142;
				float In_MultiMask3_g174158 = Local_MultiMask78_g174142;
				float temp_output_187_0_g174142 = (Local_AlbedoTex185_g174142).w;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch236_g174142 = ( temp_output_187_0_g174142 - _MainAlphaClipValue );
				#else
				float staticSwitch236_g174142 = temp_output_187_0_g174142;
				#endif
				half Local_AlphaClip111_g174142 = staticSwitch236_g174142;
				float In_AlphaClip3_g174158 = Local_AlphaClip111_g174142;
				half Local_AlphaFade246_g174142 = (lerpResult62_g174142).a;
				float In_AlphaFade3_g174158 = Local_AlphaFade246_g174142;
				float3 temp_cast_4 = (1.0).xxx;
				float3 In_Translucency3_g174158 = temp_cast_4;
				float In_Transmission3_g174158 = 1.0;
				float In_Thickness3_g174158 = 0.0;
				float In_Diffusion3_g174158 = 0.0;
				Data3_g174158.Dummy = In_Dummy3_g174158;
				Data3_g174158.Albedo = In_Albedo3_g174158;
				Data3_g174158.AlbedoRaw = In_AlbedoRaw3_g174158;
				Data3_g174158.NormalTS = In_NormalTS3_g174158;
				Data3_g174158.NormalWS = In_NormalWS3_g174158;
				Data3_g174158.Shader = In_Shader3_g174158;
				Data3_g174158.Emissive= In_Emissive3_g174158;
				Data3_g174158.MultiMask = In_MultiMask3_g174158;
				Data3_g174158.Grayscale = In_Grayscale3_g174158;
				Data3_g174158.Luminosity = In_Luminosity3_g174158;
				Data3_g174158.AlphaClip = In_AlphaClip3_g174158;
				Data3_g174158.AlphaFade = In_AlphaFade3_g174158;
				Data3_g174158.Translucency = In_Translucency3_g174158;
				Data3_g174158.Transmission = In_Transmission3_g174158;
				Data3_g174158.Thickness = In_Thickness3_g174158;
				Data3_g174158.Diffusion = In_Diffusion3_g174158;
				TVEVisualData Data4_g174360 = Data3_g174158;
				float Out_Dummy4_g174360 = 0;
				float3 Out_Albedo4_g174360 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174360 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174360 = float2( 0,0 );
				float3 Out_NormalWS4_g174360 = float3( 0,0,0 );
				float4 Out_Shader4_g174360 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174360 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174360 = 0;
				float Out_Grayscale4_g174360 = 0;
				float Out_Luminosity4_g174360 = 0;
				float Out_AlphaClip4_g174360 = 0;
				float Out_AlphaFade4_g174360 = 0;
				float3 Out_Translucency4_g174360 = float3( 0,0,0 );
				float Out_Transmission4_g174360 = 0;
				float Out_Thickness4_g174360 = 0;
				float Out_Diffusion4_g174360 = 0;
				Out_Dummy4_g174360 = Data4_g174360.Dummy;
				Out_Albedo4_g174360 = Data4_g174360.Albedo;
				Out_AlbedoRaw4_g174360 = Data4_g174360.AlbedoRaw;
				Out_NormalTS4_g174360 = Data4_g174360.NormalTS;
				Out_NormalWS4_g174360 = Data4_g174360.NormalWS;
				Out_Shader4_g174360 = Data4_g174360.Shader;
				Out_Emissive4_g174360= Data4_g174360.Emissive;
				Out_MultiMask4_g174360 = Data4_g174360.MultiMask;
				Out_Grayscale4_g174360 = Data4_g174360.Grayscale;
				Out_Luminosity4_g174360= Data4_g174360.Luminosity;
				Out_AlphaClip4_g174360 = Data4_g174360.AlphaClip;
				Out_AlphaFade4_g174360 = Data4_g174360.AlphaFade;
				Out_Translucency4_g174360 = Data4_g174360.Translucency;
				Out_Transmission4_g174360 = Data4_g174360.Transmission;
				Out_Thickness4_g174360 = Data4_g174360.Thickness;
				Out_Diffusion4_g174360 = Data4_g174360.Diffusion;
				half3 Visual_Albedo527_g174348 = Out_Albedo4_g174360;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174349) = _SecondAlbedoTex;
				float localFilterTexture19_g174377 = ( 0.0 );
				SamplerState SamplerDefault19_g174377 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174377 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174377 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174377 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174377 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174377 = SamplerDefault19_g174377;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174377 = SamplerDefault19_g174377;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174377 = SamplerPoint19_g174377;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174377 = SamplerLow19_g174377;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174377 = SamplerMedium19_g174377;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174377 = SamplerHigh19_g174377;
				#endif
				SamplerState Sampler276_g174349 = SS19_g174377;
				half4 Local_LayerCoords790_g174348 = _second_coord_value;
				float4 temp_output_37_0_g174349 = Local_LayerCoords790_g174348;
				half4 Coords276_g174349 = temp_output_37_0_g174349;
				half2 TexCoord276_g174349 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174349 = SampleMain( Texture276_g174349 , Sampler276_g174349 , Coords276_g174349 , TexCoord276_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174349) = _SecondAlbedoTex;
				SamplerState Sampler275_g174349 = SS19_g174377;
				half4 Coords275_g174349 = temp_output_37_0_g174349;
				half2 TexCoord275_g174349 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174349 = SampleExtra( Texture275_g174349 , Sampler275_g174349 , Coords275_g174349 , TexCoord275_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174349) = _SecondAlbedoTex;
				SamplerState Sampler238_g174349 = SS19_g174377;
				half4 Coords238_g174349 = temp_output_37_0_g174349;
				TVEModelData Data15_g174380 = Data16_g164566;
				float Out_Dummy15_g174380 = 0;
				float3 Out_PositionWS15_g174380 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174380 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174380 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174380 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174380 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174380 = float3( 0,0,0 );
				float4 Out_VertexData15_g174380 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174380 = float4( 0,0,0,0 );
				Out_Dummy15_g174380 = Data15_g174380.Dummy;
				Out_PositionWS15_g174380 = Data15_g174380.PositionWS;
				Out_PositionWO15_g174380 = Data15_g174380.PositionWO;
				Out_PivotWS15_g174380 = Data15_g174380.PivotWS;
				Out_PivotWO15_g174380 = Data15_g174380.PivotWO;
				Out_NormalWS15_g174380 = Data15_g174380.NormalWS;
				Out_ViewDirWS15_g174380 = Data15_g174380.ViewDirWS;
				Out_VertexData15_g174380 = Data15_g174380.VertexData;
				Out_BoundsData15_g174380 = Data15_g174380.BoundsData;
				half3 Model_PositionWO636_g174348 = Out_PositionWO15_g174380;
				float3 temp_output_279_0_g174349 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174349 = temp_output_279_0_g174349;
				half4 localSamplePlanar2D238_g174349 = SamplePlanar2D( Texture238_g174349 , Sampler238_g174349 , Coords238_g174349 , WorldPosition238_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174349) = _SecondAlbedoTex;
				SamplerState Sampler246_g174349 = SS19_g174377;
				half4 Coords246_g174349 = temp_output_37_0_g174349;
				half3 WorldPosition246_g174349 = temp_output_279_0_g174349;
				half3 Model_NormalWS869_g174348 = Out_NormalWS15_g174380;
				float3 temp_output_280_0_g174349 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174349 = temp_output_280_0_g174349;
				half4 localSamplePlanar3D246_g174349 = SamplePlanar3D( Texture246_g174349 , Sampler246_g174349 , Coords246_g174349 , WorldPosition246_g174349 , WorldNormal246_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174349) = _SecondAlbedoTex;
				SamplerState Sampler234_g174349 = SS19_g174377;
				float4 Coords234_g174349 = temp_output_37_0_g174349;
				float3 WorldPosition234_g174349 = temp_output_279_0_g174349;
				float4 localSampleStochastic2D234_g174349 = SampleStochastic2D( Texture234_g174349 , Sampler234_g174349 , Coords234_g174349 , WorldPosition234_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174349) = _SecondAlbedoTex;
				SamplerState Sampler263_g174349 = SS19_g174377;
				half4 Coords263_g174349 = temp_output_37_0_g174349;
				half3 WorldPosition263_g174349 = temp_output_279_0_g174349;
				half3 WorldNormal263_g174349 = temp_output_280_0_g174349;
				half4 localSampleStochastic3D263_g174349 = SampleStochastic3D( Texture263_g174349 , Sampler263_g174349 , Coords263_g174349 , WorldPosition263_g174349 , WorldNormal263_g174349 );
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float4 staticSwitch693_g174348 = localSampleMain276_g174349;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float4 staticSwitch693_g174348 = localSampleExtra275_g174349;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float4 staticSwitch693_g174348 = localSamplePlanar2D238_g174349;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float4 staticSwitch693_g174348 = localSamplePlanar3D246_g174349;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch693_g174348 = localSampleStochastic2D234_g174349;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch693_g174348 = localSampleStochastic3D263_g174349;
				#else
				float4 staticSwitch693_g174348 = localSampleMain276_g174349;
				#endif
				half4 Local_AlbedoTex777_g174348 = staticSwitch693_g174348;
				float3 lerpResult716_g174348 = lerp( float3( 1,1,1 ) , (Local_AlbedoTex777_g174348).xyz , _SecondAlbedoValue);
				half3 Local_AlbedoRGB771_g174348 = lerpResult716_g174348;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174351) = _SecondShaderTex;
				float localFilterTexture30_g174379 = ( 0.0 );
				SamplerState SamplerDefault30_g174379 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174379 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174379 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174379 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174379 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174379 = SamplerDefault30_g174379;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174379 = SamplerDefault30_g174379;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174379 = SamplerPoint30_g174379;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174379 = SamplerLow30_g174379;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174379 = SamplerMedium30_g174379;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174379 = SamplerHigh30_g174379;
				#endif
				SamplerState Sampler276_g174351 = SS30_g174379;
				float4 temp_output_37_0_g174351 = Local_LayerCoords790_g174348;
				half4 Coords276_g174351 = temp_output_37_0_g174351;
				half2 TexCoord276_g174351 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174351 = SampleMain( Texture276_g174351 , Sampler276_g174351 , Coords276_g174351 , TexCoord276_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174351) = _SecondShaderTex;
				SamplerState Sampler275_g174351 = SS30_g174379;
				half4 Coords275_g174351 = temp_output_37_0_g174351;
				half2 TexCoord275_g174351 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174351 = SampleExtra( Texture275_g174351 , Sampler275_g174351 , Coords275_g174351 , TexCoord275_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174351) = _SecondShaderTex;
				SamplerState Sampler238_g174351 = SS30_g174379;
				half4 Coords238_g174351 = temp_output_37_0_g174351;
				float3 temp_output_279_0_g174351 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174351 = temp_output_279_0_g174351;
				half4 localSamplePlanar2D238_g174351 = SamplePlanar2D( Texture238_g174351 , Sampler238_g174351 , Coords238_g174351 , WorldPosition238_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174351) = _SecondShaderTex;
				SamplerState Sampler246_g174351 = SS30_g174379;
				half4 Coords246_g174351 = temp_output_37_0_g174351;
				half3 WorldPosition246_g174351 = temp_output_279_0_g174351;
				float3 temp_output_280_0_g174351 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174351 = temp_output_280_0_g174351;
				half4 localSamplePlanar3D246_g174351 = SamplePlanar3D( Texture246_g174351 , Sampler246_g174351 , Coords246_g174351 , WorldPosition246_g174351 , WorldNormal246_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174351) = _SecondShaderTex;
				SamplerState Sampler234_g174351 = SS30_g174379;
				float4 Coords234_g174351 = temp_output_37_0_g174351;
				float3 WorldPosition234_g174351 = temp_output_279_0_g174351;
				float4 localSampleStochastic2D234_g174351 = SampleStochastic2D( Texture234_g174351 , Sampler234_g174351 , Coords234_g174351 , WorldPosition234_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174351) = _SecondShaderTex;
				SamplerState Sampler263_g174351 = SS30_g174379;
				half4 Coords263_g174351 = temp_output_37_0_g174351;
				half3 WorldPosition263_g174351 = temp_output_279_0_g174351;
				half3 WorldNormal263_g174351 = temp_output_280_0_g174351;
				half4 localSampleStochastic3D263_g174351 = SampleStochastic3D( Texture263_g174351 , Sampler263_g174351 , Coords263_g174351 , WorldPosition263_g174351 , WorldNormal263_g174351 );
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float4 staticSwitch722_g174348 = localSampleMain276_g174351;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float4 staticSwitch722_g174348 = localSampleExtra275_g174351;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float4 staticSwitch722_g174348 = localSamplePlanar2D238_g174351;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float4 staticSwitch722_g174348 = localSamplePlanar3D246_g174351;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch722_g174348 = localSampleStochastic2D234_g174351;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch722_g174348 = localSampleStochastic3D263_g174351;
				#else
				float4 staticSwitch722_g174348 = localSampleMain276_g174351;
				#endif
				half4 Local_ShaderTex775_g174348 = staticSwitch722_g174348;
				float lerpResult739_g174348 = lerp( 1.0 , (Local_ShaderTex775_g174348).y , _SecondOcclusionValue);
				float4 appendResult749_g174348 = (float4(( (Local_ShaderTex775_g174348).x * _SecondMetallicValue ) , lerpResult739_g174348 , (Local_ShaderTex775_g174348).z , ( (Local_ShaderTex775_g174348).w * _SecondSmoothnessValue )));
				half4 Local_Masks750_g174348 = appendResult749_g174348;
				float clampResult17_g174355 = clamp( (Local_Masks750_g174348).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174356 = _SecondMultiRemap.x;
				float temp_output_10_0_g174356 = ( _SecondMultiRemap.y - temp_output_7_0_g174356 );
				float temp_output_765_0_g174348 = saturate( ( ( clampResult17_g174355 - temp_output_7_0_g174356 ) / ( temp_output_10_0_g174356 + 0.0001 ) ) );
				half Local_MultiMask767_g174348 = temp_output_765_0_g174348;
				float lerpResult705_g174348 = lerp( 1.0 , Local_MultiMask767_g174348 , _SecondColorMode);
				float4 lerpResult706_g174348 = lerp( _SecondColorTwo , _SecondColor , lerpResult705_g174348);
				half3 Local_ColorRGB774_g174348 = (lerpResult706_g174348).rgb;
				half3 Local_Albedo768_g174348 = ( Local_AlbedoRGB771_g174348 * Local_ColorRGB774_g174348 );
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174373 = 2.0;
				#else
				float staticSwitch1_g174373 = 4.594794;
				#endif
				float3 lerpResult985_g174348 = lerp( Local_Albedo768_g174348 , ( Visual_Albedo527_g174348 * Local_Albedo768_g174348 * staticSwitch1_g174373 ) , _SecondBlendAlbedoValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174352) = _SecondMaskTex;
				SamplerState Sampler276_g174352 = sampler_Linear_Repeat;
				half4 Local_BlendCoords813_g174348 = _second_mask_coord_value;
				float4 temp_output_37_0_g174352 = Local_BlendCoords813_g174348;
				half4 Coords276_g174352 = temp_output_37_0_g174352;
				half2 TexCoord276_g174352 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174352 = SampleMain( Texture276_g174352 , Sampler276_g174352 , Coords276_g174352 , TexCoord276_g174352 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174352) = _SecondMaskTex;
				SamplerState Sampler275_g174352 = sampler_Linear_Repeat;
				half4 Coords275_g174352 = temp_output_37_0_g174352;
				half2 TexCoord275_g174352 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174352 = SampleExtra( Texture275_g174352 , Sampler275_g174352 , Coords275_g174352 , TexCoord275_g174352 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174352) = _SecondMaskTex;
				SamplerState Sampler238_g174352 = sampler_Linear_Repeat;
				half4 Coords238_g174352 = temp_output_37_0_g174352;
				float3 temp_output_279_0_g174352 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174352 = temp_output_279_0_g174352;
				half4 localSamplePlanar2D238_g174352 = SamplePlanar2D( Texture238_g174352 , Sampler238_g174352 , Coords238_g174352 , WorldPosition238_g174352 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174352) = _SecondMaskTex;
				SamplerState Sampler246_g174352 = sampler_Linear_Repeat;
				half4 Coords246_g174352 = temp_output_37_0_g174352;
				half3 WorldPosition246_g174352 = temp_output_279_0_g174352;
				float3 temp_output_280_0_g174352 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174352 = temp_output_280_0_g174352;
				half4 localSamplePlanar3D246_g174352 = SamplePlanar3D( Texture246_g174352 , Sampler246_g174352 , Coords246_g174352 , WorldPosition246_g174352 , WorldNormal246_g174352 );
				#if defined( TVE_SECOND_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch817_g174348 = localSampleMain276_g174352;
				#elif defined( TVE_SECOND_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch817_g174348 = localSampleExtra275_g174352;
				#elif defined( TVE_SECOND_MASK_SAMPLE_PLANAR_2D )
				float4 staticSwitch817_g174348 = localSamplePlanar2D238_g174352;
				#elif defined( TVE_SECOND_MASK_SAMPLE_PLANAR_3D )
				float4 staticSwitch817_g174348 = localSamplePlanar3D246_g174352;
				#else
				float4 staticSwitch817_g174348 = localSampleMain276_g174352;
				#endif
				half4 Local_MaskTex861_g174348 = staticSwitch817_g174348;
				float clampResult17_g174364 = clamp( (Local_MaskTex861_g174348).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174363 = _SecondMaskRemap.x;
				float temp_output_10_0_g174363 = ( _SecondMaskRemap.y - temp_output_7_0_g174363 );
				float lerpResult1015_g174348 = lerp( 1.0 , saturate( ( ( clampResult17_g174364 - temp_output_7_0_g174363 ) / ( temp_output_10_0_g174363 + 0.0001 ) ) ) , _SecondMaskValue);
				half Blend_TexMask429_g174348 = lerpResult1015_g174348;
				half3 Visual_NormalWS951_g174348 = Out_NormalWS4_g174360;
				float clampResult17_g174365 = clamp( saturate( (Visual_NormalWS951_g174348).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174366 = _SecondProjRemap.x;
				float temp_output_10_0_g174366 = ( _SecondProjRemap.y - temp_output_7_0_g174366 );
				float lerpResult996_g174348 = lerp( 1.0 , saturate( ( ( clampResult17_g174365 - temp_output_7_0_g174366 ) / ( temp_output_10_0_g174366 + 0.0001 ) ) ) , _SecondProjValue);
				half Blend_ProjMask434_g174348 = lerpResult996_g174348;
				half4 Model_VertexMasks964_g174348 = Out_VertexData15_g174380;
				float4 break965_g174348 = Model_VertexMasks964_g174348;
				float4 break33_g174367 = _second_vert_mode;
				float temp_output_30_0_g174367 = ( break965_g174348.x * break33_g174367.x );
				float temp_output_29_0_g174367 = ( break965_g174348.y * break33_g174367.y );
				float temp_output_31_0_g174367 = ( break965_g174348.z * break33_g174367.z );
				float temp_output_28_0_g174367 = ( temp_output_30_0_g174367 + temp_output_29_0_g174367 + temp_output_31_0_g174367 + ( break965_g174348.w * break33_g174367.w ) );
				float clampResult17_g174361 = clamp( temp_output_28_0_g174367 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174362 = _SecondMeshRemap.x;
				float temp_output_10_0_g174362 = ( _SecondMeshRemap.y - temp_output_7_0_g174362 );
				float lerpResult1017_g174348 = lerp( 1.0 , saturate( ( ( clampResult17_g174361 - temp_output_7_0_g174362 ) / ( temp_output_10_0_g174362 + 0.0001 ) ) ) , _SecondMeshValue);
				float temp_output_6_0_g174375 = lerpResult1017_g174348;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174375 = ( temp_output_6_0_g174375 + ( _SecondMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174375 = temp_output_6_0_g174375;
				#endif
				float temp_output_987_0_g174348 = staticSwitch14_g174375;
				half Blend_VertMask918_g174348 = temp_output_987_0_g174348;
				float localBuildGlobalData204_g173897 = ( 0.0 );
				TVEGlobalData Data204_g173897 = (TVEGlobalData)0;
				half Dummy211_g173897 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g173897 = Dummy211_g173897;
				float temp_output_82_0_g173907 = _GlobalCoatLayerValue;
				float temp_output_19_0_g173909 = TVE_CoatLayers[(int)temp_output_82_0_g173907];
				TVEModelData Data15_g173979 = Data16_g164566;
				float Out_Dummy15_g173979 = 0;
				float3 Out_PositionWS15_g173979 = float3( 0,0,0 );
				float3 Out_PositionWO15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWS15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWO15_g173979 = float3( 0,0,0 );
				float3 Out_NormalWS15_g173979 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g173979 = float3( 0,0,0 );
				float4 Out_VertexData15_g173979 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g173979 = float4( 0,0,0,0 );
				Out_Dummy15_g173979 = Data15_g173979.Dummy;
				Out_PositionWS15_g173979 = Data15_g173979.PositionWS;
				Out_PositionWO15_g173979 = Data15_g173979.PositionWO;
				Out_PivotWS15_g173979 = Data15_g173979.PivotWS;
				Out_PivotWO15_g173979 = Data15_g173979.PivotWO;
				Out_NormalWS15_g173979 = Data15_g173979.NormalWS;
				Out_ViewDirWS15_g173979 = Data15_g173979.ViewDirWS;
				Out_VertexData15_g173979 = Data15_g173979.VertexData;
				Out_BoundsData15_g173979 = Data15_g173979.BoundsData;
				half3 Model_PositionWS143_g173897 = Out_PositionWS15_g173979;
				half3 Model_PivotWS145_g173897 = Out_PivotWS15_g173979;
				float3 lerpResult300_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalCoatPivotValue);
				half3 Input_Position180_g173910 = lerpResult300_g173897;
				float2 temp_output_75_0_g173910 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_82_0_g173910 = temp_output_82_0_g173907;
				float2 temp_output_119_0_g173910 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_7_0_g173915 = 1.0;
				float temp_output_10_0_g173915 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173915 );
				float4 lerpResult131_g173910 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173910,temp_output_82_0_g173910), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173910,temp_output_82_0_g173910), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173910 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173915 ) / temp_output_10_0_g173915 ) ));
				float4 temp_output_17_0_g173909 = lerpResult131_g173910;
				float4 temp_output_3_0_g173909 = TVE_CoatParams;
				float4 ifLocalVar18_g173909 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173909 >= 0.5 )
				ifLocalVar18_g173909 = temp_output_17_0_g173909;
				else
				ifLocalVar18_g173909 = temp_output_3_0_g173909;
				float4 lerpResult22_g173909 = lerp( temp_output_3_0_g173909 , temp_output_17_0_g173909 , temp_output_19_0_g173909);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173909 = lerpResult22_g173909;
				#else
				float4 staticSwitch24_g173909 = ifLocalVar18_g173909;
				#endif
				half4 Coat_Params302_g173897 = staticSwitch24_g173909;
				float4 In_CoatParams204_g173897 = Coat_Params302_g173897;
				float temp_output_82_0_g173898 = _GlobalPaintLayerValue;
				float temp_output_19_0_g173900 = TVE_PaintLayers[(int)temp_output_82_0_g173898];
				float3 lerpResult85_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalPaintPivotValue);
				half3 Input_Position180_g173901 = lerpResult85_g173897;
				float2 temp_output_75_0_g173901 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_82_0_g173901 = temp_output_82_0_g173898;
				float2 temp_output_119_0_g173901 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_7_0_g173906 = 1.0;
				float temp_output_10_0_g173906 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173906 );
				float4 lerpResult131_g173901 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173901,temp_output_82_0_g173901), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173901,temp_output_82_0_g173901), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173901 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173906 ) / temp_output_10_0_g173906 ) ));
				float4 temp_output_17_0_g173900 = lerpResult131_g173901;
				float4 temp_output_3_0_g173900 = TVE_PaintParams;
				float4 ifLocalVar18_g173900 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173900 >= 0.5 )
				ifLocalVar18_g173900 = temp_output_17_0_g173900;
				else
				ifLocalVar18_g173900 = temp_output_3_0_g173900;
				float4 lerpResult22_g173900 = lerp( temp_output_3_0_g173900 , temp_output_17_0_g173900 , temp_output_19_0_g173900);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173900 = lerpResult22_g173900;
				#else
				float4 staticSwitch24_g173900 = ifLocalVar18_g173900;
				#endif
				half4 Paint_Params71_g173897 = staticSwitch24_g173900;
				float4 In_PaintParams204_g173897 = Paint_Params71_g173897;
				float temp_output_82_0_g173916 = _GlobalGlowLayerValue;
				float temp_output_19_0_g173918 = TVE_GlowLayers[(int)temp_output_82_0_g173916];
				float3 lerpResult247_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalGlowPivotValue);
				half3 Input_Position180_g173919 = lerpResult247_g173897;
				float2 temp_output_75_0_g173919 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_82_0_g173919 = temp_output_82_0_g173916;
				float2 temp_output_119_0_g173919 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_7_0_g173924 = 1.0;
				float temp_output_10_0_g173924 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173924 );
				float4 lerpResult131_g173919 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173919,temp_output_82_0_g173919), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173919,temp_output_82_0_g173919), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173919 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173924 ) / temp_output_10_0_g173924 ) ));
				float4 temp_output_17_0_g173918 = lerpResult131_g173919;
				float4 temp_output_3_0_g173918 = TVE_GlowParams;
				float4 ifLocalVar18_g173918 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173918 >= 0.5 )
				ifLocalVar18_g173918 = temp_output_17_0_g173918;
				else
				ifLocalVar18_g173918 = temp_output_3_0_g173918;
				float4 lerpResult22_g173918 = lerp( temp_output_3_0_g173918 , temp_output_17_0_g173918 , temp_output_19_0_g173918);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173918 = lerpResult22_g173918;
				#else
				float4 staticSwitch24_g173918 = ifLocalVar18_g173918;
				#endif
				half4 Glow_Params248_g173897 = staticSwitch24_g173918;
				float4 In_GlowParams204_g173897 = Glow_Params248_g173897;
				float temp_output_132_0_g173961 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g173963 = TVE_AtmoLayers[(int)temp_output_132_0_g173961];
				float3 lerpResult104_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalAtmoPivotValue);
				half3 Input_Position180_g173964 = lerpResult104_g173897;
				float2 temp_output_75_0_g173964 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_82_0_g173964 = temp_output_132_0_g173961;
				float2 temp_output_119_0_g173964 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_7_0_g173969 = 1.0;
				float temp_output_10_0_g173969 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173969 );
				float4 lerpResult131_g173964 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173964,temp_output_82_0_g173964), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173964,temp_output_82_0_g173964), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173964 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173969 ) / temp_output_10_0_g173969 ) ));
				float4 temp_output_17_0_g173963 = lerpResult131_g173964;
				float4 temp_output_3_0_g173963 = TVE_AtmoParams;
				float4 ifLocalVar18_g173963 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173963 >= 0.5 )
				ifLocalVar18_g173963 = temp_output_17_0_g173963;
				else
				ifLocalVar18_g173963 = temp_output_3_0_g173963;
				float4 lerpResult22_g173963 = lerp( temp_output_3_0_g173963 , temp_output_17_0_g173963 , temp_output_19_0_g173963);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173963 = lerpResult22_g173963;
				#else
				float4 staticSwitch24_g173963 = ifLocalVar18_g173963;
				#endif
				half4 Atmo_Params80_g173897 = staticSwitch24_g173963;
				float4 In_AtmoParams204_g173897 = Atmo_Params80_g173897;
				float temp_output_132_0_g173970 = _GlobalFadeLayerValue;
				float temp_output_19_0_g173972 = TVE_FadeLayers[(int)temp_output_132_0_g173970];
				float3 lerpResult382_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFadePivotValue);
				half3 Input_Position180_g173973 = lerpResult382_g173897;
				float2 temp_output_75_0_g173973 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_82_0_g173973 = temp_output_132_0_g173970;
				float2 temp_output_119_0_g173973 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_7_0_g173978 = 1.0;
				float temp_output_10_0_g173978 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173978 );
				float4 lerpResult131_g173973 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173973,temp_output_82_0_g173973), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173973,temp_output_82_0_g173973), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173973 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173978 ) / temp_output_10_0_g173978 ) ));
				float4 temp_output_17_0_g173972 = lerpResult131_g173973;
				float4 temp_output_3_0_g173972 = TVE_FadeParams;
				float4 ifLocalVar18_g173972 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173972 >= 0.5 )
				ifLocalVar18_g173972 = temp_output_17_0_g173972;
				else
				ifLocalVar18_g173972 = temp_output_3_0_g173972;
				float4 lerpResult22_g173972 = lerp( temp_output_3_0_g173972 , temp_output_17_0_g173972 , temp_output_19_0_g173972);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173972 = lerpResult22_g173972;
				#else
				float4 staticSwitch24_g173972 = ifLocalVar18_g173972;
				#endif
				half4 Fade_Params387_g173897 = staticSwitch24_g173972;
				float4 In_FadeParams204_g173897 = Fade_Params387_g173897;
				float temp_output_130_0_g173952 = _GlobalFormLayerValue;
				float temp_output_19_0_g173954 = TVE_FormLayers[(int)temp_output_130_0_g173952];
				float3 lerpResult168_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFormPivotValue);
				half3 Input_Position180_g173955 = lerpResult168_g173897;
				float2 temp_output_75_0_g173955 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_82_0_g173955 = temp_output_130_0_g173952;
				float2 temp_output_119_0_g173955 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_7_0_g173960 = 1.0;
				float temp_output_10_0_g173960 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173960 );
				float4 lerpResult131_g173955 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173955,temp_output_82_0_g173955), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173955,temp_output_82_0_g173955), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173955 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173960 ) / temp_output_10_0_g173960 ) ));
				float4 temp_output_17_0_g173954 = lerpResult131_g173955;
				float4 temp_output_3_0_g173954 = TVE_FormParams;
				float4 ifLocalVar18_g173954 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173954 >= 0.5 )
				ifLocalVar18_g173954 = temp_output_17_0_g173954;
				else
				ifLocalVar18_g173954 = temp_output_3_0_g173954;
				float4 lerpResult22_g173954 = lerp( temp_output_3_0_g173954 , temp_output_17_0_g173954 , temp_output_19_0_g173954);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173954 = lerpResult22_g173954;
				#else
				float4 staticSwitch24_g173954 = ifLocalVar18_g173954;
				#endif
				half4 Form_Params112_g173897 = staticSwitch24_g173954;
				float4 In_FormParams204_g173897 = Form_Params112_g173897;
				half4 Land_Params375_g173897 = TVE_LandParams;
				float4 In_LandParams204_g173897 = Land_Params375_g173897;
				float temp_output_136_0_g173943 = _GlobalWindLayerValue;
				float temp_output_19_0_g173945 = TVE_WindLayers[(int)temp_output_136_0_g173943];
				half3 Input_Position180_g173946 = Model_PositionWS143_g173897;
				float2 temp_output_75_0_g173946 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_82_0_g173946 = temp_output_136_0_g173943;
				float2 temp_output_119_0_g173946 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_7_0_g173951 = 1.0;
				float temp_output_10_0_g173951 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173951 );
				float4 lerpResult131_g173946 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173946,temp_output_82_0_g173946), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173946,temp_output_82_0_g173946), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173946 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173951 ) / temp_output_10_0_g173951 ) ));
				float4 temp_output_17_0_g173945 = lerpResult131_g173946;
				float4 temp_output_3_0_g173945 = TVE_WindParams;
				float4 ifLocalVar18_g173945 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173945 >= 0.5 )
				ifLocalVar18_g173945 = temp_output_17_0_g173945;
				else
				ifLocalVar18_g173945 = temp_output_3_0_g173945;
				float4 lerpResult22_g173945 = lerp( temp_output_3_0_g173945 , temp_output_17_0_g173945 , temp_output_19_0_g173945);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173945 = lerpResult22_g173945;
				#else
				float4 staticSwitch24_g173945 = ifLocalVar18_g173945;
				#endif
				half4 Wind_Params88_g173897 = staticSwitch24_g173945;
				float4 In_WindParams204_g173897 = Wind_Params88_g173897;
				float temp_output_136_0_g173925 = _GlobalPushLayerValue;
				float temp_output_19_0_g173926 = TVE_PushLayers[(int)temp_output_136_0_g173925];
				half3 Input_Position180_g173927 = Model_PivotWS145_g173897;
				float2 temp_output_75_0_g173927 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_82_0_g173927 = temp_output_136_0_g173925;
				float2 temp_output_119_0_g173927 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_7_0_g173932 = 1.0;
				float temp_output_10_0_g173932 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173932 );
				float4 lerpResult131_g173927 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173927,temp_output_82_0_g173927), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173927,temp_output_82_0_g173927), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173927 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173932 ) / temp_output_10_0_g173932 ) ));
				float4 temp_output_17_0_g173926 = lerpResult131_g173927;
				float4 temp_output_3_0_g173926 = TVE_PushParams;
				float4 ifLocalVar18_g173926 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173926 >= 0.5 )
				ifLocalVar18_g173926 = temp_output_17_0_g173926;
				else
				ifLocalVar18_g173926 = temp_output_3_0_g173926;
				float4 lerpResult22_g173926 = lerp( temp_output_3_0_g173926 , temp_output_17_0_g173926 , temp_output_19_0_g173926);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173926 = lerpResult22_g173926;
				#else
				float4 staticSwitch24_g173926 = ifLocalVar18_g173926;
				#endif
				half4 Push_Params335_g173897 = staticSwitch24_g173926;
				float4 In_PushParams204_g173897 = Push_Params335_g173897;
				Data204_g173897.Dummy = In_Dummy204_g173897;
				Data204_g173897.CoatParams = In_CoatParams204_g173897;
				Data204_g173897.PaintParams = In_PaintParams204_g173897;
				Data204_g173897.GlowParams = In_GlowParams204_g173897;
				Data204_g173897.AtmoParams = In_AtmoParams204_g173897;
				Data204_g173897.FadeParams = In_FadeParams204_g173897;
				Data204_g173897.FormParams= In_FormParams204_g173897;
				Data204_g173897.LandParams = In_LandParams204_g173897;
				Data204_g173897.WindParams = In_WindParams204_g173897;
				Data204_g173897.PushParams = In_PushParams204_g173897;
				TVEGlobalData Data15_g174359 = Data204_g173897;
				float Out_Dummy15_g174359 = 0;
				float4 Out_CoatParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174359 = float4( 0,0,0,0 );
				Out_Dummy15_g174359 = Data15_g174359.Dummy;
				Out_CoatParams15_g174359 = Data15_g174359.CoatParams;
				Out_PaintParams15_g174359 = Data15_g174359.PaintParams;
				Out_GlowParams15_g174359 = Data15_g174359.GlowParams;
				Out_AtmoParams15_g174359= Data15_g174359.AtmoParams;
				Out_FadeParams15_g174359= Data15_g174359.FadeParams;
				Out_FormParams15_g174359 = Data15_g174359.FormParams;
				Out_LandParams15_g174359 = Data15_g174359.LandParams;
				Out_WindParams15_g174359 = Data15_g174359.WindParams;
				Out_PushParams15_g174359 = Data15_g174359.PushParams;
				half4 Global_CoatParams975_g174348 = Out_CoatParams15_g174359;
				float lerpResult1013_g174348 = lerp( 1.0 , (Global_CoatParams975_g174348).z , TVE_IsEnabled);
				#ifdef TVE_SECOND_ELEMENT
				float staticSwitch971_g174348 = lerpResult1013_g174348;
				#else
				float staticSwitch971_g174348 = 1.0;
				#endif
				half Blend_GlobalMask972_g174348 = staticSwitch971_g174348;
				float temp_output_432_0_g174348 = ( _SecondIntensityValue * Blend_TexMask429_g174348 * Blend_ProjMask434_g174348 * Blend_VertMask918_g174348 * Blend_GlobalMask972_g174348 );
				float clampResult17_g174369 = clamp( temp_output_432_0_g174348 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174368 = _SecondBlendRemap.x;
				float temp_output_10_0_g174368 = ( _SecondBlendRemap.y - temp_output_7_0_g174368 );
				half Blend_Mask412_g174348 = ( saturate( ( ( clampResult17_g174369 - temp_output_7_0_g174368 ) / ( temp_output_10_0_g174368 + 0.0001 ) ) ) * _SecondBlendIntensityValue );
				float3 lerpResult403_g174348 = lerp( Visual_Albedo527_g174348 , lerpResult985_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float3 staticSwitch415_g174348 = lerpResult403_g174348;
				#else
				float3 staticSwitch415_g174348 = Visual_Albedo527_g174348;
				#endif
				half3 Final_Albedo601_g174348 = staticSwitch415_g174348;
				float3 In_Albedo3_g174381 = Final_Albedo601_g174348;
				float3 In_AlbedoRaw3_g174381 = Final_Albedo601_g174348;
				half2 Visual_NormalTS529_g174348 = Out_NormalTS4_g174360;
				float2 lerpResult40_g174371 = lerp( float2( 0,0 ) , Visual_NormalTS529_g174348 , _SecondBlendNormalValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174350) = _SecondNormalTex;
				float localFilterTexture29_g174378 = ( 0.0 );
				SamplerState SamplerDefault29_g174378 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174378 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174378 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174378 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174378 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174378 = SamplerDefault29_g174378;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174378 = SamplerDefault29_g174378;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174378 = SamplerPoint29_g174378;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174378 = SamplerLow29_g174378;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174378 = SamplerMedium29_g174378;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174378 = SamplerHigh29_g174378;
				#endif
				SamplerState Sampler276_g174350 = SS29_g174378;
				float4 temp_output_37_0_g174350 = Local_LayerCoords790_g174348;
				half4 Coords276_g174350 = temp_output_37_0_g174350;
				half2 TexCoord276_g174350 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174350 = SampleMain( Texture276_g174350 , Sampler276_g174350 , Coords276_g174350 , TexCoord276_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174350) = _SecondNormalTex;
				SamplerState Sampler275_g174350 = SS29_g174378;
				half4 Coords275_g174350 = temp_output_37_0_g174350;
				half2 TexCoord275_g174350 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174350 = SampleExtra( Texture275_g174350 , Sampler275_g174350 , Coords275_g174350 , TexCoord275_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174350) = _SecondNormalTex;
				SamplerState Sampler238_g174350 = SS29_g174378;
				half4 Coords238_g174350 = temp_output_37_0_g174350;
				float3 temp_output_279_0_g174350 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174350 = temp_output_279_0_g174350;
				half4 localSamplePlanar2D238_g174350 = SamplePlanar2D( Texture238_g174350 , Sampler238_g174350 , Coords238_g174350 , WorldPosition238_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174350) = _SecondNormalTex;
				SamplerState Sampler246_g174350 = SS29_g174378;
				half4 Coords246_g174350 = temp_output_37_0_g174350;
				half3 WorldPosition246_g174350 = temp_output_279_0_g174350;
				float3 temp_output_280_0_g174350 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174350 = temp_output_280_0_g174350;
				half4 localSamplePlanar3D246_g174350 = SamplePlanar3D( Texture246_g174350 , Sampler246_g174350 , Coords246_g174350 , WorldPosition246_g174350 , WorldNormal246_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174350) = _SecondNormalTex;
				SamplerState Sampler234_g174350 = SS29_g174378;
				float4 Coords234_g174350 = temp_output_37_0_g174350;
				float3 WorldPosition234_g174350 = temp_output_279_0_g174350;
				float4 localSampleStochastic2D234_g174350 = SampleStochastic2D( Texture234_g174350 , Sampler234_g174350 , Coords234_g174350 , WorldPosition234_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174350) = _SecondNormalTex;
				SamplerState Sampler263_g174350 = SS29_g174378;
				half4 Coords263_g174350 = temp_output_37_0_g174350;
				half3 WorldPosition263_g174350 = temp_output_279_0_g174350;
				half3 WorldNormal263_g174350 = temp_output_280_0_g174350;
				half4 localSampleStochastic3D263_g174350 = SampleStochastic3D( Texture263_g174350 , Sampler263_g174350 , Coords263_g174350 , WorldPosition263_g174350 , WorldNormal263_g174350 );
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float4 staticSwitch698_g174348 = localSampleMain276_g174350;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float4 staticSwitch698_g174348 = localSampleExtra275_g174350;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float4 staticSwitch698_g174348 = localSamplePlanar2D238_g174350;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float4 staticSwitch698_g174348 = localSamplePlanar3D246_g174350;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch698_g174348 = localSampleStochastic2D234_g174350;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch698_g174348 = localSampleStochastic3D263_g174350;
				#else
				float4 staticSwitch698_g174348 = localSampleMain276_g174350;
				#endif
				half4 Local_NormalTex776_g174348 = staticSwitch698_g174348;
				half4 Normal_Packed45_g174353 = Local_NormalTex776_g174348;
				float2 appendResult58_g174353 = (float2(( (Normal_Packed45_g174353).x * (Normal_Packed45_g174353).w ) , (Normal_Packed45_g174353).y));
				half2 Normal_Default50_g174353 = appendResult58_g174353;
				half2 Normal_ASTC41_g174353 = (Normal_Packed45_g174353).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174353 = Normal_ASTC41_g174353;
				#else
				float2 staticSwitch38_g174353 = Normal_Default50_g174353;
				#endif
				half2 Normal_NO_DTX544_g174353 = (Normal_Packed45_g174353).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174353 = Normal_NO_DTX544_g174353;
				#else
				float2 staticSwitch37_g174353 = staticSwitch38_g174353;
				#endif
				float2 temp_output_724_0_g174348 = ( (staticSwitch37_g174353*2.0 + -1.0) * _SecondNormalValue );
				half2 Normal_Planar45_g174354 = temp_output_724_0_g174348;
				float2 break71_g174354 = Normal_Planar45_g174354;
				float3 appendResult72_g174354 = (float3(break71_g174354.x , 0.0 , break71_g174354.y));
				float2 temp_output_858_0_g174348 = (mul( ase_worldToTangent, appendResult72_g174354 )).xy;
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float2 staticSwitch727_g174348 = temp_output_724_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float2 staticSwitch727_g174348 = temp_output_724_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#else
				float2 staticSwitch727_g174348 = temp_output_724_0_g174348;
				#endif
				half2 Local_NormalTS729_g174348 = staticSwitch727_g174348;
				float2 temp_output_36_0_g174371 = ( lerpResult40_g174371 + Local_NormalTS729_g174348 );
				float2 lerpResult405_g174348 = lerp( Visual_NormalTS529_g174348 , temp_output_36_0_g174371 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float2 staticSwitch418_g174348 = lerpResult405_g174348;
				#else
				float2 staticSwitch418_g174348 = Visual_NormalTS529_g174348;
				#endif
				half2 Final_NormalTS612_g174348 = staticSwitch418_g174348;
				float2 In_NormalTS3_g174381 = Final_NormalTS612_g174348;
				float3 appendResult68_g174372 = (float3(Final_NormalTS612_g174348 , 1.0));
				float3 tanNormal74_g174372 = appendResult68_g174372;
				float3 worldNormal74_g174372 = normalize( float3(dot(tanToWorld0,tanNormal74_g174372), dot(tanToWorld1,tanNormal74_g174372), dot(tanToWorld2,tanNormal74_g174372)) );
				half3 Final_NormalWS950_g174348 = worldNormal74_g174372;
				float3 In_NormalWS3_g174381 = Final_NormalWS950_g174348;
				half4 Visual_Shader531_g174348 = Out_Shader4_g174360;
				float4 lerpResult994_g174348 = lerp( Local_Masks750_g174348 , ( Visual_Shader531_g174348 * Local_Masks750_g174348 ) , _SecondBlendShaderValue);
				float4 lerpResult440_g174348 = lerp( Visual_Shader531_g174348 , lerpResult994_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float4 staticSwitch451_g174348 = lerpResult440_g174348;
				#else
				float4 staticSwitch451_g174348 = Visual_Shader531_g174348;
				#endif
				half4 Final_Masks613_g174348 = staticSwitch451_g174348;
				float4 In_Shader3_g174381 = Final_Masks613_g174348;
				float4 In_Emissive3_g174381 = Out_Emissive4_g174360;
				float3 temp_output_3_0_g174374 = Final_Albedo601_g174348;
				float dotResult20_g174374 = dot( temp_output_3_0_g174374 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale615_g174348 = dotResult20_g174374;
				float In_Grayscale3_g174381 = Final_Grayscale615_g174348;
				float clampResult651_g174348 = clamp( saturate( ( Final_Grayscale615_g174348 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity652_g174348 = clampResult651_g174348;
				float In_Luminosity3_g174381 = Final_Luminosity652_g174348;
				half Visual_MultiMask547_g174348 = Out_MultiMask4_g174360;
				float lerpResult477_g174348 = lerp( Visual_MultiMask547_g174348 , Local_MultiMask767_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float staticSwitch482_g174348 = lerpResult477_g174348;
				#else
				float staticSwitch482_g174348 = Visual_MultiMask547_g174348;
				#endif
				half Final_MultiMask572_g174348 = staticSwitch482_g174348;
				float In_MultiMask3_g174381 = Final_MultiMask572_g174348;
				half Visual_AlphaClip559_g174348 = Out_AlphaClip4_g174360;
				float temp_output_718_0_g174348 = (Local_AlbedoTex777_g174348).w;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch932_g174348 = ( temp_output_718_0_g174348 - _SecondAlphaClipValue );
				#else
				float staticSwitch932_g174348 = temp_output_718_0_g174348;
				#endif
				half Local_AlphaClip772_g174348 = staticSwitch932_g174348;
				float lerpResult448_g174348 = lerp( Visual_AlphaClip559_g174348 , Local_AlphaClip772_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float staticSwitch564_g174348 = lerpResult448_g174348;
				#else
				float staticSwitch564_g174348 = Visual_AlphaClip559_g174348;
				#endif
				half Final_AlphaClip602_g174348 = staticSwitch564_g174348;
				float In_AlphaClip3_g174381 = Final_AlphaClip602_g174348;
				half Visual_AlphaFade588_g174348 = Out_AlphaFade4_g174360;
				half Local_AlphaFade773_g174348 = (lerpResult706_g174348).a;
				float lerpResult604_g174348 = lerp( Visual_AlphaFade588_g174348 , Local_AlphaFade773_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float staticSwitch608_g174348 = lerpResult604_g174348;
				#else
				float staticSwitch608_g174348 = Visual_AlphaFade588_g174348;
				#endif
				half Final_AlphaFade611_g174348 = staticSwitch608_g174348;
				float In_AlphaFade3_g174381 = Final_AlphaFade611_g174348;
				float3 In_Translucency3_g174381 = Out_Translucency4_g174360;
				float In_Transmission3_g174381 = Out_Transmission4_g174360;
				float In_Thickness3_g174381 = Out_Thickness4_g174360;
				float In_Diffusion3_g174381 = Out_Diffusion4_g174360;
				Data3_g174381.Dummy = In_Dummy3_g174381;
				Data3_g174381.Albedo = In_Albedo3_g174381;
				Data3_g174381.AlbedoRaw = In_AlbedoRaw3_g174381;
				Data3_g174381.NormalTS = In_NormalTS3_g174381;
				Data3_g174381.NormalWS = In_NormalWS3_g174381;
				Data3_g174381.Shader = In_Shader3_g174381;
				Data3_g174381.Emissive= In_Emissive3_g174381;
				Data3_g174381.MultiMask = In_MultiMask3_g174381;
				Data3_g174381.Grayscale = In_Grayscale3_g174381;
				Data3_g174381.Luminosity = In_Luminosity3_g174381;
				Data3_g174381.AlphaClip = In_AlphaClip3_g174381;
				Data3_g174381.AlphaFade = In_AlphaFade3_g174381;
				Data3_g174381.Translucency = In_Translucency3_g174381;
				Data3_g174381.Transmission = In_Transmission3_g174381;
				Data3_g174381.Thickness = In_Thickness3_g174381;
				Data3_g174381.Diffusion = In_Diffusion3_g174381;
				TVEVisualData Data4_g174402 = Data3_g174381;
				float Out_Dummy4_g174402 = 0;
				float3 Out_Albedo4_g174402 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174402 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174402 = float2( 0,0 );
				float3 Out_NormalWS4_g174402 = float3( 0,0,0 );
				float4 Out_Shader4_g174402 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174402 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174402 = 0;
				float Out_Grayscale4_g174402 = 0;
				float Out_Luminosity4_g174402 = 0;
				float Out_AlphaClip4_g174402 = 0;
				float Out_AlphaFade4_g174402 = 0;
				float3 Out_Translucency4_g174402 = float3( 0,0,0 );
				float Out_Transmission4_g174402 = 0;
				float Out_Thickness4_g174402 = 0;
				float Out_Diffusion4_g174402 = 0;
				Out_Dummy4_g174402 = Data4_g174402.Dummy;
				Out_Albedo4_g174402 = Data4_g174402.Albedo;
				Out_AlbedoRaw4_g174402 = Data4_g174402.AlbedoRaw;
				Out_NormalTS4_g174402 = Data4_g174402.NormalTS;
				Out_NormalWS4_g174402 = Data4_g174402.NormalWS;
				Out_Shader4_g174402 = Data4_g174402.Shader;
				Out_Emissive4_g174402= Data4_g174402.Emissive;
				Out_MultiMask4_g174402 = Data4_g174402.MultiMask;
				Out_Grayscale4_g174402 = Data4_g174402.Grayscale;
				Out_Luminosity4_g174402= Data4_g174402.Luminosity;
				Out_AlphaClip4_g174402 = Data4_g174402.AlphaClip;
				Out_AlphaFade4_g174402 = Data4_g174402.AlphaFade;
				Out_Translucency4_g174402 = Data4_g174402.Translucency;
				Out_Transmission4_g174402 = Data4_g174402.Transmission;
				Out_Thickness4_g174402 = Data4_g174402.Thickness;
				Out_Diffusion4_g174402 = Data4_g174402.Diffusion;
				half3 Visual_Albedo527_g174386 = Out_Albedo4_g174402;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174387) = _ThirdAlbedoTex;
				float localFilterTexture19_g174415 = ( 0.0 );
				SamplerState SamplerDefault19_g174415 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174415 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174415 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174415 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174415 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174415 = SamplerDefault19_g174415;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174415 = SamplerDefault19_g174415;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174415 = SamplerPoint19_g174415;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174415 = SamplerLow19_g174415;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174415 = SamplerMedium19_g174415;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174415 = SamplerHigh19_g174415;
				#endif
				SamplerState Sampler276_g174387 = SS19_g174415;
				half4 Local_LayerCoords790_g174386 = _third_coord_value;
				float4 temp_output_37_0_g174387 = Local_LayerCoords790_g174386;
				half4 Coords276_g174387 = temp_output_37_0_g174387;
				half2 TexCoord276_g174387 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174387 = SampleMain( Texture276_g174387 , Sampler276_g174387 , Coords276_g174387 , TexCoord276_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler275_g174387 = SS19_g174415;
				half4 Coords275_g174387 = temp_output_37_0_g174387;
				half2 TexCoord275_g174387 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174387 = SampleExtra( Texture275_g174387 , Sampler275_g174387 , Coords275_g174387 , TexCoord275_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler238_g174387 = SS19_g174415;
				half4 Coords238_g174387 = temp_output_37_0_g174387;
				TVEModelData Data15_g174418 = Data16_g164566;
				float Out_Dummy15_g174418 = 0;
				float3 Out_PositionWS15_g174418 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174418 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174418 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174418 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174418 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174418 = float3( 0,0,0 );
				float4 Out_VertexData15_g174418 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174418 = float4( 0,0,0,0 );
				Out_Dummy15_g174418 = Data15_g174418.Dummy;
				Out_PositionWS15_g174418 = Data15_g174418.PositionWS;
				Out_PositionWO15_g174418 = Data15_g174418.PositionWO;
				Out_PivotWS15_g174418 = Data15_g174418.PivotWS;
				Out_PivotWO15_g174418 = Data15_g174418.PivotWO;
				Out_NormalWS15_g174418 = Data15_g174418.NormalWS;
				Out_ViewDirWS15_g174418 = Data15_g174418.ViewDirWS;
				Out_VertexData15_g174418 = Data15_g174418.VertexData;
				Out_BoundsData15_g174418 = Data15_g174418.BoundsData;
				half3 Model_PositionWO636_g174386 = Out_PositionWO15_g174418;
				float3 temp_output_279_0_g174387 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174387 = temp_output_279_0_g174387;
				half4 localSamplePlanar2D238_g174387 = SamplePlanar2D( Texture238_g174387 , Sampler238_g174387 , Coords238_g174387 , WorldPosition238_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler246_g174387 = SS19_g174415;
				half4 Coords246_g174387 = temp_output_37_0_g174387;
				half3 WorldPosition246_g174387 = temp_output_279_0_g174387;
				half3 Model_NormalWS869_g174386 = Out_NormalWS15_g174418;
				float3 temp_output_280_0_g174387 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174387 = temp_output_280_0_g174387;
				half4 localSamplePlanar3D246_g174387 = SamplePlanar3D( Texture246_g174387 , Sampler246_g174387 , Coords246_g174387 , WorldPosition246_g174387 , WorldNormal246_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler234_g174387 = SS19_g174415;
				float4 Coords234_g174387 = temp_output_37_0_g174387;
				float3 WorldPosition234_g174387 = temp_output_279_0_g174387;
				float4 localSampleStochastic2D234_g174387 = SampleStochastic2D( Texture234_g174387 , Sampler234_g174387 , Coords234_g174387 , WorldPosition234_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler263_g174387 = SS19_g174415;
				half4 Coords263_g174387 = temp_output_37_0_g174387;
				half3 WorldPosition263_g174387 = temp_output_279_0_g174387;
				half3 WorldNormal263_g174387 = temp_output_280_0_g174387;
				half4 localSampleStochastic3D263_g174387 = SampleStochastic3D( Texture263_g174387 , Sampler263_g174387 , Coords263_g174387 , WorldPosition263_g174387 , WorldNormal263_g174387 );
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float4 staticSwitch693_g174386 = localSampleMain276_g174387;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float4 staticSwitch693_g174386 = localSampleExtra275_g174387;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float4 staticSwitch693_g174386 = localSamplePlanar2D238_g174387;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float4 staticSwitch693_g174386 = localSamplePlanar3D246_g174387;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch693_g174386 = localSampleStochastic2D234_g174387;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch693_g174386 = localSampleStochastic3D263_g174387;
				#else
				float4 staticSwitch693_g174386 = localSampleMain276_g174387;
				#endif
				half4 Local_AlbedoTex777_g174386 = staticSwitch693_g174386;
				float3 lerpResult716_g174386 = lerp( float3( 1,1,1 ) , (Local_AlbedoTex777_g174386).xyz , _ThirdAlbedoValue);
				half3 Local_AlbedoRGB771_g174386 = lerpResult716_g174386;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174389) = _ThirdShaderTex;
				float localFilterTexture30_g174417 = ( 0.0 );
				SamplerState SamplerDefault30_g174417 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174417 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174417 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174417 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174417 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174417 = SamplerDefault30_g174417;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174417 = SamplerDefault30_g174417;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174417 = SamplerPoint30_g174417;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174417 = SamplerLow30_g174417;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174417 = SamplerMedium30_g174417;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174417 = SamplerHigh30_g174417;
				#endif
				SamplerState Sampler276_g174389 = SS30_g174417;
				float4 temp_output_37_0_g174389 = Local_LayerCoords790_g174386;
				half4 Coords276_g174389 = temp_output_37_0_g174389;
				half2 TexCoord276_g174389 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174389 = SampleMain( Texture276_g174389 , Sampler276_g174389 , Coords276_g174389 , TexCoord276_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174389) = _ThirdShaderTex;
				SamplerState Sampler275_g174389 = SS30_g174417;
				half4 Coords275_g174389 = temp_output_37_0_g174389;
				half2 TexCoord275_g174389 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174389 = SampleExtra( Texture275_g174389 , Sampler275_g174389 , Coords275_g174389 , TexCoord275_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174389) = _ThirdShaderTex;
				SamplerState Sampler238_g174389 = SS30_g174417;
				half4 Coords238_g174389 = temp_output_37_0_g174389;
				float3 temp_output_279_0_g174389 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174389 = temp_output_279_0_g174389;
				half4 localSamplePlanar2D238_g174389 = SamplePlanar2D( Texture238_g174389 , Sampler238_g174389 , Coords238_g174389 , WorldPosition238_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174389) = _ThirdShaderTex;
				SamplerState Sampler246_g174389 = SS30_g174417;
				half4 Coords246_g174389 = temp_output_37_0_g174389;
				half3 WorldPosition246_g174389 = temp_output_279_0_g174389;
				float3 temp_output_280_0_g174389 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174389 = temp_output_280_0_g174389;
				half4 localSamplePlanar3D246_g174389 = SamplePlanar3D( Texture246_g174389 , Sampler246_g174389 , Coords246_g174389 , WorldPosition246_g174389 , WorldNormal246_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174389) = _ThirdShaderTex;
				SamplerState Sampler234_g174389 = SS30_g174417;
				float4 Coords234_g174389 = temp_output_37_0_g174389;
				float3 WorldPosition234_g174389 = temp_output_279_0_g174389;
				float4 localSampleStochastic2D234_g174389 = SampleStochastic2D( Texture234_g174389 , Sampler234_g174389 , Coords234_g174389 , WorldPosition234_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174389) = _ThirdShaderTex;
				SamplerState Sampler263_g174389 = SS30_g174417;
				half4 Coords263_g174389 = temp_output_37_0_g174389;
				half3 WorldPosition263_g174389 = temp_output_279_0_g174389;
				half3 WorldNormal263_g174389 = temp_output_280_0_g174389;
				half4 localSampleStochastic3D263_g174389 = SampleStochastic3D( Texture263_g174389 , Sampler263_g174389 , Coords263_g174389 , WorldPosition263_g174389 , WorldNormal263_g174389 );
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float4 staticSwitch722_g174386 = localSampleMain276_g174389;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float4 staticSwitch722_g174386 = localSampleExtra275_g174389;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float4 staticSwitch722_g174386 = localSamplePlanar2D238_g174389;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float4 staticSwitch722_g174386 = localSamplePlanar3D246_g174389;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch722_g174386 = localSampleStochastic2D234_g174389;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch722_g174386 = localSampleStochastic3D263_g174389;
				#else
				float4 staticSwitch722_g174386 = localSampleMain276_g174389;
				#endif
				half4 Local_ShaderTex775_g174386 = staticSwitch722_g174386;
				float lerpResult739_g174386 = lerp( 1.0 , (Local_ShaderTex775_g174386).y , _ThirdOcclusionValue);
				float4 appendResult749_g174386 = (float4(( (Local_ShaderTex775_g174386).x * _ThirdMetallicValue ) , lerpResult739_g174386 , (Local_ShaderTex775_g174386).z , ( (Local_ShaderTex775_g174386).w * _ThirdSmoothnessValue )));
				half4 Local_Masks750_g174386 = appendResult749_g174386;
				float clampResult17_g174392 = clamp( (Local_Masks750_g174386).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174393 = _ThirdMultiRemap.x;
				float temp_output_10_0_g174393 = ( _ThirdMultiRemap.y - temp_output_7_0_g174393 );
				float temp_output_765_0_g174386 = saturate( ( ( clampResult17_g174392 - temp_output_7_0_g174393 ) / ( temp_output_10_0_g174393 + 0.0001 ) ) );
				half Local_MultiMask767_g174386 = temp_output_765_0_g174386;
				float lerpResult705_g174386 = lerp( 1.0 , Local_MultiMask767_g174386 , _ThirdColorMode);
				float4 lerpResult706_g174386 = lerp( _ThirdColorTwo , _ThirdColor , lerpResult705_g174386);
				half3 Local_ColorRGB774_g174386 = (lerpResult706_g174386).rgb;
				half3 Local_Albedo768_g174386 = ( Local_AlbedoRGB771_g174386 * Local_ColorRGB774_g174386 );
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174410 = 2.0;
				#else
				float staticSwitch1_g174410 = 4.594794;
				#endif
				float3 lerpResult985_g174386 = lerp( Local_Albedo768_g174386 , ( Visual_Albedo527_g174386 * Local_Albedo768_g174386 * staticSwitch1_g174410 ) , _ThirdBlendAlbedoValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174413) = _ThirdMaskTex;
				SamplerState Sampler276_g174413 = sampler_Linear_Repeat;
				half4 Local_MaskCoords813_g174386 = _third_mask_coord_value;
				float4 temp_output_37_0_g174413 = Local_MaskCoords813_g174386;
				half4 Coords276_g174413 = temp_output_37_0_g174413;
				half2 TexCoord276_g174413 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174413 = SampleMain( Texture276_g174413 , Sampler276_g174413 , Coords276_g174413 , TexCoord276_g174413 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174413) = _ThirdMaskTex;
				SamplerState Sampler275_g174413 = sampler_Linear_Repeat;
				half4 Coords275_g174413 = temp_output_37_0_g174413;
				half2 TexCoord275_g174413 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174413 = SampleExtra( Texture275_g174413 , Sampler275_g174413 , Coords275_g174413 , TexCoord275_g174413 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174413) = _ThirdMaskTex;
				SamplerState Sampler238_g174413 = sampler_Linear_Repeat;
				half4 Coords238_g174413 = temp_output_37_0_g174413;
				float3 temp_output_279_0_g174413 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174413 = temp_output_279_0_g174413;
				half4 localSamplePlanar2D238_g174413 = SamplePlanar2D( Texture238_g174413 , Sampler238_g174413 , Coords238_g174413 , WorldPosition238_g174413 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174413) = _ThirdMaskTex;
				SamplerState Sampler246_g174413 = sampler_Linear_Repeat;
				half4 Coords246_g174413 = temp_output_37_0_g174413;
				half3 WorldPosition246_g174413 = temp_output_279_0_g174413;
				float3 temp_output_280_0_g174413 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174413 = temp_output_280_0_g174413;
				half4 localSamplePlanar3D246_g174413 = SamplePlanar3D( Texture246_g174413 , Sampler246_g174413 , Coords246_g174413 , WorldPosition246_g174413 , WorldNormal246_g174413 );
				#if defined( TVE_THIRD_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch817_g174386 = localSampleMain276_g174413;
				#elif defined( TVE_THIRD_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch817_g174386 = localSampleExtra275_g174413;
				#elif defined( TVE_THIRD_MASK_SAMPLE_PLANAR_2D )
				float4 staticSwitch817_g174386 = localSamplePlanar2D238_g174413;
				#elif defined( TVE_THIRD_MASK_SAMPLE_PLANAR_3D )
				float4 staticSwitch817_g174386 = localSamplePlanar3D246_g174413;
				#else
				float4 staticSwitch817_g174386 = localSampleMain276_g174413;
				#endif
				half4 Local_MaskTex861_g174386 = staticSwitch817_g174386;
				float clampResult17_g174397 = clamp( (Local_MaskTex861_g174386).y , 0.0001 , 0.9999 );
				float temp_output_7_0_g174398 = _ThirdMaskRemap.x;
				float temp_output_10_0_g174398 = ( _ThirdMaskRemap.y - temp_output_7_0_g174398 );
				float lerpResult1028_g174386 = lerp( 1.0 , saturate( ( ( clampResult17_g174397 - temp_output_7_0_g174398 ) / ( temp_output_10_0_g174398 + 0.0001 ) ) ) , _ThirdMaskValue);
				half Detail_TexMask429_g174386 = lerpResult1028_g174386;
				half4 Model_VertexMasks960_g174386 = Out_VertexData15_g174418;
				float4 break961_g174386 = Model_VertexMasks960_g174386;
				float4 break33_g174401 = _third_vert_mode;
				float temp_output_30_0_g174401 = ( break961_g174386.x * break33_g174401.x );
				float temp_output_29_0_g174401 = ( break961_g174386.y * break33_g174401.y );
				float temp_output_31_0_g174401 = ( break961_g174386.z * break33_g174401.z );
				float temp_output_28_0_g174401 = ( temp_output_30_0_g174401 + temp_output_29_0_g174401 + temp_output_31_0_g174401 + ( break961_g174386.w * break33_g174401.w ) );
				float clampResult17_g174395 = clamp( temp_output_28_0_g174401 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174396 = _ThirdMeshRemap.x;
				float temp_output_10_0_g174396 = ( _ThirdMeshRemap.y - temp_output_7_0_g174396 );
				float lerpResult1026_g174386 = lerp( 1.0 , saturate( ( ( clampResult17_g174395 - temp_output_7_0_g174396 ) / ( temp_output_10_0_g174396 + 0.0001 ) ) ) , _ThirdMeshValue);
				float temp_output_6_0_g174412 = lerpResult1026_g174386;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174412 = ( temp_output_6_0_g174412 + ( _ThirdMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174412 = temp_output_6_0_g174412;
				#endif
				float temp_output_992_0_g174386 = staticSwitch14_g174412;
				half Blend_VertMask913_g174386 = temp_output_992_0_g174386;
				half3 Visual_NormalWS953_g174386 = Out_NormalWS4_g174402;
				float clampResult17_g174399 = clamp( saturate( (Visual_NormalWS953_g174386).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174400 = _ThirdProjRemap.x;
				float temp_output_10_0_g174400 = ( _ThirdProjRemap.y - temp_output_7_0_g174400 );
				float lerpResult1004_g174386 = lerp( 1.0 , saturate( ( ( clampResult17_g174399 - temp_output_7_0_g174400 ) / ( temp_output_10_0_g174400 + 0.0001 ) ) ) , _ThirdProjValue);
				half Blend_ProjMask912_g174386 = lerpResult1004_g174386;
				TVEGlobalData Data15_g174404 = Data204_g173897;
				float Out_Dummy15_g174404 = 0;
				float4 Out_CoatParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174404 = float4( 0,0,0,0 );
				Out_Dummy15_g174404 = Data15_g174404.Dummy;
				Out_CoatParams15_g174404 = Data15_g174404.CoatParams;
				Out_PaintParams15_g174404 = Data15_g174404.PaintParams;
				Out_GlowParams15_g174404 = Data15_g174404.GlowParams;
				Out_AtmoParams15_g174404= Data15_g174404.AtmoParams;
				Out_FadeParams15_g174404= Data15_g174404.FadeParams;
				Out_FormParams15_g174404 = Data15_g174404.FormParams;
				Out_LandParams15_g174404 = Data15_g174404.LandParams;
				Out_WindParams15_g174404 = Data15_g174404.WindParams;
				Out_PushParams15_g174404 = Data15_g174404.PushParams;
				half4 Global_CoatParams972_g174386 = Out_CoatParams15_g174404;
				float lerpResult1023_g174386 = lerp( 1.0 , (Global_CoatParams972_g174386).y , TVE_IsEnabled);
				#ifdef TVE_THIRD_ELEMENT
				float staticSwitch965_g174386 = lerpResult1023_g174386;
				#else
				float staticSwitch965_g174386 = 1.0;
				#endif
				half Blend_GlobalMask968_g174386 = staticSwitch965_g174386;
				float temp_output_432_0_g174386 = ( _ThirdIntensityValue * Detail_TexMask429_g174386 * Blend_VertMask913_g174386 * Blend_ProjMask912_g174386 * Blend_GlobalMask968_g174386 );
				float clampResult17_g174406 = clamp( temp_output_432_0_g174386 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174405 = _ThirdBlendRemap.x;
				float temp_output_10_0_g174405 = ( _ThirdBlendRemap.y - temp_output_7_0_g174405 );
				half Detail_Mask412_g174386 = ( saturate( ( ( clampResult17_g174406 - temp_output_7_0_g174405 ) / ( temp_output_10_0_g174405 + 0.0001 ) ) ) * _ThirdBlendIntensityValue );
				float3 lerpResult989_g174386 = lerp( Visual_Albedo527_g174386 , lerpResult985_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float3 staticSwitch415_g174386 = lerpResult989_g174386;
				#else
				float3 staticSwitch415_g174386 = Visual_Albedo527_g174386;
				#endif
				half3 Final_Albedo601_g174386 = staticSwitch415_g174386;
				float3 In_Albedo3_g174403 = Final_Albedo601_g174386;
				float3 In_AlbedoRaw3_g174403 = Final_Albedo601_g174386;
				half2 Visual_NormalTS529_g174386 = Out_NormalTS4_g174402;
				float2 lerpResult40_g174408 = lerp( float2( 0,0 ) , Visual_NormalTS529_g174386 , _ThirdBlendNormalValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174388) = _ThirdNormalTex;
				float localFilterTexture29_g174416 = ( 0.0 );
				SamplerState SamplerDefault29_g174416 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174416 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174416 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174416 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174416 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174416 = SamplerDefault29_g174416;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174416 = SamplerDefault29_g174416;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174416 = SamplerPoint29_g174416;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174416 = SamplerLow29_g174416;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174416 = SamplerMedium29_g174416;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174416 = SamplerHigh29_g174416;
				#endif
				SamplerState Sampler276_g174388 = SS29_g174416;
				float4 temp_output_37_0_g174388 = Local_LayerCoords790_g174386;
				half4 Coords276_g174388 = temp_output_37_0_g174388;
				half2 TexCoord276_g174388 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174388 = SampleMain( Texture276_g174388 , Sampler276_g174388 , Coords276_g174388 , TexCoord276_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174388) = _ThirdNormalTex;
				SamplerState Sampler275_g174388 = SS29_g174416;
				half4 Coords275_g174388 = temp_output_37_0_g174388;
				half2 TexCoord275_g174388 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174388 = SampleExtra( Texture275_g174388 , Sampler275_g174388 , Coords275_g174388 , TexCoord275_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174388) = _ThirdNormalTex;
				SamplerState Sampler238_g174388 = SS29_g174416;
				half4 Coords238_g174388 = temp_output_37_0_g174388;
				float3 temp_output_279_0_g174388 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174388 = temp_output_279_0_g174388;
				half4 localSamplePlanar2D238_g174388 = SamplePlanar2D( Texture238_g174388 , Sampler238_g174388 , Coords238_g174388 , WorldPosition238_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174388) = _ThirdNormalTex;
				SamplerState Sampler246_g174388 = SS29_g174416;
				half4 Coords246_g174388 = temp_output_37_0_g174388;
				half3 WorldPosition246_g174388 = temp_output_279_0_g174388;
				float3 temp_output_280_0_g174388 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174388 = temp_output_280_0_g174388;
				half4 localSamplePlanar3D246_g174388 = SamplePlanar3D( Texture246_g174388 , Sampler246_g174388 , Coords246_g174388 , WorldPosition246_g174388 , WorldNormal246_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174388) = _ThirdNormalTex;
				SamplerState Sampler234_g174388 = SS29_g174416;
				float4 Coords234_g174388 = temp_output_37_0_g174388;
				float3 WorldPosition234_g174388 = temp_output_279_0_g174388;
				float4 localSampleStochastic2D234_g174388 = SampleStochastic2D( Texture234_g174388 , Sampler234_g174388 , Coords234_g174388 , WorldPosition234_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174388) = _ThirdNormalTex;
				SamplerState Sampler263_g174388 = SS29_g174416;
				half4 Coords263_g174388 = temp_output_37_0_g174388;
				half3 WorldPosition263_g174388 = temp_output_279_0_g174388;
				half3 WorldNormal263_g174388 = temp_output_280_0_g174388;
				half4 localSampleStochastic3D263_g174388 = SampleStochastic3D( Texture263_g174388 , Sampler263_g174388 , Coords263_g174388 , WorldPosition263_g174388 , WorldNormal263_g174388 );
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float4 staticSwitch698_g174386 = localSampleMain276_g174388;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float4 staticSwitch698_g174386 = localSampleExtra275_g174388;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float4 staticSwitch698_g174386 = localSamplePlanar2D238_g174388;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float4 staticSwitch698_g174386 = localSamplePlanar3D246_g174388;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch698_g174386 = localSampleStochastic2D234_g174388;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch698_g174386 = localSampleStochastic3D263_g174388;
				#else
				float4 staticSwitch698_g174386 = localSampleMain276_g174388;
				#endif
				half4 Local_NormalTex776_g174386 = staticSwitch698_g174386;
				half4 Normal_Packed45_g174390 = Local_NormalTex776_g174386;
				float2 appendResult58_g174390 = (float2(( (Normal_Packed45_g174390).x * (Normal_Packed45_g174390).w ) , (Normal_Packed45_g174390).y));
				half2 Normal_Default50_g174390 = appendResult58_g174390;
				half2 Normal_ASTC41_g174390 = (Normal_Packed45_g174390).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174390 = Normal_ASTC41_g174390;
				#else
				float2 staticSwitch38_g174390 = Normal_Default50_g174390;
				#endif
				half2 Normal_NO_DTX544_g174390 = (Normal_Packed45_g174390).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174390 = Normal_NO_DTX544_g174390;
				#else
				float2 staticSwitch37_g174390 = staticSwitch38_g174390;
				#endif
				float2 temp_output_724_0_g174386 = ( (staticSwitch37_g174390*2.0 + -1.0) * _ThirdNormalValue );
				half2 Normal_Planar45_g174391 = temp_output_724_0_g174386;
				float2 break71_g174391 = Normal_Planar45_g174391;
				float3 appendResult72_g174391 = (float3(break71_g174391.x , 0.0 , break71_g174391.y));
				float2 temp_output_858_0_g174386 = (mul( ase_worldToTangent, appendResult72_g174391 )).xy;
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float2 staticSwitch727_g174386 = temp_output_724_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float2 staticSwitch727_g174386 = temp_output_724_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#else
				float2 staticSwitch727_g174386 = temp_output_724_0_g174386;
				#endif
				half2 Local_NormalTS729_g174386 = staticSwitch727_g174386;
				float2 temp_output_36_0_g174408 = ( lerpResult40_g174408 + Local_NormalTS729_g174386 );
				float2 lerpResult405_g174386 = lerp( Visual_NormalTS529_g174386 , temp_output_36_0_g174408 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float2 staticSwitch418_g174386 = lerpResult405_g174386;
				#else
				float2 staticSwitch418_g174386 = Visual_NormalTS529_g174386;
				#endif
				half2 Final_NormalTS612_g174386 = staticSwitch418_g174386;
				float2 In_NormalTS3_g174403 = Final_NormalTS612_g174386;
				float3 appendResult68_g174409 = (float3(Final_NormalTS612_g174386 , 1.0));
				float3 tanNormal74_g174409 = appendResult68_g174409;
				float3 worldNormal74_g174409 = normalize( float3(dot(tanToWorld0,tanNormal74_g174409), dot(tanToWorld1,tanNormal74_g174409), dot(tanToWorld2,tanNormal74_g174409)) );
				half3 Final_NormalWS956_g174386 = worldNormal74_g174409;
				float3 In_NormalWS3_g174403 = Final_NormalWS956_g174386;
				half4 Visual_Shader531_g174386 = Out_Shader4_g174402;
				float4 lerpResult1000_g174386 = lerp( Local_Masks750_g174386 , ( Visual_Shader531_g174386 * Local_Masks750_g174386 ) , _ThirdBlendShaderValue);
				float4 lerpResult998_g174386 = lerp( Visual_Shader531_g174386 , lerpResult1000_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float4 staticSwitch451_g174386 = lerpResult998_g174386;
				#else
				float4 staticSwitch451_g174386 = Visual_Shader531_g174386;
				#endif
				half4 Final_Masks613_g174386 = staticSwitch451_g174386;
				float4 In_Shader3_g174403 = Final_Masks613_g174386;
				float4 In_Emissive3_g174403 = Out_Emissive4_g174402;
				float3 temp_output_3_0_g174411 = Final_Albedo601_g174386;
				float dotResult20_g174411 = dot( temp_output_3_0_g174411 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale615_g174386 = dotResult20_g174411;
				float In_Grayscale3_g174403 = Final_Grayscale615_g174386;
				float clampResult651_g174386 = clamp( saturate( ( Final_Grayscale615_g174386 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity652_g174386 = clampResult651_g174386;
				float In_Luminosity3_g174403 = Final_Luminosity652_g174386;
				half Visual_MultiMask547_g174386 = Out_MultiMask4_g174402;
				float lerpResult477_g174386 = lerp( Visual_MultiMask547_g174386 , Local_MultiMask767_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float staticSwitch482_g174386 = lerpResult477_g174386;
				#else
				float staticSwitch482_g174386 = Visual_MultiMask547_g174386;
				#endif
				half Final_MultiMask572_g174386 = staticSwitch482_g174386;
				float In_MultiMask3_g174403 = Final_MultiMask572_g174386;
				half Visual_AlphaClip559_g174386 = Out_AlphaClip4_g174402;
				float temp_output_718_0_g174386 = (Local_AlbedoTex777_g174386).w;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch924_g174386 = ( temp_output_718_0_g174386 - _ThirdAlphaClipValue );
				#else
				float staticSwitch924_g174386 = temp_output_718_0_g174386;
				#endif
				half Local_AlphaClip772_g174386 = staticSwitch924_g174386;
				float lerpResult448_g174386 = lerp( Visual_AlphaClip559_g174386 , Local_AlphaClip772_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float staticSwitch564_g174386 = lerpResult448_g174386;
				#else
				float staticSwitch564_g174386 = Visual_AlphaClip559_g174386;
				#endif
				half Final_AlphaClip602_g174386 = staticSwitch564_g174386;
				float In_AlphaClip3_g174403 = Final_AlphaClip602_g174386;
				half Visual_AlphaFade588_g174386 = Out_AlphaFade4_g174402;
				half Local_AlphaFade773_g174386 = (lerpResult706_g174386).a;
				float lerpResult604_g174386 = lerp( Visual_AlphaFade588_g174386 , Local_AlphaFade773_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float staticSwitch608_g174386 = lerpResult604_g174386;
				#else
				float staticSwitch608_g174386 = Visual_AlphaFade588_g174386;
				#endif
				half Final_AlphaFade611_g174386 = staticSwitch608_g174386;
				float In_AlphaFade3_g174403 = Final_AlphaFade611_g174386;
				float3 In_Translucency3_g174403 = Out_Translucency4_g174402;
				float In_Transmission3_g174403 = Out_Transmission4_g174402;
				float In_Thickness3_g174403 = Out_Thickness4_g174402;
				float In_Diffusion3_g174403 = Out_Diffusion4_g174402;
				Data3_g174403.Dummy = In_Dummy3_g174403;
				Data3_g174403.Albedo = In_Albedo3_g174403;
				Data3_g174403.AlbedoRaw = In_AlbedoRaw3_g174403;
				Data3_g174403.NormalTS = In_NormalTS3_g174403;
				Data3_g174403.NormalWS = In_NormalWS3_g174403;
				Data3_g174403.Shader = In_Shader3_g174403;
				Data3_g174403.Emissive= In_Emissive3_g174403;
				Data3_g174403.MultiMask = In_MultiMask3_g174403;
				Data3_g174403.Grayscale = In_Grayscale3_g174403;
				Data3_g174403.Luminosity = In_Luminosity3_g174403;
				Data3_g174403.AlphaClip = In_AlphaClip3_g174403;
				Data3_g174403.AlphaFade = In_AlphaFade3_g174403;
				Data3_g174403.Translucency = In_Translucency3_g174403;
				Data3_g174403.Transmission = In_Transmission3_g174403;
				Data3_g174403.Thickness = In_Thickness3_g174403;
				Data3_g174403.Diffusion = In_Diffusion3_g174403;
				TVEVisualData Data4_g174428 = Data3_g174403;
				float Out_Dummy4_g174428 = 0;
				float3 Out_Albedo4_g174428 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174428 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174428 = float2( 0,0 );
				float3 Out_NormalWS4_g174428 = float3( 0,0,0 );
				float4 Out_Shader4_g174428 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174428 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174428 = 0;
				float Out_Grayscale4_g174428 = 0;
				float Out_Luminosity4_g174428 = 0;
				float Out_AlphaClip4_g174428 = 0;
				float Out_AlphaFade4_g174428 = 0;
				float3 Out_Translucency4_g174428 = float3( 0,0,0 );
				float Out_Transmission4_g174428 = 0;
				float Out_Thickness4_g174428 = 0;
				float Out_Diffusion4_g174428 = 0;
				Out_Dummy4_g174428 = Data4_g174428.Dummy;
				Out_Albedo4_g174428 = Data4_g174428.Albedo;
				Out_AlbedoRaw4_g174428 = Data4_g174428.AlbedoRaw;
				Out_NormalTS4_g174428 = Data4_g174428.NormalTS;
				Out_NormalWS4_g174428 = Data4_g174428.NormalWS;
				Out_Shader4_g174428 = Data4_g174428.Shader;
				Out_Emissive4_g174428= Data4_g174428.Emissive;
				Out_MultiMask4_g174428 = Data4_g174428.MultiMask;
				Out_Grayscale4_g174428 = Data4_g174428.Grayscale;
				Out_Luminosity4_g174428= Data4_g174428.Luminosity;
				Out_AlphaClip4_g174428 = Data4_g174428.AlphaClip;
				Out_AlphaFade4_g174428 = Data4_g174428.AlphaFade;
				Out_Translucency4_g174428 = Data4_g174428.Translucency;
				Out_Transmission4_g174428 = Data4_g174428.Transmission;
				Out_Thickness4_g174428 = Data4_g174428.Thickness;
				Out_Diffusion4_g174428 = Data4_g174428.Diffusion;
				half3 Visual_Albedo527_g174425 = Out_Albedo4_g174428;
				float localHeightBasedBlending7362_g174452 = ( 0.0 );
				float4 appendResult9125_g174452 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
				float4 temp_output_35_0_g174560 = appendResult9125_g174452;
				float2 InputScale48_g174560 = (temp_output_35_0_g174560).zw;
				half2 FinalScale53_g174560 = ( 1.0 / InputScale48_g174560 );
				float2 InputPosition52_g174560 = (temp_output_35_0_g174560).xy;
				half2 FinalPosition58_g174560 = -( FinalScale53_g174560 * InputPosition52_g174560 );
				float2 temp_output_65_0_g174560 = ( ( (worldPos).xz * FinalScale53_g174560 ) + FinalPosition58_g174560 );
				float4 temp_output_70_0_g174560 = _TerrainControlTex1_TexelSize;
				float2 InputTexelSize68_g174560 = (temp_output_70_0_g174560).zw;
				float2 temp_cast_37 = (1.0).xx;
				float2 InputTexelRecip69_g174560 = (temp_output_70_0_g174560).xy;
				float2 Terrain_Control_UV7873_g174452 = ( ( ( temp_output_65_0_g174560 / ( 1.0 / ( InputTexelSize68_g174560 - temp_cast_37 ) ) ) + 0.5 ) * InputTexelRecip69_g174560 );
				half4 Terrain_Control_047365_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_047362_g174452 = Terrain_Control_047365_g174452;
				half4 Terrain_Control_087366_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_087362_g174452 = Terrain_Control_087366_g174452;
				half4 Terrain_Control_127712_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_127362_g174452 = Terrain_Control_127712_g174452;
				half4 Terrain_Control_167711_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_167362_g174452 = Terrain_Control_167711_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174497) = _TerrainShaderTex1;
				float localFilterTexture30_g174557 = ( 0.0 );
				SamplerState SamplerDefault30_g174557 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174557 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174557 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174557 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174557 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174557 = SamplerDefault30_g174557;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174557 = SamplerDefault30_g174557;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174557 = SamplerPoint30_g174557;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174557 = SamplerLow30_g174557;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174557 = SamplerMedium30_g174557;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174557 = SamplerHigh30_g174557;
				#endif
				SamplerState Sampler238_g174497 = SS30_g174557;
				half4 Input_Terrain_Coords_016785_g174452 = _TerrainCoord1;
				float4 temp_output_37_0_g174497 = Input_Terrain_Coords_016785_g174452;
				half4 Coords238_g174497 = temp_output_37_0_g174497;
				TVEModelData Data15_g174562 = Data16_g164566;
				float Out_Dummy15_g174562 = 0;
				float3 Out_PositionWS15_g174562 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174562 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174562 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174562 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174562 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174562 = float3( 0,0,0 );
				float4 Out_VertexData15_g174562 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174562 = float4( 0,0,0,0 );
				Out_Dummy15_g174562 = Data15_g174562.Dummy;
				Out_PositionWS15_g174562 = Data15_g174562.PositionWS;
				Out_PositionWO15_g174562 = Data15_g174562.PositionWO;
				Out_PivotWS15_g174562 = Data15_g174562.PivotWS;
				Out_PivotWO15_g174562 = Data15_g174562.PivotWO;
				Out_NormalWS15_g174562 = Data15_g174562.NormalWS;
				Out_ViewDirWS15_g174562 = Data15_g174562.ViewDirWS;
				Out_VertexData15_g174562 = Data15_g174562.VertexData;
				Out_BoundsData15_g174562 = Data15_g174562.BoundsData;
				half3 Model_PositionWO636_g174425 = Out_PositionWO15_g174562;
				half3 Input_Position9197_g174452 = Model_PositionWO636_g174425;
				float3 temp_output_279_0_g174497 = Input_Position9197_g174452;
				half3 WorldPosition238_g174497 = temp_output_279_0_g174497;
				half4 localSamplePlanar2D238_g174497 = SamplePlanar2D( Texture238_g174497 , Sampler238_g174497 , Coords238_g174497 , WorldPosition238_g174497 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174497) = _TerrainShaderTex1;
				SamplerState Sampler246_g174497 = SS30_g174557;
				half4 Coords246_g174497 = temp_output_37_0_g174497;
				half3 WorldPosition246_g174497 = temp_output_279_0_g174497;
				half3 Model_NormalRawWS869_g174425 = Out_NormalWS15_g174562;
				half3 Input_Normal9199_g174452 = Model_NormalRawWS869_g174425;
				float3 temp_output_280_0_g174497 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174497 = temp_output_280_0_g174497;
				half4 localSamplePlanar3D246_g174497 = SamplePlanar3D( Texture246_g174497 , Sampler246_g174497 , Coords246_g174497 , WorldPosition246_g174497 , WorldNormal246_g174497 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174497) = _TerrainShaderTex1;
				SamplerState Sampler234_g174497 = SS30_g174557;
				float4 Coords234_g174497 = temp_output_37_0_g174497;
				float3 WorldPosition234_g174497 = temp_output_279_0_g174497;
				float4 localSampleStochastic2D234_g174497 = SampleStochastic2D( Texture234_g174497 , Sampler234_g174497 , Coords234_g174497 , WorldPosition234_g174497 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174497) = _TerrainShaderTex1;
				SamplerState Sampler263_g174497 = SS30_g174557;
				half4 Coords263_g174497 = temp_output_37_0_g174497;
				half3 WorldPosition263_g174497 = temp_output_279_0_g174497;
				half3 WorldNormal263_g174497 = temp_output_280_0_g174497;
				half4 localSampleStochastic3D263_g174497 = SampleStochastic3D( Texture263_g174497 , Sampler263_g174497 , Coords263_g174497 , WorldPosition263_g174497 , WorldNormal263_g174497 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8639_g174452 = localSamplePlanar2D238_g174497;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8639_g174452 = localSamplePlanar3D246_g174497;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8639_g174452 = localSampleStochastic2D234_g174497;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8639_g174452 = localSampleStochastic3D263_g174497;
				#else
				float4 staticSwitch8639_g174452 = localSamplePlanar2D238_g174497;
				#endif
				float4 temp_output_7_0_g174454 = _TerrainShaderMin1;
				float4 temp_output_10_0_g174454 = ( _TerrainShaderMax1 - temp_output_7_0_g174454 );
				float4 temp_output_6970_0_g174452 = saturate( ( ( staticSwitch8639_g174452 - temp_output_7_0_g174454 ) / ( temp_output_10_0_g174454 + 0.0001 ) ) );
				half4 Masks_015_g174458 = temp_output_6970_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174501) = _TerrainShaderTex2;
				SamplerState Sampler238_g174501 = SS30_g174557;
				half4 Input_Terrain_Coords_026787_g174452 = _TerrainCoord2;
				float4 temp_output_37_0_g174501 = Input_Terrain_Coords_026787_g174452;
				half4 Coords238_g174501 = temp_output_37_0_g174501;
				float3 temp_output_279_0_g174501 = Input_Position9197_g174452;
				half3 WorldPosition238_g174501 = temp_output_279_0_g174501;
				half4 localSamplePlanar2D238_g174501 = SamplePlanar2D( Texture238_g174501 , Sampler238_g174501 , Coords238_g174501 , WorldPosition238_g174501 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174501) = _TerrainShaderTex2;
				SamplerState Sampler246_g174501 = SS30_g174557;
				half4 Coords246_g174501 = temp_output_37_0_g174501;
				half3 WorldPosition246_g174501 = temp_output_279_0_g174501;
				float3 temp_output_280_0_g174501 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174501 = temp_output_280_0_g174501;
				half4 localSamplePlanar3D246_g174501 = SamplePlanar3D( Texture246_g174501 , Sampler246_g174501 , Coords246_g174501 , WorldPosition246_g174501 , WorldNormal246_g174501 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174501) = _TerrainShaderTex2;
				SamplerState Sampler234_g174501 = SS30_g174557;
				float4 Coords234_g174501 = temp_output_37_0_g174501;
				float3 WorldPosition234_g174501 = temp_output_279_0_g174501;
				float4 localSampleStochastic2D234_g174501 = SampleStochastic2D( Texture234_g174501 , Sampler234_g174501 , Coords234_g174501 , WorldPosition234_g174501 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174501) = _TerrainShaderTex2;
				SamplerState Sampler263_g174501 = SS30_g174557;
				half4 Coords263_g174501 = temp_output_37_0_g174501;
				half3 WorldPosition263_g174501 = temp_output_279_0_g174501;
				half3 WorldNormal263_g174501 = temp_output_280_0_g174501;
				half4 localSampleStochastic3D263_g174501 = SampleStochastic3D( Texture263_g174501 , Sampler263_g174501 , Coords263_g174501 , WorldPosition263_g174501 , WorldNormal263_g174501 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8640_g174452 = localSamplePlanar2D238_g174501;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8640_g174452 = localSamplePlanar3D246_g174501;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8640_g174452 = localSampleStochastic2D234_g174501;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8640_g174452 = localSampleStochastic3D263_g174501;
				#else
				float4 staticSwitch8640_g174452 = localSamplePlanar2D238_g174501;
				#endif
				float4 temp_output_7_0_g174464 = _TerrainShaderMin2;
				float4 temp_output_10_0_g174464 = ( _TerrainShaderMax2 - temp_output_7_0_g174464 );
				float4 temp_output_6977_0_g174452 = saturate( ( ( staticSwitch8640_g174452 - temp_output_7_0_g174464 ) / ( temp_output_10_0_g174464 + 0.0001 ) ) );
				half4 Masks_0210_g174458 = temp_output_6977_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174506) = _TerrainShaderTex3;
				SamplerState Sampler238_g174506 = SS30_g174557;
				half4 Input_Terrain_Coords_036789_g174452 = _TerrainCoord3;
				float4 temp_output_37_0_g174506 = Input_Terrain_Coords_036789_g174452;
				half4 Coords238_g174506 = temp_output_37_0_g174506;
				float3 temp_output_279_0_g174506 = Input_Position9197_g174452;
				half3 WorldPosition238_g174506 = temp_output_279_0_g174506;
				half4 localSamplePlanar2D238_g174506 = SamplePlanar2D( Texture238_g174506 , Sampler238_g174506 , Coords238_g174506 , WorldPosition238_g174506 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174506) = _TerrainShaderTex3;
				SamplerState Sampler246_g174506 = SS30_g174557;
				half4 Coords246_g174506 = temp_output_37_0_g174506;
				half3 WorldPosition246_g174506 = temp_output_279_0_g174506;
				float3 temp_output_280_0_g174506 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174506 = temp_output_280_0_g174506;
				half4 localSamplePlanar3D246_g174506 = SamplePlanar3D( Texture246_g174506 , Sampler246_g174506 , Coords246_g174506 , WorldPosition246_g174506 , WorldNormal246_g174506 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174506) = _TerrainShaderTex3;
				SamplerState Sampler234_g174506 = SS30_g174557;
				float4 Coords234_g174506 = temp_output_37_0_g174506;
				float3 WorldPosition234_g174506 = temp_output_279_0_g174506;
				float4 localSampleStochastic2D234_g174506 = SampleStochastic2D( Texture234_g174506 , Sampler234_g174506 , Coords234_g174506 , WorldPosition234_g174506 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174506) = _TerrainShaderTex3;
				SamplerState Sampler263_g174506 = SS30_g174557;
				half4 Coords263_g174506 = temp_output_37_0_g174506;
				half3 WorldPosition263_g174506 = temp_output_279_0_g174506;
				half3 WorldNormal263_g174506 = temp_output_280_0_g174506;
				half4 localSampleStochastic3D263_g174506 = SampleStochastic3D( Texture263_g174506 , Sampler263_g174506 , Coords263_g174506 , WorldPosition263_g174506 , WorldNormal263_g174506 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8641_g174452 = localSamplePlanar2D238_g174506;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8641_g174452 = localSamplePlanar3D246_g174506;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8641_g174452 = localSampleStochastic2D234_g174506;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8641_g174452 = localSampleStochastic3D263_g174506;
				#else
				float4 staticSwitch8641_g174452 = localSamplePlanar2D238_g174506;
				#endif
				float4 temp_output_7_0_g174465 = _TerrainShaderMin3;
				float4 temp_output_10_0_g174465 = ( _TerrainShaderMax3 - temp_output_7_0_g174465 );
				float4 temp_output_6978_0_g174452 = saturate( ( ( staticSwitch8641_g174452 - temp_output_7_0_g174465 ) / ( temp_output_10_0_g174465 + 0.0001 ) ) );
				half4 Masks_0312_g174458 = temp_output_6978_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174507) = _TerrainShaderTex4;
				SamplerState Sampler238_g174507 = SS30_g174557;
				half4 Input_Terrain_Coords_046791_g174452 = _TerrainCoord4;
				float4 temp_output_37_0_g174507 = Input_Terrain_Coords_046791_g174452;
				half4 Coords238_g174507 = temp_output_37_0_g174507;
				float3 temp_output_279_0_g174507 = Input_Position9197_g174452;
				half3 WorldPosition238_g174507 = temp_output_279_0_g174507;
				half4 localSamplePlanar2D238_g174507 = SamplePlanar2D( Texture238_g174507 , Sampler238_g174507 , Coords238_g174507 , WorldPosition238_g174507 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174507) = _TerrainShaderTex4;
				SamplerState Sampler246_g174507 = SS30_g174557;
				half4 Coords246_g174507 = temp_output_37_0_g174507;
				half3 WorldPosition246_g174507 = temp_output_279_0_g174507;
				float3 temp_output_280_0_g174507 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174507 = temp_output_280_0_g174507;
				half4 localSamplePlanar3D246_g174507 = SamplePlanar3D( Texture246_g174507 , Sampler246_g174507 , Coords246_g174507 , WorldPosition246_g174507 , WorldNormal246_g174507 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174507) = _TerrainShaderTex4;
				SamplerState Sampler234_g174507 = SS30_g174557;
				float4 Coords234_g174507 = temp_output_37_0_g174507;
				float3 WorldPosition234_g174507 = temp_output_279_0_g174507;
				float4 localSampleStochastic2D234_g174507 = SampleStochastic2D( Texture234_g174507 , Sampler234_g174507 , Coords234_g174507 , WorldPosition234_g174507 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174507) = _TerrainShaderTex4;
				SamplerState Sampler263_g174507 = SS30_g174557;
				half4 Coords263_g174507 = temp_output_37_0_g174507;
				half3 WorldPosition263_g174507 = temp_output_279_0_g174507;
				half3 WorldNormal263_g174507 = temp_output_280_0_g174507;
				half4 localSampleStochastic3D263_g174507 = SampleStochastic3D( Texture263_g174507 , Sampler263_g174507 , Coords263_g174507 , WorldPosition263_g174507 , WorldNormal263_g174507 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8642_g174452 = localSamplePlanar2D238_g174507;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8642_g174452 = localSamplePlanar3D246_g174507;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8642_g174452 = localSampleStochastic2D234_g174507;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8642_g174452 = localSampleStochastic3D263_g174507;
				#else
				float4 staticSwitch8642_g174452 = localSamplePlanar2D238_g174507;
				#endif
				float4 temp_output_7_0_g174466 = _TerrainShaderMin4;
				float4 temp_output_10_0_g174466 = ( _TerrainShaderMax4 - temp_output_7_0_g174466 );
				float4 temp_output_6983_0_g174452 = saturate( ( ( staticSwitch8642_g174452 - temp_output_7_0_g174466 ) / ( temp_output_10_0_g174466 + 0.0001 ) ) );
				half4 Masks_0414_g174458 = temp_output_6983_0_g174452;
				float4 appendResult29_g174458 = (float4((Masks_015_g174458).z , (Masks_0210_g174458).z , (Masks_0312_g174458).z , (Masks_0414_g174458).z));
				half4 Control31_g174458 = Terrain_Control_047365_g174452;
				half4 Terrain_Height_047210_g174452 = ( appendResult29_g174458 * Control31_g174458 );
				float4 heights_047362_g174452 = Terrain_Height_047210_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174510) = _TerrainShaderTex5;
				SamplerState Sampler238_g174510 = SS30_g174557;
				half4 Input_Terrain_Coords_058750_g174452 = _TerrainCoord5;
				float4 temp_output_37_0_g174510 = Input_Terrain_Coords_058750_g174452;
				half4 Coords238_g174510 = temp_output_37_0_g174510;
				float3 temp_output_279_0_g174510 = Input_Position9197_g174452;
				half3 WorldPosition238_g174510 = temp_output_279_0_g174510;
				half4 localSamplePlanar2D238_g174510 = SamplePlanar2D( Texture238_g174510 , Sampler238_g174510 , Coords238_g174510 , WorldPosition238_g174510 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174510) = _TerrainShaderTex5;
				SamplerState Sampler246_g174510 = SS30_g174557;
				half4 Coords246_g174510 = temp_output_37_0_g174510;
				half3 WorldPosition246_g174510 = temp_output_279_0_g174510;
				float3 temp_output_280_0_g174510 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174510 = temp_output_280_0_g174510;
				half4 localSamplePlanar3D246_g174510 = SamplePlanar3D( Texture246_g174510 , Sampler246_g174510 , Coords246_g174510 , WorldPosition246_g174510 , WorldNormal246_g174510 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174510) = _TerrainShaderTex5;
				SamplerState Sampler234_g174510 = SS30_g174557;
				float4 Coords234_g174510 = temp_output_37_0_g174510;
				float3 WorldPosition234_g174510 = temp_output_279_0_g174510;
				float4 localSampleStochastic2D234_g174510 = SampleStochastic2D( Texture234_g174510 , Sampler234_g174510 , Coords234_g174510 , WorldPosition234_g174510 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174510) = _TerrainShaderTex5;
				SamplerState Sampler263_g174510 = SS30_g174557;
				half4 Coords263_g174510 = temp_output_37_0_g174510;
				half3 WorldPosition263_g174510 = temp_output_279_0_g174510;
				half3 WorldNormal263_g174510 = temp_output_280_0_g174510;
				half4 localSampleStochastic3D263_g174510 = SampleStochastic3D( Texture263_g174510 , Sampler263_g174510 , Coords263_g174510 , WorldPosition263_g174510 , WorldNormal263_g174510 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8710_g174452 = localSamplePlanar2D238_g174510;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8710_g174452 = localSamplePlanar3D246_g174510;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8710_g174452 = localSampleStochastic2D234_g174510;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8710_g174452 = localSampleStochastic3D263_g174510;
				#else
				float4 staticSwitch8710_g174452 = localSamplePlanar2D238_g174510;
				#endif
				float4 temp_output_7_0_g174469 = _TerrainShaderMin5;
				float4 temp_output_10_0_g174469 = ( _TerrainShaderMax5 - temp_output_7_0_g174469 );
				float4 temp_output_8714_0_g174452 = saturate( ( ( staticSwitch8710_g174452 - temp_output_7_0_g174469 ) / ( temp_output_10_0_g174469 + 0.0001 ) ) );
				half4 Masks_015_g174470 = temp_output_8714_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174541) = _TerrainShaderTex6;
				SamplerState Sampler238_g174541 = SS30_g174557;
				half4 Input_Terrain_Coords_068751_g174452 = _TerrainCoord6;
				float4 temp_output_37_0_g174541 = Input_Terrain_Coords_068751_g174452;
				half4 Coords238_g174541 = temp_output_37_0_g174541;
				float3 temp_output_279_0_g174541 = Input_Position9197_g174452;
				half3 WorldPosition238_g174541 = temp_output_279_0_g174541;
				half4 localSamplePlanar2D238_g174541 = SamplePlanar2D( Texture238_g174541 , Sampler238_g174541 , Coords238_g174541 , WorldPosition238_g174541 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174541) = _TerrainShaderTex6;
				SamplerState Sampler246_g174541 = SS30_g174557;
				half4 Coords246_g174541 = temp_output_37_0_g174541;
				half3 WorldPosition246_g174541 = temp_output_279_0_g174541;
				float3 temp_output_280_0_g174541 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174541 = temp_output_280_0_g174541;
				half4 localSamplePlanar3D246_g174541 = SamplePlanar3D( Texture246_g174541 , Sampler246_g174541 , Coords246_g174541 , WorldPosition246_g174541 , WorldNormal246_g174541 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174541) = _TerrainShaderTex6;
				SamplerState Sampler234_g174541 = SS30_g174557;
				float4 Coords234_g174541 = temp_output_37_0_g174541;
				float3 WorldPosition234_g174541 = temp_output_279_0_g174541;
				float4 localSampleStochastic2D234_g174541 = SampleStochastic2D( Texture234_g174541 , Sampler234_g174541 , Coords234_g174541 , WorldPosition234_g174541 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174541) = _TerrainShaderTex6;
				SamplerState Sampler263_g174541 = SS30_g174557;
				half4 Coords263_g174541 = temp_output_37_0_g174541;
				half3 WorldPosition263_g174541 = temp_output_279_0_g174541;
				half3 WorldNormal263_g174541 = temp_output_280_0_g174541;
				half4 localSampleStochastic3D263_g174541 = SampleStochastic3D( Texture263_g174541 , Sampler263_g174541 , Coords263_g174541 , WorldPosition263_g174541 , WorldNormal263_g174541 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8711_g174452 = localSamplePlanar2D238_g174541;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8711_g174452 = localSamplePlanar3D246_g174541;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8711_g174452 = localSampleStochastic2D234_g174541;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8711_g174452 = localSampleStochastic3D263_g174541;
				#else
				float4 staticSwitch8711_g174452 = localSamplePlanar2D238_g174541;
				#endif
				float4 temp_output_7_0_g174494 = _TerrainShaderMin6;
				float4 temp_output_10_0_g174494 = ( _TerrainShaderMax6 - temp_output_7_0_g174494 );
				float4 temp_output_8721_0_g174452 = saturate( ( ( staticSwitch8711_g174452 - temp_output_7_0_g174494 ) / ( temp_output_10_0_g174494 + 0.0001 ) ) );
				half4 Masks_0210_g174470 = temp_output_8721_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174542) = _TerrainShaderTex7;
				SamplerState Sampler238_g174542 = SS30_g174557;
				half4 Input_Terrain_Coords_078752_g174452 = _TerrainCoord7;
				float4 temp_output_37_0_g174542 = Input_Terrain_Coords_078752_g174452;
				half4 Coords238_g174542 = temp_output_37_0_g174542;
				float3 temp_output_279_0_g174542 = Input_Position9197_g174452;
				half3 WorldPosition238_g174542 = temp_output_279_0_g174542;
				half4 localSamplePlanar2D238_g174542 = SamplePlanar2D( Texture238_g174542 , Sampler238_g174542 , Coords238_g174542 , WorldPosition238_g174542 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174542) = _TerrainShaderTex7;
				SamplerState Sampler246_g174542 = SS30_g174557;
				half4 Coords246_g174542 = temp_output_37_0_g174542;
				half3 WorldPosition246_g174542 = temp_output_279_0_g174542;
				float3 temp_output_280_0_g174542 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174542 = temp_output_280_0_g174542;
				half4 localSamplePlanar3D246_g174542 = SamplePlanar3D( Texture246_g174542 , Sampler246_g174542 , Coords246_g174542 , WorldPosition246_g174542 , WorldNormal246_g174542 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174542) = _TerrainShaderTex7;
				SamplerState Sampler234_g174542 = SS30_g174557;
				float4 Coords234_g174542 = temp_output_37_0_g174542;
				float3 WorldPosition234_g174542 = temp_output_279_0_g174542;
				float4 localSampleStochastic2D234_g174542 = SampleStochastic2D( Texture234_g174542 , Sampler234_g174542 , Coords234_g174542 , WorldPosition234_g174542 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174542) = _TerrainShaderTex7;
				SamplerState Sampler263_g174542 = SS30_g174557;
				half4 Coords263_g174542 = temp_output_37_0_g174542;
				half3 WorldPosition263_g174542 = temp_output_279_0_g174542;
				half3 WorldNormal263_g174542 = temp_output_280_0_g174542;
				half4 localSampleStochastic3D263_g174542 = SampleStochastic3D( Texture263_g174542 , Sampler263_g174542 , Coords263_g174542 , WorldPosition263_g174542 , WorldNormal263_g174542 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8712_g174452 = localSamplePlanar2D238_g174542;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8712_g174452 = localSamplePlanar3D246_g174542;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8712_g174452 = localSampleStochastic2D234_g174542;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8712_g174452 = localSampleStochastic3D263_g174542;
				#else
				float4 staticSwitch8712_g174452 = localSamplePlanar2D238_g174542;
				#endif
				float4 temp_output_7_0_g174495 = _TerrainShaderMin7;
				float4 temp_output_10_0_g174495 = ( _TerrainShaderMax7 - temp_output_7_0_g174495 );
				float4 temp_output_8724_0_g174452 = saturate( ( ( staticSwitch8712_g174452 - temp_output_7_0_g174495 ) / ( temp_output_10_0_g174495 + 0.0001 ) ) );
				half4 Masks_0312_g174470 = temp_output_8724_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174543) = _TerrainShaderTex8;
				SamplerState Sampler238_g174543 = SS30_g174557;
				half4 Input_Terrain_Coords_088749_g174452 = _TerrainCoord8;
				float4 temp_output_37_0_g174543 = Input_Terrain_Coords_088749_g174452;
				half4 Coords238_g174543 = temp_output_37_0_g174543;
				float3 temp_output_279_0_g174543 = Input_Position9197_g174452;
				half3 WorldPosition238_g174543 = temp_output_279_0_g174543;
				half4 localSamplePlanar2D238_g174543 = SamplePlanar2D( Texture238_g174543 , Sampler238_g174543 , Coords238_g174543 , WorldPosition238_g174543 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174543) = _TerrainShaderTex8;
				SamplerState Sampler246_g174543 = SS30_g174557;
				half4 Coords246_g174543 = temp_output_37_0_g174543;
				half3 WorldPosition246_g174543 = temp_output_279_0_g174543;
				float3 temp_output_280_0_g174543 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174543 = temp_output_280_0_g174543;
				half4 localSamplePlanar3D246_g174543 = SamplePlanar3D( Texture246_g174543 , Sampler246_g174543 , Coords246_g174543 , WorldPosition246_g174543 , WorldNormal246_g174543 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174543) = _TerrainShaderTex8;
				SamplerState Sampler234_g174543 = SS30_g174557;
				float4 Coords234_g174543 = temp_output_37_0_g174543;
				float3 WorldPosition234_g174543 = temp_output_279_0_g174543;
				float4 localSampleStochastic2D234_g174543 = SampleStochastic2D( Texture234_g174543 , Sampler234_g174543 , Coords234_g174543 , WorldPosition234_g174543 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174543) = _TerrainShaderTex8;
				SamplerState Sampler263_g174543 = SS30_g174557;
				half4 Coords263_g174543 = temp_output_37_0_g174543;
				half3 WorldPosition263_g174543 = temp_output_279_0_g174543;
				half3 WorldNormal263_g174543 = temp_output_280_0_g174543;
				half4 localSampleStochastic3D263_g174543 = SampleStochastic3D( Texture263_g174543 , Sampler263_g174543 , Coords263_g174543 , WorldPosition263_g174543 , WorldNormal263_g174543 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8713_g174452 = localSamplePlanar2D238_g174543;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8713_g174452 = localSamplePlanar3D246_g174543;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8713_g174452 = localSampleStochastic2D234_g174543;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8713_g174452 = localSampleStochastic3D263_g174543;
				#else
				float4 staticSwitch8713_g174452 = localSamplePlanar2D238_g174543;
				#endif
				float4 temp_output_7_0_g174496 = _TerrainShaderMin8;
				float4 temp_output_10_0_g174496 = ( _TerrainShaderMax8 - temp_output_7_0_g174496 );
				float4 temp_output_8727_0_g174452 = saturate( ( ( staticSwitch8713_g174452 - temp_output_7_0_g174496 ) / ( temp_output_10_0_g174496 + 0.0001 ) ) );
				half4 Masks_0414_g174470 = temp_output_8727_0_g174452;
				float4 appendResult29_g174470 = (float4((Masks_015_g174470).z , (Masks_0210_g174470).z , (Masks_0312_g174470).z , (Masks_0414_g174470).z));
				half4 Control31_g174470 = Terrain_Control_087366_g174452;
				half4 Terrain_Height_088731_g174452 = ( appendResult29_g174470 * Control31_g174470 );
				float4 heights_087362_g174452 = Terrain_Height_088731_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174513) = _TerrainShaderTex9;
				SamplerState Sampler238_g174513 = SS30_g174557;
				half4 Input_Terrain_Coords_098833_g174452 = _TerrainCoord9;
				float4 temp_output_37_0_g174513 = Input_Terrain_Coords_098833_g174452;
				half4 Coords238_g174513 = temp_output_37_0_g174513;
				float3 temp_output_279_0_g174513 = Input_Position9197_g174452;
				half3 WorldPosition238_g174513 = temp_output_279_0_g174513;
				half4 localSamplePlanar2D238_g174513 = SamplePlanar2D( Texture238_g174513 , Sampler238_g174513 , Coords238_g174513 , WorldPosition238_g174513 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174513) = _TerrainShaderTex9;
				SamplerState Sampler246_g174513 = SS30_g174557;
				half4 Coords246_g174513 = temp_output_37_0_g174513;
				half3 WorldPosition246_g174513 = temp_output_279_0_g174513;
				float3 temp_output_280_0_g174513 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174513 = temp_output_280_0_g174513;
				half4 localSamplePlanar3D246_g174513 = SamplePlanar3D( Texture246_g174513 , Sampler246_g174513 , Coords246_g174513 , WorldPosition246_g174513 , WorldNormal246_g174513 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174513) = _TerrainShaderTex9;
				SamplerState Sampler234_g174513 = SS30_g174557;
				float4 Coords234_g174513 = temp_output_37_0_g174513;
				float3 WorldPosition234_g174513 = temp_output_279_0_g174513;
				float4 localSampleStochastic2D234_g174513 = SampleStochastic2D( Texture234_g174513 , Sampler234_g174513 , Coords234_g174513 , WorldPosition234_g174513 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174513) = _TerrainShaderTex9;
				SamplerState Sampler263_g174513 = SS30_g174557;
				half4 Coords263_g174513 = temp_output_37_0_g174513;
				half3 WorldPosition263_g174513 = temp_output_279_0_g174513;
				half3 WorldNormal263_g174513 = temp_output_280_0_g174513;
				half4 localSampleStochastic3D263_g174513 = SampleStochastic3D( Texture263_g174513 , Sampler263_g174513 , Coords263_g174513 , WorldPosition263_g174513 , WorldNormal263_g174513 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8878_g174452 = localSamplePlanar2D238_g174513;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8878_g174452 = localSamplePlanar3D246_g174513;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8878_g174452 = localSampleStochastic2D234_g174513;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8878_g174452 = localSampleStochastic3D263_g174513;
				#else
				float4 staticSwitch8878_g174452 = localSamplePlanar2D238_g174513;
				#endif
				float4 temp_output_7_0_g174476 = _TerrainShaderMin9;
				float4 temp_output_10_0_g174476 = ( _TerrainShaderMax9 - temp_output_7_0_g174476 );
				float4 temp_output_8815_0_g174452 = saturate( ( ( staticSwitch8878_g174452 - temp_output_7_0_g174476 ) / ( temp_output_10_0_g174476 + 0.0001 ) ) );
				half4 Masks_015_g174477 = temp_output_8815_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174523) = _TerrainShaderTex10;
				SamplerState Sampler238_g174523 = SS30_g174557;
				half4 Input_Terrain_Coords_108834_g174452 = _TerrainCoord10;
				float4 temp_output_37_0_g174523 = Input_Terrain_Coords_108834_g174452;
				half4 Coords238_g174523 = temp_output_37_0_g174523;
				float3 temp_output_279_0_g174523 = Input_Position9197_g174452;
				half3 WorldPosition238_g174523 = temp_output_279_0_g174523;
				half4 localSamplePlanar2D238_g174523 = SamplePlanar2D( Texture238_g174523 , Sampler238_g174523 , Coords238_g174523 , WorldPosition238_g174523 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174523) = _TerrainShaderTex10;
				SamplerState Sampler246_g174523 = SS30_g174557;
				half4 Coords246_g174523 = temp_output_37_0_g174523;
				half3 WorldPosition246_g174523 = temp_output_279_0_g174523;
				float3 temp_output_280_0_g174523 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174523 = temp_output_280_0_g174523;
				half4 localSamplePlanar3D246_g174523 = SamplePlanar3D( Texture246_g174523 , Sampler246_g174523 , Coords246_g174523 , WorldPosition246_g174523 , WorldNormal246_g174523 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174523) = _TerrainShaderTex10;
				SamplerState Sampler234_g174523 = SS30_g174557;
				float4 Coords234_g174523 = temp_output_37_0_g174523;
				float3 WorldPosition234_g174523 = temp_output_279_0_g174523;
				float4 localSampleStochastic2D234_g174523 = SampleStochastic2D( Texture234_g174523 , Sampler234_g174523 , Coords234_g174523 , WorldPosition234_g174523 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174523) = _TerrainShaderTex10;
				SamplerState Sampler263_g174523 = SS30_g174557;
				half4 Coords263_g174523 = temp_output_37_0_g174523;
				half3 WorldPosition263_g174523 = temp_output_279_0_g174523;
				half3 WorldNormal263_g174523 = temp_output_280_0_g174523;
				half4 localSampleStochastic3D263_g174523 = SampleStochastic3D( Texture263_g174523 , Sampler263_g174523 , Coords263_g174523 , WorldPosition263_g174523 , WorldNormal263_g174523 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8860_g174452 = localSamplePlanar2D238_g174523;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8860_g174452 = localSamplePlanar3D246_g174523;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8860_g174452 = localSampleStochastic2D234_g174523;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8860_g174452 = localSampleStochastic3D263_g174523;
				#else
				float4 staticSwitch8860_g174452 = localSamplePlanar2D238_g174523;
				#endif
				float4 temp_output_7_0_g174488 = _TerrainShaderMin10;
				float4 temp_output_10_0_g174488 = ( _TerrainShaderMax10 - temp_output_7_0_g174488 );
				float4 temp_output_8818_0_g174452 = saturate( ( ( staticSwitch8860_g174452 - temp_output_7_0_g174488 ) / ( temp_output_10_0_g174488 + 0.0001 ) ) );
				half4 Masks_0210_g174477 = temp_output_8818_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174524) = _TerrainShaderTex11;
				SamplerState Sampler238_g174524 = SS30_g174557;
				half4 Input_Terrain_Coords_118835_g174452 = _TerrainCoord11;
				float4 temp_output_37_0_g174524 = Input_Terrain_Coords_118835_g174452;
				half4 Coords238_g174524 = temp_output_37_0_g174524;
				float3 temp_output_279_0_g174524 = Input_Position9197_g174452;
				half3 WorldPosition238_g174524 = temp_output_279_0_g174524;
				half4 localSamplePlanar2D238_g174524 = SamplePlanar2D( Texture238_g174524 , Sampler238_g174524 , Coords238_g174524 , WorldPosition238_g174524 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174524) = _TerrainShaderTex11;
				SamplerState Sampler246_g174524 = SS30_g174557;
				half4 Coords246_g174524 = temp_output_37_0_g174524;
				half3 WorldPosition246_g174524 = temp_output_279_0_g174524;
				float3 temp_output_280_0_g174524 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174524 = temp_output_280_0_g174524;
				half4 localSamplePlanar3D246_g174524 = SamplePlanar3D( Texture246_g174524 , Sampler246_g174524 , Coords246_g174524 , WorldPosition246_g174524 , WorldNormal246_g174524 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174524) = _TerrainShaderTex11;
				SamplerState Sampler234_g174524 = SS30_g174557;
				float4 Coords234_g174524 = temp_output_37_0_g174524;
				float3 WorldPosition234_g174524 = temp_output_279_0_g174524;
				float4 localSampleStochastic2D234_g174524 = SampleStochastic2D( Texture234_g174524 , Sampler234_g174524 , Coords234_g174524 , WorldPosition234_g174524 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174524) = _TerrainShaderTex11;
				SamplerState Sampler263_g174524 = SS30_g174557;
				half4 Coords263_g174524 = temp_output_37_0_g174524;
				half3 WorldPosition263_g174524 = temp_output_279_0_g174524;
				half3 WorldNormal263_g174524 = temp_output_280_0_g174524;
				half4 localSampleStochastic3D263_g174524 = SampleStochastic3D( Texture263_g174524 , Sampler263_g174524 , Coords263_g174524 , WorldPosition263_g174524 , WorldNormal263_g174524 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8861_g174452 = localSamplePlanar2D238_g174524;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8861_g174452 = localSamplePlanar3D246_g174524;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8861_g174452 = localSampleStochastic2D234_g174524;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8861_g174452 = localSampleStochastic3D263_g174524;
				#else
				float4 staticSwitch8861_g174452 = localSamplePlanar2D238_g174524;
				#endif
				float4 temp_output_7_0_g174489 = _TerrainShaderMin11;
				float4 temp_output_10_0_g174489 = ( _TerrainShaderMax11 - temp_output_7_0_g174489 );
				float4 temp_output_8819_0_g174452 = saturate( ( ( staticSwitch8861_g174452 - temp_output_7_0_g174489 ) / ( temp_output_10_0_g174489 + 0.0001 ) ) );
				half4 Masks_0312_g174477 = temp_output_8819_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174525) = _TerrainShaderTex12;
				SamplerState Sampler238_g174525 = SS30_g174557;
				half4 Input_Terrain_Coords_128836_g174452 = _TerrainCoord12;
				float4 temp_output_37_0_g174525 = Input_Terrain_Coords_128836_g174452;
				half4 Coords238_g174525 = temp_output_37_0_g174525;
				float3 temp_output_279_0_g174525 = Input_Position9197_g174452;
				half3 WorldPosition238_g174525 = temp_output_279_0_g174525;
				half4 localSamplePlanar2D238_g174525 = SamplePlanar2D( Texture238_g174525 , Sampler238_g174525 , Coords238_g174525 , WorldPosition238_g174525 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174525) = _TerrainShaderTex12;
				SamplerState Sampler246_g174525 = SS30_g174557;
				half4 Coords246_g174525 = temp_output_37_0_g174525;
				half3 WorldPosition246_g174525 = temp_output_279_0_g174525;
				float3 temp_output_280_0_g174525 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174525 = temp_output_280_0_g174525;
				half4 localSamplePlanar3D246_g174525 = SamplePlanar3D( Texture246_g174525 , Sampler246_g174525 , Coords246_g174525 , WorldPosition246_g174525 , WorldNormal246_g174525 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174525) = _TerrainShaderTex12;
				SamplerState Sampler234_g174525 = SS30_g174557;
				float4 Coords234_g174525 = temp_output_37_0_g174525;
				float3 WorldPosition234_g174525 = temp_output_279_0_g174525;
				float4 localSampleStochastic2D234_g174525 = SampleStochastic2D( Texture234_g174525 , Sampler234_g174525 , Coords234_g174525 , WorldPosition234_g174525 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174525) = _TerrainShaderTex12;
				SamplerState Sampler263_g174525 = SS30_g174557;
				half4 Coords263_g174525 = temp_output_37_0_g174525;
				half3 WorldPosition263_g174525 = temp_output_279_0_g174525;
				half3 WorldNormal263_g174525 = temp_output_280_0_g174525;
				half4 localSampleStochastic3D263_g174525 = SampleStochastic3D( Texture263_g174525 , Sampler263_g174525 , Coords263_g174525 , WorldPosition263_g174525 , WorldNormal263_g174525 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8879_g174452 = localSamplePlanar2D238_g174525;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8879_g174452 = localSamplePlanar3D246_g174525;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8879_g174452 = localSampleStochastic2D234_g174525;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8879_g174452 = localSampleStochastic3D263_g174525;
				#else
				float4 staticSwitch8879_g174452 = localSamplePlanar2D238_g174525;
				#endif
				float4 temp_output_7_0_g174490 = _TerrainShaderMin12;
				float4 temp_output_10_0_g174490 = ( _TerrainShaderMax12 - temp_output_7_0_g174490 );
				float4 temp_output_8820_0_g174452 = saturate( ( ( staticSwitch8879_g174452 - temp_output_7_0_g174490 ) / ( temp_output_10_0_g174490 + 0.0001 ) ) );
				half4 Masks_0414_g174477 = temp_output_8820_0_g174452;
				float4 appendResult29_g174477 = (float4((Masks_015_g174477).z , (Masks_0210_g174477).z , (Masks_0312_g174477).z , (Masks_0414_g174477).z));
				half4 Control31_g174477 = Terrain_Control_127712_g174452;
				half4 Terrain_Height_128870_g174452 = ( appendResult29_g174477 * Control31_g174477 );
				float4 heights_127362_g174452 = Terrain_Height_128870_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174521) = _TerrainShaderTex13;
				SamplerState Sampler238_g174521 = SS30_g174557;
				half4 Input_Terrain_Coords_138960_g174452 = _TerrainCoord13;
				float4 temp_output_37_0_g174521 = Input_Terrain_Coords_138960_g174452;
				half4 Coords238_g174521 = temp_output_37_0_g174521;
				float3 temp_output_279_0_g174521 = Input_Position9197_g174452;
				half3 WorldPosition238_g174521 = temp_output_279_0_g174521;
				half4 localSamplePlanar2D238_g174521 = SamplePlanar2D( Texture238_g174521 , Sampler238_g174521 , Coords238_g174521 , WorldPosition238_g174521 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174521) = _TerrainShaderTex13;
				SamplerState Sampler246_g174521 = SS30_g174557;
				half4 Coords246_g174521 = temp_output_37_0_g174521;
				half3 WorldPosition246_g174521 = temp_output_279_0_g174521;
				float3 temp_output_280_0_g174521 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174521 = temp_output_280_0_g174521;
				half4 localSamplePlanar3D246_g174521 = SamplePlanar3D( Texture246_g174521 , Sampler246_g174521 , Coords246_g174521 , WorldPosition246_g174521 , WorldNormal246_g174521 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174521) = _TerrainShaderTex13;
				SamplerState Sampler234_g174521 = SS30_g174557;
				float4 Coords234_g174521 = temp_output_37_0_g174521;
				float3 WorldPosition234_g174521 = temp_output_279_0_g174521;
				float4 localSampleStochastic2D234_g174521 = SampleStochastic2D( Texture234_g174521 , Sampler234_g174521 , Coords234_g174521 , WorldPosition234_g174521 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174521) = _TerrainShaderTex13;
				SamplerState Sampler263_g174521 = SS30_g174557;
				half4 Coords263_g174521 = temp_output_37_0_g174521;
				half3 WorldPosition263_g174521 = temp_output_279_0_g174521;
				half3 WorldNormal263_g174521 = temp_output_280_0_g174521;
				half4 localSampleStochastic3D263_g174521 = SampleStochastic3D( Texture263_g174521 , Sampler263_g174521 , Coords263_g174521 , WorldPosition263_g174521 , WorldNormal263_g174521 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch9000_g174452 = localSamplePlanar2D238_g174521;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch9000_g174452 = localSamplePlanar3D246_g174521;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch9000_g174452 = localSampleStochastic2D234_g174521;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch9000_g174452 = localSampleStochastic3D263_g174521;
				#else
				float4 staticSwitch9000_g174452 = localSamplePlanar2D238_g174521;
				#endif
				float4 temp_output_7_0_g174483 = _TerrainShaderMin13;
				float4 temp_output_10_0_g174483 = ( _TerrainShaderMax13 - temp_output_7_0_g174483 );
				float4 temp_output_8931_0_g174452 = saturate( ( ( staticSwitch9000_g174452 - temp_output_7_0_g174483 ) / ( temp_output_10_0_g174483 + 0.0001 ) ) );
				half4 Masks_015_g174484 = temp_output_8931_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174532) = _TerrainShaderTex14;
				SamplerState Sampler238_g174532 = SS30_g174557;
				half4 Input_Terrain_Coords_148961_g174452 = _TerrainCoord14;
				float4 temp_output_37_0_g174532 = Input_Terrain_Coords_148961_g174452;
				half4 Coords238_g174532 = temp_output_37_0_g174532;
				float3 temp_output_279_0_g174532 = Input_Position9197_g174452;
				half3 WorldPosition238_g174532 = temp_output_279_0_g174532;
				half4 localSamplePlanar2D238_g174532 = SamplePlanar2D( Texture238_g174532 , Sampler238_g174532 , Coords238_g174532 , WorldPosition238_g174532 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174532) = _TerrainShaderTex14;
				SamplerState Sampler246_g174532 = SS30_g174557;
				half4 Coords246_g174532 = temp_output_37_0_g174532;
				half3 WorldPosition246_g174532 = temp_output_279_0_g174532;
				float3 temp_output_280_0_g174532 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174532 = temp_output_280_0_g174532;
				half4 localSamplePlanar3D246_g174532 = SamplePlanar3D( Texture246_g174532 , Sampler246_g174532 , Coords246_g174532 , WorldPosition246_g174532 , WorldNormal246_g174532 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174532) = _TerrainShaderTex14;
				SamplerState Sampler234_g174532 = SS30_g174557;
				float4 Coords234_g174532 = temp_output_37_0_g174532;
				float3 WorldPosition234_g174532 = temp_output_279_0_g174532;
				float4 localSampleStochastic2D234_g174532 = SampleStochastic2D( Texture234_g174532 , Sampler234_g174532 , Coords234_g174532 , WorldPosition234_g174532 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174532) = _TerrainShaderTex14;
				SamplerState Sampler263_g174532 = SS30_g174557;
				half4 Coords263_g174532 = temp_output_37_0_g174532;
				half3 WorldPosition263_g174532 = temp_output_279_0_g174532;
				half3 WorldNormal263_g174532 = temp_output_280_0_g174532;
				half4 localSampleStochastic3D263_g174532 = SampleStochastic3D( Texture263_g174532 , Sampler263_g174532 , Coords263_g174532 , WorldPosition263_g174532 , WorldNormal263_g174532 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch9001_g174452 = localSamplePlanar2D238_g174532;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch9001_g174452 = localSamplePlanar3D246_g174532;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch9001_g174452 = localSampleStochastic2D234_g174532;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch9001_g174452 = localSampleStochastic3D263_g174532;
				#else
				float4 staticSwitch9001_g174452 = localSamplePlanar2D238_g174532;
				#endif
				float4 temp_output_7_0_g174491 = _TerrainShaderMin14;
				float4 temp_output_10_0_g174491 = ( _TerrainShaderMax14 - temp_output_7_0_g174491 );
				float4 temp_output_8934_0_g174452 = saturate( ( ( staticSwitch9001_g174452 - temp_output_7_0_g174491 ) / ( temp_output_10_0_g174491 + 0.0001 ) ) );
				half4 Masks_0210_g174484 = temp_output_8934_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174533) = _TerrainShaderTex15;
				SamplerState Sampler238_g174533 = SS30_g174557;
				half4 Input_Terrain_Coords_158962_g174452 = _TerrainCoord15;
				float4 temp_output_37_0_g174533 = Input_Terrain_Coords_158962_g174452;
				half4 Coords238_g174533 = temp_output_37_0_g174533;
				float3 temp_output_279_0_g174533 = Input_Position9197_g174452;
				half3 WorldPosition238_g174533 = temp_output_279_0_g174533;
				half4 localSamplePlanar2D238_g174533 = SamplePlanar2D( Texture238_g174533 , Sampler238_g174533 , Coords238_g174533 , WorldPosition238_g174533 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174533) = _TerrainShaderTex15;
				SamplerState Sampler246_g174533 = SS30_g174557;
				half4 Coords246_g174533 = temp_output_37_0_g174533;
				half3 WorldPosition246_g174533 = temp_output_279_0_g174533;
				float3 temp_output_280_0_g174533 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174533 = temp_output_280_0_g174533;
				half4 localSamplePlanar3D246_g174533 = SamplePlanar3D( Texture246_g174533 , Sampler246_g174533 , Coords246_g174533 , WorldPosition246_g174533 , WorldNormal246_g174533 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174533) = _TerrainShaderTex15;
				SamplerState Sampler234_g174533 = SS30_g174557;
				float4 Coords234_g174533 = temp_output_37_0_g174533;
				float3 WorldPosition234_g174533 = temp_output_279_0_g174533;
				float4 localSampleStochastic2D234_g174533 = SampleStochastic2D( Texture234_g174533 , Sampler234_g174533 , Coords234_g174533 , WorldPosition234_g174533 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174533) = _TerrainShaderTex15;
				SamplerState Sampler263_g174533 = SS30_g174557;
				half4 Coords263_g174533 = temp_output_37_0_g174533;
				half3 WorldPosition263_g174533 = temp_output_279_0_g174533;
				half3 WorldNormal263_g174533 = temp_output_280_0_g174533;
				half4 localSampleStochastic3D263_g174533 = SampleStochastic3D( Texture263_g174533 , Sampler263_g174533 , Coords263_g174533 , WorldPosition263_g174533 , WorldNormal263_g174533 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch9002_g174452 = localSamplePlanar2D238_g174533;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch9002_g174452 = localSamplePlanar3D246_g174533;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch9002_g174452 = localSampleStochastic2D234_g174533;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch9002_g174452 = localSampleStochastic3D263_g174533;
				#else
				float4 staticSwitch9002_g174452 = localSamplePlanar2D238_g174533;
				#endif
				float4 temp_output_7_0_g174492 = _TerrainShaderMin15;
				float4 temp_output_10_0_g174492 = ( _TerrainShaderMax15 - temp_output_7_0_g174492 );
				float4 temp_output_8935_0_g174452 = saturate( ( ( staticSwitch9002_g174452 - temp_output_7_0_g174492 ) / ( temp_output_10_0_g174492 + 0.0001 ) ) );
				half4 Masks_0312_g174484 = temp_output_8935_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174534) = _TerrainShaderTex16;
				SamplerState Sampler238_g174534 = SS30_g174557;
				half4 Input_Terrain_Coords_168959_g174452 = _TerrainCoord16;
				float4 temp_output_37_0_g174534 = Input_Terrain_Coords_168959_g174452;
				half4 Coords238_g174534 = temp_output_37_0_g174534;
				float3 temp_output_279_0_g174534 = Input_Position9197_g174452;
				half3 WorldPosition238_g174534 = temp_output_279_0_g174534;
				half4 localSamplePlanar2D238_g174534 = SamplePlanar2D( Texture238_g174534 , Sampler238_g174534 , Coords238_g174534 , WorldPosition238_g174534 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174534) = _TerrainShaderTex16;
				SamplerState Sampler246_g174534 = SS30_g174557;
				half4 Coords246_g174534 = temp_output_37_0_g174534;
				half3 WorldPosition246_g174534 = temp_output_279_0_g174534;
				float3 temp_output_280_0_g174534 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174534 = temp_output_280_0_g174534;
				half4 localSamplePlanar3D246_g174534 = SamplePlanar3D( Texture246_g174534 , Sampler246_g174534 , Coords246_g174534 , WorldPosition246_g174534 , WorldNormal246_g174534 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174534) = _TerrainShaderTex16;
				SamplerState Sampler234_g174534 = SS30_g174557;
				float4 Coords234_g174534 = temp_output_37_0_g174534;
				float3 WorldPosition234_g174534 = temp_output_279_0_g174534;
				float4 localSampleStochastic2D234_g174534 = SampleStochastic2D( Texture234_g174534 , Sampler234_g174534 , Coords234_g174534 , WorldPosition234_g174534 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174534) = _TerrainShaderTex16;
				SamplerState Sampler263_g174534 = SS30_g174557;
				half4 Coords263_g174534 = temp_output_37_0_g174534;
				half3 WorldPosition263_g174534 = temp_output_279_0_g174534;
				half3 WorldNormal263_g174534 = temp_output_280_0_g174534;
				half4 localSampleStochastic3D263_g174534 = SampleStochastic3D( Texture263_g174534 , Sampler263_g174534 , Coords263_g174534 , WorldPosition263_g174534 , WorldNormal263_g174534 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch9003_g174452 = localSamplePlanar2D238_g174534;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch9003_g174452 = localSamplePlanar3D246_g174534;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch9003_g174452 = localSampleStochastic2D234_g174534;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch9003_g174452 = localSampleStochastic3D263_g174534;
				#else
				float4 staticSwitch9003_g174452 = localSamplePlanar2D238_g174534;
				#endif
				float4 temp_output_7_0_g174493 = _TerrainShaderMin16;
				float4 temp_output_10_0_g174493 = ( _TerrainShaderMax16 - temp_output_7_0_g174493 );
				float4 temp_output_8936_0_g174452 = saturate( ( ( staticSwitch9003_g174452 - temp_output_7_0_g174493 ) / ( temp_output_10_0_g174493 + 0.0001 ) ) );
				half4 Masks_0414_g174484 = temp_output_8936_0_g174452;
				float4 appendResult29_g174484 = (float4((Masks_015_g174484).z , (Masks_0210_g174484).z , (Masks_0312_g174484).z , (Masks_0414_g174484).z));
				half4 Control31_g174484 = Terrain_Control_167711_g174452;
				half4 Terrain_Height_169015_g174452 = ( appendResult29_g174484 * Control31_g174484 );
				float4 heights_167362_g174452 = Terrain_Height_169015_g174452;
				float heightTransition7362_g174452 = ( 1.0 - _TerrainHeightBlendValue );
				float4 weights_047362_g174452 = float4( 0,0,0,0 );
				float4 weights_087362_g174452 = float4( 0,0,0,0 );
				float4 weights_127362_g174452 = float4( 0,0,0,0 );
				float4 weights_167362_g174452 = float4( 0,0,0,0 );
				//Modified version of the HDRP terrain height based blending
				float maxHeight = 0;
				float4 weightedHeights_04 = float4( 0,0,0,0 );
				float4 weightedHeights_08 = float4( 0,0,0,0 );
				float4 weightedHeights_12 = float4( 0,0,0,0 );
				float4 weightedHeights_16 = float4( 0,0,0,0 );
				maxHeight = heights_047362_g174452.x;
				maxHeight = max(maxHeight, heights_047362_g174452.y);
				maxHeight = max(maxHeight, heights_047362_g174452.z);
				maxHeight = max(maxHeight, heights_047362_g174452.w);
				#ifdef TVE_TERRAIN_08
				maxHeight = max(maxHeight, heights_087362_g174452.x);
				maxHeight = max(maxHeight, heights_087362_g174452.y);
				maxHeight = max(maxHeight, heights_087362_g174452.z);
				maxHeight = max(maxHeight, heights_087362_g174452.w);
				#endif
				#ifdef TVE_TERRAIN_12
				maxHeight = max(maxHeight, heights_087362_g174452.x);
				maxHeight = max(maxHeight, heights_087362_g174452.y);
				maxHeight = max(maxHeight, heights_087362_g174452.z);
				maxHeight = max(maxHeight, heights_087362_g174452.w);
				maxHeight = max(maxHeight, heights_127362_g174452.x);
				maxHeight = max(maxHeight, heights_127362_g174452.y);
				maxHeight = max(maxHeight, heights_127362_g174452.z);
				maxHeight = max(maxHeight, heights_127362_g174452.w);
				#endif
				#ifdef TVE_TERRAIN_16
				maxHeight = max(maxHeight, heights_087362_g174452.x);
				maxHeight = max(maxHeight, heights_087362_g174452.y);
				maxHeight = max(maxHeight, heights_087362_g174452.z);
				maxHeight = max(maxHeight, heights_087362_g174452.w);
				maxHeight = max(maxHeight, heights_127362_g174452.x);
				maxHeight = max(maxHeight, heights_127362_g174452.y);
				maxHeight = max(maxHeight, heights_127362_g174452.z);
				maxHeight = max(maxHeight, heights_127362_g174452.w);
				maxHeight = max(maxHeight, heights_167362_g174452.x);
				maxHeight = max(maxHeight, heights_167362_g174452.y);
				maxHeight = max(maxHeight, heights_167362_g174452.z);
				maxHeight = max(maxHeight, heights_167362_g174452.w);
				#endif
				float transition = max(heightTransition7362_g174452, 0.01);
				weightedHeights_04 = float4 ( heights_047362_g174452.x, heights_047362_g174452.y, heights_047362_g174452.z, heights_047362_g174452.w );
				weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
				weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g174452;
				#ifdef TVE_TERRAIN_08
				weightedHeights_08 = float4 ( heights_087362_g174452.x, heights_087362_g174452.y, heights_087362_g174452.z, heights_087362_g174452.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g174452;
				#endif
				#ifdef TVE_TERRAIN_12
				weightedHeights_08 = float4 ( heights_087362_g174452.x, heights_087362_g174452.y, heights_087362_g174452.z, heights_087362_g174452.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g174452;
				weightedHeights_12 = float4 ( heights_127362_g174452.x, heights_127362_g174452.y, heights_127362_g174452.z, heights_127362_g174452.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g174452;
				#endif
				#ifdef TVE_TERRAIN_16
				weightedHeights_08 = float4 ( heights_087362_g174452.x, heights_087362_g174452.y, heights_087362_g174452.z, heights_087362_g174452.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g174452;
				weightedHeights_12 = float4 ( heights_127362_g174452.x, heights_127362_g174452.y, heights_127362_g174452.z, heights_127362_g174452.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g174452;
				weightedHeights_16 = float4 ( heights_167362_g174452.x, heights_167362_g174452.y, heights_167362_g174452.z, heights_167362_g174452.w );
				weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
				weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g174452;
				#endif
				float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
				float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
				float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
				float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
				float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
				weights_047362_g174452 = weightedHeights_04 / sumHeight.xxxx;
				#ifdef TVE_TERRAIN_08
				weights_087362_g174452 = weightedHeights_08 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_12
				weights_087362_g174452 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g174452 = weightedHeights_12 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_16
				weights_087362_g174452 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g174452 = weightedHeights_12 / sumHeight.xxxx;
				weights_167362_g174452 = weightedHeights_16 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8792_g174452 = weights_047362_g174452;
				#else
				float4 staticSwitch8792_g174452 = control_047362_g174452;
				#endif
				half4 Terrain_Weights_046781_g174452 = staticSwitch8792_g174452;
				half4 Weights52_g174457 = Terrain_Weights_046781_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174498) = _TerrainAlbedoTex1;
				float localFilterTexture19_g174558 = ( 0.0 );
				SamplerState SamplerDefault19_g174558 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174558 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174558 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174558 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174558 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174558 = SamplerDefault19_g174558;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174558 = SamplerDefault19_g174558;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174558 = SamplerPoint19_g174558;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174558 = SamplerLow19_g174558;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174558 = SamplerMedium19_g174558;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174558 = SamplerHigh19_g174558;
				#endif
				SamplerState Sampler238_g174498 = SS19_g174558;
				float4 temp_output_37_0_g174498 = Input_Terrain_Coords_016785_g174452;
				half4 Coords238_g174498 = temp_output_37_0_g174498;
				float3 temp_output_279_0_g174498 = Input_Position9197_g174452;
				half3 WorldPosition238_g174498 = temp_output_279_0_g174498;
				half4 localSamplePlanar2D238_g174498 = SamplePlanar2D( Texture238_g174498 , Sampler238_g174498 , Coords238_g174498 , WorldPosition238_g174498 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174498) = _TerrainAlbedoTex1;
				SamplerState Sampler246_g174498 = SS19_g174558;
				half4 Coords246_g174498 = temp_output_37_0_g174498;
				half3 WorldPosition246_g174498 = temp_output_279_0_g174498;
				float3 temp_output_280_0_g174498 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174498 = temp_output_280_0_g174498;
				half4 localSamplePlanar3D246_g174498 = SamplePlanar3D( Texture246_g174498 , Sampler246_g174498 , Coords246_g174498 , WorldPosition246_g174498 , WorldNormal246_g174498 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174498) = _TerrainAlbedoTex1;
				SamplerState Sampler234_g174498 = SS19_g174558;
				float4 Coords234_g174498 = temp_output_37_0_g174498;
				float3 WorldPosition234_g174498 = temp_output_279_0_g174498;
				float4 localSampleStochastic2D234_g174498 = SampleStochastic2D( Texture234_g174498 , Sampler234_g174498 , Coords234_g174498 , WorldPosition234_g174498 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174498) = _TerrainAlbedoTex1;
				SamplerState Sampler263_g174498 = SS19_g174558;
				half4 Coords263_g174498 = temp_output_37_0_g174498;
				half3 WorldPosition263_g174498 = temp_output_279_0_g174498;
				half3 WorldNormal263_g174498 = temp_output_280_0_g174498;
				half4 localSampleStochastic3D263_g174498 = SampleStochastic3D( Texture263_g174498 , Sampler263_g174498 , Coords263_g174498 , WorldPosition263_g174498 , WorldNormal263_g174498 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8614_g174452 = localSamplePlanar2D238_g174498;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8614_g174452 = localSamplePlanar3D246_g174498;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8614_g174452 = localSampleStochastic2D234_g174498;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8614_g174452 = localSampleStochastic3D263_g174498;
				#else
				float4 staticSwitch8614_g174452 = localSamplePlanar2D238_g174498;
				#endif
				half4 Layer133_g174457 = staticSwitch8614_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler238_g174499 = SS19_g174558;
				float4 temp_output_37_0_g174499 = Input_Terrain_Coords_026787_g174452;
				half4 Coords238_g174499 = temp_output_37_0_g174499;
				float3 temp_output_279_0_g174499 = Input_Position9197_g174452;
				half3 WorldPosition238_g174499 = temp_output_279_0_g174499;
				half4 localSamplePlanar2D238_g174499 = SamplePlanar2D( Texture238_g174499 , Sampler238_g174499 , Coords238_g174499 , WorldPosition238_g174499 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler246_g174499 = SS19_g174558;
				half4 Coords246_g174499 = temp_output_37_0_g174499;
				half3 WorldPosition246_g174499 = temp_output_279_0_g174499;
				float3 temp_output_280_0_g174499 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174499 = temp_output_280_0_g174499;
				half4 localSamplePlanar3D246_g174499 = SamplePlanar3D( Texture246_g174499 , Sampler246_g174499 , Coords246_g174499 , WorldPosition246_g174499 , WorldNormal246_g174499 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler234_g174499 = SS19_g174558;
				float4 Coords234_g174499 = temp_output_37_0_g174499;
				float3 WorldPosition234_g174499 = temp_output_279_0_g174499;
				float4 localSampleStochastic2D234_g174499 = SampleStochastic2D( Texture234_g174499 , Sampler234_g174499 , Coords234_g174499 , WorldPosition234_g174499 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler263_g174499 = SS19_g174558;
				half4 Coords263_g174499 = temp_output_37_0_g174499;
				half3 WorldPosition263_g174499 = temp_output_279_0_g174499;
				half3 WorldNormal263_g174499 = temp_output_280_0_g174499;
				half4 localSampleStochastic3D263_g174499 = SampleStochastic3D( Texture263_g174499 , Sampler263_g174499 , Coords263_g174499 , WorldPosition263_g174499 , WorldNormal263_g174499 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8629_g174452 = localSamplePlanar2D238_g174499;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8629_g174452 = localSamplePlanar3D246_g174499;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8629_g174452 = localSampleStochastic2D234_g174499;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8629_g174452 = localSampleStochastic3D263_g174499;
				#else
				float4 staticSwitch8629_g174452 = localSamplePlanar2D238_g174499;
				#endif
				half4 Layer237_g174457 = staticSwitch8629_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler238_g174502 = SS19_g174558;
				float4 temp_output_37_0_g174502 = Input_Terrain_Coords_036789_g174452;
				half4 Coords238_g174502 = temp_output_37_0_g174502;
				float3 temp_output_279_0_g174502 = Input_Position9197_g174452;
				half3 WorldPosition238_g174502 = temp_output_279_0_g174502;
				half4 localSamplePlanar2D238_g174502 = SamplePlanar2D( Texture238_g174502 , Sampler238_g174502 , Coords238_g174502 , WorldPosition238_g174502 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler246_g174502 = SS19_g174558;
				half4 Coords246_g174502 = temp_output_37_0_g174502;
				half3 WorldPosition246_g174502 = temp_output_279_0_g174502;
				float3 temp_output_280_0_g174502 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174502 = temp_output_280_0_g174502;
				half4 localSamplePlanar3D246_g174502 = SamplePlanar3D( Texture246_g174502 , Sampler246_g174502 , Coords246_g174502 , WorldPosition246_g174502 , WorldNormal246_g174502 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler234_g174502 = SS19_g174558;
				float4 Coords234_g174502 = temp_output_37_0_g174502;
				float3 WorldPosition234_g174502 = temp_output_279_0_g174502;
				float4 localSampleStochastic2D234_g174502 = SampleStochastic2D( Texture234_g174502 , Sampler234_g174502 , Coords234_g174502 , WorldPosition234_g174502 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler263_g174502 = SS19_g174558;
				half4 Coords263_g174502 = temp_output_37_0_g174502;
				half3 WorldPosition263_g174502 = temp_output_279_0_g174502;
				half3 WorldNormal263_g174502 = temp_output_280_0_g174502;
				half4 localSampleStochastic3D263_g174502 = SampleStochastic3D( Texture263_g174502 , Sampler263_g174502 , Coords263_g174502 , WorldPosition263_g174502 , WorldNormal263_g174502 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8630_g174452 = localSamplePlanar2D238_g174502;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8630_g174452 = localSamplePlanar3D246_g174502;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8630_g174452 = localSampleStochastic2D234_g174502;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8630_g174452 = localSampleStochastic3D263_g174502;
				#else
				float4 staticSwitch8630_g174452 = localSamplePlanar2D238_g174502;
				#endif
				half4 Layer338_g174457 = staticSwitch8630_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler238_g174504 = SS19_g174558;
				float4 temp_output_37_0_g174504 = Input_Terrain_Coords_046791_g174452;
				half4 Coords238_g174504 = temp_output_37_0_g174504;
				float3 temp_output_279_0_g174504 = Input_Position9197_g174452;
				half3 WorldPosition238_g174504 = temp_output_279_0_g174504;
				half4 localSamplePlanar2D238_g174504 = SamplePlanar2D( Texture238_g174504 , Sampler238_g174504 , Coords238_g174504 , WorldPosition238_g174504 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler246_g174504 = SS19_g174558;
				half4 Coords246_g174504 = temp_output_37_0_g174504;
				half3 WorldPosition246_g174504 = temp_output_279_0_g174504;
				float3 temp_output_280_0_g174504 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174504 = temp_output_280_0_g174504;
				half4 localSamplePlanar3D246_g174504 = SamplePlanar3D( Texture246_g174504 , Sampler246_g174504 , Coords246_g174504 , WorldPosition246_g174504 , WorldNormal246_g174504 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler234_g174504 = SS19_g174558;
				float4 Coords234_g174504 = temp_output_37_0_g174504;
				float3 WorldPosition234_g174504 = temp_output_279_0_g174504;
				float4 localSampleStochastic2D234_g174504 = SampleStochastic2D( Texture234_g174504 , Sampler234_g174504 , Coords234_g174504 , WorldPosition234_g174504 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler263_g174504 = SS19_g174558;
				half4 Coords263_g174504 = temp_output_37_0_g174504;
				half3 WorldPosition263_g174504 = temp_output_279_0_g174504;
				half3 WorldNormal263_g174504 = temp_output_280_0_g174504;
				half4 localSampleStochastic3D263_g174504 = SampleStochastic3D( Texture263_g174504 , Sampler263_g174504 , Coords263_g174504 , WorldPosition263_g174504 , WorldNormal263_g174504 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8631_g174452 = localSamplePlanar2D238_g174504;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8631_g174452 = localSamplePlanar3D246_g174504;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8631_g174452 = localSampleStochastic2D234_g174504;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8631_g174452 = localSampleStochastic3D263_g174504;
				#else
				float4 staticSwitch8631_g174452 = localSamplePlanar2D238_g174504;
				#endif
				half4 Layer439_g174457 = staticSwitch8631_g174452;
				float4 weightedBlendVar31_g174457 = Weights52_g174457;
				float4 weightedBlend31_g174457 = ( weightedBlendVar31_g174457.x*Layer133_g174457 + weightedBlendVar31_g174457.y*Layer237_g174457 + weightedBlendVar31_g174457.z*Layer338_g174457 + weightedBlendVar31_g174457.w*Layer439_g174457 );
				half4 Terrain_AAAA_047200_g174452 = weightedBlend31_g174457;
				half4 Layer_045_g174460 = Terrain_AAAA_047200_g174452;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8793_g174452 = weights_087362_g174452;
				#else
				float4 staticSwitch8793_g174452 = control_087362_g174452;
				#endif
				half4 Terrain_Weights_087340_g174452 = staticSwitch8793_g174452;
				half4 Weights52_g174467 = Terrain_Weights_087340_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler238_g174508 = SS19_g174558;
				float4 temp_output_37_0_g174508 = Input_Terrain_Coords_058750_g174452;
				half4 Coords238_g174508 = temp_output_37_0_g174508;
				float3 temp_output_279_0_g174508 = Input_Position9197_g174452;
				half3 WorldPosition238_g174508 = temp_output_279_0_g174508;
				half4 localSamplePlanar2D238_g174508 = SamplePlanar2D( Texture238_g174508 , Sampler238_g174508 , Coords238_g174508 , WorldPosition238_g174508 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler246_g174508 = SS19_g174558;
				half4 Coords246_g174508 = temp_output_37_0_g174508;
				half3 WorldPosition246_g174508 = temp_output_279_0_g174508;
				float3 temp_output_280_0_g174508 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174508 = temp_output_280_0_g174508;
				half4 localSamplePlanar3D246_g174508 = SamplePlanar3D( Texture246_g174508 , Sampler246_g174508 , Coords246_g174508 , WorldPosition246_g174508 , WorldNormal246_g174508 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler234_g174508 = SS19_g174558;
				float4 Coords234_g174508 = temp_output_37_0_g174508;
				float3 WorldPosition234_g174508 = temp_output_279_0_g174508;
				float4 localSampleStochastic2D234_g174508 = SampleStochastic2D( Texture234_g174508 , Sampler234_g174508 , Coords234_g174508 , WorldPosition234_g174508 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler263_g174508 = SS19_g174558;
				half4 Coords263_g174508 = temp_output_37_0_g174508;
				half3 WorldPosition263_g174508 = temp_output_279_0_g174508;
				half3 WorldNormal263_g174508 = temp_output_280_0_g174508;
				half4 localSampleStochastic3D263_g174508 = SampleStochastic3D( Texture263_g174508 , Sampler263_g174508 , Coords263_g174508 , WorldPosition263_g174508 , WorldNormal263_g174508 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8690_g174452 = localSamplePlanar2D238_g174508;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8690_g174452 = localSamplePlanar3D246_g174508;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8690_g174452 = localSampleStochastic2D234_g174508;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8690_g174452 = localSampleStochastic3D263_g174508;
				#else
				float4 staticSwitch8690_g174452 = localSamplePlanar2D238_g174508;
				#endif
				half4 Layer133_g174467 = staticSwitch8690_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler238_g174535 = SS19_g174558;
				float4 temp_output_37_0_g174535 = Input_Terrain_Coords_068751_g174452;
				half4 Coords238_g174535 = temp_output_37_0_g174535;
				float3 temp_output_279_0_g174535 = Input_Position9197_g174452;
				half3 WorldPosition238_g174535 = temp_output_279_0_g174535;
				half4 localSamplePlanar2D238_g174535 = SamplePlanar2D( Texture238_g174535 , Sampler238_g174535 , Coords238_g174535 , WorldPosition238_g174535 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler246_g174535 = SS19_g174558;
				half4 Coords246_g174535 = temp_output_37_0_g174535;
				half3 WorldPosition246_g174535 = temp_output_279_0_g174535;
				float3 temp_output_280_0_g174535 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174535 = temp_output_280_0_g174535;
				half4 localSamplePlanar3D246_g174535 = SamplePlanar3D( Texture246_g174535 , Sampler246_g174535 , Coords246_g174535 , WorldPosition246_g174535 , WorldNormal246_g174535 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler234_g174535 = SS19_g174558;
				float4 Coords234_g174535 = temp_output_37_0_g174535;
				float3 WorldPosition234_g174535 = temp_output_279_0_g174535;
				float4 localSampleStochastic2D234_g174535 = SampleStochastic2D( Texture234_g174535 , Sampler234_g174535 , Coords234_g174535 , WorldPosition234_g174535 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler263_g174535 = SS19_g174558;
				half4 Coords263_g174535 = temp_output_37_0_g174535;
				half3 WorldPosition263_g174535 = temp_output_279_0_g174535;
				half3 WorldNormal263_g174535 = temp_output_280_0_g174535;
				half4 localSampleStochastic3D263_g174535 = SampleStochastic3D( Texture263_g174535 , Sampler263_g174535 , Coords263_g174535 , WorldPosition263_g174535 , WorldNormal263_g174535 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8691_g174452 = localSamplePlanar2D238_g174535;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8691_g174452 = localSamplePlanar3D246_g174535;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8691_g174452 = localSampleStochastic2D234_g174535;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8691_g174452 = localSampleStochastic3D263_g174535;
				#else
				float4 staticSwitch8691_g174452 = localSamplePlanar2D238_g174535;
				#endif
				half4 Layer237_g174467 = staticSwitch8691_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler238_g174536 = SS19_g174558;
				float4 temp_output_37_0_g174536 = Input_Terrain_Coords_078752_g174452;
				half4 Coords238_g174536 = temp_output_37_0_g174536;
				float3 temp_output_279_0_g174536 = Input_Position9197_g174452;
				half3 WorldPosition238_g174536 = temp_output_279_0_g174536;
				half4 localSamplePlanar2D238_g174536 = SamplePlanar2D( Texture238_g174536 , Sampler238_g174536 , Coords238_g174536 , WorldPosition238_g174536 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler246_g174536 = SS19_g174558;
				half4 Coords246_g174536 = temp_output_37_0_g174536;
				half3 WorldPosition246_g174536 = temp_output_279_0_g174536;
				float3 temp_output_280_0_g174536 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174536 = temp_output_280_0_g174536;
				half4 localSamplePlanar3D246_g174536 = SamplePlanar3D( Texture246_g174536 , Sampler246_g174536 , Coords246_g174536 , WorldPosition246_g174536 , WorldNormal246_g174536 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler234_g174536 = SS19_g174558;
				float4 Coords234_g174536 = temp_output_37_0_g174536;
				float3 WorldPosition234_g174536 = temp_output_279_0_g174536;
				float4 localSampleStochastic2D234_g174536 = SampleStochastic2D( Texture234_g174536 , Sampler234_g174536 , Coords234_g174536 , WorldPosition234_g174536 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler263_g174536 = SS19_g174558;
				half4 Coords263_g174536 = temp_output_37_0_g174536;
				half3 WorldPosition263_g174536 = temp_output_279_0_g174536;
				half3 WorldNormal263_g174536 = temp_output_280_0_g174536;
				half4 localSampleStochastic3D263_g174536 = SampleStochastic3D( Texture263_g174536 , Sampler263_g174536 , Coords263_g174536 , WorldPosition263_g174536 , WorldNormal263_g174536 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8692_g174452 = localSamplePlanar2D238_g174536;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8692_g174452 = localSamplePlanar3D246_g174536;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8692_g174452 = localSampleStochastic2D234_g174536;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8692_g174452 = localSampleStochastic3D263_g174536;
				#else
				float4 staticSwitch8692_g174452 = localSamplePlanar2D238_g174536;
				#endif
				half4 Layer338_g174467 = staticSwitch8692_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler238_g174537 = SS19_g174558;
				float4 temp_output_37_0_g174537 = Input_Terrain_Coords_088749_g174452;
				half4 Coords238_g174537 = temp_output_37_0_g174537;
				float3 temp_output_279_0_g174537 = Input_Position9197_g174452;
				half3 WorldPosition238_g174537 = temp_output_279_0_g174537;
				half4 localSamplePlanar2D238_g174537 = SamplePlanar2D( Texture238_g174537 , Sampler238_g174537 , Coords238_g174537 , WorldPosition238_g174537 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler246_g174537 = SS19_g174558;
				half4 Coords246_g174537 = temp_output_37_0_g174537;
				half3 WorldPosition246_g174537 = temp_output_279_0_g174537;
				float3 temp_output_280_0_g174537 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174537 = temp_output_280_0_g174537;
				half4 localSamplePlanar3D246_g174537 = SamplePlanar3D( Texture246_g174537 , Sampler246_g174537 , Coords246_g174537 , WorldPosition246_g174537 , WorldNormal246_g174537 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler234_g174537 = SS19_g174558;
				float4 Coords234_g174537 = temp_output_37_0_g174537;
				float3 WorldPosition234_g174537 = temp_output_279_0_g174537;
				float4 localSampleStochastic2D234_g174537 = SampleStochastic2D( Texture234_g174537 , Sampler234_g174537 , Coords234_g174537 , WorldPosition234_g174537 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler263_g174537 = SS19_g174558;
				half4 Coords263_g174537 = temp_output_37_0_g174537;
				half3 WorldPosition263_g174537 = temp_output_279_0_g174537;
				half3 WorldNormal263_g174537 = temp_output_280_0_g174537;
				half4 localSampleStochastic3D263_g174537 = SampleStochastic3D( Texture263_g174537 , Sampler263_g174537 , Coords263_g174537 , WorldPosition263_g174537 , WorldNormal263_g174537 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8693_g174452 = localSamplePlanar2D238_g174537;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8693_g174452 = localSamplePlanar3D246_g174537;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8693_g174452 = localSampleStochastic2D234_g174537;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8693_g174452 = localSampleStochastic3D263_g174537;
				#else
				float4 staticSwitch8693_g174452 = localSamplePlanar2D238_g174537;
				#endif
				half4 Layer439_g174467 = staticSwitch8693_g174452;
				float4 weightedBlendVar31_g174467 = Weights52_g174467;
				float4 weightedBlend31_g174467 = ( weightedBlendVar31_g174467.x*Layer133_g174467 + weightedBlendVar31_g174467.y*Layer237_g174467 + weightedBlendVar31_g174467.z*Layer338_g174467 + weightedBlendVar31_g174467.w*Layer439_g174467 );
				half4 Terrain_AAAA_088665_g174452 = weightedBlend31_g174467;
				half4 Layer_0810_g174460 = Terrain_AAAA_088665_g174452;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8794_g174452 = weights_127362_g174452;
				#else
				float4 staticSwitch8794_g174452 = control_127362_g174452;
				#endif
				half4 Terrain_Weights_127710_g174452 = staticSwitch8794_g174452;
				half4 Weights52_g174474 = Terrain_Weights_127710_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler238_g174511 = SS19_g174558;
				float4 temp_output_37_0_g174511 = Input_Terrain_Coords_098833_g174452;
				half4 Coords238_g174511 = temp_output_37_0_g174511;
				float3 temp_output_279_0_g174511 = Input_Position9197_g174452;
				half3 WorldPosition238_g174511 = temp_output_279_0_g174511;
				half4 localSamplePlanar2D238_g174511 = SamplePlanar2D( Texture238_g174511 , Sampler238_g174511 , Coords238_g174511 , WorldPosition238_g174511 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler246_g174511 = SS19_g174558;
				half4 Coords246_g174511 = temp_output_37_0_g174511;
				half3 WorldPosition246_g174511 = temp_output_279_0_g174511;
				float3 temp_output_280_0_g174511 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174511 = temp_output_280_0_g174511;
				half4 localSamplePlanar3D246_g174511 = SamplePlanar3D( Texture246_g174511 , Sampler246_g174511 , Coords246_g174511 , WorldPosition246_g174511 , WorldNormal246_g174511 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler234_g174511 = SS19_g174558;
				float4 Coords234_g174511 = temp_output_37_0_g174511;
				float3 WorldPosition234_g174511 = temp_output_279_0_g174511;
				float4 localSampleStochastic2D234_g174511 = SampleStochastic2D( Texture234_g174511 , Sampler234_g174511 , Coords234_g174511 , WorldPosition234_g174511 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler263_g174511 = SS19_g174558;
				half4 Coords263_g174511 = temp_output_37_0_g174511;
				half3 WorldPosition263_g174511 = temp_output_279_0_g174511;
				half3 WorldNormal263_g174511 = temp_output_280_0_g174511;
				half4 localSampleStochastic3D263_g174511 = SampleStochastic3D( Texture263_g174511 , Sampler263_g174511 , Coords263_g174511 , WorldPosition263_g174511 , WorldNormal263_g174511 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8872_g174452 = localSamplePlanar2D238_g174511;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8872_g174452 = localSamplePlanar3D246_g174511;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8872_g174452 = localSampleStochastic2D234_g174511;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8872_g174452 = localSampleStochastic3D263_g174511;
				#else
				float4 staticSwitch8872_g174452 = localSamplePlanar2D238_g174511;
				#endif
				half4 Layer133_g174474 = staticSwitch8872_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler238_g174514 = SS19_g174558;
				float4 temp_output_37_0_g174514 = Input_Terrain_Coords_108834_g174452;
				half4 Coords238_g174514 = temp_output_37_0_g174514;
				float3 temp_output_279_0_g174514 = Input_Position9197_g174452;
				half3 WorldPosition238_g174514 = temp_output_279_0_g174514;
				half4 localSamplePlanar2D238_g174514 = SamplePlanar2D( Texture238_g174514 , Sampler238_g174514 , Coords238_g174514 , WorldPosition238_g174514 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler246_g174514 = SS19_g174558;
				half4 Coords246_g174514 = temp_output_37_0_g174514;
				half3 WorldPosition246_g174514 = temp_output_279_0_g174514;
				float3 temp_output_280_0_g174514 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174514 = temp_output_280_0_g174514;
				half4 localSamplePlanar3D246_g174514 = SamplePlanar3D( Texture246_g174514 , Sampler246_g174514 , Coords246_g174514 , WorldPosition246_g174514 , WorldNormal246_g174514 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler234_g174514 = SS19_g174558;
				float4 Coords234_g174514 = temp_output_37_0_g174514;
				float3 WorldPosition234_g174514 = temp_output_279_0_g174514;
				float4 localSampleStochastic2D234_g174514 = SampleStochastic2D( Texture234_g174514 , Sampler234_g174514 , Coords234_g174514 , WorldPosition234_g174514 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler263_g174514 = SS19_g174558;
				half4 Coords263_g174514 = temp_output_37_0_g174514;
				half3 WorldPosition263_g174514 = temp_output_279_0_g174514;
				half3 WorldNormal263_g174514 = temp_output_280_0_g174514;
				half4 localSampleStochastic3D263_g174514 = SampleStochastic3D( Texture263_g174514 , Sampler263_g174514 , Coords263_g174514 , WorldPosition263_g174514 , WorldNormal263_g174514 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8873_g174452 = localSamplePlanar2D238_g174514;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8873_g174452 = localSamplePlanar3D246_g174514;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8873_g174452 = localSampleStochastic2D234_g174514;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8873_g174452 = localSampleStochastic3D263_g174514;
				#else
				float4 staticSwitch8873_g174452 = localSamplePlanar2D238_g174514;
				#endif
				half4 Layer237_g174474 = staticSwitch8873_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler238_g174515 = SS19_g174558;
				float4 temp_output_37_0_g174515 = Input_Terrain_Coords_118835_g174452;
				half4 Coords238_g174515 = temp_output_37_0_g174515;
				float3 temp_output_279_0_g174515 = Input_Position9197_g174452;
				half3 WorldPosition238_g174515 = temp_output_279_0_g174515;
				half4 localSamplePlanar2D238_g174515 = SamplePlanar2D( Texture238_g174515 , Sampler238_g174515 , Coords238_g174515 , WorldPosition238_g174515 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler246_g174515 = SS19_g174558;
				half4 Coords246_g174515 = temp_output_37_0_g174515;
				half3 WorldPosition246_g174515 = temp_output_279_0_g174515;
				float3 temp_output_280_0_g174515 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174515 = temp_output_280_0_g174515;
				half4 localSamplePlanar3D246_g174515 = SamplePlanar3D( Texture246_g174515 , Sampler246_g174515 , Coords246_g174515 , WorldPosition246_g174515 , WorldNormal246_g174515 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler234_g174515 = SS19_g174558;
				float4 Coords234_g174515 = temp_output_37_0_g174515;
				float3 WorldPosition234_g174515 = temp_output_279_0_g174515;
				float4 localSampleStochastic2D234_g174515 = SampleStochastic2D( Texture234_g174515 , Sampler234_g174515 , Coords234_g174515 , WorldPosition234_g174515 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler263_g174515 = SS19_g174558;
				half4 Coords263_g174515 = temp_output_37_0_g174515;
				half3 WorldPosition263_g174515 = temp_output_279_0_g174515;
				half3 WorldNormal263_g174515 = temp_output_280_0_g174515;
				half4 localSampleStochastic3D263_g174515 = SampleStochastic3D( Texture263_g174515 , Sampler263_g174515 , Coords263_g174515 , WorldPosition263_g174515 , WorldNormal263_g174515 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8874_g174452 = localSamplePlanar2D238_g174515;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8874_g174452 = localSamplePlanar3D246_g174515;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8874_g174452 = localSampleStochastic2D234_g174515;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8874_g174452 = localSampleStochastic3D263_g174515;
				#else
				float4 staticSwitch8874_g174452 = localSamplePlanar2D238_g174515;
				#endif
				half4 Layer338_g174474 = staticSwitch8874_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler238_g174516 = SS19_g174558;
				float4 temp_output_37_0_g174516 = Input_Terrain_Coords_128836_g174452;
				half4 Coords238_g174516 = temp_output_37_0_g174516;
				float3 temp_output_279_0_g174516 = Input_Position9197_g174452;
				half3 WorldPosition238_g174516 = temp_output_279_0_g174516;
				half4 localSamplePlanar2D238_g174516 = SamplePlanar2D( Texture238_g174516 , Sampler238_g174516 , Coords238_g174516 , WorldPosition238_g174516 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler246_g174516 = SS19_g174558;
				half4 Coords246_g174516 = temp_output_37_0_g174516;
				half3 WorldPosition246_g174516 = temp_output_279_0_g174516;
				float3 temp_output_280_0_g174516 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174516 = temp_output_280_0_g174516;
				half4 localSamplePlanar3D246_g174516 = SamplePlanar3D( Texture246_g174516 , Sampler246_g174516 , Coords246_g174516 , WorldPosition246_g174516 , WorldNormal246_g174516 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler234_g174516 = SS19_g174558;
				float4 Coords234_g174516 = temp_output_37_0_g174516;
				float3 WorldPosition234_g174516 = temp_output_279_0_g174516;
				float4 localSampleStochastic2D234_g174516 = SampleStochastic2D( Texture234_g174516 , Sampler234_g174516 , Coords234_g174516 , WorldPosition234_g174516 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler263_g174516 = SS19_g174558;
				half4 Coords263_g174516 = temp_output_37_0_g174516;
				half3 WorldPosition263_g174516 = temp_output_279_0_g174516;
				half3 WorldNormal263_g174516 = temp_output_280_0_g174516;
				half4 localSampleStochastic3D263_g174516 = SampleStochastic3D( Texture263_g174516 , Sampler263_g174516 , Coords263_g174516 , WorldPosition263_g174516 , WorldNormal263_g174516 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8875_g174452 = localSamplePlanar2D238_g174516;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8875_g174452 = localSamplePlanar3D246_g174516;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8875_g174452 = localSampleStochastic2D234_g174516;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8875_g174452 = localSampleStochastic3D263_g174516;
				#else
				float4 staticSwitch8875_g174452 = localSamplePlanar2D238_g174516;
				#endif
				half4 Layer439_g174474 = staticSwitch8875_g174452;
				float4 weightedBlendVar31_g174474 = Weights52_g174474;
				float4 weightedBlend31_g174474 = ( weightedBlendVar31_g174474.x*Layer133_g174474 + weightedBlendVar31_g174474.y*Layer237_g174474 + weightedBlendVar31_g174474.z*Layer338_g174474 + weightedBlendVar31_g174474.w*Layer439_g174474 );
				half4 Terrain_AAAA_128851_g174452 = weightedBlend31_g174474;
				half4 Layer_1243_g174460 = Terrain_AAAA_128851_g174452;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8795_g174452 = weights_167362_g174452;
				#else
				float4 staticSwitch8795_g174452 = control_167362_g174452;
				#endif
				half4 Terrain_Weights_167709_g174452 = staticSwitch8795_g174452;
				half4 Weights52_g174481 = Terrain_Weights_167709_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler238_g174520 = SS19_g174558;
				float4 temp_output_37_0_g174520 = Input_Terrain_Coords_138960_g174452;
				half4 Coords238_g174520 = temp_output_37_0_g174520;
				float3 temp_output_279_0_g174520 = Input_Position9197_g174452;
				half3 WorldPosition238_g174520 = temp_output_279_0_g174520;
				half4 localSamplePlanar2D238_g174520 = SamplePlanar2D( Texture238_g174520 , Sampler238_g174520 , Coords238_g174520 , WorldPosition238_g174520 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler246_g174520 = SS19_g174558;
				half4 Coords246_g174520 = temp_output_37_0_g174520;
				half3 WorldPosition246_g174520 = temp_output_279_0_g174520;
				float3 temp_output_280_0_g174520 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174520 = temp_output_280_0_g174520;
				half4 localSamplePlanar3D246_g174520 = SamplePlanar3D( Texture246_g174520 , Sampler246_g174520 , Coords246_g174520 , WorldPosition246_g174520 , WorldNormal246_g174520 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler234_g174520 = SS19_g174558;
				float4 Coords234_g174520 = temp_output_37_0_g174520;
				float3 WorldPosition234_g174520 = temp_output_279_0_g174520;
				float4 localSampleStochastic2D234_g174520 = SampleStochastic2D( Texture234_g174520 , Sampler234_g174520 , Coords234_g174520 , WorldPosition234_g174520 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler263_g174520 = SS19_g174558;
				half4 Coords263_g174520 = temp_output_37_0_g174520;
				half3 WorldPosition263_g174520 = temp_output_279_0_g174520;
				half3 WorldNormal263_g174520 = temp_output_280_0_g174520;
				half4 localSampleStochastic3D263_g174520 = SampleStochastic3D( Texture263_g174520 , Sampler263_g174520 , Coords263_g174520 , WorldPosition263_g174520 , WorldNormal263_g174520 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8972_g174452 = localSamplePlanar2D238_g174520;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8972_g174452 = localSamplePlanar3D246_g174520;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8972_g174452 = localSampleStochastic2D234_g174520;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8972_g174452 = localSampleStochastic3D263_g174520;
				#else
				float4 staticSwitch8972_g174452 = localSamplePlanar2D238_g174520;
				#endif
				half4 Layer133_g174481 = staticSwitch8972_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler238_g174526 = SS19_g174558;
				float4 temp_output_37_0_g174526 = Input_Terrain_Coords_148961_g174452;
				half4 Coords238_g174526 = temp_output_37_0_g174526;
				float3 temp_output_279_0_g174526 = Input_Position9197_g174452;
				half3 WorldPosition238_g174526 = temp_output_279_0_g174526;
				half4 localSamplePlanar2D238_g174526 = SamplePlanar2D( Texture238_g174526 , Sampler238_g174526 , Coords238_g174526 , WorldPosition238_g174526 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler246_g174526 = SS19_g174558;
				half4 Coords246_g174526 = temp_output_37_0_g174526;
				half3 WorldPosition246_g174526 = temp_output_279_0_g174526;
				float3 temp_output_280_0_g174526 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174526 = temp_output_280_0_g174526;
				half4 localSamplePlanar3D246_g174526 = SamplePlanar3D( Texture246_g174526 , Sampler246_g174526 , Coords246_g174526 , WorldPosition246_g174526 , WorldNormal246_g174526 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler234_g174526 = SS19_g174558;
				float4 Coords234_g174526 = temp_output_37_0_g174526;
				float3 WorldPosition234_g174526 = temp_output_279_0_g174526;
				float4 localSampleStochastic2D234_g174526 = SampleStochastic2D( Texture234_g174526 , Sampler234_g174526 , Coords234_g174526 , WorldPosition234_g174526 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler263_g174526 = SS19_g174558;
				half4 Coords263_g174526 = temp_output_37_0_g174526;
				half3 WorldPosition263_g174526 = temp_output_279_0_g174526;
				half3 WorldNormal263_g174526 = temp_output_280_0_g174526;
				half4 localSampleStochastic3D263_g174526 = SampleStochastic3D( Texture263_g174526 , Sampler263_g174526 , Coords263_g174526 , WorldPosition263_g174526 , WorldNormal263_g174526 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8973_g174452 = localSamplePlanar2D238_g174526;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8973_g174452 = localSamplePlanar3D246_g174526;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8973_g174452 = localSampleStochastic2D234_g174526;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8973_g174452 = localSampleStochastic3D263_g174526;
				#else
				float4 staticSwitch8973_g174452 = localSamplePlanar2D238_g174526;
				#endif
				half4 Layer237_g174481 = staticSwitch8973_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler238_g174527 = SS19_g174558;
				float4 temp_output_37_0_g174527 = Input_Terrain_Coords_158962_g174452;
				half4 Coords238_g174527 = temp_output_37_0_g174527;
				float3 temp_output_279_0_g174527 = Input_Position9197_g174452;
				half3 WorldPosition238_g174527 = temp_output_279_0_g174527;
				half4 localSamplePlanar2D238_g174527 = SamplePlanar2D( Texture238_g174527 , Sampler238_g174527 , Coords238_g174527 , WorldPosition238_g174527 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler246_g174527 = SS19_g174558;
				half4 Coords246_g174527 = temp_output_37_0_g174527;
				half3 WorldPosition246_g174527 = temp_output_279_0_g174527;
				float3 temp_output_280_0_g174527 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174527 = temp_output_280_0_g174527;
				half4 localSamplePlanar3D246_g174527 = SamplePlanar3D( Texture246_g174527 , Sampler246_g174527 , Coords246_g174527 , WorldPosition246_g174527 , WorldNormal246_g174527 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler234_g174527 = SS19_g174558;
				float4 Coords234_g174527 = temp_output_37_0_g174527;
				float3 WorldPosition234_g174527 = temp_output_279_0_g174527;
				float4 localSampleStochastic2D234_g174527 = SampleStochastic2D( Texture234_g174527 , Sampler234_g174527 , Coords234_g174527 , WorldPosition234_g174527 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler263_g174527 = SS19_g174558;
				half4 Coords263_g174527 = temp_output_37_0_g174527;
				half3 WorldPosition263_g174527 = temp_output_279_0_g174527;
				half3 WorldNormal263_g174527 = temp_output_280_0_g174527;
				half4 localSampleStochastic3D263_g174527 = SampleStochastic3D( Texture263_g174527 , Sampler263_g174527 , Coords263_g174527 , WorldPosition263_g174527 , WorldNormal263_g174527 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8974_g174452 = localSamplePlanar2D238_g174527;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8974_g174452 = localSamplePlanar3D246_g174527;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8974_g174452 = localSampleStochastic2D234_g174527;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8974_g174452 = localSampleStochastic3D263_g174527;
				#else
				float4 staticSwitch8974_g174452 = localSamplePlanar2D238_g174527;
				#endif
				half4 Layer338_g174481 = staticSwitch8974_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler238_g174528 = SS19_g174558;
				float4 temp_output_37_0_g174528 = Input_Terrain_Coords_168959_g174452;
				half4 Coords238_g174528 = temp_output_37_0_g174528;
				float3 temp_output_279_0_g174528 = Input_Position9197_g174452;
				half3 WorldPosition238_g174528 = temp_output_279_0_g174528;
				half4 localSamplePlanar2D238_g174528 = SamplePlanar2D( Texture238_g174528 , Sampler238_g174528 , Coords238_g174528 , WorldPosition238_g174528 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler246_g174528 = SS19_g174558;
				half4 Coords246_g174528 = temp_output_37_0_g174528;
				half3 WorldPosition246_g174528 = temp_output_279_0_g174528;
				float3 temp_output_280_0_g174528 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174528 = temp_output_280_0_g174528;
				half4 localSamplePlanar3D246_g174528 = SamplePlanar3D( Texture246_g174528 , Sampler246_g174528 , Coords246_g174528 , WorldPosition246_g174528 , WorldNormal246_g174528 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler234_g174528 = SS19_g174558;
				float4 Coords234_g174528 = temp_output_37_0_g174528;
				float3 WorldPosition234_g174528 = temp_output_279_0_g174528;
				float4 localSampleStochastic2D234_g174528 = SampleStochastic2D( Texture234_g174528 , Sampler234_g174528 , Coords234_g174528 , WorldPosition234_g174528 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler263_g174528 = SS19_g174558;
				half4 Coords263_g174528 = temp_output_37_0_g174528;
				half3 WorldPosition263_g174528 = temp_output_279_0_g174528;
				half3 WorldNormal263_g174528 = temp_output_280_0_g174528;
				half4 localSampleStochastic3D263_g174528 = SampleStochastic3D( Texture263_g174528 , Sampler263_g174528 , Coords263_g174528 , WorldPosition263_g174528 , WorldNormal263_g174528 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8975_g174452 = localSamplePlanar2D238_g174528;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8975_g174452 = localSamplePlanar3D246_g174528;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8975_g174452 = localSampleStochastic2D234_g174528;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8975_g174452 = localSampleStochastic3D263_g174528;
				#else
				float4 staticSwitch8975_g174452 = localSamplePlanar2D238_g174528;
				#endif
				half4 Layer439_g174481 = staticSwitch8975_g174452;
				float4 weightedBlendVar31_g174481 = Weights52_g174481;
				float4 weightedBlend31_g174481 = ( weightedBlendVar31_g174481.x*Layer133_g174481 + weightedBlendVar31_g174481.y*Layer237_g174481 + weightedBlendVar31_g174481.z*Layer338_g174481 + weightedBlendVar31_g174481.w*Layer439_g174481 );
				half4 Terrain_AAAA_168986_g174452 = weightedBlend31_g174481;
				half4 Layer_1644_g174460 = Terrain_AAAA_168986_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174460 = Layer_045_g174460;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174460 = ( Layer_045_g174460 + Layer_0810_g174460 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174460 = ( Layer_045_g174460 + Layer_0810_g174460 + Layer_1243_g174460 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174460 = ( Layer_045_g174460 + Layer_0810_g174460 + Layer_1243_g174460 + Layer_1644_g174460 );
				#else
				float4 staticSwitch40_g174460 = Layer_045_g174460;
				#endif
				half4 Blend_Albedo7468_g174452 = staticSwitch40_g174460;
				half4 Weights52_g174546 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174546 = _TerrainColor1;
				half4 Layer237_g174546 = _TerrainColor2;
				half4 Layer338_g174546 = _TerrainColor3;
				half4 Layer439_g174546 = _TerrainColor4;
				float4 weightedBlendVar31_g174546 = Weights52_g174546;
				float4 weightedBlend31_g174546 = ( weightedBlendVar31_g174546.x*Layer133_g174546 + weightedBlendVar31_g174546.y*Layer237_g174546 + weightedBlendVar31_g174546.z*Layer338_g174546 + weightedBlendVar31_g174546.w*Layer439_g174546 );
				half4 Terrain_Color_049349_g174452 = weightedBlend31_g174546;
				half4 Layer_045_g174551 = Terrain_Color_049349_g174452;
				half4 Weights52_g174547 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174547 = _TerrainColor5;
				half4 Layer237_g174547 = _TerrainColor6;
				half4 Layer338_g174547 = _TerrainColor7;
				half4 Layer439_g174547 = _TerrainColor8;
				float4 weightedBlendVar31_g174547 = Weights52_g174547;
				float4 weightedBlend31_g174547 = ( weightedBlendVar31_g174547.x*Layer133_g174547 + weightedBlendVar31_g174547.y*Layer237_g174547 + weightedBlendVar31_g174547.z*Layer338_g174547 + weightedBlendVar31_g174547.w*Layer439_g174547 );
				half4 Terrain_Color_089361_g174452 = weightedBlend31_g174547;
				half4 Layer_0810_g174551 = Terrain_Color_089361_g174452;
				half4 Weights52_g174548 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174548 = _TerrainColor9;
				half4 Layer237_g174548 = _TerrainColor10;
				half4 Layer338_g174548 = _TerrainColor11;
				half4 Layer439_g174548 = _TerrainColor12;
				float4 weightedBlendVar31_g174548 = Weights52_g174548;
				float4 weightedBlend31_g174548 = ( weightedBlendVar31_g174548.x*Layer133_g174548 + weightedBlendVar31_g174548.y*Layer237_g174548 + weightedBlendVar31_g174548.z*Layer338_g174548 + weightedBlendVar31_g174548.w*Layer439_g174548 );
				half4 Terrain_Color_129373_g174452 = weightedBlend31_g174548;
				half4 Layer_1243_g174551 = Terrain_Color_129373_g174452;
				half4 Weights52_g174549 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174549 = _TerrainColor13;
				half4 Layer237_g174549 = _TerrainColor14;
				half4 Layer338_g174549 = _TerrainColor15;
				half4 Layer439_g174549 = _TerrainColor16;
				float4 weightedBlendVar31_g174549 = Weights52_g174549;
				float4 weightedBlend31_g174549 = ( weightedBlendVar31_g174549.x*Layer133_g174549 + weightedBlendVar31_g174549.y*Layer237_g174549 + weightedBlendVar31_g174549.z*Layer338_g174549 + weightedBlendVar31_g174549.w*Layer439_g174549 );
				half4 Terrain_Color_169381_g174452 = weightedBlend31_g174549;
				half4 Layer_1644_g174551 = Terrain_Color_169381_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174551 = Layer_045_g174551;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174551 = ( Layer_045_g174551 + Layer_0810_g174551 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174551 = ( Layer_045_g174551 + Layer_0810_g174551 + Layer_1243_g174551 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174551 = ( Layer_045_g174551 + Layer_0810_g174551 + Layer_1243_g174551 + Layer_1644_g174551 );
				#else
				float4 staticSwitch40_g174551 = Layer_045_g174551;
				#endif
				half4 Blend_TerrainColor9387_g174452 = staticSwitch40_g174551;
				half3 Final_Albedo9144_g174452 = ( (Blend_Albedo7468_g174452).xyz * (Blend_TerrainColor9387_g174452).rgb * (_TerrainColor).rgb );
				half3 Local_Albedo768_g174425 = Final_Albedo9144_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174446) = _TerrainMaskTex;
				SamplerState Sampler276_g174446 = sampler_Linear_Repeat;
				float4 temp_output_6_0_g174444 = _terrain_mask_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174444 = ( temp_output_6_0_g174444 + ( ( _TerrainMaskSampleMode + _TerrainMaskCoordMode + _TerrainMaskCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174444 = temp_output_6_0_g174444;
				#endif
				half4 Local_MaskCoords813_g174425 = staticSwitch14_g174444;
				float4 temp_output_37_0_g174446 = Local_MaskCoords813_g174425;
				half4 Coords276_g174446 = temp_output_37_0_g174446;
				half2 TexCoord276_g174446 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174446 = SampleMain( Texture276_g174446 , Sampler276_g174446 , Coords276_g174446 , TexCoord276_g174446 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174446) = _TerrainMaskTex;
				SamplerState Sampler275_g174446 = sampler_Linear_Repeat;
				half4 Coords275_g174446 = temp_output_37_0_g174446;
				half2 TexCoord275_g174446 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174446 = SampleExtra( Texture275_g174446 , Sampler275_g174446 , Coords275_g174446 , TexCoord275_g174446 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174446) = _TerrainMaskTex;
				SamplerState Sampler238_g174446 = sampler_Linear_Repeat;
				half4 Coords238_g174446 = temp_output_37_0_g174446;
				float3 temp_output_279_0_g174446 = Model_PositionWO636_g174425;
				half3 WorldPosition238_g174446 = temp_output_279_0_g174446;
				half4 localSamplePlanar2D238_g174446 = SamplePlanar2D( Texture238_g174446 , Sampler238_g174446 , Coords238_g174446 , WorldPosition238_g174446 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174446) = _TerrainMaskTex;
				SamplerState Sampler246_g174446 = sampler_Linear_Repeat;
				half4 Coords246_g174446 = temp_output_37_0_g174446;
				half3 WorldPosition246_g174446 = temp_output_279_0_g174446;
				float3 temp_output_280_0_g174446 = Model_NormalRawWS869_g174425;
				half3 WorldNormal246_g174446 = temp_output_280_0_g174446;
				half4 localSamplePlanar3D246_g174446 = SamplePlanar3D( Texture246_g174446 , Sampler246_g174446 , Coords246_g174446 , WorldPosition246_g174446 , WorldNormal246_g174446 );
				#if defined( TVE_TERRAIN_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch817_g174425 = localSampleMain276_g174446;
				#elif defined( TVE_TERRAIN_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch817_g174425 = localSampleExtra275_g174446;
				#elif defined( TVE_TERRAIN_MASK_SAMPLE_PLANAR_2D )
				float4 staticSwitch817_g174425 = localSamplePlanar2D238_g174446;
				#elif defined( TVE_TERRAIN_MASK_SAMPLE_PLANAR_3D )
				float4 staticSwitch817_g174425 = localSamplePlanar3D246_g174446;
				#else
				float4 staticSwitch817_g174425 = localSampleMain276_g174446;
				#endif
				half4 Local_MaskTex861_g174425 = staticSwitch817_g174425;
				float clampResult17_g174435 = clamp( (Local_MaskTex861_g174425).x , 0.0001 , 0.9999 );
				float temp_output_7_0_g174436 = _TerrainMaskRemap.x;
				float temp_output_10_0_g174436 = ( _TerrainMaskRemap.y - temp_output_7_0_g174436 );
				float lerpResult1108_g174425 = lerp( 1.0 , saturate( ( ( clampResult17_g174435 - temp_output_7_0_g174436 ) / ( temp_output_10_0_g174436 + 0.0001 ) ) ) , _TerrainMaskValue);
				half Detail_TexMask429_g174425 = lerpResult1108_g174425;
				half3 Visual_NormalWS953_g174425 = Out_NormalWS4_g174428;
				float clampResult17_g174437 = clamp( saturate( (Visual_NormalWS953_g174425).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174438 = _TerrainProjRemap.x;
				float temp_output_10_0_g174438 = ( _TerrainProjRemap.y - temp_output_7_0_g174438 );
				float lerpResult1106_g174425 = lerp( 1.0 , saturate( ( ( clampResult17_g174437 - temp_output_7_0_g174438 ) / ( temp_output_10_0_g174438 + 0.0001 ) ) ) , _TerrainProjValue);
				half Blend_ProjMask912_g174425 = lerpResult1106_g174425;
				TVEGlobalData Data15_g174430 = Data204_g173897;
				float Out_Dummy15_g174430 = 0;
				float4 Out_CoatParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174430 = float4( 0,0,0,0 );
				Out_Dummy15_g174430 = Data15_g174430.Dummy;
				Out_CoatParams15_g174430 = Data15_g174430.CoatParams;
				Out_PaintParams15_g174430 = Data15_g174430.PaintParams;
				Out_GlowParams15_g174430 = Data15_g174430.GlowParams;
				Out_AtmoParams15_g174430= Data15_g174430.AtmoParams;
				Out_FadeParams15_g174430= Data15_g174430.FadeParams;
				Out_FormParams15_g174430 = Data15_g174430.FormParams;
				Out_LandParams15_g174430 = Data15_g174430.LandParams;
				Out_WindParams15_g174430 = Data15_g174430.WindParams;
				Out_PushParams15_g174430 = Data15_g174430.PushParams;
				half4 Global_CoatParams972_g174425 = Out_CoatParams15_g174430;
				float lerpResult1103_g174425 = lerp( 1.0 , (Global_CoatParams972_g174425).x , TVE_IsEnabled);
				#ifdef TVE_TERRAIN_ELEMENT
				float staticSwitch965_g174425 = lerpResult1103_g174425;
				#else
				float staticSwitch965_g174425 = 1.0;
				#endif
				half Blend_GlobalMask968_g174425 = staticSwitch965_g174425;
				half4 Global_FormParams1018_g174425 = Out_FormParams15_g174430;
				float temp_output_1128_0_g174425 = saturate( ( ( (Global_FormParams1018_g174425).z - (Model_PositionWO636_g174425).y ) + _TerrainLandOffsetValue ) );
				float lerpResult1130_g174425 = lerp( 1.0 , temp_output_1128_0_g174425 , ( _TerrainLandValue * _TerrainLandMode ));
				half Blend_LandMask_Mul1132_g174425 = lerpResult1130_g174425;
				half Blend_LandMask_Add1131_g174425 = ( temp_output_1128_0_g174425 * _TerrainLandValue );
				float clampResult17_g174450 = clamp( ( ( _TerrainIntensityValue * Detail_TexMask429_g174425 * Blend_ProjMask912_g174425 * Blend_GlobalMask968_g174425 * Blend_LandMask_Mul1132_g174425 ) + Blend_LandMask_Add1131_g174425 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174449 = _TerrainBlendRemap.x;
				float temp_output_10_0_g174449 = ( _TerrainBlendRemap.y - temp_output_7_0_g174449 );
				half Terrain_Mask412_g174425 = saturate( ( ( clampResult17_g174450 - temp_output_7_0_g174449 ) / ( temp_output_10_0_g174449 + 0.0001 ) ) );
				float3 lerpResult989_g174425 = lerp( Visual_Albedo527_g174425 , Local_Albedo768_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float3 staticSwitch415_g174425 = lerpResult989_g174425;
				#else
				float3 staticSwitch415_g174425 = Visual_Albedo527_g174425;
				#endif
				half3 Final_Albedo601_g174425 = staticSwitch415_g174425;
				float3 In_Albedo3_g174429 = Final_Albedo601_g174425;
				float3 In_AlbedoRaw3_g174429 = Final_Albedo601_g174425;
				half2 Visual_NormalTS529_g174425 = Out_NormalTS4_g174428;
				half4 Weights52_g174453 = Terrain_Weights_046781_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174544) = _TerrainNormalTex1;
				float localFilterTexture29_g174559 = ( 0.0 );
				SamplerState SamplerDefault29_g174559 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174559 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174559 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174559 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174559 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174559 = SamplerDefault29_g174559;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174559 = SamplerDefault29_g174559;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174559 = SamplerPoint29_g174559;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174559 = SamplerLow29_g174559;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174559 = SamplerMedium29_g174559;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174559 = SamplerHigh29_g174559;
				#endif
				SamplerState Sampler238_g174544 = SS29_g174559;
				float4 temp_output_37_0_g174544 = Input_Terrain_Coords_016785_g174452;
				half4 Coords238_g174544 = temp_output_37_0_g174544;
				float3 temp_output_279_0_g174544 = Input_Position9197_g174452;
				half3 WorldPosition238_g174544 = temp_output_279_0_g174544;
				half4 localSamplePlanar2D238_g174544 = SamplePlanar2D( Texture238_g174544 , Sampler238_g174544 , Coords238_g174544 , WorldPosition238_g174544 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174544) = _TerrainNormalTex1;
				SamplerState Sampler246_g174544 = SS29_g174559;
				half4 Coords246_g174544 = temp_output_37_0_g174544;
				half3 WorldPosition246_g174544 = temp_output_279_0_g174544;
				float3 temp_output_280_0_g174544 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174544 = temp_output_280_0_g174544;
				half4 localSamplePlanar3D246_g174544 = SamplePlanar3D( Texture246_g174544 , Sampler246_g174544 , Coords246_g174544 , WorldPosition246_g174544 , WorldNormal246_g174544 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174544) = _TerrainNormalTex1;
				SamplerState Sampler234_g174544 = SS29_g174559;
				float4 Coords234_g174544 = temp_output_37_0_g174544;
				float3 WorldPosition234_g174544 = temp_output_279_0_g174544;
				float4 localSampleStochastic2D234_g174544 = SampleStochastic2D( Texture234_g174544 , Sampler234_g174544 , Coords234_g174544 , WorldPosition234_g174544 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174544) = _TerrainNormalTex1;
				SamplerState Sampler263_g174544 = SS29_g174559;
				half4 Coords263_g174544 = temp_output_37_0_g174544;
				half3 WorldPosition263_g174544 = temp_output_279_0_g174544;
				half3 WorldNormal263_g174544 = temp_output_280_0_g174544;
				half4 localSampleStochastic3D263_g174544 = SampleStochastic3D( Texture263_g174544 , Sampler263_g174544 , Coords263_g174544 , WorldPosition263_g174544 , WorldNormal263_g174544 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8635_g174452 = localSamplePlanar2D238_g174544;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8635_g174452 = localSamplePlanar3D246_g174544;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8635_g174452 = localSampleStochastic2D234_g174544;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8635_g174452 = localSampleStochastic3D263_g174544;
				#else
				float4 staticSwitch8635_g174452 = localSamplePlanar2D238_g174544;
				#endif
				half4 Layer133_g174453 = staticSwitch8635_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174500) = _TerrainNormalTex2;
				SamplerState Sampler238_g174500 = SS29_g174559;
				float4 temp_output_37_0_g174500 = Input_Terrain_Coords_026787_g174452;
				half4 Coords238_g174500 = temp_output_37_0_g174500;
				float3 temp_output_279_0_g174500 = Input_Position9197_g174452;
				half3 WorldPosition238_g174500 = temp_output_279_0_g174500;
				half4 localSamplePlanar2D238_g174500 = SamplePlanar2D( Texture238_g174500 , Sampler238_g174500 , Coords238_g174500 , WorldPosition238_g174500 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174500) = _TerrainNormalTex2;
				SamplerState Sampler246_g174500 = SS29_g174559;
				half4 Coords246_g174500 = temp_output_37_0_g174500;
				half3 WorldPosition246_g174500 = temp_output_279_0_g174500;
				float3 temp_output_280_0_g174500 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174500 = temp_output_280_0_g174500;
				half4 localSamplePlanar3D246_g174500 = SamplePlanar3D( Texture246_g174500 , Sampler246_g174500 , Coords246_g174500 , WorldPosition246_g174500 , WorldNormal246_g174500 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174500) = _TerrainNormalTex2;
				SamplerState Sampler234_g174500 = SS29_g174559;
				float4 Coords234_g174500 = temp_output_37_0_g174500;
				float3 WorldPosition234_g174500 = temp_output_279_0_g174500;
				float4 localSampleStochastic2D234_g174500 = SampleStochastic2D( Texture234_g174500 , Sampler234_g174500 , Coords234_g174500 , WorldPosition234_g174500 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174500) = _TerrainNormalTex2;
				SamplerState Sampler263_g174500 = SS29_g174559;
				half4 Coords263_g174500 = temp_output_37_0_g174500;
				half3 WorldPosition263_g174500 = temp_output_279_0_g174500;
				half3 WorldNormal263_g174500 = temp_output_280_0_g174500;
				half4 localSampleStochastic3D263_g174500 = SampleStochastic3D( Texture263_g174500 , Sampler263_g174500 , Coords263_g174500 , WorldPosition263_g174500 , WorldNormal263_g174500 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8636_g174452 = localSamplePlanar2D238_g174500;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8636_g174452 = localSamplePlanar3D246_g174500;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8636_g174452 = localSampleStochastic2D234_g174500;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8636_g174452 = localSampleStochastic3D263_g174500;
				#else
				float4 staticSwitch8636_g174452 = localSamplePlanar2D238_g174500;
				#endif
				half4 Layer237_g174453 = staticSwitch8636_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174503) = _TerrainNormalTex3;
				SamplerState Sampler238_g174503 = SS29_g174559;
				float4 temp_output_37_0_g174503 = Input_Terrain_Coords_036789_g174452;
				half4 Coords238_g174503 = temp_output_37_0_g174503;
				float3 temp_output_279_0_g174503 = Input_Position9197_g174452;
				half3 WorldPosition238_g174503 = temp_output_279_0_g174503;
				half4 localSamplePlanar2D238_g174503 = SamplePlanar2D( Texture238_g174503 , Sampler238_g174503 , Coords238_g174503 , WorldPosition238_g174503 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174503) = _TerrainNormalTex3;
				SamplerState Sampler246_g174503 = SS29_g174559;
				half4 Coords246_g174503 = temp_output_37_0_g174503;
				half3 WorldPosition246_g174503 = temp_output_279_0_g174503;
				float3 temp_output_280_0_g174503 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174503 = temp_output_280_0_g174503;
				half4 localSamplePlanar3D246_g174503 = SamplePlanar3D( Texture246_g174503 , Sampler246_g174503 , Coords246_g174503 , WorldPosition246_g174503 , WorldNormal246_g174503 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174503) = _TerrainNormalTex3;
				SamplerState Sampler234_g174503 = SS29_g174559;
				float4 Coords234_g174503 = temp_output_37_0_g174503;
				float3 WorldPosition234_g174503 = temp_output_279_0_g174503;
				float4 localSampleStochastic2D234_g174503 = SampleStochastic2D( Texture234_g174503 , Sampler234_g174503 , Coords234_g174503 , WorldPosition234_g174503 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174503) = _TerrainNormalTex3;
				SamplerState Sampler263_g174503 = SS29_g174559;
				half4 Coords263_g174503 = temp_output_37_0_g174503;
				half3 WorldPosition263_g174503 = temp_output_279_0_g174503;
				half3 WorldNormal263_g174503 = temp_output_280_0_g174503;
				half4 localSampleStochastic3D263_g174503 = SampleStochastic3D( Texture263_g174503 , Sampler263_g174503 , Coords263_g174503 , WorldPosition263_g174503 , WorldNormal263_g174503 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8637_g174452 = localSamplePlanar2D238_g174503;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8637_g174452 = localSamplePlanar3D246_g174503;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8637_g174452 = localSampleStochastic2D234_g174503;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8637_g174452 = localSampleStochastic3D263_g174503;
				#else
				float4 staticSwitch8637_g174452 = localSamplePlanar2D238_g174503;
				#endif
				half4 Layer338_g174453 = staticSwitch8637_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174505) = _TerrainNormalTex4;
				SamplerState Sampler238_g174505 = SS29_g174559;
				float4 temp_output_37_0_g174505 = Input_Terrain_Coords_046791_g174452;
				half4 Coords238_g174505 = temp_output_37_0_g174505;
				float3 temp_output_279_0_g174505 = Input_Position9197_g174452;
				half3 WorldPosition238_g174505 = temp_output_279_0_g174505;
				half4 localSamplePlanar2D238_g174505 = SamplePlanar2D( Texture238_g174505 , Sampler238_g174505 , Coords238_g174505 , WorldPosition238_g174505 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174505) = _TerrainNormalTex4;
				SamplerState Sampler246_g174505 = SS29_g174559;
				half4 Coords246_g174505 = temp_output_37_0_g174505;
				half3 WorldPosition246_g174505 = temp_output_279_0_g174505;
				float3 temp_output_280_0_g174505 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174505 = temp_output_280_0_g174505;
				half4 localSamplePlanar3D246_g174505 = SamplePlanar3D( Texture246_g174505 , Sampler246_g174505 , Coords246_g174505 , WorldPosition246_g174505 , WorldNormal246_g174505 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174505) = _TerrainNormalTex4;
				SamplerState Sampler234_g174505 = SS29_g174559;
				float4 Coords234_g174505 = temp_output_37_0_g174505;
				float3 WorldPosition234_g174505 = temp_output_279_0_g174505;
				float4 localSampleStochastic2D234_g174505 = SampleStochastic2D( Texture234_g174505 , Sampler234_g174505 , Coords234_g174505 , WorldPosition234_g174505 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174505) = _TerrainNormalTex4;
				SamplerState Sampler263_g174505 = SS29_g174559;
				half4 Coords263_g174505 = temp_output_37_0_g174505;
				half3 WorldPosition263_g174505 = temp_output_279_0_g174505;
				half3 WorldNormal263_g174505 = temp_output_280_0_g174505;
				half4 localSampleStochastic3D263_g174505 = SampleStochastic3D( Texture263_g174505 , Sampler263_g174505 , Coords263_g174505 , WorldPosition263_g174505 , WorldNormal263_g174505 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8638_g174452 = localSamplePlanar2D238_g174505;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8638_g174452 = localSamplePlanar3D246_g174505;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8638_g174452 = localSampleStochastic2D234_g174505;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8638_g174452 = localSampleStochastic3D263_g174505;
				#else
				float4 staticSwitch8638_g174452 = localSamplePlanar2D238_g174505;
				#endif
				half4 Layer439_g174453 = staticSwitch8638_g174452;
				float4 weightedBlendVar31_g174453 = Weights52_g174453;
				float4 weightedBlend31_g174453 = ( weightedBlendVar31_g174453.x*Layer133_g174453 + weightedBlendVar31_g174453.y*Layer237_g174453 + weightedBlendVar31_g174453.z*Layer338_g174453 + weightedBlendVar31_g174453.w*Layer439_g174453 );
				half4 Terrain_B_047202_g174452 = weightedBlend31_g174453;
				half4 Layer_045_g174459 = Terrain_B_047202_g174452;
				half4 Weights52_g174468 = Terrain_Weights_087340_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174509) = _TerrainNormalTex5;
				SamplerState Sampler238_g174509 = SS29_g174559;
				float4 temp_output_37_0_g174509 = Input_Terrain_Coords_058750_g174452;
				half4 Coords238_g174509 = temp_output_37_0_g174509;
				float3 temp_output_279_0_g174509 = Input_Position9197_g174452;
				half3 WorldPosition238_g174509 = temp_output_279_0_g174509;
				half4 localSamplePlanar2D238_g174509 = SamplePlanar2D( Texture238_g174509 , Sampler238_g174509 , Coords238_g174509 , WorldPosition238_g174509 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174509) = _TerrainNormalTex5;
				SamplerState Sampler246_g174509 = SS29_g174559;
				half4 Coords246_g174509 = temp_output_37_0_g174509;
				half3 WorldPosition246_g174509 = temp_output_279_0_g174509;
				float3 temp_output_280_0_g174509 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174509 = temp_output_280_0_g174509;
				half4 localSamplePlanar3D246_g174509 = SamplePlanar3D( Texture246_g174509 , Sampler246_g174509 , Coords246_g174509 , WorldPosition246_g174509 , WorldNormal246_g174509 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174509) = _TerrainNormalTex5;
				SamplerState Sampler234_g174509 = SS29_g174559;
				float4 Coords234_g174509 = temp_output_37_0_g174509;
				float3 WorldPosition234_g174509 = temp_output_279_0_g174509;
				float4 localSampleStochastic2D234_g174509 = SampleStochastic2D( Texture234_g174509 , Sampler234_g174509 , Coords234_g174509 , WorldPosition234_g174509 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174509) = _TerrainNormalTex5;
				SamplerState Sampler263_g174509 = SS29_g174559;
				half4 Coords263_g174509 = temp_output_37_0_g174509;
				half3 WorldPosition263_g174509 = temp_output_279_0_g174509;
				half3 WorldNormal263_g174509 = temp_output_280_0_g174509;
				half4 localSampleStochastic3D263_g174509 = SampleStochastic3D( Texture263_g174509 , Sampler263_g174509 , Coords263_g174509 , WorldPosition263_g174509 , WorldNormal263_g174509 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8686_g174452 = localSamplePlanar2D238_g174509;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8686_g174452 = localSamplePlanar3D246_g174509;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8686_g174452 = localSampleStochastic2D234_g174509;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8686_g174452 = localSampleStochastic3D263_g174509;
				#else
				float4 staticSwitch8686_g174452 = localSamplePlanar2D238_g174509;
				#endif
				half4 Layer133_g174468 = staticSwitch8686_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174538) = _TerrainNormalTex6;
				SamplerState Sampler238_g174538 = SS29_g174559;
				float4 temp_output_37_0_g174538 = Input_Terrain_Coords_068751_g174452;
				half4 Coords238_g174538 = temp_output_37_0_g174538;
				float3 temp_output_279_0_g174538 = Input_Position9197_g174452;
				half3 WorldPosition238_g174538 = temp_output_279_0_g174538;
				half4 localSamplePlanar2D238_g174538 = SamplePlanar2D( Texture238_g174538 , Sampler238_g174538 , Coords238_g174538 , WorldPosition238_g174538 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174538) = _TerrainNormalTex6;
				SamplerState Sampler246_g174538 = SS29_g174559;
				half4 Coords246_g174538 = temp_output_37_0_g174538;
				half3 WorldPosition246_g174538 = temp_output_279_0_g174538;
				float3 temp_output_280_0_g174538 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174538 = temp_output_280_0_g174538;
				half4 localSamplePlanar3D246_g174538 = SamplePlanar3D( Texture246_g174538 , Sampler246_g174538 , Coords246_g174538 , WorldPosition246_g174538 , WorldNormal246_g174538 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174538) = _TerrainNormalTex6;
				SamplerState Sampler234_g174538 = SS29_g174559;
				float4 Coords234_g174538 = temp_output_37_0_g174538;
				float3 WorldPosition234_g174538 = temp_output_279_0_g174538;
				float4 localSampleStochastic2D234_g174538 = SampleStochastic2D( Texture234_g174538 , Sampler234_g174538 , Coords234_g174538 , WorldPosition234_g174538 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174538) = _TerrainNormalTex6;
				SamplerState Sampler263_g174538 = SS29_g174559;
				half4 Coords263_g174538 = temp_output_37_0_g174538;
				half3 WorldPosition263_g174538 = temp_output_279_0_g174538;
				half3 WorldNormal263_g174538 = temp_output_280_0_g174538;
				half4 localSampleStochastic3D263_g174538 = SampleStochastic3D( Texture263_g174538 , Sampler263_g174538 , Coords263_g174538 , WorldPosition263_g174538 , WorldNormal263_g174538 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8687_g174452 = localSamplePlanar2D238_g174538;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8687_g174452 = localSamplePlanar3D246_g174538;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8687_g174452 = localSampleStochastic2D234_g174538;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8687_g174452 = localSampleStochastic3D263_g174538;
				#else
				float4 staticSwitch8687_g174452 = localSamplePlanar2D238_g174538;
				#endif
				half4 Layer237_g174468 = staticSwitch8687_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174539) = _TerrainNormalTex7;
				SamplerState Sampler238_g174539 = SS29_g174559;
				float4 temp_output_37_0_g174539 = Input_Terrain_Coords_078752_g174452;
				half4 Coords238_g174539 = temp_output_37_0_g174539;
				float3 temp_output_279_0_g174539 = Input_Position9197_g174452;
				half3 WorldPosition238_g174539 = temp_output_279_0_g174539;
				half4 localSamplePlanar2D238_g174539 = SamplePlanar2D( Texture238_g174539 , Sampler238_g174539 , Coords238_g174539 , WorldPosition238_g174539 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174539) = _TerrainNormalTex7;
				SamplerState Sampler246_g174539 = SS29_g174559;
				half4 Coords246_g174539 = temp_output_37_0_g174539;
				half3 WorldPosition246_g174539 = temp_output_279_0_g174539;
				float3 temp_output_280_0_g174539 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174539 = temp_output_280_0_g174539;
				half4 localSamplePlanar3D246_g174539 = SamplePlanar3D( Texture246_g174539 , Sampler246_g174539 , Coords246_g174539 , WorldPosition246_g174539 , WorldNormal246_g174539 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174539) = _TerrainNormalTex7;
				SamplerState Sampler234_g174539 = SS29_g174559;
				float4 Coords234_g174539 = temp_output_37_0_g174539;
				float3 WorldPosition234_g174539 = temp_output_279_0_g174539;
				float4 localSampleStochastic2D234_g174539 = SampleStochastic2D( Texture234_g174539 , Sampler234_g174539 , Coords234_g174539 , WorldPosition234_g174539 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174539) = _TerrainNormalTex7;
				SamplerState Sampler263_g174539 = SS29_g174559;
				half4 Coords263_g174539 = temp_output_37_0_g174539;
				half3 WorldPosition263_g174539 = temp_output_279_0_g174539;
				half3 WorldNormal263_g174539 = temp_output_280_0_g174539;
				half4 localSampleStochastic3D263_g174539 = SampleStochastic3D( Texture263_g174539 , Sampler263_g174539 , Coords263_g174539 , WorldPosition263_g174539 , WorldNormal263_g174539 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8688_g174452 = localSamplePlanar2D238_g174539;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8688_g174452 = localSamplePlanar3D246_g174539;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8688_g174452 = localSampleStochastic2D234_g174539;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8688_g174452 = localSampleStochastic3D263_g174539;
				#else
				float4 staticSwitch8688_g174452 = localSamplePlanar2D238_g174539;
				#endif
				half4 Layer338_g174468 = staticSwitch8688_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174540) = _TerrainNormalTex8;
				SamplerState Sampler238_g174540 = SS29_g174559;
				float4 temp_output_37_0_g174540 = Input_Terrain_Coords_088749_g174452;
				half4 Coords238_g174540 = temp_output_37_0_g174540;
				float3 temp_output_279_0_g174540 = Input_Position9197_g174452;
				half3 WorldPosition238_g174540 = temp_output_279_0_g174540;
				half4 localSamplePlanar2D238_g174540 = SamplePlanar2D( Texture238_g174540 , Sampler238_g174540 , Coords238_g174540 , WorldPosition238_g174540 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174540) = _TerrainNormalTex8;
				SamplerState Sampler246_g174540 = SS29_g174559;
				half4 Coords246_g174540 = temp_output_37_0_g174540;
				half3 WorldPosition246_g174540 = temp_output_279_0_g174540;
				float3 temp_output_280_0_g174540 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174540 = temp_output_280_0_g174540;
				half4 localSamplePlanar3D246_g174540 = SamplePlanar3D( Texture246_g174540 , Sampler246_g174540 , Coords246_g174540 , WorldPosition246_g174540 , WorldNormal246_g174540 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174540) = _TerrainNormalTex8;
				SamplerState Sampler234_g174540 = SS29_g174559;
				float4 Coords234_g174540 = temp_output_37_0_g174540;
				float3 WorldPosition234_g174540 = temp_output_279_0_g174540;
				float4 localSampleStochastic2D234_g174540 = SampleStochastic2D( Texture234_g174540 , Sampler234_g174540 , Coords234_g174540 , WorldPosition234_g174540 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174540) = _TerrainNormalTex8;
				SamplerState Sampler263_g174540 = SS29_g174559;
				half4 Coords263_g174540 = temp_output_37_0_g174540;
				half3 WorldPosition263_g174540 = temp_output_279_0_g174540;
				half3 WorldNormal263_g174540 = temp_output_280_0_g174540;
				half4 localSampleStochastic3D263_g174540 = SampleStochastic3D( Texture263_g174540 , Sampler263_g174540 , Coords263_g174540 , WorldPosition263_g174540 , WorldNormal263_g174540 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8689_g174452 = localSamplePlanar2D238_g174540;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8689_g174452 = localSamplePlanar3D246_g174540;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8689_g174452 = localSampleStochastic2D234_g174540;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8689_g174452 = localSampleStochastic3D263_g174540;
				#else
				float4 staticSwitch8689_g174452 = localSamplePlanar2D238_g174540;
				#endif
				half4 Layer439_g174468 = staticSwitch8689_g174452;
				float4 weightedBlendVar31_g174468 = Weights52_g174468;
				float4 weightedBlend31_g174468 = ( weightedBlendVar31_g174468.x*Layer133_g174468 + weightedBlendVar31_g174468.y*Layer237_g174468 + weightedBlendVar31_g174468.z*Layer338_g174468 + weightedBlendVar31_g174468.w*Layer439_g174468 );
				half4 Terrain_B_088684_g174452 = weightedBlend31_g174468;
				half4 Layer_0810_g174459 = Terrain_B_088684_g174452;
				half4 Weights52_g174475 = Terrain_Weights_127710_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174512) = _TerrainNormalTex9;
				SamplerState Sampler238_g174512 = SS29_g174559;
				float4 temp_output_37_0_g174512 = Input_Terrain_Coords_098833_g174452;
				half4 Coords238_g174512 = temp_output_37_0_g174512;
				float3 temp_output_279_0_g174512 = Input_Position9197_g174452;
				half3 WorldPosition238_g174512 = temp_output_279_0_g174512;
				half4 localSamplePlanar2D238_g174512 = SamplePlanar2D( Texture238_g174512 , Sampler238_g174512 , Coords238_g174512 , WorldPosition238_g174512 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174512) = _TerrainNormalTex9;
				SamplerState Sampler246_g174512 = SS29_g174559;
				half4 Coords246_g174512 = temp_output_37_0_g174512;
				half3 WorldPosition246_g174512 = temp_output_279_0_g174512;
				float3 temp_output_280_0_g174512 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174512 = temp_output_280_0_g174512;
				half4 localSamplePlanar3D246_g174512 = SamplePlanar3D( Texture246_g174512 , Sampler246_g174512 , Coords246_g174512 , WorldPosition246_g174512 , WorldNormal246_g174512 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174512) = _TerrainNormalTex9;
				SamplerState Sampler234_g174512 = SS29_g174559;
				float4 Coords234_g174512 = temp_output_37_0_g174512;
				float3 WorldPosition234_g174512 = temp_output_279_0_g174512;
				float4 localSampleStochastic2D234_g174512 = SampleStochastic2D( Texture234_g174512 , Sampler234_g174512 , Coords234_g174512 , WorldPosition234_g174512 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174512) = _TerrainNormalTex9;
				SamplerState Sampler263_g174512 = SS29_g174559;
				half4 Coords263_g174512 = temp_output_37_0_g174512;
				half3 WorldPosition263_g174512 = temp_output_279_0_g174512;
				half3 WorldNormal263_g174512 = temp_output_280_0_g174512;
				half4 localSampleStochastic3D263_g174512 = SampleStochastic3D( Texture263_g174512 , Sampler263_g174512 , Coords263_g174512 , WorldPosition263_g174512 , WorldNormal263_g174512 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8849_g174452 = localSamplePlanar2D238_g174512;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8849_g174452 = localSamplePlanar3D246_g174512;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8849_g174452 = localSampleStochastic2D234_g174512;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8849_g174452 = localSampleStochastic3D263_g174512;
				#else
				float4 staticSwitch8849_g174452 = localSamplePlanar2D238_g174512;
				#endif
				half4 Layer133_g174475 = staticSwitch8849_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174517) = _TerrainNormalTex10;
				SamplerState Sampler238_g174517 = SS29_g174559;
				float4 temp_output_37_0_g174517 = Input_Terrain_Coords_108834_g174452;
				half4 Coords238_g174517 = temp_output_37_0_g174517;
				float3 temp_output_279_0_g174517 = Input_Position9197_g174452;
				half3 WorldPosition238_g174517 = temp_output_279_0_g174517;
				half4 localSamplePlanar2D238_g174517 = SamplePlanar2D( Texture238_g174517 , Sampler238_g174517 , Coords238_g174517 , WorldPosition238_g174517 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174517) = _TerrainNormalTex10;
				SamplerState Sampler246_g174517 = SS29_g174559;
				half4 Coords246_g174517 = temp_output_37_0_g174517;
				half3 WorldPosition246_g174517 = temp_output_279_0_g174517;
				float3 temp_output_280_0_g174517 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174517 = temp_output_280_0_g174517;
				half4 localSamplePlanar3D246_g174517 = SamplePlanar3D( Texture246_g174517 , Sampler246_g174517 , Coords246_g174517 , WorldPosition246_g174517 , WorldNormal246_g174517 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174517) = _TerrainNormalTex10;
				SamplerState Sampler234_g174517 = SS29_g174559;
				float4 Coords234_g174517 = temp_output_37_0_g174517;
				float3 WorldPosition234_g174517 = temp_output_279_0_g174517;
				float4 localSampleStochastic2D234_g174517 = SampleStochastic2D( Texture234_g174517 , Sampler234_g174517 , Coords234_g174517 , WorldPosition234_g174517 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174517) = _TerrainNormalTex10;
				SamplerState Sampler263_g174517 = SS29_g174559;
				half4 Coords263_g174517 = temp_output_37_0_g174517;
				half3 WorldPosition263_g174517 = temp_output_279_0_g174517;
				half3 WorldNormal263_g174517 = temp_output_280_0_g174517;
				half4 localSampleStochastic3D263_g174517 = SampleStochastic3D( Texture263_g174517 , Sampler263_g174517 , Coords263_g174517 , WorldPosition263_g174517 , WorldNormal263_g174517 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8876_g174452 = localSamplePlanar2D238_g174517;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8876_g174452 = localSamplePlanar3D246_g174517;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8876_g174452 = localSampleStochastic2D234_g174517;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8876_g174452 = localSampleStochastic3D263_g174517;
				#else
				float4 staticSwitch8876_g174452 = localSamplePlanar2D238_g174517;
				#endif
				half4 Layer237_g174475 = staticSwitch8876_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174518) = _TerrainNormalTex11;
				SamplerState Sampler238_g174518 = SS29_g174559;
				float4 temp_output_37_0_g174518 = Input_Terrain_Coords_118835_g174452;
				half4 Coords238_g174518 = temp_output_37_0_g174518;
				float3 temp_output_279_0_g174518 = Input_Position9197_g174452;
				half3 WorldPosition238_g174518 = temp_output_279_0_g174518;
				half4 localSamplePlanar2D238_g174518 = SamplePlanar2D( Texture238_g174518 , Sampler238_g174518 , Coords238_g174518 , WorldPosition238_g174518 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174518) = _TerrainNormalTex11;
				SamplerState Sampler246_g174518 = SS29_g174559;
				half4 Coords246_g174518 = temp_output_37_0_g174518;
				half3 WorldPosition246_g174518 = temp_output_279_0_g174518;
				float3 temp_output_280_0_g174518 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174518 = temp_output_280_0_g174518;
				half4 localSamplePlanar3D246_g174518 = SamplePlanar3D( Texture246_g174518 , Sampler246_g174518 , Coords246_g174518 , WorldPosition246_g174518 , WorldNormal246_g174518 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174518) = _TerrainNormalTex11;
				SamplerState Sampler234_g174518 = SS29_g174559;
				float4 Coords234_g174518 = temp_output_37_0_g174518;
				float3 WorldPosition234_g174518 = temp_output_279_0_g174518;
				float4 localSampleStochastic2D234_g174518 = SampleStochastic2D( Texture234_g174518 , Sampler234_g174518 , Coords234_g174518 , WorldPosition234_g174518 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174518) = _TerrainNormalTex11;
				SamplerState Sampler263_g174518 = SS29_g174559;
				half4 Coords263_g174518 = temp_output_37_0_g174518;
				half3 WorldPosition263_g174518 = temp_output_279_0_g174518;
				half3 WorldNormal263_g174518 = temp_output_280_0_g174518;
				half4 localSampleStochastic3D263_g174518 = SampleStochastic3D( Texture263_g174518 , Sampler263_g174518 , Coords263_g174518 , WorldPosition263_g174518 , WorldNormal263_g174518 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8850_g174452 = localSamplePlanar2D238_g174518;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8850_g174452 = localSamplePlanar3D246_g174518;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8850_g174452 = localSampleStochastic2D234_g174518;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8850_g174452 = localSampleStochastic3D263_g174518;
				#else
				float4 staticSwitch8850_g174452 = localSamplePlanar2D238_g174518;
				#endif
				half4 Layer338_g174475 = staticSwitch8850_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174519) = _TerrainNormalTex12;
				SamplerState Sampler238_g174519 = SS29_g174559;
				float4 temp_output_37_0_g174519 = Input_Terrain_Coords_128836_g174452;
				half4 Coords238_g174519 = temp_output_37_0_g174519;
				float3 temp_output_279_0_g174519 = Input_Position9197_g174452;
				half3 WorldPosition238_g174519 = temp_output_279_0_g174519;
				half4 localSamplePlanar2D238_g174519 = SamplePlanar2D( Texture238_g174519 , Sampler238_g174519 , Coords238_g174519 , WorldPosition238_g174519 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174519) = _TerrainNormalTex12;
				SamplerState Sampler246_g174519 = SS29_g174559;
				half4 Coords246_g174519 = temp_output_37_0_g174519;
				half3 WorldPosition246_g174519 = temp_output_279_0_g174519;
				float3 temp_output_280_0_g174519 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174519 = temp_output_280_0_g174519;
				half4 localSamplePlanar3D246_g174519 = SamplePlanar3D( Texture246_g174519 , Sampler246_g174519 , Coords246_g174519 , WorldPosition246_g174519 , WorldNormal246_g174519 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174519) = _TerrainNormalTex12;
				SamplerState Sampler234_g174519 = SS29_g174559;
				float4 Coords234_g174519 = temp_output_37_0_g174519;
				float3 WorldPosition234_g174519 = temp_output_279_0_g174519;
				float4 localSampleStochastic2D234_g174519 = SampleStochastic2D( Texture234_g174519 , Sampler234_g174519 , Coords234_g174519 , WorldPosition234_g174519 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174519) = _TerrainNormalTex12;
				SamplerState Sampler263_g174519 = SS29_g174559;
				half4 Coords263_g174519 = temp_output_37_0_g174519;
				half3 WorldPosition263_g174519 = temp_output_279_0_g174519;
				half3 WorldNormal263_g174519 = temp_output_280_0_g174519;
				half4 localSampleStochastic3D263_g174519 = SampleStochastic3D( Texture263_g174519 , Sampler263_g174519 , Coords263_g174519 , WorldPosition263_g174519 , WorldNormal263_g174519 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8877_g174452 = localSamplePlanar2D238_g174519;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8877_g174452 = localSamplePlanar3D246_g174519;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8877_g174452 = localSampleStochastic2D234_g174519;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8877_g174452 = localSampleStochastic3D263_g174519;
				#else
				float4 staticSwitch8877_g174452 = localSamplePlanar2D238_g174519;
				#endif
				half4 Layer439_g174475 = staticSwitch8877_g174452;
				float4 weightedBlendVar31_g174475 = Weights52_g174475;
				float4 weightedBlend31_g174475 = ( weightedBlendVar31_g174475.x*Layer133_g174475 + weightedBlendVar31_g174475.y*Layer237_g174475 + weightedBlendVar31_g174475.z*Layer338_g174475 + weightedBlendVar31_g174475.w*Layer439_g174475 );
				half4 Terrain_B_128865_g174452 = weightedBlend31_g174475;
				half4 Layer_1243_g174459 = Terrain_B_128865_g174452;
				half4 Weights52_g174482 = Terrain_Weights_167709_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174522) = _TerrainNormalTex13;
				SamplerState Sampler238_g174522 = SS29_g174559;
				float4 temp_output_37_0_g174522 = Input_Terrain_Coords_138960_g174452;
				half4 Coords238_g174522 = temp_output_37_0_g174522;
				float3 temp_output_279_0_g174522 = Input_Position9197_g174452;
				half3 WorldPosition238_g174522 = temp_output_279_0_g174522;
				half4 localSamplePlanar2D238_g174522 = SamplePlanar2D( Texture238_g174522 , Sampler238_g174522 , Coords238_g174522 , WorldPosition238_g174522 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174522) = _TerrainNormalTex13;
				SamplerState Sampler246_g174522 = SS29_g174559;
				half4 Coords246_g174522 = temp_output_37_0_g174522;
				half3 WorldPosition246_g174522 = temp_output_279_0_g174522;
				float3 temp_output_280_0_g174522 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174522 = temp_output_280_0_g174522;
				half4 localSamplePlanar3D246_g174522 = SamplePlanar3D( Texture246_g174522 , Sampler246_g174522 , Coords246_g174522 , WorldPosition246_g174522 , WorldNormal246_g174522 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174522) = _TerrainNormalTex13;
				SamplerState Sampler234_g174522 = SS29_g174559;
				float4 Coords234_g174522 = temp_output_37_0_g174522;
				float3 WorldPosition234_g174522 = temp_output_279_0_g174522;
				float4 localSampleStochastic2D234_g174522 = SampleStochastic2D( Texture234_g174522 , Sampler234_g174522 , Coords234_g174522 , WorldPosition234_g174522 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174522) = _TerrainNormalTex13;
				SamplerState Sampler263_g174522 = SS29_g174559;
				half4 Coords263_g174522 = temp_output_37_0_g174522;
				half3 WorldPosition263_g174522 = temp_output_279_0_g174522;
				half3 WorldNormal263_g174522 = temp_output_280_0_g174522;
				half4 localSampleStochastic3D263_g174522 = SampleStochastic3D( Texture263_g174522 , Sampler263_g174522 , Coords263_g174522 , WorldPosition263_g174522 , WorldNormal263_g174522 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8991_g174452 = localSamplePlanar2D238_g174522;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8991_g174452 = localSamplePlanar3D246_g174522;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8991_g174452 = localSampleStochastic2D234_g174522;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8991_g174452 = localSampleStochastic3D263_g174522;
				#else
				float4 staticSwitch8991_g174452 = localSamplePlanar2D238_g174522;
				#endif
				half4 Layer133_g174482 = staticSwitch8991_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174529) = _TerrainNormalTex14;
				SamplerState Sampler238_g174529 = SS29_g174559;
				float4 temp_output_37_0_g174529 = Input_Terrain_Coords_148961_g174452;
				half4 Coords238_g174529 = temp_output_37_0_g174529;
				float3 temp_output_279_0_g174529 = Input_Position9197_g174452;
				half3 WorldPosition238_g174529 = temp_output_279_0_g174529;
				half4 localSamplePlanar2D238_g174529 = SamplePlanar2D( Texture238_g174529 , Sampler238_g174529 , Coords238_g174529 , WorldPosition238_g174529 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174529) = _TerrainNormalTex14;
				SamplerState Sampler246_g174529 = SS29_g174559;
				half4 Coords246_g174529 = temp_output_37_0_g174529;
				half3 WorldPosition246_g174529 = temp_output_279_0_g174529;
				float3 temp_output_280_0_g174529 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174529 = temp_output_280_0_g174529;
				half4 localSamplePlanar3D246_g174529 = SamplePlanar3D( Texture246_g174529 , Sampler246_g174529 , Coords246_g174529 , WorldPosition246_g174529 , WorldNormal246_g174529 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174529) = _TerrainNormalTex14;
				SamplerState Sampler234_g174529 = SS29_g174559;
				float4 Coords234_g174529 = temp_output_37_0_g174529;
				float3 WorldPosition234_g174529 = temp_output_279_0_g174529;
				float4 localSampleStochastic2D234_g174529 = SampleStochastic2D( Texture234_g174529 , Sampler234_g174529 , Coords234_g174529 , WorldPosition234_g174529 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174529) = _TerrainNormalTex14;
				SamplerState Sampler263_g174529 = SS29_g174559;
				half4 Coords263_g174529 = temp_output_37_0_g174529;
				half3 WorldPosition263_g174529 = temp_output_279_0_g174529;
				half3 WorldNormal263_g174529 = temp_output_280_0_g174529;
				half4 localSampleStochastic3D263_g174529 = SampleStochastic3D( Texture263_g174529 , Sampler263_g174529 , Coords263_g174529 , WorldPosition263_g174529 , WorldNormal263_g174529 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8990_g174452 = localSamplePlanar2D238_g174529;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8990_g174452 = localSamplePlanar3D246_g174529;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8990_g174452 = localSampleStochastic2D234_g174529;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8990_g174452 = localSampleStochastic3D263_g174529;
				#else
				float4 staticSwitch8990_g174452 = localSamplePlanar2D238_g174529;
				#endif
				half4 Layer237_g174482 = staticSwitch8990_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174530) = _TerrainNormalTex15;
				SamplerState Sampler238_g174530 = SS29_g174559;
				float4 temp_output_37_0_g174530 = Input_Terrain_Coords_158962_g174452;
				half4 Coords238_g174530 = temp_output_37_0_g174530;
				float3 temp_output_279_0_g174530 = Input_Position9197_g174452;
				half3 WorldPosition238_g174530 = temp_output_279_0_g174530;
				half4 localSamplePlanar2D238_g174530 = SamplePlanar2D( Texture238_g174530 , Sampler238_g174530 , Coords238_g174530 , WorldPosition238_g174530 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174530) = _TerrainNormalTex15;
				SamplerState Sampler246_g174530 = SS29_g174559;
				half4 Coords246_g174530 = temp_output_37_0_g174530;
				half3 WorldPosition246_g174530 = temp_output_279_0_g174530;
				float3 temp_output_280_0_g174530 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174530 = temp_output_280_0_g174530;
				half4 localSamplePlanar3D246_g174530 = SamplePlanar3D( Texture246_g174530 , Sampler246_g174530 , Coords246_g174530 , WorldPosition246_g174530 , WorldNormal246_g174530 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174530) = _TerrainNormalTex15;
				SamplerState Sampler234_g174530 = SS29_g174559;
				float4 Coords234_g174530 = temp_output_37_0_g174530;
				float3 WorldPosition234_g174530 = temp_output_279_0_g174530;
				float4 localSampleStochastic2D234_g174530 = SampleStochastic2D( Texture234_g174530 , Sampler234_g174530 , Coords234_g174530 , WorldPosition234_g174530 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174530) = _TerrainNormalTex15;
				SamplerState Sampler263_g174530 = SS29_g174559;
				half4 Coords263_g174530 = temp_output_37_0_g174530;
				half3 WorldPosition263_g174530 = temp_output_279_0_g174530;
				half3 WorldNormal263_g174530 = temp_output_280_0_g174530;
				half4 localSampleStochastic3D263_g174530 = SampleStochastic3D( Texture263_g174530 , Sampler263_g174530 , Coords263_g174530 , WorldPosition263_g174530 , WorldNormal263_g174530 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8989_g174452 = localSamplePlanar2D238_g174530;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8989_g174452 = localSamplePlanar3D246_g174530;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8989_g174452 = localSampleStochastic2D234_g174530;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8989_g174452 = localSampleStochastic3D263_g174530;
				#else
				float4 staticSwitch8989_g174452 = localSamplePlanar2D238_g174530;
				#endif
				half4 Layer338_g174482 = staticSwitch8989_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174531) = _TerrainNormalTex16;
				SamplerState Sampler238_g174531 = SS29_g174559;
				float4 temp_output_37_0_g174531 = Input_Terrain_Coords_168959_g174452;
				half4 Coords238_g174531 = temp_output_37_0_g174531;
				float3 temp_output_279_0_g174531 = Input_Position9197_g174452;
				half3 WorldPosition238_g174531 = temp_output_279_0_g174531;
				half4 localSamplePlanar2D238_g174531 = SamplePlanar2D( Texture238_g174531 , Sampler238_g174531 , Coords238_g174531 , WorldPosition238_g174531 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174531) = _TerrainNormalTex16;
				SamplerState Sampler246_g174531 = SS29_g174559;
				half4 Coords246_g174531 = temp_output_37_0_g174531;
				half3 WorldPosition246_g174531 = temp_output_279_0_g174531;
				float3 temp_output_280_0_g174531 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174531 = temp_output_280_0_g174531;
				half4 localSamplePlanar3D246_g174531 = SamplePlanar3D( Texture246_g174531 , Sampler246_g174531 , Coords246_g174531 , WorldPosition246_g174531 , WorldNormal246_g174531 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174531) = _TerrainNormalTex16;
				SamplerState Sampler234_g174531 = SS29_g174559;
				float4 Coords234_g174531 = temp_output_37_0_g174531;
				float3 WorldPosition234_g174531 = temp_output_279_0_g174531;
				float4 localSampleStochastic2D234_g174531 = SampleStochastic2D( Texture234_g174531 , Sampler234_g174531 , Coords234_g174531 , WorldPosition234_g174531 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174531) = _TerrainNormalTex16;
				SamplerState Sampler263_g174531 = SS29_g174559;
				half4 Coords263_g174531 = temp_output_37_0_g174531;
				half3 WorldPosition263_g174531 = temp_output_279_0_g174531;
				half3 WorldNormal263_g174531 = temp_output_280_0_g174531;
				half4 localSampleStochastic3D263_g174531 = SampleStochastic3D( Texture263_g174531 , Sampler263_g174531 , Coords263_g174531 , WorldPosition263_g174531 , WorldNormal263_g174531 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8988_g174452 = localSamplePlanar2D238_g174531;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8988_g174452 = localSamplePlanar3D246_g174531;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8988_g174452 = localSampleStochastic2D234_g174531;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8988_g174452 = localSampleStochastic3D263_g174531;
				#else
				float4 staticSwitch8988_g174452 = localSamplePlanar2D238_g174531;
				#endif
				half4 Layer439_g174482 = staticSwitch8988_g174452;
				float4 weightedBlendVar31_g174482 = Weights52_g174482;
				float4 weightedBlend31_g174482 = ( weightedBlendVar31_g174482.x*Layer133_g174482 + weightedBlendVar31_g174482.y*Layer237_g174482 + weightedBlendVar31_g174482.z*Layer338_g174482 + weightedBlendVar31_g174482.w*Layer439_g174482 );
				half4 Terrain_B_168987_g174452 = weightedBlend31_g174482;
				half4 Layer_1644_g174459 = Terrain_B_168987_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174459 = Layer_045_g174459;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174459 = ( Layer_045_g174459 + Layer_0810_g174459 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174459 = ( Layer_045_g174459 + Layer_0810_g174459 + Layer_1243_g174459 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174459 = ( Layer_045_g174459 + Layer_0810_g174459 + Layer_1243_g174459 + Layer_1644_g174459 );
				#else
				float4 staticSwitch40_g174459 = Layer_045_g174459;
				#endif
				half4 Blend_Normal7512_g174452 = staticSwitch40_g174459;
				half4 Normal_Packed45_g174553 = Blend_Normal7512_g174452;
				float2 appendResult58_g174553 = (float2(( (Normal_Packed45_g174553).x * (Normal_Packed45_g174553).w ) , (Normal_Packed45_g174553).y));
				half2 Normal_Default50_g174553 = appendResult58_g174553;
				half2 Normal_ASTC41_g174553 = (Normal_Packed45_g174553).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174553 = Normal_ASTC41_g174553;
				#else
				float2 staticSwitch38_g174553 = Normal_Default50_g174553;
				#endif
				half2 Normal_NO_DTX544_g174553 = (Normal_Packed45_g174553).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174553 = Normal_NO_DTX544_g174553;
				#else
				float2 staticSwitch37_g174553 = staticSwitch38_g174553;
				#endif
				half4 Weights52_g174455 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174455 = temp_output_6970_0_g174452;
				half4 Layer237_g174455 = temp_output_6977_0_g174452;
				half4 Layer338_g174455 = temp_output_6978_0_g174452;
				half4 Layer439_g174455 = temp_output_6983_0_g174452;
				float4 weightedBlendVar31_g174455 = Weights52_g174455;
				float4 weightedBlend31_g174455 = ( weightedBlendVar31_g174455.x*Layer133_g174455 + weightedBlendVar31_g174455.y*Layer237_g174455 + weightedBlendVar31_g174455.z*Layer338_g174455 + weightedBlendVar31_g174455.w*Layer439_g174455 );
				half4 Terrain_Shaders_047203_g174452 = weightedBlend31_g174455;
				half4 Layer_045_g174461 = Terrain_Shaders_047203_g174452;
				half4 Weights52_g174471 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174471 = temp_output_8714_0_g174452;
				half4 Layer237_g174471 = temp_output_8721_0_g174452;
				half4 Layer338_g174471 = temp_output_8724_0_g174452;
				half4 Layer439_g174471 = temp_output_8727_0_g174452;
				float4 weightedBlendVar31_g174471 = Weights52_g174471;
				float4 weightedBlend31_g174471 = ( weightedBlendVar31_g174471.x*Layer133_g174471 + weightedBlendVar31_g174471.y*Layer237_g174471 + weightedBlendVar31_g174471.z*Layer338_g174471 + weightedBlendVar31_g174471.w*Layer439_g174471 );
				half4 Terrain_Shaders_088730_g174452 = weightedBlend31_g174471;
				half4 Layer_0810_g174461 = Terrain_Shaders_088730_g174452;
				half4 Weights52_g174478 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174478 = temp_output_8815_0_g174452;
				half4 Layer237_g174478 = temp_output_8818_0_g174452;
				half4 Layer338_g174478 = temp_output_8819_0_g174452;
				half4 Layer439_g174478 = temp_output_8820_0_g174452;
				float4 weightedBlendVar31_g174478 = Weights52_g174478;
				float4 weightedBlend31_g174478 = ( weightedBlendVar31_g174478.x*Layer133_g174478 + weightedBlendVar31_g174478.y*Layer237_g174478 + weightedBlendVar31_g174478.z*Layer338_g174478 + weightedBlendVar31_g174478.w*Layer439_g174478 );
				half4 Terrain_Shaders_128871_g174452 = weightedBlend31_g174478;
				half4 Layer_1243_g174461 = Terrain_Shaders_128871_g174452;
				half4 Weights52_g174485 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174485 = temp_output_8931_0_g174452;
				half4 Layer237_g174485 = temp_output_8934_0_g174452;
				half4 Layer338_g174485 = temp_output_8935_0_g174452;
				half4 Layer439_g174485 = temp_output_8936_0_g174452;
				float4 weightedBlendVar31_g174485 = Weights52_g174485;
				float4 weightedBlend31_g174485 = ( weightedBlendVar31_g174485.x*Layer133_g174485 + weightedBlendVar31_g174485.y*Layer237_g174485 + weightedBlendVar31_g174485.z*Layer338_g174485 + weightedBlendVar31_g174485.w*Layer439_g174485 );
				half4 Terrain_Shaders_169014_g174452 = weightedBlend31_g174485;
				half4 Layer_1644_g174461 = Terrain_Shaders_169014_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174461 = Layer_045_g174461;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174461 = ( Layer_045_g174461 + Layer_0810_g174461 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174461 = ( Layer_045_g174461 + Layer_0810_g174461 + Layer_1243_g174461 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174461 = ( Layer_045_g174461 + Layer_0810_g174461 + Layer_1243_g174461 + Layer_1644_g174461 );
				#else
				float4 staticSwitch40_g174461 = Layer_045_g174461;
				#endif
				half4 Blend_Shaders7420_g174452 = staticSwitch40_g174461;
				half4 Normal_Packed45_g174552 = Blend_Shaders7420_g174452;
				half2 Normal_NO_DTX544_g174552 = (Normal_Packed45_g174552).wy;
				#ifdef TVE_TERRAIN_PACKED
				float2 staticSwitch9080_g174452 = (Normal_NO_DTX544_g174552*2.0 + -1.0);
				#else
				float2 staticSwitch9080_g174452 = (staticSwitch37_g174553*2.0 + -1.0);
				#endif
				half4 Weights52_g174456 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174456 = _TerrainParams1;
				half4 Layer237_g174456 = _TerrainParams2;
				half4 Layer338_g174456 = _TerrainParams3;
				half4 Layer439_g174456 = _TerrainParams4;
				float4 weightedBlendVar31_g174456 = Weights52_g174456;
				float4 weightedBlend31_g174456 = ( weightedBlendVar31_g174456.x*Layer133_g174456 + weightedBlendVar31_g174456.y*Layer237_g174456 + weightedBlendVar31_g174456.z*Layer338_g174456 + weightedBlendVar31_g174456.w*Layer439_g174456 );
				half4 Terrain_Params_047533_g174452 = weightedBlend31_g174456;
				half4 Layer_045_g174462 = Terrain_Params_047533_g174452;
				half4 Weights52_g174472 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174472 = _TerrainParams5;
				half4 Layer237_g174472 = _TerrainParams6;
				half4 Layer338_g174472 = _TerrainParams7;
				half4 Layer439_g174472 = _TerrainParams8;
				float4 weightedBlendVar31_g174472 = Weights52_g174472;
				float4 weightedBlend31_g174472 = ( weightedBlendVar31_g174472.x*Layer133_g174472 + weightedBlendVar31_g174472.y*Layer237_g174472 + weightedBlendVar31_g174472.z*Layer338_g174472 + weightedBlendVar31_g174472.w*Layer439_g174472 );
				half4 Terrain_Params_088739_g174452 = weightedBlend31_g174472;
				half4 Layer_0810_g174462 = Terrain_Params_088739_g174452;
				half4 Weights52_g174479 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174479 = _TerrainParams9;
				half4 Layer237_g174479 = _TerrainParams10;
				half4 Layer338_g174479 = _TerrainParams11;
				half4 Layer439_g174479 = _TerrainParams12;
				float4 weightedBlendVar31_g174479 = Weights52_g174479;
				float4 weightedBlend31_g174479 = ( weightedBlendVar31_g174479.x*Layer133_g174479 + weightedBlendVar31_g174479.y*Layer237_g174479 + weightedBlendVar31_g174479.z*Layer338_g174479 + weightedBlendVar31_g174479.w*Layer439_g174479 );
				half4 Terrain_Params_128867_g174452 = weightedBlend31_g174479;
				half4 Layer_1243_g174462 = Terrain_Params_128867_g174452;
				half4 Weights52_g174486 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174486 = _TerrainParams13;
				half4 Layer237_g174486 = _TerrainParams14;
				half4 Layer338_g174486 = _TerrainParams15;
				half4 Layer439_g174486 = _TerrainParams16;
				float4 weightedBlendVar31_g174486 = Weights52_g174486;
				float4 weightedBlend31_g174486 = ( weightedBlendVar31_g174486.x*Layer133_g174486 + weightedBlendVar31_g174486.y*Layer237_g174486 + weightedBlendVar31_g174486.z*Layer338_g174486 + weightedBlendVar31_g174486.w*Layer439_g174486 );
				half4 Terrain_Params_169017_g174452 = weightedBlend31_g174486;
				half4 Layer_1644_g174462 = Terrain_Params_169017_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174462 = Layer_045_g174462;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174462 = ( Layer_045_g174462 + Layer_0810_g174462 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174462 = ( Layer_045_g174462 + Layer_0810_g174462 + Layer_1243_g174462 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174462 = ( Layer_045_g174462 + Layer_0810_g174462 + Layer_1243_g174462 + Layer_1644_g174462 );
				#else
				float4 staticSwitch40_g174462 = Layer_045_g174462;
				#endif
				half4 Blend_Params7547_g174452 = staticSwitch40_g174462;
				half2 Normal_Planar45_g174554 = ( ( staticSwitch9080_g174452 * (Blend_Params7547_g174452).z ) * _TerrainNormalValue );
				float2 break71_g174554 = Normal_Planar45_g174554;
				float3 appendResult72_g174554 = (float3(break71_g174554.x , 0.0 , break71_g174554.y));
				half2 Final_NormalTS9145_g174452 = (mul( ase_worldToTangent, appendResult72_g174554 )).xy;
				half2 Local_NormalTS729_g174425 = Final_NormalTS9145_g174452;
				float2 lerpResult405_g174425 = lerp( Visual_NormalTS529_g174425 , Local_NormalTS729_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float2 staticSwitch418_g174425 = lerpResult405_g174425;
				#else
				float2 staticSwitch418_g174425 = Visual_NormalTS529_g174425;
				#endif
				half2 Final_NormalTS612_g174425 = staticSwitch418_g174425;
				float2 In_NormalTS3_g174429 = Final_NormalTS612_g174425;
				float3 appendResult68_g174427 = (float3(Final_NormalTS612_g174425 , 1.0));
				float3 tanNormal74_g174427 = appendResult68_g174427;
				float3 worldNormal74_g174427 = normalize( float3(dot(tanToWorld0,tanNormal74_g174427), dot(tanToWorld1,tanNormal74_g174427), dot(tanToWorld2,tanNormal74_g174427)) );
				half3 Final_NormalWS956_g174425 = worldNormal74_g174427;
				float3 In_NormalWS3_g174429 = Final_NormalWS956_g174425;
				half4 Visual_Shader531_g174425 = Out_Shader4_g174428;
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9139_g174452 = 0.0;
				#else
				float staticSwitch9139_g174452 = ( (Blend_Shaders7420_g174452).x * (Blend_Params7547_g174452).x * _TerrainMetallicValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9097_g174452 = 1.0;
				#else
				float staticSwitch9097_g174452 = ( (Blend_Shaders7420_g174452).y * _TerrainOcclusionValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9105_g174452 = (Blend_Shaders7420_g174452).x;
				#else
				float staticSwitch9105_g174452 = (Blend_Shaders7420_g174452).w;
				#endif
				float4 appendResult9147_g174452 = (float4(staticSwitch9139_g174452 , staticSwitch9097_g174452 , (Blend_Shaders7420_g174452).z , ( staticSwitch9105_g174452 * (Blend_Params7547_g174452).w * _TerrainSmoothnessValue )));
				half4 Final_Shaders9146_g174452 = appendResult9147_g174452;
				half4 Local_Masks750_g174425 = Final_Shaders9146_g174452;
				float4 lerpResult998_g174425 = lerp( Visual_Shader531_g174425 , Local_Masks750_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float4 staticSwitch451_g174425 = lerpResult998_g174425;
				#else
				float4 staticSwitch451_g174425 = Visual_Shader531_g174425;
				#endif
				half4 Final_Masks613_g174425 = staticSwitch451_g174425;
				float4 In_Shader3_g174429 = Final_Masks613_g174425;
				half4 Weights52_g174545 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174545 = _TerrainSpecular1;
				half4 Layer237_g174545 = _TerrainSpecular2;
				half4 Layer338_g174545 = _TerrainSpecular3;
				half4 Layer439_g174545 = _TerrainSpecular4;
				float4 weightedBlendVar31_g174545 = Weights52_g174545;
				float4 weightedBlend31_g174545 = ( weightedBlendVar31_g174545.x*Layer133_g174545 + weightedBlendVar31_g174545.y*Layer237_g174545 + weightedBlendVar31_g174545.z*Layer338_g174545 + weightedBlendVar31_g174545.w*Layer439_g174545 );
				half4 Terrain_Specular_047390_g174452 = weightedBlend31_g174545;
				half4 Layer_045_g174550 = Terrain_Specular_047390_g174452;
				half4 Weights52_g174473 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174473 = _TerrainSpecular5;
				half4 Layer237_g174473 = _TerrainSpecular6;
				half4 Layer338_g174473 = _TerrainSpecular7;
				half4 Layer439_g174473 = _TerrainSpecular8;
				float4 weightedBlendVar31_g174473 = Weights52_g174473;
				float4 weightedBlend31_g174473 = ( weightedBlendVar31_g174473.x*Layer133_g174473 + weightedBlendVar31_g174473.y*Layer237_g174473 + weightedBlendVar31_g174473.z*Layer338_g174473 + weightedBlendVar31_g174473.w*Layer439_g174473 );
				half4 Terrain_Specular_088745_g174452 = weightedBlend31_g174473;
				half4 Layer_0810_g174550 = Terrain_Specular_088745_g174452;
				half4 Weights52_g174480 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174480 = _TerrainSpecular9;
				half4 Layer237_g174480 = _TerrainSpecular10;
				half4 Layer338_g174480 = _TerrainSpecular11;
				half4 Layer439_g174480 = _TerrainSpecular12;
				float4 weightedBlendVar31_g174480 = Weights52_g174480;
				float4 weightedBlend31_g174480 = ( weightedBlendVar31_g174480.x*Layer133_g174480 + weightedBlendVar31_g174480.y*Layer237_g174480 + weightedBlendVar31_g174480.z*Layer338_g174480 + weightedBlendVar31_g174480.w*Layer439_g174480 );
				half4 Terrain_Specular_128869_g174452 = weightedBlend31_g174480;
				half4 Layer_1243_g174550 = Terrain_Specular_128869_g174452;
				half4 Weights52_g174487 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174487 = _TerrainSpecular13;
				half4 Layer237_g174487 = _TerrainSpecular14;
				half4 Layer338_g174487 = _TerrainSpecular15;
				half4 Layer439_g174487 = _TerrainSpecular16;
				float4 weightedBlendVar31_g174487 = Weights52_g174487;
				float4 weightedBlend31_g174487 = ( weightedBlendVar31_g174487.x*Layer133_g174487 + weightedBlendVar31_g174487.y*Layer237_g174487 + weightedBlendVar31_g174487.z*Layer338_g174487 + weightedBlendVar31_g174487.w*Layer439_g174487 );
				half4 Terrain_Specular_169019_g174452 = weightedBlend31_g174487;
				half4 Layer_1644_g174550 = Terrain_Specular_169019_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174550 = Layer_045_g174550;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174550 = ( Layer_045_g174550 + Layer_0810_g174550 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174550 = ( Layer_045_g174550 + Layer_0810_g174550 + Layer_1243_g174550 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174550 = ( Layer_045_g174550 + Layer_0810_g174550 + Layer_1243_g174550 + Layer_1644_g174550 );
				#else
				float4 staticSwitch40_g174550 = Layer_045_g174550;
				#endif
				half4 Blend_TerrainSpecular7446_g174452 = staticSwitch40_g174550;
				float3 temp_output_9088_0_g174452 = (Blend_TerrainSpecular7446_g174452).rgb;
				float4 appendResult9189_g174452 = (float4(temp_output_9088_0_g174452 , 1.0));
				half4 Final_Emissive9151_g174452 = appendResult9189_g174452;
				half4 Local_Emissive1006_g174425 = Final_Emissive9151_g174452;
				float4 appendResult1092_g174425 = (float4((Local_Emissive1006_g174425).xyz , Terrain_Mask412_g174425));
				#ifdef TVE_TERRAIN
				float4 staticSwitch1096_g174425 = appendResult1092_g174425;
				#else
				float4 staticSwitch1096_g174425 = half4(1,1,1,0);
				#endif
				half4 Final_EmissiveLDR1094_g174425 = staticSwitch1096_g174425;
				float4 In_Emissive3_g174429 = Final_EmissiveLDR1094_g174425;
				float3 temp_output_3_0_g174432 = Final_Albedo601_g174425;
				float dotResult20_g174432 = dot( temp_output_3_0_g174432 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale615_g174425 = dotResult20_g174432;
				float In_Grayscale3_g174429 = Final_Grayscale615_g174425;
				float clampResult651_g174425 = clamp( saturate( ( Final_Grayscale615_g174425 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity652_g174425 = clampResult651_g174425;
				float In_Luminosity3_g174429 = Final_Luminosity652_g174425;
				half Visual_MultiMask547_g174425 = Out_MultiMask4_g174428;
				half Final_MultiShader9150_g174452 = ( (Blend_TerrainSpecular7446_g174452).a * (Blend_Albedo7468_g174452).w );
				half Local_MultiMask767_g174425 = Final_MultiShader9150_g174452;
				float lerpResult477_g174425 = lerp( Visual_MultiMask547_g174425 , Local_MultiMask767_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float staticSwitch482_g174425 = lerpResult477_g174425;
				#else
				float staticSwitch482_g174425 = Visual_MultiMask547_g174425;
				#endif
				half Final_MultiMask572_g174425 = staticSwitch482_g174425;
				float In_MultiMask3_g174429 = Final_MultiMask572_g174425;
				half Visual_AlphaClip559_g174425 = Out_AlphaClip4_g174428;
				float4 temp_output_35_0_g174561 = appendResult9125_g174452;
				float2 InputScale48_g174561 = (temp_output_35_0_g174561).zw;
				half2 FinalScale53_g174561 = ( 1.0 / InputScale48_g174561 );
				float2 InputPosition52_g174561 = (temp_output_35_0_g174561).xy;
				half2 FinalPosition58_g174561 = -( FinalScale53_g174561 * InputPosition52_g174561 );
				float2 temp_output_65_0_g174561 = ( ( (worldPos).xz * FinalScale53_g174561 ) + FinalPosition58_g174561 );
				float2 Terrain_Holes_UV9409_g174452 = temp_output_65_0_g174561;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch9188_g174452 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9409_g174452 ).r;
				#else
				float staticSwitch9188_g174452 = 1.0;
				#endif
				half Terrain_Holes7437_g174452 = staticSwitch9188_g174452;
				float temp_output_1141_9195_g174425 = Terrain_Holes7437_g174452;
				half Local_AlphaClip772_g174425 = temp_output_1141_9195_g174425;
				float lerpResult448_g174425 = lerp( Visual_AlphaClip559_g174425 , Local_AlphaClip772_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float staticSwitch564_g174425 = lerpResult448_g174425;
				#else
				float staticSwitch564_g174425 = Visual_AlphaClip559_g174425;
				#endif
				half Final_AlphaClip602_g174425 = staticSwitch564_g174425;
				float In_AlphaClip3_g174429 = Final_AlphaClip602_g174425;
				half Visual_AlphaFade588_g174425 = Out_AlphaFade4_g174428;
				half Local_AlphaFade773_g174425 = temp_output_1141_9195_g174425;
				float lerpResult604_g174425 = lerp( Visual_AlphaFade588_g174425 , Local_AlphaFade773_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float staticSwitch608_g174425 = lerpResult604_g174425;
				#else
				float staticSwitch608_g174425 = Visual_AlphaFade588_g174425;
				#endif
				half Final_AlphaFade611_g174425 = staticSwitch608_g174425;
				float In_AlphaFade3_g174429 = Final_AlphaFade611_g174425;
				float3 In_Translucency3_g174429 = Out_Translucency4_g174428;
				float In_Transmission3_g174429 = Out_Transmission4_g174428;
				float In_Thickness3_g174429 = Out_Thickness4_g174428;
				float In_Diffusion3_g174429 = Out_Diffusion4_g174428;
				Data3_g174429.Dummy = In_Dummy3_g174429;
				Data3_g174429.Albedo = In_Albedo3_g174429;
				Data3_g174429.AlbedoRaw = In_AlbedoRaw3_g174429;
				Data3_g174429.NormalTS = In_NormalTS3_g174429;
				Data3_g174429.NormalWS = In_NormalWS3_g174429;
				Data3_g174429.Shader = In_Shader3_g174429;
				Data3_g174429.Emissive= In_Emissive3_g174429;
				Data3_g174429.MultiMask = In_MultiMask3_g174429;
				Data3_g174429.Grayscale = In_Grayscale3_g174429;
				Data3_g174429.Luminosity = In_Luminosity3_g174429;
				Data3_g174429.AlphaClip = In_AlphaClip3_g174429;
				Data3_g174429.AlphaFade = In_AlphaFade3_g174429;
				Data3_g174429.Translucency = In_Translucency3_g174429;
				Data3_g174429.Transmission = In_Transmission3_g174429;
				Data3_g174429.Thickness = In_Thickness3_g174429;
				Data3_g174429.Diffusion = In_Diffusion3_g174429;
				TVEVisualData Data4_g174641 = Data3_g174429;
				float Out_Dummy4_g174641 = 0;
				float3 Out_Albedo4_g174641 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174641 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174641 = float2( 0,0 );
				float3 Out_NormalWS4_g174641 = float3( 0,0,0 );
				float4 Out_Shader4_g174641 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174641 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174641 = 0;
				float Out_Grayscale4_g174641 = 0;
				float Out_Luminosity4_g174641 = 0;
				float Out_AlphaClip4_g174641 = 0;
				float Out_AlphaFade4_g174641 = 0;
				float3 Out_Translucency4_g174641 = float3( 0,0,0 );
				float Out_Transmission4_g174641 = 0;
				float Out_Thickness4_g174641 = 0;
				float Out_Diffusion4_g174641 = 0;
				Out_Dummy4_g174641 = Data4_g174641.Dummy;
				Out_Albedo4_g174641 = Data4_g174641.Albedo;
				Out_AlbedoRaw4_g174641 = Data4_g174641.AlbedoRaw;
				Out_NormalTS4_g174641 = Data4_g174641.NormalTS;
				Out_NormalWS4_g174641 = Data4_g174641.NormalWS;
				Out_Shader4_g174641 = Data4_g174641.Shader;
				Out_Emissive4_g174641= Data4_g174641.Emissive;
				Out_MultiMask4_g174641 = Data4_g174641.MultiMask;
				Out_Grayscale4_g174641 = Data4_g174641.Grayscale;
				Out_Luminosity4_g174641= Data4_g174641.Luminosity;
				Out_AlphaClip4_g174641 = Data4_g174641.AlphaClip;
				Out_AlphaFade4_g174641 = Data4_g174641.AlphaFade;
				Out_Translucency4_g174641 = Data4_g174641.Translucency;
				Out_Transmission4_g174641 = Data4_g174641.Transmission;
				Out_Thickness4_g174641 = Data4_g174641.Thickness;
				Out_Diffusion4_g174641 = Data4_g174641.Diffusion;
				half3 Visual_Albedo127_g174640 = Out_Albedo4_g174641;
				TVEModelData Data15_g174649 = Data16_g164566;
				float Out_Dummy15_g174649 = 0;
				float3 Out_PositionWS15_g174649 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174649 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174649 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174649 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174649 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174649 = float3( 0,0,0 );
				float4 Out_VertexData15_g174649 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174649 = float4( 0,0,0,0 );
				Out_Dummy15_g174649 = Data15_g174649.Dummy;
				Out_PositionWS15_g174649 = Data15_g174649.PositionWS;
				Out_PositionWO15_g174649 = Data15_g174649.PositionWO;
				Out_PivotWS15_g174649 = Data15_g174649.PivotWS;
				Out_PivotWO15_g174649 = Data15_g174649.PivotWO;
				Out_NormalWS15_g174649 = Data15_g174649.NormalWS;
				Out_ViewDirWS15_g174649 = Data15_g174649.ViewDirWS;
				Out_VertexData15_g174649 = Data15_g174649.VertexData;
				Out_BoundsData15_g174649 = Data15_g174649.BoundsData;
				half4 Model_VertexData206_g174640 = Out_VertexData15_g174649;
				float4 break208_g174640 = Model_VertexData206_g174640;
				float4 break33_g174647 = _occlusion_vert_mode;
				float temp_output_30_0_g174647 = ( break208_g174640.x * break33_g174647.x );
				float temp_output_29_0_g174647 = ( break208_g174640.y * break33_g174647.y );
				float temp_output_31_0_g174647 = ( break208_g174640.z * break33_g174647.z );
				float temp_output_28_0_g174647 = ( temp_output_30_0_g174647 + temp_output_29_0_g174647 + temp_output_31_0_g174647 + ( break208_g174640.w * break33_g174647.w ) );
				float temp_output_194_0_g174640 = temp_output_28_0_g174647;
				float clampResult17_g174645 = clamp( temp_output_194_0_g174640 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174644 = _OcclusionMeshRemap.x;
				float temp_output_10_0_g174644 = ( _OcclusionMeshRemap.y - temp_output_7_0_g174644 );
				float temp_output_6_0_g174646 = saturate( ( ( clampResult17_g174645 - temp_output_7_0_g174644 ) / ( temp_output_10_0_g174644 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174646 = ( temp_output_6_0_g174646 + ( _OcclusionMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174646 = temp_output_6_0_g174646;
				#endif
				half Occlusion_Mask82_g174640 = staticSwitch14_g174646;
				float3 lerpResult75_g174640 = lerp( (_OcclusionColorTwo).rgb , (_OcclusionColorOne).rgb , Occlusion_Mask82_g174640);
				float3 lerpResult186_g174640 = lerp( Visual_Albedo127_g174640 , ( Visual_Albedo127_g174640 * lerpResult75_g174640 ) , _OcclusionIntensityValue);
				#ifdef TVE_OCCLUSION
				float3 staticSwitch171_g174640 = lerpResult186_g174640;
				#else
				float3 staticSwitch171_g174640 = Visual_Albedo127_g174640;
				#endif
				half3 Final_Albedo160_g174640 = staticSwitch171_g174640;
				float3 In_Albedo3_g174642 = Final_Albedo160_g174640;
				float3 In_AlbedoRaw3_g174642 = Final_Albedo160_g174640;
				float2 In_NormalTS3_g174642 = Out_NormalTS4_g174641;
				float3 In_NormalWS3_g174642 = Out_NormalWS4_g174641;
				float4 In_Shader3_g174642 = Out_Shader4_g174641;
				float4 In_Emissive3_g174642 = Out_Emissive4_g174641;
				float3 temp_output_3_0_g174643 = Final_Albedo160_g174640;
				float dotResult20_g174643 = dot( temp_output_3_0_g174643 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale164_g174640 = dotResult20_g174643;
				float In_Grayscale3_g174642 = Final_Grayscale164_g174640;
				float clampResult180_g174640 = clamp( saturate( ( Final_Grayscale164_g174640 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Shading181_g174640 = clampResult180_g174640;
				float In_Luminosity3_g174642 = Final_Shading181_g174640;
				float In_MultiMask3_g174642 = Out_MultiMask4_g174641;
				float In_AlphaClip3_g174642 = Out_AlphaClip4_g174641;
				float In_AlphaFade3_g174642 = Out_AlphaFade4_g174641;
				float3 In_Translucency3_g174642 = Out_Translucency4_g174641;
				float In_Transmission3_g174642 = Out_Transmission4_g174641;
				float In_Thickness3_g174642 = Out_Thickness4_g174641;
				float In_Diffusion3_g174642 = Out_Diffusion4_g174641;
				Data3_g174642.Dummy = In_Dummy3_g174642;
				Data3_g174642.Albedo = In_Albedo3_g174642;
				Data3_g174642.AlbedoRaw = In_AlbedoRaw3_g174642;
				Data3_g174642.NormalTS = In_NormalTS3_g174642;
				Data3_g174642.NormalWS = In_NormalWS3_g174642;
				Data3_g174642.Shader = In_Shader3_g174642;
				Data3_g174642.Emissive= In_Emissive3_g174642;
				Data3_g174642.MultiMask = In_MultiMask3_g174642;
				Data3_g174642.Grayscale = In_Grayscale3_g174642;
				Data3_g174642.Luminosity = In_Luminosity3_g174642;
				Data3_g174642.AlphaClip = In_AlphaClip3_g174642;
				Data3_g174642.AlphaFade = In_AlphaFade3_g174642;
				Data3_g174642.Translucency = In_Translucency3_g174642;
				Data3_g174642.Transmission = In_Transmission3_g174642;
				Data3_g174642.Thickness = In_Thickness3_g174642;
				Data3_g174642.Diffusion = In_Diffusion3_g174642;
				TVEVisualData Data4_g174652 = Data3_g174642;
				float Out_Dummy4_g174652 = 0;
				float3 Out_Albedo4_g174652 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174652 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174652 = float2( 0,0 );
				float3 Out_NormalWS4_g174652 = float3( 0,0,0 );
				float4 Out_Shader4_g174652 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174652 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174652 = 0;
				float Out_Grayscale4_g174652 = 0;
				float Out_Luminosity4_g174652 = 0;
				float Out_AlphaClip4_g174652 = 0;
				float Out_AlphaFade4_g174652 = 0;
				float3 Out_Translucency4_g174652 = float3( 0,0,0 );
				float Out_Transmission4_g174652 = 0;
				float Out_Thickness4_g174652 = 0;
				float Out_Diffusion4_g174652 = 0;
				Out_Dummy4_g174652 = Data4_g174652.Dummy;
				Out_Albedo4_g174652 = Data4_g174652.Albedo;
				Out_AlbedoRaw4_g174652 = Data4_g174652.AlbedoRaw;
				Out_NormalTS4_g174652 = Data4_g174652.NormalTS;
				Out_NormalWS4_g174652 = Data4_g174652.NormalWS;
				Out_Shader4_g174652 = Data4_g174652.Shader;
				Out_Emissive4_g174652= Data4_g174652.Emissive;
				Out_MultiMask4_g174652 = Data4_g174652.MultiMask;
				Out_Grayscale4_g174652 = Data4_g174652.Grayscale;
				Out_Luminosity4_g174652= Data4_g174652.Luminosity;
				Out_AlphaClip4_g174652 = Data4_g174652.AlphaClip;
				Out_AlphaFade4_g174652 = Data4_g174652.AlphaFade;
				Out_Translucency4_g174652 = Data4_g174652.Translucency;
				Out_Transmission4_g174652 = Data4_g174652.Transmission;
				Out_Thickness4_g174652 = Data4_g174652.Thickness;
				Out_Diffusion4_g174652 = Data4_g174652.Diffusion;
				half3 Visual_Albedo127_g174650 = Out_Albedo4_g174652;
				TVEModelData Data15_g174659 = Data16_g164566;
				float Out_Dummy15_g174659 = 0;
				float3 Out_PositionWS15_g174659 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174659 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174659 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174659 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174659 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174659 = float3( 0,0,0 );
				float4 Out_VertexData15_g174659 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174659 = float4( 0,0,0,0 );
				Out_Dummy15_g174659 = Data15_g174659.Dummy;
				Out_PositionWS15_g174659 = Data15_g174659.PositionWS;
				Out_PositionWO15_g174659 = Data15_g174659.PositionWO;
				Out_PivotWS15_g174659 = Data15_g174659.PivotWS;
				Out_PivotWO15_g174659 = Data15_g174659.PivotWO;
				Out_NormalWS15_g174659 = Data15_g174659.NormalWS;
				Out_ViewDirWS15_g174659 = Data15_g174659.ViewDirWS;
				Out_VertexData15_g174659 = Data15_g174659.VertexData;
				Out_BoundsData15_g174659 = Data15_g174659.BoundsData;
				half4 Model_VertexData224_g174650 = Out_VertexData15_g174659;
				float4 break226_g174650 = Model_VertexData224_g174650;
				float4 break33_g174651 = _gradient_vert_mode;
				float temp_output_30_0_g174651 = ( break226_g174650.x * break33_g174651.x );
				float temp_output_29_0_g174651 = ( break226_g174650.y * break33_g174651.y );
				float temp_output_31_0_g174651 = ( break226_g174650.z * break33_g174651.z );
				float temp_output_28_0_g174651 = ( temp_output_30_0_g174651 + temp_output_29_0_g174651 + temp_output_31_0_g174651 + ( break226_g174650.w * break33_g174651.w ) );
				float temp_output_211_0_g174650 = temp_output_28_0_g174651;
				float clampResult17_g174656 = clamp( temp_output_211_0_g174650 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174657 = _GradientMeshRemap.x;
				float temp_output_10_0_g174657 = ( _GradientMeshRemap.y - temp_output_7_0_g174657 );
				float temp_output_6_0_g174658 = saturate( ( ( clampResult17_g174656 - temp_output_7_0_g174657 ) / ( temp_output_10_0_g174657 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174658 = ( temp_output_6_0_g174658 + ( _GradientMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174658 = temp_output_6_0_g174658;
				#endif
				half Gradient_VertMask82_g174650 = staticSwitch14_g174658;
				half Gradient_Mask200_g174650 = Gradient_VertMask82_g174650;
				float3 lerpResult75_g174650 = lerp( (_GradientColorTwo).rgb , (_GradientColorOne).rgb , Gradient_Mask200_g174650);
				float temp_output_162_11_g174650 = Out_MultiMask4_g174652;
				half Visual_MultiMask196_g174650 = temp_output_162_11_g174650;
				float lerpResult190_g174650 = lerp( 1.0 , Visual_MultiMask196_g174650 , _GradientMultiValue);
				half Gradient_MultiMask194_g174650 = lerpResult190_g174650;
				float3 lerpResult186_g174650 = lerp( Visual_Albedo127_g174650 , ( Visual_Albedo127_g174650 * lerpResult75_g174650 ) , ( _GradientIntensityValue * Gradient_MultiMask194_g174650 ));
				#ifdef TVE_GRADIENT
				float3 staticSwitch171_g174650 = lerpResult186_g174650;
				#else
				float3 staticSwitch171_g174650 = Visual_Albedo127_g174650;
				#endif
				half3 Final_Albedo160_g174650 = staticSwitch171_g174650;
				float3 In_Albedo3_g174653 = Final_Albedo160_g174650;
				float3 In_AlbedoRaw3_g174653 = Final_Albedo160_g174650;
				float2 In_NormalTS3_g174653 = Out_NormalTS4_g174652;
				float3 In_NormalWS3_g174653 = Out_NormalWS4_g174652;
				float4 In_Shader3_g174653 = Out_Shader4_g174652;
				float4 In_Emissive3_g174653 = Out_Emissive4_g174652;
				float3 temp_output_3_0_g174654 = Final_Albedo160_g174650;
				float dotResult20_g174654 = dot( temp_output_3_0_g174654 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale164_g174650 = dotResult20_g174654;
				float In_Grayscale3_g174653 = Final_Grayscale164_g174650;
				float clampResult180_g174650 = clamp( saturate( ( Final_Grayscale164_g174650 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity181_g174650 = clampResult180_g174650;
				float In_Luminosity3_g174653 = Final_Luminosity181_g174650;
				float In_MultiMask3_g174653 = temp_output_162_11_g174650;
				float In_AlphaClip3_g174653 = Out_AlphaClip4_g174652;
				float In_AlphaFade3_g174653 = Out_AlphaFade4_g174652;
				float3 In_Translucency3_g174653 = Out_Translucency4_g174652;
				float In_Transmission3_g174653 = Out_Transmission4_g174652;
				float In_Thickness3_g174653 = Out_Thickness4_g174652;
				float In_Diffusion3_g174653 = Out_Diffusion4_g174652;
				Data3_g174653.Dummy = In_Dummy3_g174653;
				Data3_g174653.Albedo = In_Albedo3_g174653;
				Data3_g174653.AlbedoRaw = In_AlbedoRaw3_g174653;
				Data3_g174653.NormalTS = In_NormalTS3_g174653;
				Data3_g174653.NormalWS = In_NormalWS3_g174653;
				Data3_g174653.Shader = In_Shader3_g174653;
				Data3_g174653.Emissive= In_Emissive3_g174653;
				Data3_g174653.MultiMask = In_MultiMask3_g174653;
				Data3_g174653.Grayscale = In_Grayscale3_g174653;
				Data3_g174653.Luminosity = In_Luminosity3_g174653;
				Data3_g174653.AlphaClip = In_AlphaClip3_g174653;
				Data3_g174653.AlphaFade = In_AlphaFade3_g174653;
				Data3_g174653.Translucency = In_Translucency3_g174653;
				Data3_g174653.Transmission = In_Transmission3_g174653;
				Data3_g174653.Thickness = In_Thickness3_g174653;
				Data3_g174653.Diffusion = In_Diffusion3_g174653;
				TVEVisualData Data4_g174662 = Data3_g174653;
				float Out_Dummy4_g174662 = 0;
				float3 Out_Albedo4_g174662 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174662 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174662 = float2( 0,0 );
				float3 Out_NormalWS4_g174662 = float3( 0,0,0 );
				float4 Out_Shader4_g174662 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174662 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174662 = 0;
				float Out_Grayscale4_g174662 = 0;
				float Out_Luminosity4_g174662 = 0;
				float Out_AlphaClip4_g174662 = 0;
				float Out_AlphaFade4_g174662 = 0;
				float3 Out_Translucency4_g174662 = float3( 0,0,0 );
				float Out_Transmission4_g174662 = 0;
				float Out_Thickness4_g174662 = 0;
				float Out_Diffusion4_g174662 = 0;
				Out_Dummy4_g174662 = Data4_g174662.Dummy;
				Out_Albedo4_g174662 = Data4_g174662.Albedo;
				Out_AlbedoRaw4_g174662 = Data4_g174662.AlbedoRaw;
				Out_NormalTS4_g174662 = Data4_g174662.NormalTS;
				Out_NormalWS4_g174662 = Data4_g174662.NormalWS;
				Out_Shader4_g174662 = Data4_g174662.Shader;
				Out_Emissive4_g174662= Data4_g174662.Emissive;
				Out_MultiMask4_g174662 = Data4_g174662.MultiMask;
				Out_Grayscale4_g174662 = Data4_g174662.Grayscale;
				Out_Luminosity4_g174662= Data4_g174662.Luminosity;
				Out_AlphaClip4_g174662 = Data4_g174662.AlphaClip;
				Out_AlphaFade4_g174662 = Data4_g174662.AlphaFade;
				Out_Translucency4_g174662 = Data4_g174662.Translucency;
				Out_Transmission4_g174662 = Data4_g174662.Transmission;
				Out_Thickness4_g174662 = Data4_g174662.Thickness;
				Out_Diffusion4_g174662 = Data4_g174662.Diffusion;
				half3 Visual_Albedo127_g174660 = Out_Albedo4_g174662;
				TVEModelData Data15_g174668 = Data16_g164566;
				float Out_Dummy15_g174668 = 0;
				float3 Out_PositionWS15_g174668 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174668 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174668 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174668 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174668 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174668 = float3( 0,0,0 );
				float4 Out_VertexData15_g174668 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174668 = float4( 0,0,0,0 );
				Out_Dummy15_g174668 = Data15_g174668.Dummy;
				Out_PositionWS15_g174668 = Data15_g174668.PositionWS;
				Out_PositionWO15_g174668 = Data15_g174668.PositionWO;
				Out_PivotWS15_g174668 = Data15_g174668.PivotWS;
				Out_PivotWO15_g174668 = Data15_g174668.PivotWO;
				Out_NormalWS15_g174668 = Data15_g174668.NormalWS;
				Out_ViewDirWS15_g174668 = Data15_g174668.ViewDirWS;
				Out_VertexData15_g174668 = Data15_g174668.VertexData;
				Out_BoundsData15_g174668 = Data15_g174668.BoundsData;
				half3 Model_PositionWO224_g174660 = Out_PositionWO15_g174668;
				half3 Model_PivotWO239_g174660 = Out_PivotWO15_g174668;
				float3 lerpResult242_g174660 = lerp( Model_PositionWO224_g174660 , Model_PivotWO239_g174660 , _VariationNoisePivotValue);
				float4 tex3DNode60_g174664 = SAMPLE_TEXTURE3D( _NoiseTex3D, sampler_Linear_Repeat, ( lerpResult242_g174660 * ( _VariationNoiseTillingValue * 0.01 ) ) );
				float clampResult17_g174666 = clamp( tex3DNode60_g174664.r , 0.0001 , 0.9999 );
				float temp_output_7_0_g174667 = _VariationNoiseRemap.x;
				float temp_output_10_0_g174667 = ( _VariationNoiseRemap.y - temp_output_7_0_g174667 );
				float temp_output_238_0_g174660 = saturate( ( ( clampResult17_g174666 - temp_output_7_0_g174667 ) / ( temp_output_10_0_g174667 + 0.0001 ) ) );
				half Variaton_NoiseMask82_g174660 = temp_output_238_0_g174660;
				half Variaton_Mask200_g174660 = Variaton_NoiseMask82_g174660;
				float3 lerpResult75_g174660 = lerp( (_VariationColorTwo).rgb , (_VariationColorOne).rgb , Variaton_Mask200_g174660);
				float temp_output_162_11_g174660 = Out_MultiMask4_g174662;
				half Visual_MultiMask196_g174660 = temp_output_162_11_g174660;
				float lerpResult190_g174660 = lerp( 1.0 , Visual_MultiMask196_g174660 , _VariationMultiValue);
				half Variaton_MultiMask194_g174660 = lerpResult190_g174660;
				float3 lerpResult186_g174660 = lerp( Visual_Albedo127_g174660 , ( Visual_Albedo127_g174660 * lerpResult75_g174660 ) , ( _VariationIntensityValue * Variaton_MultiMask194_g174660 ));
				#ifdef TVE_VARIATION
				float3 staticSwitch171_g174660 = lerpResult186_g174660;
				#else
				float3 staticSwitch171_g174660 = Visual_Albedo127_g174660;
				#endif
				half3 Final_Albedo160_g174660 = staticSwitch171_g174660;
				float3 In_Albedo3_g174663 = Final_Albedo160_g174660;
				float3 In_AlbedoRaw3_g174663 = Final_Albedo160_g174660;
				float2 In_NormalTS3_g174663 = Out_NormalTS4_g174662;
				float3 In_NormalWS3_g174663 = Out_NormalWS4_g174662;
				float4 In_Shader3_g174663 = Out_Shader4_g174662;
				float4 In_Emissive3_g174663 = Out_Emissive4_g174662;
				float3 temp_output_3_0_g174661 = Final_Albedo160_g174660;
				float dotResult20_g174661 = dot( temp_output_3_0_g174661 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale164_g174660 = dotResult20_g174661;
				float In_Grayscale3_g174663 = Final_Grayscale164_g174660;
				float clampResult180_g174660 = clamp( saturate( ( Final_Grayscale164_g174660 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity181_g174660 = clampResult180_g174660;
				float In_Luminosity3_g174663 = Final_Luminosity181_g174660;
				float In_MultiMask3_g174663 = temp_output_162_11_g174660;
				float In_AlphaClip3_g174663 = Out_AlphaClip4_g174662;
				float In_AlphaFade3_g174663 = Out_AlphaFade4_g174662;
				float3 In_Translucency3_g174663 = Out_Translucency4_g174662;
				float In_Transmission3_g174663 = Out_Transmission4_g174662;
				float In_Thickness3_g174663 = Out_Thickness4_g174662;
				float In_Diffusion3_g174663 = Out_Diffusion4_g174662;
				Data3_g174663.Dummy = In_Dummy3_g174663;
				Data3_g174663.Albedo = In_Albedo3_g174663;
				Data3_g174663.AlbedoRaw = In_AlbedoRaw3_g174663;
				Data3_g174663.NormalTS = In_NormalTS3_g174663;
				Data3_g174663.NormalWS = In_NormalWS3_g174663;
				Data3_g174663.Shader = In_Shader3_g174663;
				Data3_g174663.Emissive= In_Emissive3_g174663;
				Data3_g174663.MultiMask = In_MultiMask3_g174663;
				Data3_g174663.Grayscale = In_Grayscale3_g174663;
				Data3_g174663.Luminosity = In_Luminosity3_g174663;
				Data3_g174663.AlphaClip = In_AlphaClip3_g174663;
				Data3_g174663.AlphaFade = In_AlphaFade3_g174663;
				Data3_g174663.Translucency = In_Translucency3_g174663;
				Data3_g174663.Transmission = In_Transmission3_g174663;
				Data3_g174663.Thickness = In_Thickness3_g174663;
				Data3_g174663.Diffusion = In_Diffusion3_g174663;
				TVEVisualData Data4_g174692 = Data3_g174663;
				float Out_Dummy4_g174692 = 0;
				float3 Out_Albedo4_g174692 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174692 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174692 = float2( 0,0 );
				float3 Out_NormalWS4_g174692 = float3( 0,0,0 );
				float4 Out_Shader4_g174692 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174692 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174692 = 0;
				float Out_Grayscale4_g174692 = 0;
				float Out_Luminosity4_g174692 = 0;
				float Out_AlphaClip4_g174692 = 0;
				float Out_AlphaFade4_g174692 = 0;
				float3 Out_Translucency4_g174692 = float3( 0,0,0 );
				float Out_Transmission4_g174692 = 0;
				float Out_Thickness4_g174692 = 0;
				float Out_Diffusion4_g174692 = 0;
				Out_Dummy4_g174692 = Data4_g174692.Dummy;
				Out_Albedo4_g174692 = Data4_g174692.Albedo;
				Out_AlbedoRaw4_g174692 = Data4_g174692.AlbedoRaw;
				Out_NormalTS4_g174692 = Data4_g174692.NormalTS;
				Out_NormalWS4_g174692 = Data4_g174692.NormalWS;
				Out_Shader4_g174692 = Data4_g174692.Shader;
				Out_Emissive4_g174692= Data4_g174692.Emissive;
				Out_MultiMask4_g174692 = Data4_g174692.MultiMask;
				Out_Grayscale4_g174692 = Data4_g174692.Grayscale;
				Out_Luminosity4_g174692= Data4_g174692.Luminosity;
				Out_AlphaClip4_g174692 = Data4_g174692.AlphaClip;
				Out_AlphaFade4_g174692 = Data4_g174692.AlphaFade;
				Out_Translucency4_g174692 = Data4_g174692.Translucency;
				Out_Transmission4_g174692 = Data4_g174692.Transmission;
				Out_Thickness4_g174692 = Data4_g174692.Thickness;
				Out_Diffusion4_g174692 = Data4_g174692.Diffusion;
				half3 Visual_Albedo139_g174670 = Out_Albedo4_g174692;
				float temp_output_200_12_g174670 = Out_Grayscale4_g174692;
				half Visual_Grayscale150_g174670 = temp_output_200_12_g174670;
				float3 temp_cast_46 = (Visual_Grayscale150_g174670).xxx;
				TVEGlobalData Data15_g174671 = Data204_g173897;
				float Out_Dummy15_g174671 = 0;
				float4 Out_CoatParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174671 = float4( 0,0,0,0 );
				Out_Dummy15_g174671 = Data15_g174671.Dummy;
				Out_CoatParams15_g174671 = Data15_g174671.CoatParams;
				Out_PaintParams15_g174671 = Data15_g174671.PaintParams;
				Out_GlowParams15_g174671 = Data15_g174671.GlowParams;
				Out_AtmoParams15_g174671= Data15_g174671.AtmoParams;
				Out_FadeParams15_g174671= Data15_g174671.FadeParams;
				Out_FormParams15_g174671 = Data15_g174671.FormParams;
				Out_LandParams15_g174671 = Data15_g174671.LandParams;
				Out_WindParams15_g174671 = Data15_g174671.WindParams;
				Out_PushParams15_g174671 = Data15_g174671.PushParams;
				half4 Global_PaintParams209_g174670 = Out_PaintParams15_g174671;
				float temp_output_6_0_g174672 = ( saturate( (Global_PaintParams209_g174670).w ) * TVE_IsEnabled );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174672 = ( temp_output_6_0_g174672 + ( _TintingElementMode * 0.0 ) );
				#else
				float staticSwitch14_g174672 = temp_output_6_0_g174672;
				#endif
				#ifdef TVE_TINTING_ELEMENT
				float staticSwitch283_g174670 = staticSwitch14_g174672;
				#else
				float staticSwitch283_g174670 = 1.0;
				#endif
				half Tinting_GlobalValue285_g174670 = staticSwitch283_g174670;
				float3 lerpResult368_g174670 = lerp( Visual_Albedo139_g174670 , temp_cast_46 , ( Tinting_GlobalValue285_g174670 * _TintingGrayValue ));
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174690 = 2.0;
				#else
				float staticSwitch1_g174690 = 4.594794;
				#endif
				float3 temp_cast_47 = (1.0).xxx;
				#ifdef TVE_TINTING_ELEMENT
				float3 staticSwitch288_g174670 = (Global_PaintParams209_g174670).xyz;
				#else
				float3 staticSwitch288_g174670 = temp_cast_47;
				#endif
				half3 Tinting_ColorGlobal290_g174670 = staticSwitch288_g174670;
				float temp_output_200_11_g174670 = Out_MultiMask4_g174692;
				half Visual_MultiMask181_g174670 = temp_output_200_11_g174670;
				float lerpResult147_g174670 = lerp( 1.0 , Visual_MultiMask181_g174670 , _TintingMultiValue);
				half Tinting_MutiMask121_g174670 = lerpResult147_g174670;
				half Tinting_TexMask385_g174670 = 1.0;
				float temp_output_200_15_g174670 = Out_Luminosity4_g174692;
				half Visual_Luminosity257_g174670 = temp_output_200_15_g174670;
				float clampResult17_g174684 = clamp( Visual_Luminosity257_g174670 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174683 = _TintingLumaRemap.x;
				float temp_output_10_0_g174683 = ( _TintingLumaRemap.y - temp_output_7_0_g174683 );
				float lerpResult228_g174670 = lerp( 1.0 , saturate( ( ( clampResult17_g174684 - temp_output_7_0_g174683 ) / ( temp_output_10_0_g174683 + 0.0001 ) ) ) , _TintingLumaValue);
				half Tinting_LumaMask153_g174670 = lerpResult228_g174670;
				TVEModelData Data15_g174693 = Data16_g164566;
				float Out_Dummy15_g174693 = 0;
				float3 Out_PositionWS15_g174693 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174693 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174693 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174693 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174693 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174693 = float3( 0,0,0 );
				float4 Out_VertexData15_g174693 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174693 = float4( 0,0,0,0 );
				Out_Dummy15_g174693 = Data15_g174693.Dummy;
				Out_PositionWS15_g174693 = Data15_g174693.PositionWS;
				Out_PositionWO15_g174693 = Data15_g174693.PositionWO;
				Out_PivotWS15_g174693 = Data15_g174693.PivotWS;
				Out_PivotWO15_g174693 = Data15_g174693.PivotWO;
				Out_NormalWS15_g174693 = Data15_g174693.NormalWS;
				Out_ViewDirWS15_g174693 = Data15_g174693.ViewDirWS;
				Out_VertexData15_g174693 = Data15_g174693.VertexData;
				Out_BoundsData15_g174693 = Data15_g174693.BoundsData;
				half4 Model_VertexMasks307_g174670 = Out_VertexData15_g174693;
				float4 break311_g174670 = Model_VertexMasks307_g174670;
				float4 break33_g174676 = _tinting_vert_mode;
				float temp_output_30_0_g174676 = ( break311_g174670.x * break33_g174676.x );
				float temp_output_29_0_g174676 = ( break311_g174670.y * break33_g174676.y );
				float temp_output_31_0_g174676 = ( break311_g174670.z * break33_g174676.z );
				float temp_output_28_0_g174676 = ( temp_output_30_0_g174676 + temp_output_29_0_g174676 + temp_output_31_0_g174676 + ( break311_g174670.w * break33_g174676.w ) );
				float clampResult17_g174682 = clamp( temp_output_28_0_g174676 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174681 = _TintingMeshRemap.x;
				float temp_output_10_0_g174681 = ( _TintingMeshRemap.y - temp_output_7_0_g174681 );
				float lerpResult370_g174670 = lerp( 1.0 , saturate( ( ( clampResult17_g174682 - temp_output_7_0_g174681 ) / ( temp_output_10_0_g174681 + 0.0001 ) ) ) , _TintingMeshValue);
				float temp_output_6_0_g174685 = lerpResult370_g174670;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174685 = ( temp_output_6_0_g174685 + ( _TintingMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174685 = temp_output_6_0_g174685;
				#endif
				float temp_output_333_0_g174670 = staticSwitch14_g174685;
				half Tinting_VertMask309_g174670 = temp_output_333_0_g174670;
				half Tinting_NoiseMask213_g174670 = 1.0;
				half Custom_Mask345_g174670 = 1.0;
				float temp_output_7_0_g174679 = _TintingBlendRemap.x;
				float temp_output_10_0_g174679 = ( _TintingBlendRemap.y - temp_output_7_0_g174679 );
				half Tinting_Mask242_g174670 = ( saturate( ( ( ( _TintingIntensityValue * Tinting_MutiMask121_g174670 * Tinting_TexMask385_g174670 * Tinting_LumaMask153_g174670 * Tinting_VertMask309_g174670 * Tinting_NoiseMask213_g174670 * Tinting_GlobalValue285_g174670 * Custom_Mask345_g174670 ) - temp_output_7_0_g174679 ) / ( temp_output_10_0_g174679 + 0.0001 ) ) ) * TVE_IsEnabled );
				float3 lerpResult90_g174670 = lerp( Visual_Albedo139_g174670 , ( lerpResult368_g174670 * staticSwitch1_g174690 * Tinting_ColorGlobal290_g174670 * (_TintingColor).rgb ) , Tinting_Mask242_g174670);
				#ifdef TVE_TINTING
				float3 staticSwitch286_g174670 = lerpResult90_g174670;
				#else
				float3 staticSwitch286_g174670 = Visual_Albedo139_g174670;
				#endif
				half3 Final_Albedo97_g174670 = staticSwitch286_g174670;
				float3 In_Albedo3_g174691 = Final_Albedo97_g174670;
				float3 In_AlbedoRaw3_g174691 = Out_AlbedoRaw4_g174692;
				float2 In_NormalTS3_g174691 = Out_NormalTS4_g174692;
				float3 In_NormalWS3_g174691 = Out_NormalWS4_g174692;
				float4 In_Shader3_g174691 = Out_Shader4_g174692;
				float4 In_Emissive3_g174691 = Out_Emissive4_g174692;
				float In_Grayscale3_g174691 = temp_output_200_12_g174670;
				float In_Luminosity3_g174691 = temp_output_200_15_g174670;
				float In_MultiMask3_g174691 = temp_output_200_11_g174670;
				float In_AlphaClip3_g174691 = Out_AlphaClip4_g174692;
				float In_AlphaFade3_g174691 = Out_AlphaFade4_g174692;
				float3 In_Translucency3_g174691 = Out_Translucency4_g174692;
				float In_Transmission3_g174691 = Out_Transmission4_g174692;
				float In_Thickness3_g174691 = Out_Thickness4_g174692;
				float In_Diffusion3_g174691 = Out_Diffusion4_g174692;
				Data3_g174691.Dummy = In_Dummy3_g174691;
				Data3_g174691.Albedo = In_Albedo3_g174691;
				Data3_g174691.AlbedoRaw = In_AlbedoRaw3_g174691;
				Data3_g174691.NormalTS = In_NormalTS3_g174691;
				Data3_g174691.NormalWS = In_NormalWS3_g174691;
				Data3_g174691.Shader = In_Shader3_g174691;
				Data3_g174691.Emissive= In_Emissive3_g174691;
				Data3_g174691.MultiMask = In_MultiMask3_g174691;
				Data3_g174691.Grayscale = In_Grayscale3_g174691;
				Data3_g174691.Luminosity = In_Luminosity3_g174691;
				Data3_g174691.AlphaClip = In_AlphaClip3_g174691;
				Data3_g174691.AlphaFade = In_AlphaFade3_g174691;
				Data3_g174691.Translucency = In_Translucency3_g174691;
				Data3_g174691.Transmission = In_Transmission3_g174691;
				Data3_g174691.Thickness = In_Thickness3_g174691;
				Data3_g174691.Diffusion = In_Diffusion3_g174691;
				TVEVisualData Data4_g174696 = Data3_g174691;
				float Out_Dummy4_g174696 = 0;
				float3 Out_Albedo4_g174696 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174696 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174696 = float2( 0,0 );
				float3 Out_NormalWS4_g174696 = float3( 0,0,0 );
				float4 Out_Shader4_g174696 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174696 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174696 = 0;
				float Out_Grayscale4_g174696 = 0;
				float Out_Luminosity4_g174696 = 0;
				float Out_AlphaClip4_g174696 = 0;
				float Out_AlphaFade4_g174696 = 0;
				float3 Out_Translucency4_g174696 = float3( 0,0,0 );
				float Out_Transmission4_g174696 = 0;
				float Out_Thickness4_g174696 = 0;
				float Out_Diffusion4_g174696 = 0;
				Out_Dummy4_g174696 = Data4_g174696.Dummy;
				Out_Albedo4_g174696 = Data4_g174696.Albedo;
				Out_AlbedoRaw4_g174696 = Data4_g174696.AlbedoRaw;
				Out_NormalTS4_g174696 = Data4_g174696.NormalTS;
				Out_NormalWS4_g174696 = Data4_g174696.NormalWS;
				Out_Shader4_g174696 = Data4_g174696.Shader;
				Out_Emissive4_g174696= Data4_g174696.Emissive;
				Out_MultiMask4_g174696 = Data4_g174696.MultiMask;
				Out_Grayscale4_g174696 = Data4_g174696.Grayscale;
				Out_Luminosity4_g174696= Data4_g174696.Luminosity;
				Out_AlphaClip4_g174696 = Data4_g174696.AlphaClip;
				Out_AlphaFade4_g174696 = Data4_g174696.AlphaFade;
				Out_Translucency4_g174696 = Data4_g174696.Translucency;
				Out_Transmission4_g174696 = Data4_g174696.Transmission;
				Out_Thickness4_g174696 = Data4_g174696.Thickness;
				Out_Diffusion4_g174696 = Data4_g174696.Diffusion;
				half3 Visual_Albedo292_g174694 = Out_Albedo4_g174696;
				float temp_output_280_12_g174694 = Out_Grayscale4_g174696;
				half Visual_Grayscale308_g174694 = temp_output_280_12_g174694;
				float3 temp_cast_48 = (Visual_Grayscale308_g174694).xxx;
				TVEGlobalData Data15_g174695 = Data204_g173897;
				float Out_Dummy15_g174695 = 0;
				float4 Out_CoatParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174695 = float4( 0,0,0,0 );
				Out_Dummy15_g174695 = Data15_g174695.Dummy;
				Out_CoatParams15_g174695 = Data15_g174695.CoatParams;
				Out_PaintParams15_g174695 = Data15_g174695.PaintParams;
				Out_GlowParams15_g174695 = Data15_g174695.GlowParams;
				Out_AtmoParams15_g174695= Data15_g174695.AtmoParams;
				Out_FadeParams15_g174695= Data15_g174695.FadeParams;
				Out_FormParams15_g174695 = Data15_g174695.FormParams;
				Out_LandParams15_g174695 = Data15_g174695.LandParams;
				Out_WindParams15_g174695 = Data15_g174695.WindParams;
				Out_PushParams15_g174695 = Data15_g174695.PushParams;
				half4 Global_AtmoParams314_g174694 = Out_AtmoParams15_g174695;
				#ifdef TVE_DRYNESS_ELEMENT
				float staticSwitch351_g174694 = ( (Global_AtmoParams314_g174694).x * TVE_IsEnabled );
				#else
				float staticSwitch351_g174694 = 1.0;
				#endif
				half Dryness_GlobalMask352_g174694 = staticSwitch351_g174694;
				float3 lerpResult485_g174694 = lerp( Visual_Albedo292_g174694 , temp_cast_48 , ( Dryness_GlobalMask352_g174694 * _DrynessGrayValue ));
				half3 hsvTorgb58_g174715 = RGBToHSV( lerpResult485_g174694 );
				half3 hsvTorgb61_g174715 = HSVToRGB( half3(( hsvTorgb58_g174715.x + _DrynessShiftValue ),hsvTorgb58_g174715.y,hsvTorgb58_g174715.z) );
				#ifdef TVE_DRYNESS_SHIFT
				float3 staticSwitch499_g174694 = hsvTorgb61_g174715;
				#else
				float3 staticSwitch499_g174694 = lerpResult485_g174694;
				#endif
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174714 = 2.0;
				#else
				float staticSwitch1_g174714 = 4.594794;
				#endif
				half Dryness_TexMask478_g174694 = 1.0;
				float temp_output_280_11_g174694 = Out_MultiMask4_g174696;
				half Visual_MultiMask310_g174694 = temp_output_280_11_g174694;
				float lerpResult283_g174694 = lerp( 1.0 , Visual_MultiMask310_g174694 , _DrynessMultiValue);
				half Dryness_MultiMask302_g174694 = lerpResult283_g174694;
				float temp_output_280_15_g174694 = Out_Luminosity4_g174696;
				half Visual_Luminosity309_g174694 = temp_output_280_15_g174694;
				float clampResult17_g174710 = clamp( Visual_Luminosity309_g174694 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174709 = _DrynessLumaRemap.x;
				float temp_output_10_0_g174709 = ( _DrynessLumaRemap.y - temp_output_7_0_g174709 );
				float lerpResult295_g174694 = lerp( 1.0 , saturate( ( ( clampResult17_g174710 - temp_output_7_0_g174709 ) / ( temp_output_10_0_g174709 + 0.0001 ) ) ) , _DrynessLumaValue);
				half Dryness_LumaMask301_g174694 = lerpResult295_g174694;
				TVEModelData Data15_g174716 = Data16_g164566;
				float Out_Dummy15_g174716 = 0;
				float3 Out_PositionWS15_g174716 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174716 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174716 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174716 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174716 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174716 = float3( 0,0,0 );
				float4 Out_VertexData15_g174716 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174716 = float4( 0,0,0,0 );
				Out_Dummy15_g174716 = Data15_g174716.Dummy;
				Out_PositionWS15_g174716 = Data15_g174716.PositionWS;
				Out_PositionWO15_g174716 = Data15_g174716.PositionWO;
				Out_PivotWS15_g174716 = Data15_g174716.PivotWS;
				Out_PivotWO15_g174716 = Data15_g174716.PivotWO;
				Out_NormalWS15_g174716 = Data15_g174716.NormalWS;
				Out_ViewDirWS15_g174716 = Data15_g174716.ViewDirWS;
				Out_VertexData15_g174716 = Data15_g174716.VertexData;
				Out_BoundsData15_g174716 = Data15_g174716.BoundsData;
				half4 Model_VertexMasks386_g174694 = Out_VertexData15_g174716;
				float4 break375_g174694 = Model_VertexMasks386_g174694;
				float4 break33_g174703 = _dryness_vert_mode;
				float temp_output_30_0_g174703 = ( break375_g174694.x * break33_g174703.x );
				float temp_output_29_0_g174703 = ( break375_g174694.y * break33_g174703.y );
				float temp_output_31_0_g174703 = ( break375_g174694.z * break33_g174703.z );
				float temp_output_28_0_g174703 = ( temp_output_30_0_g174703 + temp_output_29_0_g174703 + temp_output_31_0_g174703 + ( break375_g174694.w * break33_g174703.w ) );
				float clampResult17_g174704 = clamp( temp_output_28_0_g174703 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174705 = _DrynessMeshRemap.x;
				float temp_output_10_0_g174705 = ( _DrynessMeshRemap.y - temp_output_7_0_g174705 );
				float lerpResult452_g174694 = lerp( 1.0 , saturate( ( ( clampResult17_g174704 - temp_output_7_0_g174705 ) / ( temp_output_10_0_g174705 + 0.0001 ) ) ) , _DrynessMeshValue);
				float temp_output_6_0_g174711 = lerpResult452_g174694;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174711 = ( temp_output_6_0_g174711 + ( _DrynessMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174711 = temp_output_6_0_g174711;
				#endif
				float temp_output_448_0_g174694 = staticSwitch14_g174711;
				half Dryness_VertMask378_g174694 = temp_output_448_0_g174694;
				half Dryness_MaskNoise291_g174694 = 1.0;
				half Custom_Mask411_g174694 = 1.0;
				float temp_output_7_0_g174708 = _DrynessBlendRemap.x;
				float temp_output_10_0_g174708 = ( _DrynessBlendRemap.y - temp_output_7_0_g174708 );
				half Dryness_Mask329_g174694 = saturate( ( ( ( _DrynessIntensityValue * Dryness_TexMask478_g174694 * Dryness_MultiMask302_g174694 * Dryness_LumaMask301_g174694 * Dryness_VertMask378_g174694 * Dryness_MaskNoise291_g174694 * Dryness_GlobalMask352_g174694 * Custom_Mask411_g174694 ) - temp_output_7_0_g174708 ) / ( temp_output_10_0_g174708 + 0.0001 ) ) );
				float3 lerpResult336_g174694 = lerp( Visual_Albedo292_g174694 , ( staticSwitch499_g174694 * staticSwitch1_g174714 * (_DrynessColor).rgb ) , Dryness_Mask329_g174694);
				#ifdef TVE_DRYNESS
				float3 staticSwitch356_g174694 = lerpResult336_g174694;
				#else
				float3 staticSwitch356_g174694 = Visual_Albedo292_g174694;
				#endif
				half3 Final_Albedo331_g174694 = staticSwitch356_g174694;
				float3 In_Albedo3_g174697 = Final_Albedo331_g174694;
				float3 In_AlbedoRaw3_g174697 = Out_AlbedoRaw4_g174696;
				float2 In_NormalTS3_g174697 = Out_NormalTS4_g174696;
				float3 In_NormalWS3_g174697 = Out_NormalWS4_g174696;
				half4 Visual_Shader415_g174694 = Out_Shader4_g174696;
				float4 break438_g174694 = Visual_Shader415_g174694;
				float4 appendResult439_g174694 = (float4(break438_g174694.x , break438_g174694.y , break438_g174694.z , ( break438_g174694.w * _DrynessSmoothnessValue )));
				float4 lerpResult427_g174694 = lerp( Visual_Shader415_g174694 , appendResult439_g174694 , Dryness_Mask329_g174694);
				#ifdef TVE_DRYNESS
				float4 staticSwitch426_g174694 = lerpResult427_g174694;
				#else
				float4 staticSwitch426_g174694 = Visual_Shader415_g174694;
				#endif
				half4 Final_Shader433_g174694 = staticSwitch426_g174694;
				float4 In_Shader3_g174697 = Final_Shader433_g174694;
				float4 In_Emissive3_g174697 = Out_Emissive4_g174696;
				float In_Grayscale3_g174697 = temp_output_280_12_g174694;
				float In_Luminosity3_g174697 = temp_output_280_15_g174694;
				float In_MultiMask3_g174697 = temp_output_280_11_g174694;
				float In_AlphaClip3_g174697 = Out_AlphaClip4_g174696;
				float In_AlphaFade3_g174697 = Out_AlphaFade4_g174696;
				float3 In_Translucency3_g174697 = Out_Translucency4_g174696;
				half Visual_Transmission416_g174694 = Out_Transmission4_g174696;
				float lerpResult421_g174694 = lerp( Visual_Transmission416_g174694 , ( Visual_Transmission416_g174694 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g174694);
				#ifdef TVE_DRYNESS
				float staticSwitch418_g174694 = lerpResult421_g174694;
				#else
				float staticSwitch418_g174694 = Visual_Transmission416_g174694;
				#endif
				half Final_Transmission425_g174694 = staticSwitch418_g174694;
				float In_Transmission3_g174697 = Final_Transmission425_g174694;
				float In_Thickness3_g174697 = Out_Thickness4_g174696;
				float In_Diffusion3_g174697 = Out_Diffusion4_g174696;
				Data3_g174697.Dummy = In_Dummy3_g174697;
				Data3_g174697.Albedo = In_Albedo3_g174697;
				Data3_g174697.AlbedoRaw = In_AlbedoRaw3_g174697;
				Data3_g174697.NormalTS = In_NormalTS3_g174697;
				Data3_g174697.NormalWS = In_NormalWS3_g174697;
				Data3_g174697.Shader = In_Shader3_g174697;
				Data3_g174697.Emissive= In_Emissive3_g174697;
				Data3_g174697.MultiMask = In_MultiMask3_g174697;
				Data3_g174697.Grayscale = In_Grayscale3_g174697;
				Data3_g174697.Luminosity = In_Luminosity3_g174697;
				Data3_g174697.AlphaClip = In_AlphaClip3_g174697;
				Data3_g174697.AlphaFade = In_AlphaFade3_g174697;
				Data3_g174697.Translucency = In_Translucency3_g174697;
				Data3_g174697.Transmission = In_Transmission3_g174697;
				Data3_g174697.Thickness = In_Thickness3_g174697;
				Data3_g174697.Diffusion = In_Diffusion3_g174697;
				TVEVisualData Data4_g174718 = Data3_g174697;
				float Out_Dummy4_g174718 = 0;
				float3 Out_Albedo4_g174718 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174718 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174718 = float2( 0,0 );
				float3 Out_NormalWS4_g174718 = float3( 0,0,0 );
				float4 Out_Shader4_g174718 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174718 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174718 = 0;
				float Out_Grayscale4_g174718 = 0;
				float Out_Luminosity4_g174718 = 0;
				float Out_AlphaClip4_g174718 = 0;
				float Out_AlphaFade4_g174718 = 0;
				float3 Out_Translucency4_g174718 = float3( 0,0,0 );
				float Out_Transmission4_g174718 = 0;
				float Out_Thickness4_g174718 = 0;
				float Out_Diffusion4_g174718 = 0;
				Out_Dummy4_g174718 = Data4_g174718.Dummy;
				Out_Albedo4_g174718 = Data4_g174718.Albedo;
				Out_AlbedoRaw4_g174718 = Data4_g174718.AlbedoRaw;
				Out_NormalTS4_g174718 = Data4_g174718.NormalTS;
				Out_NormalWS4_g174718 = Data4_g174718.NormalWS;
				Out_Shader4_g174718 = Data4_g174718.Shader;
				Out_Emissive4_g174718= Data4_g174718.Emissive;
				Out_MultiMask4_g174718 = Data4_g174718.MultiMask;
				Out_Grayscale4_g174718 = Data4_g174718.Grayscale;
				Out_Luminosity4_g174718= Data4_g174718.Luminosity;
				Out_AlphaClip4_g174718 = Data4_g174718.AlphaClip;
				Out_AlphaFade4_g174718 = Data4_g174718.AlphaFade;
				Out_Translucency4_g174718 = Data4_g174718.Translucency;
				Out_Transmission4_g174718 = Data4_g174718.Transmission;
				Out_Thickness4_g174718 = Data4_g174718.Thickness;
				Out_Diffusion4_g174718 = Data4_g174718.Diffusion;
				half3 Visual_Albedo127_g174717 = Out_Albedo4_g174718;
				float4 vertexToFrag24_g174669 = IN.ase_texcoord13;
				half4 Interp_Data1003 = vertexToFrag24_g174669;
				float clampResult208_g174717 = clamp( (Interp_Data1003).w , 0.0 , 0.09 );
				#ifdef TVE_MOTION_HIGHLIGHT
				float3 staticSwitch214_g174717 = ( Visual_Albedo127_g174717 + ( ( Visual_Albedo127_g174717 * Visual_Albedo127_g174717 * 200.0 * _motion_highlight_color ) * clampResult208_g174717 ) );
				#else
				float3 staticSwitch214_g174717 = Visual_Albedo127_g174717;
				#endif
				half3 Final_Albedo160_g174717 = staticSwitch214_g174717;
				float3 In_Albedo3_g174719 = Final_Albedo160_g174717;
				float3 In_AlbedoRaw3_g174719 = Out_AlbedoRaw4_g174718;
				float2 In_NormalTS3_g174719 = Out_NormalTS4_g174718;
				float3 In_NormalWS3_g174719 = Out_NormalWS4_g174718;
				float4 In_Shader3_g174719 = Out_Shader4_g174718;
				float4 In_Emissive3_g174719 = Out_Emissive4_g174718;
				float In_Grayscale3_g174719 = Out_Grayscale4_g174718;
				float In_Luminosity3_g174719 = Out_Luminosity4_g174718;
				float In_MultiMask3_g174719 = Out_MultiMask4_g174718;
				float In_AlphaClip3_g174719 = Out_AlphaClip4_g174718;
				float In_AlphaFade3_g174719 = Out_AlphaFade4_g174718;
				float3 In_Translucency3_g174719 = Out_Translucency4_g174718;
				float In_Transmission3_g174719 = Out_Transmission4_g174718;
				float In_Thickness3_g174719 = Out_Thickness4_g174718;
				float In_Diffusion3_g174719 = Out_Diffusion4_g174718;
				Data3_g174719.Dummy = In_Dummy3_g174719;
				Data3_g174719.Albedo = In_Albedo3_g174719;
				Data3_g174719.AlbedoRaw = In_AlbedoRaw3_g174719;
				Data3_g174719.NormalTS = In_NormalTS3_g174719;
				Data3_g174719.NormalWS = In_NormalWS3_g174719;
				Data3_g174719.Shader = In_Shader3_g174719;
				Data3_g174719.Emissive= In_Emissive3_g174719;
				Data3_g174719.MultiMask = In_MultiMask3_g174719;
				Data3_g174719.Grayscale = In_Grayscale3_g174719;
				Data3_g174719.Luminosity = In_Luminosity3_g174719;
				Data3_g174719.AlphaClip = In_AlphaClip3_g174719;
				Data3_g174719.AlphaFade = In_AlphaFade3_g174719;
				Data3_g174719.Translucency = In_Translucency3_g174719;
				Data3_g174719.Transmission = In_Transmission3_g174719;
				Data3_g174719.Thickness = In_Thickness3_g174719;
				Data3_g174719.Diffusion = In_Diffusion3_g174719;
				TVEVisualData Data4_g174721 = Data3_g174719;
				float Out_Dummy4_g174721 = 0;
				float3 Out_Albedo4_g174721 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174721 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174721 = float2( 0,0 );
				float3 Out_NormalWS4_g174721 = float3( 0,0,0 );
				float4 Out_Shader4_g174721 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174721 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174721 = 0;
				float Out_Grayscale4_g174721 = 0;
				float Out_Luminosity4_g174721 = 0;
				float Out_AlphaClip4_g174721 = 0;
				float Out_AlphaFade4_g174721 = 0;
				float3 Out_Translucency4_g174721 = float3( 0,0,0 );
				float Out_Transmission4_g174721 = 0;
				float Out_Thickness4_g174721 = 0;
				float Out_Diffusion4_g174721 = 0;
				Out_Dummy4_g174721 = Data4_g174721.Dummy;
				Out_Albedo4_g174721 = Data4_g174721.Albedo;
				Out_AlbedoRaw4_g174721 = Data4_g174721.AlbedoRaw;
				Out_NormalTS4_g174721 = Data4_g174721.NormalTS;
				Out_NormalWS4_g174721 = Data4_g174721.NormalWS;
				Out_Shader4_g174721 = Data4_g174721.Shader;
				Out_Emissive4_g174721= Data4_g174721.Emissive;
				Out_MultiMask4_g174721 = Data4_g174721.MultiMask;
				Out_Grayscale4_g174721 = Data4_g174721.Grayscale;
				Out_Luminosity4_g174721= Data4_g174721.Luminosity;
				Out_AlphaClip4_g174721 = Data4_g174721.AlphaClip;
				Out_AlphaFade4_g174721 = Data4_g174721.AlphaFade;
				Out_Translucency4_g174721 = Data4_g174721.Translucency;
				Out_Transmission4_g174721 = Data4_g174721.Transmission;
				Out_Thickness4_g174721 = Data4_g174721.Thickness;
				Out_Diffusion4_g174721 = Data4_g174721.Diffusion;
				half3 Visual_Albedo127_g174720 = Out_Albedo4_g174721;
				float3 temp_output_622_0_g174720 = (_OverlayColor).rgb;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174724) = _OverlayAlbedoTex;
				float localFilterTexture19_g174753 = ( 0.0 );
				SamplerState SamplerDefault19_g174753 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174753 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174753 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174753 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174753 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174753 = SamplerDefault19_g174753;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174753 = SamplerDefault19_g174753;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174753 = SamplerPoint19_g174753;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174753 = SamplerLow19_g174753;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174753 = SamplerMedium19_g174753;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174753 = SamplerHigh19_g174753;
				#endif
				SamplerState Sampler238_g174724 = SS19_g174753;
				float4 temp_output_6_0_g174725 = _overlay_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174725 = ( temp_output_6_0_g174725 + ( ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174725 = temp_output_6_0_g174725;
				#endif
				half4 Overlay_Coords639_g174720 = staticSwitch14_g174725;
				float4 temp_output_37_0_g174724 = Overlay_Coords639_g174720;
				half4 Coords238_g174724 = temp_output_37_0_g174724;
				TVEModelData Data15_g174755 = Data16_g164566;
				float Out_Dummy15_g174755 = 0;
				float3 Out_PositionWS15_g174755 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174755 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174755 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174755 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174755 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174755 = float3( 0,0,0 );
				float4 Out_VertexData15_g174755 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174755 = float4( 0,0,0,0 );
				Out_Dummy15_g174755 = Data15_g174755.Dummy;
				Out_PositionWS15_g174755 = Data15_g174755.PositionWS;
				Out_PositionWO15_g174755 = Data15_g174755.PositionWO;
				Out_PivotWS15_g174755 = Data15_g174755.PivotWS;
				Out_PivotWO15_g174755 = Data15_g174755.PivotWO;
				Out_NormalWS15_g174755 = Data15_g174755.NormalWS;
				Out_ViewDirWS15_g174755 = Data15_g174755.ViewDirWS;
				Out_VertexData15_g174755 = Data15_g174755.VertexData;
				Out_BoundsData15_g174755 = Data15_g174755.BoundsData;
				half3 Model_PositionWO602_g174720 = Out_PositionWO15_g174755;
				float3 temp_output_279_0_g174724 = Model_PositionWO602_g174720;
				half3 WorldPosition238_g174724 = temp_output_279_0_g174724;
				half4 localSamplePlanar2D238_g174724 = SamplePlanar2D( Texture238_g174724 , Sampler238_g174724 , Coords238_g174724 , WorldPosition238_g174724 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174724) = _OverlayAlbedoTex;
				SamplerState Sampler246_g174724 = SS19_g174753;
				half4 Coords246_g174724 = temp_output_37_0_g174724;
				half3 WorldPosition246_g174724 = temp_output_279_0_g174724;
				half3 Model_NormalWS712_g174720 = Out_NormalWS15_g174755;
				float3 temp_output_280_0_g174724 = Model_NormalWS712_g174720;
				half3 WorldNormal246_g174724 = temp_output_280_0_g174724;
				half4 localSamplePlanar3D246_g174724 = SamplePlanar3D( Texture246_g174724 , Sampler246_g174724 , Coords246_g174724 , WorldPosition246_g174724 , WorldNormal246_g174724 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174724) = _OverlayAlbedoTex;
				SamplerState Sampler234_g174724 = SS19_g174753;
				float4 Coords234_g174724 = temp_output_37_0_g174724;
				float3 WorldPosition234_g174724 = temp_output_279_0_g174724;
				float4 localSampleStochastic2D234_g174724 = SampleStochastic2D( Texture234_g174724 , Sampler234_g174724 , Coords234_g174724 , WorldPosition234_g174724 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174724) = _OverlayAlbedoTex;
				SamplerState Sampler263_g174724 = SS19_g174753;
				half4 Coords263_g174724 = temp_output_37_0_g174724;
				half3 WorldPosition263_g174724 = temp_output_279_0_g174724;
				half3 WorldNormal263_g174724 = temp_output_280_0_g174724;
				half4 localSampleStochastic3D263_g174724 = SampleStochastic3D( Texture263_g174724 , Sampler263_g174724 , Coords263_g174724 , WorldPosition263_g174724 , WorldNormal263_g174724 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch676_g174720 = localSamplePlanar2D238_g174724;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch676_g174720 = localSamplePlanar3D246_g174724;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch676_g174720 = localSampleStochastic2D234_g174724;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch676_g174720 = localSampleStochastic3D263_g174724;
				#else
				float4 staticSwitch676_g174720 = localSamplePlanar2D238_g174724;
				#endif
				half3 Overlay_Albedo526_g174720 = (staticSwitch676_g174720).xyz;
				#ifdef TVE_OVERLAY_TEX
				float3 staticSwitch578_g174720 = ( temp_output_622_0_g174720 * Overlay_Albedo526_g174720 );
				#else
				float3 staticSwitch578_g174720 = temp_output_622_0_g174720;
				#endif
				float3 temp_output_6_0_g174731 = staticSwitch578_g174720;
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g174731 = ( temp_output_6_0_g174731 + ( _OverlayTextureMode * 0.0 ) );
				#else
				float3 staticSwitch14_g174731 = temp_output_6_0_g174731;
				#endif
				float3 temp_cast_49 = (0.0).xxx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174728) = _OverlayGlitterTexRT;
				SamplerState Sampler246_g174728 = sampler_Linear_Repeat;
				float4 appendResult863_g174720 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g174728 = appendResult863_g174720;
				half4 Coords246_g174728 = temp_output_37_0_g174728;
				float3 temp_output_279_0_g174728 = Model_PositionWO602_g174720;
				half3 WorldPosition246_g174728 = temp_output_279_0_g174728;
				float3 temp_output_280_0_g174728 = Model_NormalWS712_g174720;
				half3 WorldNormal246_g174728 = temp_output_280_0_g174728;
				half4 localSamplePlanar3D246_g174728 = SamplePlanar3D( Texture246_g174728 , Sampler246_g174728 , Coords246_g174728 , WorldPosition246_g174728 , WorldNormal246_g174728 );
				half Overlay_GlitterTex854_g174720 = (localSamplePlanar3D246_g174728).x;
				half3 Model_PositionWS879_g174720 = Out_PositionWS15_g174755;
				#ifdef TVE_OVERLAY_GLITTER
				float3 staticSwitch868_g174720 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g174720 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g174720 ) / _OverlayGlitterDistValue ) ) ) );
				#else
				float3 staticSwitch868_g174720 = temp_cast_49;
				#endif
				half3 Overlay_GlitterColor865_g174720 = staticSwitch868_g174720;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174745) = _OverlayMaskTex;
				SamplerState Sampler276_g174745 = sampler_Linear_Repeat;
				float4 temp_output_6_0_g174746 = _overlay_mask_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174746 = ( temp_output_6_0_g174746 + ( ( _OverlayMaskSampleMode + _OverlayMaskCoordMode + _OverlayMaskCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174746 = temp_output_6_0_g174746;
				#endif
				half4 Local_MaskCoords888_g174720 = staticSwitch14_g174746;
				float4 temp_output_37_0_g174745 = Local_MaskCoords888_g174720;
				half4 Coords276_g174745 = temp_output_37_0_g174745;
				half2 TexCoord276_g174745 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174745 = SampleMain( Texture276_g174745 , Sampler276_g174745 , Coords276_g174745 , TexCoord276_g174745 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174745) = _OverlayMaskTex;
				SamplerState Sampler275_g174745 = sampler_Linear_Repeat;
				half4 Coords275_g174745 = temp_output_37_0_g174745;
				half2 TexCoord275_g174745 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174745 = SampleExtra( Texture275_g174745 , Sampler275_g174745 , Coords275_g174745 , TexCoord275_g174745 );
				#if defined( TVE_OVERLAY_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch894_g174720 = localSampleMain276_g174745;
				#elif defined( TVE_OVERLAY_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch894_g174720 = localSampleExtra275_g174745;
				#else
				float4 staticSwitch894_g174720 = localSampleMain276_g174745;
				#endif
				half4 Local_MaskTex887_g174720 = staticSwitch894_g174720;
				float clampResult17_g174747 = clamp( (Local_MaskTex887_g174720).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174748 = _OverlayMaskRemap.x;
				float temp_output_10_0_g174748 = ( _OverlayMaskRemap.y - temp_output_7_0_g174748 );
				float lerpResult900_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174747 - temp_output_7_0_g174748 ) / ( temp_output_10_0_g174748 + 0.0001 ) ) ) , _OverlayMaskValue);
				half Overlay_TexMask908_g174720 = lerpResult900_g174720;
				float3 temp_output_739_21_g174720 = Out_NormalWS4_g174721;
				half3 Visual_NormalWS749_g174720 = temp_output_739_21_g174720;
				float clampResult17_g174741 = clamp( saturate( (Visual_NormalWS749_g174720).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174740 = _OverlayProjRemap.x;
				float temp_output_10_0_g174740 = ( _OverlayProjRemap.y - temp_output_7_0_g174740 );
				float lerpResult842_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174741 - temp_output_7_0_g174740 ) / ( temp_output_10_0_g174740 + 0.0001 ) ) ) , _OverlayProjValue);
				half Overlay_MaskProj457_g174720 = lerpResult842_g174720;
				float temp_output_739_15_g174720 = Out_Luminosity4_g174721;
				half Visual_Luminosity654_g174720 = temp_output_739_15_g174720;
				float clampResult17_g174743 = clamp( Visual_Luminosity654_g174720 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174742 = _OverlayLumaRemap.x;
				float temp_output_10_0_g174742 = ( _OverlayLumaRemap.y - temp_output_7_0_g174742 );
				float lerpResult587_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174743 - temp_output_7_0_g174742 ) / ( temp_output_10_0_g174742 + 0.0001 ) ) ) , _OverlayLumaValue);
				half Overlay_MaskLuma438_g174720 = lerpResult587_g174720;
				half4 Model_VertexMasks791_g174720 = Out_VertexData15_g174755;
				float4 break792_g174720 = Model_VertexMasks791_g174720;
				float4 break33_g174733 = _overlay_vert_mode;
				float temp_output_30_0_g174733 = ( break792_g174720.x * break33_g174733.x );
				float temp_output_29_0_g174733 = ( break792_g174720.y * break33_g174733.y );
				float temp_output_31_0_g174733 = ( break792_g174720.z * break33_g174733.z );
				float temp_output_28_0_g174733 = ( temp_output_30_0_g174733 + temp_output_29_0_g174733 + temp_output_31_0_g174733 + ( break792_g174720.w * break33_g174733.w ) );
				float clampResult17_g174734 = clamp( temp_output_28_0_g174733 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174737 = _OverlayMeshRemap.x;
				float temp_output_10_0_g174737 = ( _OverlayMeshRemap.y - temp_output_7_0_g174737 );
				float lerpResult881_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174734 - temp_output_7_0_g174737 ) / ( temp_output_10_0_g174737 + 0.0001 ) ) ) , _OverlayMeshValue);
				float temp_output_6_0_g174744 = lerpResult881_g174720;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174744 = ( temp_output_6_0_g174744 + ( _OverlayMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174744 = temp_output_6_0_g174744;
				#endif
				float temp_output_831_0_g174720 = staticSwitch14_g174744;
				half Overlay_VertMask801_g174720 = temp_output_831_0_g174720;
				half Overlay_MaskNoise427_g174720 = 1.0;
				TVEGlobalData Data15_g174722 = Data204_g173897;
				float Out_Dummy15_g174722 = 0;
				float4 Out_CoatParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174722 = float4( 0,0,0,0 );
				Out_Dummy15_g174722 = Data15_g174722.Dummy;
				Out_CoatParams15_g174722 = Data15_g174722.CoatParams;
				Out_PaintParams15_g174722 = Data15_g174722.PaintParams;
				Out_GlowParams15_g174722 = Data15_g174722.GlowParams;
				Out_AtmoParams15_g174722= Data15_g174722.AtmoParams;
				Out_FadeParams15_g174722= Data15_g174722.FadeParams;
				Out_FormParams15_g174722 = Data15_g174722.FormParams;
				Out_LandParams15_g174722 = Data15_g174722.LandParams;
				Out_WindParams15_g174722 = Data15_g174722.WindParams;
				Out_PushParams15_g174722 = Data15_g174722.PushParams;
				half4 Global_AtmoParams516_g174720 = Out_AtmoParams15_g174722;
				#ifdef TVE_OVERLAY_ELEMENT
				float staticSwitch705_g174720 = ( (Global_AtmoParams516_g174720).z * TVE_IsEnabled );
				#else
				float staticSwitch705_g174720 = 1.0;
				#endif
				half Overlay_MaskGlobal429_g174720 = staticSwitch705_g174720;
				half Custom_Mask646_g174720 = 1.0;
				float temp_output_7_0_g174749 = _OverlayBlendRemap1.x;
				float temp_output_10_0_g174749 = ( _OverlayBlendRemap1.y - temp_output_7_0_g174749 );
				half Overlay_Mask494_g174720 = saturate( ( ( ( _OverlayIntensityValue * Overlay_TexMask908_g174720 * Overlay_MaskProj457_g174720 * Overlay_MaskLuma438_g174720 * Overlay_VertMask801_g174720 * Overlay_MaskNoise427_g174720 * Overlay_MaskGlobal429_g174720 * Custom_Mask646_g174720 ) - temp_output_7_0_g174749 ) / ( temp_output_10_0_g174749 + 0.0001 ) ) );
				float3 lerpResult467_g174720 = lerp( Visual_Albedo127_g174720 , ( staticSwitch14_g174731 + Overlay_GlitterColor865_g174720 ) , Overlay_Mask494_g174720);
				#ifdef TVE_OVERLAY
				float3 staticSwitch577_g174720 = lerpResult467_g174720;
				#else
				float3 staticSwitch577_g174720 = Visual_Albedo127_g174720;
				#endif
				half3 Final_Albedo493_g174720 = staticSwitch577_g174720;
				float3 In_Albedo3_g174723 = Final_Albedo493_g174720;
				float3 In_AlbedoRaw3_g174723 = Out_AlbedoRaw4_g174721;
				half2 Visual_NormalTS535_g174720 = Out_NormalTS4_g174721;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174726) = _OverlayNormalTex;
				float localFilterTexture29_g174754 = ( 0.0 );
				SamplerState SamplerDefault29_g174754 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174754 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174754 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174754 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174754 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174754 = SamplerDefault29_g174754;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174754 = SamplerDefault29_g174754;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174754 = SamplerPoint29_g174754;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174754 = SamplerLow29_g174754;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174754 = SamplerMedium29_g174754;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174754 = SamplerHigh29_g174754;
				#endif
				SamplerState Sampler238_g174726 = SS29_g174754;
				float4 temp_output_37_0_g174726 = Overlay_Coords639_g174720;
				half4 Coords238_g174726 = temp_output_37_0_g174726;
				float3 temp_output_279_0_g174726 = Model_PositionWO602_g174720;
				half3 WorldPosition238_g174726 = temp_output_279_0_g174726;
				half4 localSamplePlanar2D238_g174726 = SamplePlanar2D( Texture238_g174726 , Sampler238_g174726 , Coords238_g174726 , WorldPosition238_g174726 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174726) = _OverlayNormalTex;
				SamplerState Sampler246_g174726 = SS29_g174754;
				half4 Coords246_g174726 = temp_output_37_0_g174726;
				half3 WorldPosition246_g174726 = temp_output_279_0_g174726;
				float3 temp_output_280_0_g174726 = Model_NormalWS712_g174720;
				half3 WorldNormal246_g174726 = temp_output_280_0_g174726;
				half4 localSamplePlanar3D246_g174726 = SamplePlanar3D( Texture246_g174726 , Sampler246_g174726 , Coords246_g174726 , WorldPosition246_g174726 , WorldNormal246_g174726 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174726) = _OverlayNormalTex;
				SamplerState Sampler234_g174726 = SS29_g174754;
				float4 Coords234_g174726 = temp_output_37_0_g174726;
				float3 WorldPosition234_g174726 = temp_output_279_0_g174726;
				float4 localSampleStochastic2D234_g174726 = SampleStochastic2D( Texture234_g174726 , Sampler234_g174726 , Coords234_g174726 , WorldPosition234_g174726 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174726) = _OverlayNormalTex;
				SamplerState Sampler263_g174726 = SS29_g174754;
				half4 Coords263_g174726 = temp_output_37_0_g174726;
				half3 WorldPosition263_g174726 = temp_output_279_0_g174726;
				half3 WorldNormal263_g174726 = temp_output_280_0_g174726;
				half4 localSampleStochastic3D263_g174726 = SampleStochastic3D( Texture263_g174726 , Sampler263_g174726 , Coords263_g174726 , WorldPosition263_g174726 , WorldNormal263_g174726 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch686_g174720 = localSamplePlanar2D238_g174726;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch686_g174720 = localSamplePlanar3D246_g174726;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch686_g174720 = localSampleStochastic2D234_g174726;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch686_g174720 = localSampleStochastic3D263_g174726;
				#else
				float4 staticSwitch686_g174720 = localSamplePlanar2D238_g174726;
				#endif
				half4 Normal_Packed45_g174730 = staticSwitch686_g174720;
				float2 appendResult58_g174730 = (float2(( (Normal_Packed45_g174730).x * (Normal_Packed45_g174730).w ) , (Normal_Packed45_g174730).y));
				half2 Normal_Default50_g174730 = appendResult58_g174730;
				half2 Normal_ASTC41_g174730 = (Normal_Packed45_g174730).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174730 = Normal_ASTC41_g174730;
				#else
				float2 staticSwitch38_g174730 = Normal_Default50_g174730;
				#endif
				half2 Normal_NO_DTX544_g174730 = (Normal_Packed45_g174730).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174730 = Normal_NO_DTX544_g174730;
				#else
				float2 staticSwitch37_g174730 = staticSwitch38_g174730;
				#endif
				half2 Normal_Planar45_g174729 = (staticSwitch37_g174730*2.0 + -1.0);
				float2 break71_g174729 = Normal_Planar45_g174729;
				float3 appendResult72_g174729 = (float3(break71_g174729.x , 0.0 , break71_g174729.y));
				half2 Overlay_Normal528_g174720 = (mul( ase_worldToTangent, appendResult72_g174729 )).xy;
				#ifdef TVE_OVERLAY_TEX
				float2 staticSwitch579_g174720 = Overlay_Normal528_g174720;
				#else
				float2 staticSwitch579_g174720 = Visual_NormalTS535_g174720;
				#endif
				float2 lerpResult551_g174720 = lerp( Visual_NormalTS535_g174720 , ( staticSwitch579_g174720 * _OverlayNormalValue ) , Overlay_Mask494_g174720);
				#ifdef TVE_OVERLAY
				float2 staticSwitch583_g174720 = lerpResult551_g174720;
				#else
				float2 staticSwitch583_g174720 = Visual_NormalTS535_g174720;
				#endif
				half2 Final_NormalTS499_g174720 = staticSwitch583_g174720;
				float2 In_NormalTS3_g174723 = Final_NormalTS499_g174720;
				float3 In_NormalWS3_g174723 = temp_output_739_21_g174720;
				half4 Visual_Masks536_g174720 = Out_Shader4_g174721;
				float4 appendResult585_g174720 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
				float4 lerpResult584_g174720 = lerp( Visual_Masks536_g174720 , appendResult585_g174720 , Overlay_Mask494_g174720);
				#ifdef TVE_OVERLAY
				float4 staticSwitch586_g174720 = lerpResult584_g174720;
				#else
				float4 staticSwitch586_g174720 = Visual_Masks536_g174720;
				#endif
				half4 Final_Masks482_g174720 = staticSwitch586_g174720;
				float4 In_Shader3_g174723 = Final_Masks482_g174720;
				float4 In_Emissive3_g174723 = Out_Emissive4_g174721;
				float temp_output_739_12_g174720 = Out_Grayscale4_g174721;
				float In_Grayscale3_g174723 = temp_output_739_12_g174720;
				float In_Luminosity3_g174723 = temp_output_739_15_g174720;
				float In_MultiMask3_g174723 = Out_MultiMask4_g174721;
				float In_AlphaClip3_g174723 = Out_AlphaClip4_g174721;
				float In_AlphaFade3_g174723 = Out_AlphaFade4_g174721;
				float3 In_Translucency3_g174723 = Out_Translucency4_g174721;
				half Visual_Transmission699_g174720 = Out_Transmission4_g174721;
				float lerpResult746_g174720 = lerp( Visual_Transmission699_g174720 , ( Visual_Transmission699_g174720 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g174720 * Overlay_MaskNoise427_g174720 * Overlay_MaskGlobal429_g174720 ));
				#ifdef TVE_OVERLAY
				float staticSwitch703_g174720 = lerpResult746_g174720;
				#else
				float staticSwitch703_g174720 = Visual_Transmission699_g174720;
				#endif
				half Final_Transmission702_g174720 = staticSwitch703_g174720;
				float In_Transmission3_g174723 = Final_Transmission702_g174720;
				float In_Thickness3_g174723 = Out_Thickness4_g174721;
				float In_Diffusion3_g174723 = Out_Diffusion4_g174721;
				Data3_g174723.Dummy = In_Dummy3_g174723;
				Data3_g174723.Albedo = In_Albedo3_g174723;
				Data3_g174723.AlbedoRaw = In_AlbedoRaw3_g174723;
				Data3_g174723.NormalTS = In_NormalTS3_g174723;
				Data3_g174723.NormalWS = In_NormalWS3_g174723;
				Data3_g174723.Shader = In_Shader3_g174723;
				Data3_g174723.Emissive= In_Emissive3_g174723;
				Data3_g174723.MultiMask = In_MultiMask3_g174723;
				Data3_g174723.Grayscale = In_Grayscale3_g174723;
				Data3_g174723.Luminosity = In_Luminosity3_g174723;
				Data3_g174723.AlphaClip = In_AlphaClip3_g174723;
				Data3_g174723.AlphaFade = In_AlphaFade3_g174723;
				Data3_g174723.Translucency = In_Translucency3_g174723;
				Data3_g174723.Transmission = In_Transmission3_g174723;
				Data3_g174723.Thickness = In_Thickness3_g174723;
				Data3_g174723.Diffusion = In_Diffusion3_g174723;
				TVEVisualData Data4_g174757 = Data3_g174723;
				float Out_Dummy4_g174757 = 0;
				float3 Out_Albedo4_g174757 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174757 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174757 = float2( 0,0 );
				float3 Out_NormalWS4_g174757 = float3( 0,0,0 );
				float4 Out_Shader4_g174757 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174757 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174757 = 0;
				float Out_Grayscale4_g174757 = 0;
				float Out_Luminosity4_g174757 = 0;
				float Out_AlphaClip4_g174757 = 0;
				float Out_AlphaFade4_g174757 = 0;
				float3 Out_Translucency4_g174757 = float3( 0,0,0 );
				float Out_Transmission4_g174757 = 0;
				float Out_Thickness4_g174757 = 0;
				float Out_Diffusion4_g174757 = 0;
				Out_Dummy4_g174757 = Data4_g174757.Dummy;
				Out_Albedo4_g174757 = Data4_g174757.Albedo;
				Out_AlbedoRaw4_g174757 = Data4_g174757.AlbedoRaw;
				Out_NormalTS4_g174757 = Data4_g174757.NormalTS;
				Out_NormalWS4_g174757 = Data4_g174757.NormalWS;
				Out_Shader4_g174757 = Data4_g174757.Shader;
				Out_Emissive4_g174757= Data4_g174757.Emissive;
				Out_MultiMask4_g174757 = Data4_g174757.MultiMask;
				Out_Grayscale4_g174757 = Data4_g174757.Grayscale;
				Out_Luminosity4_g174757= Data4_g174757.Luminosity;
				Out_AlphaClip4_g174757 = Data4_g174757.AlphaClip;
				Out_AlphaFade4_g174757 = Data4_g174757.AlphaFade;
				Out_Translucency4_g174757 = Data4_g174757.Translucency;
				Out_Transmission4_g174757 = Data4_g174757.Transmission;
				Out_Thickness4_g174757 = Data4_g174757.Thickness;
				Out_Diffusion4_g174757 = Data4_g174757.Diffusion;
				half3 Visual_Albedo127_g174756 = Out_Albedo4_g174757;
				TVEGlobalData Data15_g174762 = Data204_g173897;
				float Out_Dummy15_g174762 = 0;
				float4 Out_CoatParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174762 = float4( 0,0,0,0 );
				Out_Dummy15_g174762 = Data15_g174762.Dummy;
				Out_CoatParams15_g174762 = Data15_g174762.CoatParams;
				Out_PaintParams15_g174762 = Data15_g174762.PaintParams;
				Out_GlowParams15_g174762 = Data15_g174762.GlowParams;
				Out_AtmoParams15_g174762= Data15_g174762.AtmoParams;
				Out_FadeParams15_g174762= Data15_g174762.FadeParams;
				Out_FormParams15_g174762 = Data15_g174762.FormParams;
				Out_LandParams15_g174762 = Data15_g174762.LandParams;
				Out_WindParams15_g174762 = Data15_g174762.WindParams;
				Out_PushParams15_g174762 = Data15_g174762.PushParams;
				half4 Global_AtmoParams516_g174756 = Out_AtmoParams15_g174762;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch663_g174756 = ( (Global_AtmoParams516_g174756).y * TVE_IsEnabled );
				#else
				float staticSwitch663_g174756 = 1.0;
				#endif
				half Global_Wetness429_g174756 = staticSwitch663_g174756;
				half Wetness_Value1042_g174756 = ( _WetnessIntensityValue * Global_Wetness429_g174756 );
				TVEModelData Data15_g174770 = Data16_g164566;
				float Out_Dummy15_g174770 = 0;
				float3 Out_PositionWS15_g174770 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174770 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174770 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174770 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174770 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174770 = float3( 0,0,0 );
				float4 Out_VertexData15_g174770 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174770 = float4( 0,0,0,0 );
				Out_Dummy15_g174770 = Data15_g174770.Dummy;
				Out_PositionWS15_g174770 = Data15_g174770.PositionWS;
				Out_PositionWO15_g174770 = Data15_g174770.PositionWO;
				Out_PivotWS15_g174770 = Data15_g174770.PivotWS;
				Out_PivotWO15_g174770 = Data15_g174770.PivotWO;
				Out_NormalWS15_g174770 = Data15_g174770.NormalWS;
				Out_ViewDirWS15_g174770 = Data15_g174770.ViewDirWS;
				Out_VertexData15_g174770 = Data15_g174770.VertexData;
				Out_BoundsData15_g174770 = Data15_g174770.BoundsData;
				half4 Model_VertexData1030_g174756 = Out_VertexData15_g174770;
				float4 break1019_g174756 = Model_VertexData1030_g174756;
				float4 break33_g174775 = _wetness_vert_mode;
				float temp_output_30_0_g174775 = ( break1019_g174756.x * break33_g174775.x );
				float temp_output_29_0_g174775 = ( break1019_g174756.y * break33_g174775.y );
				float temp_output_31_0_g174775 = ( break1019_g174756.z * break33_g174775.z );
				float temp_output_28_0_g174775 = ( temp_output_30_0_g174775 + temp_output_29_0_g174775 + temp_output_31_0_g174775 + ( break1019_g174756.w * break33_g174775.w ) );
				float clampResult17_g174773 = clamp( temp_output_28_0_g174775 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174774 = _WetnessMeshRemap.x;
				float temp_output_10_0_g174774 = ( _WetnessMeshRemap.y - temp_output_7_0_g174774 );
				float lerpResult1026_g174756 = lerp( 1.0 , saturate( ( ( clampResult17_g174773 - temp_output_7_0_g174774 ) / ( temp_output_10_0_g174774 + 0.0001 ) ) ) , _WetnessMeshValue);
				float temp_output_6_0_g174776 = lerpResult1026_g174756;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174776 = ( temp_output_6_0_g174776 + ( _WetnessMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174776 = temp_output_6_0_g174776;
				#endif
				#ifdef TVE_WETNESS_VERT
				float staticSwitch1110_g174756 = staticSwitch14_g174776;
				#else
				float staticSwitch1110_g174756 = 1.0;
				#endif
				half Wetness_VertMask1024_g174756 = staticSwitch1110_g174756;
				float temp_output_1043_0_g174756 = ( Wetness_Value1042_g174756 * Wetness_VertMask1024_g174756 );
				half Wetness_Mask866_g174756 = temp_output_1043_0_g174756;
				float4 break1083_g174756 = Model_VertexData1030_g174756;
				float4 break33_g174779 = _wetness_water_vert_mode;
				float temp_output_30_0_g174779 = ( break1083_g174756.x * break33_g174779.x );
				float temp_output_29_0_g174779 = ( break1083_g174756.y * break33_g174779.y );
				float temp_output_31_0_g174779 = ( break1083_g174756.z * break33_g174779.z );
				float temp_output_28_0_g174779 = ( temp_output_30_0_g174779 + temp_output_29_0_g174779 + temp_output_31_0_g174779 + ( break1083_g174756.w * break33_g174779.w ) );
				float clampResult17_g174777 = clamp( temp_output_28_0_g174779 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174778 = _WetnessWaterMeshRemap.x;
				float temp_output_10_0_g174778 = ( _WetnessWaterMeshRemap.y - temp_output_7_0_g174778 );
				float lerpResult1089_g174756 = lerp( 1.0 , saturate( ( ( clampResult17_g174777 - temp_output_7_0_g174778 ) / ( temp_output_10_0_g174778 + 0.0001 ) ) ) , _WetnessWaterMeshValue);
				float temp_output_6_0_g174780 = lerpResult1089_g174756;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174780 = ( temp_output_6_0_g174780 + ( _WetnessWaterMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174780 = temp_output_6_0_g174780;
				#endif
				#ifdef TVE_WETNESS_VERT
				float staticSwitch1113_g174756 = staticSwitch14_g174780;
				#else
				float staticSwitch1113_g174756 = 1.0;
				#endif
				half Water_VertMask1094_g174756 = staticSwitch1113_g174756;
				half4 Visual_Masks536_g174756 = Out_Shader4_g174757;
				float lerpResult1013_g174756 = lerp( 1.0 , (Visual_Masks536_g174756).z , _WetnessWaterBaseValue);
				half Water_HeightMask782_g174756 = lerpResult1013_g174756;
				float clampResult17_g174771 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g174756 * Water_VertMask1094_g174756 ) - Water_HeightMask782_g174756 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174772 = _WetnessWaterBlendRemap.x;
				float temp_output_10_0_g174772 = ( _WetnessWaterBlendRemap.y - temp_output_7_0_g174772 );
				half3 Model_NormalWS798_g174756 = Out_NormalWS15_g174770;
				float temp_output_786_0_g174756 = saturate( (Model_NormalWS798_g174756).y );
				half Wetness_ProjMask790_g174756 = temp_output_786_0_g174756;
				half Water_Mask760_g174756 = ( saturate( ( ( clampResult17_g174771 - temp_output_7_0_g174772 ) / ( temp_output_10_0_g174772 + 0.0001 ) ) ) * Wetness_ProjMask790_g174756 );
				float3 lerpResult918_g174756 = lerp( Visual_Albedo127_g174756 , ( Visual_Albedo127_g174756 * (_WetnessWaterColor).rgb ) , Water_Mask760_g174756);
				#ifdef TVE_WETNESS_WATER
				float3 staticSwitch946_g174756 = lerpResult918_g174756;
				#else
				float3 staticSwitch946_g174756 = Visual_Albedo127_g174756;
				#endif
				float3 lerpResult768_g174756 = lerp( staticSwitch946_g174756 , ( staticSwitch946_g174756 * staticSwitch946_g174756 ) , _WetnessContrastValue);
				float3 lerpResult651_g174756 = lerp( Visual_Albedo127_g174756 , lerpResult768_g174756 , Wetness_Mask866_g174756);
				#ifdef TVE_WETNESS
				float3 staticSwitch577_g174756 = lerpResult651_g174756;
				#else
				float3 staticSwitch577_g174756 = Visual_Albedo127_g174756;
				#endif
				half3 Final_Albedo493_g174756 = staticSwitch577_g174756;
				float3 In_Albedo3_g174758 = Final_Albedo493_g174756;
				float3 In_AlbedoRaw3_g174758 = Out_AlbedoRaw4_g174757;
				half2 Visual_Normal535_g174756 = Out_NormalTS4_g174757;
				float lerpResult877_g174756 = lerp( 1.0 , 0.0 , ( Water_Mask760_g174756 * Water_Mask760_g174756 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch957_g174756 = ( Visual_Normal535_g174756 * lerpResult877_g174756 );
				#else
				float2 staticSwitch957_g174756 = Visual_Normal535_g174756;
				#endif
				float2 temp_cast_50 = (0.0).xx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174768) = _WetnessDropsTexRT;
				SamplerState Sampler238_g174768 = sampler_Linear_Repeat_Aniso8;
				float4 appendResult924_g174756 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g174768 = appendResult924_g174756;
				half4 Coords238_g174768 = temp_output_37_0_g174768;
				half3 Model_PositionWO602_g174756 = Out_PositionWO15_g174770;
				float3 temp_output_279_0_g174768 = Model_PositionWO602_g174756;
				half3 WorldPosition238_g174768 = temp_output_279_0_g174768;
				half4 localSamplePlanar2D238_g174768 = SamplePlanar2D( Texture238_g174768 , Sampler238_g174768 , Coords238_g174768 , WorldPosition238_g174768 );
				float4 temp_output_1010_0_g174756 = localSamplePlanar2D238_g174768;
				half2 Rain_DropsNormal919_g174756 = (temp_output_1010_0_g174756).zw;
				float2 temp_output_903_0_g174756 = (Rain_DropsNormal919_g174756*2.0 + -1.0);
				half2 Rain_RingsNormal713_g174756 = (temp_output_1010_0_g174756).xy;
				float2 lerpResult904_g174756 = lerp( temp_output_903_0_g174756 , (Rain_RingsNormal713_g174756*2.0 + -1.0) , ( Water_Mask760_g174756 * Water_Mask760_g174756 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch960_g174756 = lerpResult904_g174756;
				#else
				float2 staticSwitch960_g174756 = temp_output_903_0_g174756;
				#endif
				half2 Rain_Drops1002_g174756 = ( staticSwitch960_g174756 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
				half3 Model_PositionWS823_g174756 = Out_PositionWS15_g174770;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch949_g174756 = ( (Global_AtmoParams516_g174756).w * TVE_IsEnabled );
				#else
				float staticSwitch949_g174756 = 1.0;
				#endif
				half Global_Rain955_g174756 = staticSwitch949_g174756;
				half Rain_Value1067_g174756 = Global_Rain955_g174756;
				float4 break1097_g174756 = Model_VertexData1030_g174756;
				float4 break33_g174783 = _wetness_drops_vert_mode;
				float temp_output_30_0_g174783 = ( break1097_g174756.x * break33_g174783.x );
				float temp_output_29_0_g174783 = ( break1097_g174756.y * break33_g174783.y );
				float temp_output_31_0_g174783 = ( break1097_g174756.z * break33_g174783.z );
				float temp_output_28_0_g174783 = ( temp_output_30_0_g174783 + temp_output_29_0_g174783 + temp_output_31_0_g174783 + ( break1097_g174756.w * break33_g174783.w ) );
				float clampResult17_g174781 = clamp( temp_output_28_0_g174783 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174782 = _WetnessDropsMeshRemap.x;
				float temp_output_10_0_g174782 = ( _WetnessDropsMeshRemap.y - temp_output_7_0_g174782 );
				float lerpResult1100_g174756 = lerp( 1.0 , saturate( ( ( clampResult17_g174781 - temp_output_7_0_g174782 ) / ( temp_output_10_0_g174782 + 0.0001 ) ) ) , _WetnessDropsMeshValue);
				float temp_output_6_0_g174784 = lerpResult1100_g174756;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174784 = ( temp_output_6_0_g174784 + ( _WetnessDropsMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174784 = temp_output_6_0_g174784;
				#endif
				#ifdef TVE_WETNESS_VERT
				float staticSwitch1115_g174756 = staticSwitch14_g174784;
				#else
				float staticSwitch1115_g174756 = 1.0;
				#endif
				half Rain_VertMask1108_g174756 = staticSwitch1115_g174756;
				half Rain_Mask999_g174756 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g174756 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g174756 * Rain_VertMask1108_g174756 );
				half2 Normal_Planar45_g174767 = ( Rain_Drops1002_g174756 * Rain_Mask999_g174756 * Wetness_ProjMask790_g174756 );
				float2 break71_g174767 = Normal_Planar45_g174767;
				float3 appendResult72_g174767 = (float3(break71_g174767.x , 0.0 , break71_g174767.y));
				half2 Wetness_Normal526_g174756 = (mul( ase_worldToTangent, appendResult72_g174767 )).xy;
				#ifdef TVE_WETNESS_DROPS
				float2 staticSwitch583_g174756 = Wetness_Normal526_g174756;
				#else
				float2 staticSwitch583_g174756 = temp_cast_50;
				#endif
				#ifdef TVE_WETNESS
				float2 staticSwitch774_g174756 = ( staticSwitch957_g174756 + staticSwitch583_g174756 );
				#else
				float2 staticSwitch774_g174756 = Visual_Normal535_g174756;
				#endif
				half2 Final_Normal499_g174756 = staticSwitch774_g174756;
				float2 In_NormalTS3_g174758 = Final_Normal499_g174756;
				float3 In_NormalWS3_g174758 = Out_NormalWS4_g174757;
				float4 break658_g174756 = Visual_Masks536_g174756;
				float temp_output_935_0_g174756 = ( Wetness_Mask866_g174756 * _WetnessSmoothnessValue );
				float lerpResult941_g174756 = lerp( temp_output_935_0_g174756 , 2.0 , Water_Mask760_g174756);
				#ifdef TVE_WETNESS_WATER
				float staticSwitch959_g174756 = lerpResult941_g174756;
				#else
				float staticSwitch959_g174756 = temp_output_935_0_g174756;
				#endif
				float4 appendResult661_g174756 = (float4(break658_g174756.x , break658_g174756.y , break658_g174756.z , saturate( ( break658_g174756.w + staticSwitch959_g174756 ) )));
				#ifdef TVE_WETNESS
				float4 staticSwitch586_g174756 = appendResult661_g174756;
				#else
				float4 staticSwitch586_g174756 = Visual_Masks536_g174756;
				#endif
				half4 Final_Masks482_g174756 = staticSwitch586_g174756;
				float4 In_Shader3_g174758 = Final_Masks482_g174756;
				float4 In_Emissive3_g174758 = Out_Emissive4_g174757;
				float In_Grayscale3_g174758 = Out_Grayscale4_g174757;
				float In_Luminosity3_g174758 = Out_Luminosity4_g174757;
				float In_MultiMask3_g174758 = Out_MultiMask4_g174757;
				float In_AlphaClip3_g174758 = Out_AlphaClip4_g174757;
				float In_AlphaFade3_g174758 = Out_AlphaFade4_g174757;
				float3 In_Translucency3_g174758 = Out_Translucency4_g174757;
				float In_Transmission3_g174758 = Out_Transmission4_g174757;
				float In_Thickness3_g174758 = Out_Thickness4_g174757;
				float In_Diffusion3_g174758 = Out_Diffusion4_g174757;
				Data3_g174758.Dummy = In_Dummy3_g174758;
				Data3_g174758.Albedo = In_Albedo3_g174758;
				Data3_g174758.AlbedoRaw = In_AlbedoRaw3_g174758;
				Data3_g174758.NormalTS = In_NormalTS3_g174758;
				Data3_g174758.NormalWS = In_NormalWS3_g174758;
				Data3_g174758.Shader = In_Shader3_g174758;
				Data3_g174758.Emissive= In_Emissive3_g174758;
				Data3_g174758.MultiMask = In_MultiMask3_g174758;
				Data3_g174758.Grayscale = In_Grayscale3_g174758;
				Data3_g174758.Luminosity = In_Luminosity3_g174758;
				Data3_g174758.AlphaClip = In_AlphaClip3_g174758;
				Data3_g174758.AlphaFade = In_AlphaFade3_g174758;
				Data3_g174758.Translucency = In_Translucency3_g174758;
				Data3_g174758.Transmission = In_Transmission3_g174758;
				Data3_g174758.Thickness = In_Thickness3_g174758;
				Data3_g174758.Diffusion = In_Diffusion3_g174758;
				TVEVisualData Data4_g174796 = Data3_g174758;
				float Out_Dummy4_g174796 = 0;
				float3 Out_Albedo4_g174796 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174796 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174796 = float2( 0,0 );
				float3 Out_NormalWS4_g174796 = float3( 0,0,0 );
				float4 Out_Shader4_g174796 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174796 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174796 = 0;
				float Out_Grayscale4_g174796 = 0;
				float Out_Luminosity4_g174796 = 0;
				float Out_AlphaClip4_g174796 = 0;
				float Out_AlphaFade4_g174796 = 0;
				float3 Out_Translucency4_g174796 = float3( 0,0,0 );
				float Out_Transmission4_g174796 = 0;
				float Out_Thickness4_g174796 = 0;
				float Out_Diffusion4_g174796 = 0;
				Out_Dummy4_g174796 = Data4_g174796.Dummy;
				Out_Albedo4_g174796 = Data4_g174796.Albedo;
				Out_AlbedoRaw4_g174796 = Data4_g174796.AlbedoRaw;
				Out_NormalTS4_g174796 = Data4_g174796.NormalTS;
				Out_NormalWS4_g174796 = Data4_g174796.NormalWS;
				Out_Shader4_g174796 = Data4_g174796.Shader;
				Out_Emissive4_g174796= Data4_g174796.Emissive;
				Out_MultiMask4_g174796 = Data4_g174796.MultiMask;
				Out_Grayscale4_g174796 = Data4_g174796.Grayscale;
				Out_Luminosity4_g174796= Data4_g174796.Luminosity;
				Out_AlphaClip4_g174796 = Data4_g174796.AlphaClip;
				Out_AlphaFade4_g174796 = Data4_g174796.AlphaFade;
				Out_Translucency4_g174796 = Data4_g174796.Translucency;
				Out_Transmission4_g174796 = Data4_g174796.Transmission;
				Out_Thickness4_g174796 = Data4_g174796.Thickness;
				Out_Diffusion4_g174796 = Data4_g174796.Diffusion;
				float3 In_Albedo3_g174786 = Out_Albedo4_g174796;
				float3 In_AlbedoRaw3_g174786 = Out_AlbedoRaw4_g174796;
				float2 In_NormalTS3_g174786 = Out_NormalTS4_g174796;
				float3 In_NormalWS3_g174786 = Out_NormalWS4_g174796;
				float4 In_Shader3_g174786 = Out_Shader4_g174796;
				float4 In_Emissive3_g174786 = Out_Emissive4_g174796;
				float In_Grayscale3_g174786 = Out_Grayscale4_g174796;
				float In_Luminosity3_g174786 = Out_Luminosity4_g174796;
				float temp_output_836_11_g174785 = Out_MultiMask4_g174796;
				float In_MultiMask3_g174786 = temp_output_836_11_g174785;
				half Visual_AlphaClip667_g174785 = Out_AlphaClip4_g174796;
				TVEGlobalData Data15_g174795 = Data204_g173897;
				float Out_Dummy15_g174795 = 0;
				float4 Out_CoatParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174795 = float4( 0,0,0,0 );
				Out_Dummy15_g174795 = Data15_g174795.Dummy;
				Out_CoatParams15_g174795 = Data15_g174795.CoatParams;
				Out_PaintParams15_g174795 = Data15_g174795.PaintParams;
				Out_GlowParams15_g174795 = Data15_g174795.GlowParams;
				Out_AtmoParams15_g174795= Data15_g174795.AtmoParams;
				Out_FadeParams15_g174795= Data15_g174795.FadeParams;
				Out_FormParams15_g174795 = Data15_g174795.FormParams;
				Out_LandParams15_g174795 = Data15_g174795.LandParams;
				Out_WindParams15_g174795 = Data15_g174795.WindParams;
				Out_PushParams15_g174795 = Data15_g174795.PushParams;
				half4 Global_FadeParams516_g174785 = Out_FadeParams15_g174795;
				#ifdef TVE_CUTOUT_ELEMENT
				float staticSwitch663_g174785 = saturate( (Global_FadeParams516_g174785).w );
				#else
				float staticSwitch663_g174785 = 1.0;
				#endif
				half Local_GlobalMask429_g174785 = staticSwitch663_g174785;
				float lerpResult811_g174785 = lerp( 1.0 , Visual_AlphaClip667_g174785 , _CutoutAlphaValue);
				half Local_AlphaMask814_g174785 = lerpResult811_g174785;
				TVEModelData Data15_g174797 = Data16_g164566;
				float Out_Dummy15_g174797 = 0;
				float3 Out_PositionWS15_g174797 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174797 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174797 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174797 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174797 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174797 = float3( 0,0,0 );
				float4 Out_VertexData15_g174797 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174797 = float4( 0,0,0,0 );
				Out_Dummy15_g174797 = Data15_g174797.Dummy;
				Out_PositionWS15_g174797 = Data15_g174797.PositionWS;
				Out_PositionWO15_g174797 = Data15_g174797.PositionWO;
				Out_PivotWS15_g174797 = Data15_g174797.PivotWS;
				Out_PivotWO15_g174797 = Data15_g174797.PivotWO;
				Out_NormalWS15_g174797 = Data15_g174797.NormalWS;
				Out_ViewDirWS15_g174797 = Data15_g174797.ViewDirWS;
				Out_VertexData15_g174797 = Data15_g174797.VertexData;
				Out_BoundsData15_g174797 = Data15_g174797.BoundsData;
				half3 Model_PositionWO602_g174785 = Out_PositionWO15_g174797;
				float4 tex3DNode60_g174789 = SAMPLE_TEXTURE3D( _NoiseTex3D, sampler_Linear_Repeat, ( Model_PositionWO602_g174785 * ( _CutoutNoiseTillingValue * 0.01 ) ) );
				float lerpResult673_g174785 = lerp( 1.0 , tex3DNode60_g174789.r , _CutoutNoiseValue);
				half Local_NoiseMask678_g174785 = lerpResult673_g174785;
				half4 Model_VertexMasks752_g174785 = Out_VertexData15_g174797;
				float4 break755_g174785 = Model_VertexMasks752_g174785;
				float4 break33_g174787 = _cutout_vert_mode;
				float temp_output_30_0_g174787 = ( break755_g174785.x * break33_g174787.x );
				float temp_output_29_0_g174787 = ( break755_g174785.y * break33_g174787.y );
				float temp_output_31_0_g174787 = ( break755_g174785.z * break33_g174787.z );
				float temp_output_28_0_g174787 = ( temp_output_30_0_g174787 + temp_output_29_0_g174787 + temp_output_31_0_g174787 + ( break755_g174785.w * break33_g174787.w ) );
				float clampResult17_g174788 = clamp( temp_output_28_0_g174787 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174791 = _CutoutMeshRemap.x;
				float temp_output_10_0_g174791 = ( _CutoutMeshRemap.y - temp_output_7_0_g174791 );
				float lerpResult820_g174785 = lerp( 1.0 , saturate( ( ( clampResult17_g174788 - temp_output_7_0_g174791 ) / ( temp_output_10_0_g174791 + 0.0001 ) ) ) , _CutoutMeshValue);
				float temp_output_6_0_g174792 = lerpResult820_g174785;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174792 = ( temp_output_6_0_g174792 + ( _CutoutMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174792 = temp_output_6_0_g174792;
				#endif
				float temp_output_801_0_g174785 = staticSwitch14_g174792;
				half Local_VertMask766_g174785 = temp_output_801_0_g174785;
				half Visual_MultiMask671_g174785 = temp_output_836_11_g174785;
				float lerpResult683_g174785 = lerp( 1.0 , Visual_MultiMask671_g174785 , _CutoutMultiValue);
				half Local_MultiMask685_g174785 = lerpResult683_g174785;
				float lerpResult728_g174785 = lerp( Visual_AlphaClip667_g174785 , min( Visual_AlphaClip667_g174785 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g174785 ) - ( Local_AlphaMask814_g174785 * Local_NoiseMask678_g174785 * Local_VertMask766_g174785 ) ) ) ) , Local_MultiMask685_g174785);
				half Local_AlphaClip784_g174785 = lerpResult728_g174785;
				#ifdef TVE_CUTOUT
				float staticSwitch577_g174785 = Local_AlphaClip784_g174785;
				#else
				float staticSwitch577_g174785 = Visual_AlphaClip667_g174785;
				#endif
				half Final_AlphaClip795_g174785 = staticSwitch577_g174785;
				float In_AlphaClip3_g174786 = Final_AlphaClip795_g174785;
				float In_AlphaFade3_g174786 = Out_AlphaFade4_g174796;
				float3 In_Translucency3_g174786 = Out_Translucency4_g174796;
				float In_Transmission3_g174786 = Out_Transmission4_g174796;
				float In_Thickness3_g174786 = Out_Thickness4_g174796;
				float In_Diffusion3_g174786 = Out_Diffusion4_g174796;
				Data3_g174786.Dummy = In_Dummy3_g174786;
				Data3_g174786.Albedo = In_Albedo3_g174786;
				Data3_g174786.AlbedoRaw = In_AlbedoRaw3_g174786;
				Data3_g174786.NormalTS = In_NormalTS3_g174786;
				Data3_g174786.NormalWS = In_NormalWS3_g174786;
				Data3_g174786.Shader = In_Shader3_g174786;
				Data3_g174786.Emissive= In_Emissive3_g174786;
				Data3_g174786.MultiMask = In_MultiMask3_g174786;
				Data3_g174786.Grayscale = In_Grayscale3_g174786;
				Data3_g174786.Luminosity = In_Luminosity3_g174786;
				Data3_g174786.AlphaClip = In_AlphaClip3_g174786;
				Data3_g174786.AlphaFade = In_AlphaFade3_g174786;
				Data3_g174786.Translucency = In_Translucency3_g174786;
				Data3_g174786.Transmission = In_Transmission3_g174786;
				Data3_g174786.Thickness = In_Thickness3_g174786;
				Data3_g174786.Diffusion = In_Diffusion3_g174786;
				TVEVisualData Data4_g174807 = Data3_g174786;
				float Out_Dummy4_g174807 = 0;
				float3 Out_Albedo4_g174807 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174807 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174807 = float2( 0,0 );
				float3 Out_NormalWS4_g174807 = float3( 0,0,0 );
				float4 Out_Shader4_g174807 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174807 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174807 = 0;
				float Out_Grayscale4_g174807 = 0;
				float Out_Luminosity4_g174807 = 0;
				float Out_AlphaClip4_g174807 = 0;
				float Out_AlphaFade4_g174807 = 0;
				float3 Out_Translucency4_g174807 = float3( 0,0,0 );
				float Out_Transmission4_g174807 = 0;
				float Out_Thickness4_g174807 = 0;
				float Out_Diffusion4_g174807 = 0;
				Out_Dummy4_g174807 = Data4_g174807.Dummy;
				Out_Albedo4_g174807 = Data4_g174807.Albedo;
				Out_AlbedoRaw4_g174807 = Data4_g174807.AlbedoRaw;
				Out_NormalTS4_g174807 = Data4_g174807.NormalTS;
				Out_NormalWS4_g174807 = Data4_g174807.NormalWS;
				Out_Shader4_g174807 = Data4_g174807.Shader;
				Out_Emissive4_g174807= Data4_g174807.Emissive;
				Out_MultiMask4_g174807 = Data4_g174807.MultiMask;
				Out_Grayscale4_g174807 = Data4_g174807.Grayscale;
				Out_Luminosity4_g174807= Data4_g174807.Luminosity;
				Out_AlphaClip4_g174807 = Data4_g174807.AlphaClip;
				Out_AlphaFade4_g174807 = Data4_g174807.AlphaFade;
				Out_Translucency4_g174807 = Data4_g174807.Translucency;
				Out_Transmission4_g174807 = Data4_g174807.Transmission;
				Out_Thickness4_g174807 = Data4_g174807.Thickness;
				Out_Diffusion4_g174807 = Data4_g174807.Diffusion;
				float3 In_Albedo3_g174808 = Out_Albedo4_g174807;
				float3 In_AlbedoRaw3_g174808 = Out_AlbedoRaw4_g174807;
				float2 In_NormalTS3_g174808 = Out_NormalTS4_g174807;
				float3 In_NormalWS3_g174808 = Out_NormalWS4_g174807;
				float4 In_Shader3_g174808 = Out_Shader4_g174807;
				float4 In_Emissive3_g174808 = Out_Emissive4_g174807;
				float In_Grayscale3_g174808 = Out_Grayscale4_g174807;
				float In_Luminosity3_g174808 = Out_Luminosity4_g174807;
				float temp_output_821_11_g174805 = Out_MultiMask4_g174807;
				float In_MultiMask3_g174808 = temp_output_821_11_g174805;
				half Visual_AlphaClip754_g174805 = Out_AlphaClip4_g174807;
				half Dither_Constant768_g174805 = _DitherConstantValue;
				float temp_output_7_0_g174815 = _DitherProximityMaxValue;
				float temp_output_10_0_g174815 = ( _DitherProximityMinValue - temp_output_7_0_g174815 );
				half Dither_Proximity767_g174805 = ( saturate( ( ( distance( worldPos , _WorldSpaceCameraPos ) - temp_output_7_0_g174815 ) / ( temp_output_10_0_g174815 + 0.0001 ) ) ) * _DitherProximityValue );
				TVEModelData Data15_g174814 = Data16_g164566;
				float Out_Dummy15_g174814 = 0;
				float3 Out_PositionWS15_g174814 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174814 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174814 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174814 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174814 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174814 = float3( 0,0,0 );
				float4 Out_VertexData15_g174814 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174814 = float4( 0,0,0,0 );
				Out_Dummy15_g174814 = Data15_g174814.Dummy;
				Out_PositionWS15_g174814 = Data15_g174814.PositionWS;
				Out_PositionWO15_g174814 = Data15_g174814.PositionWO;
				Out_PivotWS15_g174814 = Data15_g174814.PivotWS;
				Out_PivotWO15_g174814 = Data15_g174814.PivotWO;
				Out_NormalWS15_g174814 = Data15_g174814.NormalWS;
				Out_ViewDirWS15_g174814 = Data15_g174814.ViewDirWS;
				Out_VertexData15_g174814 = Data15_g174814.VertexData;
				Out_BoundsData15_g174814 = Data15_g174814.BoundsData;
				half3 Model_PositionWS776_g174805 = Out_PositionWS15_g174814;
				float temp_output_7_0_g174813 = _DitherDistanceMinValue;
				float temp_output_10_0_g174813 = ( _DitherDistanceMaxValue - temp_output_7_0_g174813 );
				half Dither_Distance856_g174805 = ( saturate( ( ( distance( Model_PositionWS776_g174805 , _WorldSpaceCameraPos ) - temp_output_7_0_g174813 ) / ( temp_output_10_0_g174813 + 0.0001 ) ) ) * _DitherDistanceValue );
				half3 Model_ViewDirWS845_g174805 = Out_ViewDirWS15_g174814;
				float3 normalizeResult792_g174805 = normalize( cross( ddy( worldPos ) , ddx( worldPos ) ) );
				float dotResult778_g174805 = dot( Model_ViewDirWS845_g174805 , normalizeResult792_g174805 );
				half Dither_Glancing784_g174805 = ( saturate( ( ( 1.0 - abs( dotResult778_g174805 ) ) * _DitherGlancingAngleValue ) ) * _DitherGlancingValue );
				half Dither_Value429_g174805 = max( max( max( Dither_Constant768_g174805 , Dither_Proximity767_g174805 ) , Dither_Distance856_g174805 ) , Dither_Glancing784_g174805 );
				half3 Model_PositionWO602_g174805 = Out_PositionWO15_g174814;
				float4 tex3DNode60_g174811 = SAMPLE_TEXTURE3D( _NoiseTex3D, sampler_Linear_Repeat, ( ( Model_PositionWO602_g174805 * 20.0 ) * ( _DitherNoiseTillingValue * 0.01 ) ) );
				float temp_output_809_0_g174805 = tex3DNode60_g174811.r;
				half Local_MaskNoise678_g174805 = temp_output_809_0_g174805;
				half Visual_MultiMask671_g174805 = temp_output_821_11_g174805;
				float lerpResult683_g174805 = lerp( 1.0 , Visual_MultiMask671_g174805 , _DitherMultiValue);
				half Local_MaskMulti685_g174805 = lerpResult683_g174805;
				half Custom_Mask826_g174805 = 1.0;
				float lerpResult728_g174805 = lerp( Visual_AlphaClip754_g174805 , min( Visual_AlphaClip754_g174805 , ( -0.001 - ( Dither_Value429_g174805 - Local_MaskNoise678_g174805 ) ) ) , ( Local_MaskMulti685_g174805 * Custom_Mask826_g174805 ));
				half Local_AlphaClip834_g174805 = lerpResult728_g174805;
				#ifdef TVE_DITHER
				float staticSwitch577_g174805 = Local_AlphaClip834_g174805;
				#else
				float staticSwitch577_g174805 = Visual_AlphaClip754_g174805;
				#endif
				half Final_AlphaClip493_g174805 = staticSwitch577_g174805;
				float In_AlphaClip3_g174808 = Final_AlphaClip493_g174805;
				float In_AlphaFade3_g174808 = Out_AlphaFade4_g174807;
				float3 In_Translucency3_g174808 = Out_Translucency4_g174807;
				float In_Transmission3_g174808 = Out_Transmission4_g174807;
				float In_Thickness3_g174808 = Out_Thickness4_g174807;
				float In_Diffusion3_g174808 = Out_Diffusion4_g174807;
				Data3_g174808.Dummy = In_Dummy3_g174808;
				Data3_g174808.Albedo = In_Albedo3_g174808;
				Data3_g174808.AlbedoRaw = In_AlbedoRaw3_g174808;
				Data3_g174808.NormalTS = In_NormalTS3_g174808;
				Data3_g174808.NormalWS = In_NormalWS3_g174808;
				Data3_g174808.Shader = In_Shader3_g174808;
				Data3_g174808.Emissive= In_Emissive3_g174808;
				Data3_g174808.MultiMask = In_MultiMask3_g174808;
				Data3_g174808.Grayscale = In_Grayscale3_g174808;
				Data3_g174808.Luminosity = In_Luminosity3_g174808;
				Data3_g174808.AlphaClip = In_AlphaClip3_g174808;
				Data3_g174808.AlphaFade = In_AlphaFade3_g174808;
				Data3_g174808.Translucency = In_Translucency3_g174808;
				Data3_g174808.Transmission = In_Transmission3_g174808;
				Data3_g174808.Thickness = In_Thickness3_g174808;
				Data3_g174808.Diffusion = In_Diffusion3_g174808;
				TVEVisualData Data4_g174835 = Data3_g174808;
				float Out_Dummy4_g174835 = 0;
				float3 Out_Albedo4_g174835 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174835 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174835 = float2( 0,0 );
				float3 Out_NormalWS4_g174835 = float3( 0,0,0 );
				float4 Out_Shader4_g174835 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174835 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174835 = 0;
				float Out_Grayscale4_g174835 = 0;
				float Out_Luminosity4_g174835 = 0;
				float Out_AlphaClip4_g174835 = 0;
				float Out_AlphaFade4_g174835 = 0;
				float3 Out_Translucency4_g174835 = float3( 0,0,0 );
				float Out_Transmission4_g174835 = 0;
				float Out_Thickness4_g174835 = 0;
				float Out_Diffusion4_g174835 = 0;
				Out_Dummy4_g174835 = Data4_g174835.Dummy;
				Out_Albedo4_g174835 = Data4_g174835.Albedo;
				Out_AlbedoRaw4_g174835 = Data4_g174835.AlbedoRaw;
				Out_NormalTS4_g174835 = Data4_g174835.NormalTS;
				Out_NormalWS4_g174835 = Data4_g174835.NormalWS;
				Out_Shader4_g174835 = Data4_g174835.Shader;
				Out_Emissive4_g174835= Data4_g174835.Emissive;
				Out_MultiMask4_g174835 = Data4_g174835.MultiMask;
				Out_Grayscale4_g174835 = Data4_g174835.Grayscale;
				Out_Luminosity4_g174835= Data4_g174835.Luminosity;
				Out_AlphaClip4_g174835 = Data4_g174835.AlphaClip;
				Out_AlphaFade4_g174835 = Data4_g174835.AlphaFade;
				Out_Translucency4_g174835 = Data4_g174835.Translucency;
				Out_Transmission4_g174835 = Data4_g174835.Transmission;
				Out_Thickness4_g174835 = Data4_g174835.Thickness;
				Out_Diffusion4_g174835 = Data4_g174835.Diffusion;
				float3 temp_output_297_0_g174826 = Out_Albedo4_g174835;
				float3 In_Albedo3_g174836 = temp_output_297_0_g174826;
				float3 temp_output_297_23_g174826 = Out_AlbedoRaw4_g174835;
				float3 In_AlbedoRaw3_g174836 = temp_output_297_23_g174826;
				float2 In_NormalTS3_g174836 = Out_NormalTS4_g174835;
				float3 In_NormalWS3_g174836 = Out_NormalWS4_g174835;
				float4 In_Shader3_g174836 = Out_Shader4_g174835;
				float4 temp_cast_51 = (0.0).xxxx;
				TVEModelData Data15_g174839 = Data16_g164566;
				float Out_Dummy15_g174839 = 0;
				float3 Out_PositionWS15_g174839 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174839 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174839 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174839 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174839 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174839 = float3( 0,0,0 );
				float4 Out_VertexData15_g174839 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174839 = float4( 0,0,0,0 );
				Out_Dummy15_g174839 = Data15_g174839.Dummy;
				Out_PositionWS15_g174839 = Data15_g174839.PositionWS;
				Out_PositionWO15_g174839 = Data15_g174839.PositionWO;
				Out_PivotWS15_g174839 = Data15_g174839.PivotWS;
				Out_PivotWO15_g174839 = Data15_g174839.PivotWO;
				Out_NormalWS15_g174839 = Data15_g174839.NormalWS;
				Out_ViewDirWS15_g174839 = Data15_g174839.ViewDirWS;
				Out_VertexData15_g174839 = Data15_g174839.VertexData;
				Out_BoundsData15_g174839 = Data15_g174839.BoundsData;
				half4 Model_VertexMasks216_g174826 = Out_VertexData15_g174839;
				float4 break251_g174826 = Model_VertexMasks216_g174826;
				float4 break33_g174830 = _emissive_vert_mode;
				float temp_output_30_0_g174830 = ( break251_g174826.x * break33_g174830.x );
				float temp_output_29_0_g174830 = ( break251_g174826.y * break33_g174830.y );
				float temp_output_31_0_g174830 = ( break251_g174826.z * break33_g174830.z );
				float temp_output_28_0_g174830 = ( temp_output_30_0_g174830 + temp_output_29_0_g174830 + temp_output_31_0_g174830 + ( break251_g174826.w * break33_g174830.w ) );
				float clampResult17_g174829 = clamp( temp_output_28_0_g174830 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174833 = _EmissiveMeshRemap.x;
				float temp_output_10_0_g174833 = ( _EmissiveMeshRemap.y - temp_output_7_0_g174833 );
				float lerpResult303_g174826 = lerp( 1.0 , saturate( ( ( clampResult17_g174829 - temp_output_7_0_g174833 ) / ( temp_output_10_0_g174833 + 0.0001 ) ) ) , _EmissiveMeshValue);
				float temp_output_6_0_g174838 = lerpResult303_g174826;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174838 = ( temp_output_6_0_g174838 + ( _EmissiveMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174838 = temp_output_6_0_g174838;
				#endif
				float temp_output_263_0_g174826 = staticSwitch14_g174838;
				half Emissive_MeshMask221_g174826 = temp_output_263_0_g174826;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174828) = _EmissiveMaskTex;
				SamplerState Sampler276_g174828 = sampler_Linear_Repeat;
				float4 temp_output_6_0_g174834 = _emissive_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174834 = ( temp_output_6_0_g174834 + ( ( _EmissiveSampleMode + _EmissiveCoordMode + _EmissiveCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174834 = temp_output_6_0_g174834;
				#endif
				half4 Emissive_Coords167_g174826 = staticSwitch14_g174834;
				float4 temp_output_37_0_g174828 = Emissive_Coords167_g174826;
				half4 Coords276_g174828 = temp_output_37_0_g174828;
				half2 TexCoord276_g174828 = IN.ase_texcoord9.xy;
				half4 localSampleMain276_g174828 = SampleMain( Texture276_g174828 , Sampler276_g174828 , Coords276_g174828 , TexCoord276_g174828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174828) = _EmissiveMaskTex;
				SamplerState Sampler275_g174828 = sampler_Linear_Repeat;
				half4 Coords275_g174828 = temp_output_37_0_g174828;
				half2 TexCoord275_g174828 = IN.ase_texcoord10.xy;
				half4 localSampleExtra275_g174828 = SampleExtra( Texture275_g174828 , Sampler275_g174828 , Coords275_g174828 , TexCoord275_g174828 );
				#if defined( TVE_EMISSIVE_SAMPLE_MAIN_UV )
				float4 staticSwitch176_g174826 = localSampleMain276_g174828;
				#elif defined( TVE_EMISSIVE_SAMPLE_EXTRA_UV )
				float4 staticSwitch176_g174826 = localSampleExtra275_g174828;
				#else
				float4 staticSwitch176_g174826 = localSampleMain276_g174828;
				#endif
				half4 Emissive_MaskTex201_g174826 = staticSwitch176_g174826;
				float clampResult17_g174832 = clamp( (Emissive_MaskTex201_g174826).x , 0.0001 , 0.9999 );
				float temp_output_7_0_g174831 = _EmissiveMaskRemap.x;
				float temp_output_10_0_g174831 = ( _EmissiveMaskRemap.y - temp_output_7_0_g174831 );
				float lerpResult302_g174826 = lerp( 1.0 , saturate( ( ( clampResult17_g174832 - temp_output_7_0_g174831 ) / ( temp_output_10_0_g174831 + 0.0001 ) ) ) , _EmissiveMaskValue);
				half Emissive_Mask103_g174826 = lerpResult302_g174826;
				float temp_output_279_0_g174826 = ( Emissive_MeshMask221_g174826 * Emissive_Mask103_g174826 );
				float3 appendResult293_g174826 = (float3(temp_output_279_0_g174826 , temp_output_279_0_g174826 , temp_output_279_0_g174826));
				half3 Local_EmissiveColor278_g174826 = appendResult293_g174826;
				half4 Visual_Emissive255_g174826 = Out_Emissive4_g174835;
				float3 lerpResult285_g174826 = lerp( Local_EmissiveColor278_g174826 , (Visual_Emissive255_g174826).xyz , (Visual_Emissive255_g174826).w);
				float3 temp_cast_52 = (1.0).xxx;
				TVEGlobalData Data15_g174827 = Data204_g173897;
				float Out_Dummy15_g174827 = 0;
				float4 Out_CoatParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174827 = float4( 0,0,0,0 );
				Out_Dummy15_g174827 = Data15_g174827.Dummy;
				Out_CoatParams15_g174827 = Data15_g174827.CoatParams;
				Out_PaintParams15_g174827 = Data15_g174827.PaintParams;
				Out_GlowParams15_g174827 = Data15_g174827.GlowParams;
				Out_AtmoParams15_g174827= Data15_g174827.AtmoParams;
				Out_FadeParams15_g174827= Data15_g174827.FadeParams;
				Out_FormParams15_g174827 = Data15_g174827.FormParams;
				Out_LandParams15_g174827 = Data15_g174827.LandParams;
				Out_WindParams15_g174827 = Data15_g174827.WindParams;
				Out_PushParams15_g174827 = Data15_g174827.PushParams;
				half4 Global_GlowParams179_g174826 = Out_GlowParams15_g174827;
				float3 lerpResult299_g174826 = lerp( float3( 1,1,1 ) , (Global_GlowParams179_g174826).xyz , TVE_IsEnabled);
				#ifdef TVE_EMISSIVE_ELEMENT
				float3 staticSwitch228_g174826 = lerpResult299_g174826;
				#else
				float3 staticSwitch228_g174826 = temp_cast_52;
				#endif
				half3 Emissive_GlobalMask248_g174826 = staticSwitch228_g174826;
				half3 Visual_AlbedoRaw306_g174826 = temp_output_297_23_g174826;
				float3 lerpResult307_g174826 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g174826 , _EmissiveColorMode);
				half3 Local_EmissiveValue88_g174826 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g174826 * lerpResult307_g174826 );
				half3 Emissive_Blend260_g174826 = ( lerpResult285_g174826 * Local_EmissiveValue88_g174826 );
				float3 temp_output_3_0_g174840 = Emissive_Blend260_g174826;
				float temp_output_15_0_g174840 = _emissive_power_value;
				float3 temp_output_23_0_g174840 = ( temp_output_3_0_g174840 * temp_output_15_0_g174840 );
				half Local_EmissiveMask294_g174826 = temp_output_279_0_g174826;
				float4 appendResult295_g174826 = (float4(temp_output_23_0_g174840 , Local_EmissiveMask294_g174826));
				#ifdef TVE_EMISSIVE
				float4 staticSwitch129_g174826 = appendResult295_g174826;
				#else
				float4 staticSwitch129_g174826 = temp_cast_51;
				#endif
				half4 Final_Emissive184_g174826 = staticSwitch129_g174826;
				float4 In_Emissive3_g174836 = Final_Emissive184_g174826;
				float In_Grayscale3_g174836 = Out_Grayscale4_g174835;
				float In_Luminosity3_g174836 = Out_Luminosity4_g174835;
				float temp_output_297_11_g174826 = Out_MultiMask4_g174835;
				float In_MultiMask3_g174836 = temp_output_297_11_g174826;
				float In_AlphaClip3_g174836 = Out_AlphaClip4_g174835;
				float In_AlphaFade3_g174836 = Out_AlphaFade4_g174835;
				float3 In_Translucency3_g174836 = Out_Translucency4_g174835;
				float In_Transmission3_g174836 = Out_Transmission4_g174835;
				float In_Thickness3_g174836 = Out_Thickness4_g174835;
				float In_Diffusion3_g174836 = Out_Diffusion4_g174835;
				Data3_g174836.Dummy = In_Dummy3_g174836;
				Data3_g174836.Albedo = In_Albedo3_g174836;
				Data3_g174836.AlbedoRaw = In_AlbedoRaw3_g174836;
				Data3_g174836.NormalTS = In_NormalTS3_g174836;
				Data3_g174836.NormalWS = In_NormalWS3_g174836;
				Data3_g174836.Shader = In_Shader3_g174836;
				Data3_g174836.Emissive= In_Emissive3_g174836;
				Data3_g174836.MultiMask = In_MultiMask3_g174836;
				Data3_g174836.Grayscale = In_Grayscale3_g174836;
				Data3_g174836.Luminosity = In_Luminosity3_g174836;
				Data3_g174836.AlphaClip = In_AlphaClip3_g174836;
				Data3_g174836.AlphaFade = In_AlphaFade3_g174836;
				Data3_g174836.Translucency = In_Translucency3_g174836;
				Data3_g174836.Transmission = In_Transmission3_g174836;
				Data3_g174836.Thickness = In_Thickness3_g174836;
				Data3_g174836.Diffusion = In_Diffusion3_g174836;
				TVEVisualData Data4_g174858 = Data3_g174836;
				float Out_Dummy4_g174858 = 0;
				float3 Out_Albedo4_g174858 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174858 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174858 = float2( 0,0 );
				float3 Out_NormalWS4_g174858 = float3( 0,0,0 );
				float4 Out_Shader4_g174858 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174858 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174858 = 0;
				float Out_Grayscale4_g174858 = 0;
				float Out_Luminosity4_g174858 = 0;
				float Out_AlphaClip4_g174858 = 0;
				float Out_AlphaFade4_g174858 = 0;
				float3 Out_Translucency4_g174858 = float3( 0,0,0 );
				float Out_Transmission4_g174858 = 0;
				float Out_Thickness4_g174858 = 0;
				float Out_Diffusion4_g174858 = 0;
				Out_Dummy4_g174858 = Data4_g174858.Dummy;
				Out_Albedo4_g174858 = Data4_g174858.Albedo;
				Out_AlbedoRaw4_g174858 = Data4_g174858.AlbedoRaw;
				Out_NormalTS4_g174858 = Data4_g174858.NormalTS;
				Out_NormalWS4_g174858 = Data4_g174858.NormalWS;
				Out_Shader4_g174858 = Data4_g174858.Shader;
				Out_Emissive4_g174858= Data4_g174858.Emissive;
				Out_MultiMask4_g174858 = Data4_g174858.MultiMask;
				Out_Grayscale4_g174858 = Data4_g174858.Grayscale;
				Out_Luminosity4_g174858= Data4_g174858.Luminosity;
				Out_AlphaClip4_g174858 = Data4_g174858.AlphaClip;
				Out_AlphaFade4_g174858 = Data4_g174858.AlphaFade;
				Out_Translucency4_g174858 = Data4_g174858.Translucency;
				Out_Transmission4_g174858 = Data4_g174858.Transmission;
				Out_Thickness4_g174858 = Data4_g174858.Thickness;
				Out_Diffusion4_g174858 = Data4_g174858.Diffusion;
				half3 Visual_Albedo199_g174857 = Out_Albedo4_g174858;
				float3 temp_cast_53 = (0.0).xxx;
				half3 Subsurface_Color264_g174857 = ( (_SubsurfaceColor).rgb * Visual_Albedo199_g174857 );
				half Visual_Transmission138_g174857 = Out_Transmission4_g174858;
				half Subsurface_Value268_g174857 = _SubsurfaceIntensityValue;
				TVEGlobalData Data15_g174860 = Data204_g173897;
				float Out_Dummy15_g174860 = 0;
				float4 Out_CoatParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174860 = float4( 0,0,0,0 );
				Out_Dummy15_g174860 = Data15_g174860.Dummy;
				Out_CoatParams15_g174860 = Data15_g174860.CoatParams;
				Out_PaintParams15_g174860 = Data15_g174860.PaintParams;
				Out_GlowParams15_g174860 = Data15_g174860.GlowParams;
				Out_AtmoParams15_g174860= Data15_g174860.AtmoParams;
				Out_FadeParams15_g174860= Data15_g174860.FadeParams;
				Out_FormParams15_g174860 = Data15_g174860.FormParams;
				Out_LandParams15_g174860 = Data15_g174860.LandParams;
				Out_WindParams15_g174860 = Data15_g174860.WindParams;
				Out_PushParams15_g174860 = Data15_g174860.PushParams;
				half4 Global_GlowParams373_g174857 = Out_GlowParams15_g174860;
				float lerpResult403_g174857 = lerp( 1.0 , saturate( (Global_GlowParams373_g174857).w ) , TVE_IsEnabled);
				#ifdef TVE_SUBSURFACE_ELEMENT
				float staticSwitch367_g174857 = lerpResult403_g174857;
				#else
				float staticSwitch367_g174857 = 1.0;
				#endif
				half Subsurface_GlobalMask369_g174857 = staticSwitch367_g174857;
				float temp_output_301_11_g174857 = Out_MultiMask4_g174858;
				half Visual_MultiMask292_g174857 = temp_output_301_11_g174857;
				float lerpResult293_g174857 = lerp( 1.0 , Visual_MultiMask292_g174857 , _SubsurfaceMultiValue);
				half Subsurface_MultiMask296_g174857 = lerpResult293_g174857;
				half Custom_Mask363_g174857 = 1.0;
				#ifdef TVE_SUBSURFACE
				float staticSwitch345_g174857 = ( Visual_Transmission138_g174857 * Subsurface_Value268_g174857 * Subsurface_GlobalMask369_g174857 * Subsurface_MultiMask296_g174857 * Custom_Mask363_g174857 );
				#else
				float staticSwitch345_g174857 = 0.0;
				#endif
				half Final_Transmission269_g174857 = staticSwitch345_g174857;
				#ifdef TVE_SUBSURFACE
				float3 staticSwitch348_g174857 = ( Subsurface_Color264_g174857 * Final_Transmission269_g174857 * 10.0 );
				#else
				float3 staticSwitch348_g174857 = temp_cast_53;
				#endif
				half3 Final_Translucency254_g174857 = staticSwitch348_g174857;
				TVEModelData Data15_g174863 = Data16_g164566;
				float Out_Dummy15_g174863 = 0;
				float3 Out_PositionWS15_g174863 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174863 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174863 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174863 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174863 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174863 = float3( 0,0,0 );
				float4 Out_VertexData15_g174863 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174863 = float4( 0,0,0,0 );
				Out_Dummy15_g174863 = Data15_g174863.Dummy;
				Out_PositionWS15_g174863 = Data15_g174863.PositionWS;
				Out_PositionWO15_g174863 = Data15_g174863.PositionWO;
				Out_PivotWS15_g174863 = Data15_g174863.PivotWS;
				Out_PivotWO15_g174863 = Data15_g174863.PivotWO;
				Out_NormalWS15_g174863 = Data15_g174863.NormalWS;
				Out_ViewDirWS15_g174863 = Data15_g174863.ViewDirWS;
				Out_VertexData15_g174863 = Data15_g174863.VertexData;
				Out_BoundsData15_g174863 = Data15_g174863.BoundsData;
				half3 Model_ViewDirWS392_g174857 = Out_ViewDirWS15_g174863;
				float dotResult324_g174857 = dot( -TVE_MainLightDirection , Model_ViewDirWS392_g174857 );
				float saferPower323_g174857 = abs( saturate( dotResult324_g174857 ) );
				#ifdef UNITY_PASS_FORWARDADD
				float staticSwitch330_g174857 = 0.0;
				#else
				float staticSwitch330_g174857 = ( pow( saferPower323_g174857 , _SubsurfaceAngleValue ) * _SubsurfaceScatteringValue );
				#endif
				half Mask_Subsurface_View320_g174857 = staticSwitch330_g174857;
				float3 temp_output_6_0_g174861 = ( Final_Translucency254_g174857 * Mask_Subsurface_View320_g174857 );
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g174861 = ( temp_output_6_0_g174861 + ( _SubsurfaceAproxInfo * 0.0 ) );
				#else
				float3 staticSwitch14_g174861 = temp_output_6_0_g174861;
				#endif
				half3 Subsurface_Approximation333_g174857 = staticSwitch14_g174861;
				#ifdef TVE_SUBSURFACE
				float3 staticSwitch353_g174857 = ( Visual_Albedo199_g174857 + Subsurface_Approximation333_g174857 );
				#else
				float3 staticSwitch353_g174857 = Visual_Albedo199_g174857;
				#endif
				half3 Final_Albedo312_g174857 = staticSwitch353_g174857;
				float3 In_Albedo3_g174859 = Final_Albedo312_g174857;
				float3 In_AlbedoRaw3_g174859 = Out_AlbedoRaw4_g174858;
				float2 In_NormalTS3_g174859 = Out_NormalTS4_g174858;
				float3 In_NormalWS3_g174859 = Out_NormalWS4_g174858;
				float4 In_Shader3_g174859 = Out_Shader4_g174858;
				float4 In_Emissive3_g174859 = Out_Emissive4_g174858;
				float In_Grayscale3_g174859 = Out_Grayscale4_g174858;
				float In_Luminosity3_g174859 = Out_Luminosity4_g174858;
				float In_MultiMask3_g174859 = temp_output_301_11_g174857;
				float In_AlphaClip3_g174859 = Out_AlphaClip4_g174858;
				float In_AlphaFade3_g174859 = Out_AlphaFade4_g174858;
				float3 In_Translucency3_g174859 = Final_Translucency254_g174857;
				float In_Transmission3_g174859 = Final_Transmission269_g174857;
				#ifdef TVE_SUBSURFACE
				float staticSwitch351_g174857 = 0.0;
				#else
				float staticSwitch351_g174857 = 1.0;
				#endif
				half Final_Thickness275_g174857 = staticSwitch351_g174857;
				float In_Thickness3_g174859 = Final_Thickness275_g174857;
				float Final_Diffusion340_g174857 = _SubsurfaceDiffusion;
				float In_Diffusion3_g174859 = Final_Diffusion340_g174857;
				Data3_g174859.Dummy = In_Dummy3_g174859;
				Data3_g174859.Albedo = In_Albedo3_g174859;
				Data3_g174859.AlbedoRaw = In_AlbedoRaw3_g174859;
				Data3_g174859.NormalTS = In_NormalTS3_g174859;
				Data3_g174859.NormalWS = In_NormalWS3_g174859;
				Data3_g174859.Shader = In_Shader3_g174859;
				Data3_g174859.Emissive= In_Emissive3_g174859;
				Data3_g174859.MultiMask = In_MultiMask3_g174859;
				Data3_g174859.Grayscale = In_Grayscale3_g174859;
				Data3_g174859.Luminosity = In_Luminosity3_g174859;
				Data3_g174859.AlphaClip = In_AlphaClip3_g174859;
				Data3_g174859.AlphaFade = In_AlphaFade3_g174859;
				Data3_g174859.Translucency = In_Translucency3_g174859;
				Data3_g174859.Transmission = In_Transmission3_g174859;
				Data3_g174859.Thickness = In_Thickness3_g174859;
				Data3_g174859.Diffusion = In_Diffusion3_g174859;
				TVEVisualData Data4_g174874 = Data3_g174859;
				float Out_Dummy4_g174874 = 0;
				float3 Out_Albedo4_g174874 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174874 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174874 = float2( 0,0 );
				float3 Out_NormalWS4_g174874 = float3( 0,0,0 );
				float4 Out_Shader4_g174874 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174874 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174874 = 0;
				float Out_Grayscale4_g174874 = 0;
				float Out_Luminosity4_g174874 = 0;
				float Out_AlphaClip4_g174874 = 0;
				float Out_AlphaFade4_g174874 = 0;
				float3 Out_Translucency4_g174874 = float3( 0,0,0 );
				float Out_Transmission4_g174874 = 0;
				float Out_Thickness4_g174874 = 0;
				float Out_Diffusion4_g174874 = 0;
				Out_Dummy4_g174874 = Data4_g174874.Dummy;
				Out_Albedo4_g174874 = Data4_g174874.Albedo;
				Out_AlbedoRaw4_g174874 = Data4_g174874.AlbedoRaw;
				Out_NormalTS4_g174874 = Data4_g174874.NormalTS;
				Out_NormalWS4_g174874 = Data4_g174874.NormalWS;
				Out_Shader4_g174874 = Data4_g174874.Shader;
				Out_Emissive4_g174874= Data4_g174874.Emissive;
				Out_MultiMask4_g174874 = Data4_g174874.MultiMask;
				Out_Grayscale4_g174874 = Data4_g174874.Grayscale;
				Out_Luminosity4_g174874= Data4_g174874.Luminosity;
				Out_AlphaClip4_g174874 = Data4_g174874.AlphaClip;
				Out_AlphaFade4_g174874 = Data4_g174874.AlphaFade;
				Out_Translucency4_g174874 = Data4_g174874.Translucency;
				Out_Transmission4_g174874 = Data4_g174874.Transmission;
				Out_Thickness4_g174874 = Data4_g174874.Thickness;
				Out_Diffusion4_g174874 = Data4_g174874.Diffusion;
				half3 Input_Albedo24_g174873 = Out_Albedo4_g174874;
				#ifdef UNITY_COLORSPACE_GAMMA
				float4 staticSwitch22_g174873 = half4(0.2209163,0.2209163,0.2209163,0.7790837);
				#else
				float4 staticSwitch22_g174873 = half4(0.04,0.04,0.04,0.96);
				#endif
				half4 ColorSpaceDielectricSpec23_g174873 = staticSwitch22_g174873;
				float4 break24_g174868 = Out_Shader4_g174874;
				half Metallic95_g174868 = break24_g174868.x;
				half Input_Metallic25_g174873 = Metallic95_g174868;
				half OneMinusReflectivity31_g174873 = ( (ColorSpaceDielectricSpec23_g174873).w - ( (ColorSpaceDielectricSpec23_g174873).w * Input_Metallic25_g174873 ) );
				
				float3 appendResult23_g174868 = (float3(Out_NormalTS4_g174874 , 1.0));
				float3 temp_output_13_0_g174872 = appendResult23_g174868;
				float3 temp_output_33_0_g174872 = ( temp_output_13_0_g174872 * _render_normal );
				float3 switchResult12_g174872 = (((ase_vface>0)?(temp_output_13_0_g174872):(temp_output_33_0_g174872)));
				
				half Smoothness105_g174868 = break24_g174868.w;
				half Input_Smoothness43_g174877 = Smoothness105_g174868;
				half Input_True57_g174879 = Input_Smoothness43_g174877;
				half True33_g174879 = Input_True57_g174879;
				half RenderSpec102_g174868 = _RenderSpecular;
				half Input_RenderSpec58_g174877 = RenderSpec102_g174868;
				float temp_output_46_0_g174877 = max( ( Input_Smoothness43_g174877 * Input_RenderSpec58_g174877 ) , 0.001 );
				float temp_output_6_0_g174878 = temp_output_46_0_g174877;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174878 = ( temp_output_6_0_g174878 + ( _SpecColor.r * 0.0 ) );
				#else
				float staticSwitch14_g174878 = temp_output_6_0_g174878;
				#endif
				float temp_output_61_0_g174877 = staticSwitch14_g174878;
				half Input_False58_g174879 = temp_output_61_0_g174877;
				half False33_g174879 = Input_False58_g174879;
				half localShadowPassCheck33_g174879 = ShadowPassCheck33_g174879( True33_g174879 , False33_g174879 );
				
				half Input_True57_g174880 = 0.04;
				half True33_g174880 = Input_True57_g174880;
				half Input_False58_g174880 = temp_output_46_0_g174877;
				half False33_g174880 = Input_False58_g174880;
				half localShadowPassCheck33_g174880 = ShadowPassCheck33_g174880( True33_g174880 , False33_g174880 );
				
				float localCustomAlphaClip19_g174875 = ( 0.0 );
				float temp_output_3_0_g174875 = Out_AlphaClip4_g174874;
				float Alpha19_g174875 = temp_output_3_0_g174875;
				float temp_output_15_0_g174875 = 0.0;
				float Treshold19_g174875 = temp_output_15_0_g174875;
				#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_DITHER)
				#if defined ( TVE_PIPELINE_HD)
				#if !defined(SHADERPASS_FORWARD_BYPASS_ALPHA_TEST) && !defined(SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST)
				clip(Alpha19_g174875 - Treshold19_g174875);
				#endif
				#else
				clip(Alpha19_g174875 - Treshold19_g174875);
				#endif
				#endif
				
				o.Albedo = ( Input_Albedo24_g174873 * OneMinusReflectivity31_g174873 );
				o.Normal = switchResult12_g174872;
				o.Emission = (Out_Emissive4_g174874).xyz;

				#if defined(ASE_LIGHTING_SIMPLE)
					o.Specular = localShadowPassCheck33_g174879;
					o.Gloss = localShadowPassCheck33_g174880;
				#else
					#if defined(_SPECULAR_SETUP)
						o.Specular = fixed3( 0, 0, 0 );
					#else
						o.Metallic = 0;
					#endif
					o.Occlusion = 1;
					o.Smoothness = 0;
				#endif

				o.Alpha = saturate( ( Alpha19_g174875 * Out_AlphaFade4_g174874 ) );
				float AlphaClipThreshold = 0.5;
				float3 Transmission = 1;
				float3 Translucency = 1;

				#ifdef _ALPHATEST_ON
					clip( o.Alpha - AlphaClipThreshold );
				#endif

				#ifdef _DEPTHOFFSET_ON
					outputDepth = IN.pos.z;
				#endif

				#ifndef USING_DIRECTIONAL_LIGHT
					fixed3 lightDir = normalize(UnityWorldSpaceLightDir(worldPos));
				#else
					fixed3 lightDir = _WorldSpaceLightPos0.xyz;
				#endif

				fixed4 c = 0;
				float3 worldN;
				worldN.x = dot(IN.tSpace0.xyz, o.Normal);
				worldN.y = dot(IN.tSpace1.xyz, o.Normal);
				worldN.z = dot(IN.tSpace2.xyz, o.Normal);
				worldN = normalize(worldN);
				o.Normal = worldN;

				UnityGI gi;
				UNITY_INITIALIZE_OUTPUT(UnityGI, gi);
				gi.indirect.diffuse = 0;
				gi.indirect.specular = 0;
				gi.light.color = _LightColor0.rgb;
				gi.light.dir = lightDir;
				gi.light.color *= atten;

				#if defined(ASE_LIGHTING_SIMPLE)
					#if defined(_SPECULAR_SETUP)
						c += LightingBlinnPhong (o, worldViewDir, gi);
					#else
						c += LightingLambert( o, gi );
					#endif
				#else
					#if defined(_SPECULAR_SETUP)
						c += LightingStandardSpecular (o, worldViewDir, gi);
					#else
						c += LightingStandard( o, worldViewDir, gi );
					#endif
				#endif

				#ifdef ASE_TRANSMISSION
				{
					float shadow = _TransmissionShadow;
					#ifdef DIRECTIONAL
						float3 lightAtten = lerp( _LightColor0.rgb, gi.light.color, shadow );
					#else
						float3 lightAtten = gi.light.color;
					#endif
					half3 transmission = max(0 , -dot(o.Normal, gi.light.dir)) * lightAtten * Transmission;
					c.rgb += o.Albedo * transmission;
				}
				#endif

				#ifdef ASE_TRANSLUCENCY
				{
					float shadow = _TransShadow;
					float normal = _TransNormal;
					float scattering = _TransScattering;
					float direct = _TransDirect;
					float ambient = _TransAmbient;
					float strength = _TransStrength;

					#ifdef DIRECTIONAL
						float3 lightAtten = lerp( _LightColor0.rgb, gi.light.color, shadow );
					#else
						float3 lightAtten = gi.light.color;
					#endif
					half3 lightDir = gi.light.dir + o.Normal * normal;
					half transVdotL = pow( saturate( dot( worldViewDir, -lightDir ) ), scattering );
					half3 translucency = lightAtten * (transVdotL * direct + gi.indirect.diffuse * ambient) * Translucency;
					c.rgb += o.Albedo * translucency * strength;
				}
				#endif

				//#ifdef ASE_REFRACTION
				//	float4 projScreenPos = ScreenPos / ScreenPos.w;
				//	float3 refractionOffset = ( RefractionIndex - 1.0 ) * mul( UNITY_MATRIX_V, WorldNormal ).xyz * ( 1.0 - dot( WorldNormal, WorldViewDirection ) );
				//	projScreenPos.xy += refractionOffset.xy;
				//	float3 refraction = UNITY_SAMPLE_SCREENSPACE_TEXTURE( _GrabTexture, projScreenPos ) * RefractionColor;
				//	color.rgb = lerp( refraction, color.rgb, color.a );
				//	color.a = 1;
				//#endif

				#ifdef ASE_FOG
					UNITY_APPLY_FOG(IN.fogCoord, c);
				#endif
				return c;
			}
			ENDCG
		}

		
		Pass
		{
			
			Name "Meta"
			Tags { "LightMode"="Meta" }
			Cull Off

			CGPROGRAM
			#define ASE_GEOMETRY 1
			#define ASE_NEEDS_FRAG_SHADOWCOORDS
			#pragma multi_compile_instancing
			#pragma multi_compile __ LOD_FADE_CROSSFADE
			#pragma multi_compile_fog
			#define ASE_FOG 1
			#define ASE_ABSOLUTE_VERTEX_POS 1
			#define _SPECULAR_SETUP 1
			#define ASE_LIGHTING_SIMPLE 1
			#define _ENVIRONMENTREFLECTIONS_OFF 1
			#define ASE_USING_SAMPLING_MACROS 1

			#pragma vertex vert
			#pragma fragment frag
			#pragma skip_variants FOG_LINEAR FOG_EXP FOG_EXP2
			#pragma shader_feature EDITOR_VISUALIZATION
			#ifndef UNITY_PASS_META
				#define UNITY_PASS_META
			#endif
			#include "HLSLSupport.cginc"

			#ifdef ASE_GEOMETRY
				#ifndef UNITY_INSTANCED_LOD_FADE
					#define UNITY_INSTANCED_LOD_FADE
				#endif
				#ifndef UNITY_INSTANCED_SH
					#define UNITY_INSTANCED_SH
				#endif
				#ifndef UNITY_INSTANCED_LIGHTMAPSTS
					#define UNITY_INSTANCED_LIGHTMAPSTS
				#endif
			#endif

			#include "UnityShaderVariables.cginc"
			#include "UnityCG.cginc"
			#include "Lighting.cginc"
			#include "UnityPBSLighting.cginc"
			#include "UnityMetaPass.cginc"

			#include "UnityStandardBRDF.cginc"
			#define ASE_NEEDS_VERT_POSITION
			#define ASE_NEEDS_VERT_NORMAL
			#define ASE_NEEDS_VERT_TANGENT
			#pragma shader_feature_local_fragment TVE_PIPELINE_STANDARD TVE_PIPELINE_UNIVERSAL TVE_PIPELINE_HD
			#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
			#pragma shader_feature_local_vertex TVE_SIZEFADE
			#pragma shader_feature_local_vertex TVE_PERSPECTIVE
			#pragma shader_feature_local_vertex TVE_PIVOT_OFF TVE_PIVOT_BAKED TVE_PIVOT_PROC
			#pragma shader_feature_local_vertex TVE_SIZEFADE_ELEMENT
			#pragma shader_feature_local_vertex TVE_MOTION_SMALL_SQUASH
			#pragma shader_feature_local TVE_LEGACY
			#pragma shader_feature_local_vertex TVE_MOTION_WIND_ELEMENT
			#pragma shader_feature_local_vertex TVE_MOTION_WIND_OFF TVE_MOTION_WIND_OPTIMIZED TVE_MOTION_WIND_ADVANCED
			#pragma shader_feature_local_vertex TVE_MOTION_TINY_FLUTTER
			#pragma shader_feature_local_vertex TVE_MOTION_PUSH_BENDING
			#pragma shader_feature_local_vertex TVE_MOTION_BASE_BENDING
			#pragma shader_feature_local_vertex TVE_BLANKET_BENDING
			#pragma shader_feature_local_vertex TVE_NORMAL_COMPUTE
			#pragma shader_feature_local_fragment TVE_SUBSURFACE
			#pragma shader_feature_local_fragment TVE_WETNESS
			#pragma shader_feature_local_fragment TVE_OVERLAY
			#pragma shader_feature_local_fragment TVE_MOTION_HIGHLIGHT
			#pragma shader_feature_local_fragment TVE_DRYNESS
			#pragma shader_feature_local_fragment TVE_TINTING
			#pragma shader_feature_local_fragment TVE_VARIATION
			#pragma shader_feature_local_fragment TVE_GRADIENT
			#pragma shader_feature_local_fragment TVE_OCCLUSION
			#pragma shader_feature_local_fragment TVE_TERRAIN
			#pragma shader_feature_local_fragment TVE_THIRD
			#pragma shader_feature_local_fragment TVE_SECOND
			#pragma shader_feature_local_fragment TVE_MAIN_SAMPLE_MAIN_UV TVE_MAIN_SAMPLE_EXTRA_UV TVE_MAIN_SAMPLE_PLANAR_2D TVE_MAIN_SAMPLE_PLANAR_3D TVE_MAIN_SAMPLE_STOCHASTIC_2D TVE_MAIN_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
			#pragma shader_feature_local_fragment TVE_SECOND_SAMPLE_MAIN_UV TVE_SECOND_SAMPLE_EXTRA_UV TVE_SECOND_SAMPLE_PLANAR_2D TVE_SECOND_SAMPLE_PLANAR_3D TVE_SECOND_SAMPLE_STOCHASTIC_2D TVE_SECOND_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_SECOND_MASK_SAMPLE_MAIN_UV TVE_SECOND_MASK_SAMPLE_EXTRA_UV TVE_SECOND_MASK_SAMPLE_PLANAR_2D TVE_SECOND_MASK_SAMPLE_PLANAR_3D
			#pragma shader_feature_local_fragment TVE_SECOND_ELEMENT
			#pragma shader_feature_local_fragment TVE_THIRD_SAMPLE_MAIN_UV TVE_THIRD_SAMPLE_EXTRA_UV TVE_THIRD_SAMPLE_PLANAR_2D TVE_THIRD_SAMPLE_PLANAR_3D TVE_THIRD_SAMPLE_STOCHASTIC_2D TVE_THIRD_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_THIRD_MASK_SAMPLE_MAIN_UV TVE_THIRD_MASK_SAMPLE_EXTRA_UV TVE_THIRD_MASK_SAMPLE_PLANAR_2D TVE_THIRD_MASK_SAMPLE_PLANAR_3D
			#pragma shader_feature_local_fragment TVE_THIRD_ELEMENT
			#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
			#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_MASK_SAMPLE_MAIN_UV TVE_TERRAIN_MASK_SAMPLE_EXTRA_UV TVE_TERRAIN_MASK_SAMPLE_PLANAR_2D TVE_TERRAIN_MASK_SAMPLE_PLANAR_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_ELEMENT
			#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
			#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
			#pragma shader_feature_local_fragment TVE_DRYNESS_SHIFT
			#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
			#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
			#pragma shader_feature_local_fragment TVE_OVERLAY_MASK_SAMPLE_MAIN_UV TVE_OVERLAY_MASK_SAMPLE_EXTRA_UV
			#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_WATER
			#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_VERT
			#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
			#pragma shader_feature_local_fragment TVE_CUTOUT
			#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
			#pragma shader_feature_local_fragment TVE_DITHER
			#pragma shader_feature_local_fragment TVE_EMISSIVE
			#pragma shader_feature_local_fragment TVE_EMISSIVE_SAMPLE_MAIN_UV TVE_EMISSIVE_SAMPLE_EXTRA_UV
			#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
			#pragma shader_feature_local_fragment TVE_SUBSURFACE_ELEMENT
			//SHADER INJECTION POINT BEGIN
			//SHADER INJECTION POINT END
			  
			struct TVEVisualData
			{  
				half Dummy;  
				half3 Albedo;
				half3 AlbedoRaw;
				half2 NormalTS;
				half3 NormalWS; 
				half4 Shader;
				half4 Emissive;
				half AlphaClip;
				half AlphaFade;
				half MultiMask;
				half Grayscale;
				half Luminosity;
				half3 Translucency;
				half Transmission;
				half Thickness;
				float Diffusion;
			};  
			    
			struct TVEModelData
			{    
				half Dummy;    
				half3 PositionOS;
				half3 PositionWS;
				half3 PositionWO;
				half3 PositionRawOS;
				half3 PositionAddOS;
				half3 PivotOS;
				half3 PivotWS;
				half3 PivotWO;
				half3 NormalOS;
				half3 NormalWS;
				half3 NormalRawOS;
				half3 NormalRawWS;
				half4 TangentOS;
				half3 ViewDirWS;
				half4 VertexData;
				half4 MotionData;
				half4 BoundsData;
				half4 RotationData;
			};    
			      
			struct TVEGlobalData
			{      
				half Dummy;      
				half4 CoatParams;
				half4 PaintParams;
				half4 GlowParams;
				half4 AtmoParams;
				half4 FadeParams;
				half4 FormParams;
				half4 LandParams;
				half4 WindParams;
				half4 PushParams;
			};      
			        
			//#pragma editor_sync_compilation
			#if defined(SHADER_API_D3D11) || defined(SHADER_API_XBOXONE) || defined(UNITY_COMPILER_HLSLCC) || defined(SHADER_API_PSSL) || (defined(SHADER_TARGET_SURFACE_ANALYSIS) && !defined(SHADER_TARGET_SURFACE_ANALYSIS_MOJOSHADER))//ASE Sampler Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex.SampleBias(samplerTex,coord,bias)
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex.SampleGrad(samplerTex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE3D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#else//ASE Sampling Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex2D(tex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex2Dlod(tex,float4(coord,0,lod))
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex2Dbias(tex,float4(coord,0,bias))
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex2Dgrad(tex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE3D(tex,samplerTex,coord) tex3D(tex,coord)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplertex,coord,lod) tex2DArraylod(tex, float4(coord,lod))
			#endif//ASE Sampling Macros
			

			struct appdata {
				float4 vertex : POSITION;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;
				UNITY_VERTEX_INPUT_INSTANCE_ID
			};
			struct v2f {
				#if UNITY_VERSION >= 201810
					UNITY_POSITION(pos);
				#else
					float4 pos : SV_POSITION;
				#endif
				#ifdef EDITOR_VISUALIZATION
					float2 vizUV : TEXCOORD1;
					float4 lightCoord : TEXCOORD2;
				#endif
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_texcoord4 : TEXCOORD4;
				float4 ase_texcoord5 : TEXCOORD5;
				float4 ase_texcoord6 : TEXCOORD6;
				float4 ase_texcoord7 : TEXCOORD7;
				float4 ase_color : COLOR;
				float4 ase_texcoord8 : TEXCOORD8;
				float4 ase_texcoord9 : TEXCOORD9;
				float4 ase_texcoord10 : TEXCOORD10;
				float4 ase_texcoord11 : TEXCOORD11;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				UNITY_VERTEX_OUTPUT_STEREO
			};

			#ifdef ASE_TESSELLATION
				float _TessPhongStrength;
				float _TessValue;
				float _TessMin;
				float _TessMax;
				float _TessEdgeLength;
				float _TessMaxDisp;
			#endif
			uniform half _TerrainSampleMode1;
			uniform half _TerrainSampleMode2;
			uniform half _TerrainSampleMode3;
			uniform half _TerrainSampleMode4;
			uniform half _TerrainSampleMode5;
			uniform half _TerrainSampleMode6;
			uniform half _TerrainSampleMode7;
			uniform half _TerrainSampleMode8;
			uniform half _TerrainSampleMode9;
			uniform half _TerrainSampleMode10;
			uniform half _TerrainSampleMode11;
			uniform half _TerrainSampleMode12;
			uniform half _TerrainSampleMode13;
			uniform half _TerrainSampleMode14;
			uniform half _TerrainSampleMode15;
			uniform half _TerrainSampleMode16;
			uniform half _TerrainLayersMode;
			uniform half _TerrainTextureMode;
			uniform half _SubsurfaceScatteringValue;
			uniform half _SubsurfaceAngleValue;
			uniform float _SubsurfaceDiffusion;
			uniform float4 _SubsurfaceDiffusion_Asset;
			uniform half _SubsurfaceSpace;
			uniform half _render_src;
			uniform half _render_cull;
			uniform half _render_dst;
			uniform half _render_zw;
			uniform half _render_coverage;
			uniform half _IsBlanketShader;
			uniform half _IsSimpleShader;
			uniform half _RenderZWrite;
			uniform half4 _Color;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_BumpMap);
			SamplerState sampler_BumpMap;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainTex);
			SamplerState sampler_MainTex;
			uniform half _Cutoff;
			uniform half _IsVersion;
			uniform half _RenderCategory;
			uniform half _RenderEnd;
			uniform half _RenderMode;
			uniform half _NoiseCategory;
			uniform half _NoiseEnd;
			uniform half _RenderCull;
			uniform half _RenderNormal;
			uniform half _RenderBakeGI;
			uniform half _RenderDecals;
			uniform half _RenderSSR;
			uniform half _RenderPriority;
			uniform half _RenderQueue;
			uniform half _RenderMotion;
			uniform half _RenderClip;
			uniform half _RenderShadow;
			uniform half _IsTVEShader;
			uniform half _IsCustomShader;
			uniform half _IsShared;
			uniform half _HasDefaultTextures;
			uniform half _IsCollected;
			uniform half _IsConverted;
			uniform half _IsIdentifier;
			uniform half _RenderFilter;
			UNITY_DECLARE_TEX3D_NOSAMPLER(_NoiseTex3D);
			SamplerState sampler_NoiseTex3D;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_NoiseTexSS);
			SamplerState sampler_NoiseTexSS;
			uniform half _NormalCategory;
			uniform half _NormalEnd;
			uniform half _NormalSpace;
			uniform half _BlanketCategory;
			uniform half _BlanketEnd;
			uniform half _BlanketInfo;
			uniform half _MotionWindCategory;
			uniform half _MotionWindEnd;
			uniform half _MotionInteractionCategory;
			uniform half _MotionInteractionEnd;
			uniform half _MotionWindMode;
			uniform half _MotionWindElementMode;
			uniform half _MotionPushElementMode;
			uniform half _MotionWindOffInfo;
			uniform half _MotionWindOptimizedInfo;
			uniform half _MotionWindAdvancedInfo;
			uniform half _SizeFadeCategory;
			uniform half _SizeFadeEnd;
			uniform half _SizeFadeElementMode;
			uniform half _PerspectiveCategory;
			uniform half _PerspectiveEnd;
			uniform half _ObjectCategory;
			uniform half _ObjectEnd;
			uniform half _ObjectModelMode;
			uniform half _ObjectPivotMode;
			uniform half _ObjectPhaseMode;
			uniform half _ObjectBoundsInfo;
			uniform float3 TVE_WorldOrigin;
			uniform half4 _object_phase_mode;
			uniform half _ObjectHeightValue;
			uniform half _ObjectRadiusValue;
			uniform half _PerspectiveIntensityValue;
			uniform half _PerspectiveAngleValue;
			uniform half _SizeFadeDistMaxValue;
			uniform half _SizeFadeDistMinValue;
			uniform half _SizeFadeScaleValue;
			uniform half _GlobalCategory;
			uniform half _GlobalEnd;
			uniform half _GlobalCoatLayerValue;
			uniform float TVE_CoatLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_CoatBaseTex);
			uniform half4 TVE_RenderBaseCoords;
			uniform half _GlobalCoatPivotValue;
			SamplerState sampler_Linear_Clamp;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_CoatNearTex);
			uniform half4 TVE_RenderNearCoords;
			SamplerState sampler_Linear_Repeat;
			uniform float4 TVE_RenderNearPositionR;
			uniform half TVE_RenderNearFadeValue;
			uniform half4 TVE_CoatParams;
			uniform half _GlobalPaintLayerValue;
			uniform float TVE_PaintLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintBaseTex);
			uniform half _GlobalPaintPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintNearTex);
			uniform half4 TVE_PaintParams;
			uniform half _GlobalGlowLayerValue;
			uniform float TVE_GlowLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowBaseTex);
			uniform half _GlobalGlowPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowNearTex);
			uniform half4 TVE_GlowParams;
			uniform half _GlobalAtmoLayerValue;
			uniform float TVE_AtmoLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoBaseTex);
			uniform half _GlobalAtmoPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoNearTex);
			uniform half4 TVE_AtmoParams;
			uniform half _GlobalFadeLayerValue;
			uniform float TVE_FadeLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeBaseTex);
			uniform half _GlobalFadePivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeNearTex);
			uniform half4 TVE_FadeParams;
			uniform half _GlobalFormLayerValue;
			uniform float TVE_FormLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormBaseTex);
			uniform half _GlobalFormPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormNearTex);
			uniform half4 TVE_FormParams;
			uniform half4 TVE_LandParams;
			uniform half _GlobalWindLayerValue;
			uniform float TVE_WindLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_WindBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_WindNearTex);
			uniform half4 TVE_WindParams;
			uniform half _GlobalPushLayerValue;
			uniform float TVE_PushLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PushBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PushNearTex);
			uniform half4 TVE_PushParams;
			uniform half TVE_IsEnabled;
			uniform half _SizeFadeScaleMode;
			uniform half _SizeFadeIntensityValue;
			uniform half _MotionSmallIntensityValue;
			uniform half4 _motion_small_vert_mode;
			uniform half4 _motion_small_proc_mode;
			uniform half _motion_small_mask_mode;
			uniform half4 _MotionSmallMaskRemap;
			uniform half _MotionSmallMaskMode;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MotionNoiseTexRT);
			uniform half _MotionBasePivotValue;
			uniform half _MotionBasePhaseValue;
			uniform half _MotionTillingValue;
			uniform half _MotionIntensityValue;
			uniform half4 TVE_MotionParams;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MotionNoiseTex);
			uniform half _MotionBaseTillingValue;
			uniform half4 TVE_TimeParams;
			uniform half _MotionBaseSpeedValue;
			uniform half _MotionBaseNoiseValue;
			uniform half _global_wind_layer_value;
			uniform half _MotionSmallPivotValue;
			uniform half _MotionSmallPhaseValue;
			uniform half _MotionSmallTillingValue;
			uniform half _MotionSmallSpeedValue;
			uniform half _MotionSmallNoiseValue;
			uniform half _MotionFrontValue;
			uniform half _MotionSmallDelayValue;
			uniform half _MotionTinyIntensityValue;
			uniform half4 _motion_tiny_vert_mode;
			uniform half4 _motion_tiny_proc_mode;
			uniform half _motion_tiny_mask_mode;
			uniform half4 _MotionTinyMaskRemap;
			uniform half _MotionTinyMaskMode;
			uniform half _MotionTinyTillingValue;
			uniform half _MotionTinySpeedValue;
			uniform half _MotionDistValue;
			uniform half _global_push_layer_value;
			uniform half _MotionPushPivotValue;
			uniform half _MotionPushPhaseValue;
			uniform half _MotionPushIntensityValue;
			uniform half _MotionBaseIntensityValue;
			uniform half4 _motion_base_vert_mode;
			uniform half4 _motion_base_proc_mode;
			uniform half _motion_base_mask_mode;
			uniform half4 _MotionBaseMaskRemap;
			uniform half _MotionBaseMaskMode;
			uniform half _MotionBaseDelayValue;
			uniform half4 _motion_push_vert_mode;
			uniform half4 _motion_push_proc_mode;
			uniform half _motion_push_mask_mode;
			uniform half4 _MotionPushMaskRemap;
			uniform half _MotionPushMaskMode;
			uniform half _BlanketConformOffsetMode;
			uniform half _BlanketConformOffsetValue;
			uniform half _BlanketConformValue;
			uniform half _BlanketOrientationValue;
			uniform half _NormalFlattenValue;
			uniform half3 _NormalSphereOffsetValue;
			uniform half _NormalSphereValue;
			uniform half _NormalComputeValue;
			uniform half _NormalBlanketValue;
			uniform half4 _normal_vert_mode;
			uniform half4 _NormalMeshRemap;
			uniform half _NormalMeshValue;
			uniform half _NormalMeshMode;
			uniform half4 _NormalProjRemap;
			uniform half _NormalProjValue;
			uniform half _NormalLandOffsetValue;
			uniform half _NormalLandValue;
			uniform half _NormalLandMode;
			uniform half _NormalBlanketInfo;
			uniform half _DisableSRPBatcher;
			uniform half _SubsurfaceCategory;
			uniform half _SubsurfaceEnd;
			uniform half _SubsurfaceDirectValue;
			uniform half _SubsurfaceNormalValue;
			uniform half _SubsurfaceAmbientValue;
			uniform half _SubsurfaceShadowValue;
			uniform half _SubsurfaceElementMode;
			uniform half _EmissiveCategory;
			uniform half _EmissiveEnd;
			uniform half _EmissivePowerMode;
			uniform half _EmissivePowerValue;
			uniform half _EmissiveElementMode;
			uniform half _EmissiveFlagMode;
			uniform half _DitherCategory;
			uniform half _DitherEnd;
			uniform half _CutoutCategory;
			uniform half _CutoutEnd;
			uniform half _CutoutElementMode;
			uniform half _CutoutBakeMode;
			uniform half _WetnessCategory;
			uniform half _WetnessEnd;
			uniform half _WetnessElementMode;
			uniform half _WetnessBakeMode;
			uniform half _OverlayCategory;
			uniform half _OverlayEnd;
			uniform half _OverlaySpace;
			uniform half _OverlayElementMode;
			uniform half _OverlayBakeMode;
			uniform half _DrynessCategory;
			uniform half _DrynessEnd;
			uniform half _DrynessSpace;
			uniform half _DrynessElementMode;
			uniform half _DrynessBakeMode;
			uniform half _TintingCategory;
			uniform half _TintingEnd;
			uniform half _TintingSpace;
			uniform half _TintingBakeMode;
			uniform half _VariationCategory;
			uniform half _VariationEnd;
			uniform half _GradientCategory;
			uniform half _GradientEnd;
			uniform half _GradientBakeMode;
			uniform half _OcclusionCategory;
			uniform half _OcclusionEnd;
			uniform half _OcclusionBakeMode;
			uniform half _TerrainCategory;
			uniform half _TerrainEnd;
			uniform half _TerrainFormInfo;
			uniform half _ThirdElementMode;
			uniform half _DetailCategory;
			uniform half _DetailEnd;
			uniform half _ThirdSampleMode;
			uniform half _ThirdCoordMode;
			uniform half4 _ThirdCoordValue;
			uniform half _ThirdMaskSampleMode;
			uniform half _ThirdMaskCoordMode;
			uniform half4 _ThirdMaskCoordValue;
			uniform half _ThirdBakeMode;
			uniform half _LayerCategory;
			uniform half _LayerEnd;
			uniform half _SecondSampleMode;
			uniform half _SecondCoordMode;
			uniform half4 _SecondCoordValue;
			uniform half _SecondMaskSampleMode;
			uniform half _SecondMaskCoordMode;
			uniform half4 _SecondMaskCoordValue;
			uniform half _SecondElementMode;
			uniform half _SecondBakeMode;
			uniform half _MainCategory;
			uniform half _MainEnd;
			uniform half _MainSampleMode;
			uniform half _MainCoordMode;
			uniform half4 _MainCoordValue;
			uniform half _MainMultiMaskInfo;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainAlbedoTex);
			SamplerState sampler_Linear_Repeat_Aniso8;
			SamplerState sampler_Point_Repeat;
			uniform half4 _main_coord_value;
			uniform half _MainAlbedoValue;
			uniform half4 _MainColorTwo;
			uniform half4 _MainColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainShaderTex);
			uniform half _MainMetallicValue;
			uniform half _MainOcclusionValue;
			uniform half _MainSmoothnessValue;
			uniform half4 _MainMultiRemap;
			uniform half _MainColorMode;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainNormalTex);
			uniform half _MainNormalValue;
			uniform half _MainAlphaClipValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondAlbedoTex);
			uniform half4 _second_coord_value;
			uniform half _SecondAlbedoValue;
			uniform half4 _SecondColorTwo;
			uniform half4 _SecondColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondShaderTex);
			uniform half _SecondMetallicValue;
			uniform half _SecondOcclusionValue;
			uniform half _SecondSmoothnessValue;
			uniform half4 _SecondMultiRemap;
			uniform half _SecondColorMode;
			uniform half _SecondBlendAlbedoValue;
			uniform half _SecondIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondMaskTex);
			uniform half4 _second_mask_coord_value;
			uniform half4 _SecondMaskRemap;
			uniform half _SecondMaskValue;
			uniform half4 _SecondProjRemap;
			uniform half _SecondProjValue;
			uniform half4 _second_vert_mode;
			uniform half4 _SecondMeshRemap;
			uniform half _SecondMeshValue;
			uniform half _SecondMeshMode;
			uniform half4 _SecondBlendRemap;
			uniform half _SecondBlendIntensityValue;
			uniform half _SecondBlendNormalValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondNormalTex);
			uniform half _SecondNormalValue;
			uniform half _SecondBlendShaderValue;
			uniform half _SecondAlphaClipValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdAlbedoTex);
			uniform half4 _third_coord_value;
			uniform half _ThirdAlbedoValue;
			uniform half4 _ThirdColorTwo;
			uniform half4 _ThirdColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdShaderTex);
			uniform half _ThirdMetallicValue;
			uniform half _ThirdOcclusionValue;
			uniform half _ThirdSmoothnessValue;
			uniform half4 _ThirdMultiRemap;
			uniform half _ThirdColorMode;
			uniform half _ThirdBlendAlbedoValue;
			uniform half _ThirdIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdMaskTex);
			uniform half4 _third_mask_coord_value;
			uniform half4 _ThirdMaskRemap;
			uniform half _ThirdMaskValue;
			uniform half4 _third_vert_mode;
			uniform half4 _ThirdMeshRemap;
			uniform half _ThirdMeshValue;
			uniform half _ThirdMeshMode;
			uniform half4 _ThirdProjRemap;
			uniform half _ThirdProjValue;
			uniform half4 _ThirdBlendRemap;
			uniform half _ThirdBlendIntensityValue;
			uniform half _ThirdBlendNormalValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdNormalTex);
			uniform half _ThirdNormalValue;
			uniform half _ThirdBlendShaderValue;
			uniform half _ThirdAlphaClipValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex1);
			uniform half4 _TerrainPosition;
			uniform half4 _TerrainSize;
			float4 _TerrainControlTex1_TexelSize;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex1);
			uniform half4 _TerrainCoord1;
			uniform half4 _TerrainShaderMin1;
			uniform half4 _TerrainShaderMax1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex2);
			uniform half4 _TerrainCoord2;
			uniform half4 _TerrainShaderMin2;
			uniform half4 _TerrainShaderMax2;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex3);
			uniform half4 _TerrainCoord3;
			uniform half4 _TerrainShaderMin3;
			uniform half4 _TerrainShaderMax3;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex4);
			uniform half4 _TerrainCoord4;
			uniform half4 _TerrainShaderMin4;
			uniform half4 _TerrainShaderMax4;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex5);
			uniform half4 _TerrainCoord5;
			uniform half4 _TerrainShaderMin5;
			uniform half4 _TerrainShaderMax5;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex6);
			uniform half4 _TerrainCoord6;
			uniform half4 _TerrainShaderMin6;
			uniform half4 _TerrainShaderMax6;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex7);
			uniform half4 _TerrainCoord7;
			uniform half4 _TerrainShaderMin7;
			uniform half4 _TerrainShaderMax7;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex8);
			uniform half4 _TerrainCoord8;
			uniform half4 _TerrainShaderMin8;
			uniform half4 _TerrainShaderMax8;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex9);
			uniform half4 _TerrainCoord9;
			uniform half4 _TerrainShaderMin9;
			uniform half4 _TerrainShaderMax9;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex10);
			uniform half4 _TerrainCoord10;
			uniform half4 _TerrainShaderMin10;
			uniform half4 _TerrainShaderMax10;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex11);
			uniform half4 _TerrainCoord11;
			uniform half4 _TerrainShaderMin11;
			uniform half4 _TerrainShaderMax11;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex12);
			uniform half4 _TerrainCoord12;
			uniform half4 _TerrainShaderMin12;
			uniform half4 _TerrainShaderMax12;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex13);
			uniform half4 _TerrainCoord13;
			uniform half4 _TerrainShaderMin13;
			uniform half4 _TerrainShaderMax13;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex14);
			uniform half4 _TerrainCoord14;
			uniform half4 _TerrainShaderMin14;
			uniform half4 _TerrainShaderMax14;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex15);
			uniform half4 _TerrainCoord15;
			uniform half4 _TerrainShaderMin15;
			uniform half4 _TerrainShaderMax15;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex16);
			uniform half4 _TerrainCoord16;
			uniform half4 _TerrainShaderMin16;
			uniform half4 _TerrainShaderMax16;
			uniform half _TerrainHeightBlendValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex16);
			uniform half4 _TerrainColor1;
			uniform half4 _TerrainColor2;
			uniform half4 _TerrainColor3;
			uniform half4 _TerrainColor4;
			uniform half4 _TerrainColor5;
			uniform half4 _TerrainColor6;
			uniform half4 _TerrainColor7;
			uniform half4 _TerrainColor8;
			uniform half4 _TerrainColor9;
			uniform half4 _TerrainColor10;
			uniform half4 _TerrainColor11;
			uniform half4 _TerrainColor12;
			uniform half4 _TerrainColor13;
			uniform half4 _TerrainColor14;
			uniform half4 _TerrainColor15;
			uniform half4 _TerrainColor16;
			uniform half4 _TerrainColor;
			uniform half _TerrainIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainMaskTex);
			uniform half4 _terrain_mask_coord_value;
			uniform half _TerrainMaskSampleMode;
			uniform half _TerrainMaskCoordMode;
			uniform half4 _TerrainMaskCoordValue;
			uniform half4 _TerrainMaskRemap;
			uniform half _TerrainMaskValue;
			uniform half4 _TerrainProjRemap;
			uniform half _TerrainProjValue;
			uniform float _TerrainLandOffsetValue;
			uniform float _TerrainLandValue;
			uniform half _TerrainLandMode;
			uniform half4 _TerrainBlendRemap;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex16);
			uniform half4 _TerrainParams1;
			uniform half4 _TerrainParams2;
			uniform half4 _TerrainParams3;
			uniform half4 _TerrainParams4;
			uniform half4 _TerrainParams5;
			uniform half4 _TerrainParams6;
			uniform half4 _TerrainParams7;
			uniform half4 _TerrainParams8;
			uniform half4 _TerrainParams9;
			uniform half4 _TerrainParams10;
			uniform half4 _TerrainParams11;
			uniform half4 _TerrainParams12;
			uniform half4 _TerrainParams13;
			uniform half4 _TerrainParams14;
			uniform half4 _TerrainParams15;
			uniform half4 _TerrainParams16;
			uniform half _TerrainNormalValue;
			uniform half _TerrainMetallicValue;
			uniform half _TerrainOcclusionValue;
			uniform half _TerrainSmoothnessValue;
			uniform half4 _TerrainSpecular1;
			uniform half4 _TerrainSpecular2;
			uniform half4 _TerrainSpecular3;
			uniform half4 _TerrainSpecular4;
			uniform half4 _TerrainSpecular5;
			uniform half4 _TerrainSpecular6;
			uniform half4 _TerrainSpecular7;
			uniform half4 _TerrainSpecular8;
			uniform half4 _TerrainSpecular9;
			uniform half4 _TerrainSpecular10;
			uniform half4 _TerrainSpecular11;
			uniform half4 _TerrainSpecular12;
			uniform half4 _TerrainSpecular13;
			uniform half4 _TerrainSpecular14;
			uniform half4 _TerrainSpecular15;
			uniform half4 _TerrainSpecular16;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainHolesTex);
			uniform half4 _OcclusionColorTwo;
			uniform half4 _OcclusionColorOne;
			uniform half4 _occlusion_vert_mode;
			uniform half4 _OcclusionMeshRemap;
			uniform half _OcclusionMeshMode;
			uniform half _OcclusionIntensityValue;
			uniform half4 _GradientColorTwo;
			uniform half4 _GradientColorOne;
			uniform half4 _gradient_vert_mode;
			uniform half4 _GradientMeshRemap;
			uniform half _GradientMeshMode;
			uniform half _GradientIntensityValue;
			uniform half _GradientMultiValue;
			uniform half4 _VariationColorTwo;
			uniform half4 _VariationColorOne;
			uniform half _VariationNoisePivotValue;
			uniform half _VariationNoiseTillingValue;
			uniform half4 _VariationNoiseRemap;
			uniform half _VariationIntensityValue;
			uniform half _VariationMultiValue;
			uniform half _TintingElementMode;
			uniform half _TintingGrayValue;
			uniform float4 _TintingColor;
			uniform half _TintingIntensityValue;
			uniform half _TintingMultiValue;
			uniform half4 _TintingLumaRemap;
			uniform half _TintingLumaValue;
			uniform half4 _tinting_vert_mode;
			uniform half4 _TintingMeshRemap;
			uniform half _TintingMeshValue;
			uniform half _TintingMeshMode;
			uniform half4 _TintingBlendRemap;
			uniform half _DrynessGrayValue;
			uniform half _DrynessShiftValue;
			uniform float4 _DrynessColor;
			uniform half _DrynessIntensityValue;
			uniform half _DrynessMultiValue;
			uniform half4 _DrynessLumaRemap;
			uniform half _DrynessLumaValue;
			uniform half4 _dryness_vert_mode;
			uniform half4 _DrynessMeshRemap;
			uniform half _DrynessMeshValue;
			uniform half _DrynessMeshMode;
			uniform half4 _DrynessBlendRemap;
			uniform half _DrynessSmoothnessValue;
			uniform half _DrynessSubsurfaceValue;
			uniform half3 _motion_highlight_color;
			uniform half _MotionHighlightValue;
			uniform half4 _MotionHighlightColor;
			uniform half4 _OverlayColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayAlbedoTex);
			uniform half4 _overlay_coord_value;
			uniform half _OverlaySampleMode;
			uniform half _OverlayCoordMode;
			uniform half4 _OverlayCoordValue;
			uniform half _OverlayTextureMode;
			uniform half _OverlayGlitterIntensityValue;
			uniform half4 _OverlayGlitterColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayGlitterTexRT);
			uniform half _OverlayGlitterTillingValue;
			uniform half _OverlayGlitterDistValue;
			uniform half _OverlayIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayMaskTex);
			uniform half4 _overlay_mask_coord_value;
			uniform half _OverlayMaskSampleMode;
			uniform half _OverlayMaskCoordMode;
			uniform half4 _OverlayMaskCoordValue;
			uniform half4 _OverlayMaskRemap;
			uniform half _OverlayMaskValue;
			uniform half4 _OverlayProjRemap;
			uniform half _OverlayProjValue;
			uniform half4 _OverlayLumaRemap;
			uniform half _OverlayLumaValue;
			uniform half4 _overlay_vert_mode;
			uniform half4 _OverlayMeshRemap;
			uniform half _OverlayMeshValue;
			uniform half _OverlayMeshMode;
			uniform half4 _OverlayBlendRemap1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayNormalTex);
			uniform half _OverlayNormalValue;
			uniform half _OverlaySmoothnessValue;
			uniform half _OverlaySubsurfaceValue;
			uniform half4 _WetnessWaterColor;
			uniform half _WetnessWaterIntensityValue;
			uniform half _WetnessIntensityValue;
			uniform half4 _wetness_vert_mode;
			uniform half4 _WetnessMeshRemap;
			uniform half _WetnessMeshValue;
			uniform half _WetnessMeshMode;
			uniform half4 _wetness_water_vert_mode;
			uniform half4 _WetnessWaterMeshRemap;
			uniform half _WetnessWaterMeshValue;
			uniform half _WetnessWaterMeshMode;
			uniform half _WetnessWaterBaseValue;
			uniform half4 _WetnessWaterBlendRemap;
			uniform half _WetnessContrastValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_WetnessDropsTexRT);
			uniform half _WetnessDropsTillingValue;
			uniform half _WetnessDropsIntensityValue;
			uniform half _WetnessDropsNormalValue;
			uniform half _WetnessDropsDistValue;
			uniform half4 _wetness_drops_vert_mode;
			uniform half4 _WetnessDropsMeshRemap;
			uniform half _WetnessDropsMeshValue;
			uniform half _WetnessDropsMeshMode;
			uniform half _WetnessSmoothnessValue;
			uniform half _CutoutIntensityValue;
			uniform half _CutoutAlphaValue;
			uniform half _CutoutNoiseTillingValue;
			uniform half _CutoutNoiseValue;
			uniform half4 _cutout_vert_mode;
			uniform half4 _CutoutMeshRemap;
			uniform half _CutoutMeshValue;
			uniform half _CutoutMeshMode;
			uniform half _CutoutMultiValue;
			uniform half _DitherConstantValue;
			uniform half _DitherProximityMaxValue;
			uniform half _DitherProximityMinValue;
			uniform half _DitherProximityValue;
			uniform half _DitherDistanceMinValue;
			uniform half _DitherDistanceMaxValue;
			uniform half _DitherDistanceValue;
			uniform half _DitherGlancingAngleValue;
			uniform half _DitherGlancingValue;
			uniform half _DitherNoiseTillingValue;
			uniform half _DitherMultiValue;
			uniform half4 _emissive_vert_mode;
			uniform half4 _EmissiveMeshRemap;
			uniform half _EmissiveMeshValue;
			uniform half _EmissiveMeshMode;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_EmissiveMaskTex);
			uniform half4 _emissive_coord_value;
			uniform half _EmissiveSampleMode;
			uniform half _EmissiveCoordMode;
			uniform half4 _EmissiveCoordValue;
			uniform half4 _EmissiveMaskRemap;
			uniform half _EmissiveMaskValue;
			uniform half _EmissiveIntensityValue;
			uniform half4 _EmissiveColor;
			uniform half _EmissiveColorMode;
			uniform float _emissive_power_value;
			uniform half4 _SubsurfaceColor;
			uniform half _SubsurfaceIntensityValue;
			uniform half _SubsurfaceMultiValue;
			uniform half3 TVE_MainLightDirection;
			uniform half _SubsurfaceAproxInfo;


			float2 DecodeFloatToVector2( float enc )
			{
				float2 result ;
				result.y = enc % 2048;
				result.x = floor(enc / 2048);
				return result / (2048 - 1);
			}
			
			float3 ASESafeNormalize(float3 inVec)
			{
				float dp3 = max(1.175494351e-38, dot(inVec, inVec));
				return inVec* rsqrt(dp3);
			}
			
			void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
			{
				ZX = WorldPosition.xz * Coords.xx - Coords.zz;
				ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
				XY = WorldPosition.xy * Coords.xy - Coords.zw;
			}
			
			half4 SampleMain( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, half2 TexCoord )
			{
				half2 UV = TexCoord * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			half4 SampleExtra( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, half2 TexCoord )
			{
				half2 UV = TexCoord * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			half4 SamplePlanar2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
			{
				half3 powNormal = abs( WorldNormal.xyz );
				half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
				weights /= ( weights.x + weights.y + weights.z ).xxx;
				T1 = weights.y;
				T2 = weights.x;
				T3 = weights.z;
			}
			
			half4 SamplePlanar3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
				half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
				half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
				return tex1 * T1 + tex2 * T2 + tex3 * T3;
			}
			
			void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
			{
				half2 vertex1, vertex2, vertex3;
				// Scaling of the input
				half2 uv = UV * 3.464; // 2 * sqrt (3)
				// Skew input space into simplex triangle grid
				const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
				half2 skewedCoord = mul( gridToSkewedGrid, uv );
				// Compute local triangle vertex IDs and local barycentric coordinates
				int2 baseId = int2( floor( skewedCoord ) );
				half3 temp = half3( frac( skewedCoord ), 0 );
				temp.z = 1.0 - temp.x - temp.y;
				if ( temp.z > 0.0 )
				{
					W1 = temp.z;
					W2 = temp.y;
					W3 = temp.x;
					vertex1 = baseId;
					vertex2 = baseId + int2( 0, 1 );
					vertex3 = baseId + int2( 1, 0 );
				}
				else
				{
					W1 = -temp.z;
					W2 = 1.0 - temp.y;
					W3 = 1.0 - temp.x;
					vertex1 = baseId + int2( 1, 1 );
					vertex2 = baseId + int2( 1, 0 );
					vertex3 = baseId + int2( 0, 1 );
				}
				UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
				UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
				UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
				return;
			}
			
			float4 SampleStochastic2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
				half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
				half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
				half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
				return tex1 * W1 + tex2 * W2 + tex3 * W3;
			}
			
			half4 SampleStochastic3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				half4 tex1, tex2, tex3;
				ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
				half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
				half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
				half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				return texZX * T1 + texZY * T2 + texXY * T3;
			}
			
			half3 HSVToRGB( half3 c )
			{
				half4 K = half4( 1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0 );
				half3 p = abs( frac( c.xxx + K.xyz ) * 6.0 - K.www );
				return c.z * lerp( K.xxx, saturate( p - K.xxx ), c.y );
			}
			
			half3 RGBToHSV(half3 c)
			{
				half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
				half4 p = lerp( half4( c.bg, K.wz ), half4( c.gb, K.xy ), step( c.b, c.g ) );
				half4 q = lerp( half4( p.xyw, c.r ), half4( c.r, p.yzx ), step( p.x, c.r ) );
				half d = q.x - min( q.w, q.y );
				half e = 1.0e-10;
				return half3( abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
			}

			v2f VertexFunction (appdata v  ) {
				UNITY_SETUP_INSTANCE_ID(v);
				v2f o;
				UNITY_INITIALIZE_OUTPUT(v2f,o);
				UNITY_TRANSFER_INSTANCE_ID(v,o);
				UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);

				TVEModelData Data16_g174866 = (TVEModelData)0;
				float In_Dummy16_g174866 = 0.0;
				TVEModelData Data16_g174843 = (TVEModelData)0;
				half Dummy1575_g174841 = ( _NormalCategory + _NormalEnd + _NormalSpace );
				float In_Dummy16_g174843 = Dummy1575_g174841;
				TVEModelData Data16_g174820 = (TVEModelData)0;
				float In_Dummy16_g174820 = 0.0;
				TVEModelData Data16_g174801 = (TVEModelData)0;
				half Dummy181_g174798 = ( _BlanketCategory + _BlanketEnd + _BlanketInfo );
				float In_Dummy16_g174801 = Dummy181_g174798;
				TVEModelData Data16_g174577 = (TVEModelData)0;
				half Dummy181_g174563 = ( ( _MotionWindCategory + _MotionWindEnd ) + ( _MotionInteractionCategory + _MotionInteractionEnd ) + _MotionWindMode + _MotionWindElementMode + _MotionPushElementMode + ( _MotionWindOffInfo + _MotionWindOptimizedInfo + _MotionWindAdvancedInfo ) );
				float In_Dummy16_g174577 = Dummy181_g174563;
				TVEModelData Data16_g174422 = (TVEModelData)0;
				half Dummy181_g174419 = ( _SizeFadeCategory + _SizeFadeEnd + _SizeFadeElementMode );
				float In_Dummy16_g174422 = Dummy181_g174419;
				TVEModelData Data16_g174385 = (TVEModelData)0;
				half Dummy181_g174382 = ( _PerspectiveCategory + _PerspectiveEnd );
				float In_Dummy16_g174385 = Dummy181_g174382;
				TVEModelData Data16_g174346 = (TVEModelData)0;
				float In_Dummy16_g174346 = 0.0;
				TVEModelData Data16_g164565 = (TVEModelData)0;
				half Dummy207_g164551 = ( _ObjectCategory + _ObjectEnd + _ObjectModelMode + _ObjectPivotMode + _ObjectPhaseMode + _ObjectBoundsInfo );
				float In_Dummy16_g164565 = Dummy207_g164551;
				half3 PositionOS131_g164551 = v.vertex.xyz;
				float3 In_PositionOS16_g164565 = PositionOS131_g164551;
				float3 ase_worldPos = mul(unity_ObjectToWorld, float4( (v.vertex).xyz, 1 )).xyz;
				float3 vertexToFrag73_g164551 = ase_worldPos;
				half3 PositionWS122_g164551 = vertexToFrag73_g164551;
				float3 In_PositionWS16_g164565 = PositionWS122_g164551;
				float4x4 break19_g164553 = unity_ObjectToWorld;
				float3 appendResult20_g164553 = (float3(break19_g164553[ 0 ][ 3 ] , break19_g164553[ 1 ][ 3 ] , break19_g164553[ 2 ][ 3 ]));
				half3 ObjectData20_g164555 = appendResult20_g164553;
				half3 WorldData19_g164555 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g164555 = WorldData19_g164555;
				#else
				float3 staticSwitch14_g164555 = ObjectData20_g164555;
				#endif
				float3 temp_output_124_0_g164553 = staticSwitch14_g164555;
				float3 temp_output_239_7_g164551 = temp_output_124_0_g164553;
				float4x4 break19_g164557 = unity_ObjectToWorld;
				float3 appendResult20_g164557 = (float3(break19_g164557[ 0 ][ 3 ] , break19_g164557[ 1 ][ 3 ] , break19_g164557[ 2 ][ 3 ]));
				float3 _Vector0 = float3(0,0,0);
				float3 appendResult60_g164561 = (float3(v.ase_texcoord3.x , 0.0 , v.ase_texcoord3.y));
				float3 break233_g164551 = PositionOS131_g164551;
				float3 appendResult234_g164551 = (float3(break233_g164551.x , 0.0 , break233_g164551.z));
				#if defined( TVE_PIVOT_OFF )
				float3 staticSwitch229_g164551 = _Vector0;
				#elif defined( TVE_PIVOT_BAKED )
				float3 staticSwitch229_g164551 = appendResult60_g164561;
				#elif defined( TVE_PIVOT_PROC )
				float3 staticSwitch229_g164551 = appendResult234_g164551;
				#else
				float3 staticSwitch229_g164551 = _Vector0;
				#endif
				half3 PivotOS149_g164551 = staticSwitch229_g164551;
				float3 temp_output_122_0_g164557 = PivotOS149_g164551;
				float3 PivotsOnly105_g164557 = (mul( unity_ObjectToWorld, float4( temp_output_122_0_g164557 , 0.0 ) ).xyz).xyz;
				half3 ObjectData20_g164559 = ( appendResult20_g164557 + PivotsOnly105_g164557 );
				half3 WorldData19_g164559 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g164559 = WorldData19_g164559;
				#else
				float3 staticSwitch14_g164559 = ObjectData20_g164559;
				#endif
				float3 temp_output_124_0_g164557 = staticSwitch14_g164559;
				float3 temp_output_237_7_g164551 = temp_output_124_0_g164557;
				#if defined( TVE_PIVOT_OFF )
				float3 staticSwitch236_g164551 = temp_output_239_7_g164551;
				#elif defined( TVE_PIVOT_BAKED )
				float3 staticSwitch236_g164551 = temp_output_237_7_g164551;
				#elif defined( TVE_PIVOT_PROC )
				float3 staticSwitch236_g164551 = temp_output_237_7_g164551;
				#else
				float3 staticSwitch236_g164551 = temp_output_239_7_g164551;
				#endif
				float3 vertexToFrag76_g164551 = staticSwitch236_g164551;
				half3 PivotWS121_g164551 = vertexToFrag76_g164551;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g164551 = ( PositionWS122_g164551 - PivotWS121_g164551 );
				#else
				float3 staticSwitch204_g164551 = PositionWS122_g164551;
				#endif
				half3 PositionWO132_g164551 = ( staticSwitch204_g164551 - TVE_WorldOrigin );
				float3 In_PositionWO16_g164565 = PositionWO132_g164551;
				float3 In_PositionRawOS16_g164565 = PositionOS131_g164551;
				float3 In_PositionAddOS16_g164565 = float3( 0,0,0 );
				float3 In_PivotOS16_g164565 = PivotOS149_g164551;
				float3 In_PivotWS16_g164565 = PivotWS121_g164551;
				half3 PivotWO133_g164551 = ( PivotWS121_g164551 - TVE_WorldOrigin );
				float3 In_PivotWO16_g164565 = PivotWO133_g164551;
				half3 NormalOS134_g164551 = v.normal;
				float3 In_NormalOS16_g164565 = NormalOS134_g164551;
				float3 ase_worldNormal = UnityObjectToWorldNormal(v.normal);
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g164551 = normalizedWorldNormal;
				float3 In_NormalWS16_g164565 = Normal_WS95_g164551;
				float3 In_NormalRawOS16_g164565 = NormalOS134_g164551;
				float3 objToWorldDir298_g164551 = normalize( mul( unity_ObjectToWorld, float4( v.normal, 0 ) ).xyz );
				half3 Normal_RawWS136_g164551 = objToWorldDir298_g164551;
				float3 In_NormalRawWS16_g164565 = Normal_RawWS136_g164551;
				half4 TangentlOS153_g164551 = v.tangent;
				float4 In_TangentOS16_g164565 = TangentlOS153_g164551;
				float3 normalizeResult296_g164551 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g164551 ) );
				half3 ViewDirWS169_g164551 = normalizeResult296_g164551;
				float3 In_ViewDirWS16_g164565 = ViewDirWS169_g164551;
				half4 VertexMasks171_g164551 = v.ase_color;
				float4 In_VertexData16_g164565 = VertexMasks171_g164551;
				float4 break33_g164564 = _object_phase_mode;
				float temp_output_30_0_g164564 = ( v.ase_color.r * break33_g164564.x );
				float temp_output_29_0_g164564 = ( v.ase_color.g * break33_g164564.y );
				float temp_output_31_0_g164564 = ( v.ase_color.b * break33_g164564.z );
				float temp_output_28_0_g164564 = ( temp_output_30_0_g164564 + temp_output_29_0_g164564 + temp_output_31_0_g164564 + ( v.ase_color.a * break33_g164564.w ) );
				float3 break243_g164551 = PivotWO133_g164551;
				float temp_output_315_0_g164551 = (frac( ( temp_output_28_0_g164564 + ( break243_g164551.x + break243_g164551.z ) ) )*2.0 + -1.0);
				float4 appendResult177_g164551 = (float4(1.0 , 1.0 , temp_output_315_0_g164551 , 1.0));
				half4 MotionMasks176_g164551 = appendResult177_g164551;
				float4 In_MotionData16_g164565 = MotionMasks176_g164551;
				half Object_HeightValue267_g164551 = _ObjectHeightValue;
				half Object_RadiusValue268_g164551 = _ObjectRadiusValue;
				half Bounds_HeightMask274_g164551 = saturate( ( (PositionOS131_g164551).y / Object_HeightValue267_g164551 ) );
				half Bounds_SphereMask282_g164551 = saturate( ( length( PositionOS131_g164551 ) / max( Object_HeightValue267_g164551 , Object_RadiusValue268_g164551 ) ) );
				float4 appendResult253_g164551 = (float4(Object_HeightValue267_g164551 , Object_RadiusValue268_g164551 , Bounds_HeightMask274_g164551 , Bounds_SphereMask282_g164551));
				half4 BoundsData254_g164551 = appendResult253_g164551;
				float4 In_BoundsData16_g164565 = BoundsData254_g164551;
				float4 In_RotationData16_g164565 = float4( 0,0,0,0 );
				Data16_g164565.Dummy = In_Dummy16_g164565;
				Data16_g164565.PositionOS = In_PositionOS16_g164565;
				Data16_g164565.PositionWS = In_PositionWS16_g164565;
				Data16_g164565.PositionWO = In_PositionWO16_g164565;
				Data16_g164565.PositionRawOS = In_PositionRawOS16_g164565;
				Data16_g164565.PositionAddOS = In_PositionAddOS16_g164565;
				Data16_g164565.PivotOS = In_PivotOS16_g164565;
				Data16_g164565.PivotWS = In_PivotWS16_g164565;
				Data16_g164565.PivotWO = In_PivotWO16_g164565;
				Data16_g164565.NormalOS = In_NormalOS16_g164565;
				Data16_g164565.NormalWS = In_NormalWS16_g164565;
				Data16_g164565.NormalRawOS = In_NormalRawOS16_g164565;
				Data16_g164565.NormalRawWS = In_NormalRawWS16_g164565;
				Data16_g164565.TangentOS = In_TangentOS16_g164565;
				Data16_g164565.ViewDirWS = In_ViewDirWS16_g164565;
				Data16_g164565.VertexData = In_VertexData16_g164565;
				Data16_g164565.MotionData = In_MotionData16_g164565;
				Data16_g164565.BoundsData = In_BoundsData16_g164565;
				Data16_g164565.RotationData = In_RotationData16_g164565;
				TVEModelData Data15_g174347 = Data16_g164565;
				float Out_Dummy15_g174347 = 0;
				float3 Out_PositionOS15_g174347 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174347 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174347 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174347 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174347 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174347 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174347 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174347 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174347 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174347 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174347 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174347 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174347 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174347 = float3( 0,0,0 );
				float4 Out_VertexData15_g174347 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174347 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174347 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174347 = float4( 0,0,0,0 );
				Out_Dummy15_g174347 = Data15_g174347.Dummy;
				Out_PositionOS15_g174347 = Data15_g174347.PositionOS;
				Out_PositionWS15_g174347 = Data15_g174347.PositionWS;
				Out_PositionWO15_g174347 = Data15_g174347.PositionWO;
				Out_PositionRawOS15_g174347 = Data15_g174347.PositionRawOS;
				Out_PositionAddOS15_g174347 = Data15_g174347.PositionAddOS;
				Out_PivotOS15_g174347 = Data15_g174347.PivotOS;
				Out_PivotWS15_g174347 = Data15_g174347.PivotWS;
				Out_PivotWO15_g174347 = Data15_g174347.PivotWO;
				Out_NormalOS15_g174347 = Data15_g174347.NormalOS;
				Out_NormalWS15_g174347 = Data15_g174347.NormalWS;
				Out_NormalRawOS15_g174347 = Data15_g174347.NormalRawOS;
				Out_NormalRawWS15_g174347 = Data15_g174347.NormalRawWS;
				Out_TangentOS15_g174347 = Data15_g174347.TangentOS;
				Out_ViewDirWS15_g174347 = Data15_g174347.ViewDirWS;
				Out_VertexData15_g174347 = Data15_g174347.VertexData;
				Out_MotionData15_g174347 = Data15_g174347.MotionData;
				Out_BoundsData15_g174347 = Data15_g174347.BoundsData;
				Out_RotationData15_g174347 = Data15_g174347.RotationData;
				float3 temp_output_218_24_g174345 = Out_PivotOS15_g174347;
				float3 In_PositionOS16_g174346 = ( Out_PositionOS15_g174347 - temp_output_218_24_g174345 );
				float3 In_PositionWS16_g174346 = Out_PositionWS15_g174347;
				float3 In_PositionWO16_g174346 = Out_PositionWO15_g174347;
				float3 In_PositionRawOS16_g174346 = Out_PositionRawOS15_g174347;
				float3 In_PositionAddOS16_g174346 = Out_PositionAddOS15_g174347;
				float3 In_PivotOS16_g174346 = temp_output_218_24_g174345;
				float3 In_PivotWS16_g174346 = Out_PivotWS15_g174347;
				float3 In_PivotWO16_g174346 = Out_PivotWO15_g174347;
				float3 In_NormalOS16_g174346 = Out_NormalOS15_g174347;
				float3 In_NormalWS16_g174346 = Out_NormalWS15_g174347;
				float3 In_NormalRawOS16_g174346 = Out_NormalRawOS15_g174347;
				float3 In_NormalRawWS16_g174346 = Out_NormalRawWS15_g174347;
				float4 In_TangentOS16_g174346 = Out_TangentOS15_g174347;
				float3 In_ViewDirWS16_g174346 = Out_ViewDirWS15_g174347;
				float4 In_VertexData16_g174346 = Out_VertexData15_g174347;
				float4 In_MotionData16_g174346 = Out_MotionData15_g174347;
				float4 In_BoundsData16_g174346 = Out_BoundsData15_g174347;
				float4 In_RotationData16_g174346 = Out_RotationData15_g174347;
				Data16_g174346.Dummy = In_Dummy16_g174346;
				Data16_g174346.PositionOS = In_PositionOS16_g174346;
				Data16_g174346.PositionWS = In_PositionWS16_g174346;
				Data16_g174346.PositionWO = In_PositionWO16_g174346;
				Data16_g174346.PositionRawOS = In_PositionRawOS16_g174346;
				Data16_g174346.PositionAddOS = In_PositionAddOS16_g174346;
				Data16_g174346.PivotOS = In_PivotOS16_g174346;
				Data16_g174346.PivotWS = In_PivotWS16_g174346;
				Data16_g174346.PivotWO = In_PivotWO16_g174346;
				Data16_g174346.NormalOS = In_NormalOS16_g174346;
				Data16_g174346.NormalWS = In_NormalWS16_g174346;
				Data16_g174346.NormalRawOS = In_NormalRawOS16_g174346;
				Data16_g174346.NormalRawWS = In_NormalRawWS16_g174346;
				Data16_g174346.TangentOS = In_TangentOS16_g174346;
				Data16_g174346.ViewDirWS = In_ViewDirWS16_g174346;
				Data16_g174346.VertexData = In_VertexData16_g174346;
				Data16_g174346.MotionData = In_MotionData16_g174346;
				Data16_g174346.BoundsData = In_BoundsData16_g174346;
				Data16_g174346.RotationData = In_RotationData16_g174346;
				TVEModelData Data15_g174383 = Data16_g174346;
				float Out_Dummy15_g174383 = 0;
				float3 Out_PositionOS15_g174383 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174383 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174383 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174383 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174383 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174383 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174383 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174383 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174383 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174383 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174383 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174383 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174383 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174383 = float3( 0,0,0 );
				float4 Out_VertexData15_g174383 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174383 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174383 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174383 = float4( 0,0,0,0 );
				Out_Dummy15_g174383 = Data15_g174383.Dummy;
				Out_PositionOS15_g174383 = Data15_g174383.PositionOS;
				Out_PositionWS15_g174383 = Data15_g174383.PositionWS;
				Out_PositionWO15_g174383 = Data15_g174383.PositionWO;
				Out_PositionRawOS15_g174383 = Data15_g174383.PositionRawOS;
				Out_PositionAddOS15_g174383 = Data15_g174383.PositionAddOS;
				Out_PivotOS15_g174383 = Data15_g174383.PivotOS;
				Out_PivotWS15_g174383 = Data15_g174383.PivotWS;
				Out_PivotWO15_g174383 = Data15_g174383.PivotWO;
				Out_NormalOS15_g174383 = Data15_g174383.NormalOS;
				Out_NormalWS15_g174383 = Data15_g174383.NormalWS;
				Out_NormalRawOS15_g174383 = Data15_g174383.NormalRawOS;
				Out_NormalRawWS15_g174383 = Data15_g174383.NormalRawWS;
				Out_TangentOS15_g174383 = Data15_g174383.TangentOS;
				Out_ViewDirWS15_g174383 = Data15_g174383.ViewDirWS;
				Out_VertexData15_g174383 = Data15_g174383.VertexData;
				Out_MotionData15_g174383 = Data15_g174383.MotionData;
				Out_BoundsData15_g174383 = Data15_g174383.BoundsData;
				Out_RotationData15_g174383 = Data15_g174383.RotationData;
				half3 Model_PositionOS147_g174382 = Out_PositionOS15_g174383;
				float3 ase_worldViewDir = UnityWorldSpaceViewDir(ase_worldPos);
				ase_worldViewDir = Unity_SafeNormalize( ase_worldViewDir );
				float4x4 break117_g174384 = unity_CameraToWorld;
				float3 appendResult118_g174384 = (float3(break117_g174384[ 0 ][ 2 ] , break117_g174384[ 1 ][ 2 ] , break117_g174384[ 2 ][ 2 ]));
				float3 lerpResult209_g174382 = lerp( ase_worldViewDir , -appendResult118_g174384 , unity_OrthoParams.w);
				float3 break201_g174382 = cross( lerpResult209_g174382 , half3(0,1,0) );
				float3 appendResult196_g174382 = (float3(-break201_g174382.z , 0.0 , break201_g174382.x));
				float dotResult189_g174382 = dot( ase_worldViewDir , float3(0,1,0) );
				float saferPower192_g174382 = abs( dotResult189_g174382 );
				#ifdef TVE_PERSPECTIVE
				float3 staticSwitch211_g174382 = ( Model_PositionOS147_g174382 + ( mul( unity_WorldToObject, float4( appendResult196_g174382 , 0.0 ) ).xyz * _PerspectiveIntensityValue * pow( saferPower192_g174382 , _PerspectiveAngleValue ) * saturate( (Model_PositionOS147_g174382).y ) ) );
				#else
				float3 staticSwitch211_g174382 = Model_PositionOS147_g174382;
				#endif
				half3 Final_Position178_g174382 = staticSwitch211_g174382;
				float3 In_PositionOS16_g174385 = Final_Position178_g174382;
				float3 In_PositionWS16_g174385 = Out_PositionWS15_g174383;
				float3 In_PositionWO16_g174385 = Out_PositionWO15_g174383;
				float3 In_PositionRawOS16_g174385 = Out_PositionRawOS15_g174383;
				float3 In_PositionAddOS16_g174385 = Out_PositionAddOS15_g174383;
				float3 In_PivotOS16_g174385 = Out_PivotOS15_g174383;
				float3 In_PivotWS16_g174385 = Out_PivotWS15_g174383;
				float3 In_PivotWO16_g174385 = Out_PivotWO15_g174383;
				float3 In_NormalOS16_g174385 = Out_NormalOS15_g174383;
				float3 In_NormalWS16_g174385 = Out_NormalWS15_g174383;
				float3 In_NormalRawOS16_g174385 = Out_NormalRawOS15_g174383;
				float3 In_NormalRawWS16_g174385 = Out_NormalRawWS15_g174383;
				float4 In_TangentOS16_g174385 = Out_TangentOS15_g174383;
				float3 In_ViewDirWS16_g174385 = Out_ViewDirWS15_g174383;
				float4 In_VertexData16_g174385 = Out_VertexData15_g174383;
				float4 In_MotionData16_g174385 = Out_MotionData15_g174383;
				float4 In_BoundsData16_g174385 = Out_BoundsData15_g174383;
				float4 In_RotationData16_g174385 = Out_RotationData15_g174383;
				Data16_g174385.Dummy = In_Dummy16_g174385;
				Data16_g174385.PositionOS = In_PositionOS16_g174385;
				Data16_g174385.PositionWS = In_PositionWS16_g174385;
				Data16_g174385.PositionWO = In_PositionWO16_g174385;
				Data16_g174385.PositionRawOS = In_PositionRawOS16_g174385;
				Data16_g174385.PositionAddOS = In_PositionAddOS16_g174385;
				Data16_g174385.PivotOS = In_PivotOS16_g174385;
				Data16_g174385.PivotWS = In_PivotWS16_g174385;
				Data16_g174385.PivotWO = In_PivotWO16_g174385;
				Data16_g174385.NormalOS = In_NormalOS16_g174385;
				Data16_g174385.NormalWS = In_NormalWS16_g174385;
				Data16_g174385.NormalRawOS = In_NormalRawOS16_g174385;
				Data16_g174385.NormalRawWS = In_NormalRawWS16_g174385;
				Data16_g174385.TangentOS = In_TangentOS16_g174385;
				Data16_g174385.ViewDirWS = In_ViewDirWS16_g174385;
				Data16_g174385.VertexData = In_VertexData16_g174385;
				Data16_g174385.MotionData = In_MotionData16_g174385;
				Data16_g174385.BoundsData = In_BoundsData16_g174385;
				Data16_g174385.RotationData = In_RotationData16_g174385;
				TVEModelData Data15_g174421 = Data16_g174385;
				float Out_Dummy15_g174421 = 0;
				float3 Out_PositionOS15_g174421 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174421 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174421 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174421 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174421 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174421 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174421 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174421 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174421 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174421 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174421 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174421 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174421 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174421 = float3( 0,0,0 );
				float4 Out_VertexData15_g174421 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174421 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174421 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174421 = float4( 0,0,0,0 );
				Out_Dummy15_g174421 = Data15_g174421.Dummy;
				Out_PositionOS15_g174421 = Data15_g174421.PositionOS;
				Out_PositionWS15_g174421 = Data15_g174421.PositionWS;
				Out_PositionWO15_g174421 = Data15_g174421.PositionWO;
				Out_PositionRawOS15_g174421 = Data15_g174421.PositionRawOS;
				Out_PositionAddOS15_g174421 = Data15_g174421.PositionAddOS;
				Out_PivotOS15_g174421 = Data15_g174421.PivotOS;
				Out_PivotWS15_g174421 = Data15_g174421.PivotWS;
				Out_PivotWO15_g174421 = Data15_g174421.PivotWO;
				Out_NormalOS15_g174421 = Data15_g174421.NormalOS;
				Out_NormalWS15_g174421 = Data15_g174421.NormalWS;
				Out_NormalRawOS15_g174421 = Data15_g174421.NormalRawOS;
				Out_NormalRawWS15_g174421 = Data15_g174421.NormalRawWS;
				Out_TangentOS15_g174421 = Data15_g174421.TangentOS;
				Out_ViewDirWS15_g174421 = Data15_g174421.ViewDirWS;
				Out_VertexData15_g174421 = Data15_g174421.VertexData;
				Out_MotionData15_g174421 = Data15_g174421.MotionData;
				Out_BoundsData15_g174421 = Data15_g174421.BoundsData;
				Out_RotationData15_g174421 = Data15_g174421.RotationData;
				half3 Model_PositionOS147_g174419 = Out_PositionOS15_g174421;
				float3 temp_cast_5 = (1.0).xxx;
				float3 temp_output_210_19_g174419 = Out_PivotWO15_g174421;
				half3 Model_PivotWO162_g174419 = temp_output_210_19_g174419;
				float temp_output_7_0_g174420 = _SizeFadeDistMaxValue;
				float temp_output_10_0_g174420 = ( _SizeFadeDistMinValue - temp_output_7_0_g174420 );
				float localBuildGlobalData204_g173897 = ( 0.0 );
				TVEGlobalData Data204_g173897 = (TVEGlobalData)0;
				half Dummy211_g173897 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g173897 = Dummy211_g173897;
				float temp_output_82_0_g173907 = _GlobalCoatLayerValue;
				float temp_output_19_0_g173909 = TVE_CoatLayers[(int)temp_output_82_0_g173907];
				TVEModelData Data16_g164566 = (TVEModelData)0;
				float In_Dummy16_g164566 = 0.0;
				float3 In_PositionWS16_g164566 = PositionWS122_g164551;
				float3 In_PositionWO16_g164566 = PositionWO132_g164551;
				float3 In_PivotWS16_g164566 = PivotWS121_g164551;
				float3 In_PivotWO16_g164566 = PivotWO133_g164551;
				float3 In_NormalWS16_g164566 = Normal_WS95_g164551;
				float3 In_ViewDirWS16_g164566 = ViewDirWS169_g164551;
				float4 In_VertexData16_g164566 = VertexMasks171_g164551;
				float4 In_BoundsData16_g164566 = float4( 1,1,1,1 );
				Data16_g164566.Dummy = In_Dummy16_g164566;
				Data16_g164566.PositionWS = In_PositionWS16_g164566;
				Data16_g164566.PositionWO = In_PositionWO16_g164566;
				Data16_g164566.PivotWS = In_PivotWS16_g164566;
				Data16_g164566.PivotWO = In_PivotWO16_g164566;
				Data16_g164566.NormalWS = In_NormalWS16_g164566;
				Data16_g164566.ViewDirWS = In_ViewDirWS16_g164566;
				Data16_g164566.VertexData = In_VertexData16_g164566;
				Data16_g164566.BoundsData = In_BoundsData16_g164566;
				TVEModelData Data15_g173979 = Data16_g164566;
				float Out_Dummy15_g173979 = 0;
				float3 Out_PositionWS15_g173979 = float3( 0,0,0 );
				float3 Out_PositionWO15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWS15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWO15_g173979 = float3( 0,0,0 );
				float3 Out_NormalWS15_g173979 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g173979 = float3( 0,0,0 );
				float4 Out_VertexData15_g173979 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g173979 = float4( 0,0,0,0 );
				Out_Dummy15_g173979 = Data15_g173979.Dummy;
				Out_PositionWS15_g173979 = Data15_g173979.PositionWS;
				Out_PositionWO15_g173979 = Data15_g173979.PositionWO;
				Out_PivotWS15_g173979 = Data15_g173979.PivotWS;
				Out_PivotWO15_g173979 = Data15_g173979.PivotWO;
				Out_NormalWS15_g173979 = Data15_g173979.NormalWS;
				Out_ViewDirWS15_g173979 = Data15_g173979.ViewDirWS;
				Out_VertexData15_g173979 = Data15_g173979.VertexData;
				Out_BoundsData15_g173979 = Data15_g173979.BoundsData;
				half3 Model_PositionWS143_g173897 = Out_PositionWS15_g173979;
				half3 Model_PivotWS145_g173897 = Out_PivotWS15_g173979;
				float3 lerpResult300_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalCoatPivotValue);
				half3 Input_Position180_g173910 = lerpResult300_g173897;
				float2 temp_output_75_0_g173910 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_82_0_g173910 = temp_output_82_0_g173907;
				float2 temp_output_119_0_g173910 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_7_0_g173915 = 1.0;
				float temp_output_10_0_g173915 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173915 );
				float4 lerpResult131_g173910 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173910,temp_output_82_0_g173910), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173910,temp_output_82_0_g173910), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173910 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173915 ) / temp_output_10_0_g173915 ) ));
				float4 temp_output_17_0_g173909 = lerpResult131_g173910;
				float4 temp_output_3_0_g173909 = TVE_CoatParams;
				float4 ifLocalVar18_g173909 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173909 >= 0.5 )
				ifLocalVar18_g173909 = temp_output_17_0_g173909;
				else
				ifLocalVar18_g173909 = temp_output_3_0_g173909;
				float4 lerpResult22_g173909 = lerp( temp_output_3_0_g173909 , temp_output_17_0_g173909 , temp_output_19_0_g173909);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173909 = lerpResult22_g173909;
				#else
				float4 staticSwitch24_g173909 = ifLocalVar18_g173909;
				#endif
				half4 Coat_Params302_g173897 = staticSwitch24_g173909;
				float4 In_CoatParams204_g173897 = Coat_Params302_g173897;
				float temp_output_82_0_g173898 = _GlobalPaintLayerValue;
				float temp_output_19_0_g173900 = TVE_PaintLayers[(int)temp_output_82_0_g173898];
				float3 lerpResult85_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalPaintPivotValue);
				half3 Input_Position180_g173901 = lerpResult85_g173897;
				float2 temp_output_75_0_g173901 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_82_0_g173901 = temp_output_82_0_g173898;
				float2 temp_output_119_0_g173901 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_7_0_g173906 = 1.0;
				float temp_output_10_0_g173906 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173906 );
				float4 lerpResult131_g173901 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173901,temp_output_82_0_g173901), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173901,temp_output_82_0_g173901), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173901 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173906 ) / temp_output_10_0_g173906 ) ));
				float4 temp_output_17_0_g173900 = lerpResult131_g173901;
				float4 temp_output_3_0_g173900 = TVE_PaintParams;
				float4 ifLocalVar18_g173900 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173900 >= 0.5 )
				ifLocalVar18_g173900 = temp_output_17_0_g173900;
				else
				ifLocalVar18_g173900 = temp_output_3_0_g173900;
				float4 lerpResult22_g173900 = lerp( temp_output_3_0_g173900 , temp_output_17_0_g173900 , temp_output_19_0_g173900);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173900 = lerpResult22_g173900;
				#else
				float4 staticSwitch24_g173900 = ifLocalVar18_g173900;
				#endif
				half4 Paint_Params71_g173897 = staticSwitch24_g173900;
				float4 In_PaintParams204_g173897 = Paint_Params71_g173897;
				float temp_output_82_0_g173916 = _GlobalGlowLayerValue;
				float temp_output_19_0_g173918 = TVE_GlowLayers[(int)temp_output_82_0_g173916];
				float3 lerpResult247_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalGlowPivotValue);
				half3 Input_Position180_g173919 = lerpResult247_g173897;
				float2 temp_output_75_0_g173919 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_82_0_g173919 = temp_output_82_0_g173916;
				float2 temp_output_119_0_g173919 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_7_0_g173924 = 1.0;
				float temp_output_10_0_g173924 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173924 );
				float4 lerpResult131_g173919 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173919,temp_output_82_0_g173919), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173919,temp_output_82_0_g173919), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173919 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173924 ) / temp_output_10_0_g173924 ) ));
				float4 temp_output_17_0_g173918 = lerpResult131_g173919;
				float4 temp_output_3_0_g173918 = TVE_GlowParams;
				float4 ifLocalVar18_g173918 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173918 >= 0.5 )
				ifLocalVar18_g173918 = temp_output_17_0_g173918;
				else
				ifLocalVar18_g173918 = temp_output_3_0_g173918;
				float4 lerpResult22_g173918 = lerp( temp_output_3_0_g173918 , temp_output_17_0_g173918 , temp_output_19_0_g173918);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173918 = lerpResult22_g173918;
				#else
				float4 staticSwitch24_g173918 = ifLocalVar18_g173918;
				#endif
				half4 Glow_Params248_g173897 = staticSwitch24_g173918;
				float4 In_GlowParams204_g173897 = Glow_Params248_g173897;
				float temp_output_132_0_g173961 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g173963 = TVE_AtmoLayers[(int)temp_output_132_0_g173961];
				float3 lerpResult104_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalAtmoPivotValue);
				half3 Input_Position180_g173964 = lerpResult104_g173897;
				float2 temp_output_75_0_g173964 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_82_0_g173964 = temp_output_132_0_g173961;
				float2 temp_output_119_0_g173964 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_7_0_g173969 = 1.0;
				float temp_output_10_0_g173969 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173969 );
				float4 lerpResult131_g173964 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173964,temp_output_82_0_g173964), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173964,temp_output_82_0_g173964), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173964 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173969 ) / temp_output_10_0_g173969 ) ));
				float4 temp_output_17_0_g173963 = lerpResult131_g173964;
				float4 temp_output_3_0_g173963 = TVE_AtmoParams;
				float4 ifLocalVar18_g173963 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173963 >= 0.5 )
				ifLocalVar18_g173963 = temp_output_17_0_g173963;
				else
				ifLocalVar18_g173963 = temp_output_3_0_g173963;
				float4 lerpResult22_g173963 = lerp( temp_output_3_0_g173963 , temp_output_17_0_g173963 , temp_output_19_0_g173963);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173963 = lerpResult22_g173963;
				#else
				float4 staticSwitch24_g173963 = ifLocalVar18_g173963;
				#endif
				half4 Atmo_Params80_g173897 = staticSwitch24_g173963;
				float4 In_AtmoParams204_g173897 = Atmo_Params80_g173897;
				float temp_output_132_0_g173970 = _GlobalFadeLayerValue;
				float temp_output_19_0_g173972 = TVE_FadeLayers[(int)temp_output_132_0_g173970];
				float3 lerpResult382_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFadePivotValue);
				half3 Input_Position180_g173973 = lerpResult382_g173897;
				float2 temp_output_75_0_g173973 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_82_0_g173973 = temp_output_132_0_g173970;
				float2 temp_output_119_0_g173973 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_7_0_g173978 = 1.0;
				float temp_output_10_0_g173978 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173978 );
				float4 lerpResult131_g173973 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173973,temp_output_82_0_g173973), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173973,temp_output_82_0_g173973), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173973 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173978 ) / temp_output_10_0_g173978 ) ));
				float4 temp_output_17_0_g173972 = lerpResult131_g173973;
				float4 temp_output_3_0_g173972 = TVE_FadeParams;
				float4 ifLocalVar18_g173972 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173972 >= 0.5 )
				ifLocalVar18_g173972 = temp_output_17_0_g173972;
				else
				ifLocalVar18_g173972 = temp_output_3_0_g173972;
				float4 lerpResult22_g173972 = lerp( temp_output_3_0_g173972 , temp_output_17_0_g173972 , temp_output_19_0_g173972);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173972 = lerpResult22_g173972;
				#else
				float4 staticSwitch24_g173972 = ifLocalVar18_g173972;
				#endif
				half4 Fade_Params387_g173897 = staticSwitch24_g173972;
				float4 In_FadeParams204_g173897 = Fade_Params387_g173897;
				float temp_output_130_0_g173952 = _GlobalFormLayerValue;
				float temp_output_19_0_g173954 = TVE_FormLayers[(int)temp_output_130_0_g173952];
				float3 lerpResult168_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFormPivotValue);
				half3 Input_Position180_g173955 = lerpResult168_g173897;
				float2 temp_output_75_0_g173955 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_82_0_g173955 = temp_output_130_0_g173952;
				float2 temp_output_119_0_g173955 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_7_0_g173960 = 1.0;
				float temp_output_10_0_g173960 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173960 );
				float4 lerpResult131_g173955 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173955,temp_output_82_0_g173955), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173955,temp_output_82_0_g173955), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173955 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173960 ) / temp_output_10_0_g173960 ) ));
				float4 temp_output_17_0_g173954 = lerpResult131_g173955;
				float4 temp_output_3_0_g173954 = TVE_FormParams;
				float4 ifLocalVar18_g173954 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173954 >= 0.5 )
				ifLocalVar18_g173954 = temp_output_17_0_g173954;
				else
				ifLocalVar18_g173954 = temp_output_3_0_g173954;
				float4 lerpResult22_g173954 = lerp( temp_output_3_0_g173954 , temp_output_17_0_g173954 , temp_output_19_0_g173954);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173954 = lerpResult22_g173954;
				#else
				float4 staticSwitch24_g173954 = ifLocalVar18_g173954;
				#endif
				half4 Form_Params112_g173897 = staticSwitch24_g173954;
				float4 In_FormParams204_g173897 = Form_Params112_g173897;
				half4 Land_Params375_g173897 = TVE_LandParams;
				float4 In_LandParams204_g173897 = Land_Params375_g173897;
				float temp_output_136_0_g173943 = _GlobalWindLayerValue;
				float temp_output_19_0_g173945 = TVE_WindLayers[(int)temp_output_136_0_g173943];
				half3 Input_Position180_g173946 = Model_PositionWS143_g173897;
				float2 temp_output_75_0_g173946 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_82_0_g173946 = temp_output_136_0_g173943;
				float2 temp_output_119_0_g173946 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_7_0_g173951 = 1.0;
				float temp_output_10_0_g173951 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173951 );
				float4 lerpResult131_g173946 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173946,temp_output_82_0_g173946), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173946,temp_output_82_0_g173946), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173946 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173951 ) / temp_output_10_0_g173951 ) ));
				float4 temp_output_17_0_g173945 = lerpResult131_g173946;
				float4 temp_output_3_0_g173945 = TVE_WindParams;
				float4 ifLocalVar18_g173945 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173945 >= 0.5 )
				ifLocalVar18_g173945 = temp_output_17_0_g173945;
				else
				ifLocalVar18_g173945 = temp_output_3_0_g173945;
				float4 lerpResult22_g173945 = lerp( temp_output_3_0_g173945 , temp_output_17_0_g173945 , temp_output_19_0_g173945);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173945 = lerpResult22_g173945;
				#else
				float4 staticSwitch24_g173945 = ifLocalVar18_g173945;
				#endif
				half4 Wind_Params88_g173897 = staticSwitch24_g173945;
				float4 In_WindParams204_g173897 = Wind_Params88_g173897;
				float temp_output_136_0_g173925 = _GlobalPushLayerValue;
				float temp_output_19_0_g173926 = TVE_PushLayers[(int)temp_output_136_0_g173925];
				half3 Input_Position180_g173927 = Model_PivotWS145_g173897;
				float2 temp_output_75_0_g173927 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_82_0_g173927 = temp_output_136_0_g173925;
				float2 temp_output_119_0_g173927 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_7_0_g173932 = 1.0;
				float temp_output_10_0_g173932 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173932 );
				float4 lerpResult131_g173927 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173927,temp_output_82_0_g173927), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173927,temp_output_82_0_g173927), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173927 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173932 ) / temp_output_10_0_g173932 ) ));
				float4 temp_output_17_0_g173926 = lerpResult131_g173927;
				float4 temp_output_3_0_g173926 = TVE_PushParams;
				float4 ifLocalVar18_g173926 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173926 >= 0.5 )
				ifLocalVar18_g173926 = temp_output_17_0_g173926;
				else
				ifLocalVar18_g173926 = temp_output_3_0_g173926;
				float4 lerpResult22_g173926 = lerp( temp_output_3_0_g173926 , temp_output_17_0_g173926 , temp_output_19_0_g173926);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173926 = lerpResult22_g173926;
				#else
				float4 staticSwitch24_g173926 = ifLocalVar18_g173926;
				#endif
				half4 Push_Params335_g173897 = staticSwitch24_g173926;
				float4 In_PushParams204_g173897 = Push_Params335_g173897;
				Data204_g173897.Dummy = In_Dummy204_g173897;
				Data204_g173897.CoatParams = In_CoatParams204_g173897;
				Data204_g173897.PaintParams = In_PaintParams204_g173897;
				Data204_g173897.GlowParams = In_GlowParams204_g173897;
				Data204_g173897.AtmoParams = In_AtmoParams204_g173897;
				Data204_g173897.FadeParams = In_FadeParams204_g173897;
				Data204_g173897.FormParams= In_FormParams204_g173897;
				Data204_g173897.LandParams = In_LandParams204_g173897;
				Data204_g173897.WindParams = In_WindParams204_g173897;
				Data204_g173897.PushParams = In_PushParams204_g173897;
				TVEGlobalData Data15_g174423 = Data204_g173897;
				float Out_Dummy15_g174423 = 0;
				float4 Out_CoatParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174423 = float4( 0,0,0,0 );
				Out_Dummy15_g174423 = Data15_g174423.Dummy;
				Out_CoatParams15_g174423 = Data15_g174423.CoatParams;
				Out_PaintParams15_g174423 = Data15_g174423.PaintParams;
				Out_GlowParams15_g174423 = Data15_g174423.GlowParams;
				Out_AtmoParams15_g174423= Data15_g174423.AtmoParams;
				Out_FadeParams15_g174423= Data15_g174423.FadeParams;
				Out_FormParams15_g174423 = Data15_g174423.FormParams;
				Out_LandParams15_g174423 = Data15_g174423.LandParams;
				Out_WindParams15_g174423 = Data15_g174423.WindParams;
				Out_PushParams15_g174423 = Data15_g174423.PushParams;
				half4 Input_FormParams188_g174419 = Out_FormParams15_g174423;
				float lerpResult213_g174419 = lerp( 1.0 , (Input_FormParams188_g174419).w , TVE_IsEnabled);
				#ifdef TVE_SIZEFADE_ELEMENT
				float staticSwitch194_g174419 = lerpResult213_g174419;
				#else
				float staticSwitch194_g174419 = 1.0;
				#endif
				half SizeFade_MaskGlobal192_g174419 = staticSwitch194_g174419;
				float temp_output_189_0_g174419 = ( saturate( ( ( distance( _WorldSpaceCameraPos , Model_PivotWO162_g174419 ) - temp_output_7_0_g174420 ) / ( temp_output_10_0_g174420 + 0.0001 ) ) ) * _SizeFadeScaleValue * SizeFade_MaskGlobal192_g174419 );
				float3 appendResult200_g174419 = (float3(temp_output_189_0_g174419 , temp_output_189_0_g174419 , temp_output_189_0_g174419));
				float3 appendResult201_g174419 = (float3(1.0 , temp_output_189_0_g174419 , 1.0));
				float3 lerpResult202_g174419 = lerp( appendResult200_g174419 , appendResult201_g174419 , _SizeFadeScaleMode);
				float3 lerpResult184_g174419 = lerp( temp_cast_5 , lerpResult202_g174419 , _SizeFadeIntensityValue);
				float3 temp_output_167_0_g174419 = ( lerpResult184_g174419 * Model_PositionOS147_g174419 );
				#ifdef TVE_SIZEFADE
				float3 staticSwitch199_g174419 = temp_output_167_0_g174419;
				#else
				float3 staticSwitch199_g174419 = Model_PositionOS147_g174419;
				#endif
				half3 Final_Position178_g174419 = staticSwitch199_g174419;
				float3 In_PositionOS16_g174422 = Final_Position178_g174419;
				float3 In_PositionWS16_g174422 = Out_PositionWS15_g174421;
				float3 In_PositionWO16_g174422 = Out_PositionWO15_g174421;
				float3 In_PositionRawOS16_g174422 = Out_PositionRawOS15_g174421;
				float3 In_PositionAddOS16_g174422 = Out_PositionAddOS15_g174421;
				float3 temp_output_210_24_g174419 = Out_PivotOS15_g174421;
				float3 In_PivotOS16_g174422 = temp_output_210_24_g174419;
				float3 In_PivotWS16_g174422 = Out_PivotWS15_g174421;
				float3 In_PivotWO16_g174422 = temp_output_210_19_g174419;
				float3 In_NormalOS16_g174422 = Out_NormalOS15_g174421;
				float3 In_NormalWS16_g174422 = Out_NormalWS15_g174421;
				float3 In_NormalRawOS16_g174422 = Out_NormalRawOS15_g174421;
				float3 In_NormalRawWS16_g174422 = Out_NormalRawWS15_g174421;
				float4 In_TangentOS16_g174422 = Out_TangentOS15_g174421;
				float3 In_ViewDirWS16_g174422 = Out_ViewDirWS15_g174421;
				float4 In_VertexData16_g174422 = Out_VertexData15_g174421;
				float4 In_MotionData16_g174422 = Out_MotionData15_g174421;
				float4 In_BoundsData16_g174422 = Out_BoundsData15_g174421;
				float4 In_RotationData16_g174422 = Out_RotationData15_g174421;
				Data16_g174422.Dummy = In_Dummy16_g174422;
				Data16_g174422.PositionOS = In_PositionOS16_g174422;
				Data16_g174422.PositionWS = In_PositionWS16_g174422;
				Data16_g174422.PositionWO = In_PositionWO16_g174422;
				Data16_g174422.PositionRawOS = In_PositionRawOS16_g174422;
				Data16_g174422.PositionAddOS = In_PositionAddOS16_g174422;
				Data16_g174422.PivotOS = In_PivotOS16_g174422;
				Data16_g174422.PivotWS = In_PivotWS16_g174422;
				Data16_g174422.PivotWO = In_PivotWO16_g174422;
				Data16_g174422.NormalOS = In_NormalOS16_g174422;
				Data16_g174422.NormalWS = In_NormalWS16_g174422;
				Data16_g174422.NormalRawOS = In_NormalRawOS16_g174422;
				Data16_g174422.NormalRawWS = In_NormalRawWS16_g174422;
				Data16_g174422.TangentOS = In_TangentOS16_g174422;
				Data16_g174422.ViewDirWS = In_ViewDirWS16_g174422;
				Data16_g174422.VertexData = In_VertexData16_g174422;
				Data16_g174422.MotionData = In_MotionData16_g174422;
				Data16_g174422.BoundsData = In_BoundsData16_g174422;
				Data16_g174422.RotationData = In_RotationData16_g174422;
				TVEModelData Data15_g174573 = Data16_g174422;
				float Out_Dummy15_g174573 = 0;
				float3 Out_PositionOS15_g174573 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174573 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174573 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174573 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174573 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174573 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174573 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174573 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174573 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174573 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174573 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174573 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174573 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174573 = float3( 0,0,0 );
				float4 Out_VertexData15_g174573 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174573 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174573 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174573 = float4( 0,0,0,0 );
				Out_Dummy15_g174573 = Data15_g174573.Dummy;
				Out_PositionOS15_g174573 = Data15_g174573.PositionOS;
				Out_PositionWS15_g174573 = Data15_g174573.PositionWS;
				Out_PositionWO15_g174573 = Data15_g174573.PositionWO;
				Out_PositionRawOS15_g174573 = Data15_g174573.PositionRawOS;
				Out_PositionAddOS15_g174573 = Data15_g174573.PositionAddOS;
				Out_PivotOS15_g174573 = Data15_g174573.PivotOS;
				Out_PivotWS15_g174573 = Data15_g174573.PivotWS;
				Out_PivotWO15_g174573 = Data15_g174573.PivotWO;
				Out_NormalOS15_g174573 = Data15_g174573.NormalOS;
				Out_NormalWS15_g174573 = Data15_g174573.NormalWS;
				Out_NormalRawOS15_g174573 = Data15_g174573.NormalRawOS;
				Out_NormalRawWS15_g174573 = Data15_g174573.NormalRawWS;
				Out_TangentOS15_g174573 = Data15_g174573.TangentOS;
				Out_ViewDirWS15_g174573 = Data15_g174573.ViewDirWS;
				Out_VertexData15_g174573 = Data15_g174573.VertexData;
				Out_MotionData15_g174573 = Data15_g174573.MotionData;
				Out_BoundsData15_g174573 = Data15_g174573.BoundsData;
				Out_RotationData15_g174573 = Data15_g174573.RotationData;
				float3 temp_output_1567_0_g174563 = Out_PositionOS15_g174573;
				float3 In_PositionOS16_g174577 = temp_output_1567_0_g174563;
				float3 temp_output_1567_16_g174563 = Out_PositionWS15_g174573;
				float3 In_PositionWS16_g174577 = temp_output_1567_16_g174563;
				float3 temp_output_1567_17_g174563 = Out_PositionWO15_g174573;
				float3 In_PositionWO16_g174577 = temp_output_1567_17_g174563;
				float3 In_PositionRawOS16_g174577 = Out_PositionRawOS15_g174573;
				float3 temp_cast_39 = (0.0).xxx;
				half Small_Value2180_g174563 = _MotionSmallIntensityValue;
				float4 temp_output_1567_29_g174563 = Out_VertexData15_g174573;
				half4 Model_VertexMasks518_g174563 = temp_output_1567_29_g174563;
				float4 break1689_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174575 = _motion_small_vert_mode;
				float temp_output_30_0_g174575 = ( break1689_g174563.x * break33_g174575.x );
				float temp_output_29_0_g174575 = ( break1689_g174563.y * break33_g174575.y );
				float temp_output_31_0_g174575 = ( break1689_g174563.z * break33_g174575.z );
				float temp_output_28_0_g174575 = ( temp_output_30_0_g174575 + temp_output_29_0_g174575 + temp_output_31_0_g174575 + ( break1689_g174563.w * break33_g174575.w ) );
				float temp_output_1727_0_g174563 = temp_output_28_0_g174575;
				float4 temp_output_1567_30_g174563 = Out_BoundsData15_g174573;
				half4 Model_BoundsData1322_g174563 = temp_output_1567_30_g174563;
				float4 break33_g174578 = _motion_small_proc_mode;
				float temp_output_30_0_g174578 = ( (Model_BoundsData1322_g174563).z * break33_g174578.x );
				float temp_output_29_0_g174578 = ( (Model_BoundsData1322_g174563).w * break33_g174578.y );
				float temp_output_1734_0_g174563 = ( temp_output_30_0_g174578 + temp_output_29_0_g174578 );
				float lerpResult1906_g174563 = lerp( temp_output_1727_0_g174563 , temp_output_1734_0_g174563 , _motion_small_mask_mode);
				float enc1805_g174563 = v.ase_texcoord.z;
				float2 localDecodeFloatToVector21805_g174563 = DecodeFloatToVector2( enc1805_g174563 );
				float2 break1804_g174563 = localDecodeFloatToVector21805_g174563;
				half Small_Mask_Legacy1806_g174563 = break1804_g174563.x;
				#ifdef TVE_LEGACY
				float staticSwitch1800_g174563 = Small_Mask_Legacy1806_g174563;
				#else
				float staticSwitch1800_g174563 = lerpResult1906_g174563;
				#endif
				float clampResult17_g174580 = clamp( staticSwitch1800_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174581 = _MotionSmallMaskRemap.x;
				float temp_output_10_0_g174581 = ( _MotionSmallMaskRemap.y - temp_output_7_0_g174581 );
				float temp_output_6_0_g174599 = saturate( ( ( clampResult17_g174580 - temp_output_7_0_g174581 ) / ( temp_output_10_0_g174581 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174599 = ( temp_output_6_0_g174599 + ( _MotionSmallMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174599 = temp_output_6_0_g174599;
				#endif
				half Small_Mask640_g174563 = staticSwitch14_g174599;
				half3 Model_PositionOS147_g174563 = temp_output_1567_0_g174563;
				float3 normalizeResult1832_g174563 = normalize( Model_PositionOS147_g174563 );
				half3 Model_PositionWO162_g174563 = temp_output_1567_17_g174563;
				float3 temp_output_1567_19_g174563 = Out_PivotWO15_g174573;
				half3 Model_PivotWO402_g174563 = temp_output_1567_19_g174563;
				float3 lerpResult829_g174563 = lerp( Model_PositionWO162_g174563 , Model_PivotWO402_g174563 , _MotionBasePivotValue);
				float4 temp_output_1567_27_g174563 = Out_MotionData15_g174573;
				half4 Model_MotionMasks489_g174563 = temp_output_1567_27_g174563;
				half3 Base_Position1394_g174563 = ( lerpResult829_g174563 + ( (Model_MotionMasks489_g174563).z * _MotionBasePhaseValue ) );
				half3 Input_PositionWO419_g174606 = Base_Position1394_g174563;
				half Flow_TilllingRT1397_g174563 = _MotionTillingValue;
				half Input_MotionTillingRT670_g174606 = ( Flow_TilllingRT1397_g174563 + 0.2 );
				half2 Noise_CoordRT668_g174606 = ( -(Input_PositionWO419_g174606).xz * Input_MotionTillingRT670_g174606 * 0.005 );
				half4 Noise_ParamsRT535_g174606 = SAMPLE_TEXTURE2D_LOD( _MotionNoiseTexRT, sampler_Linear_Repeat, Noise_CoordRT668_g174606, 0.0 );
				half Flow_Value1855_g174563 = _MotionIntensityValue;
				half Input_MotionValue629_g174606 = Flow_Value1855_g174563;
				float2 lerpResult709_g174606 = lerp( float2( 0.5,0.5 ) , (Noise_ParamsRT535_g174606).rg , Input_MotionValue629_g174606);
				float3 appendResult712_g174606 = (float3(lerpResult709_g174606 , ( (Noise_ParamsRT535_g174606).b * Input_MotionValue629_g174606 )));
				float4 lerpResult627_g174606 = lerp( half4(0,1,1,0) , TVE_MotionParams , TVE_IsEnabled);
				half2 Global_WindDirection593_g174606 = (lerpResult627_g174606).xy;
				half Input_MotionTilling321_g174606 = ( _MotionBaseTillingValue + 0.2 );
				half2 Noise_Coord515_g174606 = ( -(Input_PositionWO419_g174606).xz * Input_MotionTilling321_g174606 * 0.005 );
				float2 temp_output_3_0_g174607 = Noise_Coord515_g174606;
				float2 temp_output_21_0_g174607 = (Global_WindDirection593_g174606*2.0 + -1.0);
				float lerpResult128_g174612 = lerp( _Time.y , ( ( _Time.y * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				half Input_MotionSpeed62_g174606 = _MotionBaseSpeedValue;
				half Noise_Speed516_g174606 = ( ( lerpResult128_g174612 * Input_MotionSpeed62_g174606 ) * 0.02 );
				float temp_output_15_0_g174607 = Noise_Speed516_g174606;
				float temp_output_23_0_g174607 = frac( temp_output_15_0_g174607 );
				float4 lerpResult39_g174607 = lerp( SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174607 + ( temp_output_21_0_g174607 * temp_output_23_0_g174607 ) ), 0.0 ) , SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174607 + ( temp_output_21_0_g174607 * frac( ( temp_output_15_0_g174607 + 0.5 ) ) ) ), 0.0 ) , ( abs( ( temp_output_23_0_g174607 - 0.5 ) ) / 0.5 ));
				half4 Noise_Params685_g174606 = lerpResult39_g174607;
				half Input_MotionNoise552_g174606 = _MotionBaseNoiseValue;
				half Global_WindIntensity576_g174606 = (lerpResult627_g174606).z;
				half Motion_Intensity720_g174606 = ( Global_WindIntensity576_g174606 * Input_MotionValue629_g174606 );
				float lerpResult701_g174606 = lerp( 1.0 , Input_MotionNoise552_g174606 , Motion_Intensity720_g174606);
				float2 lerpResult646_g174606 = lerp( Global_WindDirection593_g174606 , (Noise_Params685_g174606).rg , lerpResult701_g174606);
				float2 lerpResult724_g174606 = lerp( float2( 0.5,0.5 ) , lerpResult646_g174606 , Motion_Intensity720_g174606);
				float3 appendResult708_g174606 = (float3(lerpResult724_g174606 , ( (Noise_Params685_g174606).a * Motion_Intensity720_g174606 )));
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch673_g174606 = half3(0.5,0.5,0);
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch673_g174606 = appendResult712_g174606;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch673_g174606 = appendResult708_g174606;
				#else
				float3 staticSwitch673_g174606 = half3(0.5,0.5,0);
				#endif
				half3 Motion_Local694_g174606 = staticSwitch673_g174606;
				float temp_output_136_0_g174613 = _global_wind_layer_value;
				float temp_output_19_0_g174615 = TVE_WindLayers[(int)temp_output_136_0_g174613];
				half3 Input_Position180_g174616 = Input_PositionWO419_g174606;
				float2 temp_output_75_0_g174616 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g174616).xz ) );
				float temp_output_82_0_g174616 = temp_output_136_0_g174613;
				float2 temp_output_119_0_g174616 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g174616).xz ) );
				float temp_output_7_0_g174621 = 1.0;
				float temp_output_10_0_g174621 = ( TVE_RenderNearFadeValue - temp_output_7_0_g174621 );
				float4 lerpResult131_g174616 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g174616,temp_output_82_0_g174616), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g174616,temp_output_82_0_g174616), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g174616 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g174621 ) / temp_output_10_0_g174621 ) ));
				float4 temp_output_17_0_g174615 = lerpResult131_g174616;
				float4 temp_output_3_0_g174615 = TVE_WindParams;
				float4 ifLocalVar18_g174615 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g174615 >= 0.5 )
				ifLocalVar18_g174615 = temp_output_17_0_g174615;
				else
				ifLocalVar18_g174615 = temp_output_3_0_g174615;
				float4 lerpResult22_g174615 = lerp( temp_output_3_0_g174615 , temp_output_17_0_g174615 , temp_output_19_0_g174615);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g174615 = lerpResult22_g174615;
				#else
				float4 staticSwitch24_g174615 = ifLocalVar18_g174615;
				#endif
				float4 temp_output_610_0_g174606 = staticSwitch24_g174615;
				float2 lerpResult699_g174606 = lerp( float2( 0.5,0.5 ) , (temp_output_610_0_g174606).rg , Input_MotionValue629_g174606);
				float3 appendResult643_g174606 = (float3(lerpResult699_g174606 , ( (temp_output_610_0_g174606).b * Input_MotionValue629_g174606 )));
				float3 lerpResult623_g174606 = lerp( Motion_Local694_g174606 , appendResult643_g174606 , (temp_output_610_0_g174606).a);
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch693_g174606 = appendResult643_g174606;
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch693_g174606 = lerpResult623_g174606;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch693_g174606 = lerpResult623_g174606;
				#else
				float3 staticSwitch693_g174606 = appendResult643_g174606;
				#endif
				#ifdef TVE_MOTION_WIND_ELEMENT
				float3 staticSwitch612_g174606 = staticSwitch693_g174606;
				#else
				float3 staticSwitch612_g174606 = Motion_Local694_g174606;
				#endif
				float3 temp_output_2275_567_g174563 = staticSwitch612_g174606;
				float2 break83_g174595 = ((temp_output_2275_567_g174563).xy*2.0 + -1.0);
				float3 appendResult79_g174595 = (float3(break83_g174595.x , 0.0 , break83_g174595.y));
				float3 ase_parentObjectScale = ( 1.0 / float3( length( unity_WorldToObject[ 0 ].xyz ), length( unity_WorldToObject[ 1 ].xyz ), length( unity_WorldToObject[ 2 ].xyz ) ) );
				half2 Base_Direction893_g174563 = (( mul( unity_WorldToObject, float4( appendResult79_g174595 , 0.0 ) ).xyz * ase_parentObjectScale )).xz;
				float3 lerpResult1411_g174563 = lerp( Model_PositionWO162_g174563 , Model_PivotWO402_g174563 , _MotionSmallPivotValue);
				half3 Small_Position1421_g174563 = ( lerpResult1411_g174563 + ( (Model_MotionMasks489_g174563).z * _MotionSmallPhaseValue ) );
				half3 Input_PositionWO419_g174623 = Small_Position1421_g174563;
				half Input_MotionTillingRT670_g174623 = ( Flow_TilllingRT1397_g174563 + 0.2 );
				half2 Noise_CoordRT668_g174623 = ( -(Input_PositionWO419_g174623).xz * Input_MotionTillingRT670_g174623 * 0.005 );
				half4 Noise_ParamsRT535_g174623 = SAMPLE_TEXTURE2D_LOD( _MotionNoiseTexRT, sampler_Linear_Repeat, Noise_CoordRT668_g174623, 0.0 );
				half Input_MotionValue629_g174623 = Flow_Value1855_g174563;
				float2 lerpResult709_g174623 = lerp( float2( 0.5,0.5 ) , (Noise_ParamsRT535_g174623).rg , Input_MotionValue629_g174623);
				float3 appendResult712_g174623 = (float3(lerpResult709_g174623 , ( (Noise_ParamsRT535_g174623).b * Input_MotionValue629_g174623 )));
				float4 lerpResult627_g174623 = lerp( half4(0,1,1,0) , TVE_MotionParams , TVE_IsEnabled);
				half2 Global_WindDirection593_g174623 = (lerpResult627_g174623).xy;
				half Input_MotionTilling321_g174623 = ( _MotionSmallTillingValue + 0.2 );
				half2 Noise_Coord515_g174623 = ( -(Input_PositionWO419_g174623).xz * Input_MotionTilling321_g174623 * 0.005 );
				float2 temp_output_3_0_g174624 = Noise_Coord515_g174623;
				float2 temp_output_21_0_g174624 = (Global_WindDirection593_g174623*2.0 + -1.0);
				float lerpResult128_g174629 = lerp( _Time.y , ( ( _Time.y * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				half Input_MotionSpeed62_g174623 = _MotionSmallSpeedValue;
				half Noise_Speed516_g174623 = ( ( lerpResult128_g174629 * Input_MotionSpeed62_g174623 ) * 0.02 );
				float temp_output_15_0_g174624 = Noise_Speed516_g174623;
				float temp_output_23_0_g174624 = frac( temp_output_15_0_g174624 );
				float4 lerpResult39_g174624 = lerp( SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174624 + ( temp_output_21_0_g174624 * temp_output_23_0_g174624 ) ), 0.0 ) , SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174624 + ( temp_output_21_0_g174624 * frac( ( temp_output_15_0_g174624 + 0.5 ) ) ) ), 0.0 ) , ( abs( ( temp_output_23_0_g174624 - 0.5 ) ) / 0.5 ));
				half4 Noise_Params685_g174623 = lerpResult39_g174624;
				half Input_MotionNoise552_g174623 = _MotionSmallNoiseValue;
				half Global_WindIntensity576_g174623 = (lerpResult627_g174623).z;
				half Motion_Intensity720_g174623 = ( Global_WindIntensity576_g174623 * Input_MotionValue629_g174623 );
				float lerpResult701_g174623 = lerp( 1.0 , Input_MotionNoise552_g174623 , Motion_Intensity720_g174623);
				float2 lerpResult646_g174623 = lerp( Global_WindDirection593_g174623 , (Noise_Params685_g174623).rg , lerpResult701_g174623);
				float2 lerpResult724_g174623 = lerp( float2( 0.5,0.5 ) , lerpResult646_g174623 , Motion_Intensity720_g174623);
				float3 appendResult708_g174623 = (float3(lerpResult724_g174623 , ( (Noise_Params685_g174623).a * Motion_Intensity720_g174623 )));
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch673_g174623 = half3(0.5,0.5,0);
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch673_g174623 = appendResult712_g174623;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch673_g174623 = appendResult708_g174623;
				#else
				float3 staticSwitch673_g174623 = half3(0.5,0.5,0);
				#endif
				half3 Motion_Local694_g174623 = staticSwitch673_g174623;
				float temp_output_136_0_g174630 = _global_wind_layer_value;
				float temp_output_19_0_g174632 = TVE_WindLayers[(int)temp_output_136_0_g174630];
				half3 Input_Position180_g174633 = Input_PositionWO419_g174623;
				float2 temp_output_75_0_g174633 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g174633).xz ) );
				float temp_output_82_0_g174633 = temp_output_136_0_g174630;
				float2 temp_output_119_0_g174633 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g174633).xz ) );
				float temp_output_7_0_g174638 = 1.0;
				float temp_output_10_0_g174638 = ( TVE_RenderNearFadeValue - temp_output_7_0_g174638 );
				float4 lerpResult131_g174633 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g174633,temp_output_82_0_g174633), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g174633,temp_output_82_0_g174633), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g174633 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g174638 ) / temp_output_10_0_g174638 ) ));
				float4 temp_output_17_0_g174632 = lerpResult131_g174633;
				float4 temp_output_3_0_g174632 = TVE_WindParams;
				float4 ifLocalVar18_g174632 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g174632 >= 0.5 )
				ifLocalVar18_g174632 = temp_output_17_0_g174632;
				else
				ifLocalVar18_g174632 = temp_output_3_0_g174632;
				float4 lerpResult22_g174632 = lerp( temp_output_3_0_g174632 , temp_output_17_0_g174632 , temp_output_19_0_g174632);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g174632 = lerpResult22_g174632;
				#else
				float4 staticSwitch24_g174632 = ifLocalVar18_g174632;
				#endif
				float4 temp_output_610_0_g174623 = staticSwitch24_g174632;
				float2 lerpResult699_g174623 = lerp( float2( 0.5,0.5 ) , (temp_output_610_0_g174623).rg , Input_MotionValue629_g174623);
				float3 appendResult643_g174623 = (float3(lerpResult699_g174623 , ( (temp_output_610_0_g174623).b * Input_MotionValue629_g174623 )));
				float3 lerpResult623_g174623 = lerp( Motion_Local694_g174623 , appendResult643_g174623 , (temp_output_610_0_g174623).a);
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch693_g174623 = appendResult643_g174623;
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch693_g174623 = lerpResult623_g174623;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch693_g174623 = lerpResult623_g174623;
				#else
				float3 staticSwitch693_g174623 = appendResult643_g174623;
				#endif
				#ifdef TVE_MOTION_WIND_ELEMENT
				float3 staticSwitch612_g174623 = staticSwitch693_g174623;
				#else
				float3 staticSwitch612_g174623 = Motion_Local694_g174623;
				#endif
				float3 temp_output_2276_567_g174563 = staticSwitch612_g174623;
				float2 break83_g174594 = ((temp_output_2276_567_g174563).xy*2.0 + -1.0);
				float3 appendResult79_g174594 = (float3(break83_g174594.x , 0.0 , break83_g174594.y));
				half2 Small_Direction1489_g174563 = (( mul( unity_WorldToObject, float4( appendResult79_g174594 , 0.0 ) ).xyz * ase_parentObjectScale )).xz;
				#ifdef TVE_MOTION_SMALL_SQUASH
				float2 staticSwitch1485_g174563 = Small_Direction1489_g174563;
				#else
				float2 staticSwitch1485_g174563 = Base_Direction893_g174563;
				#endif
				half2 Wave_Direction1486_g174563 = staticSwitch1485_g174563;
				float2 break1828_g174563 = -Wave_Direction1486_g174563;
				float3 appendResult1830_g174563 = (float3(break1828_g174563.x , 0.0 , break1828_g174563.y));
				float dotResult1831_g174563 = dot( normalizeResult1832_g174563 , appendResult1830_g174563 );
				float lerpResult1826_g174563 = lerp( 1.0 , (dotResult1831_g174563*0.5 + 0.5) , _MotionFrontValue);
				half Motion_FrontMask1142_g174563 = lerpResult1826_g174563;
				float2 break1939_g174563 = Small_Direction1489_g174563;
				#if defined( TVE_MOTION_WIND_OFF )
				float staticSwitch734_g174623 = 4.0;
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float staticSwitch734_g174623 = 4.0;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float staticSwitch734_g174623 = Input_MotionSpeed62_g174623;
				#else
				float staticSwitch734_g174623 = 4.0;
				#endif
				float mulTime113_g174639 = _Time.y * staticSwitch734_g174623;
				float lerpResult128_g174639 = lerp( mulTime113_g174639 , ( ( mulTime113_g174639 * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				float3 break726_g174623 = Input_PositionWO419_g174623;
				half Small_Vertical2215_g174563 = ( sin( ( lerpResult128_g174639 + ( ( break726_g174623.x + break726_g174623.y + break726_g174623.z ) * 2.0 ) ) ) * 0.1 );
				half Small_Intensity2047_g174563 = length( Small_Direction1489_g174563 );
				float3 appendResult2056_g174563 = (float3(break1939_g174563.x , ( Small_Vertical2215_g174563 * Small_Intensity2047_g174563 ) , break1939_g174563.y));
				float lerpResult2098_g174563 = lerp( 1.0 , ( Small_Intensity2047_g174563 * Small_Intensity2047_g174563 ) , _MotionSmallDelayValue);
				float3 appendResult2101_g174563 = (float3(lerpResult2098_g174563 , 1.0 , lerpResult2098_g174563));
				half3 Small_Squash789_g174563 = ( Small_Value2180_g174563 * Small_Mask640_g174563 * Motion_FrontMask1142_g174563 * appendResult2056_g174563 * appendResult2101_g174563 );
				#ifdef TVE_MOTION_SMALL_SQUASH
				float3 staticSwitch495_g174563 = Small_Squash789_g174563;
				#else
				float3 staticSwitch495_g174563 = temp_cast_39;
				#endif
				float3 temp_cast_50 = (0.0).xxx;
				float4 break1710_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174576 = _motion_tiny_vert_mode;
				float temp_output_30_0_g174576 = ( break1710_g174563.x * break33_g174576.x );
				float temp_output_29_0_g174576 = ( break1710_g174563.y * break33_g174576.y );
				float temp_output_31_0_g174576 = ( break1710_g174563.z * break33_g174576.z );
				float temp_output_28_0_g174576 = ( temp_output_30_0_g174576 + temp_output_29_0_g174576 + temp_output_31_0_g174576 + ( break1710_g174563.w * break33_g174576.w ) );
				float temp_output_1729_0_g174563 = temp_output_28_0_g174576;
				float4 break33_g174579 = _motion_tiny_proc_mode;
				float temp_output_30_0_g174579 = ( (Model_BoundsData1322_g174563).z * break33_g174579.x );
				float temp_output_29_0_g174579 = ( (Model_BoundsData1322_g174563).w * break33_g174579.y );
				float temp_output_1735_0_g174563 = ( temp_output_30_0_g174579 + temp_output_29_0_g174579 );
				float lerpResult1908_g174563 = lerp( temp_output_1729_0_g174563 , temp_output_1735_0_g174563 , _motion_tiny_mask_mode);
				half Tiny_Mask_Legacy1807_g174563 = break1804_g174563.y;
				#ifdef TVE_LEGACY
				float staticSwitch1810_g174563 = Tiny_Mask_Legacy1807_g174563;
				#else
				float staticSwitch1810_g174563 = lerpResult1908_g174563;
				#endif
				float clampResult17_g174582 = clamp( staticSwitch1810_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174583 = _MotionTinyMaskRemap.x;
				float temp_output_10_0_g174583 = ( _MotionTinyMaskRemap.y - temp_output_7_0_g174583 );
				float temp_output_6_0_g174584 = saturate( ( ( clampResult17_g174582 - temp_output_7_0_g174583 ) / ( temp_output_10_0_g174583 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174584 = ( temp_output_6_0_g174584 + ( _MotionTinyMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174584 = temp_output_6_0_g174584;
				#endif
				half Tiny_Mask218_g174563 = staticSwitch14_g174584;
				half3 Input_Position500_g174600 = Model_PositionWO162_g174563;
				half Input_MotionTilling321_g174600 = _MotionTinyTillingValue;
				float lerpResult128_g174604 = lerp( _Time.y , ( ( _Time.y * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				half Input_MotionSpeed62_g174600 = _MotionTinySpeedValue;
				float3 temp_output_519_0_g174600 = (SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( ( (Input_Position500_g174600).xz * Input_MotionTilling321_g174600 * 0.03 ) + ( lerpResult128_g174604 * Input_MotionSpeed62_g174600 * 0.01 ) ), 0.0 ).rgb*2.0 + -1.0);
				half3 Tiny_Direction859_g174563 = temp_output_519_0_g174600;
				half3 Model_PositionWS1819_g174563 = temp_output_1567_16_g174563;
				half Motion_FadeMask1820_g174563 = ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS1819_g174563 ) / _MotionDistValue ) ) );
				half Base_Noise1159_g174563 = abs( (temp_output_2275_567_g174563).z );
				half Small_Noise1427_g174563 = (temp_output_2276_567_g174563).z;
				#ifdef TVE_MOTION_SMALL_SQUASH
				float staticSwitch2013_g174563 = Small_Noise1427_g174563;
				#else
				float staticSwitch2013_g174563 = Base_Noise1159_g174563;
				#endif
				float temp_output_136_0_g174564 = _global_push_layer_value;
				float temp_output_19_0_g174565 = TVE_PushLayers[(int)temp_output_136_0_g174564];
				float3 lerpResult1547_g174563 = lerp( Model_PositionWO162_g174563 , Model_PivotWO402_g174563 , _MotionPushPivotValue);
				half3 Push_Position1549_g174563 = ( lerpResult1547_g174563 + ( (Model_MotionMasks489_g174563).z * _MotionPushPhaseValue ) );
				half3 Input_Position180_g174566 = Push_Position1549_g174563;
				float2 temp_output_75_0_g174566 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g174566).xz ) );
				float temp_output_82_0_g174566 = temp_output_136_0_g174564;
				float2 temp_output_119_0_g174566 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g174566).xz ) );
				float temp_output_7_0_g174571 = 1.0;
				float temp_output_10_0_g174571 = ( TVE_RenderNearFadeValue - temp_output_7_0_g174571 );
				float4 lerpResult131_g174566 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g174566,temp_output_82_0_g174566), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g174566,temp_output_82_0_g174566), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g174566 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g174571 ) / temp_output_10_0_g174571 ) ));
				float4 temp_output_17_0_g174565 = lerpResult131_g174566;
				float4 temp_output_3_0_g174565 = TVE_PushParams;
				float4 ifLocalVar18_g174565 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g174565 >= 0.5 )
				ifLocalVar18_g174565 = temp_output_17_0_g174565;
				else
				ifLocalVar18_g174565 = temp_output_3_0_g174565;
				float4 lerpResult22_g174565 = lerp( temp_output_3_0_g174565 , temp_output_17_0_g174565 , temp_output_19_0_g174565);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g174565 = lerpResult22_g174565;
				#else
				float4 staticSwitch24_g174565 = ifLocalVar18_g174565;
				#endif
				half4 Global_PushParams214_g174563 = staticSwitch24_g174565;
				half Push_Noise1977_g174563 = (Global_PushParams214_g174563).b;
				half Push_Value1501_g174563 = _MotionPushIntensityValue;
				half Push_Influence1504_g174563 = saturate( ( (Global_PushParams214_g174563).a * Push_Value1501_g174563 ) );
				float lerpResult2016_g174563 = lerp( staticSwitch2013_g174563 , Push_Noise1977_g174563 , Push_Influence1504_g174563);
				#ifdef TVE_MOTION_PUSH_BENDING
				float staticSwitch2012_g174563 = lerpResult2016_g174563;
				#else
				float staticSwitch2012_g174563 = staticSwitch2013_g174563;
				#endif
				half Wave_Noise1475_g174563 = staticSwitch2012_g174563;
				half3 Tiny_Flutter1451_g174563 = ( _MotionTinyIntensityValue * Tiny_Mask218_g174563 * Tiny_Direction859_g174563 * Motion_FadeMask1820_g174563 * Flow_Value1855_g174563 * ( Wave_Noise1475_g174563 * Wave_Noise1475_g174563 ) );
				#ifdef TVE_MOTION_TINY_FLUTTER
				float3 staticSwitch414_g174563 = Tiny_Flutter1451_g174563;
				#else
				float3 staticSwitch414_g174563 = temp_cast_50;
				#endif
				half3 Final_PositionADD1569_g174563 = ( staticSwitch495_g174563 + staticSwitch414_g174563 );
				float3 In_PositionAddOS16_g174577 = Final_PositionADD1569_g174563;
				float3 temp_output_1567_24_g174563 = Out_PivotOS15_g174573;
				float3 In_PivotOS16_g174577 = temp_output_1567_24_g174563;
				float3 In_PivotWS16_g174577 = Out_PivotWS15_g174573;
				float3 In_PivotWO16_g174577 = temp_output_1567_19_g174563;
				float3 temp_output_1567_20_g174563 = Out_NormalOS15_g174573;
				float3 In_NormalOS16_g174577 = temp_output_1567_20_g174563;
				float3 In_NormalWS16_g174577 = Out_NormalWS15_g174573;
				float3 In_NormalRawOS16_g174577 = Out_NormalRawOS15_g174573;
				float3 In_NormalRawWS16_g174577 = Out_NormalRawWS15_g174573;
				float4 In_TangentOS16_g174577 = Out_TangentOS15_g174573;
				float3 In_ViewDirWS16_g174577 = Out_ViewDirWS15_g174573;
				float4 In_VertexData16_g174577 = temp_output_1567_29_g174563;
				float4 In_MotionData16_g174577 = temp_output_1567_27_g174563;
				float4 In_BoundsData16_g174577 = temp_output_1567_30_g174563;
				float2 temp_cast_54 = (0.0).xx;
				half Base_Value2242_g174563 = _MotionBaseIntensityValue;
				float4 break748_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174587 = _motion_base_vert_mode;
				float temp_output_30_0_g174587 = ( break748_g174563.x * break33_g174587.x );
				float temp_output_29_0_g174587 = ( break748_g174563.y * break33_g174587.y );
				float temp_output_31_0_g174587 = ( break748_g174563.z * break33_g174587.z );
				float temp_output_28_0_g174587 = ( temp_output_30_0_g174587 + temp_output_29_0_g174587 + temp_output_31_0_g174587 + ( break748_g174563.w * break33_g174587.w ) );
				float temp_output_1731_0_g174563 = temp_output_28_0_g174587;
				float4 break33_g174588 = _motion_base_proc_mode;
				float temp_output_30_0_g174588 = ( (Model_BoundsData1322_g174563).z * break33_g174588.x );
				float temp_output_29_0_g174588 = ( (Model_BoundsData1322_g174563).w * break33_g174588.y );
				float temp_output_1733_0_g174563 = ( temp_output_30_0_g174588 + temp_output_29_0_g174588 );
				float lerpResult1904_g174563 = lerp( temp_output_1731_0_g174563 , temp_output_1733_0_g174563 , _motion_base_mask_mode);
				float clampResult17_g174585 = clamp( lerpResult1904_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174586 = _MotionBaseMaskRemap.x;
				float temp_output_10_0_g174586 = ( _MotionBaseMaskRemap.y - temp_output_7_0_g174586 );
				float temp_output_6_0_g174598 = saturate( ( ( clampResult17_g174585 - temp_output_7_0_g174586 ) / ( temp_output_10_0_g174586 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174598 = ( temp_output_6_0_g174598 + ( _MotionBaseMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174598 = temp_output_6_0_g174598;
				#endif
				half Base_Mask217_g174563 = staticSwitch14_g174598;
				half Base_Intensity2041_g174563 = length( Base_Direction893_g174563 );
				float lerpResult2090_g174563 = lerp( 1.0 , ( Base_Intensity2041_g174563 * Base_Intensity2041_g174563 ) , _MotionBaseDelayValue);
				#ifdef TVE_MOTION_BASE_BENDING
				float2 staticSwitch1573_g174563 = ( Base_Value2242_g174563 * Base_Mask217_g174563 * Base_Direction893_g174563 * lerpResult2090_g174563 );
				#else
				float2 staticSwitch1573_g174563 = temp_cast_54;
				#endif
				float4 break1864_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174591 = _motion_push_vert_mode;
				float temp_output_30_0_g174591 = ( break1864_g174563.x * break33_g174591.x );
				float temp_output_29_0_g174591 = ( break1864_g174563.y * break33_g174591.y );
				float temp_output_31_0_g174591 = ( break1864_g174563.z * break33_g174591.z );
				float temp_output_28_0_g174591 = ( temp_output_30_0_g174591 + temp_output_29_0_g174591 + temp_output_31_0_g174591 + ( break1864_g174563.w * break33_g174591.w ) );
				float temp_output_1867_0_g174563 = temp_output_28_0_g174591;
				float4 break33_g174592 = _motion_push_proc_mode;
				float temp_output_30_0_g174592 = ( (Model_BoundsData1322_g174563).z * break33_g174592.x );
				float temp_output_29_0_g174592 = ( (Model_BoundsData1322_g174563).w * break33_g174592.y );
				float temp_output_1868_0_g174563 = ( temp_output_30_0_g174592 + temp_output_29_0_g174592 );
				float lerpResult1910_g174563 = lerp( temp_output_1867_0_g174563 , temp_output_1868_0_g174563 , _motion_push_mask_mode);
				float clampResult17_g174589 = clamp( lerpResult1910_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174590 = _MotionPushMaskRemap.x;
				float temp_output_10_0_g174590 = ( _MotionPushMaskRemap.y - temp_output_7_0_g174590 );
				float temp_output_6_0_g174593 = saturate( ( ( clampResult17_g174589 - temp_output_7_0_g174590 ) / ( temp_output_10_0_g174590 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174593 = ( temp_output_6_0_g174593 + ( _MotionPushMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174593 = temp_output_6_0_g174593;
				#endif
				half Push_Mask1877_g174563 = staticSwitch14_g174593;
				float2 break83_g174596 = ((Global_PushParams214_g174563).rg*2.0 + -1.0);
				float3 appendResult79_g174596 = (float3(break83_g174596.x , 0.0 , break83_g174596.y));
				half2 Push_Direction1972_g174563 = (( mul( unity_WorldToObject, float4( appendResult79_g174596 , 0.0 ) ).xyz * ase_parentObjectScale )).xz;
				float2 lerpResult1496_g174563 = lerp( staticSwitch1573_g174563 , ( Push_Mask1877_g174563 * Push_Value1501_g174563 * Push_Direction1972_g174563 ) , Push_Influence1504_g174563);
				#ifdef TVE_MOTION_PUSH_BENDING
				float2 staticSwitch1506_g174563 = lerpResult1496_g174563;
				#else
				float2 staticSwitch1506_g174563 = staticSwitch1573_g174563;
				#endif
				half2 Base_Bending1440_g174563 = staticSwitch1506_g174563;
				float4 appendResult2023_g174563 = (float4(Base_Bending1440_g174563 , 0.0 , 0.0));
				half4 Final_RotationData1570_g174563 = appendResult2023_g174563;
				float4 In_RotationData16_g174577 = Final_RotationData1570_g174563;
				Data16_g174577.Dummy = In_Dummy16_g174577;
				Data16_g174577.PositionOS = In_PositionOS16_g174577;
				Data16_g174577.PositionWS = In_PositionWS16_g174577;
				Data16_g174577.PositionWO = In_PositionWO16_g174577;
				Data16_g174577.PositionRawOS = In_PositionRawOS16_g174577;
				Data16_g174577.PositionAddOS = In_PositionAddOS16_g174577;
				Data16_g174577.PivotOS = In_PivotOS16_g174577;
				Data16_g174577.PivotWS = In_PivotWS16_g174577;
				Data16_g174577.PivotWO = In_PivotWO16_g174577;
				Data16_g174577.NormalOS = In_NormalOS16_g174577;
				Data16_g174577.NormalWS = In_NormalWS16_g174577;
				Data16_g174577.NormalRawOS = In_NormalRawOS16_g174577;
				Data16_g174577.NormalRawWS = In_NormalRawWS16_g174577;
				Data16_g174577.TangentOS = In_TangentOS16_g174577;
				Data16_g174577.ViewDirWS = In_ViewDirWS16_g174577;
				Data16_g174577.VertexData = In_VertexData16_g174577;
				Data16_g174577.MotionData = In_MotionData16_g174577;
				Data16_g174577.BoundsData = In_BoundsData16_g174577;
				Data16_g174577.RotationData = In_RotationData16_g174577;
				TVEModelData Data15_g174800 = Data16_g174577;
				float Out_Dummy15_g174800 = 0;
				float3 Out_PositionOS15_g174800 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174800 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174800 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174800 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174800 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174800 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174800 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174800 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174800 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174800 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174800 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174800 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174800 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174800 = float3( 0,0,0 );
				float4 Out_VertexData15_g174800 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174800 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174800 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174800 = float4( 0,0,0,0 );
				Out_Dummy15_g174800 = Data15_g174800.Dummy;
				Out_PositionOS15_g174800 = Data15_g174800.PositionOS;
				Out_PositionWS15_g174800 = Data15_g174800.PositionWS;
				Out_PositionWO15_g174800 = Data15_g174800.PositionWO;
				Out_PositionRawOS15_g174800 = Data15_g174800.PositionRawOS;
				Out_PositionAddOS15_g174800 = Data15_g174800.PositionAddOS;
				Out_PivotOS15_g174800 = Data15_g174800.PivotOS;
				Out_PivotWS15_g174800 = Data15_g174800.PivotWS;
				Out_PivotWO15_g174800 = Data15_g174800.PivotWO;
				Out_NormalOS15_g174800 = Data15_g174800.NormalOS;
				Out_NormalWS15_g174800 = Data15_g174800.NormalWS;
				Out_NormalRawOS15_g174800 = Data15_g174800.NormalRawOS;
				Out_NormalRawWS15_g174800 = Data15_g174800.NormalRawWS;
				Out_TangentOS15_g174800 = Data15_g174800.TangentOS;
				Out_ViewDirWS15_g174800 = Data15_g174800.ViewDirWS;
				Out_VertexData15_g174800 = Data15_g174800.VertexData;
				Out_MotionData15_g174800 = Data15_g174800.MotionData;
				Out_BoundsData15_g174800 = Data15_g174800.BoundsData;
				Out_RotationData15_g174800 = Data15_g174800.RotationData;
				float3 In_PositionOS16_g174801 = Out_PositionOS15_g174800;
				float3 In_PositionWS16_g174801 = Out_PositionWS15_g174800;
				float3 In_PositionWO16_g174801 = Out_PositionWO15_g174800;
				float3 In_PositionRawOS16_g174801 = Out_PositionRawOS15_g174800;
				half3 Model_PositionADD147_g174798 = Out_PositionAddOS15_g174800;
				TVEGlobalData Data15_g174799 = Data204_g173897;
				float Out_Dummy15_g174799 = 0;
				float4 Out_CoatParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174799 = float4( 0,0,0,0 );
				Out_Dummy15_g174799 = Data15_g174799.Dummy;
				Out_CoatParams15_g174799 = Data15_g174799.CoatParams;
				Out_PaintParams15_g174799 = Data15_g174799.PaintParams;
				Out_GlowParams15_g174799 = Data15_g174799.GlowParams;
				Out_AtmoParams15_g174799= Data15_g174799.AtmoParams;
				Out_FadeParams15_g174799= Data15_g174799.FadeParams;
				Out_FormParams15_g174799 = Data15_g174799.FormParams;
				Out_LandParams15_g174799 = Data15_g174799.LandParams;
				Out_WindParams15_g174799 = Data15_g174799.WindParams;
				Out_PushParams15_g174799 = Data15_g174799.PushParams;
				half4 Input_FormParams188_g174798 = Out_FormParams15_g174799;
				float3 temp_output_210_19_g174798 = Out_PivotWO15_g174800;
				half3 Model_PivotWO162_g174798 = temp_output_210_19_g174798;
				float3 ase_objectScale = float3( length( unity_ObjectToWorld[ 0 ].xyz ), length( unity_ObjectToWorld[ 1 ].xyz ), length( unity_ObjectToWorld[ 2 ].xyz ) );
				float3 appendResult233_g174798 = (float3(0.0 , ( ( ( ( (Input_FormParams188_g174798).z - ( (Model_PivotWO162_g174798).y * _BlanketConformOffsetMode ) ) + _BlanketConformOffsetValue ) / ase_objectScale.y ) * ( _BlanketConformValue * TVE_IsEnabled ) ) , 0.0));
				half3 Blanket_Conform238_g174798 = appendResult233_g174798;
				float3 temp_output_249_0_g174798 = ( Model_PositionADD147_g174798 + Blanket_Conform238_g174798 );
				half3 Final_PositionADD178_g174798 = temp_output_249_0_g174798;
				float3 In_PositionAddOS16_g174801 = Final_PositionADD178_g174798;
				float3 In_PivotOS16_g174801 = Out_PivotOS15_g174800;
				float3 In_PivotWS16_g174801 = Out_PivotWS15_g174800;
				float3 In_PivotWO16_g174801 = temp_output_210_19_g174798;
				float3 In_NormalOS16_g174801 = Out_NormalOS15_g174800;
				float3 In_NormalWS16_g174801 = Out_NormalWS15_g174800;
				float3 In_NormalRawOS16_g174801 = Out_NormalRawOS15_g174800;
				float3 In_NormalRawWS16_g174801 = Out_NormalRawWS15_g174800;
				float4 In_TangentOS16_g174801 = Out_TangentOS15_g174800;
				float3 In_ViewDirWS16_g174801 = Out_ViewDirWS15_g174800;
				float4 In_VertexData16_g174801 = Out_VertexData15_g174800;
				float4 In_MotionData16_g174801 = Out_MotionData15_g174800;
				float4 In_BoundsData16_g174801 = Out_BoundsData15_g174800;
				half4 Model_RotationData212_g174798 = Out_RotationData15_g174800;
				float2 break83_g174804 = ((Input_FormParams188_g174798).xy*2.0 + -1.0);
				float3 appendResult79_g174804 = (float3(break83_g174804.x , 0.0 , break83_g174804.y));
				float2 lerpResult227_g174798 = lerp( float2( 0,0 ) , (( mul( unity_WorldToObject, float4( appendResult79_g174804 , 0.0 ) ).xyz * ase_parentObjectScale )).xz , ( _BlanketOrientationValue * TVE_IsEnabled ));
				half2 Blanket_Orientation192_g174798 = lerpResult227_g174798;
				float4 appendResult222_g174798 = (float4(( (Model_RotationData212_g174798).xy + Blanket_Orientation192_g174798 ) , (Model_RotationData212_g174798).zw));
				#ifdef TVE_BLANKET_BENDING
				float4 staticSwitch218_g174798 = appendResult222_g174798;
				#else
				float4 staticSwitch218_g174798 = Model_RotationData212_g174798;
				#endif
				half4 Final_RotationData225_g174798 = staticSwitch218_g174798;
				float4 In_RotationData16_g174801 = Final_RotationData225_g174798;
				Data16_g174801.Dummy = In_Dummy16_g174801;
				Data16_g174801.PositionOS = In_PositionOS16_g174801;
				Data16_g174801.PositionWS = In_PositionWS16_g174801;
				Data16_g174801.PositionWO = In_PositionWO16_g174801;
				Data16_g174801.PositionRawOS = In_PositionRawOS16_g174801;
				Data16_g174801.PositionAddOS = In_PositionAddOS16_g174801;
				Data16_g174801.PivotOS = In_PivotOS16_g174801;
				Data16_g174801.PivotWS = In_PivotWS16_g174801;
				Data16_g174801.PivotWO = In_PivotWO16_g174801;
				Data16_g174801.NormalOS = In_NormalOS16_g174801;
				Data16_g174801.NormalWS = In_NormalWS16_g174801;
				Data16_g174801.NormalRawOS = In_NormalRawOS16_g174801;
				Data16_g174801.NormalRawWS = In_NormalRawWS16_g174801;
				Data16_g174801.TangentOS = In_TangentOS16_g174801;
				Data16_g174801.ViewDirWS = In_ViewDirWS16_g174801;
				Data16_g174801.VertexData = In_VertexData16_g174801;
				Data16_g174801.MotionData = In_MotionData16_g174801;
				Data16_g174801.BoundsData = In_BoundsData16_g174801;
				Data16_g174801.RotationData = In_RotationData16_g174801;
				TVEModelData Data15_g174819 = Data16_g174801;
				float Out_Dummy15_g174819 = 0;
				float3 Out_PositionOS15_g174819 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174819 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174819 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174819 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174819 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174819 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174819 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174819 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174819 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174819 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174819 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174819 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174819 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174819 = float3( 0,0,0 );
				float4 Out_VertexData15_g174819 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174819 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174819 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174819 = float4( 0,0,0,0 );
				Out_Dummy15_g174819 = Data15_g174819.Dummy;
				Out_PositionOS15_g174819 = Data15_g174819.PositionOS;
				Out_PositionWS15_g174819 = Data15_g174819.PositionWS;
				Out_PositionWO15_g174819 = Data15_g174819.PositionWO;
				Out_PositionRawOS15_g174819 = Data15_g174819.PositionRawOS;
				Out_PositionAddOS15_g174819 = Data15_g174819.PositionAddOS;
				Out_PivotOS15_g174819 = Data15_g174819.PivotOS;
				Out_PivotWS15_g174819 = Data15_g174819.PivotWS;
				Out_PivotWO15_g174819 = Data15_g174819.PivotWO;
				Out_NormalOS15_g174819 = Data15_g174819.NormalOS;
				Out_NormalWS15_g174819 = Data15_g174819.NormalWS;
				Out_NormalRawOS15_g174819 = Data15_g174819.NormalRawOS;
				Out_NormalRawWS15_g174819 = Data15_g174819.NormalRawWS;
				Out_TangentOS15_g174819 = Data15_g174819.TangentOS;
				Out_ViewDirWS15_g174819 = Data15_g174819.ViewDirWS;
				Out_VertexData15_g174819 = Data15_g174819.VertexData;
				Out_MotionData15_g174819 = Data15_g174819.MotionData;
				Out_BoundsData15_g174819 = Data15_g174819.BoundsData;
				Out_RotationData15_g174819 = Data15_g174819.RotationData;
				half3 Model_PositionOS147_g174818 = Out_PositionOS15_g174819;
				half3 Input_False58_g174821 = Model_PositionOS147_g174818;
				half3 VertexPos40_g174822 = Model_PositionOS147_g174818;
				half3 VertexPos40_g174823 = VertexPos40_g174822;
				float3 appendResult74_g174823 = (float3(VertexPos40_g174823.x , 0.0 , 0.0));
				half3 VertexPosRotationAxis50_g174823 = appendResult74_g174823;
				float3 break84_g174823 = VertexPos40_g174823;
				float3 appendResult81_g174823 = (float3(0.0 , break84_g174823.y , break84_g174823.z));
				half3 VertexPosOtherAxis82_g174823 = appendResult81_g174823;
				float4 temp_output_1567_33_g174818 = Out_RotationData15_g174819;
				half4 Model_VertexBend1569_g174818 = temp_output_1567_33_g174818;
				half2 Angle44_g174822 = (Model_VertexBend1569_g174818).xy;
				half Angle44_g174823 = (Angle44_g174822).y;
				half3 VertexPos40_g174824 = ( VertexPosRotationAxis50_g174823 + ( VertexPosOtherAxis82_g174823 * cos( Angle44_g174823 ) ) + ( cross( float3(1,0,0) , VertexPosOtherAxis82_g174823 ) * sin( Angle44_g174823 ) ) );
				float3 appendResult74_g174824 = (float3(0.0 , 0.0 , VertexPos40_g174824.z));
				half3 VertexPosRotationAxis50_g174824 = appendResult74_g174824;
				float3 break84_g174824 = VertexPos40_g174824;
				float3 appendResult81_g174824 = (float3(break84_g174824.x , break84_g174824.y , 0.0));
				half3 VertexPosOtherAxis82_g174824 = appendResult81_g174824;
				half Angle44_g174824 = -(Angle44_g174822).x;
				half3 Input_True57_g174821 = ( VertexPosRotationAxis50_g174824 + ( VertexPosOtherAxis82_g174824 * cos( Angle44_g174824 ) ) + ( cross( float3(0,0,1) , VertexPosOtherAxis82_g174824 ) * sin( Angle44_g174824 ) ) );
				#ifdef TVE_MOTION_BASE_BENDING
				float3 staticSwitch65_g174821 = Input_True57_g174821;
				#else
				float3 staticSwitch65_g174821 = Input_False58_g174821;
				#endif
				#ifdef TVE_MOTION_PUSH_BENDING
				float3 staticSwitch67_g174821 = Input_True57_g174821;
				#else
				float3 staticSwitch67_g174821 = staticSwitch65_g174821;
				#endif
				#ifdef TVE_BLANKET_BENDING
				float3 staticSwitch69_g174821 = Input_True57_g174821;
				#else
				float3 staticSwitch69_g174821 = staticSwitch67_g174821;
				#endif
				float3 temp_output_1578_0_g174818 = staticSwitch69_g174821;
				float3 temp_output_1567_31_g174818 = Out_PositionAddOS15_g174819;
				half3 Model_PositionADD1568_g174818 = temp_output_1567_31_g174818;
				half3 Final_PositionOS178_g174818 = ( temp_output_1578_0_g174818 + Model_PositionADD1568_g174818 );
				float3 In_PositionOS16_g174820 = Final_PositionOS178_g174818;
				float3 In_PositionWS16_g174820 = Out_PositionWS15_g174819;
				float3 In_PositionWO16_g174820 = Out_PositionWO15_g174819;
				float3 In_PositionRawOS16_g174820 = Out_PositionRawOS15_g174819;
				float3 In_PositionAddOS16_g174820 = temp_output_1567_31_g174818;
				float3 In_PivotOS16_g174820 = Out_PivotOS15_g174819;
				float3 In_PivotWS16_g174820 = Out_PivotWS15_g174819;
				float3 In_PivotWO16_g174820 = Out_PivotWO15_g174819;
				float3 In_NormalOS16_g174820 = Out_NormalOS15_g174819;
				float3 In_NormalWS16_g174820 = Out_NormalWS15_g174819;
				float3 In_NormalRawOS16_g174820 = Out_NormalRawOS15_g174819;
				float3 In_NormalRawWS16_g174820 = Out_NormalRawWS15_g174819;
				float4 In_TangentOS16_g174820 = Out_TangentOS15_g174819;
				float3 In_ViewDirWS16_g174820 = Out_ViewDirWS15_g174819;
				float4 In_VertexData16_g174820 = Out_VertexData15_g174819;
				float4 In_MotionData16_g174820 = Out_MotionData15_g174819;
				float4 In_BoundsData16_g174820 = Out_BoundsData15_g174819;
				float4 In_RotationData16_g174820 = temp_output_1567_33_g174818;
				Data16_g174820.Dummy = In_Dummy16_g174820;
				Data16_g174820.PositionOS = In_PositionOS16_g174820;
				Data16_g174820.PositionWS = In_PositionWS16_g174820;
				Data16_g174820.PositionWO = In_PositionWO16_g174820;
				Data16_g174820.PositionRawOS = In_PositionRawOS16_g174820;
				Data16_g174820.PositionAddOS = In_PositionAddOS16_g174820;
				Data16_g174820.PivotOS = In_PivotOS16_g174820;
				Data16_g174820.PivotWS = In_PivotWS16_g174820;
				Data16_g174820.PivotWO = In_PivotWO16_g174820;
				Data16_g174820.NormalOS = In_NormalOS16_g174820;
				Data16_g174820.NormalWS = In_NormalWS16_g174820;
				Data16_g174820.NormalRawOS = In_NormalRawOS16_g174820;
				Data16_g174820.NormalRawWS = In_NormalRawWS16_g174820;
				Data16_g174820.TangentOS = In_TangentOS16_g174820;
				Data16_g174820.ViewDirWS = In_ViewDirWS16_g174820;
				Data16_g174820.VertexData = In_VertexData16_g174820;
				Data16_g174820.MotionData = In_MotionData16_g174820;
				Data16_g174820.BoundsData = In_BoundsData16_g174820;
				Data16_g174820.RotationData = In_RotationData16_g174820;
				TVEModelData Data15_g174842 = Data16_g174820;
				float Out_Dummy15_g174842 = 0;
				float3 Out_PositionOS15_g174842 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174842 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174842 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174842 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174842 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174842 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174842 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174842 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174842 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174842 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174842 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174842 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174842 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174842 = float3( 0,0,0 );
				float4 Out_VertexData15_g174842 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174842 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174842 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174842 = float4( 0,0,0,0 );
				Out_Dummy15_g174842 = Data15_g174842.Dummy;
				Out_PositionOS15_g174842 = Data15_g174842.PositionOS;
				Out_PositionWS15_g174842 = Data15_g174842.PositionWS;
				Out_PositionWO15_g174842 = Data15_g174842.PositionWO;
				Out_PositionRawOS15_g174842 = Data15_g174842.PositionRawOS;
				Out_PositionAddOS15_g174842 = Data15_g174842.PositionAddOS;
				Out_PivotOS15_g174842 = Data15_g174842.PivotOS;
				Out_PivotWS15_g174842 = Data15_g174842.PivotWS;
				Out_PivotWO15_g174842 = Data15_g174842.PivotWO;
				Out_NormalOS15_g174842 = Data15_g174842.NormalOS;
				Out_NormalWS15_g174842 = Data15_g174842.NormalWS;
				Out_NormalRawOS15_g174842 = Data15_g174842.NormalRawOS;
				Out_NormalRawWS15_g174842 = Data15_g174842.NormalRawWS;
				Out_TangentOS15_g174842 = Data15_g174842.TangentOS;
				Out_ViewDirWS15_g174842 = Data15_g174842.ViewDirWS;
				Out_VertexData15_g174842 = Data15_g174842.VertexData;
				Out_MotionData15_g174842 = Data15_g174842.MotionData;
				Out_BoundsData15_g174842 = Data15_g174842.BoundsData;
				Out_RotationData15_g174842 = Data15_g174842.RotationData;
				float3 In_PositionOS16_g174843 = Out_PositionOS15_g174842;
				float3 In_PositionWS16_g174843 = Out_PositionWS15_g174842;
				float3 temp_output_1567_17_g174841 = Out_PositionWO15_g174842;
				float3 In_PositionWO16_g174843 = temp_output_1567_17_g174841;
				float3 temp_output_1567_26_g174841 = Out_PositionRawOS15_g174842;
				float3 In_PositionRawOS16_g174843 = temp_output_1567_26_g174841;
				float3 In_PositionAddOS16_g174843 = Out_PositionAddOS15_g174842;
				float3 In_PivotOS16_g174843 = Out_PivotOS15_g174842;
				float3 In_PivotWS16_g174843 = Out_PivotWS15_g174842;
				float3 In_PivotWO16_g174843 = Out_PivotWO15_g174842;
				half3 Model_NormalOS1568_g174841 = Out_NormalOS15_g174842;
				float3 lerpResult1589_g174841 = lerp( Model_NormalOS1568_g174841 , half3(0,1,0) , _NormalFlattenValue);
				half3 Model_PositionRAW1592_g174841 = temp_output_1567_26_g174841;
				float3 normalizeResult1594_g174841 = ASESafeNormalize( ( Model_PositionRAW1592_g174841 + _NormalSphereOffsetValue ) );
				float3 lerpResult1585_g174841 = lerp( lerpResult1589_g174841 , normalizeResult1594_g174841 , _NormalSphereValue);
				half3 Input_False58_g174856 = lerpResult1585_g174841;
				half3 VertexPos40_g174845 = lerpResult1585_g174841;
				half3 VertexPos40_g174846 = VertexPos40_g174845;
				float3 appendResult74_g174846 = (float3(VertexPos40_g174846.x , 0.0 , 0.0));
				half3 VertexPosRotationAxis50_g174846 = appendResult74_g174846;
				float3 break84_g174846 = VertexPos40_g174846;
				float3 appendResult81_g174846 = (float3(0.0 , break84_g174846.y , break84_g174846.z));
				half3 VertexPosOtherAxis82_g174846 = appendResult81_g174846;
				float4 temp_output_1567_33_g174841 = Out_RotationData15_g174842;
				half4 Model_RotationData1583_g174841 = temp_output_1567_33_g174841;
				half2 Angle44_g174845 = Model_RotationData1583_g174841.xy;
				half Angle44_g174846 = (Angle44_g174845).y;
				half3 VertexPos40_g174847 = ( VertexPosRotationAxis50_g174846 + ( VertexPosOtherAxis82_g174846 * cos( Angle44_g174846 ) ) + ( cross( float3(1,0,0) , VertexPosOtherAxis82_g174846 ) * sin( Angle44_g174846 ) ) );
				float3 appendResult74_g174847 = (float3(0.0 , 0.0 , VertexPos40_g174847.z));
				half3 VertexPosRotationAxis50_g174847 = appendResult74_g174847;
				float3 break84_g174847 = VertexPos40_g174847;
				float3 appendResult81_g174847 = (float3(break84_g174847.x , break84_g174847.y , 0.0));
				half3 VertexPosOtherAxis82_g174847 = appendResult81_g174847;
				half Angle44_g174847 = -(Angle44_g174845).x;
				float3 lerpResult1591_g174841 = lerp( lerpResult1585_g174841 , ( VertexPosRotationAxis50_g174847 + ( VertexPosOtherAxis82_g174847 * cos( Angle44_g174847 ) ) + ( cross( float3(0,0,1) , VertexPosOtherAxis82_g174847 ) * sin( Angle44_g174847 ) ) ) , _NormalComputeValue);
				half3 Input_True57_g174856 = lerpResult1591_g174841;
				#ifdef TVE_MOTION_BASE_BENDING
				float3 staticSwitch65_g174856 = Input_True57_g174856;
				#else
				float3 staticSwitch65_g174856 = Input_False58_g174856;
				#endif
				#ifdef TVE_MOTION_PUSH_BENDING
				float3 staticSwitch67_g174856 = Input_True57_g174856;
				#else
				float3 staticSwitch67_g174856 = staticSwitch65_g174856;
				#endif
				#ifdef TVE_BLANKET_BENDING
				float3 staticSwitch69_g174856 = Input_True57_g174856;
				#else
				float3 staticSwitch69_g174856 = staticSwitch67_g174856;
				#endif
				#ifdef TVE_NORMAL_COMPUTE
				float3 staticSwitch1595_g174841 = staticSwitch69_g174856;
				#else
				float3 staticSwitch1595_g174841 = lerpResult1585_g174841;
				#endif
				TVEGlobalData Data15_g174844 = Data204_g173897;
				float Out_Dummy15_g174844 = 0;
				float4 Out_CoatParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174844 = float4( 0,0,0,0 );
				Out_Dummy15_g174844 = Data15_g174844.Dummy;
				Out_CoatParams15_g174844 = Data15_g174844.CoatParams;
				Out_PaintParams15_g174844 = Data15_g174844.PaintParams;
				Out_GlowParams15_g174844 = Data15_g174844.GlowParams;
				Out_AtmoParams15_g174844= Data15_g174844.AtmoParams;
				Out_FadeParams15_g174844= Data15_g174844.FadeParams;
				Out_FormParams15_g174844 = Data15_g174844.FormParams;
				Out_LandParams15_g174844 = Data15_g174844.LandParams;
				Out_WindParams15_g174844 = Data15_g174844.WindParams;
				Out_PushParams15_g174844 = Data15_g174844.PushParams;
				half4 Global_FormParams1633_g174841 = Out_FormParams15_g174844;
				float2 temp_output_1627_0_g174841 = ((Global_FormParams1633_g174841).xy*2.0 + -1.0);
				float2 break1617_g174841 = temp_output_1627_0_g174841;
				float dotResult1619_g174841 = dot( temp_output_1627_0_g174841 , temp_output_1627_0_g174841 );
				float3 appendResult1618_g174841 = (float3(break1617_g174841.x , sqrt( ( 1.0 - saturate( dotResult1619_g174841 ) ) ) , break1617_g174841.y));
				float3 worldToObjDir1623_g174841 = ASESafeNormalize( mul( unity_WorldToObject, float4( appendResult1618_g174841, 0 ) ).xyz );
				half3 Blanket_Normal1630_g174841 = worldToObjDir1623_g174841;
				float3 lerpResult1636_g174841 = lerp( staticSwitch1595_g174841 , Blanket_Normal1630_g174841 , ( _NormalBlanketValue * TVE_IsEnabled ));
				float4 temp_output_1567_29_g174841 = Out_VertexData15_g174842;
				half4 Model_VertexData1608_g174841 = temp_output_1567_29_g174841;
				float4 break1683_g174841 = Model_VertexData1608_g174841;
				float4 break33_g174849 = _normal_vert_mode;
				float temp_output_30_0_g174849 = ( break1683_g174841.x * break33_g174849.x );
				float temp_output_29_0_g174849 = ( break1683_g174841.y * break33_g174849.y );
				float temp_output_31_0_g174849 = ( break1683_g174841.z * break33_g174849.z );
				float temp_output_28_0_g174849 = ( temp_output_30_0_g174849 + temp_output_29_0_g174849 + temp_output_31_0_g174849 + ( break1683_g174841.w * break33_g174849.w ) );
				float clampResult17_g174851 = clamp( temp_output_28_0_g174849 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174850 = _NormalMeshRemap.x;
				float temp_output_10_0_g174850 = ( _NormalMeshRemap.y - temp_output_7_0_g174850 );
				float lerpResult1695_g174841 = lerp( 1.0 , saturate( ( ( clampResult17_g174851 - temp_output_7_0_g174850 ) / ( temp_output_10_0_g174850 + 0.0001 ) ) ) , _NormalMeshValue);
				float temp_output_6_0_g174852 = lerpResult1695_g174841;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174852 = ( temp_output_6_0_g174852 + ( _NormalMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174852 = temp_output_6_0_g174852;
				#endif
				float temp_output_1690_0_g174841 = staticSwitch14_g174852;
				half Normal_MeskMask1691_g174841 = temp_output_1690_0_g174841;
				float3 temp_output_1567_21_g174841 = Out_NormalWS15_g174842;
				half3 Model_NormalWS1639_g174841 = temp_output_1567_21_g174841;
				float clampResult17_g174853 = clamp( (Model_NormalWS1639_g174841).y , 0.0001 , 0.9999 );
				float temp_output_7_0_g174854 = _NormalProjRemap.x;
				float temp_output_10_0_g174854 = ( _NormalProjRemap.y - temp_output_7_0_g174854 );
				float lerpResult1669_g174841 = lerp( 1.0 , saturate( ( ( clampResult17_g174853 - temp_output_7_0_g174854 ) / ( temp_output_10_0_g174854 + 0.0001 ) ) ) , _NormalProjValue);
				half Normal_Proj_Mask1647_g174841 = lerpResult1669_g174841;
				float temp_output_1699_0_g174841 = ( Normal_MeskMask1691_g174841 * Normal_Proj_Mask1647_g174841 );
				half3 Model_PositionWO1640_g174841 = temp_output_1567_17_g174841;
				float temp_output_1704_0_g174841 = saturate( ( ( (Global_FormParams1633_g174841).z - (Model_PositionWO1640_g174841).y ) + _NormalLandOffsetValue ) );
				float lerpResult1707_g174841 = lerp( 1.0 , temp_output_1704_0_g174841 , ( _NormalLandValue * _NormalLandMode ));
				half Normal_Land_Mask_Mul1708_g174841 = lerpResult1707_g174841;
				half Normal_Land_Mask_Add1629_g174841 = ( temp_output_1704_0_g174841 * _NormalLandValue );
				float temp_output_6_0_g174855 = saturate( ( ( temp_output_1699_0_g174841 * Normal_Land_Mask_Mul1708_g174841 ) + Normal_Land_Mask_Add1629_g174841 ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174855 = ( temp_output_6_0_g174855 + ( _NormalBlanketInfo * 0.0 ) );
				#else
				float staticSwitch14_g174855 = temp_output_6_0_g174855;
				#endif
				float3 lerpResult1670_g174841 = lerp( Model_NormalOS1568_g174841 , lerpResult1636_g174841 , staticSwitch14_g174855);
				half3 Final_NormalOS178_g174841 = lerpResult1670_g174841;
				float3 In_NormalOS16_g174843 = Final_NormalOS178_g174841;
				float3 In_NormalWS16_g174843 = temp_output_1567_21_g174841;
				float3 In_NormalRawOS16_g174843 = Out_NormalRawOS15_g174842;
				float3 In_NormalRawWS16_g174843 = Out_NormalRawWS15_g174842;
				float4 In_TangentOS16_g174843 = Out_TangentOS15_g174842;
				float3 In_ViewDirWS16_g174843 = Out_ViewDirWS15_g174842;
				float4 In_VertexData16_g174843 = temp_output_1567_29_g174841;
				float4 In_MotionData16_g174843 = Out_MotionData15_g174842;
				float4 In_BoundsData16_g174843 = Out_BoundsData15_g174842;
				float4 In_RotationData16_g174843 = temp_output_1567_33_g174841;
				Data16_g174843.Dummy = In_Dummy16_g174843;
				Data16_g174843.PositionOS = In_PositionOS16_g174843;
				Data16_g174843.PositionWS = In_PositionWS16_g174843;
				Data16_g174843.PositionWO = In_PositionWO16_g174843;
				Data16_g174843.PositionRawOS = In_PositionRawOS16_g174843;
				Data16_g174843.PositionAddOS = In_PositionAddOS16_g174843;
				Data16_g174843.PivotOS = In_PivotOS16_g174843;
				Data16_g174843.PivotWS = In_PivotWS16_g174843;
				Data16_g174843.PivotWO = In_PivotWO16_g174843;
				Data16_g174843.NormalOS = In_NormalOS16_g174843;
				Data16_g174843.NormalWS = In_NormalWS16_g174843;
				Data16_g174843.NormalRawOS = In_NormalRawOS16_g174843;
				Data16_g174843.NormalRawWS = In_NormalRawWS16_g174843;
				Data16_g174843.TangentOS = In_TangentOS16_g174843;
				Data16_g174843.ViewDirWS = In_ViewDirWS16_g174843;
				Data16_g174843.VertexData = In_VertexData16_g174843;
				Data16_g174843.MotionData = In_MotionData16_g174843;
				Data16_g174843.BoundsData = In_BoundsData16_g174843;
				Data16_g174843.RotationData = In_RotationData16_g174843;
				TVEModelData Data15_g174865 = Data16_g174843;
				float Out_Dummy15_g174865 = 0;
				float3 Out_PositionOS15_g174865 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174865 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174865 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174865 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174865 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174865 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174865 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174865 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174865 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174865 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174865 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174865 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174865 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174865 = float3( 0,0,0 );
				float4 Out_VertexData15_g174865 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174865 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174865 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174865 = float4( 0,0,0,0 );
				Out_Dummy15_g174865 = Data15_g174865.Dummy;
				Out_PositionOS15_g174865 = Data15_g174865.PositionOS;
				Out_PositionWS15_g174865 = Data15_g174865.PositionWS;
				Out_PositionWO15_g174865 = Data15_g174865.PositionWO;
				Out_PositionRawOS15_g174865 = Data15_g174865.PositionRawOS;
				Out_PositionAddOS15_g174865 = Data15_g174865.PositionAddOS;
				Out_PivotOS15_g174865 = Data15_g174865.PivotOS;
				Out_PivotWS15_g174865 = Data15_g174865.PivotWS;
				Out_PivotWO15_g174865 = Data15_g174865.PivotWO;
				Out_NormalOS15_g174865 = Data15_g174865.NormalOS;
				Out_NormalWS15_g174865 = Data15_g174865.NormalWS;
				Out_NormalRawOS15_g174865 = Data15_g174865.NormalRawOS;
				Out_NormalRawWS15_g174865 = Data15_g174865.NormalRawWS;
				Out_TangentOS15_g174865 = Data15_g174865.TangentOS;
				Out_ViewDirWS15_g174865 = Data15_g174865.ViewDirWS;
				Out_VertexData15_g174865 = Data15_g174865.VertexData;
				Out_MotionData15_g174865 = Data15_g174865.MotionData;
				Out_BoundsData15_g174865 = Data15_g174865.BoundsData;
				Out_RotationData15_g174865 = Data15_g174865.RotationData;
				float3 temp_output_217_24_g174864 = Out_PivotOS15_g174865;
				float3 In_PositionOS16_g174866 = ( Out_PositionOS15_g174865 + temp_output_217_24_g174864 );
				float3 In_PositionWS16_g174866 = Out_PositionWS15_g174865;
				float3 In_PositionWO16_g174866 = Out_PositionWO15_g174865;
				float3 In_PositionRawOS16_g174866 = Out_PositionRawOS15_g174865;
				float3 In_PositionAddOS16_g174866 = Out_PositionAddOS15_g174865;
				float3 In_PivotOS16_g174866 = temp_output_217_24_g174864;
				float3 In_PivotWS16_g174866 = Out_PivotWS15_g174865;
				float3 In_PivotWO16_g174866 = Out_PivotWO15_g174865;
				float3 In_NormalOS16_g174866 = Out_NormalOS15_g174865;
				float3 In_NormalWS16_g174866 = Out_NormalWS15_g174865;
				float3 In_NormalRawOS16_g174866 = Out_NormalRawOS15_g174865;
				float3 In_NormalRawWS16_g174866 = Out_NormalRawWS15_g174865;
				float4 In_TangentOS16_g174866 = Out_TangentOS15_g174865;
				float3 In_ViewDirWS16_g174866 = Out_ViewDirWS15_g174865;
				float4 In_VertexData16_g174866 = Out_VertexData15_g174865;
				float4 In_MotionData16_g174866 = Out_MotionData15_g174865;
				float4 In_BoundsData16_g174866 = Out_BoundsData15_g174865;
				float4 In_RotationData16_g174866 = Out_RotationData15_g174865;
				Data16_g174866.Dummy = In_Dummy16_g174866;
				Data16_g174866.PositionOS = In_PositionOS16_g174866;
				Data16_g174866.PositionWS = In_PositionWS16_g174866;
				Data16_g174866.PositionWO = In_PositionWO16_g174866;
				Data16_g174866.PositionRawOS = In_PositionRawOS16_g174866;
				Data16_g174866.PositionAddOS = In_PositionAddOS16_g174866;
				Data16_g174866.PivotOS = In_PivotOS16_g174866;
				Data16_g174866.PivotWS = In_PivotWS16_g174866;
				Data16_g174866.PivotWO = In_PivotWO16_g174866;
				Data16_g174866.NormalOS = In_NormalOS16_g174866;
				Data16_g174866.NormalWS = In_NormalWS16_g174866;
				Data16_g174866.NormalRawOS = In_NormalRawOS16_g174866;
				Data16_g174866.NormalRawWS = In_NormalRawWS16_g174866;
				Data16_g174866.TangentOS = In_TangentOS16_g174866;
				Data16_g174866.ViewDirWS = In_ViewDirWS16_g174866;
				Data16_g174866.VertexData = In_VertexData16_g174866;
				Data16_g174866.MotionData = In_MotionData16_g174866;
				Data16_g174866.BoundsData = In_BoundsData16_g174866;
				Data16_g174866.RotationData = In_RotationData16_g174866;
				TVEModelData Data15_g174871 = Data16_g174866;
				float Out_Dummy15_g174871 = 0;
				float3 Out_PositionOS15_g174871 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174871 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174871 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174871 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174871 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174871 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174871 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174871 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174871 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174871 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174871 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174871 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174871 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174871 = float3( 0,0,0 );
				float4 Out_VertexData15_g174871 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174871 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174871 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174871 = float4( 0,0,0,0 );
				Out_Dummy15_g174871 = Data15_g174871.Dummy;
				Out_PositionOS15_g174871 = Data15_g174871.PositionOS;
				Out_PositionWS15_g174871 = Data15_g174871.PositionWS;
				Out_PositionWO15_g174871 = Data15_g174871.PositionWO;
				Out_PositionRawOS15_g174871 = Data15_g174871.PositionRawOS;
				Out_PositionAddOS15_g174871 = Data15_g174871.PositionAddOS;
				Out_PivotOS15_g174871 = Data15_g174871.PivotOS;
				Out_PivotWS15_g174871 = Data15_g174871.PivotWS;
				Out_PivotWO15_g174871 = Data15_g174871.PivotWO;
				Out_NormalOS15_g174871 = Data15_g174871.NormalOS;
				Out_NormalWS15_g174871 = Data15_g174871.NormalWS;
				Out_NormalRawOS15_g174871 = Data15_g174871.NormalRawOS;
				Out_NormalRawWS15_g174871 = Data15_g174871.NormalRawWS;
				Out_TangentOS15_g174871 = Data15_g174871.TangentOS;
				Out_ViewDirWS15_g174871 = Data15_g174871.ViewDirWS;
				Out_VertexData15_g174871 = Data15_g174871.VertexData;
				Out_MotionData15_g174871 = Data15_g174871.MotionData;
				Out_BoundsData15_g174871 = Data15_g174871.BoundsData;
				Out_RotationData15_g174871 = Data15_g174871.RotationData;
				float3 temp_output_31_0_g174868 = Out_PositionOS15_g174871;
				
				o.ase_texcoord5.xyz = vertexToFrag73_g164551;
				o.ase_texcoord6.xyz = vertexToFrag76_g164551;
				o.ase_texcoord7.xyz = ase_worldNormal;
				float3 ase_worldTangent = UnityObjectToWorldDir(v.tangent);
				o.ase_texcoord8.xyz = ase_worldTangent;
				float ase_vertexTangentSign = v.tangent.w * ( unity_WorldTransformParams.w >= 0.0 ? 1.0 : -1.0 );
				float3 ase_worldBitangent = cross( ase_worldNormal, ase_worldTangent ) * ase_vertexTangentSign;
				o.ase_texcoord9.xyz = ase_worldBitangent;
				o.ase_texcoord10.xyz = ase_worldPos;
				float temp_output_6_0_g174597 = ( _MotionHighlightValue * Motion_FadeMask1820_g174563 * ( Base_Mask217_g174563 * Base_Mask217_g174563 ) * ( Wave_Noise1475_g174563 * Wave_Noise1475_g174563 * Wave_Noise1475_g174563 * Wave_Noise1475_g174563 ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174597 = ( temp_output_6_0_g174597 + ( _MotionHighlightColor.r * 0.0 ) );
				#else
				float staticSwitch14_g174597 = temp_output_6_0_g174597;
				#endif
				half Wave_Mask1000 = staticSwitch14_g174597;
				float4 appendResult23_g174669 = (float4(0.0 , 0.0 , 0.0 , Wave_Mask1000));
				float4 vertexToFrag24_g174669 = appendResult23_g174669;
				o.ase_texcoord11 = vertexToFrag24_g174669;
				
				o.ase_texcoord3 = v.ase_texcoord;
				o.ase_texcoord4.xy = v.texcoord2.xyzw.xy;
				o.ase_color = v.ase_color;
				
				//setting value to unused interpolator channels and avoid initialization warnings
				o.ase_texcoord4.zw = 0;
				o.ase_texcoord5.w = 0;
				o.ase_texcoord6.w = 0;
				o.ase_texcoord7.w = 0;
				o.ase_texcoord8.w = 0;
				o.ase_texcoord9.w = 0;
				o.ase_texcoord10.w = 0;
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					float3 defaultVertexValue = v.vertex.xyz;
				#else
					float3 defaultVertexValue = float3(0, 0, 0);
				#endif
				float3 vertexValue = ( temp_output_31_0_g174868 + _DisableSRPBatcher );
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					v.vertex.xyz = vertexValue;
				#else
					v.vertex.xyz += vertexValue;
				#endif
				v.vertex.w = 1;
				v.normal = Out_NormalOS15_g174871;
				v.tangent = Out_TangentOS15_g174871;

				#ifdef EDITOR_VISUALIZATION
					o.vizUV = 0;
					o.lightCoord = 0;
					if (unity_VisualizationMode == EDITORVIZ_TEXTURE)
						o.vizUV = UnityMetaVizUV(unity_EditorViz_UVIndex, v.texcoord.xy, v.texcoord1.xy, v.texcoord2.xy, unity_EditorViz_Texture_ST);
					else if (unity_VisualizationMode == EDITORVIZ_SHOWLIGHTMASK)
					{
						o.vizUV = v.texcoord1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
						o.lightCoord = mul(unity_EditorViz_WorldToLight, mul(unity_ObjectToWorld, float4(v.vertex.xyz, 1)));
					}
				#endif

				o.pos = UnityMetaVertexPosition(v.vertex, v.texcoord1.xy, v.texcoord2.xy, unity_LightmapST, unity_DynamicLightmapST);

				return o;
			}

			#if defined(ASE_TESSELLATION)
			struct VertexControl
			{
				float4 vertex : INTERNALTESSPOS;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;

				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct TessellationFactors
			{
				float edge[3] : SV_TessFactor;
				float inside : SV_InsideTessFactor;
			};

			VertexControl vert ( appdata v )
			{
				VertexControl o;
				UNITY_SETUP_INSTANCE_ID(v);
				UNITY_TRANSFER_INSTANCE_ID(v, o);
				o.vertex = v.vertex;
				o.tangent = v.tangent;
				o.normal = v.normal;
				o.texcoord1 = v.texcoord1;
				o.texcoord2 = v.texcoord2;
				o.ase_texcoord3 = v.ase_texcoord3;
				o.ase_color = v.ase_color;
				o.ase_texcoord = v.ase_texcoord;
				return o;
			}

			TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
			{
				TessellationFactors o;
				float4 tf = 1;
				float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
				float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
				#if defined(ASE_FIXED_TESSELLATION)
				tf = FixedTess( tessValue );
				#elif defined(ASE_DISTANCE_TESSELLATION)
				tf = DistanceBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, tessValue, tessMin, tessMax, UNITY_MATRIX_M, _WorldSpaceCameraPos );
				#elif defined(ASE_LENGTH_TESSELLATION)
				tf = EdgeLengthBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams );
				#elif defined(ASE_LENGTH_CULL_TESSELLATION)
				tf = EdgeLengthBasedTessCull(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, tessMaxDisp, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams, unity_CameraWorldClipPlanes );
				#endif
				o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
				return o;
			}

			[domain("tri")]
			[partitioning("fractional_odd")]
			[outputtopology("triangle_cw")]
			[patchconstantfunc("TessellationFunction")]
			[outputcontrolpoints(3)]
			VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
			{
			   return patch[id];
			}

			[domain("tri")]
			v2f DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
			{
				appdata o = (appdata) 0;
				o.vertex = patch[0].vertex * bary.x + patch[1].vertex * bary.y + patch[2].vertex * bary.z;
				o.tangent = patch[0].tangent * bary.x + patch[1].tangent * bary.y + patch[2].tangent * bary.z;
				o.normal = patch[0].normal * bary.x + patch[1].normal * bary.y + patch[2].normal * bary.z;
				o.texcoord1 = patch[0].texcoord1 * bary.x + patch[1].texcoord1 * bary.y + patch[2].texcoord1 * bary.z;
				o.texcoord2 = patch[0].texcoord2 * bary.x + patch[1].texcoord2 * bary.y + patch[2].texcoord2 * bary.z;
				o.ase_texcoord3 = patch[0].ase_texcoord3 * bary.x + patch[1].ase_texcoord3 * bary.y + patch[2].ase_texcoord3 * bary.z;
				o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
				o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
				#if defined(ASE_PHONG_TESSELLATION)
				float3 pp[3];
				for (int i = 0; i < 3; ++i)
					pp[i] = o.vertex.xyz - patch[i].normal * (dot(o.vertex.xyz, patch[i].normal) - dot(patch[i].vertex.xyz, patch[i].normal));
				float phongStrength = _TessPhongStrength;
				o.vertex.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.vertex.xyz;
				#endif
				UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
				return VertexFunction(o);
			}
			#else
			v2f vert ( appdata v )
			{
				return VertexFunction( v );
			}
			#endif

			fixed4 frag (v2f IN 
				#ifdef _DEPTHOFFSET_ON
				, out float outputDepth : SV_Depth
				#endif
				) : SV_Target
			{
				UNITY_SETUP_INSTANCE_ID(IN);

				#ifdef LOD_FADE_CROSSFADE
					UNITY_APPLY_DITHER_CROSSFADE(IN.pos.xy);
				#endif

				#if defined(ASE_LIGHTING_SIMPLE)
					SurfaceOutput o = (SurfaceOutput)0;
				#else
					#if defined(_SPECULAR_SETUP)
						SurfaceOutputStandardSpecular o = (SurfaceOutputStandardSpecular)0;
					#else
						SurfaceOutputStandard o = (SurfaceOutputStandard)0;
					#endif
				#endif

				float localBreakData4_g174874 = ( 0.0 );
				float localCompData3_g174859 = ( 0.0 );
				TVEVisualData Data3_g174859 = (TVEVisualData)0;
				half Dummy145_g174857 = ( _SubsurfaceCategory + _SubsurfaceEnd + ( _SubsurfaceDirectValue + _SubsurfaceNormalValue + _SubsurfaceAmbientValue + _SubsurfaceShadowValue ) + _SubsurfaceElementMode );
				float In_Dummy3_g174859 = Dummy145_g174857;
				float localBreakData4_g174858 = ( 0.0 );
				float localCompData3_g174836 = ( 0.0 );
				TVEVisualData Data3_g174836 = (TVEVisualData)0;
				half Dummy145_g174826 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveElementMode + _EmissiveFlagMode );
				float In_Dummy3_g174836 = Dummy145_g174826;
				float localBreakData4_g174835 = ( 0.0 );
				float localCompData3_g174808 = ( 0.0 );
				TVEVisualData Data3_g174808 = (TVEVisualData)0;
				half Dummy594_g174805 = ( _DitherCategory + _DitherEnd );
				float In_Dummy3_g174808 = Dummy594_g174805;
				float localBreakData4_g174807 = ( 0.0 );
				float localCompData3_g174786 = ( 0.0 );
				TVEVisualData Data3_g174786 = (TVEVisualData)0;
				half Dummy594_g174785 = ( _CutoutCategory + _CutoutEnd + _CutoutElementMode + _CutoutBakeMode );
				float In_Dummy3_g174786 = Dummy594_g174785;
				float localBreakData4_g174796 = ( 0.0 );
				float localCompData3_g174758 = ( 0.0 );
				TVEVisualData Data3_g174758 = (TVEVisualData)0;
				half Dummy594_g174756 = ( _WetnessCategory + _WetnessEnd + _WetnessElementMode + _WetnessBakeMode );
				float In_Dummy3_g174758 = Dummy594_g174756;
				float localBreakData4_g174757 = ( 0.0 );
				float localCompData3_g174723 = ( 0.0 );
				TVEVisualData Data3_g174723 = (TVEVisualData)0;
				half Dummy594_g174720 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayElementMode + _OverlayBakeMode );
				float In_Dummy3_g174723 = Dummy594_g174720;
				float localBreakData4_g174721 = ( 0.0 );
				float localCompData3_g174719 = ( 0.0 );
				TVEVisualData Data3_g174719 = (TVEVisualData)0;
				float In_Dummy3_g174719 = 0.0;
				float localBreakData4_g174718 = ( 0.0 );
				float localCompData3_g174697 = ( 0.0 );
				TVEVisualData Data3_g174697 = (TVEVisualData)0;
				half Dummy205_g174694 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessElementMode + _DrynessBakeMode );
				float In_Dummy3_g174697 = Dummy205_g174694;
				float localBreakData4_g174696 = ( 0.0 );
				float localCompData3_g174691 = ( 0.0 );
				TVEVisualData Data3_g174691 = (TVEVisualData)0;
				half Dummy205_g174670 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeMode );
				float In_Dummy3_g174691 = Dummy205_g174670;
				float localBreakData4_g174692 = ( 0.0 );
				float localCompData3_g174663 = ( 0.0 );
				TVEVisualData Data3_g174663 = (TVEVisualData)0;
				half Dummy220_g174660 = ( _VariationCategory + _VariationEnd );
				float In_Dummy3_g174663 = Dummy220_g174660;
				float localBreakData4_g174662 = ( 0.0 );
				float localCompData3_g174653 = ( 0.0 );
				TVEVisualData Data3_g174653 = (TVEVisualData)0;
				half Dummy220_g174650 = ( _GradientCategory + _GradientEnd + _GradientBakeMode );
				float In_Dummy3_g174653 = Dummy220_g174650;
				float localBreakData4_g174652 = ( 0.0 );
				float localCompData3_g174642 = ( 0.0 );
				TVEVisualData Data3_g174642 = (TVEVisualData)0;
				half Dummy202_g174640 = ( _OcclusionCategory + _OcclusionEnd + _OcclusionBakeMode );
				float In_Dummy3_g174642 = Dummy202_g174640;
				float localBreakData4_g174641 = ( 0.0 );
				float localCompData3_g174429 = ( 0.0 );
				TVEVisualData Data3_g174429 = (TVEVisualData)0;
				half Dummy944_g174425 = ( ( _TerrainCategory + _TerrainEnd ) + _TerrainFormInfo + _ThirdElementMode );
				float In_Dummy3_g174429 = Dummy944_g174425;
				float localBreakData4_g174428 = ( 0.0 );
				float localCompData3_g174403 = ( 0.0 );
				TVEVisualData Data3_g174403 = (TVEVisualData)0;
				half4 Dummy944_g174386 = ( ( _DetailCategory + _DetailEnd ) + ( _ThirdSampleMode + _ThirdCoordMode + _ThirdCoordValue ) + ( _ThirdMaskSampleMode + _ThirdMaskCoordMode + _ThirdMaskCoordValue ) + _ThirdElementMode + _ThirdBakeMode );
				float In_Dummy3_g174403 = Dummy944_g174386.x;
				float localBreakData4_g174402 = ( 0.0 );
				float localCompData3_g174381 = ( 0.0 );
				TVEVisualData Data3_g174381 = (TVEVisualData)0;
				half4 Dummy946_g174348 = ( ( _LayerCategory + _LayerEnd ) + ( _SecondSampleMode + _SecondCoordMode + _SecondCoordValue ) + ( _SecondMaskSampleMode + _SecondMaskCoordMode + _SecondMaskCoordValue ) + _SecondElementMode + _SecondBakeMode );
				float In_Dummy3_g174381 = Dummy946_g174348.x;
				float localBreakData4_g174360 = ( 0.0 );
				float localCompData3_g174158 = ( 0.0 );
				TVEVisualData Data3_g174158 = (TVEVisualData)0;
				half4 Dummy130_g174142 = ( _MainCategory + _MainEnd + ( _MainSampleMode + _MainCoordMode + _MainCoordValue ) + _MainMultiMaskInfo );
				float In_Dummy3_g174158 = Dummy130_g174142.x;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174151) = _MainAlbedoTex;
				float localFilterTexture19_g174154 = ( 0.0 );
				SamplerState SamplerDefault19_g174154 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174154 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174154 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174154 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174154 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174154 = SamplerDefault19_g174154;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174154 = SamplerDefault19_g174154;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174154 = SamplerPoint19_g174154;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174154 = SamplerLow19_g174154;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174154 = SamplerMedium19_g174154;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174154 = SamplerHigh19_g174154;
				#endif
				SamplerState Sampler276_g174151 = SS19_g174154;
				half4 Local_Coords180_g174142 = _main_coord_value;
				float4 temp_output_37_0_g174151 = Local_Coords180_g174142;
				half4 Coords276_g174151 = temp_output_37_0_g174151;
				half2 TexCoord276_g174151 = IN.ase_texcoord3.xy;
				half4 localSampleMain276_g174151 = SampleMain( Texture276_g174151 , Sampler276_g174151 , Coords276_g174151 , TexCoord276_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174151) = _MainAlbedoTex;
				SamplerState Sampler275_g174151 = SS19_g174154;
				half4 Coords275_g174151 = temp_output_37_0_g174151;
				half2 TexCoord275_g174151 = IN.ase_texcoord4.xy;
				half4 localSampleExtra275_g174151 = SampleExtra( Texture275_g174151 , Sampler275_g174151 , Coords275_g174151 , TexCoord275_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174151) = _MainAlbedoTex;
				SamplerState Sampler238_g174151 = SS19_g174154;
				half4 Coords238_g174151 = temp_output_37_0_g174151;
				TVEModelData Data16_g164566 = (TVEModelData)0;
				float In_Dummy16_g164566 = 0.0;
				float3 vertexToFrag73_g164551 = IN.ase_texcoord5.xyz;
				half3 PositionWS122_g164551 = vertexToFrag73_g164551;
				float3 In_PositionWS16_g164566 = PositionWS122_g164551;
				float3 vertexToFrag76_g164551 = IN.ase_texcoord6.xyz;
				half3 PivotWS121_g164551 = vertexToFrag76_g164551;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g164551 = ( PositionWS122_g164551 - PivotWS121_g164551 );
				#else
				float3 staticSwitch204_g164551 = PositionWS122_g164551;
				#endif
				half3 PositionWO132_g164551 = ( staticSwitch204_g164551 - TVE_WorldOrigin );
				float3 In_PositionWO16_g164566 = PositionWO132_g164551;
				float3 In_PivotWS16_g164566 = PivotWS121_g164551;
				half3 PivotWO133_g164551 = ( PivotWS121_g164551 - TVE_WorldOrigin );
				float3 In_PivotWO16_g164566 = PivotWO133_g164551;
				float3 ase_worldNormal = IN.ase_texcoord7.xyz;
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g164551 = normalizedWorldNormal;
				float3 In_NormalWS16_g164566 = Normal_WS95_g164551;
				float3 normalizeResult296_g164551 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g164551 ) );
				half3 ViewDirWS169_g164551 = normalizeResult296_g164551;
				float3 In_ViewDirWS16_g164566 = ViewDirWS169_g164551;
				half4 VertexMasks171_g164551 = IN.ase_color;
				float4 In_VertexData16_g164566 = VertexMasks171_g164551;
				float4 In_BoundsData16_g164566 = float4( 1,1,1,1 );
				Data16_g164566.Dummy = In_Dummy16_g164566;
				Data16_g164566.PositionWS = In_PositionWS16_g164566;
				Data16_g164566.PositionWO = In_PositionWO16_g164566;
				Data16_g164566.PivotWS = In_PivotWS16_g164566;
				Data16_g164566.PivotWO = In_PivotWO16_g164566;
				Data16_g164566.NormalWS = In_NormalWS16_g164566;
				Data16_g164566.ViewDirWS = In_ViewDirWS16_g164566;
				Data16_g164566.VertexData = In_VertexData16_g164566;
				Data16_g164566.BoundsData = In_BoundsData16_g164566;
				TVEModelData Data15_g174157 = Data16_g164566;
				float Out_Dummy15_g174157 = 0;
				float3 Out_PositionWS15_g174157 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174157 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174157 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174157 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174157 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174157 = float3( 0,0,0 );
				float4 Out_VertexData15_g174157 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174157 = float4( 0,0,0,0 );
				Out_Dummy15_g174157 = Data15_g174157.Dummy;
				Out_PositionWS15_g174157 = Data15_g174157.PositionWS;
				Out_PositionWO15_g174157 = Data15_g174157.PositionWO;
				Out_PivotWS15_g174157 = Data15_g174157.PivotWS;
				Out_PivotWO15_g174157 = Data15_g174157.PivotWO;
				Out_NormalWS15_g174157 = Data15_g174157.NormalWS;
				Out_ViewDirWS15_g174157 = Data15_g174157.ViewDirWS;
				Out_VertexData15_g174157 = Data15_g174157.VertexData;
				Out_BoundsData15_g174157 = Data15_g174157.BoundsData;
				half3 Model_PositionWO222_g174142 = Out_PositionWO15_g174157;
				float3 temp_output_279_0_g174151 = Model_PositionWO222_g174142;
				half3 WorldPosition238_g174151 = temp_output_279_0_g174151;
				half4 localSamplePlanar2D238_g174151 = SamplePlanar2D( Texture238_g174151 , Sampler238_g174151 , Coords238_g174151 , WorldPosition238_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174151) = _MainAlbedoTex;
				SamplerState Sampler246_g174151 = SS19_g174154;
				half4 Coords246_g174151 = temp_output_37_0_g174151;
				half3 WorldPosition246_g174151 = temp_output_279_0_g174151;
				half3 Model_NormalWS226_g174142 = Out_NormalWS15_g174157;
				float3 temp_output_280_0_g174151 = Model_NormalWS226_g174142;
				half3 WorldNormal246_g174151 = temp_output_280_0_g174151;
				half4 localSamplePlanar3D246_g174151 = SamplePlanar3D( Texture246_g174151 , Sampler246_g174151 , Coords246_g174151 , WorldPosition246_g174151 , WorldNormal246_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174151) = _MainAlbedoTex;
				SamplerState Sampler234_g174151 = SS19_g174154;
				float4 Coords234_g174151 = temp_output_37_0_g174151;
				float3 WorldPosition234_g174151 = temp_output_279_0_g174151;
				float4 localSampleStochastic2D234_g174151 = SampleStochastic2D( Texture234_g174151 , Sampler234_g174151 , Coords234_g174151 , WorldPosition234_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174151) = _MainAlbedoTex;
				SamplerState Sampler263_g174151 = SS19_g174154;
				half4 Coords263_g174151 = temp_output_37_0_g174151;
				half3 WorldPosition263_g174151 = temp_output_279_0_g174151;
				half3 WorldNormal263_g174151 = temp_output_280_0_g174151;
				half4 localSampleStochastic3D263_g174151 = SampleStochastic3D( Texture263_g174151 , Sampler263_g174151 , Coords263_g174151 , WorldPosition263_g174151 , WorldNormal263_g174151 );
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float4 staticSwitch184_g174142 = localSampleMain276_g174151;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float4 staticSwitch184_g174142 = localSampleExtra275_g174151;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float4 staticSwitch184_g174142 = localSamplePlanar2D238_g174151;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float4 staticSwitch184_g174142 = localSamplePlanar3D246_g174151;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch184_g174142 = localSampleStochastic2D234_g174151;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch184_g174142 = localSampleStochastic3D263_g174151;
				#else
				float4 staticSwitch184_g174142 = localSampleMain276_g174151;
				#endif
				half4 Local_AlbedoTex185_g174142 = staticSwitch184_g174142;
				float3 lerpResult53_g174142 = lerp( float3( 1,1,1 ) , (Local_AlbedoTex185_g174142).xyz , _MainAlbedoValue);
				half3 Local_AlbedoRGB107_g174142 = lerpResult53_g174142;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174153) = _MainShaderTex;
				float localFilterTexture30_g174156 = ( 0.0 );
				SamplerState SamplerDefault30_g174156 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174156 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174156 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174156 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174156 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174156 = SamplerDefault30_g174156;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174156 = SamplerDefault30_g174156;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174156 = SamplerPoint30_g174156;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174156 = SamplerLow30_g174156;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174156 = SamplerMedium30_g174156;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174156 = SamplerHigh30_g174156;
				#endif
				SamplerState Sampler276_g174153 = SS30_g174156;
				float4 temp_output_37_0_g174153 = Local_Coords180_g174142;
				half4 Coords276_g174153 = temp_output_37_0_g174153;
				half2 TexCoord276_g174153 = IN.ase_texcoord3.xy;
				half4 localSampleMain276_g174153 = SampleMain( Texture276_g174153 , Sampler276_g174153 , Coords276_g174153 , TexCoord276_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174153) = _MainShaderTex;
				SamplerState Sampler275_g174153 = SS30_g174156;
				half4 Coords275_g174153 = temp_output_37_0_g174153;
				half2 TexCoord275_g174153 = IN.ase_texcoord4.xy;
				half4 localSampleExtra275_g174153 = SampleExtra( Texture275_g174153 , Sampler275_g174153 , Coords275_g174153 , TexCoord275_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174153) = _MainShaderTex;
				SamplerState Sampler238_g174153 = SS30_g174156;
				half4 Coords238_g174153 = temp_output_37_0_g174153;
				float3 temp_output_279_0_g174153 = Model_PositionWO222_g174142;
				half3 WorldPosition238_g174153 = temp_output_279_0_g174153;
				half4 localSamplePlanar2D238_g174153 = SamplePlanar2D( Texture238_g174153 , Sampler238_g174153 , Coords238_g174153 , WorldPosition238_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174153) = _MainShaderTex;
				SamplerState Sampler246_g174153 = SS30_g174156;
				half4 Coords246_g174153 = temp_output_37_0_g174153;
				half3 WorldPosition246_g174153 = temp_output_279_0_g174153;
				float3 temp_output_280_0_g174153 = Model_NormalWS226_g174142;
				half3 WorldNormal246_g174153 = temp_output_280_0_g174153;
				half4 localSamplePlanar3D246_g174153 = SamplePlanar3D( Texture246_g174153 , Sampler246_g174153 , Coords246_g174153 , WorldPosition246_g174153 , WorldNormal246_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174153) = _MainShaderTex;
				SamplerState Sampler234_g174153 = SS30_g174156;
				float4 Coords234_g174153 = temp_output_37_0_g174153;
				float3 WorldPosition234_g174153 = temp_output_279_0_g174153;
				float4 localSampleStochastic2D234_g174153 = SampleStochastic2D( Texture234_g174153 , Sampler234_g174153 , Coords234_g174153 , WorldPosition234_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174153) = _MainShaderTex;
				SamplerState Sampler263_g174153 = SS30_g174156;
				half4 Coords263_g174153 = temp_output_37_0_g174153;
				half3 WorldPosition263_g174153 = temp_output_279_0_g174153;
				half3 WorldNormal263_g174153 = temp_output_280_0_g174153;
				half4 localSampleStochastic3D263_g174153 = SampleStochastic3D( Texture263_g174153 , Sampler263_g174153 , Coords263_g174153 , WorldPosition263_g174153 , WorldNormal263_g174153 );
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float4 staticSwitch198_g174142 = localSampleMain276_g174153;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float4 staticSwitch198_g174142 = localSampleExtra275_g174153;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float4 staticSwitch198_g174142 = localSamplePlanar2D238_g174153;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float4 staticSwitch198_g174142 = localSamplePlanar3D246_g174153;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch198_g174142 = localSampleStochastic2D234_g174153;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch198_g174142 = localSampleStochastic3D263_g174153;
				#else
				float4 staticSwitch198_g174142 = localSampleMain276_g174153;
				#endif
				half4 Local_MasksTex199_g174142 = staticSwitch198_g174142;
				float lerpResult23_g174142 = lerp( 1.0 , (Local_MasksTex199_g174142).y , _MainOcclusionValue);
				float4 appendResult73_g174142 = (float4(( (Local_MasksTex199_g174142).x * _MainMetallicValue ) , lerpResult23_g174142 , (Local_MasksTex199_g174142).z , ( (Local_MasksTex199_g174142).w * _MainSmoothnessValue )));
				half4 Local_Masks109_g174142 = appendResult73_g174142;
				float clampResult17_g174147 = clamp( (Local_Masks109_g174142).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174148 = _MainMultiRemap.x;
				float temp_output_10_0_g174148 = ( _MainMultiRemap.y - temp_output_7_0_g174148 );
				half Local_MultiMask78_g174142 = saturate( ( ( clampResult17_g174147 - temp_output_7_0_g174148 ) / ( temp_output_10_0_g174148 + 0.0001 ) ) );
				float lerpResult58_g174142 = lerp( 1.0 , Local_MultiMask78_g174142 , _MainColorMode);
				float4 lerpResult62_g174142 = lerp( _MainColorTwo , _MainColor , lerpResult58_g174142);
				half3 Local_ColorRGB93_g174142 = (lerpResult62_g174142).rgb;
				half3 Local_Albedo139_g174142 = ( Local_AlbedoRGB107_g174142 * Local_ColorRGB93_g174142 );
				float3 In_Albedo3_g174158 = Local_Albedo139_g174142;
				float3 In_AlbedoRaw3_g174158 = Local_Albedo139_g174142;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174152) = _MainNormalTex;
				float localFilterTexture29_g174155 = ( 0.0 );
				SamplerState SamplerDefault29_g174155 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174155 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174155 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174155 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174155 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174155 = SamplerDefault29_g174155;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174155 = SamplerDefault29_g174155;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174155 = SamplerPoint29_g174155;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174155 = SamplerLow29_g174155;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174155 = SamplerMedium29_g174155;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174155 = SamplerHigh29_g174155;
				#endif
				SamplerState Sampler276_g174152 = SS29_g174155;
				float4 temp_output_37_0_g174152 = Local_Coords180_g174142;
				half4 Coords276_g174152 = temp_output_37_0_g174152;
				half2 TexCoord276_g174152 = IN.ase_texcoord3.xy;
				half4 localSampleMain276_g174152 = SampleMain( Texture276_g174152 , Sampler276_g174152 , Coords276_g174152 , TexCoord276_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174152) = _MainNormalTex;
				SamplerState Sampler275_g174152 = SS29_g174155;
				half4 Coords275_g174152 = temp_output_37_0_g174152;
				half2 TexCoord275_g174152 = IN.ase_texcoord4.xy;
				half4 localSampleExtra275_g174152 = SampleExtra( Texture275_g174152 , Sampler275_g174152 , Coords275_g174152 , TexCoord275_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174152) = _MainNormalTex;
				SamplerState Sampler238_g174152 = SS29_g174155;
				half4 Coords238_g174152 = temp_output_37_0_g174152;
				float3 temp_output_279_0_g174152 = Model_PositionWO222_g174142;
				half3 WorldPosition238_g174152 = temp_output_279_0_g174152;
				half4 localSamplePlanar2D238_g174152 = SamplePlanar2D( Texture238_g174152 , Sampler238_g174152 , Coords238_g174152 , WorldPosition238_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174152) = _MainNormalTex;
				SamplerState Sampler246_g174152 = SS29_g174155;
				half4 Coords246_g174152 = temp_output_37_0_g174152;
				half3 WorldPosition246_g174152 = temp_output_279_0_g174152;
				float3 temp_output_280_0_g174152 = Model_NormalWS226_g174142;
				half3 WorldNormal246_g174152 = temp_output_280_0_g174152;
				half4 localSamplePlanar3D246_g174152 = SamplePlanar3D( Texture246_g174152 , Sampler246_g174152 , Coords246_g174152 , WorldPosition246_g174152 , WorldNormal246_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174152) = _MainNormalTex;
				SamplerState Sampler234_g174152 = SS29_g174155;
				float4 Coords234_g174152 = temp_output_37_0_g174152;
				float3 WorldPosition234_g174152 = temp_output_279_0_g174152;
				float4 localSampleStochastic2D234_g174152 = SampleStochastic2D( Texture234_g174152 , Sampler234_g174152 , Coords234_g174152 , WorldPosition234_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174152) = _MainNormalTex;
				SamplerState Sampler263_g174152 = SS29_g174155;
				half4 Coords263_g174152 = temp_output_37_0_g174152;
				half3 WorldPosition263_g174152 = temp_output_279_0_g174152;
				half3 WorldNormal263_g174152 = temp_output_280_0_g174152;
				half4 localSampleStochastic3D263_g174152 = SampleStochastic3D( Texture263_g174152 , Sampler263_g174152 , Coords263_g174152 , WorldPosition263_g174152 , WorldNormal263_g174152 );
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float4 staticSwitch193_g174142 = localSampleMain276_g174152;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float4 staticSwitch193_g174142 = localSampleExtra275_g174152;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float4 staticSwitch193_g174142 = localSamplePlanar2D238_g174152;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float4 staticSwitch193_g174142 = localSamplePlanar3D246_g174152;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch193_g174142 = localSampleStochastic2D234_g174152;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch193_g174142 = localSampleStochastic3D263_g174152;
				#else
				float4 staticSwitch193_g174142 = localSampleMain276_g174152;
				#endif
				half4 Local_NormaTex191_g174142 = staticSwitch193_g174142;
				half4 Normal_Packed45_g174143 = Local_NormaTex191_g174142;
				float2 appendResult58_g174143 = (float2(( (Normal_Packed45_g174143).x * (Normal_Packed45_g174143).w ) , (Normal_Packed45_g174143).y));
				half2 Normal_Default50_g174143 = appendResult58_g174143;
				half2 Normal_ASTC41_g174143 = (Normal_Packed45_g174143).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174143 = Normal_ASTC41_g174143;
				#else
				float2 staticSwitch38_g174143 = Normal_Default50_g174143;
				#endif
				half2 Normal_NO_DTX544_g174143 = (Normal_Packed45_g174143).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174143 = Normal_NO_DTX544_g174143;
				#else
				float2 staticSwitch37_g174143 = staticSwitch38_g174143;
				#endif
				float2 temp_output_26_0_g174142 = ( (staticSwitch37_g174143*2.0 + -1.0) * _MainNormalValue );
				float3 ase_worldTangent = IN.ase_texcoord8.xyz;
				float3 ase_worldBitangent = IN.ase_texcoord9.xyz;
				float3x3 ase_worldToTangent = float3x3(ase_worldTangent,ase_worldBitangent,ase_worldNormal);
				half2 Normal_Planar45_g174144 = temp_output_26_0_g174142;
				float2 break71_g174144 = Normal_Planar45_g174144;
				float3 appendResult72_g174144 = (float3(break71_g174144.x , 0.0 , break71_g174144.y));
				float2 temp_output_205_0_g174142 = (mul( ase_worldToTangent, appendResult72_g174144 )).xy;
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float2 staticSwitch204_g174142 = temp_output_26_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float2 staticSwitch204_g174142 = temp_output_26_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#else
				float2 staticSwitch204_g174142 = temp_output_26_0_g174142;
				#endif
				half2 Local_NormalTS108_g174142 = staticSwitch204_g174142;
				float2 In_NormalTS3_g174158 = Local_NormalTS108_g174142;
				float3 appendResult68_g174145 = (float3(Local_NormalTS108_g174142 , 1.0));
				float3 tanToWorld0 = float3( ase_worldTangent.x, ase_worldBitangent.x, ase_worldNormal.x );
				float3 tanToWorld1 = float3( ase_worldTangent.y, ase_worldBitangent.y, ase_worldNormal.y );
				float3 tanToWorld2 = float3( ase_worldTangent.z, ase_worldBitangent.z, ase_worldNormal.z );
				float3 tanNormal74_g174145 = appendResult68_g174145;
				float3 worldNormal74_g174145 = normalize( float3(dot(tanToWorld0,tanNormal74_g174145), dot(tanToWorld1,tanNormal74_g174145), dot(tanToWorld2,tanNormal74_g174145)) );
				half3 Local_NormalWS250_g174142 = worldNormal74_g174145;
				float3 In_NormalWS3_g174158 = Local_NormalWS250_g174142;
				float4 In_Shader3_g174158 = Local_Masks109_g174142;
				float4 In_Emissive3_g174158 = half4(1,1,1,1);
				float3 temp_output_3_0_g174146 = Local_Albedo139_g174142;
				float dotResult20_g174146 = dot( temp_output_3_0_g174146 , float3(0.2126,0.7152,0.0722) );
				half Local_Grayscale110_g174142 = dotResult20_g174146;
				float In_Grayscale3_g174158 = Local_Grayscale110_g174142;
				float clampResult144_g174142 = clamp( saturate( ( Local_Grayscale110_g174142 * 5.0 ) ) , 0.2 , 1.0 );
				half Local_Luminosity145_g174142 = clampResult144_g174142;
				float In_Luminosity3_g174158 = Local_Luminosity145_g174142;
				float In_MultiMask3_g174158 = Local_MultiMask78_g174142;
				float temp_output_187_0_g174142 = (Local_AlbedoTex185_g174142).w;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch236_g174142 = ( temp_output_187_0_g174142 - _MainAlphaClipValue );
				#else
				float staticSwitch236_g174142 = temp_output_187_0_g174142;
				#endif
				half Local_AlphaClip111_g174142 = staticSwitch236_g174142;
				float In_AlphaClip3_g174158 = Local_AlphaClip111_g174142;
				half Local_AlphaFade246_g174142 = (lerpResult62_g174142).a;
				float In_AlphaFade3_g174158 = Local_AlphaFade246_g174142;
				float3 temp_cast_4 = (1.0).xxx;
				float3 In_Translucency3_g174158 = temp_cast_4;
				float In_Transmission3_g174158 = 1.0;
				float In_Thickness3_g174158 = 0.0;
				float In_Diffusion3_g174158 = 0.0;
				Data3_g174158.Dummy = In_Dummy3_g174158;
				Data3_g174158.Albedo = In_Albedo3_g174158;
				Data3_g174158.AlbedoRaw = In_AlbedoRaw3_g174158;
				Data3_g174158.NormalTS = In_NormalTS3_g174158;
				Data3_g174158.NormalWS = In_NormalWS3_g174158;
				Data3_g174158.Shader = In_Shader3_g174158;
				Data3_g174158.Emissive= In_Emissive3_g174158;
				Data3_g174158.MultiMask = In_MultiMask3_g174158;
				Data3_g174158.Grayscale = In_Grayscale3_g174158;
				Data3_g174158.Luminosity = In_Luminosity3_g174158;
				Data3_g174158.AlphaClip = In_AlphaClip3_g174158;
				Data3_g174158.AlphaFade = In_AlphaFade3_g174158;
				Data3_g174158.Translucency = In_Translucency3_g174158;
				Data3_g174158.Transmission = In_Transmission3_g174158;
				Data3_g174158.Thickness = In_Thickness3_g174158;
				Data3_g174158.Diffusion = In_Diffusion3_g174158;
				TVEVisualData Data4_g174360 = Data3_g174158;
				float Out_Dummy4_g174360 = 0;
				float3 Out_Albedo4_g174360 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174360 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174360 = float2( 0,0 );
				float3 Out_NormalWS4_g174360 = float3( 0,0,0 );
				float4 Out_Shader4_g174360 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174360 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174360 = 0;
				float Out_Grayscale4_g174360 = 0;
				float Out_Luminosity4_g174360 = 0;
				float Out_AlphaClip4_g174360 = 0;
				float Out_AlphaFade4_g174360 = 0;
				float3 Out_Translucency4_g174360 = float3( 0,0,0 );
				float Out_Transmission4_g174360 = 0;
				float Out_Thickness4_g174360 = 0;
				float Out_Diffusion4_g174360 = 0;
				Out_Dummy4_g174360 = Data4_g174360.Dummy;
				Out_Albedo4_g174360 = Data4_g174360.Albedo;
				Out_AlbedoRaw4_g174360 = Data4_g174360.AlbedoRaw;
				Out_NormalTS4_g174360 = Data4_g174360.NormalTS;
				Out_NormalWS4_g174360 = Data4_g174360.NormalWS;
				Out_Shader4_g174360 = Data4_g174360.Shader;
				Out_Emissive4_g174360= Data4_g174360.Emissive;
				Out_MultiMask4_g174360 = Data4_g174360.MultiMask;
				Out_Grayscale4_g174360 = Data4_g174360.Grayscale;
				Out_Luminosity4_g174360= Data4_g174360.Luminosity;
				Out_AlphaClip4_g174360 = Data4_g174360.AlphaClip;
				Out_AlphaFade4_g174360 = Data4_g174360.AlphaFade;
				Out_Translucency4_g174360 = Data4_g174360.Translucency;
				Out_Transmission4_g174360 = Data4_g174360.Transmission;
				Out_Thickness4_g174360 = Data4_g174360.Thickness;
				Out_Diffusion4_g174360 = Data4_g174360.Diffusion;
				half3 Visual_Albedo527_g174348 = Out_Albedo4_g174360;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174349) = _SecondAlbedoTex;
				float localFilterTexture19_g174377 = ( 0.0 );
				SamplerState SamplerDefault19_g174377 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174377 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174377 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174377 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174377 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174377 = SamplerDefault19_g174377;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174377 = SamplerDefault19_g174377;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174377 = SamplerPoint19_g174377;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174377 = SamplerLow19_g174377;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174377 = SamplerMedium19_g174377;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174377 = SamplerHigh19_g174377;
				#endif
				SamplerState Sampler276_g174349 = SS19_g174377;
				half4 Local_LayerCoords790_g174348 = _second_coord_value;
				float4 temp_output_37_0_g174349 = Local_LayerCoords790_g174348;
				half4 Coords276_g174349 = temp_output_37_0_g174349;
				half2 TexCoord276_g174349 = IN.ase_texcoord3.xy;
				half4 localSampleMain276_g174349 = SampleMain( Texture276_g174349 , Sampler276_g174349 , Coords276_g174349 , TexCoord276_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174349) = _SecondAlbedoTex;
				SamplerState Sampler275_g174349 = SS19_g174377;
				half4 Coords275_g174349 = temp_output_37_0_g174349;
				half2 TexCoord275_g174349 = IN.ase_texcoord4.xy;
				half4 localSampleExtra275_g174349 = SampleExtra( Texture275_g174349 , Sampler275_g174349 , Coords275_g174349 , TexCoord275_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174349) = _SecondAlbedoTex;
				SamplerState Sampler238_g174349 = SS19_g174377;
				half4 Coords238_g174349 = temp_output_37_0_g174349;
				TVEModelData Data15_g174380 = Data16_g164566;
				float Out_Dummy15_g174380 = 0;
				float3 Out_PositionWS15_g174380 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174380 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174380 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174380 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174380 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174380 = float3( 0,0,0 );
				float4 Out_VertexData15_g174380 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174380 = float4( 0,0,0,0 );
				Out_Dummy15_g174380 = Data15_g174380.Dummy;
				Out_PositionWS15_g174380 = Data15_g174380.PositionWS;
				Out_PositionWO15_g174380 = Data15_g174380.PositionWO;
				Out_PivotWS15_g174380 = Data15_g174380.PivotWS;
				Out_PivotWO15_g174380 = Data15_g174380.PivotWO;
				Out_NormalWS15_g174380 = Data15_g174380.NormalWS;
				Out_ViewDirWS15_g174380 = Data15_g174380.ViewDirWS;
				Out_VertexData15_g174380 = Data15_g174380.VertexData;
				Out_BoundsData15_g174380 = Data15_g174380.BoundsData;
				half3 Model_PositionWO636_g174348 = Out_PositionWO15_g174380;
				float3 temp_output_279_0_g174349 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174349 = temp_output_279_0_g174349;
				half4 localSamplePlanar2D238_g174349 = SamplePlanar2D( Texture238_g174349 , Sampler238_g174349 , Coords238_g174349 , WorldPosition238_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174349) = _SecondAlbedoTex;
				SamplerState Sampler246_g174349 = SS19_g174377;
				half4 Coords246_g174349 = temp_output_37_0_g174349;
				half3 WorldPosition246_g174349 = temp_output_279_0_g174349;
				half3 Model_NormalWS869_g174348 = Out_NormalWS15_g174380;
				float3 temp_output_280_0_g174349 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174349 = temp_output_280_0_g174349;
				half4 localSamplePlanar3D246_g174349 = SamplePlanar3D( Texture246_g174349 , Sampler246_g174349 , Coords246_g174349 , WorldPosition246_g174349 , WorldNormal246_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174349) = _SecondAlbedoTex;
				SamplerState Sampler234_g174349 = SS19_g174377;
				float4 Coords234_g174349 = temp_output_37_0_g174349;
				float3 WorldPosition234_g174349 = temp_output_279_0_g174349;
				float4 localSampleStochastic2D234_g174349 = SampleStochastic2D( Texture234_g174349 , Sampler234_g174349 , Coords234_g174349 , WorldPosition234_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174349) = _SecondAlbedoTex;
				SamplerState Sampler263_g174349 = SS19_g174377;
				half4 Coords263_g174349 = temp_output_37_0_g174349;
				half3 WorldPosition263_g174349 = temp_output_279_0_g174349;
				half3 WorldNormal263_g174349 = temp_output_280_0_g174349;
				half4 localSampleStochastic3D263_g174349 = SampleStochastic3D( Texture263_g174349 , Sampler263_g174349 , Coords263_g174349 , WorldPosition263_g174349 , WorldNormal263_g174349 );
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float4 staticSwitch693_g174348 = localSampleMain276_g174349;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float4 staticSwitch693_g174348 = localSampleExtra275_g174349;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float4 staticSwitch693_g174348 = localSamplePlanar2D238_g174349;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float4 staticSwitch693_g174348 = localSamplePlanar3D246_g174349;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch693_g174348 = localSampleStochastic2D234_g174349;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch693_g174348 = localSampleStochastic3D263_g174349;
				#else
				float4 staticSwitch693_g174348 = localSampleMain276_g174349;
				#endif
				half4 Local_AlbedoTex777_g174348 = staticSwitch693_g174348;
				float3 lerpResult716_g174348 = lerp( float3( 1,1,1 ) , (Local_AlbedoTex777_g174348).xyz , _SecondAlbedoValue);
				half3 Local_AlbedoRGB771_g174348 = lerpResult716_g174348;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174351) = _SecondShaderTex;
				float localFilterTexture30_g174379 = ( 0.0 );
				SamplerState SamplerDefault30_g174379 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174379 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174379 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174379 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174379 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174379 = SamplerDefault30_g174379;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174379 = SamplerDefault30_g174379;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174379 = SamplerPoint30_g174379;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174379 = SamplerLow30_g174379;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174379 = SamplerMedium30_g174379;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174379 = SamplerHigh30_g174379;
				#endif
				SamplerState Sampler276_g174351 = SS30_g174379;
				float4 temp_output_37_0_g174351 = Local_LayerCoords790_g174348;
				half4 Coords276_g174351 = temp_output_37_0_g174351;
				half2 TexCoord276_g174351 = IN.ase_texcoord3.xy;
				half4 localSampleMain276_g174351 = SampleMain( Texture276_g174351 , Sampler276_g174351 , Coords276_g174351 , TexCoord276_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174351) = _SecondShaderTex;
				SamplerState Sampler275_g174351 = SS30_g174379;
				half4 Coords275_g174351 = temp_output_37_0_g174351;
				half2 TexCoord275_g174351 = IN.ase_texcoord4.xy;
				half4 localSampleExtra275_g174351 = SampleExtra( Texture275_g174351 , Sampler275_g174351 , Coords275_g174351 , TexCoord275_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174351) = _SecondShaderTex;
				SamplerState Sampler238_g174351 = SS30_g174379;
				half4 Coords238_g174351 = temp_output_37_0_g174351;
				float3 temp_output_279_0_g174351 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174351 = temp_output_279_0_g174351;
				half4 localSamplePlanar2D238_g174351 = SamplePlanar2D( Texture238_g174351 , Sampler238_g174351 , Coords238_g174351 , WorldPosition238_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174351) = _SecondShaderTex;
				SamplerState Sampler246_g174351 = SS30_g174379;
				half4 Coords246_g174351 = temp_output_37_0_g174351;
				half3 WorldPosition246_g174351 = temp_output_279_0_g174351;
				float3 temp_output_280_0_g174351 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174351 = temp_output_280_0_g174351;
				half4 localSamplePlanar3D246_g174351 = SamplePlanar3D( Texture246_g174351 , Sampler246_g174351 , Coords246_g174351 , WorldPosition246_g174351 , WorldNormal246_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174351) = _SecondShaderTex;
				SamplerState Sampler234_g174351 = SS30_g174379;
				float4 Coords234_g174351 = temp_output_37_0_g174351;
				float3 WorldPosition234_g174351 = temp_output_279_0_g174351;
				float4 localSampleStochastic2D234_g174351 = SampleStochastic2D( Texture234_g174351 , Sampler234_g174351 , Coords234_g174351 , WorldPosition234_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174351) = _SecondShaderTex;
				SamplerState Sampler263_g174351 = SS30_g174379;
				half4 Coords263_g174351 = temp_output_37_0_g174351;
				half3 WorldPosition263_g174351 = temp_output_279_0_g174351;
				half3 WorldNormal263_g174351 = temp_output_280_0_g174351;
				half4 localSampleStochastic3D263_g174351 = SampleStochastic3D( Texture263_g174351 , Sampler263_g174351 , Coords263_g174351 , WorldPosition263_g174351 , WorldNormal263_g174351 );
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float4 staticSwitch722_g174348 = localSampleMain276_g174351;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float4 staticSwitch722_g174348 = localSampleExtra275_g174351;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float4 staticSwitch722_g174348 = localSamplePlanar2D238_g174351;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float4 staticSwitch722_g174348 = localSamplePlanar3D246_g174351;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch722_g174348 = localSampleStochastic2D234_g174351;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch722_g174348 = localSampleStochastic3D263_g174351;
				#else
				float4 staticSwitch722_g174348 = localSampleMain276_g174351;
				#endif
				half4 Local_ShaderTex775_g174348 = staticSwitch722_g174348;
				float lerpResult739_g174348 = lerp( 1.0 , (Local_ShaderTex775_g174348).y , _SecondOcclusionValue);
				float4 appendResult749_g174348 = (float4(( (Local_ShaderTex775_g174348).x * _SecondMetallicValue ) , lerpResult739_g174348 , (Local_ShaderTex775_g174348).z , ( (Local_ShaderTex775_g174348).w * _SecondSmoothnessValue )));
				half4 Local_Masks750_g174348 = appendResult749_g174348;
				float clampResult17_g174355 = clamp( (Local_Masks750_g174348).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174356 = _SecondMultiRemap.x;
				float temp_output_10_0_g174356 = ( _SecondMultiRemap.y - temp_output_7_0_g174356 );
				float temp_output_765_0_g174348 = saturate( ( ( clampResult17_g174355 - temp_output_7_0_g174356 ) / ( temp_output_10_0_g174356 + 0.0001 ) ) );
				half Local_MultiMask767_g174348 = temp_output_765_0_g174348;
				float lerpResult705_g174348 = lerp( 1.0 , Local_MultiMask767_g174348 , _SecondColorMode);
				float4 lerpResult706_g174348 = lerp( _SecondColorTwo , _SecondColor , lerpResult705_g174348);
				half3 Local_ColorRGB774_g174348 = (lerpResult706_g174348).rgb;
				half3 Local_Albedo768_g174348 = ( Local_AlbedoRGB771_g174348 * Local_ColorRGB774_g174348 );
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174373 = 2.0;
				#else
				float staticSwitch1_g174373 = 4.594794;
				#endif
				float3 lerpResult985_g174348 = lerp( Local_Albedo768_g174348 , ( Visual_Albedo527_g174348 * Local_Albedo768_g174348 * staticSwitch1_g174373 ) , _SecondBlendAlbedoValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174352) = _SecondMaskTex;
				SamplerState Sampler276_g174352 = sampler_Linear_Repeat;
				half4 Local_BlendCoords813_g174348 = _second_mask_coord_value;
				float4 temp_output_37_0_g174352 = Local_BlendCoords813_g174348;
				half4 Coords276_g174352 = temp_output_37_0_g174352;
				half2 TexCoord276_g174352 = IN.ase_texcoord3.xy;
				half4 localSampleMain276_g174352 = SampleMain( Texture276_g174352 , Sampler276_g174352 , Coords276_g174352 , TexCoord276_g174352 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174352) = _SecondMaskTex;
				SamplerState Sampler275_g174352 = sampler_Linear_Repeat;
				half4 Coords275_g174352 = temp_output_37_0_g174352;
				half2 TexCoord275_g174352 = IN.ase_texcoord4.xy;
				half4 localSampleExtra275_g174352 = SampleExtra( Texture275_g174352 , Sampler275_g174352 , Coords275_g174352 , TexCoord275_g174352 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174352) = _SecondMaskTex;
				SamplerState Sampler238_g174352 = sampler_Linear_Repeat;
				half4 Coords238_g174352 = temp_output_37_0_g174352;
				float3 temp_output_279_0_g174352 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174352 = temp_output_279_0_g174352;
				half4 localSamplePlanar2D238_g174352 = SamplePlanar2D( Texture238_g174352 , Sampler238_g174352 , Coords238_g174352 , WorldPosition238_g174352 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174352) = _SecondMaskTex;
				SamplerState Sampler246_g174352 = sampler_Linear_Repeat;
				half4 Coords246_g174352 = temp_output_37_0_g174352;
				half3 WorldPosition246_g174352 = temp_output_279_0_g174352;
				float3 temp_output_280_0_g174352 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174352 = temp_output_280_0_g174352;
				half4 localSamplePlanar3D246_g174352 = SamplePlanar3D( Texture246_g174352 , Sampler246_g174352 , Coords246_g174352 , WorldPosition246_g174352 , WorldNormal246_g174352 );
				#if defined( TVE_SECOND_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch817_g174348 = localSampleMain276_g174352;
				#elif defined( TVE_SECOND_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch817_g174348 = localSampleExtra275_g174352;
				#elif defined( TVE_SECOND_MASK_SAMPLE_PLANAR_2D )
				float4 staticSwitch817_g174348 = localSamplePlanar2D238_g174352;
				#elif defined( TVE_SECOND_MASK_SAMPLE_PLANAR_3D )
				float4 staticSwitch817_g174348 = localSamplePlanar3D246_g174352;
				#else
				float4 staticSwitch817_g174348 = localSampleMain276_g174352;
				#endif
				half4 Local_MaskTex861_g174348 = staticSwitch817_g174348;
				float clampResult17_g174364 = clamp( (Local_MaskTex861_g174348).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174363 = _SecondMaskRemap.x;
				float temp_output_10_0_g174363 = ( _SecondMaskRemap.y - temp_output_7_0_g174363 );
				float lerpResult1015_g174348 = lerp( 1.0 , saturate( ( ( clampResult17_g174364 - temp_output_7_0_g174363 ) / ( temp_output_10_0_g174363 + 0.0001 ) ) ) , _SecondMaskValue);
				half Blend_TexMask429_g174348 = lerpResult1015_g174348;
				half3 Visual_NormalWS951_g174348 = Out_NormalWS4_g174360;
				float clampResult17_g174365 = clamp( saturate( (Visual_NormalWS951_g174348).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174366 = _SecondProjRemap.x;
				float temp_output_10_0_g174366 = ( _SecondProjRemap.y - temp_output_7_0_g174366 );
				float lerpResult996_g174348 = lerp( 1.0 , saturate( ( ( clampResult17_g174365 - temp_output_7_0_g174366 ) / ( temp_output_10_0_g174366 + 0.0001 ) ) ) , _SecondProjValue);
				half Blend_ProjMask434_g174348 = lerpResult996_g174348;
				half4 Model_VertexMasks964_g174348 = Out_VertexData15_g174380;
				float4 break965_g174348 = Model_VertexMasks964_g174348;
				float4 break33_g174367 = _second_vert_mode;
				float temp_output_30_0_g174367 = ( break965_g174348.x * break33_g174367.x );
				float temp_output_29_0_g174367 = ( break965_g174348.y * break33_g174367.y );
				float temp_output_31_0_g174367 = ( break965_g174348.z * break33_g174367.z );
				float temp_output_28_0_g174367 = ( temp_output_30_0_g174367 + temp_output_29_0_g174367 + temp_output_31_0_g174367 + ( break965_g174348.w * break33_g174367.w ) );
				float clampResult17_g174361 = clamp( temp_output_28_0_g174367 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174362 = _SecondMeshRemap.x;
				float temp_output_10_0_g174362 = ( _SecondMeshRemap.y - temp_output_7_0_g174362 );
				float lerpResult1017_g174348 = lerp( 1.0 , saturate( ( ( clampResult17_g174361 - temp_output_7_0_g174362 ) / ( temp_output_10_0_g174362 + 0.0001 ) ) ) , _SecondMeshValue);
				float temp_output_6_0_g174375 = lerpResult1017_g174348;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174375 = ( temp_output_6_0_g174375 + ( _SecondMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174375 = temp_output_6_0_g174375;
				#endif
				float temp_output_987_0_g174348 = staticSwitch14_g174375;
				half Blend_VertMask918_g174348 = temp_output_987_0_g174348;
				float localBuildGlobalData204_g173897 = ( 0.0 );
				TVEGlobalData Data204_g173897 = (TVEGlobalData)0;
				half Dummy211_g173897 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g173897 = Dummy211_g173897;
				float temp_output_82_0_g173907 = _GlobalCoatLayerValue;
				float temp_output_19_0_g173909 = TVE_CoatLayers[(int)temp_output_82_0_g173907];
				TVEModelData Data15_g173979 = Data16_g164566;
				float Out_Dummy15_g173979 = 0;
				float3 Out_PositionWS15_g173979 = float3( 0,0,0 );
				float3 Out_PositionWO15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWS15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWO15_g173979 = float3( 0,0,0 );
				float3 Out_NormalWS15_g173979 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g173979 = float3( 0,0,0 );
				float4 Out_VertexData15_g173979 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g173979 = float4( 0,0,0,0 );
				Out_Dummy15_g173979 = Data15_g173979.Dummy;
				Out_PositionWS15_g173979 = Data15_g173979.PositionWS;
				Out_PositionWO15_g173979 = Data15_g173979.PositionWO;
				Out_PivotWS15_g173979 = Data15_g173979.PivotWS;
				Out_PivotWO15_g173979 = Data15_g173979.PivotWO;
				Out_NormalWS15_g173979 = Data15_g173979.NormalWS;
				Out_ViewDirWS15_g173979 = Data15_g173979.ViewDirWS;
				Out_VertexData15_g173979 = Data15_g173979.VertexData;
				Out_BoundsData15_g173979 = Data15_g173979.BoundsData;
				half3 Model_PositionWS143_g173897 = Out_PositionWS15_g173979;
				half3 Model_PivotWS145_g173897 = Out_PivotWS15_g173979;
				float3 lerpResult300_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalCoatPivotValue);
				half3 Input_Position180_g173910 = lerpResult300_g173897;
				float2 temp_output_75_0_g173910 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_82_0_g173910 = temp_output_82_0_g173907;
				float2 temp_output_119_0_g173910 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_7_0_g173915 = 1.0;
				float temp_output_10_0_g173915 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173915 );
				float4 lerpResult131_g173910 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173910,temp_output_82_0_g173910), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173910,temp_output_82_0_g173910), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173910 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173915 ) / temp_output_10_0_g173915 ) ));
				float4 temp_output_17_0_g173909 = lerpResult131_g173910;
				float4 temp_output_3_0_g173909 = TVE_CoatParams;
				float4 ifLocalVar18_g173909 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173909 >= 0.5 )
				ifLocalVar18_g173909 = temp_output_17_0_g173909;
				else
				ifLocalVar18_g173909 = temp_output_3_0_g173909;
				float4 lerpResult22_g173909 = lerp( temp_output_3_0_g173909 , temp_output_17_0_g173909 , temp_output_19_0_g173909);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173909 = lerpResult22_g173909;
				#else
				float4 staticSwitch24_g173909 = ifLocalVar18_g173909;
				#endif
				half4 Coat_Params302_g173897 = staticSwitch24_g173909;
				float4 In_CoatParams204_g173897 = Coat_Params302_g173897;
				float temp_output_82_0_g173898 = _GlobalPaintLayerValue;
				float temp_output_19_0_g173900 = TVE_PaintLayers[(int)temp_output_82_0_g173898];
				float3 lerpResult85_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalPaintPivotValue);
				half3 Input_Position180_g173901 = lerpResult85_g173897;
				float2 temp_output_75_0_g173901 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_82_0_g173901 = temp_output_82_0_g173898;
				float2 temp_output_119_0_g173901 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_7_0_g173906 = 1.0;
				float temp_output_10_0_g173906 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173906 );
				float4 lerpResult131_g173901 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173901,temp_output_82_0_g173901), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173901,temp_output_82_0_g173901), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173901 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173906 ) / temp_output_10_0_g173906 ) ));
				float4 temp_output_17_0_g173900 = lerpResult131_g173901;
				float4 temp_output_3_0_g173900 = TVE_PaintParams;
				float4 ifLocalVar18_g173900 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173900 >= 0.5 )
				ifLocalVar18_g173900 = temp_output_17_0_g173900;
				else
				ifLocalVar18_g173900 = temp_output_3_0_g173900;
				float4 lerpResult22_g173900 = lerp( temp_output_3_0_g173900 , temp_output_17_0_g173900 , temp_output_19_0_g173900);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173900 = lerpResult22_g173900;
				#else
				float4 staticSwitch24_g173900 = ifLocalVar18_g173900;
				#endif
				half4 Paint_Params71_g173897 = staticSwitch24_g173900;
				float4 In_PaintParams204_g173897 = Paint_Params71_g173897;
				float temp_output_82_0_g173916 = _GlobalGlowLayerValue;
				float temp_output_19_0_g173918 = TVE_GlowLayers[(int)temp_output_82_0_g173916];
				float3 lerpResult247_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalGlowPivotValue);
				half3 Input_Position180_g173919 = lerpResult247_g173897;
				float2 temp_output_75_0_g173919 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_82_0_g173919 = temp_output_82_0_g173916;
				float2 temp_output_119_0_g173919 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_7_0_g173924 = 1.0;
				float temp_output_10_0_g173924 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173924 );
				float4 lerpResult131_g173919 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173919,temp_output_82_0_g173919), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173919,temp_output_82_0_g173919), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173919 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173924 ) / temp_output_10_0_g173924 ) ));
				float4 temp_output_17_0_g173918 = lerpResult131_g173919;
				float4 temp_output_3_0_g173918 = TVE_GlowParams;
				float4 ifLocalVar18_g173918 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173918 >= 0.5 )
				ifLocalVar18_g173918 = temp_output_17_0_g173918;
				else
				ifLocalVar18_g173918 = temp_output_3_0_g173918;
				float4 lerpResult22_g173918 = lerp( temp_output_3_0_g173918 , temp_output_17_0_g173918 , temp_output_19_0_g173918);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173918 = lerpResult22_g173918;
				#else
				float4 staticSwitch24_g173918 = ifLocalVar18_g173918;
				#endif
				half4 Glow_Params248_g173897 = staticSwitch24_g173918;
				float4 In_GlowParams204_g173897 = Glow_Params248_g173897;
				float temp_output_132_0_g173961 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g173963 = TVE_AtmoLayers[(int)temp_output_132_0_g173961];
				float3 lerpResult104_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalAtmoPivotValue);
				half3 Input_Position180_g173964 = lerpResult104_g173897;
				float2 temp_output_75_0_g173964 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_82_0_g173964 = temp_output_132_0_g173961;
				float2 temp_output_119_0_g173964 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_7_0_g173969 = 1.0;
				float temp_output_10_0_g173969 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173969 );
				float4 lerpResult131_g173964 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173964,temp_output_82_0_g173964), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173964,temp_output_82_0_g173964), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173964 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173969 ) / temp_output_10_0_g173969 ) ));
				float4 temp_output_17_0_g173963 = lerpResult131_g173964;
				float4 temp_output_3_0_g173963 = TVE_AtmoParams;
				float4 ifLocalVar18_g173963 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173963 >= 0.5 )
				ifLocalVar18_g173963 = temp_output_17_0_g173963;
				else
				ifLocalVar18_g173963 = temp_output_3_0_g173963;
				float4 lerpResult22_g173963 = lerp( temp_output_3_0_g173963 , temp_output_17_0_g173963 , temp_output_19_0_g173963);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173963 = lerpResult22_g173963;
				#else
				float4 staticSwitch24_g173963 = ifLocalVar18_g173963;
				#endif
				half4 Atmo_Params80_g173897 = staticSwitch24_g173963;
				float4 In_AtmoParams204_g173897 = Atmo_Params80_g173897;
				float temp_output_132_0_g173970 = _GlobalFadeLayerValue;
				float temp_output_19_0_g173972 = TVE_FadeLayers[(int)temp_output_132_0_g173970];
				float3 lerpResult382_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFadePivotValue);
				half3 Input_Position180_g173973 = lerpResult382_g173897;
				float2 temp_output_75_0_g173973 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_82_0_g173973 = temp_output_132_0_g173970;
				float2 temp_output_119_0_g173973 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_7_0_g173978 = 1.0;
				float temp_output_10_0_g173978 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173978 );
				float4 lerpResult131_g173973 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173973,temp_output_82_0_g173973), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173973,temp_output_82_0_g173973), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173973 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173978 ) / temp_output_10_0_g173978 ) ));
				float4 temp_output_17_0_g173972 = lerpResult131_g173973;
				float4 temp_output_3_0_g173972 = TVE_FadeParams;
				float4 ifLocalVar18_g173972 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173972 >= 0.5 )
				ifLocalVar18_g173972 = temp_output_17_0_g173972;
				else
				ifLocalVar18_g173972 = temp_output_3_0_g173972;
				float4 lerpResult22_g173972 = lerp( temp_output_3_0_g173972 , temp_output_17_0_g173972 , temp_output_19_0_g173972);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173972 = lerpResult22_g173972;
				#else
				float4 staticSwitch24_g173972 = ifLocalVar18_g173972;
				#endif
				half4 Fade_Params387_g173897 = staticSwitch24_g173972;
				float4 In_FadeParams204_g173897 = Fade_Params387_g173897;
				float temp_output_130_0_g173952 = _GlobalFormLayerValue;
				float temp_output_19_0_g173954 = TVE_FormLayers[(int)temp_output_130_0_g173952];
				float3 lerpResult168_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFormPivotValue);
				half3 Input_Position180_g173955 = lerpResult168_g173897;
				float2 temp_output_75_0_g173955 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_82_0_g173955 = temp_output_130_0_g173952;
				float2 temp_output_119_0_g173955 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_7_0_g173960 = 1.0;
				float temp_output_10_0_g173960 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173960 );
				float4 lerpResult131_g173955 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173955,temp_output_82_0_g173955), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173955,temp_output_82_0_g173955), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173955 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173960 ) / temp_output_10_0_g173960 ) ));
				float4 temp_output_17_0_g173954 = lerpResult131_g173955;
				float4 temp_output_3_0_g173954 = TVE_FormParams;
				float4 ifLocalVar18_g173954 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173954 >= 0.5 )
				ifLocalVar18_g173954 = temp_output_17_0_g173954;
				else
				ifLocalVar18_g173954 = temp_output_3_0_g173954;
				float4 lerpResult22_g173954 = lerp( temp_output_3_0_g173954 , temp_output_17_0_g173954 , temp_output_19_0_g173954);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173954 = lerpResult22_g173954;
				#else
				float4 staticSwitch24_g173954 = ifLocalVar18_g173954;
				#endif
				half4 Form_Params112_g173897 = staticSwitch24_g173954;
				float4 In_FormParams204_g173897 = Form_Params112_g173897;
				half4 Land_Params375_g173897 = TVE_LandParams;
				float4 In_LandParams204_g173897 = Land_Params375_g173897;
				float temp_output_136_0_g173943 = _GlobalWindLayerValue;
				float temp_output_19_0_g173945 = TVE_WindLayers[(int)temp_output_136_0_g173943];
				half3 Input_Position180_g173946 = Model_PositionWS143_g173897;
				float2 temp_output_75_0_g173946 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_82_0_g173946 = temp_output_136_0_g173943;
				float2 temp_output_119_0_g173946 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_7_0_g173951 = 1.0;
				float temp_output_10_0_g173951 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173951 );
				float4 lerpResult131_g173946 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173946,temp_output_82_0_g173946), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173946,temp_output_82_0_g173946), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173946 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173951 ) / temp_output_10_0_g173951 ) ));
				float4 temp_output_17_0_g173945 = lerpResult131_g173946;
				float4 temp_output_3_0_g173945 = TVE_WindParams;
				float4 ifLocalVar18_g173945 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173945 >= 0.5 )
				ifLocalVar18_g173945 = temp_output_17_0_g173945;
				else
				ifLocalVar18_g173945 = temp_output_3_0_g173945;
				float4 lerpResult22_g173945 = lerp( temp_output_3_0_g173945 , temp_output_17_0_g173945 , temp_output_19_0_g173945);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173945 = lerpResult22_g173945;
				#else
				float4 staticSwitch24_g173945 = ifLocalVar18_g173945;
				#endif
				half4 Wind_Params88_g173897 = staticSwitch24_g173945;
				float4 In_WindParams204_g173897 = Wind_Params88_g173897;
				float temp_output_136_0_g173925 = _GlobalPushLayerValue;
				float temp_output_19_0_g173926 = TVE_PushLayers[(int)temp_output_136_0_g173925];
				half3 Input_Position180_g173927 = Model_PivotWS145_g173897;
				float2 temp_output_75_0_g173927 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_82_0_g173927 = temp_output_136_0_g173925;
				float2 temp_output_119_0_g173927 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_7_0_g173932 = 1.0;
				float temp_output_10_0_g173932 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173932 );
				float4 lerpResult131_g173927 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173927,temp_output_82_0_g173927), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173927,temp_output_82_0_g173927), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173927 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173932 ) / temp_output_10_0_g173932 ) ));
				float4 temp_output_17_0_g173926 = lerpResult131_g173927;
				float4 temp_output_3_0_g173926 = TVE_PushParams;
				float4 ifLocalVar18_g173926 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173926 >= 0.5 )
				ifLocalVar18_g173926 = temp_output_17_0_g173926;
				else
				ifLocalVar18_g173926 = temp_output_3_0_g173926;
				float4 lerpResult22_g173926 = lerp( temp_output_3_0_g173926 , temp_output_17_0_g173926 , temp_output_19_0_g173926);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173926 = lerpResult22_g173926;
				#else
				float4 staticSwitch24_g173926 = ifLocalVar18_g173926;
				#endif
				half4 Push_Params335_g173897 = staticSwitch24_g173926;
				float4 In_PushParams204_g173897 = Push_Params335_g173897;
				Data204_g173897.Dummy = In_Dummy204_g173897;
				Data204_g173897.CoatParams = In_CoatParams204_g173897;
				Data204_g173897.PaintParams = In_PaintParams204_g173897;
				Data204_g173897.GlowParams = In_GlowParams204_g173897;
				Data204_g173897.AtmoParams = In_AtmoParams204_g173897;
				Data204_g173897.FadeParams = In_FadeParams204_g173897;
				Data204_g173897.FormParams= In_FormParams204_g173897;
				Data204_g173897.LandParams = In_LandParams204_g173897;
				Data204_g173897.WindParams = In_WindParams204_g173897;
				Data204_g173897.PushParams = In_PushParams204_g173897;
				TVEGlobalData Data15_g174359 = Data204_g173897;
				float Out_Dummy15_g174359 = 0;
				float4 Out_CoatParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174359 = float4( 0,0,0,0 );
				Out_Dummy15_g174359 = Data15_g174359.Dummy;
				Out_CoatParams15_g174359 = Data15_g174359.CoatParams;
				Out_PaintParams15_g174359 = Data15_g174359.PaintParams;
				Out_GlowParams15_g174359 = Data15_g174359.GlowParams;
				Out_AtmoParams15_g174359= Data15_g174359.AtmoParams;
				Out_FadeParams15_g174359= Data15_g174359.FadeParams;
				Out_FormParams15_g174359 = Data15_g174359.FormParams;
				Out_LandParams15_g174359 = Data15_g174359.LandParams;
				Out_WindParams15_g174359 = Data15_g174359.WindParams;
				Out_PushParams15_g174359 = Data15_g174359.PushParams;
				half4 Global_CoatParams975_g174348 = Out_CoatParams15_g174359;
				float lerpResult1013_g174348 = lerp( 1.0 , (Global_CoatParams975_g174348).z , TVE_IsEnabled);
				#ifdef TVE_SECOND_ELEMENT
				float staticSwitch971_g174348 = lerpResult1013_g174348;
				#else
				float staticSwitch971_g174348 = 1.0;
				#endif
				half Blend_GlobalMask972_g174348 = staticSwitch971_g174348;
				float temp_output_432_0_g174348 = ( _SecondIntensityValue * Blend_TexMask429_g174348 * Blend_ProjMask434_g174348 * Blend_VertMask918_g174348 * Blend_GlobalMask972_g174348 );
				float clampResult17_g174369 = clamp( temp_output_432_0_g174348 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174368 = _SecondBlendRemap.x;
				float temp_output_10_0_g174368 = ( _SecondBlendRemap.y - temp_output_7_0_g174368 );
				half Blend_Mask412_g174348 = ( saturate( ( ( clampResult17_g174369 - temp_output_7_0_g174368 ) / ( temp_output_10_0_g174368 + 0.0001 ) ) ) * _SecondBlendIntensityValue );
				float3 lerpResult403_g174348 = lerp( Visual_Albedo527_g174348 , lerpResult985_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float3 staticSwitch415_g174348 = lerpResult403_g174348;
				#else
				float3 staticSwitch415_g174348 = Visual_Albedo527_g174348;
				#endif
				half3 Final_Albedo601_g174348 = staticSwitch415_g174348;
				float3 In_Albedo3_g174381 = Final_Albedo601_g174348;
				float3 In_AlbedoRaw3_g174381 = Final_Albedo601_g174348;
				half2 Visual_NormalTS529_g174348 = Out_NormalTS4_g174360;
				float2 lerpResult40_g174371 = lerp( float2( 0,0 ) , Visual_NormalTS529_g174348 , _SecondBlendNormalValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174350) = _SecondNormalTex;
				float localFilterTexture29_g174378 = ( 0.0 );
				SamplerState SamplerDefault29_g174378 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174378 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174378 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174378 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174378 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174378 = SamplerDefault29_g174378;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174378 = SamplerDefault29_g174378;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174378 = SamplerPoint29_g174378;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174378 = SamplerLow29_g174378;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174378 = SamplerMedium29_g174378;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174378 = SamplerHigh29_g174378;
				#endif
				SamplerState Sampler276_g174350 = SS29_g174378;
				float4 temp_output_37_0_g174350 = Local_LayerCoords790_g174348;
				half4 Coords276_g174350 = temp_output_37_0_g174350;
				half2 TexCoord276_g174350 = IN.ase_texcoord3.xy;
				half4 localSampleMain276_g174350 = SampleMain( Texture276_g174350 , Sampler276_g174350 , Coords276_g174350 , TexCoord276_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174350) = _SecondNormalTex;
				SamplerState Sampler275_g174350 = SS29_g174378;
				half4 Coords275_g174350 = temp_output_37_0_g174350;
				half2 TexCoord275_g174350 = IN.ase_texcoord4.xy;
				half4 localSampleExtra275_g174350 = SampleExtra( Texture275_g174350 , Sampler275_g174350 , Coords275_g174350 , TexCoord275_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174350) = _SecondNormalTex;
				SamplerState Sampler238_g174350 = SS29_g174378;
				half4 Coords238_g174350 = temp_output_37_0_g174350;
				float3 temp_output_279_0_g174350 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174350 = temp_output_279_0_g174350;
				half4 localSamplePlanar2D238_g174350 = SamplePlanar2D( Texture238_g174350 , Sampler238_g174350 , Coords238_g174350 , WorldPosition238_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174350) = _SecondNormalTex;
				SamplerState Sampler246_g174350 = SS29_g174378;
				half4 Coords246_g174350 = temp_output_37_0_g174350;
				half3 WorldPosition246_g174350 = temp_output_279_0_g174350;
				float3 temp_output_280_0_g174350 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174350 = temp_output_280_0_g174350;
				half4 localSamplePlanar3D246_g174350 = SamplePlanar3D( Texture246_g174350 , Sampler246_g174350 , Coords246_g174350 , WorldPosition246_g174350 , WorldNormal246_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174350) = _SecondNormalTex;
				SamplerState Sampler234_g174350 = SS29_g174378;
				float4 Coords234_g174350 = temp_output_37_0_g174350;
				float3 WorldPosition234_g174350 = temp_output_279_0_g174350;
				float4 localSampleStochastic2D234_g174350 = SampleStochastic2D( Texture234_g174350 , Sampler234_g174350 , Coords234_g174350 , WorldPosition234_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174350) = _SecondNormalTex;
				SamplerState Sampler263_g174350 = SS29_g174378;
				half4 Coords263_g174350 = temp_output_37_0_g174350;
				half3 WorldPosition263_g174350 = temp_output_279_0_g174350;
				half3 WorldNormal263_g174350 = temp_output_280_0_g174350;
				half4 localSampleStochastic3D263_g174350 = SampleStochastic3D( Texture263_g174350 , Sampler263_g174350 , Coords263_g174350 , WorldPosition263_g174350 , WorldNormal263_g174350 );
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float4 staticSwitch698_g174348 = localSampleMain276_g174350;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float4 staticSwitch698_g174348 = localSampleExtra275_g174350;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float4 staticSwitch698_g174348 = localSamplePlanar2D238_g174350;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float4 staticSwitch698_g174348 = localSamplePlanar3D246_g174350;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch698_g174348 = localSampleStochastic2D234_g174350;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch698_g174348 = localSampleStochastic3D263_g174350;
				#else
				float4 staticSwitch698_g174348 = localSampleMain276_g174350;
				#endif
				half4 Local_NormalTex776_g174348 = staticSwitch698_g174348;
				half4 Normal_Packed45_g174353 = Local_NormalTex776_g174348;
				float2 appendResult58_g174353 = (float2(( (Normal_Packed45_g174353).x * (Normal_Packed45_g174353).w ) , (Normal_Packed45_g174353).y));
				half2 Normal_Default50_g174353 = appendResult58_g174353;
				half2 Normal_ASTC41_g174353 = (Normal_Packed45_g174353).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174353 = Normal_ASTC41_g174353;
				#else
				float2 staticSwitch38_g174353 = Normal_Default50_g174353;
				#endif
				half2 Normal_NO_DTX544_g174353 = (Normal_Packed45_g174353).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174353 = Normal_NO_DTX544_g174353;
				#else
				float2 staticSwitch37_g174353 = staticSwitch38_g174353;
				#endif
				float2 temp_output_724_0_g174348 = ( (staticSwitch37_g174353*2.0 + -1.0) * _SecondNormalValue );
				half2 Normal_Planar45_g174354 = temp_output_724_0_g174348;
				float2 break71_g174354 = Normal_Planar45_g174354;
				float3 appendResult72_g174354 = (float3(break71_g174354.x , 0.0 , break71_g174354.y));
				float2 temp_output_858_0_g174348 = (mul( ase_worldToTangent, appendResult72_g174354 )).xy;
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float2 staticSwitch727_g174348 = temp_output_724_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float2 staticSwitch727_g174348 = temp_output_724_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#else
				float2 staticSwitch727_g174348 = temp_output_724_0_g174348;
				#endif
				half2 Local_NormalTS729_g174348 = staticSwitch727_g174348;
				float2 temp_output_36_0_g174371 = ( lerpResult40_g174371 + Local_NormalTS729_g174348 );
				float2 lerpResult405_g174348 = lerp( Visual_NormalTS529_g174348 , temp_output_36_0_g174371 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float2 staticSwitch418_g174348 = lerpResult405_g174348;
				#else
				float2 staticSwitch418_g174348 = Visual_NormalTS529_g174348;
				#endif
				half2 Final_NormalTS612_g174348 = staticSwitch418_g174348;
				float2 In_NormalTS3_g174381 = Final_NormalTS612_g174348;
				float3 appendResult68_g174372 = (float3(Final_NormalTS612_g174348 , 1.0));
				float3 tanNormal74_g174372 = appendResult68_g174372;
				float3 worldNormal74_g174372 = normalize( float3(dot(tanToWorld0,tanNormal74_g174372), dot(tanToWorld1,tanNormal74_g174372), dot(tanToWorld2,tanNormal74_g174372)) );
				half3 Final_NormalWS950_g174348 = worldNormal74_g174372;
				float3 In_NormalWS3_g174381 = Final_NormalWS950_g174348;
				half4 Visual_Shader531_g174348 = Out_Shader4_g174360;
				float4 lerpResult994_g174348 = lerp( Local_Masks750_g174348 , ( Visual_Shader531_g174348 * Local_Masks750_g174348 ) , _SecondBlendShaderValue);
				float4 lerpResult440_g174348 = lerp( Visual_Shader531_g174348 , lerpResult994_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float4 staticSwitch451_g174348 = lerpResult440_g174348;
				#else
				float4 staticSwitch451_g174348 = Visual_Shader531_g174348;
				#endif
				half4 Final_Masks613_g174348 = staticSwitch451_g174348;
				float4 In_Shader3_g174381 = Final_Masks613_g174348;
				float4 In_Emissive3_g174381 = Out_Emissive4_g174360;
				float3 temp_output_3_0_g174374 = Final_Albedo601_g174348;
				float dotResult20_g174374 = dot( temp_output_3_0_g174374 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale615_g174348 = dotResult20_g174374;
				float In_Grayscale3_g174381 = Final_Grayscale615_g174348;
				float clampResult651_g174348 = clamp( saturate( ( Final_Grayscale615_g174348 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity652_g174348 = clampResult651_g174348;
				float In_Luminosity3_g174381 = Final_Luminosity652_g174348;
				half Visual_MultiMask547_g174348 = Out_MultiMask4_g174360;
				float lerpResult477_g174348 = lerp( Visual_MultiMask547_g174348 , Local_MultiMask767_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float staticSwitch482_g174348 = lerpResult477_g174348;
				#else
				float staticSwitch482_g174348 = Visual_MultiMask547_g174348;
				#endif
				half Final_MultiMask572_g174348 = staticSwitch482_g174348;
				float In_MultiMask3_g174381 = Final_MultiMask572_g174348;
				half Visual_AlphaClip559_g174348 = Out_AlphaClip4_g174360;
				float temp_output_718_0_g174348 = (Local_AlbedoTex777_g174348).w;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch932_g174348 = ( temp_output_718_0_g174348 - _SecondAlphaClipValue );
				#else
				float staticSwitch932_g174348 = temp_output_718_0_g174348;
				#endif
				half Local_AlphaClip772_g174348 = staticSwitch932_g174348;
				float lerpResult448_g174348 = lerp( Visual_AlphaClip559_g174348 , Local_AlphaClip772_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float staticSwitch564_g174348 = lerpResult448_g174348;
				#else
				float staticSwitch564_g174348 = Visual_AlphaClip559_g174348;
				#endif
				half Final_AlphaClip602_g174348 = staticSwitch564_g174348;
				float In_AlphaClip3_g174381 = Final_AlphaClip602_g174348;
				half Visual_AlphaFade588_g174348 = Out_AlphaFade4_g174360;
				half Local_AlphaFade773_g174348 = (lerpResult706_g174348).a;
				float lerpResult604_g174348 = lerp( Visual_AlphaFade588_g174348 , Local_AlphaFade773_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float staticSwitch608_g174348 = lerpResult604_g174348;
				#else
				float staticSwitch608_g174348 = Visual_AlphaFade588_g174348;
				#endif
				half Final_AlphaFade611_g174348 = staticSwitch608_g174348;
				float In_AlphaFade3_g174381 = Final_AlphaFade611_g174348;
				float3 In_Translucency3_g174381 = Out_Translucency4_g174360;
				float In_Transmission3_g174381 = Out_Transmission4_g174360;
				float In_Thickness3_g174381 = Out_Thickness4_g174360;
				float In_Diffusion3_g174381 = Out_Diffusion4_g174360;
				Data3_g174381.Dummy = In_Dummy3_g174381;
				Data3_g174381.Albedo = In_Albedo3_g174381;
				Data3_g174381.AlbedoRaw = In_AlbedoRaw3_g174381;
				Data3_g174381.NormalTS = In_NormalTS3_g174381;
				Data3_g174381.NormalWS = In_NormalWS3_g174381;
				Data3_g174381.Shader = In_Shader3_g174381;
				Data3_g174381.Emissive= In_Emissive3_g174381;
				Data3_g174381.MultiMask = In_MultiMask3_g174381;
				Data3_g174381.Grayscale = In_Grayscale3_g174381;
				Data3_g174381.Luminosity = In_Luminosity3_g174381;
				Data3_g174381.AlphaClip = In_AlphaClip3_g174381;
				Data3_g174381.AlphaFade = In_AlphaFade3_g174381;
				Data3_g174381.Translucency = In_Translucency3_g174381;
				Data3_g174381.Transmission = In_Transmission3_g174381;
				Data3_g174381.Thickness = In_Thickness3_g174381;
				Data3_g174381.Diffusion = In_Diffusion3_g174381;
				TVEVisualData Data4_g174402 = Data3_g174381;
				float Out_Dummy4_g174402 = 0;
				float3 Out_Albedo4_g174402 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174402 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174402 = float2( 0,0 );
				float3 Out_NormalWS4_g174402 = float3( 0,0,0 );
				float4 Out_Shader4_g174402 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174402 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174402 = 0;
				float Out_Grayscale4_g174402 = 0;
				float Out_Luminosity4_g174402 = 0;
				float Out_AlphaClip4_g174402 = 0;
				float Out_AlphaFade4_g174402 = 0;
				float3 Out_Translucency4_g174402 = float3( 0,0,0 );
				float Out_Transmission4_g174402 = 0;
				float Out_Thickness4_g174402 = 0;
				float Out_Diffusion4_g174402 = 0;
				Out_Dummy4_g174402 = Data4_g174402.Dummy;
				Out_Albedo4_g174402 = Data4_g174402.Albedo;
				Out_AlbedoRaw4_g174402 = Data4_g174402.AlbedoRaw;
				Out_NormalTS4_g174402 = Data4_g174402.NormalTS;
				Out_NormalWS4_g174402 = Data4_g174402.NormalWS;
				Out_Shader4_g174402 = Data4_g174402.Shader;
				Out_Emissive4_g174402= Data4_g174402.Emissive;
				Out_MultiMask4_g174402 = Data4_g174402.MultiMask;
				Out_Grayscale4_g174402 = Data4_g174402.Grayscale;
				Out_Luminosity4_g174402= Data4_g174402.Luminosity;
				Out_AlphaClip4_g174402 = Data4_g174402.AlphaClip;
				Out_AlphaFade4_g174402 = Data4_g174402.AlphaFade;
				Out_Translucency4_g174402 = Data4_g174402.Translucency;
				Out_Transmission4_g174402 = Data4_g174402.Transmission;
				Out_Thickness4_g174402 = Data4_g174402.Thickness;
				Out_Diffusion4_g174402 = Data4_g174402.Diffusion;
				half3 Visual_Albedo527_g174386 = Out_Albedo4_g174402;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174387) = _ThirdAlbedoTex;
				float localFilterTexture19_g174415 = ( 0.0 );
				SamplerState SamplerDefault19_g174415 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174415 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174415 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174415 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174415 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174415 = SamplerDefault19_g174415;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174415 = SamplerDefault19_g174415;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174415 = SamplerPoint19_g174415;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174415 = SamplerLow19_g174415;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174415 = SamplerMedium19_g174415;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174415 = SamplerHigh19_g174415;
				#endif
				SamplerState Sampler276_g174387 = SS19_g174415;
				half4 Local_LayerCoords790_g174386 = _third_coord_value;
				float4 temp_output_37_0_g174387 = Local_LayerCoords790_g174386;
				half4 Coords276_g174387 = temp_output_37_0_g174387;
				half2 TexCoord276_g174387 = IN.ase_texcoord3.xy;
				half4 localSampleMain276_g174387 = SampleMain( Texture276_g174387 , Sampler276_g174387 , Coords276_g174387 , TexCoord276_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler275_g174387 = SS19_g174415;
				half4 Coords275_g174387 = temp_output_37_0_g174387;
				half2 TexCoord275_g174387 = IN.ase_texcoord4.xy;
				half4 localSampleExtra275_g174387 = SampleExtra( Texture275_g174387 , Sampler275_g174387 , Coords275_g174387 , TexCoord275_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler238_g174387 = SS19_g174415;
				half4 Coords238_g174387 = temp_output_37_0_g174387;
				TVEModelData Data15_g174418 = Data16_g164566;
				float Out_Dummy15_g174418 = 0;
				float3 Out_PositionWS15_g174418 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174418 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174418 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174418 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174418 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174418 = float3( 0,0,0 );
				float4 Out_VertexData15_g174418 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174418 = float4( 0,0,0,0 );
				Out_Dummy15_g174418 = Data15_g174418.Dummy;
				Out_PositionWS15_g174418 = Data15_g174418.PositionWS;
				Out_PositionWO15_g174418 = Data15_g174418.PositionWO;
				Out_PivotWS15_g174418 = Data15_g174418.PivotWS;
				Out_PivotWO15_g174418 = Data15_g174418.PivotWO;
				Out_NormalWS15_g174418 = Data15_g174418.NormalWS;
				Out_ViewDirWS15_g174418 = Data15_g174418.ViewDirWS;
				Out_VertexData15_g174418 = Data15_g174418.VertexData;
				Out_BoundsData15_g174418 = Data15_g174418.BoundsData;
				half3 Model_PositionWO636_g174386 = Out_PositionWO15_g174418;
				float3 temp_output_279_0_g174387 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174387 = temp_output_279_0_g174387;
				half4 localSamplePlanar2D238_g174387 = SamplePlanar2D( Texture238_g174387 , Sampler238_g174387 , Coords238_g174387 , WorldPosition238_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler246_g174387 = SS19_g174415;
				half4 Coords246_g174387 = temp_output_37_0_g174387;
				half3 WorldPosition246_g174387 = temp_output_279_0_g174387;
				half3 Model_NormalWS869_g174386 = Out_NormalWS15_g174418;
				float3 temp_output_280_0_g174387 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174387 = temp_output_280_0_g174387;
				half4 localSamplePlanar3D246_g174387 = SamplePlanar3D( Texture246_g174387 , Sampler246_g174387 , Coords246_g174387 , WorldPosition246_g174387 , WorldNormal246_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler234_g174387 = SS19_g174415;
				float4 Coords234_g174387 = temp_output_37_0_g174387;
				float3 WorldPosition234_g174387 = temp_output_279_0_g174387;
				float4 localSampleStochastic2D234_g174387 = SampleStochastic2D( Texture234_g174387 , Sampler234_g174387 , Coords234_g174387 , WorldPosition234_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler263_g174387 = SS19_g174415;
				half4 Coords263_g174387 = temp_output_37_0_g174387;
				half3 WorldPosition263_g174387 = temp_output_279_0_g174387;
				half3 WorldNormal263_g174387 = temp_output_280_0_g174387;
				half4 localSampleStochastic3D263_g174387 = SampleStochastic3D( Texture263_g174387 , Sampler263_g174387 , Coords263_g174387 , WorldPosition263_g174387 , WorldNormal263_g174387 );
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float4 staticSwitch693_g174386 = localSampleMain276_g174387;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float4 staticSwitch693_g174386 = localSampleExtra275_g174387;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float4 staticSwitch693_g174386 = localSamplePlanar2D238_g174387;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float4 staticSwitch693_g174386 = localSamplePlanar3D246_g174387;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch693_g174386 = localSampleStochastic2D234_g174387;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch693_g174386 = localSampleStochastic3D263_g174387;
				#else
				float4 staticSwitch693_g174386 = localSampleMain276_g174387;
				#endif
				half4 Local_AlbedoTex777_g174386 = staticSwitch693_g174386;
				float3 lerpResult716_g174386 = lerp( float3( 1,1,1 ) , (Local_AlbedoTex777_g174386).xyz , _ThirdAlbedoValue);
				half3 Local_AlbedoRGB771_g174386 = lerpResult716_g174386;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174389) = _ThirdShaderTex;
				float localFilterTexture30_g174417 = ( 0.0 );
				SamplerState SamplerDefault30_g174417 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174417 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174417 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174417 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174417 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174417 = SamplerDefault30_g174417;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174417 = SamplerDefault30_g174417;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174417 = SamplerPoint30_g174417;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174417 = SamplerLow30_g174417;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174417 = SamplerMedium30_g174417;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174417 = SamplerHigh30_g174417;
				#endif
				SamplerState Sampler276_g174389 = SS30_g174417;
				float4 temp_output_37_0_g174389 = Local_LayerCoords790_g174386;
				half4 Coords276_g174389 = temp_output_37_0_g174389;
				half2 TexCoord276_g174389 = IN.ase_texcoord3.xy;
				half4 localSampleMain276_g174389 = SampleMain( Texture276_g174389 , Sampler276_g174389 , Coords276_g174389 , TexCoord276_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174389) = _ThirdShaderTex;
				SamplerState Sampler275_g174389 = SS30_g174417;
				half4 Coords275_g174389 = temp_output_37_0_g174389;
				half2 TexCoord275_g174389 = IN.ase_texcoord4.xy;
				half4 localSampleExtra275_g174389 = SampleExtra( Texture275_g174389 , Sampler275_g174389 , Coords275_g174389 , TexCoord275_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174389) = _ThirdShaderTex;
				SamplerState Sampler238_g174389 = SS30_g174417;
				half4 Coords238_g174389 = temp_output_37_0_g174389;
				float3 temp_output_279_0_g174389 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174389 = temp_output_279_0_g174389;
				half4 localSamplePlanar2D238_g174389 = SamplePlanar2D( Texture238_g174389 , Sampler238_g174389 , Coords238_g174389 , WorldPosition238_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174389) = _ThirdShaderTex;
				SamplerState Sampler246_g174389 = SS30_g174417;
				half4 Coords246_g174389 = temp_output_37_0_g174389;
				half3 WorldPosition246_g174389 = temp_output_279_0_g174389;
				float3 temp_output_280_0_g174389 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174389 = temp_output_280_0_g174389;
				half4 localSamplePlanar3D246_g174389 = SamplePlanar3D( Texture246_g174389 , Sampler246_g174389 , Coords246_g174389 , WorldPosition246_g174389 , WorldNormal246_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174389) = _ThirdShaderTex;
				SamplerState Sampler234_g174389 = SS30_g174417;
				float4 Coords234_g174389 = temp_output_37_0_g174389;
				float3 WorldPosition234_g174389 = temp_output_279_0_g174389;
				float4 localSampleStochastic2D234_g174389 = SampleStochastic2D( Texture234_g174389 , Sampler234_g174389 , Coords234_g174389 , WorldPosition234_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174389) = _ThirdShaderTex;
				SamplerState Sampler263_g174389 = SS30_g174417;
				half4 Coords263_g174389 = temp_output_37_0_g174389;
				half3 WorldPosition263_g174389 = temp_output_279_0_g174389;
				half3 WorldNormal263_g174389 = temp_output_280_0_g174389;
				half4 localSampleStochastic3D263_g174389 = SampleStochastic3D( Texture263_g174389 , Sampler263_g174389 , Coords263_g174389 , WorldPosition263_g174389 , WorldNormal263_g174389 );
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float4 staticSwitch722_g174386 = localSampleMain276_g174389;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float4 staticSwitch722_g174386 = localSampleExtra275_g174389;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float4 staticSwitch722_g174386 = localSamplePlanar2D238_g174389;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float4 staticSwitch722_g174386 = localSamplePlanar3D246_g174389;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch722_g174386 = localSampleStochastic2D234_g174389;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch722_g174386 = localSampleStochastic3D263_g174389;
				#else
				float4 staticSwitch722_g174386 = localSampleMain276_g174389;
				#endif
				half4 Local_ShaderTex775_g174386 = staticSwitch722_g174386;
				float lerpResult739_g174386 = lerp( 1.0 , (Local_ShaderTex775_g174386).y , _ThirdOcclusionValue);
				float4 appendResult749_g174386 = (float4(( (Local_ShaderTex775_g174386).x * _ThirdMetallicValue ) , lerpResult739_g174386 , (Local_ShaderTex775_g174386).z , ( (Local_ShaderTex775_g174386).w * _ThirdSmoothnessValue )));
				half4 Local_Masks750_g174386 = appendResult749_g174386;
				float clampResult17_g174392 = clamp( (Local_Masks750_g174386).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174393 = _ThirdMultiRemap.x;
				float temp_output_10_0_g174393 = ( _ThirdMultiRemap.y - temp_output_7_0_g174393 );
				float temp_output_765_0_g174386 = saturate( ( ( clampResult17_g174392 - temp_output_7_0_g174393 ) / ( temp_output_10_0_g174393 + 0.0001 ) ) );
				half Local_MultiMask767_g174386 = temp_output_765_0_g174386;
				float lerpResult705_g174386 = lerp( 1.0 , Local_MultiMask767_g174386 , _ThirdColorMode);
				float4 lerpResult706_g174386 = lerp( _ThirdColorTwo , _ThirdColor , lerpResult705_g174386);
				half3 Local_ColorRGB774_g174386 = (lerpResult706_g174386).rgb;
				half3 Local_Albedo768_g174386 = ( Local_AlbedoRGB771_g174386 * Local_ColorRGB774_g174386 );
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174410 = 2.0;
				#else
				float staticSwitch1_g174410 = 4.594794;
				#endif
				float3 lerpResult985_g174386 = lerp( Local_Albedo768_g174386 , ( Visual_Albedo527_g174386 * Local_Albedo768_g174386 * staticSwitch1_g174410 ) , _ThirdBlendAlbedoValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174413) = _ThirdMaskTex;
				SamplerState Sampler276_g174413 = sampler_Linear_Repeat;
				half4 Local_MaskCoords813_g174386 = _third_mask_coord_value;
				float4 temp_output_37_0_g174413 = Local_MaskCoords813_g174386;
				half4 Coords276_g174413 = temp_output_37_0_g174413;
				half2 TexCoord276_g174413 = IN.ase_texcoord3.xy;
				half4 localSampleMain276_g174413 = SampleMain( Texture276_g174413 , Sampler276_g174413 , Coords276_g174413 , TexCoord276_g174413 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174413) = _ThirdMaskTex;
				SamplerState Sampler275_g174413 = sampler_Linear_Repeat;
				half4 Coords275_g174413 = temp_output_37_0_g174413;
				half2 TexCoord275_g174413 = IN.ase_texcoord4.xy;
				half4 localSampleExtra275_g174413 = SampleExtra( Texture275_g174413 , Sampler275_g174413 , Coords275_g174413 , TexCoord275_g174413 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174413) = _ThirdMaskTex;
				SamplerState Sampler238_g174413 = sampler_Linear_Repeat;
				half4 Coords238_g174413 = temp_output_37_0_g174413;
				float3 temp_output_279_0_g174413 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174413 = temp_output_279_0_g174413;
				half4 localSamplePlanar2D238_g174413 = SamplePlanar2D( Texture238_g174413 , Sampler238_g174413 , Coords238_g174413 , WorldPosition238_g174413 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174413) = _ThirdMaskTex;
				SamplerState Sampler246_g174413 = sampler_Linear_Repeat;
				half4 Coords246_g174413 = temp_output_37_0_g174413;
				half3 WorldPosition246_g174413 = temp_output_279_0_g174413;
				float3 temp_output_280_0_g174413 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174413 = temp_output_280_0_g174413;
				half4 localSamplePlanar3D246_g174413 = SamplePlanar3D( Texture246_g174413 , Sampler246_g174413 , Coords246_g174413 , WorldPosition246_g174413 , WorldNormal246_g174413 );
				#if defined( TVE_THIRD_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch817_g174386 = localSampleMain276_g174413;
				#elif defined( TVE_THIRD_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch817_g174386 = localSampleExtra275_g174413;
				#elif defined( TVE_THIRD_MASK_SAMPLE_PLANAR_2D )
				float4 staticSwitch817_g174386 = localSamplePlanar2D238_g174413;
				#elif defined( TVE_THIRD_MASK_SAMPLE_PLANAR_3D )
				float4 staticSwitch817_g174386 = localSamplePlanar3D246_g174413;
				#else
				float4 staticSwitch817_g174386 = localSampleMain276_g174413;
				#endif
				half4 Local_MaskTex861_g174386 = staticSwitch817_g174386;
				float clampResult17_g174397 = clamp( (Local_MaskTex861_g174386).y , 0.0001 , 0.9999 );
				float temp_output_7_0_g174398 = _ThirdMaskRemap.x;
				float temp_output_10_0_g174398 = ( _ThirdMaskRemap.y - temp_output_7_0_g174398 );
				float lerpResult1028_g174386 = lerp( 1.0 , saturate( ( ( clampResult17_g174397 - temp_output_7_0_g174398 ) / ( temp_output_10_0_g174398 + 0.0001 ) ) ) , _ThirdMaskValue);
				half Detail_TexMask429_g174386 = lerpResult1028_g174386;
				half4 Model_VertexMasks960_g174386 = Out_VertexData15_g174418;
				float4 break961_g174386 = Model_VertexMasks960_g174386;
				float4 break33_g174401 = _third_vert_mode;
				float temp_output_30_0_g174401 = ( break961_g174386.x * break33_g174401.x );
				float temp_output_29_0_g174401 = ( break961_g174386.y * break33_g174401.y );
				float temp_output_31_0_g174401 = ( break961_g174386.z * break33_g174401.z );
				float temp_output_28_0_g174401 = ( temp_output_30_0_g174401 + temp_output_29_0_g174401 + temp_output_31_0_g174401 + ( break961_g174386.w * break33_g174401.w ) );
				float clampResult17_g174395 = clamp( temp_output_28_0_g174401 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174396 = _ThirdMeshRemap.x;
				float temp_output_10_0_g174396 = ( _ThirdMeshRemap.y - temp_output_7_0_g174396 );
				float lerpResult1026_g174386 = lerp( 1.0 , saturate( ( ( clampResult17_g174395 - temp_output_7_0_g174396 ) / ( temp_output_10_0_g174396 + 0.0001 ) ) ) , _ThirdMeshValue);
				float temp_output_6_0_g174412 = lerpResult1026_g174386;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174412 = ( temp_output_6_0_g174412 + ( _ThirdMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174412 = temp_output_6_0_g174412;
				#endif
				float temp_output_992_0_g174386 = staticSwitch14_g174412;
				half Blend_VertMask913_g174386 = temp_output_992_0_g174386;
				half3 Visual_NormalWS953_g174386 = Out_NormalWS4_g174402;
				float clampResult17_g174399 = clamp( saturate( (Visual_NormalWS953_g174386).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174400 = _ThirdProjRemap.x;
				float temp_output_10_0_g174400 = ( _ThirdProjRemap.y - temp_output_7_0_g174400 );
				float lerpResult1004_g174386 = lerp( 1.0 , saturate( ( ( clampResult17_g174399 - temp_output_7_0_g174400 ) / ( temp_output_10_0_g174400 + 0.0001 ) ) ) , _ThirdProjValue);
				half Blend_ProjMask912_g174386 = lerpResult1004_g174386;
				TVEGlobalData Data15_g174404 = Data204_g173897;
				float Out_Dummy15_g174404 = 0;
				float4 Out_CoatParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174404 = float4( 0,0,0,0 );
				Out_Dummy15_g174404 = Data15_g174404.Dummy;
				Out_CoatParams15_g174404 = Data15_g174404.CoatParams;
				Out_PaintParams15_g174404 = Data15_g174404.PaintParams;
				Out_GlowParams15_g174404 = Data15_g174404.GlowParams;
				Out_AtmoParams15_g174404= Data15_g174404.AtmoParams;
				Out_FadeParams15_g174404= Data15_g174404.FadeParams;
				Out_FormParams15_g174404 = Data15_g174404.FormParams;
				Out_LandParams15_g174404 = Data15_g174404.LandParams;
				Out_WindParams15_g174404 = Data15_g174404.WindParams;
				Out_PushParams15_g174404 = Data15_g174404.PushParams;
				half4 Global_CoatParams972_g174386 = Out_CoatParams15_g174404;
				float lerpResult1023_g174386 = lerp( 1.0 , (Global_CoatParams972_g174386).y , TVE_IsEnabled);
				#ifdef TVE_THIRD_ELEMENT
				float staticSwitch965_g174386 = lerpResult1023_g174386;
				#else
				float staticSwitch965_g174386 = 1.0;
				#endif
				half Blend_GlobalMask968_g174386 = staticSwitch965_g174386;
				float temp_output_432_0_g174386 = ( _ThirdIntensityValue * Detail_TexMask429_g174386 * Blend_VertMask913_g174386 * Blend_ProjMask912_g174386 * Blend_GlobalMask968_g174386 );
				float clampResult17_g174406 = clamp( temp_output_432_0_g174386 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174405 = _ThirdBlendRemap.x;
				float temp_output_10_0_g174405 = ( _ThirdBlendRemap.y - temp_output_7_0_g174405 );
				half Detail_Mask412_g174386 = ( saturate( ( ( clampResult17_g174406 - temp_output_7_0_g174405 ) / ( temp_output_10_0_g174405 + 0.0001 ) ) ) * _ThirdBlendIntensityValue );
				float3 lerpResult989_g174386 = lerp( Visual_Albedo527_g174386 , lerpResult985_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float3 staticSwitch415_g174386 = lerpResult989_g174386;
				#else
				float3 staticSwitch415_g174386 = Visual_Albedo527_g174386;
				#endif
				half3 Final_Albedo601_g174386 = staticSwitch415_g174386;
				float3 In_Albedo3_g174403 = Final_Albedo601_g174386;
				float3 In_AlbedoRaw3_g174403 = Final_Albedo601_g174386;
				half2 Visual_NormalTS529_g174386 = Out_NormalTS4_g174402;
				float2 lerpResult40_g174408 = lerp( float2( 0,0 ) , Visual_NormalTS529_g174386 , _ThirdBlendNormalValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174388) = _ThirdNormalTex;
				float localFilterTexture29_g174416 = ( 0.0 );
				SamplerState SamplerDefault29_g174416 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174416 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174416 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174416 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174416 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174416 = SamplerDefault29_g174416;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174416 = SamplerDefault29_g174416;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174416 = SamplerPoint29_g174416;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174416 = SamplerLow29_g174416;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174416 = SamplerMedium29_g174416;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174416 = SamplerHigh29_g174416;
				#endif
				SamplerState Sampler276_g174388 = SS29_g174416;
				float4 temp_output_37_0_g174388 = Local_LayerCoords790_g174386;
				half4 Coords276_g174388 = temp_output_37_0_g174388;
				half2 TexCoord276_g174388 = IN.ase_texcoord3.xy;
				half4 localSampleMain276_g174388 = SampleMain( Texture276_g174388 , Sampler276_g174388 , Coords276_g174388 , TexCoord276_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174388) = _ThirdNormalTex;
				SamplerState Sampler275_g174388 = SS29_g174416;
				half4 Coords275_g174388 = temp_output_37_0_g174388;
				half2 TexCoord275_g174388 = IN.ase_texcoord4.xy;
				half4 localSampleExtra275_g174388 = SampleExtra( Texture275_g174388 , Sampler275_g174388 , Coords275_g174388 , TexCoord275_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174388) = _ThirdNormalTex;
				SamplerState Sampler238_g174388 = SS29_g174416;
				half4 Coords238_g174388 = temp_output_37_0_g174388;
				float3 temp_output_279_0_g174388 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174388 = temp_output_279_0_g174388;
				half4 localSamplePlanar2D238_g174388 = SamplePlanar2D( Texture238_g174388 , Sampler238_g174388 , Coords238_g174388 , WorldPosition238_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174388) = _ThirdNormalTex;
				SamplerState Sampler246_g174388 = SS29_g174416;
				half4 Coords246_g174388 = temp_output_37_0_g174388;
				half3 WorldPosition246_g174388 = temp_output_279_0_g174388;
				float3 temp_output_280_0_g174388 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174388 = temp_output_280_0_g174388;
				half4 localSamplePlanar3D246_g174388 = SamplePlanar3D( Texture246_g174388 , Sampler246_g174388 , Coords246_g174388 , WorldPosition246_g174388 , WorldNormal246_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174388) = _ThirdNormalTex;
				SamplerState Sampler234_g174388 = SS29_g174416;
				float4 Coords234_g174388 = temp_output_37_0_g174388;
				float3 WorldPosition234_g174388 = temp_output_279_0_g174388;
				float4 localSampleStochastic2D234_g174388 = SampleStochastic2D( Texture234_g174388 , Sampler234_g174388 , Coords234_g174388 , WorldPosition234_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174388) = _ThirdNormalTex;
				SamplerState Sampler263_g174388 = SS29_g174416;
				half4 Coords263_g174388 = temp_output_37_0_g174388;
				half3 WorldPosition263_g174388 = temp_output_279_0_g174388;
				half3 WorldNormal263_g174388 = temp_output_280_0_g174388;
				half4 localSampleStochastic3D263_g174388 = SampleStochastic3D( Texture263_g174388 , Sampler263_g174388 , Coords263_g174388 , WorldPosition263_g174388 , WorldNormal263_g174388 );
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float4 staticSwitch698_g174386 = localSampleMain276_g174388;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float4 staticSwitch698_g174386 = localSampleExtra275_g174388;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float4 staticSwitch698_g174386 = localSamplePlanar2D238_g174388;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float4 staticSwitch698_g174386 = localSamplePlanar3D246_g174388;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch698_g174386 = localSampleStochastic2D234_g174388;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch698_g174386 = localSampleStochastic3D263_g174388;
				#else
				float4 staticSwitch698_g174386 = localSampleMain276_g174388;
				#endif
				half4 Local_NormalTex776_g174386 = staticSwitch698_g174386;
				half4 Normal_Packed45_g174390 = Local_NormalTex776_g174386;
				float2 appendResult58_g174390 = (float2(( (Normal_Packed45_g174390).x * (Normal_Packed45_g174390).w ) , (Normal_Packed45_g174390).y));
				half2 Normal_Default50_g174390 = appendResult58_g174390;
				half2 Normal_ASTC41_g174390 = (Normal_Packed45_g174390).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174390 = Normal_ASTC41_g174390;
				#else
				float2 staticSwitch38_g174390 = Normal_Default50_g174390;
				#endif
				half2 Normal_NO_DTX544_g174390 = (Normal_Packed45_g174390).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174390 = Normal_NO_DTX544_g174390;
				#else
				float2 staticSwitch37_g174390 = staticSwitch38_g174390;
				#endif
				float2 temp_output_724_0_g174386 = ( (staticSwitch37_g174390*2.0 + -1.0) * _ThirdNormalValue );
				half2 Normal_Planar45_g174391 = temp_output_724_0_g174386;
				float2 break71_g174391 = Normal_Planar45_g174391;
				float3 appendResult72_g174391 = (float3(break71_g174391.x , 0.0 , break71_g174391.y));
				float2 temp_output_858_0_g174386 = (mul( ase_worldToTangent, appendResult72_g174391 )).xy;
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float2 staticSwitch727_g174386 = temp_output_724_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float2 staticSwitch727_g174386 = temp_output_724_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#else
				float2 staticSwitch727_g174386 = temp_output_724_0_g174386;
				#endif
				half2 Local_NormalTS729_g174386 = staticSwitch727_g174386;
				float2 temp_output_36_0_g174408 = ( lerpResult40_g174408 + Local_NormalTS729_g174386 );
				float2 lerpResult405_g174386 = lerp( Visual_NormalTS529_g174386 , temp_output_36_0_g174408 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float2 staticSwitch418_g174386 = lerpResult405_g174386;
				#else
				float2 staticSwitch418_g174386 = Visual_NormalTS529_g174386;
				#endif
				half2 Final_NormalTS612_g174386 = staticSwitch418_g174386;
				float2 In_NormalTS3_g174403 = Final_NormalTS612_g174386;
				float3 appendResult68_g174409 = (float3(Final_NormalTS612_g174386 , 1.0));
				float3 tanNormal74_g174409 = appendResult68_g174409;
				float3 worldNormal74_g174409 = normalize( float3(dot(tanToWorld0,tanNormal74_g174409), dot(tanToWorld1,tanNormal74_g174409), dot(tanToWorld2,tanNormal74_g174409)) );
				half3 Final_NormalWS956_g174386 = worldNormal74_g174409;
				float3 In_NormalWS3_g174403 = Final_NormalWS956_g174386;
				half4 Visual_Shader531_g174386 = Out_Shader4_g174402;
				float4 lerpResult1000_g174386 = lerp( Local_Masks750_g174386 , ( Visual_Shader531_g174386 * Local_Masks750_g174386 ) , _ThirdBlendShaderValue);
				float4 lerpResult998_g174386 = lerp( Visual_Shader531_g174386 , lerpResult1000_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float4 staticSwitch451_g174386 = lerpResult998_g174386;
				#else
				float4 staticSwitch451_g174386 = Visual_Shader531_g174386;
				#endif
				half4 Final_Masks613_g174386 = staticSwitch451_g174386;
				float4 In_Shader3_g174403 = Final_Masks613_g174386;
				float4 In_Emissive3_g174403 = Out_Emissive4_g174402;
				float3 temp_output_3_0_g174411 = Final_Albedo601_g174386;
				float dotResult20_g174411 = dot( temp_output_3_0_g174411 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale615_g174386 = dotResult20_g174411;
				float In_Grayscale3_g174403 = Final_Grayscale615_g174386;
				float clampResult651_g174386 = clamp( saturate( ( Final_Grayscale615_g174386 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity652_g174386 = clampResult651_g174386;
				float In_Luminosity3_g174403 = Final_Luminosity652_g174386;
				half Visual_MultiMask547_g174386 = Out_MultiMask4_g174402;
				float lerpResult477_g174386 = lerp( Visual_MultiMask547_g174386 , Local_MultiMask767_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float staticSwitch482_g174386 = lerpResult477_g174386;
				#else
				float staticSwitch482_g174386 = Visual_MultiMask547_g174386;
				#endif
				half Final_MultiMask572_g174386 = staticSwitch482_g174386;
				float In_MultiMask3_g174403 = Final_MultiMask572_g174386;
				half Visual_AlphaClip559_g174386 = Out_AlphaClip4_g174402;
				float temp_output_718_0_g174386 = (Local_AlbedoTex777_g174386).w;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch924_g174386 = ( temp_output_718_0_g174386 - _ThirdAlphaClipValue );
				#else
				float staticSwitch924_g174386 = temp_output_718_0_g174386;
				#endif
				half Local_AlphaClip772_g174386 = staticSwitch924_g174386;
				float lerpResult448_g174386 = lerp( Visual_AlphaClip559_g174386 , Local_AlphaClip772_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float staticSwitch564_g174386 = lerpResult448_g174386;
				#else
				float staticSwitch564_g174386 = Visual_AlphaClip559_g174386;
				#endif
				half Final_AlphaClip602_g174386 = staticSwitch564_g174386;
				float In_AlphaClip3_g174403 = Final_AlphaClip602_g174386;
				half Visual_AlphaFade588_g174386 = Out_AlphaFade4_g174402;
				half Local_AlphaFade773_g174386 = (lerpResult706_g174386).a;
				float lerpResult604_g174386 = lerp( Visual_AlphaFade588_g174386 , Local_AlphaFade773_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float staticSwitch608_g174386 = lerpResult604_g174386;
				#else
				float staticSwitch608_g174386 = Visual_AlphaFade588_g174386;
				#endif
				half Final_AlphaFade611_g174386 = staticSwitch608_g174386;
				float In_AlphaFade3_g174403 = Final_AlphaFade611_g174386;
				float3 In_Translucency3_g174403 = Out_Translucency4_g174402;
				float In_Transmission3_g174403 = Out_Transmission4_g174402;
				float In_Thickness3_g174403 = Out_Thickness4_g174402;
				float In_Diffusion3_g174403 = Out_Diffusion4_g174402;
				Data3_g174403.Dummy = In_Dummy3_g174403;
				Data3_g174403.Albedo = In_Albedo3_g174403;
				Data3_g174403.AlbedoRaw = In_AlbedoRaw3_g174403;
				Data3_g174403.NormalTS = In_NormalTS3_g174403;
				Data3_g174403.NormalWS = In_NormalWS3_g174403;
				Data3_g174403.Shader = In_Shader3_g174403;
				Data3_g174403.Emissive= In_Emissive3_g174403;
				Data3_g174403.MultiMask = In_MultiMask3_g174403;
				Data3_g174403.Grayscale = In_Grayscale3_g174403;
				Data3_g174403.Luminosity = In_Luminosity3_g174403;
				Data3_g174403.AlphaClip = In_AlphaClip3_g174403;
				Data3_g174403.AlphaFade = In_AlphaFade3_g174403;
				Data3_g174403.Translucency = In_Translucency3_g174403;
				Data3_g174403.Transmission = In_Transmission3_g174403;
				Data3_g174403.Thickness = In_Thickness3_g174403;
				Data3_g174403.Diffusion = In_Diffusion3_g174403;
				TVEVisualData Data4_g174428 = Data3_g174403;
				float Out_Dummy4_g174428 = 0;
				float3 Out_Albedo4_g174428 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174428 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174428 = float2( 0,0 );
				float3 Out_NormalWS4_g174428 = float3( 0,0,0 );
				float4 Out_Shader4_g174428 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174428 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174428 = 0;
				float Out_Grayscale4_g174428 = 0;
				float Out_Luminosity4_g174428 = 0;
				float Out_AlphaClip4_g174428 = 0;
				float Out_AlphaFade4_g174428 = 0;
				float3 Out_Translucency4_g174428 = float3( 0,0,0 );
				float Out_Transmission4_g174428 = 0;
				float Out_Thickness4_g174428 = 0;
				float Out_Diffusion4_g174428 = 0;
				Out_Dummy4_g174428 = Data4_g174428.Dummy;
				Out_Albedo4_g174428 = Data4_g174428.Albedo;
				Out_AlbedoRaw4_g174428 = Data4_g174428.AlbedoRaw;
				Out_NormalTS4_g174428 = Data4_g174428.NormalTS;
				Out_NormalWS4_g174428 = Data4_g174428.NormalWS;
				Out_Shader4_g174428 = Data4_g174428.Shader;
				Out_Emissive4_g174428= Data4_g174428.Emissive;
				Out_MultiMask4_g174428 = Data4_g174428.MultiMask;
				Out_Grayscale4_g174428 = Data4_g174428.Grayscale;
				Out_Luminosity4_g174428= Data4_g174428.Luminosity;
				Out_AlphaClip4_g174428 = Data4_g174428.AlphaClip;
				Out_AlphaFade4_g174428 = Data4_g174428.AlphaFade;
				Out_Translucency4_g174428 = Data4_g174428.Translucency;
				Out_Transmission4_g174428 = Data4_g174428.Transmission;
				Out_Thickness4_g174428 = Data4_g174428.Thickness;
				Out_Diffusion4_g174428 = Data4_g174428.Diffusion;
				half3 Visual_Albedo527_g174425 = Out_Albedo4_g174428;
				float localHeightBasedBlending7362_g174452 = ( 0.0 );
				float3 ase_worldPos = IN.ase_texcoord10.xyz;
				float4 appendResult9125_g174452 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
				float4 temp_output_35_0_g174560 = appendResult9125_g174452;
				float2 InputScale48_g174560 = (temp_output_35_0_g174560).zw;
				half2 FinalScale53_g174560 = ( 1.0 / InputScale48_g174560 );
				float2 InputPosition52_g174560 = (temp_output_35_0_g174560).xy;
				half2 FinalPosition58_g174560 = -( FinalScale53_g174560 * InputPosition52_g174560 );
				float2 temp_output_65_0_g174560 = ( ( (ase_worldPos).xz * FinalScale53_g174560 ) + FinalPosition58_g174560 );
				float4 temp_output_70_0_g174560 = _TerrainControlTex1_TexelSize;
				float2 InputTexelSize68_g174560 = (temp_output_70_0_g174560).zw;
				float2 temp_cast_37 = (1.0).xx;
				float2 InputTexelRecip69_g174560 = (temp_output_70_0_g174560).xy;
				float2 Terrain_Control_UV7873_g174452 = ( ( ( temp_output_65_0_g174560 / ( 1.0 / ( InputTexelSize68_g174560 - temp_cast_37 ) ) ) + 0.5 ) * InputTexelRecip69_g174560 );
				half4 Terrain_Control_047365_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_047362_g174452 = Terrain_Control_047365_g174452;
				half4 Terrain_Control_087366_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_087362_g174452 = Terrain_Control_087366_g174452;
				half4 Terrain_Control_127712_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_127362_g174452 = Terrain_Control_127712_g174452;
				half4 Terrain_Control_167711_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_167362_g174452 = Terrain_Control_167711_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174497) = _TerrainShaderTex1;
				float localFilterTexture30_g174557 = ( 0.0 );
				SamplerState SamplerDefault30_g174557 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174557 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174557 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174557 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174557 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174557 = SamplerDefault30_g174557;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174557 = SamplerDefault30_g174557;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174557 = SamplerPoint30_g174557;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174557 = SamplerLow30_g174557;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174557 = SamplerMedium30_g174557;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174557 = SamplerHigh30_g174557;
				#endif
				SamplerState Sampler238_g174497 = SS30_g174557;
				half4 Input_Terrain_Coords_016785_g174452 = _TerrainCoord1;
				float4 temp_output_37_0_g174497 = Input_Terrain_Coords_016785_g174452;
				half4 Coords238_g174497 = temp_output_37_0_g174497;
				TVEModelData Data15_g174562 = Data16_g164566;
				float Out_Dummy15_g174562 = 0;
				float3 Out_PositionWS15_g174562 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174562 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174562 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174562 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174562 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174562 = float3( 0,0,0 );
				float4 Out_VertexData15_g174562 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174562 = float4( 0,0,0,0 );
				Out_Dummy15_g174562 = Data15_g174562.Dummy;
				Out_PositionWS15_g174562 = Data15_g174562.PositionWS;
				Out_PositionWO15_g174562 = Data15_g174562.PositionWO;
				Out_PivotWS15_g174562 = Data15_g174562.PivotWS;
				Out_PivotWO15_g174562 = Data15_g174562.PivotWO;
				Out_NormalWS15_g174562 = Data15_g174562.NormalWS;
				Out_ViewDirWS15_g174562 = Data15_g174562.ViewDirWS;
				Out_VertexData15_g174562 = Data15_g174562.VertexData;
				Out_BoundsData15_g174562 = Data15_g174562.BoundsData;
				half3 Model_PositionWO636_g174425 = Out_PositionWO15_g174562;
				half3 Input_Position9197_g174452 = Model_PositionWO636_g174425;
				float3 temp_output_279_0_g174497 = Input_Position9197_g174452;
				half3 WorldPosition238_g174497 = temp_output_279_0_g174497;
				half4 localSamplePlanar2D238_g174497 = SamplePlanar2D( Texture238_g174497 , Sampler238_g174497 , Coords238_g174497 , WorldPosition238_g174497 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174497) = _TerrainShaderTex1;
				SamplerState Sampler246_g174497 = SS30_g174557;
				half4 Coords246_g174497 = temp_output_37_0_g174497;
				half3 WorldPosition246_g174497 = temp_output_279_0_g174497;
				half3 Model_NormalRawWS869_g174425 = Out_NormalWS15_g174562;
				half3 Input_Normal9199_g174452 = Model_NormalRawWS869_g174425;
				float3 temp_output_280_0_g174497 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174497 = temp_output_280_0_g174497;
				half4 localSamplePlanar3D246_g174497 = SamplePlanar3D( Texture246_g174497 , Sampler246_g174497 , Coords246_g174497 , WorldPosition246_g174497 , WorldNormal246_g174497 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174497) = _TerrainShaderTex1;
				SamplerState Sampler234_g174497 = SS30_g174557;
				float4 Coords234_g174497 = temp_output_37_0_g174497;
				float3 WorldPosition234_g174497 = temp_output_279_0_g174497;
				float4 localSampleStochastic2D234_g174497 = SampleStochastic2D( Texture234_g174497 , Sampler234_g174497 , Coords234_g174497 , WorldPosition234_g174497 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174497) = _TerrainShaderTex1;
				SamplerState Sampler263_g174497 = SS30_g174557;
				half4 Coords263_g174497 = temp_output_37_0_g174497;
				half3 WorldPosition263_g174497 = temp_output_279_0_g174497;
				half3 WorldNormal263_g174497 = temp_output_280_0_g174497;
				half4 localSampleStochastic3D263_g174497 = SampleStochastic3D( Texture263_g174497 , Sampler263_g174497 , Coords263_g174497 , WorldPosition263_g174497 , WorldNormal263_g174497 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8639_g174452 = localSamplePlanar2D238_g174497;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8639_g174452 = localSamplePlanar3D246_g174497;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8639_g174452 = localSampleStochastic2D234_g174497;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8639_g174452 = localSampleStochastic3D263_g174497;
				#else
				float4 staticSwitch8639_g174452 = localSamplePlanar2D238_g174497;
				#endif
				float4 temp_output_7_0_g174454 = _TerrainShaderMin1;
				float4 temp_output_10_0_g174454 = ( _TerrainShaderMax1 - temp_output_7_0_g174454 );
				float4 temp_output_6970_0_g174452 = saturate( ( ( staticSwitch8639_g174452 - temp_output_7_0_g174454 ) / ( temp_output_10_0_g174454 + 0.0001 ) ) );
				half4 Masks_015_g174458 = temp_output_6970_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174501) = _TerrainShaderTex2;
				SamplerState Sampler238_g174501 = SS30_g174557;
				half4 Input_Terrain_Coords_026787_g174452 = _TerrainCoord2;
				float4 temp_output_37_0_g174501 = Input_Terrain_Coords_026787_g174452;
				half4 Coords238_g174501 = temp_output_37_0_g174501;
				float3 temp_output_279_0_g174501 = Input_Position9197_g174452;
				half3 WorldPosition238_g174501 = temp_output_279_0_g174501;
				half4 localSamplePlanar2D238_g174501 = SamplePlanar2D( Texture238_g174501 , Sampler238_g174501 , Coords238_g174501 , WorldPosition238_g174501 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174501) = _TerrainShaderTex2;
				SamplerState Sampler246_g174501 = SS30_g174557;
				half4 Coords246_g174501 = temp_output_37_0_g174501;
				half3 WorldPosition246_g174501 = temp_output_279_0_g174501;
				float3 temp_output_280_0_g174501 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174501 = temp_output_280_0_g174501;
				half4 localSamplePlanar3D246_g174501 = SamplePlanar3D( Texture246_g174501 , Sampler246_g174501 , Coords246_g174501 , WorldPosition246_g174501 , WorldNormal246_g174501 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174501) = _TerrainShaderTex2;
				SamplerState Sampler234_g174501 = SS30_g174557;
				float4 Coords234_g174501 = temp_output_37_0_g174501;
				float3 WorldPosition234_g174501 = temp_output_279_0_g174501;
				float4 localSampleStochastic2D234_g174501 = SampleStochastic2D( Texture234_g174501 , Sampler234_g174501 , Coords234_g174501 , WorldPosition234_g174501 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174501) = _TerrainShaderTex2;
				SamplerState Sampler263_g174501 = SS30_g174557;
				half4 Coords263_g174501 = temp_output_37_0_g174501;
				half3 WorldPosition263_g174501 = temp_output_279_0_g174501;
				half3 WorldNormal263_g174501 = temp_output_280_0_g174501;
				half4 localSampleStochastic3D263_g174501 = SampleStochastic3D( Texture263_g174501 , Sampler263_g174501 , Coords263_g174501 , WorldPosition263_g174501 , WorldNormal263_g174501 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8640_g174452 = localSamplePlanar2D238_g174501;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8640_g174452 = localSamplePlanar3D246_g174501;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8640_g174452 = localSampleStochastic2D234_g174501;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8640_g174452 = localSampleStochastic3D263_g174501;
				#else
				float4 staticSwitch8640_g174452 = localSamplePlanar2D238_g174501;
				#endif
				float4 temp_output_7_0_g174464 = _TerrainShaderMin2;
				float4 temp_output_10_0_g174464 = ( _TerrainShaderMax2 - temp_output_7_0_g174464 );
				float4 temp_output_6977_0_g174452 = saturate( ( ( staticSwitch8640_g174452 - temp_output_7_0_g174464 ) / ( temp_output_10_0_g174464 + 0.0001 ) ) );
				half4 Masks_0210_g174458 = temp_output_6977_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174506) = _TerrainShaderTex3;
				SamplerState Sampler238_g174506 = SS30_g174557;
				half4 Input_Terrain_Coords_036789_g174452 = _TerrainCoord3;
				float4 temp_output_37_0_g174506 = Input_Terrain_Coords_036789_g174452;
				half4 Coords238_g174506 = temp_output_37_0_g174506;
				float3 temp_output_279_0_g174506 = Input_Position9197_g174452;
				half3 WorldPosition238_g174506 = temp_output_279_0_g174506;
				half4 localSamplePlanar2D238_g174506 = SamplePlanar2D( Texture238_g174506 , Sampler238_g174506 , Coords238_g174506 , WorldPosition238_g174506 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174506) = _TerrainShaderTex3;
				SamplerState Sampler246_g174506 = SS30_g174557;
				half4 Coords246_g174506 = temp_output_37_0_g174506;
				half3 WorldPosition246_g174506 = temp_output_279_0_g174506;
				float3 temp_output_280_0_g174506 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174506 = temp_output_280_0_g174506;
				half4 localSamplePlanar3D246_g174506 = SamplePlanar3D( Texture246_g174506 , Sampler246_g174506 , Coords246_g174506 , WorldPosition246_g174506 , WorldNormal246_g174506 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174506) = _TerrainShaderTex3;
				SamplerState Sampler234_g174506 = SS30_g174557;
				float4 Coords234_g174506 = temp_output_37_0_g174506;
				float3 WorldPosition234_g174506 = temp_output_279_0_g174506;
				float4 localSampleStochastic2D234_g174506 = SampleStochastic2D( Texture234_g174506 , Sampler234_g174506 , Coords234_g174506 , WorldPosition234_g174506 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174506) = _TerrainShaderTex3;
				SamplerState Sampler263_g174506 = SS30_g174557;
				half4 Coords263_g174506 = temp_output_37_0_g174506;
				half3 WorldPosition263_g174506 = temp_output_279_0_g174506;
				half3 WorldNormal263_g174506 = temp_output_280_0_g174506;
				half4 localSampleStochastic3D263_g174506 = SampleStochastic3D( Texture263_g174506 , Sampler263_g174506 , Coords263_g174506 , WorldPosition263_g174506 , WorldNormal263_g174506 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8641_g174452 = localSamplePlanar2D238_g174506;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8641_g174452 = localSamplePlanar3D246_g174506;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8641_g174452 = localSampleStochastic2D234_g174506;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8641_g174452 = localSampleStochastic3D263_g174506;
				#else
				float4 staticSwitch8641_g174452 = localSamplePlanar2D238_g174506;
				#endif
				float4 temp_output_7_0_g174465 = _TerrainShaderMin3;
				float4 temp_output_10_0_g174465 = ( _TerrainShaderMax3 - temp_output_7_0_g174465 );
				float4 temp_output_6978_0_g174452 = saturate( ( ( staticSwitch8641_g174452 - temp_output_7_0_g174465 ) / ( temp_output_10_0_g174465 + 0.0001 ) ) );
				half4 Masks_0312_g174458 = temp_output_6978_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174507) = _TerrainShaderTex4;
				SamplerState Sampler238_g174507 = SS30_g174557;
				half4 Input_Terrain_Coords_046791_g174452 = _TerrainCoord4;
				float4 temp_output_37_0_g174507 = Input_Terrain_Coords_046791_g174452;
				half4 Coords238_g174507 = temp_output_37_0_g174507;
				float3 temp_output_279_0_g174507 = Input_Position9197_g174452;
				half3 WorldPosition238_g174507 = temp_output_279_0_g174507;
				half4 localSamplePlanar2D238_g174507 = SamplePlanar2D( Texture238_g174507 , Sampler238_g174507 , Coords238_g174507 , WorldPosition238_g174507 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174507) = _TerrainShaderTex4;
				SamplerState Sampler246_g174507 = SS30_g174557;
				half4 Coords246_g174507 = temp_output_37_0_g174507;
				half3 WorldPosition246_g174507 = temp_output_279_0_g174507;
				float3 temp_output_280_0_g174507 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174507 = temp_output_280_0_g174507;
				half4 localSamplePlanar3D246_g174507 = SamplePlanar3D( Texture246_g174507 , Sampler246_g174507 , Coords246_g174507 , WorldPosition246_g174507 , WorldNormal246_g174507 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174507) = _TerrainShaderTex4;
				SamplerState Sampler234_g174507 = SS30_g174557;
				float4 Coords234_g174507 = temp_output_37_0_g174507;
				float3 WorldPosition234_g174507 = temp_output_279_0_g174507;
				float4 localSampleStochastic2D234_g174507 = SampleStochastic2D( Texture234_g174507 , Sampler234_g174507 , Coords234_g174507 , WorldPosition234_g174507 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174507) = _TerrainShaderTex4;
				SamplerState Sampler263_g174507 = SS30_g174557;
				half4 Coords263_g174507 = temp_output_37_0_g174507;
				half3 WorldPosition263_g174507 = temp_output_279_0_g174507;
				half3 WorldNormal263_g174507 = temp_output_280_0_g174507;
				half4 localSampleStochastic3D263_g174507 = SampleStochastic3D( Texture263_g174507 , Sampler263_g174507 , Coords263_g174507 , WorldPosition263_g174507 , WorldNormal263_g174507 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8642_g174452 = localSamplePlanar2D238_g174507;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8642_g174452 = localSamplePlanar3D246_g174507;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8642_g174452 = localSampleStochastic2D234_g174507;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8642_g174452 = localSampleStochastic3D263_g174507;
				#else
				float4 staticSwitch8642_g174452 = localSamplePlanar2D238_g174507;
				#endif
				float4 temp_output_7_0_g174466 = _TerrainShaderMin4;
				float4 temp_output_10_0_g174466 = ( _TerrainShaderMax4 - temp_output_7_0_g174466 );
				float4 temp_output_6983_0_g174452 = saturate( ( ( staticSwitch8642_g174452 - temp_output_7_0_g174466 ) / ( temp_output_10_0_g174466 + 0.0001 ) ) );
				half4 Masks_0414_g174458 = temp_output_6983_0_g174452;
				float4 appendResult29_g174458 = (float4((Masks_015_g174458).z , (Masks_0210_g174458).z , (Masks_0312_g174458).z , (Masks_0414_g174458).z));
				half4 Control31_g174458 = Terrain_Control_047365_g174452;
				half4 Terrain_Height_047210_g174452 = ( appendResult29_g174458 * Control31_g174458 );
				float4 heights_047362_g174452 = Terrain_Height_047210_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174510) = _TerrainShaderTex5;
				SamplerState Sampler238_g174510 = SS30_g174557;
				half4 Input_Terrain_Coords_058750_g174452 = _TerrainCoord5;
				float4 temp_output_37_0_g174510 = Input_Terrain_Coords_058750_g174452;
				half4 Coords238_g174510 = temp_output_37_0_g174510;
				float3 temp_output_279_0_g174510 = Input_Position9197_g174452;
				half3 WorldPosition238_g174510 = temp_output_279_0_g174510;
				half4 localSamplePlanar2D238_g174510 = SamplePlanar2D( Texture238_g174510 , Sampler238_g174510 , Coords238_g174510 , WorldPosition238_g174510 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174510) = _TerrainShaderTex5;
				SamplerState Sampler246_g174510 = SS30_g174557;
				half4 Coords246_g174510 = temp_output_37_0_g174510;
				half3 WorldPosition246_g174510 = temp_output_279_0_g174510;
				float3 temp_output_280_0_g174510 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174510 = temp_output_280_0_g174510;
				half4 localSamplePlanar3D246_g174510 = SamplePlanar3D( Texture246_g174510 , Sampler246_g174510 , Coords246_g174510 , WorldPosition246_g174510 , WorldNormal246_g174510 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174510) = _TerrainShaderTex5;
				SamplerState Sampler234_g174510 = SS30_g174557;
				float4 Coords234_g174510 = temp_output_37_0_g174510;
				float3 WorldPosition234_g174510 = temp_output_279_0_g174510;
				float4 localSampleStochastic2D234_g174510 = SampleStochastic2D( Texture234_g174510 , Sampler234_g174510 , Coords234_g174510 , WorldPosition234_g174510 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174510) = _TerrainShaderTex5;
				SamplerState Sampler263_g174510 = SS30_g174557;
				half4 Coords263_g174510 = temp_output_37_0_g174510;
				half3 WorldPosition263_g174510 = temp_output_279_0_g174510;
				half3 WorldNormal263_g174510 = temp_output_280_0_g174510;
				half4 localSampleStochastic3D263_g174510 = SampleStochastic3D( Texture263_g174510 , Sampler263_g174510 , Coords263_g174510 , WorldPosition263_g174510 , WorldNormal263_g174510 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8710_g174452 = localSamplePlanar2D238_g174510;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8710_g174452 = localSamplePlanar3D246_g174510;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8710_g174452 = localSampleStochastic2D234_g174510;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8710_g174452 = localSampleStochastic3D263_g174510;
				#else
				float4 staticSwitch8710_g174452 = localSamplePlanar2D238_g174510;
				#endif
				float4 temp_output_7_0_g174469 = _TerrainShaderMin5;
				float4 temp_output_10_0_g174469 = ( _TerrainShaderMax5 - temp_output_7_0_g174469 );
				float4 temp_output_8714_0_g174452 = saturate( ( ( staticSwitch8710_g174452 - temp_output_7_0_g174469 ) / ( temp_output_10_0_g174469 + 0.0001 ) ) );
				half4 Masks_015_g174470 = temp_output_8714_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174541) = _TerrainShaderTex6;
				SamplerState Sampler238_g174541 = SS30_g174557;
				half4 Input_Terrain_Coords_068751_g174452 = _TerrainCoord6;
				float4 temp_output_37_0_g174541 = Input_Terrain_Coords_068751_g174452;
				half4 Coords238_g174541 = temp_output_37_0_g174541;
				float3 temp_output_279_0_g174541 = Input_Position9197_g174452;
				half3 WorldPosition238_g174541 = temp_output_279_0_g174541;
				half4 localSamplePlanar2D238_g174541 = SamplePlanar2D( Texture238_g174541 , Sampler238_g174541 , Coords238_g174541 , WorldPosition238_g174541 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174541) = _TerrainShaderTex6;
				SamplerState Sampler246_g174541 = SS30_g174557;
				half4 Coords246_g174541 = temp_output_37_0_g174541;
				half3 WorldPosition246_g174541 = temp_output_279_0_g174541;
				float3 temp_output_280_0_g174541 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174541 = temp_output_280_0_g174541;
				half4 localSamplePlanar3D246_g174541 = SamplePlanar3D( Texture246_g174541 , Sampler246_g174541 , Coords246_g174541 , WorldPosition246_g174541 , WorldNormal246_g174541 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174541) = _TerrainShaderTex6;
				SamplerState Sampler234_g174541 = SS30_g174557;
				float4 Coords234_g174541 = temp_output_37_0_g174541;
				float3 WorldPosition234_g174541 = temp_output_279_0_g174541;
				float4 localSampleStochastic2D234_g174541 = SampleStochastic2D( Texture234_g174541 , Sampler234_g174541 , Coords234_g174541 , WorldPosition234_g174541 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174541) = _TerrainShaderTex6;
				SamplerState Sampler263_g174541 = SS30_g174557;
				half4 Coords263_g174541 = temp_output_37_0_g174541;
				half3 WorldPosition263_g174541 = temp_output_279_0_g174541;
				half3 WorldNormal263_g174541 = temp_output_280_0_g174541;
				half4 localSampleStochastic3D263_g174541 = SampleStochastic3D( Texture263_g174541 , Sampler263_g174541 , Coords263_g174541 , WorldPosition263_g174541 , WorldNormal263_g174541 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8711_g174452 = localSamplePlanar2D238_g174541;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8711_g174452 = localSamplePlanar3D246_g174541;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8711_g174452 = localSampleStochastic2D234_g174541;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8711_g174452 = localSampleStochastic3D263_g174541;
				#else
				float4 staticSwitch8711_g174452 = localSamplePlanar2D238_g174541;
				#endif
				float4 temp_output_7_0_g174494 = _TerrainShaderMin6;
				float4 temp_output_10_0_g174494 = ( _TerrainShaderMax6 - temp_output_7_0_g174494 );
				float4 temp_output_8721_0_g174452 = saturate( ( ( staticSwitch8711_g174452 - temp_output_7_0_g174494 ) / ( temp_output_10_0_g174494 + 0.0001 ) ) );
				half4 Masks_0210_g174470 = temp_output_8721_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174542) = _TerrainShaderTex7;
				SamplerState Sampler238_g174542 = SS30_g174557;
				half4 Input_Terrain_Coords_078752_g174452 = _TerrainCoord7;
				float4 temp_output_37_0_g174542 = Input_Terrain_Coords_078752_g174452;
				half4 Coords238_g174542 = temp_output_37_0_g174542;
				float3 temp_output_279_0_g174542 = Input_Position9197_g174452;
				half3 WorldPosition238_g174542 = temp_output_279_0_g174542;
				half4 localSamplePlanar2D238_g174542 = SamplePlanar2D( Texture238_g174542 , Sampler238_g174542 , Coords238_g174542 , WorldPosition238_g174542 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174542) = _TerrainShaderTex7;
				SamplerState Sampler246_g174542 = SS30_g174557;
				half4 Coords246_g174542 = temp_output_37_0_g174542;
				half3 WorldPosition246_g174542 = temp_output_279_0_g174542;
				float3 temp_output_280_0_g174542 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174542 = temp_output_280_0_g174542;
				half4 localSamplePlanar3D246_g174542 = SamplePlanar3D( Texture246_g174542 , Sampler246_g174542 , Coords246_g174542 , WorldPosition246_g174542 , WorldNormal246_g174542 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174542) = _TerrainShaderTex7;
				SamplerState Sampler234_g174542 = SS30_g174557;
				float4 Coords234_g174542 = temp_output_37_0_g174542;
				float3 WorldPosition234_g174542 = temp_output_279_0_g174542;
				float4 localSampleStochastic2D234_g174542 = SampleStochastic2D( Texture234_g174542 , Sampler234_g174542 , Coords234_g174542 , WorldPosition234_g174542 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174542) = _TerrainShaderTex7;
				SamplerState Sampler263_g174542 = SS30_g174557;
				half4 Coords263_g174542 = temp_output_37_0_g174542;
				half3 WorldPosition263_g174542 = temp_output_279_0_g174542;
				half3 WorldNormal263_g174542 = temp_output_280_0_g174542;
				half4 localSampleStochastic3D263_g174542 = SampleStochastic3D( Texture263_g174542 , Sampler263_g174542 , Coords263_g174542 , WorldPosition263_g174542 , WorldNormal263_g174542 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8712_g174452 = localSamplePlanar2D238_g174542;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8712_g174452 = localSamplePlanar3D246_g174542;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8712_g174452 = localSampleStochastic2D234_g174542;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8712_g174452 = localSampleStochastic3D263_g174542;
				#else
				float4 staticSwitch8712_g174452 = localSamplePlanar2D238_g174542;
				#endif
				float4 temp_output_7_0_g174495 = _TerrainShaderMin7;
				float4 temp_output_10_0_g174495 = ( _TerrainShaderMax7 - temp_output_7_0_g174495 );
				float4 temp_output_8724_0_g174452 = saturate( ( ( staticSwitch8712_g174452 - temp_output_7_0_g174495 ) / ( temp_output_10_0_g174495 + 0.0001 ) ) );
				half4 Masks_0312_g174470 = temp_output_8724_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174543) = _TerrainShaderTex8;
				SamplerState Sampler238_g174543 = SS30_g174557;
				half4 Input_Terrain_Coords_088749_g174452 = _TerrainCoord8;
				float4 temp_output_37_0_g174543 = Input_Terrain_Coords_088749_g174452;
				half4 Coords238_g174543 = temp_output_37_0_g174543;
				float3 temp_output_279_0_g174543 = Input_Position9197_g174452;
				half3 WorldPosition238_g174543 = temp_output_279_0_g174543;
				half4 localSamplePlanar2D238_g174543 = SamplePlanar2D( Texture238_g174543 , Sampler238_g174543 , Coords238_g174543 , WorldPosition238_g174543 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174543) = _TerrainShaderTex8;
				SamplerState Sampler246_g174543 = SS30_g174557;
				half4 Coords246_g174543 = temp_output_37_0_g174543;
				half3 WorldPosition246_g174543 = temp_output_279_0_g174543;
				float3 temp_output_280_0_g174543 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174543 = temp_output_280_0_g174543;
				half4 localSamplePlanar3D246_g174543 = SamplePlanar3D( Texture246_g174543 , Sampler246_g174543 , Coords246_g174543 , WorldPosition246_g174543 , WorldNormal246_g174543 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174543) = _TerrainShaderTex8;
				SamplerState Sampler234_g174543 = SS30_g174557;
				float4 Coords234_g174543 = temp_output_37_0_g174543;
				float3 WorldPosition234_g174543 = temp_output_279_0_g174543;
				float4 localSampleStochastic2D234_g174543 = SampleStochastic2D( Texture234_g174543 , Sampler234_g174543 , Coords234_g174543 , WorldPosition234_g174543 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174543) = _TerrainShaderTex8;
				SamplerState Sampler263_g174543 = SS30_g174557;
				half4 Coords263_g174543 = temp_output_37_0_g174543;
				half3 WorldPosition263_g174543 = temp_output_279_0_g174543;
				half3 WorldNormal263_g174543 = temp_output_280_0_g174543;
				half4 localSampleStochastic3D263_g174543 = SampleStochastic3D( Texture263_g174543 , Sampler263_g174543 , Coords263_g174543 , WorldPosition263_g174543 , WorldNormal263_g174543 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8713_g174452 = localSamplePlanar2D238_g174543;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8713_g174452 = localSamplePlanar3D246_g174543;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8713_g174452 = localSampleStochastic2D234_g174543;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8713_g174452 = localSampleStochastic3D263_g174543;
				#else
				float4 staticSwitch8713_g174452 = localSamplePlanar2D238_g174543;
				#endif
				float4 temp_output_7_0_g174496 = _TerrainShaderMin8;
				float4 temp_output_10_0_g174496 = ( _TerrainShaderMax8 - temp_output_7_0_g174496 );
				float4 temp_output_8727_0_g174452 = saturate( ( ( staticSwitch8713_g174452 - temp_output_7_0_g174496 ) / ( temp_output_10_0_g174496 + 0.0001 ) ) );
				half4 Masks_0414_g174470 = temp_output_8727_0_g174452;
				float4 appendResult29_g174470 = (float4((Masks_015_g174470).z , (Masks_0210_g174470).z , (Masks_0312_g174470).z , (Masks_0414_g174470).z));
				half4 Control31_g174470 = Terrain_Control_087366_g174452;
				half4 Terrain_Height_088731_g174452 = ( appendResult29_g174470 * Control31_g174470 );
				float4 heights_087362_g174452 = Terrain_Height_088731_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174513) = _TerrainShaderTex9;
				SamplerState Sampler238_g174513 = SS30_g174557;
				half4 Input_Terrain_Coords_098833_g174452 = _TerrainCoord9;
				float4 temp_output_37_0_g174513 = Input_Terrain_Coords_098833_g174452;
				half4 Coords238_g174513 = temp_output_37_0_g174513;
				float3 temp_output_279_0_g174513 = Input_Position9197_g174452;
				half3 WorldPosition238_g174513 = temp_output_279_0_g174513;
				half4 localSamplePlanar2D238_g174513 = SamplePlanar2D( Texture238_g174513 , Sampler238_g174513 , Coords238_g174513 , WorldPosition238_g174513 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174513) = _TerrainShaderTex9;
				SamplerState Sampler246_g174513 = SS30_g174557;
				half4 Coords246_g174513 = temp_output_37_0_g174513;
				half3 WorldPosition246_g174513 = temp_output_279_0_g174513;
				float3 temp_output_280_0_g174513 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174513 = temp_output_280_0_g174513;
				half4 localSamplePlanar3D246_g174513 = SamplePlanar3D( Texture246_g174513 , Sampler246_g174513 , Coords246_g174513 , WorldPosition246_g174513 , WorldNormal246_g174513 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174513) = _TerrainShaderTex9;
				SamplerState Sampler234_g174513 = SS30_g174557;
				float4 Coords234_g174513 = temp_output_37_0_g174513;
				float3 WorldPosition234_g174513 = temp_output_279_0_g174513;
				float4 localSampleStochastic2D234_g174513 = SampleStochastic2D( Texture234_g174513 , Sampler234_g174513 , Coords234_g174513 , WorldPosition234_g174513 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174513) = _TerrainShaderTex9;
				SamplerState Sampler263_g174513 = SS30_g174557;
				half4 Coords263_g174513 = temp_output_37_0_g174513;
				half3 WorldPosition263_g174513 = temp_output_279_0_g174513;
				half3 WorldNormal263_g174513 = temp_output_280_0_g174513;
				half4 localSampleStochastic3D263_g174513 = SampleStochastic3D( Texture263_g174513 , Sampler263_g174513 , Coords263_g174513 , WorldPosition263_g174513 , WorldNormal263_g174513 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8878_g174452 = localSamplePlanar2D238_g174513;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8878_g174452 = localSamplePlanar3D246_g174513;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8878_g174452 = localSampleStochastic2D234_g174513;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8878_g174452 = localSampleStochastic3D263_g174513;
				#else
				float4 staticSwitch8878_g174452 = localSamplePlanar2D238_g174513;
				#endif
				float4 temp_output_7_0_g174476 = _TerrainShaderMin9;
				float4 temp_output_10_0_g174476 = ( _TerrainShaderMax9 - temp_output_7_0_g174476 );
				float4 temp_output_8815_0_g174452 = saturate( ( ( staticSwitch8878_g174452 - temp_output_7_0_g174476 ) / ( temp_output_10_0_g174476 + 0.0001 ) ) );
				half4 Masks_015_g174477 = temp_output_8815_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174523) = _TerrainShaderTex10;
				SamplerState Sampler238_g174523 = SS30_g174557;
				half4 Input_Terrain_Coords_108834_g174452 = _TerrainCoord10;
				float4 temp_output_37_0_g174523 = Input_Terrain_Coords_108834_g174452;
				half4 Coords238_g174523 = temp_output_37_0_g174523;
				float3 temp_output_279_0_g174523 = Input_Position9197_g174452;
				half3 WorldPosition238_g174523 = temp_output_279_0_g174523;
				half4 localSamplePlanar2D238_g174523 = SamplePlanar2D( Texture238_g174523 , Sampler238_g174523 , Coords238_g174523 , WorldPosition238_g174523 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174523) = _TerrainShaderTex10;
				SamplerState Sampler246_g174523 = SS30_g174557;
				half4 Coords246_g174523 = temp_output_37_0_g174523;
				half3 WorldPosition246_g174523 = temp_output_279_0_g174523;
				float3 temp_output_280_0_g174523 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174523 = temp_output_280_0_g174523;
				half4 localSamplePlanar3D246_g174523 = SamplePlanar3D( Texture246_g174523 , Sampler246_g174523 , Coords246_g174523 , WorldPosition246_g174523 , WorldNormal246_g174523 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174523) = _TerrainShaderTex10;
				SamplerState Sampler234_g174523 = SS30_g174557;
				float4 Coords234_g174523 = temp_output_37_0_g174523;
				float3 WorldPosition234_g174523 = temp_output_279_0_g174523;
				float4 localSampleStochastic2D234_g174523 = SampleStochastic2D( Texture234_g174523 , Sampler234_g174523 , Coords234_g174523 , WorldPosition234_g174523 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174523) = _TerrainShaderTex10;
				SamplerState Sampler263_g174523 = SS30_g174557;
				half4 Coords263_g174523 = temp_output_37_0_g174523;
				half3 WorldPosition263_g174523 = temp_output_279_0_g174523;
				half3 WorldNormal263_g174523 = temp_output_280_0_g174523;
				half4 localSampleStochastic3D263_g174523 = SampleStochastic3D( Texture263_g174523 , Sampler263_g174523 , Coords263_g174523 , WorldPosition263_g174523 , WorldNormal263_g174523 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8860_g174452 = localSamplePlanar2D238_g174523;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8860_g174452 = localSamplePlanar3D246_g174523;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8860_g174452 = localSampleStochastic2D234_g174523;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8860_g174452 = localSampleStochastic3D263_g174523;
				#else
				float4 staticSwitch8860_g174452 = localSamplePlanar2D238_g174523;
				#endif
				float4 temp_output_7_0_g174488 = _TerrainShaderMin10;
				float4 temp_output_10_0_g174488 = ( _TerrainShaderMax10 - temp_output_7_0_g174488 );
				float4 temp_output_8818_0_g174452 = saturate( ( ( staticSwitch8860_g174452 - temp_output_7_0_g174488 ) / ( temp_output_10_0_g174488 + 0.0001 ) ) );
				half4 Masks_0210_g174477 = temp_output_8818_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174524) = _TerrainShaderTex11;
				SamplerState Sampler238_g174524 = SS30_g174557;
				half4 Input_Terrain_Coords_118835_g174452 = _TerrainCoord11;
				float4 temp_output_37_0_g174524 = Input_Terrain_Coords_118835_g174452;
				half4 Coords238_g174524 = temp_output_37_0_g174524;
				float3 temp_output_279_0_g174524 = Input_Position9197_g174452;
				half3 WorldPosition238_g174524 = temp_output_279_0_g174524;
				half4 localSamplePlanar2D238_g174524 = SamplePlanar2D( Texture238_g174524 , Sampler238_g174524 , Coords238_g174524 , WorldPosition238_g174524 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174524) = _TerrainShaderTex11;
				SamplerState Sampler246_g174524 = SS30_g174557;
				half4 Coords246_g174524 = temp_output_37_0_g174524;
				half3 WorldPosition246_g174524 = temp_output_279_0_g174524;
				float3 temp_output_280_0_g174524 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174524 = temp_output_280_0_g174524;
				half4 localSamplePlanar3D246_g174524 = SamplePlanar3D( Texture246_g174524 , Sampler246_g174524 , Coords246_g174524 , WorldPosition246_g174524 , WorldNormal246_g174524 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174524) = _TerrainShaderTex11;
				SamplerState Sampler234_g174524 = SS30_g174557;
				float4 Coords234_g174524 = temp_output_37_0_g174524;
				float3 WorldPosition234_g174524 = temp_output_279_0_g174524;
				float4 localSampleStochastic2D234_g174524 = SampleStochastic2D( Texture234_g174524 , Sampler234_g174524 , Coords234_g174524 , WorldPosition234_g174524 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174524) = _TerrainShaderTex11;
				SamplerState Sampler263_g174524 = SS30_g174557;
				half4 Coords263_g174524 = temp_output_37_0_g174524;
				half3 WorldPosition263_g174524 = temp_output_279_0_g174524;
				half3 WorldNormal263_g174524 = temp_output_280_0_g174524;
				half4 localSampleStochastic3D263_g174524 = SampleStochastic3D( Texture263_g174524 , Sampler263_g174524 , Coords263_g174524 , WorldPosition263_g174524 , WorldNormal263_g174524 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8861_g174452 = localSamplePlanar2D238_g174524;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8861_g174452 = localSamplePlanar3D246_g174524;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8861_g174452 = localSampleStochastic2D234_g174524;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8861_g174452 = localSampleStochastic3D263_g174524;
				#else
				float4 staticSwitch8861_g174452 = localSamplePlanar2D238_g174524;
				#endif
				float4 temp_output_7_0_g174489 = _TerrainShaderMin11;
				float4 temp_output_10_0_g174489 = ( _TerrainShaderMax11 - temp_output_7_0_g174489 );
				float4 temp_output_8819_0_g174452 = saturate( ( ( staticSwitch8861_g174452 - temp_output_7_0_g174489 ) / ( temp_output_10_0_g174489 + 0.0001 ) ) );
				half4 Masks_0312_g174477 = temp_output_8819_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174525) = _TerrainShaderTex12;
				SamplerState Sampler238_g174525 = SS30_g174557;
				half4 Input_Terrain_Coords_128836_g174452 = _TerrainCoord12;
				float4 temp_output_37_0_g174525 = Input_Terrain_Coords_128836_g174452;
				half4 Coords238_g174525 = temp_output_37_0_g174525;
				float3 temp_output_279_0_g174525 = Input_Position9197_g174452;
				half3 WorldPosition238_g174525 = temp_output_279_0_g174525;
				half4 localSamplePlanar2D238_g174525 = SamplePlanar2D( Texture238_g174525 , Sampler238_g174525 , Coords238_g174525 , WorldPosition238_g174525 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174525) = _TerrainShaderTex12;
				SamplerState Sampler246_g174525 = SS30_g174557;
				half4 Coords246_g174525 = temp_output_37_0_g174525;
				half3 WorldPosition246_g174525 = temp_output_279_0_g174525;
				float3 temp_output_280_0_g174525 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174525 = temp_output_280_0_g174525;
				half4 localSamplePlanar3D246_g174525 = SamplePlanar3D( Texture246_g174525 , Sampler246_g174525 , Coords246_g174525 , WorldPosition246_g174525 , WorldNormal246_g174525 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174525) = _TerrainShaderTex12;
				SamplerState Sampler234_g174525 = SS30_g174557;
				float4 Coords234_g174525 = temp_output_37_0_g174525;
				float3 WorldPosition234_g174525 = temp_output_279_0_g174525;
				float4 localSampleStochastic2D234_g174525 = SampleStochastic2D( Texture234_g174525 , Sampler234_g174525 , Coords234_g174525 , WorldPosition234_g174525 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174525) = _TerrainShaderTex12;
				SamplerState Sampler263_g174525 = SS30_g174557;
				half4 Coords263_g174525 = temp_output_37_0_g174525;
				half3 WorldPosition263_g174525 = temp_output_279_0_g174525;
				half3 WorldNormal263_g174525 = temp_output_280_0_g174525;
				half4 localSampleStochastic3D263_g174525 = SampleStochastic3D( Texture263_g174525 , Sampler263_g174525 , Coords263_g174525 , WorldPosition263_g174525 , WorldNormal263_g174525 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8879_g174452 = localSamplePlanar2D238_g174525;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8879_g174452 = localSamplePlanar3D246_g174525;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8879_g174452 = localSampleStochastic2D234_g174525;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8879_g174452 = localSampleStochastic3D263_g174525;
				#else
				float4 staticSwitch8879_g174452 = localSamplePlanar2D238_g174525;
				#endif
				float4 temp_output_7_0_g174490 = _TerrainShaderMin12;
				float4 temp_output_10_0_g174490 = ( _TerrainShaderMax12 - temp_output_7_0_g174490 );
				float4 temp_output_8820_0_g174452 = saturate( ( ( staticSwitch8879_g174452 - temp_output_7_0_g174490 ) / ( temp_output_10_0_g174490 + 0.0001 ) ) );
				half4 Masks_0414_g174477 = temp_output_8820_0_g174452;
				float4 appendResult29_g174477 = (float4((Masks_015_g174477).z , (Masks_0210_g174477).z , (Masks_0312_g174477).z , (Masks_0414_g174477).z));
				half4 Control31_g174477 = Terrain_Control_127712_g174452;
				half4 Terrain_Height_128870_g174452 = ( appendResult29_g174477 * Control31_g174477 );
				float4 heights_127362_g174452 = Terrain_Height_128870_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174521) = _TerrainShaderTex13;
				SamplerState Sampler238_g174521 = SS30_g174557;
				half4 Input_Terrain_Coords_138960_g174452 = _TerrainCoord13;
				float4 temp_output_37_0_g174521 = Input_Terrain_Coords_138960_g174452;
				half4 Coords238_g174521 = temp_output_37_0_g174521;
				float3 temp_output_279_0_g174521 = Input_Position9197_g174452;
				half3 WorldPosition238_g174521 = temp_output_279_0_g174521;
				half4 localSamplePlanar2D238_g174521 = SamplePlanar2D( Texture238_g174521 , Sampler238_g174521 , Coords238_g174521 , WorldPosition238_g174521 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174521) = _TerrainShaderTex13;
				SamplerState Sampler246_g174521 = SS30_g174557;
				half4 Coords246_g174521 = temp_output_37_0_g174521;
				half3 WorldPosition246_g174521 = temp_output_279_0_g174521;
				float3 temp_output_280_0_g174521 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174521 = temp_output_280_0_g174521;
				half4 localSamplePlanar3D246_g174521 = SamplePlanar3D( Texture246_g174521 , Sampler246_g174521 , Coords246_g174521 , WorldPosition246_g174521 , WorldNormal246_g174521 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174521) = _TerrainShaderTex13;
				SamplerState Sampler234_g174521 = SS30_g174557;
				float4 Coords234_g174521 = temp_output_37_0_g174521;
				float3 WorldPosition234_g174521 = temp_output_279_0_g174521;
				float4 localSampleStochastic2D234_g174521 = SampleStochastic2D( Texture234_g174521 , Sampler234_g174521 , Coords234_g174521 , WorldPosition234_g174521 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174521) = _TerrainShaderTex13;
				SamplerState Sampler263_g174521 = SS30_g174557;
				half4 Coords263_g174521 = temp_output_37_0_g174521;
				half3 WorldPosition263_g174521 = temp_output_279_0_g174521;
				half3 WorldNormal263_g174521 = temp_output_280_0_g174521;
				half4 localSampleStochastic3D263_g174521 = SampleStochastic3D( Texture263_g174521 , Sampler263_g174521 , Coords263_g174521 , WorldPosition263_g174521 , WorldNormal263_g174521 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch9000_g174452 = localSamplePlanar2D238_g174521;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch9000_g174452 = localSamplePlanar3D246_g174521;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch9000_g174452 = localSampleStochastic2D234_g174521;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch9000_g174452 = localSampleStochastic3D263_g174521;
				#else
				float4 staticSwitch9000_g174452 = localSamplePlanar2D238_g174521;
				#endif
				float4 temp_output_7_0_g174483 = _TerrainShaderMin13;
				float4 temp_output_10_0_g174483 = ( _TerrainShaderMax13 - temp_output_7_0_g174483 );
				float4 temp_output_8931_0_g174452 = saturate( ( ( staticSwitch9000_g174452 - temp_output_7_0_g174483 ) / ( temp_output_10_0_g174483 + 0.0001 ) ) );
				half4 Masks_015_g174484 = temp_output_8931_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174532) = _TerrainShaderTex14;
				SamplerState Sampler238_g174532 = SS30_g174557;
				half4 Input_Terrain_Coords_148961_g174452 = _TerrainCoord14;
				float4 temp_output_37_0_g174532 = Input_Terrain_Coords_148961_g174452;
				half4 Coords238_g174532 = temp_output_37_0_g174532;
				float3 temp_output_279_0_g174532 = Input_Position9197_g174452;
				half3 WorldPosition238_g174532 = temp_output_279_0_g174532;
				half4 localSamplePlanar2D238_g174532 = SamplePlanar2D( Texture238_g174532 , Sampler238_g174532 , Coords238_g174532 , WorldPosition238_g174532 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174532) = _TerrainShaderTex14;
				SamplerState Sampler246_g174532 = SS30_g174557;
				half4 Coords246_g174532 = temp_output_37_0_g174532;
				half3 WorldPosition246_g174532 = temp_output_279_0_g174532;
				float3 temp_output_280_0_g174532 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174532 = temp_output_280_0_g174532;
				half4 localSamplePlanar3D246_g174532 = SamplePlanar3D( Texture246_g174532 , Sampler246_g174532 , Coords246_g174532 , WorldPosition246_g174532 , WorldNormal246_g174532 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174532) = _TerrainShaderTex14;
				SamplerState Sampler234_g174532 = SS30_g174557;
				float4 Coords234_g174532 = temp_output_37_0_g174532;
				float3 WorldPosition234_g174532 = temp_output_279_0_g174532;
				float4 localSampleStochastic2D234_g174532 = SampleStochastic2D( Texture234_g174532 , Sampler234_g174532 , Coords234_g174532 , WorldPosition234_g174532 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174532) = _TerrainShaderTex14;
				SamplerState Sampler263_g174532 = SS30_g174557;
				half4 Coords263_g174532 = temp_output_37_0_g174532;
				half3 WorldPosition263_g174532 = temp_output_279_0_g174532;
				half3 WorldNormal263_g174532 = temp_output_280_0_g174532;
				half4 localSampleStochastic3D263_g174532 = SampleStochastic3D( Texture263_g174532 , Sampler263_g174532 , Coords263_g174532 , WorldPosition263_g174532 , WorldNormal263_g174532 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch9001_g174452 = localSamplePlanar2D238_g174532;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch9001_g174452 = localSamplePlanar3D246_g174532;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch9001_g174452 = localSampleStochastic2D234_g174532;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch9001_g174452 = localSampleStochastic3D263_g174532;
				#else
				float4 staticSwitch9001_g174452 = localSamplePlanar2D238_g174532;
				#endif
				float4 temp_output_7_0_g174491 = _TerrainShaderMin14;
				float4 temp_output_10_0_g174491 = ( _TerrainShaderMax14 - temp_output_7_0_g174491 );
				float4 temp_output_8934_0_g174452 = saturate( ( ( staticSwitch9001_g174452 - temp_output_7_0_g174491 ) / ( temp_output_10_0_g174491 + 0.0001 ) ) );
				half4 Masks_0210_g174484 = temp_output_8934_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174533) = _TerrainShaderTex15;
				SamplerState Sampler238_g174533 = SS30_g174557;
				half4 Input_Terrain_Coords_158962_g174452 = _TerrainCoord15;
				float4 temp_output_37_0_g174533 = Input_Terrain_Coords_158962_g174452;
				half4 Coords238_g174533 = temp_output_37_0_g174533;
				float3 temp_output_279_0_g174533 = Input_Position9197_g174452;
				half3 WorldPosition238_g174533 = temp_output_279_0_g174533;
				half4 localSamplePlanar2D238_g174533 = SamplePlanar2D( Texture238_g174533 , Sampler238_g174533 , Coords238_g174533 , WorldPosition238_g174533 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174533) = _TerrainShaderTex15;
				SamplerState Sampler246_g174533 = SS30_g174557;
				half4 Coords246_g174533 = temp_output_37_0_g174533;
				half3 WorldPosition246_g174533 = temp_output_279_0_g174533;
				float3 temp_output_280_0_g174533 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174533 = temp_output_280_0_g174533;
				half4 localSamplePlanar3D246_g174533 = SamplePlanar3D( Texture246_g174533 , Sampler246_g174533 , Coords246_g174533 , WorldPosition246_g174533 , WorldNormal246_g174533 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174533) = _TerrainShaderTex15;
				SamplerState Sampler234_g174533 = SS30_g174557;
				float4 Coords234_g174533 = temp_output_37_0_g174533;
				float3 WorldPosition234_g174533 = temp_output_279_0_g174533;
				float4 localSampleStochastic2D234_g174533 = SampleStochastic2D( Texture234_g174533 , Sampler234_g174533 , Coords234_g174533 , WorldPosition234_g174533 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174533) = _TerrainShaderTex15;
				SamplerState Sampler263_g174533 = SS30_g174557;
				half4 Coords263_g174533 = temp_output_37_0_g174533;
				half3 WorldPosition263_g174533 = temp_output_279_0_g174533;
				half3 WorldNormal263_g174533 = temp_output_280_0_g174533;
				half4 localSampleStochastic3D263_g174533 = SampleStochastic3D( Texture263_g174533 , Sampler263_g174533 , Coords263_g174533 , WorldPosition263_g174533 , WorldNormal263_g174533 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch9002_g174452 = localSamplePlanar2D238_g174533;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch9002_g174452 = localSamplePlanar3D246_g174533;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch9002_g174452 = localSampleStochastic2D234_g174533;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch9002_g174452 = localSampleStochastic3D263_g174533;
				#else
				float4 staticSwitch9002_g174452 = localSamplePlanar2D238_g174533;
				#endif
				float4 temp_output_7_0_g174492 = _TerrainShaderMin15;
				float4 temp_output_10_0_g174492 = ( _TerrainShaderMax15 - temp_output_7_0_g174492 );
				float4 temp_output_8935_0_g174452 = saturate( ( ( staticSwitch9002_g174452 - temp_output_7_0_g174492 ) / ( temp_output_10_0_g174492 + 0.0001 ) ) );
				half4 Masks_0312_g174484 = temp_output_8935_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174534) = _TerrainShaderTex16;
				SamplerState Sampler238_g174534 = SS30_g174557;
				half4 Input_Terrain_Coords_168959_g174452 = _TerrainCoord16;
				float4 temp_output_37_0_g174534 = Input_Terrain_Coords_168959_g174452;
				half4 Coords238_g174534 = temp_output_37_0_g174534;
				float3 temp_output_279_0_g174534 = Input_Position9197_g174452;
				half3 WorldPosition238_g174534 = temp_output_279_0_g174534;
				half4 localSamplePlanar2D238_g174534 = SamplePlanar2D( Texture238_g174534 , Sampler238_g174534 , Coords238_g174534 , WorldPosition238_g174534 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174534) = _TerrainShaderTex16;
				SamplerState Sampler246_g174534 = SS30_g174557;
				half4 Coords246_g174534 = temp_output_37_0_g174534;
				half3 WorldPosition246_g174534 = temp_output_279_0_g174534;
				float3 temp_output_280_0_g174534 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174534 = temp_output_280_0_g174534;
				half4 localSamplePlanar3D246_g174534 = SamplePlanar3D( Texture246_g174534 , Sampler246_g174534 , Coords246_g174534 , WorldPosition246_g174534 , WorldNormal246_g174534 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174534) = _TerrainShaderTex16;
				SamplerState Sampler234_g174534 = SS30_g174557;
				float4 Coords234_g174534 = temp_output_37_0_g174534;
				float3 WorldPosition234_g174534 = temp_output_279_0_g174534;
				float4 localSampleStochastic2D234_g174534 = SampleStochastic2D( Texture234_g174534 , Sampler234_g174534 , Coords234_g174534 , WorldPosition234_g174534 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174534) = _TerrainShaderTex16;
				SamplerState Sampler263_g174534 = SS30_g174557;
				half4 Coords263_g174534 = temp_output_37_0_g174534;
				half3 WorldPosition263_g174534 = temp_output_279_0_g174534;
				half3 WorldNormal263_g174534 = temp_output_280_0_g174534;
				half4 localSampleStochastic3D263_g174534 = SampleStochastic3D( Texture263_g174534 , Sampler263_g174534 , Coords263_g174534 , WorldPosition263_g174534 , WorldNormal263_g174534 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch9003_g174452 = localSamplePlanar2D238_g174534;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch9003_g174452 = localSamplePlanar3D246_g174534;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch9003_g174452 = localSampleStochastic2D234_g174534;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch9003_g174452 = localSampleStochastic3D263_g174534;
				#else
				float4 staticSwitch9003_g174452 = localSamplePlanar2D238_g174534;
				#endif
				float4 temp_output_7_0_g174493 = _TerrainShaderMin16;
				float4 temp_output_10_0_g174493 = ( _TerrainShaderMax16 - temp_output_7_0_g174493 );
				float4 temp_output_8936_0_g174452 = saturate( ( ( staticSwitch9003_g174452 - temp_output_7_0_g174493 ) / ( temp_output_10_0_g174493 + 0.0001 ) ) );
				half4 Masks_0414_g174484 = temp_output_8936_0_g174452;
				float4 appendResult29_g174484 = (float4((Masks_015_g174484).z , (Masks_0210_g174484).z , (Masks_0312_g174484).z , (Masks_0414_g174484).z));
				half4 Control31_g174484 = Terrain_Control_167711_g174452;
				half4 Terrain_Height_169015_g174452 = ( appendResult29_g174484 * Control31_g174484 );
				float4 heights_167362_g174452 = Terrain_Height_169015_g174452;
				float heightTransition7362_g174452 = ( 1.0 - _TerrainHeightBlendValue );
				float4 weights_047362_g174452 = float4( 0,0,0,0 );
				float4 weights_087362_g174452 = float4( 0,0,0,0 );
				float4 weights_127362_g174452 = float4( 0,0,0,0 );
				float4 weights_167362_g174452 = float4( 0,0,0,0 );
				//Modified version of the HDRP terrain height based blending
				float maxHeight = 0;
				float4 weightedHeights_04 = float4( 0,0,0,0 );
				float4 weightedHeights_08 = float4( 0,0,0,0 );
				float4 weightedHeights_12 = float4( 0,0,0,0 );
				float4 weightedHeights_16 = float4( 0,0,0,0 );
				maxHeight = heights_047362_g174452.x;
				maxHeight = max(maxHeight, heights_047362_g174452.y);
				maxHeight = max(maxHeight, heights_047362_g174452.z);
				maxHeight = max(maxHeight, heights_047362_g174452.w);
				#ifdef TVE_TERRAIN_08
				maxHeight = max(maxHeight, heights_087362_g174452.x);
				maxHeight = max(maxHeight, heights_087362_g174452.y);
				maxHeight = max(maxHeight, heights_087362_g174452.z);
				maxHeight = max(maxHeight, heights_087362_g174452.w);
				#endif
				#ifdef TVE_TERRAIN_12
				maxHeight = max(maxHeight, heights_087362_g174452.x);
				maxHeight = max(maxHeight, heights_087362_g174452.y);
				maxHeight = max(maxHeight, heights_087362_g174452.z);
				maxHeight = max(maxHeight, heights_087362_g174452.w);
				maxHeight = max(maxHeight, heights_127362_g174452.x);
				maxHeight = max(maxHeight, heights_127362_g174452.y);
				maxHeight = max(maxHeight, heights_127362_g174452.z);
				maxHeight = max(maxHeight, heights_127362_g174452.w);
				#endif
				#ifdef TVE_TERRAIN_16
				maxHeight = max(maxHeight, heights_087362_g174452.x);
				maxHeight = max(maxHeight, heights_087362_g174452.y);
				maxHeight = max(maxHeight, heights_087362_g174452.z);
				maxHeight = max(maxHeight, heights_087362_g174452.w);
				maxHeight = max(maxHeight, heights_127362_g174452.x);
				maxHeight = max(maxHeight, heights_127362_g174452.y);
				maxHeight = max(maxHeight, heights_127362_g174452.z);
				maxHeight = max(maxHeight, heights_127362_g174452.w);
				maxHeight = max(maxHeight, heights_167362_g174452.x);
				maxHeight = max(maxHeight, heights_167362_g174452.y);
				maxHeight = max(maxHeight, heights_167362_g174452.z);
				maxHeight = max(maxHeight, heights_167362_g174452.w);
				#endif
				float transition = max(heightTransition7362_g174452, 0.01);
				weightedHeights_04 = float4 ( heights_047362_g174452.x, heights_047362_g174452.y, heights_047362_g174452.z, heights_047362_g174452.w );
				weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
				weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g174452;
				#ifdef TVE_TERRAIN_08
				weightedHeights_08 = float4 ( heights_087362_g174452.x, heights_087362_g174452.y, heights_087362_g174452.z, heights_087362_g174452.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g174452;
				#endif
				#ifdef TVE_TERRAIN_12
				weightedHeights_08 = float4 ( heights_087362_g174452.x, heights_087362_g174452.y, heights_087362_g174452.z, heights_087362_g174452.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g174452;
				weightedHeights_12 = float4 ( heights_127362_g174452.x, heights_127362_g174452.y, heights_127362_g174452.z, heights_127362_g174452.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g174452;
				#endif
				#ifdef TVE_TERRAIN_16
				weightedHeights_08 = float4 ( heights_087362_g174452.x, heights_087362_g174452.y, heights_087362_g174452.z, heights_087362_g174452.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g174452;
				weightedHeights_12 = float4 ( heights_127362_g174452.x, heights_127362_g174452.y, heights_127362_g174452.z, heights_127362_g174452.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g174452;
				weightedHeights_16 = float4 ( heights_167362_g174452.x, heights_167362_g174452.y, heights_167362_g174452.z, heights_167362_g174452.w );
				weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
				weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g174452;
				#endif
				float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
				float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
				float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
				float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
				float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
				weights_047362_g174452 = weightedHeights_04 / sumHeight.xxxx;
				#ifdef TVE_TERRAIN_08
				weights_087362_g174452 = weightedHeights_08 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_12
				weights_087362_g174452 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g174452 = weightedHeights_12 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_16
				weights_087362_g174452 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g174452 = weightedHeights_12 / sumHeight.xxxx;
				weights_167362_g174452 = weightedHeights_16 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8792_g174452 = weights_047362_g174452;
				#else
				float4 staticSwitch8792_g174452 = control_047362_g174452;
				#endif
				half4 Terrain_Weights_046781_g174452 = staticSwitch8792_g174452;
				half4 Weights52_g174457 = Terrain_Weights_046781_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174498) = _TerrainAlbedoTex1;
				float localFilterTexture19_g174558 = ( 0.0 );
				SamplerState SamplerDefault19_g174558 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174558 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174558 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174558 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174558 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174558 = SamplerDefault19_g174558;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174558 = SamplerDefault19_g174558;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174558 = SamplerPoint19_g174558;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174558 = SamplerLow19_g174558;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174558 = SamplerMedium19_g174558;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174558 = SamplerHigh19_g174558;
				#endif
				SamplerState Sampler238_g174498 = SS19_g174558;
				float4 temp_output_37_0_g174498 = Input_Terrain_Coords_016785_g174452;
				half4 Coords238_g174498 = temp_output_37_0_g174498;
				float3 temp_output_279_0_g174498 = Input_Position9197_g174452;
				half3 WorldPosition238_g174498 = temp_output_279_0_g174498;
				half4 localSamplePlanar2D238_g174498 = SamplePlanar2D( Texture238_g174498 , Sampler238_g174498 , Coords238_g174498 , WorldPosition238_g174498 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174498) = _TerrainAlbedoTex1;
				SamplerState Sampler246_g174498 = SS19_g174558;
				half4 Coords246_g174498 = temp_output_37_0_g174498;
				half3 WorldPosition246_g174498 = temp_output_279_0_g174498;
				float3 temp_output_280_0_g174498 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174498 = temp_output_280_0_g174498;
				half4 localSamplePlanar3D246_g174498 = SamplePlanar3D( Texture246_g174498 , Sampler246_g174498 , Coords246_g174498 , WorldPosition246_g174498 , WorldNormal246_g174498 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174498) = _TerrainAlbedoTex1;
				SamplerState Sampler234_g174498 = SS19_g174558;
				float4 Coords234_g174498 = temp_output_37_0_g174498;
				float3 WorldPosition234_g174498 = temp_output_279_0_g174498;
				float4 localSampleStochastic2D234_g174498 = SampleStochastic2D( Texture234_g174498 , Sampler234_g174498 , Coords234_g174498 , WorldPosition234_g174498 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174498) = _TerrainAlbedoTex1;
				SamplerState Sampler263_g174498 = SS19_g174558;
				half4 Coords263_g174498 = temp_output_37_0_g174498;
				half3 WorldPosition263_g174498 = temp_output_279_0_g174498;
				half3 WorldNormal263_g174498 = temp_output_280_0_g174498;
				half4 localSampleStochastic3D263_g174498 = SampleStochastic3D( Texture263_g174498 , Sampler263_g174498 , Coords263_g174498 , WorldPosition263_g174498 , WorldNormal263_g174498 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8614_g174452 = localSamplePlanar2D238_g174498;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8614_g174452 = localSamplePlanar3D246_g174498;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8614_g174452 = localSampleStochastic2D234_g174498;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8614_g174452 = localSampleStochastic3D263_g174498;
				#else
				float4 staticSwitch8614_g174452 = localSamplePlanar2D238_g174498;
				#endif
				half4 Layer133_g174457 = staticSwitch8614_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler238_g174499 = SS19_g174558;
				float4 temp_output_37_0_g174499 = Input_Terrain_Coords_026787_g174452;
				half4 Coords238_g174499 = temp_output_37_0_g174499;
				float3 temp_output_279_0_g174499 = Input_Position9197_g174452;
				half3 WorldPosition238_g174499 = temp_output_279_0_g174499;
				half4 localSamplePlanar2D238_g174499 = SamplePlanar2D( Texture238_g174499 , Sampler238_g174499 , Coords238_g174499 , WorldPosition238_g174499 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler246_g174499 = SS19_g174558;
				half4 Coords246_g174499 = temp_output_37_0_g174499;
				half3 WorldPosition246_g174499 = temp_output_279_0_g174499;
				float3 temp_output_280_0_g174499 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174499 = temp_output_280_0_g174499;
				half4 localSamplePlanar3D246_g174499 = SamplePlanar3D( Texture246_g174499 , Sampler246_g174499 , Coords246_g174499 , WorldPosition246_g174499 , WorldNormal246_g174499 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler234_g174499 = SS19_g174558;
				float4 Coords234_g174499 = temp_output_37_0_g174499;
				float3 WorldPosition234_g174499 = temp_output_279_0_g174499;
				float4 localSampleStochastic2D234_g174499 = SampleStochastic2D( Texture234_g174499 , Sampler234_g174499 , Coords234_g174499 , WorldPosition234_g174499 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler263_g174499 = SS19_g174558;
				half4 Coords263_g174499 = temp_output_37_0_g174499;
				half3 WorldPosition263_g174499 = temp_output_279_0_g174499;
				half3 WorldNormal263_g174499 = temp_output_280_0_g174499;
				half4 localSampleStochastic3D263_g174499 = SampleStochastic3D( Texture263_g174499 , Sampler263_g174499 , Coords263_g174499 , WorldPosition263_g174499 , WorldNormal263_g174499 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8629_g174452 = localSamplePlanar2D238_g174499;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8629_g174452 = localSamplePlanar3D246_g174499;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8629_g174452 = localSampleStochastic2D234_g174499;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8629_g174452 = localSampleStochastic3D263_g174499;
				#else
				float4 staticSwitch8629_g174452 = localSamplePlanar2D238_g174499;
				#endif
				half4 Layer237_g174457 = staticSwitch8629_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler238_g174502 = SS19_g174558;
				float4 temp_output_37_0_g174502 = Input_Terrain_Coords_036789_g174452;
				half4 Coords238_g174502 = temp_output_37_0_g174502;
				float3 temp_output_279_0_g174502 = Input_Position9197_g174452;
				half3 WorldPosition238_g174502 = temp_output_279_0_g174502;
				half4 localSamplePlanar2D238_g174502 = SamplePlanar2D( Texture238_g174502 , Sampler238_g174502 , Coords238_g174502 , WorldPosition238_g174502 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler246_g174502 = SS19_g174558;
				half4 Coords246_g174502 = temp_output_37_0_g174502;
				half3 WorldPosition246_g174502 = temp_output_279_0_g174502;
				float3 temp_output_280_0_g174502 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174502 = temp_output_280_0_g174502;
				half4 localSamplePlanar3D246_g174502 = SamplePlanar3D( Texture246_g174502 , Sampler246_g174502 , Coords246_g174502 , WorldPosition246_g174502 , WorldNormal246_g174502 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler234_g174502 = SS19_g174558;
				float4 Coords234_g174502 = temp_output_37_0_g174502;
				float3 WorldPosition234_g174502 = temp_output_279_0_g174502;
				float4 localSampleStochastic2D234_g174502 = SampleStochastic2D( Texture234_g174502 , Sampler234_g174502 , Coords234_g174502 , WorldPosition234_g174502 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler263_g174502 = SS19_g174558;
				half4 Coords263_g174502 = temp_output_37_0_g174502;
				half3 WorldPosition263_g174502 = temp_output_279_0_g174502;
				half3 WorldNormal263_g174502 = temp_output_280_0_g174502;
				half4 localSampleStochastic3D263_g174502 = SampleStochastic3D( Texture263_g174502 , Sampler263_g174502 , Coords263_g174502 , WorldPosition263_g174502 , WorldNormal263_g174502 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8630_g174452 = localSamplePlanar2D238_g174502;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8630_g174452 = localSamplePlanar3D246_g174502;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8630_g174452 = localSampleStochastic2D234_g174502;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8630_g174452 = localSampleStochastic3D263_g174502;
				#else
				float4 staticSwitch8630_g174452 = localSamplePlanar2D238_g174502;
				#endif
				half4 Layer338_g174457 = staticSwitch8630_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler238_g174504 = SS19_g174558;
				float4 temp_output_37_0_g174504 = Input_Terrain_Coords_046791_g174452;
				half4 Coords238_g174504 = temp_output_37_0_g174504;
				float3 temp_output_279_0_g174504 = Input_Position9197_g174452;
				half3 WorldPosition238_g174504 = temp_output_279_0_g174504;
				half4 localSamplePlanar2D238_g174504 = SamplePlanar2D( Texture238_g174504 , Sampler238_g174504 , Coords238_g174504 , WorldPosition238_g174504 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler246_g174504 = SS19_g174558;
				half4 Coords246_g174504 = temp_output_37_0_g174504;
				half3 WorldPosition246_g174504 = temp_output_279_0_g174504;
				float3 temp_output_280_0_g174504 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174504 = temp_output_280_0_g174504;
				half4 localSamplePlanar3D246_g174504 = SamplePlanar3D( Texture246_g174504 , Sampler246_g174504 , Coords246_g174504 , WorldPosition246_g174504 , WorldNormal246_g174504 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler234_g174504 = SS19_g174558;
				float4 Coords234_g174504 = temp_output_37_0_g174504;
				float3 WorldPosition234_g174504 = temp_output_279_0_g174504;
				float4 localSampleStochastic2D234_g174504 = SampleStochastic2D( Texture234_g174504 , Sampler234_g174504 , Coords234_g174504 , WorldPosition234_g174504 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler263_g174504 = SS19_g174558;
				half4 Coords263_g174504 = temp_output_37_0_g174504;
				half3 WorldPosition263_g174504 = temp_output_279_0_g174504;
				half3 WorldNormal263_g174504 = temp_output_280_0_g174504;
				half4 localSampleStochastic3D263_g174504 = SampleStochastic3D( Texture263_g174504 , Sampler263_g174504 , Coords263_g174504 , WorldPosition263_g174504 , WorldNormal263_g174504 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8631_g174452 = localSamplePlanar2D238_g174504;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8631_g174452 = localSamplePlanar3D246_g174504;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8631_g174452 = localSampleStochastic2D234_g174504;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8631_g174452 = localSampleStochastic3D263_g174504;
				#else
				float4 staticSwitch8631_g174452 = localSamplePlanar2D238_g174504;
				#endif
				half4 Layer439_g174457 = staticSwitch8631_g174452;
				float4 weightedBlendVar31_g174457 = Weights52_g174457;
				float4 weightedBlend31_g174457 = ( weightedBlendVar31_g174457.x*Layer133_g174457 + weightedBlendVar31_g174457.y*Layer237_g174457 + weightedBlendVar31_g174457.z*Layer338_g174457 + weightedBlendVar31_g174457.w*Layer439_g174457 );
				half4 Terrain_AAAA_047200_g174452 = weightedBlend31_g174457;
				half4 Layer_045_g174460 = Terrain_AAAA_047200_g174452;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8793_g174452 = weights_087362_g174452;
				#else
				float4 staticSwitch8793_g174452 = control_087362_g174452;
				#endif
				half4 Terrain_Weights_087340_g174452 = staticSwitch8793_g174452;
				half4 Weights52_g174467 = Terrain_Weights_087340_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler238_g174508 = SS19_g174558;
				float4 temp_output_37_0_g174508 = Input_Terrain_Coords_058750_g174452;
				half4 Coords238_g174508 = temp_output_37_0_g174508;
				float3 temp_output_279_0_g174508 = Input_Position9197_g174452;
				half3 WorldPosition238_g174508 = temp_output_279_0_g174508;
				half4 localSamplePlanar2D238_g174508 = SamplePlanar2D( Texture238_g174508 , Sampler238_g174508 , Coords238_g174508 , WorldPosition238_g174508 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler246_g174508 = SS19_g174558;
				half4 Coords246_g174508 = temp_output_37_0_g174508;
				half3 WorldPosition246_g174508 = temp_output_279_0_g174508;
				float3 temp_output_280_0_g174508 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174508 = temp_output_280_0_g174508;
				half4 localSamplePlanar3D246_g174508 = SamplePlanar3D( Texture246_g174508 , Sampler246_g174508 , Coords246_g174508 , WorldPosition246_g174508 , WorldNormal246_g174508 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler234_g174508 = SS19_g174558;
				float4 Coords234_g174508 = temp_output_37_0_g174508;
				float3 WorldPosition234_g174508 = temp_output_279_0_g174508;
				float4 localSampleStochastic2D234_g174508 = SampleStochastic2D( Texture234_g174508 , Sampler234_g174508 , Coords234_g174508 , WorldPosition234_g174508 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler263_g174508 = SS19_g174558;
				half4 Coords263_g174508 = temp_output_37_0_g174508;
				half3 WorldPosition263_g174508 = temp_output_279_0_g174508;
				half3 WorldNormal263_g174508 = temp_output_280_0_g174508;
				half4 localSampleStochastic3D263_g174508 = SampleStochastic3D( Texture263_g174508 , Sampler263_g174508 , Coords263_g174508 , WorldPosition263_g174508 , WorldNormal263_g174508 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8690_g174452 = localSamplePlanar2D238_g174508;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8690_g174452 = localSamplePlanar3D246_g174508;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8690_g174452 = localSampleStochastic2D234_g174508;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8690_g174452 = localSampleStochastic3D263_g174508;
				#else
				float4 staticSwitch8690_g174452 = localSamplePlanar2D238_g174508;
				#endif
				half4 Layer133_g174467 = staticSwitch8690_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler238_g174535 = SS19_g174558;
				float4 temp_output_37_0_g174535 = Input_Terrain_Coords_068751_g174452;
				half4 Coords238_g174535 = temp_output_37_0_g174535;
				float3 temp_output_279_0_g174535 = Input_Position9197_g174452;
				half3 WorldPosition238_g174535 = temp_output_279_0_g174535;
				half4 localSamplePlanar2D238_g174535 = SamplePlanar2D( Texture238_g174535 , Sampler238_g174535 , Coords238_g174535 , WorldPosition238_g174535 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler246_g174535 = SS19_g174558;
				half4 Coords246_g174535 = temp_output_37_0_g174535;
				half3 WorldPosition246_g174535 = temp_output_279_0_g174535;
				float3 temp_output_280_0_g174535 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174535 = temp_output_280_0_g174535;
				half4 localSamplePlanar3D246_g174535 = SamplePlanar3D( Texture246_g174535 , Sampler246_g174535 , Coords246_g174535 , WorldPosition246_g174535 , WorldNormal246_g174535 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler234_g174535 = SS19_g174558;
				float4 Coords234_g174535 = temp_output_37_0_g174535;
				float3 WorldPosition234_g174535 = temp_output_279_0_g174535;
				float4 localSampleStochastic2D234_g174535 = SampleStochastic2D( Texture234_g174535 , Sampler234_g174535 , Coords234_g174535 , WorldPosition234_g174535 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler263_g174535 = SS19_g174558;
				half4 Coords263_g174535 = temp_output_37_0_g174535;
				half3 WorldPosition263_g174535 = temp_output_279_0_g174535;
				half3 WorldNormal263_g174535 = temp_output_280_0_g174535;
				half4 localSampleStochastic3D263_g174535 = SampleStochastic3D( Texture263_g174535 , Sampler263_g174535 , Coords263_g174535 , WorldPosition263_g174535 , WorldNormal263_g174535 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8691_g174452 = localSamplePlanar2D238_g174535;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8691_g174452 = localSamplePlanar3D246_g174535;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8691_g174452 = localSampleStochastic2D234_g174535;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8691_g174452 = localSampleStochastic3D263_g174535;
				#else
				float4 staticSwitch8691_g174452 = localSamplePlanar2D238_g174535;
				#endif
				half4 Layer237_g174467 = staticSwitch8691_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler238_g174536 = SS19_g174558;
				float4 temp_output_37_0_g174536 = Input_Terrain_Coords_078752_g174452;
				half4 Coords238_g174536 = temp_output_37_0_g174536;
				float3 temp_output_279_0_g174536 = Input_Position9197_g174452;
				half3 WorldPosition238_g174536 = temp_output_279_0_g174536;
				half4 localSamplePlanar2D238_g174536 = SamplePlanar2D( Texture238_g174536 , Sampler238_g174536 , Coords238_g174536 , WorldPosition238_g174536 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler246_g174536 = SS19_g174558;
				half4 Coords246_g174536 = temp_output_37_0_g174536;
				half3 WorldPosition246_g174536 = temp_output_279_0_g174536;
				float3 temp_output_280_0_g174536 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174536 = temp_output_280_0_g174536;
				half4 localSamplePlanar3D246_g174536 = SamplePlanar3D( Texture246_g174536 , Sampler246_g174536 , Coords246_g174536 , WorldPosition246_g174536 , WorldNormal246_g174536 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler234_g174536 = SS19_g174558;
				float4 Coords234_g174536 = temp_output_37_0_g174536;
				float3 WorldPosition234_g174536 = temp_output_279_0_g174536;
				float4 localSampleStochastic2D234_g174536 = SampleStochastic2D( Texture234_g174536 , Sampler234_g174536 , Coords234_g174536 , WorldPosition234_g174536 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler263_g174536 = SS19_g174558;
				half4 Coords263_g174536 = temp_output_37_0_g174536;
				half3 WorldPosition263_g174536 = temp_output_279_0_g174536;
				half3 WorldNormal263_g174536 = temp_output_280_0_g174536;
				half4 localSampleStochastic3D263_g174536 = SampleStochastic3D( Texture263_g174536 , Sampler263_g174536 , Coords263_g174536 , WorldPosition263_g174536 , WorldNormal263_g174536 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8692_g174452 = localSamplePlanar2D238_g174536;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8692_g174452 = localSamplePlanar3D246_g174536;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8692_g174452 = localSampleStochastic2D234_g174536;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8692_g174452 = localSampleStochastic3D263_g174536;
				#else
				float4 staticSwitch8692_g174452 = localSamplePlanar2D238_g174536;
				#endif
				half4 Layer338_g174467 = staticSwitch8692_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler238_g174537 = SS19_g174558;
				float4 temp_output_37_0_g174537 = Input_Terrain_Coords_088749_g174452;
				half4 Coords238_g174537 = temp_output_37_0_g174537;
				float3 temp_output_279_0_g174537 = Input_Position9197_g174452;
				half3 WorldPosition238_g174537 = temp_output_279_0_g174537;
				half4 localSamplePlanar2D238_g174537 = SamplePlanar2D( Texture238_g174537 , Sampler238_g174537 , Coords238_g174537 , WorldPosition238_g174537 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler246_g174537 = SS19_g174558;
				half4 Coords246_g174537 = temp_output_37_0_g174537;
				half3 WorldPosition246_g174537 = temp_output_279_0_g174537;
				float3 temp_output_280_0_g174537 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174537 = temp_output_280_0_g174537;
				half4 localSamplePlanar3D246_g174537 = SamplePlanar3D( Texture246_g174537 , Sampler246_g174537 , Coords246_g174537 , WorldPosition246_g174537 , WorldNormal246_g174537 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler234_g174537 = SS19_g174558;
				float4 Coords234_g174537 = temp_output_37_0_g174537;
				float3 WorldPosition234_g174537 = temp_output_279_0_g174537;
				float4 localSampleStochastic2D234_g174537 = SampleStochastic2D( Texture234_g174537 , Sampler234_g174537 , Coords234_g174537 , WorldPosition234_g174537 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler263_g174537 = SS19_g174558;
				half4 Coords263_g174537 = temp_output_37_0_g174537;
				half3 WorldPosition263_g174537 = temp_output_279_0_g174537;
				half3 WorldNormal263_g174537 = temp_output_280_0_g174537;
				half4 localSampleStochastic3D263_g174537 = SampleStochastic3D( Texture263_g174537 , Sampler263_g174537 , Coords263_g174537 , WorldPosition263_g174537 , WorldNormal263_g174537 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8693_g174452 = localSamplePlanar2D238_g174537;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8693_g174452 = localSamplePlanar3D246_g174537;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8693_g174452 = localSampleStochastic2D234_g174537;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8693_g174452 = localSampleStochastic3D263_g174537;
				#else
				float4 staticSwitch8693_g174452 = localSamplePlanar2D238_g174537;
				#endif
				half4 Layer439_g174467 = staticSwitch8693_g174452;
				float4 weightedBlendVar31_g174467 = Weights52_g174467;
				float4 weightedBlend31_g174467 = ( weightedBlendVar31_g174467.x*Layer133_g174467 + weightedBlendVar31_g174467.y*Layer237_g174467 + weightedBlendVar31_g174467.z*Layer338_g174467 + weightedBlendVar31_g174467.w*Layer439_g174467 );
				half4 Terrain_AAAA_088665_g174452 = weightedBlend31_g174467;
				half4 Layer_0810_g174460 = Terrain_AAAA_088665_g174452;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8794_g174452 = weights_127362_g174452;
				#else
				float4 staticSwitch8794_g174452 = control_127362_g174452;
				#endif
				half4 Terrain_Weights_127710_g174452 = staticSwitch8794_g174452;
				half4 Weights52_g174474 = Terrain_Weights_127710_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler238_g174511 = SS19_g174558;
				float4 temp_output_37_0_g174511 = Input_Terrain_Coords_098833_g174452;
				half4 Coords238_g174511 = temp_output_37_0_g174511;
				float3 temp_output_279_0_g174511 = Input_Position9197_g174452;
				half3 WorldPosition238_g174511 = temp_output_279_0_g174511;
				half4 localSamplePlanar2D238_g174511 = SamplePlanar2D( Texture238_g174511 , Sampler238_g174511 , Coords238_g174511 , WorldPosition238_g174511 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler246_g174511 = SS19_g174558;
				half4 Coords246_g174511 = temp_output_37_0_g174511;
				half3 WorldPosition246_g174511 = temp_output_279_0_g174511;
				float3 temp_output_280_0_g174511 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174511 = temp_output_280_0_g174511;
				half4 localSamplePlanar3D246_g174511 = SamplePlanar3D( Texture246_g174511 , Sampler246_g174511 , Coords246_g174511 , WorldPosition246_g174511 , WorldNormal246_g174511 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler234_g174511 = SS19_g174558;
				float4 Coords234_g174511 = temp_output_37_0_g174511;
				float3 WorldPosition234_g174511 = temp_output_279_0_g174511;
				float4 localSampleStochastic2D234_g174511 = SampleStochastic2D( Texture234_g174511 , Sampler234_g174511 , Coords234_g174511 , WorldPosition234_g174511 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler263_g174511 = SS19_g174558;
				half4 Coords263_g174511 = temp_output_37_0_g174511;
				half3 WorldPosition263_g174511 = temp_output_279_0_g174511;
				half3 WorldNormal263_g174511 = temp_output_280_0_g174511;
				half4 localSampleStochastic3D263_g174511 = SampleStochastic3D( Texture263_g174511 , Sampler263_g174511 , Coords263_g174511 , WorldPosition263_g174511 , WorldNormal263_g174511 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8872_g174452 = localSamplePlanar2D238_g174511;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8872_g174452 = localSamplePlanar3D246_g174511;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8872_g174452 = localSampleStochastic2D234_g174511;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8872_g174452 = localSampleStochastic3D263_g174511;
				#else
				float4 staticSwitch8872_g174452 = localSamplePlanar2D238_g174511;
				#endif
				half4 Layer133_g174474 = staticSwitch8872_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler238_g174514 = SS19_g174558;
				float4 temp_output_37_0_g174514 = Input_Terrain_Coords_108834_g174452;
				half4 Coords238_g174514 = temp_output_37_0_g174514;
				float3 temp_output_279_0_g174514 = Input_Position9197_g174452;
				half3 WorldPosition238_g174514 = temp_output_279_0_g174514;
				half4 localSamplePlanar2D238_g174514 = SamplePlanar2D( Texture238_g174514 , Sampler238_g174514 , Coords238_g174514 , WorldPosition238_g174514 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler246_g174514 = SS19_g174558;
				half4 Coords246_g174514 = temp_output_37_0_g174514;
				half3 WorldPosition246_g174514 = temp_output_279_0_g174514;
				float3 temp_output_280_0_g174514 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174514 = temp_output_280_0_g174514;
				half4 localSamplePlanar3D246_g174514 = SamplePlanar3D( Texture246_g174514 , Sampler246_g174514 , Coords246_g174514 , WorldPosition246_g174514 , WorldNormal246_g174514 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler234_g174514 = SS19_g174558;
				float4 Coords234_g174514 = temp_output_37_0_g174514;
				float3 WorldPosition234_g174514 = temp_output_279_0_g174514;
				float4 localSampleStochastic2D234_g174514 = SampleStochastic2D( Texture234_g174514 , Sampler234_g174514 , Coords234_g174514 , WorldPosition234_g174514 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler263_g174514 = SS19_g174558;
				half4 Coords263_g174514 = temp_output_37_0_g174514;
				half3 WorldPosition263_g174514 = temp_output_279_0_g174514;
				half3 WorldNormal263_g174514 = temp_output_280_0_g174514;
				half4 localSampleStochastic3D263_g174514 = SampleStochastic3D( Texture263_g174514 , Sampler263_g174514 , Coords263_g174514 , WorldPosition263_g174514 , WorldNormal263_g174514 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8873_g174452 = localSamplePlanar2D238_g174514;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8873_g174452 = localSamplePlanar3D246_g174514;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8873_g174452 = localSampleStochastic2D234_g174514;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8873_g174452 = localSampleStochastic3D263_g174514;
				#else
				float4 staticSwitch8873_g174452 = localSamplePlanar2D238_g174514;
				#endif
				half4 Layer237_g174474 = staticSwitch8873_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler238_g174515 = SS19_g174558;
				float4 temp_output_37_0_g174515 = Input_Terrain_Coords_118835_g174452;
				half4 Coords238_g174515 = temp_output_37_0_g174515;
				float3 temp_output_279_0_g174515 = Input_Position9197_g174452;
				half3 WorldPosition238_g174515 = temp_output_279_0_g174515;
				half4 localSamplePlanar2D238_g174515 = SamplePlanar2D( Texture238_g174515 , Sampler238_g174515 , Coords238_g174515 , WorldPosition238_g174515 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler246_g174515 = SS19_g174558;
				half4 Coords246_g174515 = temp_output_37_0_g174515;
				half3 WorldPosition246_g174515 = temp_output_279_0_g174515;
				float3 temp_output_280_0_g174515 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174515 = temp_output_280_0_g174515;
				half4 localSamplePlanar3D246_g174515 = SamplePlanar3D( Texture246_g174515 , Sampler246_g174515 , Coords246_g174515 , WorldPosition246_g174515 , WorldNormal246_g174515 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler234_g174515 = SS19_g174558;
				float4 Coords234_g174515 = temp_output_37_0_g174515;
				float3 WorldPosition234_g174515 = temp_output_279_0_g174515;
				float4 localSampleStochastic2D234_g174515 = SampleStochastic2D( Texture234_g174515 , Sampler234_g174515 , Coords234_g174515 , WorldPosition234_g174515 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler263_g174515 = SS19_g174558;
				half4 Coords263_g174515 = temp_output_37_0_g174515;
				half3 WorldPosition263_g174515 = temp_output_279_0_g174515;
				half3 WorldNormal263_g174515 = temp_output_280_0_g174515;
				half4 localSampleStochastic3D263_g174515 = SampleStochastic3D( Texture263_g174515 , Sampler263_g174515 , Coords263_g174515 , WorldPosition263_g174515 , WorldNormal263_g174515 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8874_g174452 = localSamplePlanar2D238_g174515;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8874_g174452 = localSamplePlanar3D246_g174515;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8874_g174452 = localSampleStochastic2D234_g174515;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8874_g174452 = localSampleStochastic3D263_g174515;
				#else
				float4 staticSwitch8874_g174452 = localSamplePlanar2D238_g174515;
				#endif
				half4 Layer338_g174474 = staticSwitch8874_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler238_g174516 = SS19_g174558;
				float4 temp_output_37_0_g174516 = Input_Terrain_Coords_128836_g174452;
				half4 Coords238_g174516 = temp_output_37_0_g174516;
				float3 temp_output_279_0_g174516 = Input_Position9197_g174452;
				half3 WorldPosition238_g174516 = temp_output_279_0_g174516;
				half4 localSamplePlanar2D238_g174516 = SamplePlanar2D( Texture238_g174516 , Sampler238_g174516 , Coords238_g174516 , WorldPosition238_g174516 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler246_g174516 = SS19_g174558;
				half4 Coords246_g174516 = temp_output_37_0_g174516;
				half3 WorldPosition246_g174516 = temp_output_279_0_g174516;
				float3 temp_output_280_0_g174516 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174516 = temp_output_280_0_g174516;
				half4 localSamplePlanar3D246_g174516 = SamplePlanar3D( Texture246_g174516 , Sampler246_g174516 , Coords246_g174516 , WorldPosition246_g174516 , WorldNormal246_g174516 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler234_g174516 = SS19_g174558;
				float4 Coords234_g174516 = temp_output_37_0_g174516;
				float3 WorldPosition234_g174516 = temp_output_279_0_g174516;
				float4 localSampleStochastic2D234_g174516 = SampleStochastic2D( Texture234_g174516 , Sampler234_g174516 , Coords234_g174516 , WorldPosition234_g174516 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler263_g174516 = SS19_g174558;
				half4 Coords263_g174516 = temp_output_37_0_g174516;
				half3 WorldPosition263_g174516 = temp_output_279_0_g174516;
				half3 WorldNormal263_g174516 = temp_output_280_0_g174516;
				half4 localSampleStochastic3D263_g174516 = SampleStochastic3D( Texture263_g174516 , Sampler263_g174516 , Coords263_g174516 , WorldPosition263_g174516 , WorldNormal263_g174516 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8875_g174452 = localSamplePlanar2D238_g174516;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8875_g174452 = localSamplePlanar3D246_g174516;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8875_g174452 = localSampleStochastic2D234_g174516;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8875_g174452 = localSampleStochastic3D263_g174516;
				#else
				float4 staticSwitch8875_g174452 = localSamplePlanar2D238_g174516;
				#endif
				half4 Layer439_g174474 = staticSwitch8875_g174452;
				float4 weightedBlendVar31_g174474 = Weights52_g174474;
				float4 weightedBlend31_g174474 = ( weightedBlendVar31_g174474.x*Layer133_g174474 + weightedBlendVar31_g174474.y*Layer237_g174474 + weightedBlendVar31_g174474.z*Layer338_g174474 + weightedBlendVar31_g174474.w*Layer439_g174474 );
				half4 Terrain_AAAA_128851_g174452 = weightedBlend31_g174474;
				half4 Layer_1243_g174460 = Terrain_AAAA_128851_g174452;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8795_g174452 = weights_167362_g174452;
				#else
				float4 staticSwitch8795_g174452 = control_167362_g174452;
				#endif
				half4 Terrain_Weights_167709_g174452 = staticSwitch8795_g174452;
				half4 Weights52_g174481 = Terrain_Weights_167709_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler238_g174520 = SS19_g174558;
				float4 temp_output_37_0_g174520 = Input_Terrain_Coords_138960_g174452;
				half4 Coords238_g174520 = temp_output_37_0_g174520;
				float3 temp_output_279_0_g174520 = Input_Position9197_g174452;
				half3 WorldPosition238_g174520 = temp_output_279_0_g174520;
				half4 localSamplePlanar2D238_g174520 = SamplePlanar2D( Texture238_g174520 , Sampler238_g174520 , Coords238_g174520 , WorldPosition238_g174520 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler246_g174520 = SS19_g174558;
				half4 Coords246_g174520 = temp_output_37_0_g174520;
				half3 WorldPosition246_g174520 = temp_output_279_0_g174520;
				float3 temp_output_280_0_g174520 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174520 = temp_output_280_0_g174520;
				half4 localSamplePlanar3D246_g174520 = SamplePlanar3D( Texture246_g174520 , Sampler246_g174520 , Coords246_g174520 , WorldPosition246_g174520 , WorldNormal246_g174520 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler234_g174520 = SS19_g174558;
				float4 Coords234_g174520 = temp_output_37_0_g174520;
				float3 WorldPosition234_g174520 = temp_output_279_0_g174520;
				float4 localSampleStochastic2D234_g174520 = SampleStochastic2D( Texture234_g174520 , Sampler234_g174520 , Coords234_g174520 , WorldPosition234_g174520 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler263_g174520 = SS19_g174558;
				half4 Coords263_g174520 = temp_output_37_0_g174520;
				half3 WorldPosition263_g174520 = temp_output_279_0_g174520;
				half3 WorldNormal263_g174520 = temp_output_280_0_g174520;
				half4 localSampleStochastic3D263_g174520 = SampleStochastic3D( Texture263_g174520 , Sampler263_g174520 , Coords263_g174520 , WorldPosition263_g174520 , WorldNormal263_g174520 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8972_g174452 = localSamplePlanar2D238_g174520;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8972_g174452 = localSamplePlanar3D246_g174520;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8972_g174452 = localSampleStochastic2D234_g174520;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8972_g174452 = localSampleStochastic3D263_g174520;
				#else
				float4 staticSwitch8972_g174452 = localSamplePlanar2D238_g174520;
				#endif
				half4 Layer133_g174481 = staticSwitch8972_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler238_g174526 = SS19_g174558;
				float4 temp_output_37_0_g174526 = Input_Terrain_Coords_148961_g174452;
				half4 Coords238_g174526 = temp_output_37_0_g174526;
				float3 temp_output_279_0_g174526 = Input_Position9197_g174452;
				half3 WorldPosition238_g174526 = temp_output_279_0_g174526;
				half4 localSamplePlanar2D238_g174526 = SamplePlanar2D( Texture238_g174526 , Sampler238_g174526 , Coords238_g174526 , WorldPosition238_g174526 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler246_g174526 = SS19_g174558;
				half4 Coords246_g174526 = temp_output_37_0_g174526;
				half3 WorldPosition246_g174526 = temp_output_279_0_g174526;
				float3 temp_output_280_0_g174526 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174526 = temp_output_280_0_g174526;
				half4 localSamplePlanar3D246_g174526 = SamplePlanar3D( Texture246_g174526 , Sampler246_g174526 , Coords246_g174526 , WorldPosition246_g174526 , WorldNormal246_g174526 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler234_g174526 = SS19_g174558;
				float4 Coords234_g174526 = temp_output_37_0_g174526;
				float3 WorldPosition234_g174526 = temp_output_279_0_g174526;
				float4 localSampleStochastic2D234_g174526 = SampleStochastic2D( Texture234_g174526 , Sampler234_g174526 , Coords234_g174526 , WorldPosition234_g174526 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler263_g174526 = SS19_g174558;
				half4 Coords263_g174526 = temp_output_37_0_g174526;
				half3 WorldPosition263_g174526 = temp_output_279_0_g174526;
				half3 WorldNormal263_g174526 = temp_output_280_0_g174526;
				half4 localSampleStochastic3D263_g174526 = SampleStochastic3D( Texture263_g174526 , Sampler263_g174526 , Coords263_g174526 , WorldPosition263_g174526 , WorldNormal263_g174526 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8973_g174452 = localSamplePlanar2D238_g174526;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8973_g174452 = localSamplePlanar3D246_g174526;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8973_g174452 = localSampleStochastic2D234_g174526;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8973_g174452 = localSampleStochastic3D263_g174526;
				#else
				float4 staticSwitch8973_g174452 = localSamplePlanar2D238_g174526;
				#endif
				half4 Layer237_g174481 = staticSwitch8973_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler238_g174527 = SS19_g174558;
				float4 temp_output_37_0_g174527 = Input_Terrain_Coords_158962_g174452;
				half4 Coords238_g174527 = temp_output_37_0_g174527;
				float3 temp_output_279_0_g174527 = Input_Position9197_g174452;
				half3 WorldPosition238_g174527 = temp_output_279_0_g174527;
				half4 localSamplePlanar2D238_g174527 = SamplePlanar2D( Texture238_g174527 , Sampler238_g174527 , Coords238_g174527 , WorldPosition238_g174527 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler246_g174527 = SS19_g174558;
				half4 Coords246_g174527 = temp_output_37_0_g174527;
				half3 WorldPosition246_g174527 = temp_output_279_0_g174527;
				float3 temp_output_280_0_g174527 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174527 = temp_output_280_0_g174527;
				half4 localSamplePlanar3D246_g174527 = SamplePlanar3D( Texture246_g174527 , Sampler246_g174527 , Coords246_g174527 , WorldPosition246_g174527 , WorldNormal246_g174527 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler234_g174527 = SS19_g174558;
				float4 Coords234_g174527 = temp_output_37_0_g174527;
				float3 WorldPosition234_g174527 = temp_output_279_0_g174527;
				float4 localSampleStochastic2D234_g174527 = SampleStochastic2D( Texture234_g174527 , Sampler234_g174527 , Coords234_g174527 , WorldPosition234_g174527 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler263_g174527 = SS19_g174558;
				half4 Coords263_g174527 = temp_output_37_0_g174527;
				half3 WorldPosition263_g174527 = temp_output_279_0_g174527;
				half3 WorldNormal263_g174527 = temp_output_280_0_g174527;
				half4 localSampleStochastic3D263_g174527 = SampleStochastic3D( Texture263_g174527 , Sampler263_g174527 , Coords263_g174527 , WorldPosition263_g174527 , WorldNormal263_g174527 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8974_g174452 = localSamplePlanar2D238_g174527;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8974_g174452 = localSamplePlanar3D246_g174527;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8974_g174452 = localSampleStochastic2D234_g174527;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8974_g174452 = localSampleStochastic3D263_g174527;
				#else
				float4 staticSwitch8974_g174452 = localSamplePlanar2D238_g174527;
				#endif
				half4 Layer338_g174481 = staticSwitch8974_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler238_g174528 = SS19_g174558;
				float4 temp_output_37_0_g174528 = Input_Terrain_Coords_168959_g174452;
				half4 Coords238_g174528 = temp_output_37_0_g174528;
				float3 temp_output_279_0_g174528 = Input_Position9197_g174452;
				half3 WorldPosition238_g174528 = temp_output_279_0_g174528;
				half4 localSamplePlanar2D238_g174528 = SamplePlanar2D( Texture238_g174528 , Sampler238_g174528 , Coords238_g174528 , WorldPosition238_g174528 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler246_g174528 = SS19_g174558;
				half4 Coords246_g174528 = temp_output_37_0_g174528;
				half3 WorldPosition246_g174528 = temp_output_279_0_g174528;
				float3 temp_output_280_0_g174528 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174528 = temp_output_280_0_g174528;
				half4 localSamplePlanar3D246_g174528 = SamplePlanar3D( Texture246_g174528 , Sampler246_g174528 , Coords246_g174528 , WorldPosition246_g174528 , WorldNormal246_g174528 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler234_g174528 = SS19_g174558;
				float4 Coords234_g174528 = temp_output_37_0_g174528;
				float3 WorldPosition234_g174528 = temp_output_279_0_g174528;
				float4 localSampleStochastic2D234_g174528 = SampleStochastic2D( Texture234_g174528 , Sampler234_g174528 , Coords234_g174528 , WorldPosition234_g174528 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler263_g174528 = SS19_g174558;
				half4 Coords263_g174528 = temp_output_37_0_g174528;
				half3 WorldPosition263_g174528 = temp_output_279_0_g174528;
				half3 WorldNormal263_g174528 = temp_output_280_0_g174528;
				half4 localSampleStochastic3D263_g174528 = SampleStochastic3D( Texture263_g174528 , Sampler263_g174528 , Coords263_g174528 , WorldPosition263_g174528 , WorldNormal263_g174528 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8975_g174452 = localSamplePlanar2D238_g174528;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8975_g174452 = localSamplePlanar3D246_g174528;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8975_g174452 = localSampleStochastic2D234_g174528;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8975_g174452 = localSampleStochastic3D263_g174528;
				#else
				float4 staticSwitch8975_g174452 = localSamplePlanar2D238_g174528;
				#endif
				half4 Layer439_g174481 = staticSwitch8975_g174452;
				float4 weightedBlendVar31_g174481 = Weights52_g174481;
				float4 weightedBlend31_g174481 = ( weightedBlendVar31_g174481.x*Layer133_g174481 + weightedBlendVar31_g174481.y*Layer237_g174481 + weightedBlendVar31_g174481.z*Layer338_g174481 + weightedBlendVar31_g174481.w*Layer439_g174481 );
				half4 Terrain_AAAA_168986_g174452 = weightedBlend31_g174481;
				half4 Layer_1644_g174460 = Terrain_AAAA_168986_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174460 = Layer_045_g174460;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174460 = ( Layer_045_g174460 + Layer_0810_g174460 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174460 = ( Layer_045_g174460 + Layer_0810_g174460 + Layer_1243_g174460 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174460 = ( Layer_045_g174460 + Layer_0810_g174460 + Layer_1243_g174460 + Layer_1644_g174460 );
				#else
				float4 staticSwitch40_g174460 = Layer_045_g174460;
				#endif
				half4 Blend_Albedo7468_g174452 = staticSwitch40_g174460;
				half4 Weights52_g174546 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174546 = _TerrainColor1;
				half4 Layer237_g174546 = _TerrainColor2;
				half4 Layer338_g174546 = _TerrainColor3;
				half4 Layer439_g174546 = _TerrainColor4;
				float4 weightedBlendVar31_g174546 = Weights52_g174546;
				float4 weightedBlend31_g174546 = ( weightedBlendVar31_g174546.x*Layer133_g174546 + weightedBlendVar31_g174546.y*Layer237_g174546 + weightedBlendVar31_g174546.z*Layer338_g174546 + weightedBlendVar31_g174546.w*Layer439_g174546 );
				half4 Terrain_Color_049349_g174452 = weightedBlend31_g174546;
				half4 Layer_045_g174551 = Terrain_Color_049349_g174452;
				half4 Weights52_g174547 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174547 = _TerrainColor5;
				half4 Layer237_g174547 = _TerrainColor6;
				half4 Layer338_g174547 = _TerrainColor7;
				half4 Layer439_g174547 = _TerrainColor8;
				float4 weightedBlendVar31_g174547 = Weights52_g174547;
				float4 weightedBlend31_g174547 = ( weightedBlendVar31_g174547.x*Layer133_g174547 + weightedBlendVar31_g174547.y*Layer237_g174547 + weightedBlendVar31_g174547.z*Layer338_g174547 + weightedBlendVar31_g174547.w*Layer439_g174547 );
				half4 Terrain_Color_089361_g174452 = weightedBlend31_g174547;
				half4 Layer_0810_g174551 = Terrain_Color_089361_g174452;
				half4 Weights52_g174548 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174548 = _TerrainColor9;
				half4 Layer237_g174548 = _TerrainColor10;
				half4 Layer338_g174548 = _TerrainColor11;
				half4 Layer439_g174548 = _TerrainColor12;
				float4 weightedBlendVar31_g174548 = Weights52_g174548;
				float4 weightedBlend31_g174548 = ( weightedBlendVar31_g174548.x*Layer133_g174548 + weightedBlendVar31_g174548.y*Layer237_g174548 + weightedBlendVar31_g174548.z*Layer338_g174548 + weightedBlendVar31_g174548.w*Layer439_g174548 );
				half4 Terrain_Color_129373_g174452 = weightedBlend31_g174548;
				half4 Layer_1243_g174551 = Terrain_Color_129373_g174452;
				half4 Weights52_g174549 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174549 = _TerrainColor13;
				half4 Layer237_g174549 = _TerrainColor14;
				half4 Layer338_g174549 = _TerrainColor15;
				half4 Layer439_g174549 = _TerrainColor16;
				float4 weightedBlendVar31_g174549 = Weights52_g174549;
				float4 weightedBlend31_g174549 = ( weightedBlendVar31_g174549.x*Layer133_g174549 + weightedBlendVar31_g174549.y*Layer237_g174549 + weightedBlendVar31_g174549.z*Layer338_g174549 + weightedBlendVar31_g174549.w*Layer439_g174549 );
				half4 Terrain_Color_169381_g174452 = weightedBlend31_g174549;
				half4 Layer_1644_g174551 = Terrain_Color_169381_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174551 = Layer_045_g174551;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174551 = ( Layer_045_g174551 + Layer_0810_g174551 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174551 = ( Layer_045_g174551 + Layer_0810_g174551 + Layer_1243_g174551 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174551 = ( Layer_045_g174551 + Layer_0810_g174551 + Layer_1243_g174551 + Layer_1644_g174551 );
				#else
				float4 staticSwitch40_g174551 = Layer_045_g174551;
				#endif
				half4 Blend_TerrainColor9387_g174452 = staticSwitch40_g174551;
				half3 Final_Albedo9144_g174452 = ( (Blend_Albedo7468_g174452).xyz * (Blend_TerrainColor9387_g174452).rgb * (_TerrainColor).rgb );
				half3 Local_Albedo768_g174425 = Final_Albedo9144_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174446) = _TerrainMaskTex;
				SamplerState Sampler276_g174446 = sampler_Linear_Repeat;
				float4 temp_output_6_0_g174444 = _terrain_mask_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174444 = ( temp_output_6_0_g174444 + ( ( _TerrainMaskSampleMode + _TerrainMaskCoordMode + _TerrainMaskCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174444 = temp_output_6_0_g174444;
				#endif
				half4 Local_MaskCoords813_g174425 = staticSwitch14_g174444;
				float4 temp_output_37_0_g174446 = Local_MaskCoords813_g174425;
				half4 Coords276_g174446 = temp_output_37_0_g174446;
				half2 TexCoord276_g174446 = IN.ase_texcoord3.xy;
				half4 localSampleMain276_g174446 = SampleMain( Texture276_g174446 , Sampler276_g174446 , Coords276_g174446 , TexCoord276_g174446 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174446) = _TerrainMaskTex;
				SamplerState Sampler275_g174446 = sampler_Linear_Repeat;
				half4 Coords275_g174446 = temp_output_37_0_g174446;
				half2 TexCoord275_g174446 = IN.ase_texcoord4.xy;
				half4 localSampleExtra275_g174446 = SampleExtra( Texture275_g174446 , Sampler275_g174446 , Coords275_g174446 , TexCoord275_g174446 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174446) = _TerrainMaskTex;
				SamplerState Sampler238_g174446 = sampler_Linear_Repeat;
				half4 Coords238_g174446 = temp_output_37_0_g174446;
				float3 temp_output_279_0_g174446 = Model_PositionWO636_g174425;
				half3 WorldPosition238_g174446 = temp_output_279_0_g174446;
				half4 localSamplePlanar2D238_g174446 = SamplePlanar2D( Texture238_g174446 , Sampler238_g174446 , Coords238_g174446 , WorldPosition238_g174446 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174446) = _TerrainMaskTex;
				SamplerState Sampler246_g174446 = sampler_Linear_Repeat;
				half4 Coords246_g174446 = temp_output_37_0_g174446;
				half3 WorldPosition246_g174446 = temp_output_279_0_g174446;
				float3 temp_output_280_0_g174446 = Model_NormalRawWS869_g174425;
				half3 WorldNormal246_g174446 = temp_output_280_0_g174446;
				half4 localSamplePlanar3D246_g174446 = SamplePlanar3D( Texture246_g174446 , Sampler246_g174446 , Coords246_g174446 , WorldPosition246_g174446 , WorldNormal246_g174446 );
				#if defined( TVE_TERRAIN_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch817_g174425 = localSampleMain276_g174446;
				#elif defined( TVE_TERRAIN_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch817_g174425 = localSampleExtra275_g174446;
				#elif defined( TVE_TERRAIN_MASK_SAMPLE_PLANAR_2D )
				float4 staticSwitch817_g174425 = localSamplePlanar2D238_g174446;
				#elif defined( TVE_TERRAIN_MASK_SAMPLE_PLANAR_3D )
				float4 staticSwitch817_g174425 = localSamplePlanar3D246_g174446;
				#else
				float4 staticSwitch817_g174425 = localSampleMain276_g174446;
				#endif
				half4 Local_MaskTex861_g174425 = staticSwitch817_g174425;
				float clampResult17_g174435 = clamp( (Local_MaskTex861_g174425).x , 0.0001 , 0.9999 );
				float temp_output_7_0_g174436 = _TerrainMaskRemap.x;
				float temp_output_10_0_g174436 = ( _TerrainMaskRemap.y - temp_output_7_0_g174436 );
				float lerpResult1108_g174425 = lerp( 1.0 , saturate( ( ( clampResult17_g174435 - temp_output_7_0_g174436 ) / ( temp_output_10_0_g174436 + 0.0001 ) ) ) , _TerrainMaskValue);
				half Detail_TexMask429_g174425 = lerpResult1108_g174425;
				half3 Visual_NormalWS953_g174425 = Out_NormalWS4_g174428;
				float clampResult17_g174437 = clamp( saturate( (Visual_NormalWS953_g174425).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174438 = _TerrainProjRemap.x;
				float temp_output_10_0_g174438 = ( _TerrainProjRemap.y - temp_output_7_0_g174438 );
				float lerpResult1106_g174425 = lerp( 1.0 , saturate( ( ( clampResult17_g174437 - temp_output_7_0_g174438 ) / ( temp_output_10_0_g174438 + 0.0001 ) ) ) , _TerrainProjValue);
				half Blend_ProjMask912_g174425 = lerpResult1106_g174425;
				TVEGlobalData Data15_g174430 = Data204_g173897;
				float Out_Dummy15_g174430 = 0;
				float4 Out_CoatParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174430 = float4( 0,0,0,0 );
				Out_Dummy15_g174430 = Data15_g174430.Dummy;
				Out_CoatParams15_g174430 = Data15_g174430.CoatParams;
				Out_PaintParams15_g174430 = Data15_g174430.PaintParams;
				Out_GlowParams15_g174430 = Data15_g174430.GlowParams;
				Out_AtmoParams15_g174430= Data15_g174430.AtmoParams;
				Out_FadeParams15_g174430= Data15_g174430.FadeParams;
				Out_FormParams15_g174430 = Data15_g174430.FormParams;
				Out_LandParams15_g174430 = Data15_g174430.LandParams;
				Out_WindParams15_g174430 = Data15_g174430.WindParams;
				Out_PushParams15_g174430 = Data15_g174430.PushParams;
				half4 Global_CoatParams972_g174425 = Out_CoatParams15_g174430;
				float lerpResult1103_g174425 = lerp( 1.0 , (Global_CoatParams972_g174425).x , TVE_IsEnabled);
				#ifdef TVE_TERRAIN_ELEMENT
				float staticSwitch965_g174425 = lerpResult1103_g174425;
				#else
				float staticSwitch965_g174425 = 1.0;
				#endif
				half Blend_GlobalMask968_g174425 = staticSwitch965_g174425;
				half4 Global_FormParams1018_g174425 = Out_FormParams15_g174430;
				float temp_output_1128_0_g174425 = saturate( ( ( (Global_FormParams1018_g174425).z - (Model_PositionWO636_g174425).y ) + _TerrainLandOffsetValue ) );
				float lerpResult1130_g174425 = lerp( 1.0 , temp_output_1128_0_g174425 , ( _TerrainLandValue * _TerrainLandMode ));
				half Blend_LandMask_Mul1132_g174425 = lerpResult1130_g174425;
				half Blend_LandMask_Add1131_g174425 = ( temp_output_1128_0_g174425 * _TerrainLandValue );
				float clampResult17_g174450 = clamp( ( ( _TerrainIntensityValue * Detail_TexMask429_g174425 * Blend_ProjMask912_g174425 * Blend_GlobalMask968_g174425 * Blend_LandMask_Mul1132_g174425 ) + Blend_LandMask_Add1131_g174425 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174449 = _TerrainBlendRemap.x;
				float temp_output_10_0_g174449 = ( _TerrainBlendRemap.y - temp_output_7_0_g174449 );
				half Terrain_Mask412_g174425 = saturate( ( ( clampResult17_g174450 - temp_output_7_0_g174449 ) / ( temp_output_10_0_g174449 + 0.0001 ) ) );
				float3 lerpResult989_g174425 = lerp( Visual_Albedo527_g174425 , Local_Albedo768_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float3 staticSwitch415_g174425 = lerpResult989_g174425;
				#else
				float3 staticSwitch415_g174425 = Visual_Albedo527_g174425;
				#endif
				half3 Final_Albedo601_g174425 = staticSwitch415_g174425;
				float3 In_Albedo3_g174429 = Final_Albedo601_g174425;
				float3 In_AlbedoRaw3_g174429 = Final_Albedo601_g174425;
				half2 Visual_NormalTS529_g174425 = Out_NormalTS4_g174428;
				half4 Weights52_g174453 = Terrain_Weights_046781_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174544) = _TerrainNormalTex1;
				float localFilterTexture29_g174559 = ( 0.0 );
				SamplerState SamplerDefault29_g174559 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174559 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174559 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174559 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174559 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174559 = SamplerDefault29_g174559;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174559 = SamplerDefault29_g174559;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174559 = SamplerPoint29_g174559;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174559 = SamplerLow29_g174559;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174559 = SamplerMedium29_g174559;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174559 = SamplerHigh29_g174559;
				#endif
				SamplerState Sampler238_g174544 = SS29_g174559;
				float4 temp_output_37_0_g174544 = Input_Terrain_Coords_016785_g174452;
				half4 Coords238_g174544 = temp_output_37_0_g174544;
				float3 temp_output_279_0_g174544 = Input_Position9197_g174452;
				half3 WorldPosition238_g174544 = temp_output_279_0_g174544;
				half4 localSamplePlanar2D238_g174544 = SamplePlanar2D( Texture238_g174544 , Sampler238_g174544 , Coords238_g174544 , WorldPosition238_g174544 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174544) = _TerrainNormalTex1;
				SamplerState Sampler246_g174544 = SS29_g174559;
				half4 Coords246_g174544 = temp_output_37_0_g174544;
				half3 WorldPosition246_g174544 = temp_output_279_0_g174544;
				float3 temp_output_280_0_g174544 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174544 = temp_output_280_0_g174544;
				half4 localSamplePlanar3D246_g174544 = SamplePlanar3D( Texture246_g174544 , Sampler246_g174544 , Coords246_g174544 , WorldPosition246_g174544 , WorldNormal246_g174544 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174544) = _TerrainNormalTex1;
				SamplerState Sampler234_g174544 = SS29_g174559;
				float4 Coords234_g174544 = temp_output_37_0_g174544;
				float3 WorldPosition234_g174544 = temp_output_279_0_g174544;
				float4 localSampleStochastic2D234_g174544 = SampleStochastic2D( Texture234_g174544 , Sampler234_g174544 , Coords234_g174544 , WorldPosition234_g174544 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174544) = _TerrainNormalTex1;
				SamplerState Sampler263_g174544 = SS29_g174559;
				half4 Coords263_g174544 = temp_output_37_0_g174544;
				half3 WorldPosition263_g174544 = temp_output_279_0_g174544;
				half3 WorldNormal263_g174544 = temp_output_280_0_g174544;
				half4 localSampleStochastic3D263_g174544 = SampleStochastic3D( Texture263_g174544 , Sampler263_g174544 , Coords263_g174544 , WorldPosition263_g174544 , WorldNormal263_g174544 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8635_g174452 = localSamplePlanar2D238_g174544;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8635_g174452 = localSamplePlanar3D246_g174544;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8635_g174452 = localSampleStochastic2D234_g174544;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8635_g174452 = localSampleStochastic3D263_g174544;
				#else
				float4 staticSwitch8635_g174452 = localSamplePlanar2D238_g174544;
				#endif
				half4 Layer133_g174453 = staticSwitch8635_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174500) = _TerrainNormalTex2;
				SamplerState Sampler238_g174500 = SS29_g174559;
				float4 temp_output_37_0_g174500 = Input_Terrain_Coords_026787_g174452;
				half4 Coords238_g174500 = temp_output_37_0_g174500;
				float3 temp_output_279_0_g174500 = Input_Position9197_g174452;
				half3 WorldPosition238_g174500 = temp_output_279_0_g174500;
				half4 localSamplePlanar2D238_g174500 = SamplePlanar2D( Texture238_g174500 , Sampler238_g174500 , Coords238_g174500 , WorldPosition238_g174500 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174500) = _TerrainNormalTex2;
				SamplerState Sampler246_g174500 = SS29_g174559;
				half4 Coords246_g174500 = temp_output_37_0_g174500;
				half3 WorldPosition246_g174500 = temp_output_279_0_g174500;
				float3 temp_output_280_0_g174500 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174500 = temp_output_280_0_g174500;
				half4 localSamplePlanar3D246_g174500 = SamplePlanar3D( Texture246_g174500 , Sampler246_g174500 , Coords246_g174500 , WorldPosition246_g174500 , WorldNormal246_g174500 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174500) = _TerrainNormalTex2;
				SamplerState Sampler234_g174500 = SS29_g174559;
				float4 Coords234_g174500 = temp_output_37_0_g174500;
				float3 WorldPosition234_g174500 = temp_output_279_0_g174500;
				float4 localSampleStochastic2D234_g174500 = SampleStochastic2D( Texture234_g174500 , Sampler234_g174500 , Coords234_g174500 , WorldPosition234_g174500 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174500) = _TerrainNormalTex2;
				SamplerState Sampler263_g174500 = SS29_g174559;
				half4 Coords263_g174500 = temp_output_37_0_g174500;
				half3 WorldPosition263_g174500 = temp_output_279_0_g174500;
				half3 WorldNormal263_g174500 = temp_output_280_0_g174500;
				half4 localSampleStochastic3D263_g174500 = SampleStochastic3D( Texture263_g174500 , Sampler263_g174500 , Coords263_g174500 , WorldPosition263_g174500 , WorldNormal263_g174500 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8636_g174452 = localSamplePlanar2D238_g174500;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8636_g174452 = localSamplePlanar3D246_g174500;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8636_g174452 = localSampleStochastic2D234_g174500;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8636_g174452 = localSampleStochastic3D263_g174500;
				#else
				float4 staticSwitch8636_g174452 = localSamplePlanar2D238_g174500;
				#endif
				half4 Layer237_g174453 = staticSwitch8636_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174503) = _TerrainNormalTex3;
				SamplerState Sampler238_g174503 = SS29_g174559;
				float4 temp_output_37_0_g174503 = Input_Terrain_Coords_036789_g174452;
				half4 Coords238_g174503 = temp_output_37_0_g174503;
				float3 temp_output_279_0_g174503 = Input_Position9197_g174452;
				half3 WorldPosition238_g174503 = temp_output_279_0_g174503;
				half4 localSamplePlanar2D238_g174503 = SamplePlanar2D( Texture238_g174503 , Sampler238_g174503 , Coords238_g174503 , WorldPosition238_g174503 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174503) = _TerrainNormalTex3;
				SamplerState Sampler246_g174503 = SS29_g174559;
				half4 Coords246_g174503 = temp_output_37_0_g174503;
				half3 WorldPosition246_g174503 = temp_output_279_0_g174503;
				float3 temp_output_280_0_g174503 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174503 = temp_output_280_0_g174503;
				half4 localSamplePlanar3D246_g174503 = SamplePlanar3D( Texture246_g174503 , Sampler246_g174503 , Coords246_g174503 , WorldPosition246_g174503 , WorldNormal246_g174503 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174503) = _TerrainNormalTex3;
				SamplerState Sampler234_g174503 = SS29_g174559;
				float4 Coords234_g174503 = temp_output_37_0_g174503;
				float3 WorldPosition234_g174503 = temp_output_279_0_g174503;
				float4 localSampleStochastic2D234_g174503 = SampleStochastic2D( Texture234_g174503 , Sampler234_g174503 , Coords234_g174503 , WorldPosition234_g174503 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174503) = _TerrainNormalTex3;
				SamplerState Sampler263_g174503 = SS29_g174559;
				half4 Coords263_g174503 = temp_output_37_0_g174503;
				half3 WorldPosition263_g174503 = temp_output_279_0_g174503;
				half3 WorldNormal263_g174503 = temp_output_280_0_g174503;
				half4 localSampleStochastic3D263_g174503 = SampleStochastic3D( Texture263_g174503 , Sampler263_g174503 , Coords263_g174503 , WorldPosition263_g174503 , WorldNormal263_g174503 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8637_g174452 = localSamplePlanar2D238_g174503;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8637_g174452 = localSamplePlanar3D246_g174503;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8637_g174452 = localSampleStochastic2D234_g174503;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8637_g174452 = localSampleStochastic3D263_g174503;
				#else
				float4 staticSwitch8637_g174452 = localSamplePlanar2D238_g174503;
				#endif
				half4 Layer338_g174453 = staticSwitch8637_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174505) = _TerrainNormalTex4;
				SamplerState Sampler238_g174505 = SS29_g174559;
				float4 temp_output_37_0_g174505 = Input_Terrain_Coords_046791_g174452;
				half4 Coords238_g174505 = temp_output_37_0_g174505;
				float3 temp_output_279_0_g174505 = Input_Position9197_g174452;
				half3 WorldPosition238_g174505 = temp_output_279_0_g174505;
				half4 localSamplePlanar2D238_g174505 = SamplePlanar2D( Texture238_g174505 , Sampler238_g174505 , Coords238_g174505 , WorldPosition238_g174505 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174505) = _TerrainNormalTex4;
				SamplerState Sampler246_g174505 = SS29_g174559;
				half4 Coords246_g174505 = temp_output_37_0_g174505;
				half3 WorldPosition246_g174505 = temp_output_279_0_g174505;
				float3 temp_output_280_0_g174505 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174505 = temp_output_280_0_g174505;
				half4 localSamplePlanar3D246_g174505 = SamplePlanar3D( Texture246_g174505 , Sampler246_g174505 , Coords246_g174505 , WorldPosition246_g174505 , WorldNormal246_g174505 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174505) = _TerrainNormalTex4;
				SamplerState Sampler234_g174505 = SS29_g174559;
				float4 Coords234_g174505 = temp_output_37_0_g174505;
				float3 WorldPosition234_g174505 = temp_output_279_0_g174505;
				float4 localSampleStochastic2D234_g174505 = SampleStochastic2D( Texture234_g174505 , Sampler234_g174505 , Coords234_g174505 , WorldPosition234_g174505 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174505) = _TerrainNormalTex4;
				SamplerState Sampler263_g174505 = SS29_g174559;
				half4 Coords263_g174505 = temp_output_37_0_g174505;
				half3 WorldPosition263_g174505 = temp_output_279_0_g174505;
				half3 WorldNormal263_g174505 = temp_output_280_0_g174505;
				half4 localSampleStochastic3D263_g174505 = SampleStochastic3D( Texture263_g174505 , Sampler263_g174505 , Coords263_g174505 , WorldPosition263_g174505 , WorldNormal263_g174505 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8638_g174452 = localSamplePlanar2D238_g174505;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8638_g174452 = localSamplePlanar3D246_g174505;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8638_g174452 = localSampleStochastic2D234_g174505;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8638_g174452 = localSampleStochastic3D263_g174505;
				#else
				float4 staticSwitch8638_g174452 = localSamplePlanar2D238_g174505;
				#endif
				half4 Layer439_g174453 = staticSwitch8638_g174452;
				float4 weightedBlendVar31_g174453 = Weights52_g174453;
				float4 weightedBlend31_g174453 = ( weightedBlendVar31_g174453.x*Layer133_g174453 + weightedBlendVar31_g174453.y*Layer237_g174453 + weightedBlendVar31_g174453.z*Layer338_g174453 + weightedBlendVar31_g174453.w*Layer439_g174453 );
				half4 Terrain_B_047202_g174452 = weightedBlend31_g174453;
				half4 Layer_045_g174459 = Terrain_B_047202_g174452;
				half4 Weights52_g174468 = Terrain_Weights_087340_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174509) = _TerrainNormalTex5;
				SamplerState Sampler238_g174509 = SS29_g174559;
				float4 temp_output_37_0_g174509 = Input_Terrain_Coords_058750_g174452;
				half4 Coords238_g174509 = temp_output_37_0_g174509;
				float3 temp_output_279_0_g174509 = Input_Position9197_g174452;
				half3 WorldPosition238_g174509 = temp_output_279_0_g174509;
				half4 localSamplePlanar2D238_g174509 = SamplePlanar2D( Texture238_g174509 , Sampler238_g174509 , Coords238_g174509 , WorldPosition238_g174509 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174509) = _TerrainNormalTex5;
				SamplerState Sampler246_g174509 = SS29_g174559;
				half4 Coords246_g174509 = temp_output_37_0_g174509;
				half3 WorldPosition246_g174509 = temp_output_279_0_g174509;
				float3 temp_output_280_0_g174509 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174509 = temp_output_280_0_g174509;
				half4 localSamplePlanar3D246_g174509 = SamplePlanar3D( Texture246_g174509 , Sampler246_g174509 , Coords246_g174509 , WorldPosition246_g174509 , WorldNormal246_g174509 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174509) = _TerrainNormalTex5;
				SamplerState Sampler234_g174509 = SS29_g174559;
				float4 Coords234_g174509 = temp_output_37_0_g174509;
				float3 WorldPosition234_g174509 = temp_output_279_0_g174509;
				float4 localSampleStochastic2D234_g174509 = SampleStochastic2D( Texture234_g174509 , Sampler234_g174509 , Coords234_g174509 , WorldPosition234_g174509 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174509) = _TerrainNormalTex5;
				SamplerState Sampler263_g174509 = SS29_g174559;
				half4 Coords263_g174509 = temp_output_37_0_g174509;
				half3 WorldPosition263_g174509 = temp_output_279_0_g174509;
				half3 WorldNormal263_g174509 = temp_output_280_0_g174509;
				half4 localSampleStochastic3D263_g174509 = SampleStochastic3D( Texture263_g174509 , Sampler263_g174509 , Coords263_g174509 , WorldPosition263_g174509 , WorldNormal263_g174509 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8686_g174452 = localSamplePlanar2D238_g174509;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8686_g174452 = localSamplePlanar3D246_g174509;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8686_g174452 = localSampleStochastic2D234_g174509;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8686_g174452 = localSampleStochastic3D263_g174509;
				#else
				float4 staticSwitch8686_g174452 = localSamplePlanar2D238_g174509;
				#endif
				half4 Layer133_g174468 = staticSwitch8686_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174538) = _TerrainNormalTex6;
				SamplerState Sampler238_g174538 = SS29_g174559;
				float4 temp_output_37_0_g174538 = Input_Terrain_Coords_068751_g174452;
				half4 Coords238_g174538 = temp_output_37_0_g174538;
				float3 temp_output_279_0_g174538 = Input_Position9197_g174452;
				half3 WorldPosition238_g174538 = temp_output_279_0_g174538;
				half4 localSamplePlanar2D238_g174538 = SamplePlanar2D( Texture238_g174538 , Sampler238_g174538 , Coords238_g174538 , WorldPosition238_g174538 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174538) = _TerrainNormalTex6;
				SamplerState Sampler246_g174538 = SS29_g174559;
				half4 Coords246_g174538 = temp_output_37_0_g174538;
				half3 WorldPosition246_g174538 = temp_output_279_0_g174538;
				float3 temp_output_280_0_g174538 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174538 = temp_output_280_0_g174538;
				half4 localSamplePlanar3D246_g174538 = SamplePlanar3D( Texture246_g174538 , Sampler246_g174538 , Coords246_g174538 , WorldPosition246_g174538 , WorldNormal246_g174538 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174538) = _TerrainNormalTex6;
				SamplerState Sampler234_g174538 = SS29_g174559;
				float4 Coords234_g174538 = temp_output_37_0_g174538;
				float3 WorldPosition234_g174538 = temp_output_279_0_g174538;
				float4 localSampleStochastic2D234_g174538 = SampleStochastic2D( Texture234_g174538 , Sampler234_g174538 , Coords234_g174538 , WorldPosition234_g174538 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174538) = _TerrainNormalTex6;
				SamplerState Sampler263_g174538 = SS29_g174559;
				half4 Coords263_g174538 = temp_output_37_0_g174538;
				half3 WorldPosition263_g174538 = temp_output_279_0_g174538;
				half3 WorldNormal263_g174538 = temp_output_280_0_g174538;
				half4 localSampleStochastic3D263_g174538 = SampleStochastic3D( Texture263_g174538 , Sampler263_g174538 , Coords263_g174538 , WorldPosition263_g174538 , WorldNormal263_g174538 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8687_g174452 = localSamplePlanar2D238_g174538;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8687_g174452 = localSamplePlanar3D246_g174538;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8687_g174452 = localSampleStochastic2D234_g174538;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8687_g174452 = localSampleStochastic3D263_g174538;
				#else
				float4 staticSwitch8687_g174452 = localSamplePlanar2D238_g174538;
				#endif
				half4 Layer237_g174468 = staticSwitch8687_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174539) = _TerrainNormalTex7;
				SamplerState Sampler238_g174539 = SS29_g174559;
				float4 temp_output_37_0_g174539 = Input_Terrain_Coords_078752_g174452;
				half4 Coords238_g174539 = temp_output_37_0_g174539;
				float3 temp_output_279_0_g174539 = Input_Position9197_g174452;
				half3 WorldPosition238_g174539 = temp_output_279_0_g174539;
				half4 localSamplePlanar2D238_g174539 = SamplePlanar2D( Texture238_g174539 , Sampler238_g174539 , Coords238_g174539 , WorldPosition238_g174539 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174539) = _TerrainNormalTex7;
				SamplerState Sampler246_g174539 = SS29_g174559;
				half4 Coords246_g174539 = temp_output_37_0_g174539;
				half3 WorldPosition246_g174539 = temp_output_279_0_g174539;
				float3 temp_output_280_0_g174539 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174539 = temp_output_280_0_g174539;
				half4 localSamplePlanar3D246_g174539 = SamplePlanar3D( Texture246_g174539 , Sampler246_g174539 , Coords246_g174539 , WorldPosition246_g174539 , WorldNormal246_g174539 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174539) = _TerrainNormalTex7;
				SamplerState Sampler234_g174539 = SS29_g174559;
				float4 Coords234_g174539 = temp_output_37_0_g174539;
				float3 WorldPosition234_g174539 = temp_output_279_0_g174539;
				float4 localSampleStochastic2D234_g174539 = SampleStochastic2D( Texture234_g174539 , Sampler234_g174539 , Coords234_g174539 , WorldPosition234_g174539 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174539) = _TerrainNormalTex7;
				SamplerState Sampler263_g174539 = SS29_g174559;
				half4 Coords263_g174539 = temp_output_37_0_g174539;
				half3 WorldPosition263_g174539 = temp_output_279_0_g174539;
				half3 WorldNormal263_g174539 = temp_output_280_0_g174539;
				half4 localSampleStochastic3D263_g174539 = SampleStochastic3D( Texture263_g174539 , Sampler263_g174539 , Coords263_g174539 , WorldPosition263_g174539 , WorldNormal263_g174539 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8688_g174452 = localSamplePlanar2D238_g174539;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8688_g174452 = localSamplePlanar3D246_g174539;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8688_g174452 = localSampleStochastic2D234_g174539;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8688_g174452 = localSampleStochastic3D263_g174539;
				#else
				float4 staticSwitch8688_g174452 = localSamplePlanar2D238_g174539;
				#endif
				half4 Layer338_g174468 = staticSwitch8688_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174540) = _TerrainNormalTex8;
				SamplerState Sampler238_g174540 = SS29_g174559;
				float4 temp_output_37_0_g174540 = Input_Terrain_Coords_088749_g174452;
				half4 Coords238_g174540 = temp_output_37_0_g174540;
				float3 temp_output_279_0_g174540 = Input_Position9197_g174452;
				half3 WorldPosition238_g174540 = temp_output_279_0_g174540;
				half4 localSamplePlanar2D238_g174540 = SamplePlanar2D( Texture238_g174540 , Sampler238_g174540 , Coords238_g174540 , WorldPosition238_g174540 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174540) = _TerrainNormalTex8;
				SamplerState Sampler246_g174540 = SS29_g174559;
				half4 Coords246_g174540 = temp_output_37_0_g174540;
				half3 WorldPosition246_g174540 = temp_output_279_0_g174540;
				float3 temp_output_280_0_g174540 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174540 = temp_output_280_0_g174540;
				half4 localSamplePlanar3D246_g174540 = SamplePlanar3D( Texture246_g174540 , Sampler246_g174540 , Coords246_g174540 , WorldPosition246_g174540 , WorldNormal246_g174540 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174540) = _TerrainNormalTex8;
				SamplerState Sampler234_g174540 = SS29_g174559;
				float4 Coords234_g174540 = temp_output_37_0_g174540;
				float3 WorldPosition234_g174540 = temp_output_279_0_g174540;
				float4 localSampleStochastic2D234_g174540 = SampleStochastic2D( Texture234_g174540 , Sampler234_g174540 , Coords234_g174540 , WorldPosition234_g174540 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174540) = _TerrainNormalTex8;
				SamplerState Sampler263_g174540 = SS29_g174559;
				half4 Coords263_g174540 = temp_output_37_0_g174540;
				half3 WorldPosition263_g174540 = temp_output_279_0_g174540;
				half3 WorldNormal263_g174540 = temp_output_280_0_g174540;
				half4 localSampleStochastic3D263_g174540 = SampleStochastic3D( Texture263_g174540 , Sampler263_g174540 , Coords263_g174540 , WorldPosition263_g174540 , WorldNormal263_g174540 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8689_g174452 = localSamplePlanar2D238_g174540;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8689_g174452 = localSamplePlanar3D246_g174540;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8689_g174452 = localSampleStochastic2D234_g174540;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8689_g174452 = localSampleStochastic3D263_g174540;
				#else
				float4 staticSwitch8689_g174452 = localSamplePlanar2D238_g174540;
				#endif
				half4 Layer439_g174468 = staticSwitch8689_g174452;
				float4 weightedBlendVar31_g174468 = Weights52_g174468;
				float4 weightedBlend31_g174468 = ( weightedBlendVar31_g174468.x*Layer133_g174468 + weightedBlendVar31_g174468.y*Layer237_g174468 + weightedBlendVar31_g174468.z*Layer338_g174468 + weightedBlendVar31_g174468.w*Layer439_g174468 );
				half4 Terrain_B_088684_g174452 = weightedBlend31_g174468;
				half4 Layer_0810_g174459 = Terrain_B_088684_g174452;
				half4 Weights52_g174475 = Terrain_Weights_127710_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174512) = _TerrainNormalTex9;
				SamplerState Sampler238_g174512 = SS29_g174559;
				float4 temp_output_37_0_g174512 = Input_Terrain_Coords_098833_g174452;
				half4 Coords238_g174512 = temp_output_37_0_g174512;
				float3 temp_output_279_0_g174512 = Input_Position9197_g174452;
				half3 WorldPosition238_g174512 = temp_output_279_0_g174512;
				half4 localSamplePlanar2D238_g174512 = SamplePlanar2D( Texture238_g174512 , Sampler238_g174512 , Coords238_g174512 , WorldPosition238_g174512 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174512) = _TerrainNormalTex9;
				SamplerState Sampler246_g174512 = SS29_g174559;
				half4 Coords246_g174512 = temp_output_37_0_g174512;
				half3 WorldPosition246_g174512 = temp_output_279_0_g174512;
				float3 temp_output_280_0_g174512 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174512 = temp_output_280_0_g174512;
				half4 localSamplePlanar3D246_g174512 = SamplePlanar3D( Texture246_g174512 , Sampler246_g174512 , Coords246_g174512 , WorldPosition246_g174512 , WorldNormal246_g174512 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174512) = _TerrainNormalTex9;
				SamplerState Sampler234_g174512 = SS29_g174559;
				float4 Coords234_g174512 = temp_output_37_0_g174512;
				float3 WorldPosition234_g174512 = temp_output_279_0_g174512;
				float4 localSampleStochastic2D234_g174512 = SampleStochastic2D( Texture234_g174512 , Sampler234_g174512 , Coords234_g174512 , WorldPosition234_g174512 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174512) = _TerrainNormalTex9;
				SamplerState Sampler263_g174512 = SS29_g174559;
				half4 Coords263_g174512 = temp_output_37_0_g174512;
				half3 WorldPosition263_g174512 = temp_output_279_0_g174512;
				half3 WorldNormal263_g174512 = temp_output_280_0_g174512;
				half4 localSampleStochastic3D263_g174512 = SampleStochastic3D( Texture263_g174512 , Sampler263_g174512 , Coords263_g174512 , WorldPosition263_g174512 , WorldNormal263_g174512 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8849_g174452 = localSamplePlanar2D238_g174512;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8849_g174452 = localSamplePlanar3D246_g174512;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8849_g174452 = localSampleStochastic2D234_g174512;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8849_g174452 = localSampleStochastic3D263_g174512;
				#else
				float4 staticSwitch8849_g174452 = localSamplePlanar2D238_g174512;
				#endif
				half4 Layer133_g174475 = staticSwitch8849_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174517) = _TerrainNormalTex10;
				SamplerState Sampler238_g174517 = SS29_g174559;
				float4 temp_output_37_0_g174517 = Input_Terrain_Coords_108834_g174452;
				half4 Coords238_g174517 = temp_output_37_0_g174517;
				float3 temp_output_279_0_g174517 = Input_Position9197_g174452;
				half3 WorldPosition238_g174517 = temp_output_279_0_g174517;
				half4 localSamplePlanar2D238_g174517 = SamplePlanar2D( Texture238_g174517 , Sampler238_g174517 , Coords238_g174517 , WorldPosition238_g174517 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174517) = _TerrainNormalTex10;
				SamplerState Sampler246_g174517 = SS29_g174559;
				half4 Coords246_g174517 = temp_output_37_0_g174517;
				half3 WorldPosition246_g174517 = temp_output_279_0_g174517;
				float3 temp_output_280_0_g174517 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174517 = temp_output_280_0_g174517;
				half4 localSamplePlanar3D246_g174517 = SamplePlanar3D( Texture246_g174517 , Sampler246_g174517 , Coords246_g174517 , WorldPosition246_g174517 , WorldNormal246_g174517 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174517) = _TerrainNormalTex10;
				SamplerState Sampler234_g174517 = SS29_g174559;
				float4 Coords234_g174517 = temp_output_37_0_g174517;
				float3 WorldPosition234_g174517 = temp_output_279_0_g174517;
				float4 localSampleStochastic2D234_g174517 = SampleStochastic2D( Texture234_g174517 , Sampler234_g174517 , Coords234_g174517 , WorldPosition234_g174517 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174517) = _TerrainNormalTex10;
				SamplerState Sampler263_g174517 = SS29_g174559;
				half4 Coords263_g174517 = temp_output_37_0_g174517;
				half3 WorldPosition263_g174517 = temp_output_279_0_g174517;
				half3 WorldNormal263_g174517 = temp_output_280_0_g174517;
				half4 localSampleStochastic3D263_g174517 = SampleStochastic3D( Texture263_g174517 , Sampler263_g174517 , Coords263_g174517 , WorldPosition263_g174517 , WorldNormal263_g174517 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8876_g174452 = localSamplePlanar2D238_g174517;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8876_g174452 = localSamplePlanar3D246_g174517;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8876_g174452 = localSampleStochastic2D234_g174517;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8876_g174452 = localSampleStochastic3D263_g174517;
				#else
				float4 staticSwitch8876_g174452 = localSamplePlanar2D238_g174517;
				#endif
				half4 Layer237_g174475 = staticSwitch8876_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174518) = _TerrainNormalTex11;
				SamplerState Sampler238_g174518 = SS29_g174559;
				float4 temp_output_37_0_g174518 = Input_Terrain_Coords_118835_g174452;
				half4 Coords238_g174518 = temp_output_37_0_g174518;
				float3 temp_output_279_0_g174518 = Input_Position9197_g174452;
				half3 WorldPosition238_g174518 = temp_output_279_0_g174518;
				half4 localSamplePlanar2D238_g174518 = SamplePlanar2D( Texture238_g174518 , Sampler238_g174518 , Coords238_g174518 , WorldPosition238_g174518 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174518) = _TerrainNormalTex11;
				SamplerState Sampler246_g174518 = SS29_g174559;
				half4 Coords246_g174518 = temp_output_37_0_g174518;
				half3 WorldPosition246_g174518 = temp_output_279_0_g174518;
				float3 temp_output_280_0_g174518 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174518 = temp_output_280_0_g174518;
				half4 localSamplePlanar3D246_g174518 = SamplePlanar3D( Texture246_g174518 , Sampler246_g174518 , Coords246_g174518 , WorldPosition246_g174518 , WorldNormal246_g174518 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174518) = _TerrainNormalTex11;
				SamplerState Sampler234_g174518 = SS29_g174559;
				float4 Coords234_g174518 = temp_output_37_0_g174518;
				float3 WorldPosition234_g174518 = temp_output_279_0_g174518;
				float4 localSampleStochastic2D234_g174518 = SampleStochastic2D( Texture234_g174518 , Sampler234_g174518 , Coords234_g174518 , WorldPosition234_g174518 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174518) = _TerrainNormalTex11;
				SamplerState Sampler263_g174518 = SS29_g174559;
				half4 Coords263_g174518 = temp_output_37_0_g174518;
				half3 WorldPosition263_g174518 = temp_output_279_0_g174518;
				half3 WorldNormal263_g174518 = temp_output_280_0_g174518;
				half4 localSampleStochastic3D263_g174518 = SampleStochastic3D( Texture263_g174518 , Sampler263_g174518 , Coords263_g174518 , WorldPosition263_g174518 , WorldNormal263_g174518 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8850_g174452 = localSamplePlanar2D238_g174518;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8850_g174452 = localSamplePlanar3D246_g174518;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8850_g174452 = localSampleStochastic2D234_g174518;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8850_g174452 = localSampleStochastic3D263_g174518;
				#else
				float4 staticSwitch8850_g174452 = localSamplePlanar2D238_g174518;
				#endif
				half4 Layer338_g174475 = staticSwitch8850_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174519) = _TerrainNormalTex12;
				SamplerState Sampler238_g174519 = SS29_g174559;
				float4 temp_output_37_0_g174519 = Input_Terrain_Coords_128836_g174452;
				half4 Coords238_g174519 = temp_output_37_0_g174519;
				float3 temp_output_279_0_g174519 = Input_Position9197_g174452;
				half3 WorldPosition238_g174519 = temp_output_279_0_g174519;
				half4 localSamplePlanar2D238_g174519 = SamplePlanar2D( Texture238_g174519 , Sampler238_g174519 , Coords238_g174519 , WorldPosition238_g174519 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174519) = _TerrainNormalTex12;
				SamplerState Sampler246_g174519 = SS29_g174559;
				half4 Coords246_g174519 = temp_output_37_0_g174519;
				half3 WorldPosition246_g174519 = temp_output_279_0_g174519;
				float3 temp_output_280_0_g174519 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174519 = temp_output_280_0_g174519;
				half4 localSamplePlanar3D246_g174519 = SamplePlanar3D( Texture246_g174519 , Sampler246_g174519 , Coords246_g174519 , WorldPosition246_g174519 , WorldNormal246_g174519 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174519) = _TerrainNormalTex12;
				SamplerState Sampler234_g174519 = SS29_g174559;
				float4 Coords234_g174519 = temp_output_37_0_g174519;
				float3 WorldPosition234_g174519 = temp_output_279_0_g174519;
				float4 localSampleStochastic2D234_g174519 = SampleStochastic2D( Texture234_g174519 , Sampler234_g174519 , Coords234_g174519 , WorldPosition234_g174519 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174519) = _TerrainNormalTex12;
				SamplerState Sampler263_g174519 = SS29_g174559;
				half4 Coords263_g174519 = temp_output_37_0_g174519;
				half3 WorldPosition263_g174519 = temp_output_279_0_g174519;
				half3 WorldNormal263_g174519 = temp_output_280_0_g174519;
				half4 localSampleStochastic3D263_g174519 = SampleStochastic3D( Texture263_g174519 , Sampler263_g174519 , Coords263_g174519 , WorldPosition263_g174519 , WorldNormal263_g174519 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8877_g174452 = localSamplePlanar2D238_g174519;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8877_g174452 = localSamplePlanar3D246_g174519;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8877_g174452 = localSampleStochastic2D234_g174519;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8877_g174452 = localSampleStochastic3D263_g174519;
				#else
				float4 staticSwitch8877_g174452 = localSamplePlanar2D238_g174519;
				#endif
				half4 Layer439_g174475 = staticSwitch8877_g174452;
				float4 weightedBlendVar31_g174475 = Weights52_g174475;
				float4 weightedBlend31_g174475 = ( weightedBlendVar31_g174475.x*Layer133_g174475 + weightedBlendVar31_g174475.y*Layer237_g174475 + weightedBlendVar31_g174475.z*Layer338_g174475 + weightedBlendVar31_g174475.w*Layer439_g174475 );
				half4 Terrain_B_128865_g174452 = weightedBlend31_g174475;
				half4 Layer_1243_g174459 = Terrain_B_128865_g174452;
				half4 Weights52_g174482 = Terrain_Weights_167709_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174522) = _TerrainNormalTex13;
				SamplerState Sampler238_g174522 = SS29_g174559;
				float4 temp_output_37_0_g174522 = Input_Terrain_Coords_138960_g174452;
				half4 Coords238_g174522 = temp_output_37_0_g174522;
				float3 temp_output_279_0_g174522 = Input_Position9197_g174452;
				half3 WorldPosition238_g174522 = temp_output_279_0_g174522;
				half4 localSamplePlanar2D238_g174522 = SamplePlanar2D( Texture238_g174522 , Sampler238_g174522 , Coords238_g174522 , WorldPosition238_g174522 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174522) = _TerrainNormalTex13;
				SamplerState Sampler246_g174522 = SS29_g174559;
				half4 Coords246_g174522 = temp_output_37_0_g174522;
				half3 WorldPosition246_g174522 = temp_output_279_0_g174522;
				float3 temp_output_280_0_g174522 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174522 = temp_output_280_0_g174522;
				half4 localSamplePlanar3D246_g174522 = SamplePlanar3D( Texture246_g174522 , Sampler246_g174522 , Coords246_g174522 , WorldPosition246_g174522 , WorldNormal246_g174522 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174522) = _TerrainNormalTex13;
				SamplerState Sampler234_g174522 = SS29_g174559;
				float4 Coords234_g174522 = temp_output_37_0_g174522;
				float3 WorldPosition234_g174522 = temp_output_279_0_g174522;
				float4 localSampleStochastic2D234_g174522 = SampleStochastic2D( Texture234_g174522 , Sampler234_g174522 , Coords234_g174522 , WorldPosition234_g174522 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174522) = _TerrainNormalTex13;
				SamplerState Sampler263_g174522 = SS29_g174559;
				half4 Coords263_g174522 = temp_output_37_0_g174522;
				half3 WorldPosition263_g174522 = temp_output_279_0_g174522;
				half3 WorldNormal263_g174522 = temp_output_280_0_g174522;
				half4 localSampleStochastic3D263_g174522 = SampleStochastic3D( Texture263_g174522 , Sampler263_g174522 , Coords263_g174522 , WorldPosition263_g174522 , WorldNormal263_g174522 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8991_g174452 = localSamplePlanar2D238_g174522;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8991_g174452 = localSamplePlanar3D246_g174522;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8991_g174452 = localSampleStochastic2D234_g174522;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8991_g174452 = localSampleStochastic3D263_g174522;
				#else
				float4 staticSwitch8991_g174452 = localSamplePlanar2D238_g174522;
				#endif
				half4 Layer133_g174482 = staticSwitch8991_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174529) = _TerrainNormalTex14;
				SamplerState Sampler238_g174529 = SS29_g174559;
				float4 temp_output_37_0_g174529 = Input_Terrain_Coords_148961_g174452;
				half4 Coords238_g174529 = temp_output_37_0_g174529;
				float3 temp_output_279_0_g174529 = Input_Position9197_g174452;
				half3 WorldPosition238_g174529 = temp_output_279_0_g174529;
				half4 localSamplePlanar2D238_g174529 = SamplePlanar2D( Texture238_g174529 , Sampler238_g174529 , Coords238_g174529 , WorldPosition238_g174529 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174529) = _TerrainNormalTex14;
				SamplerState Sampler246_g174529 = SS29_g174559;
				half4 Coords246_g174529 = temp_output_37_0_g174529;
				half3 WorldPosition246_g174529 = temp_output_279_0_g174529;
				float3 temp_output_280_0_g174529 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174529 = temp_output_280_0_g174529;
				half4 localSamplePlanar3D246_g174529 = SamplePlanar3D( Texture246_g174529 , Sampler246_g174529 , Coords246_g174529 , WorldPosition246_g174529 , WorldNormal246_g174529 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174529) = _TerrainNormalTex14;
				SamplerState Sampler234_g174529 = SS29_g174559;
				float4 Coords234_g174529 = temp_output_37_0_g174529;
				float3 WorldPosition234_g174529 = temp_output_279_0_g174529;
				float4 localSampleStochastic2D234_g174529 = SampleStochastic2D( Texture234_g174529 , Sampler234_g174529 , Coords234_g174529 , WorldPosition234_g174529 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174529) = _TerrainNormalTex14;
				SamplerState Sampler263_g174529 = SS29_g174559;
				half4 Coords263_g174529 = temp_output_37_0_g174529;
				half3 WorldPosition263_g174529 = temp_output_279_0_g174529;
				half3 WorldNormal263_g174529 = temp_output_280_0_g174529;
				half4 localSampleStochastic3D263_g174529 = SampleStochastic3D( Texture263_g174529 , Sampler263_g174529 , Coords263_g174529 , WorldPosition263_g174529 , WorldNormal263_g174529 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8990_g174452 = localSamplePlanar2D238_g174529;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8990_g174452 = localSamplePlanar3D246_g174529;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8990_g174452 = localSampleStochastic2D234_g174529;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8990_g174452 = localSampleStochastic3D263_g174529;
				#else
				float4 staticSwitch8990_g174452 = localSamplePlanar2D238_g174529;
				#endif
				half4 Layer237_g174482 = staticSwitch8990_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174530) = _TerrainNormalTex15;
				SamplerState Sampler238_g174530 = SS29_g174559;
				float4 temp_output_37_0_g174530 = Input_Terrain_Coords_158962_g174452;
				half4 Coords238_g174530 = temp_output_37_0_g174530;
				float3 temp_output_279_0_g174530 = Input_Position9197_g174452;
				half3 WorldPosition238_g174530 = temp_output_279_0_g174530;
				half4 localSamplePlanar2D238_g174530 = SamplePlanar2D( Texture238_g174530 , Sampler238_g174530 , Coords238_g174530 , WorldPosition238_g174530 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174530) = _TerrainNormalTex15;
				SamplerState Sampler246_g174530 = SS29_g174559;
				half4 Coords246_g174530 = temp_output_37_0_g174530;
				half3 WorldPosition246_g174530 = temp_output_279_0_g174530;
				float3 temp_output_280_0_g174530 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174530 = temp_output_280_0_g174530;
				half4 localSamplePlanar3D246_g174530 = SamplePlanar3D( Texture246_g174530 , Sampler246_g174530 , Coords246_g174530 , WorldPosition246_g174530 , WorldNormal246_g174530 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174530) = _TerrainNormalTex15;
				SamplerState Sampler234_g174530 = SS29_g174559;
				float4 Coords234_g174530 = temp_output_37_0_g174530;
				float3 WorldPosition234_g174530 = temp_output_279_0_g174530;
				float4 localSampleStochastic2D234_g174530 = SampleStochastic2D( Texture234_g174530 , Sampler234_g174530 , Coords234_g174530 , WorldPosition234_g174530 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174530) = _TerrainNormalTex15;
				SamplerState Sampler263_g174530 = SS29_g174559;
				half4 Coords263_g174530 = temp_output_37_0_g174530;
				half3 WorldPosition263_g174530 = temp_output_279_0_g174530;
				half3 WorldNormal263_g174530 = temp_output_280_0_g174530;
				half4 localSampleStochastic3D263_g174530 = SampleStochastic3D( Texture263_g174530 , Sampler263_g174530 , Coords263_g174530 , WorldPosition263_g174530 , WorldNormal263_g174530 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8989_g174452 = localSamplePlanar2D238_g174530;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8989_g174452 = localSamplePlanar3D246_g174530;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8989_g174452 = localSampleStochastic2D234_g174530;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8989_g174452 = localSampleStochastic3D263_g174530;
				#else
				float4 staticSwitch8989_g174452 = localSamplePlanar2D238_g174530;
				#endif
				half4 Layer338_g174482 = staticSwitch8989_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174531) = _TerrainNormalTex16;
				SamplerState Sampler238_g174531 = SS29_g174559;
				float4 temp_output_37_0_g174531 = Input_Terrain_Coords_168959_g174452;
				half4 Coords238_g174531 = temp_output_37_0_g174531;
				float3 temp_output_279_0_g174531 = Input_Position9197_g174452;
				half3 WorldPosition238_g174531 = temp_output_279_0_g174531;
				half4 localSamplePlanar2D238_g174531 = SamplePlanar2D( Texture238_g174531 , Sampler238_g174531 , Coords238_g174531 , WorldPosition238_g174531 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174531) = _TerrainNormalTex16;
				SamplerState Sampler246_g174531 = SS29_g174559;
				half4 Coords246_g174531 = temp_output_37_0_g174531;
				half3 WorldPosition246_g174531 = temp_output_279_0_g174531;
				float3 temp_output_280_0_g174531 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174531 = temp_output_280_0_g174531;
				half4 localSamplePlanar3D246_g174531 = SamplePlanar3D( Texture246_g174531 , Sampler246_g174531 , Coords246_g174531 , WorldPosition246_g174531 , WorldNormal246_g174531 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174531) = _TerrainNormalTex16;
				SamplerState Sampler234_g174531 = SS29_g174559;
				float4 Coords234_g174531 = temp_output_37_0_g174531;
				float3 WorldPosition234_g174531 = temp_output_279_0_g174531;
				float4 localSampleStochastic2D234_g174531 = SampleStochastic2D( Texture234_g174531 , Sampler234_g174531 , Coords234_g174531 , WorldPosition234_g174531 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174531) = _TerrainNormalTex16;
				SamplerState Sampler263_g174531 = SS29_g174559;
				half4 Coords263_g174531 = temp_output_37_0_g174531;
				half3 WorldPosition263_g174531 = temp_output_279_0_g174531;
				half3 WorldNormal263_g174531 = temp_output_280_0_g174531;
				half4 localSampleStochastic3D263_g174531 = SampleStochastic3D( Texture263_g174531 , Sampler263_g174531 , Coords263_g174531 , WorldPosition263_g174531 , WorldNormal263_g174531 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8988_g174452 = localSamplePlanar2D238_g174531;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8988_g174452 = localSamplePlanar3D246_g174531;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8988_g174452 = localSampleStochastic2D234_g174531;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8988_g174452 = localSampleStochastic3D263_g174531;
				#else
				float4 staticSwitch8988_g174452 = localSamplePlanar2D238_g174531;
				#endif
				half4 Layer439_g174482 = staticSwitch8988_g174452;
				float4 weightedBlendVar31_g174482 = Weights52_g174482;
				float4 weightedBlend31_g174482 = ( weightedBlendVar31_g174482.x*Layer133_g174482 + weightedBlendVar31_g174482.y*Layer237_g174482 + weightedBlendVar31_g174482.z*Layer338_g174482 + weightedBlendVar31_g174482.w*Layer439_g174482 );
				half4 Terrain_B_168987_g174452 = weightedBlend31_g174482;
				half4 Layer_1644_g174459 = Terrain_B_168987_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174459 = Layer_045_g174459;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174459 = ( Layer_045_g174459 + Layer_0810_g174459 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174459 = ( Layer_045_g174459 + Layer_0810_g174459 + Layer_1243_g174459 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174459 = ( Layer_045_g174459 + Layer_0810_g174459 + Layer_1243_g174459 + Layer_1644_g174459 );
				#else
				float4 staticSwitch40_g174459 = Layer_045_g174459;
				#endif
				half4 Blend_Normal7512_g174452 = staticSwitch40_g174459;
				half4 Normal_Packed45_g174553 = Blend_Normal7512_g174452;
				float2 appendResult58_g174553 = (float2(( (Normal_Packed45_g174553).x * (Normal_Packed45_g174553).w ) , (Normal_Packed45_g174553).y));
				half2 Normal_Default50_g174553 = appendResult58_g174553;
				half2 Normal_ASTC41_g174553 = (Normal_Packed45_g174553).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174553 = Normal_ASTC41_g174553;
				#else
				float2 staticSwitch38_g174553 = Normal_Default50_g174553;
				#endif
				half2 Normal_NO_DTX544_g174553 = (Normal_Packed45_g174553).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174553 = Normal_NO_DTX544_g174553;
				#else
				float2 staticSwitch37_g174553 = staticSwitch38_g174553;
				#endif
				half4 Weights52_g174455 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174455 = temp_output_6970_0_g174452;
				half4 Layer237_g174455 = temp_output_6977_0_g174452;
				half4 Layer338_g174455 = temp_output_6978_0_g174452;
				half4 Layer439_g174455 = temp_output_6983_0_g174452;
				float4 weightedBlendVar31_g174455 = Weights52_g174455;
				float4 weightedBlend31_g174455 = ( weightedBlendVar31_g174455.x*Layer133_g174455 + weightedBlendVar31_g174455.y*Layer237_g174455 + weightedBlendVar31_g174455.z*Layer338_g174455 + weightedBlendVar31_g174455.w*Layer439_g174455 );
				half4 Terrain_Shaders_047203_g174452 = weightedBlend31_g174455;
				half4 Layer_045_g174461 = Terrain_Shaders_047203_g174452;
				half4 Weights52_g174471 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174471 = temp_output_8714_0_g174452;
				half4 Layer237_g174471 = temp_output_8721_0_g174452;
				half4 Layer338_g174471 = temp_output_8724_0_g174452;
				half4 Layer439_g174471 = temp_output_8727_0_g174452;
				float4 weightedBlendVar31_g174471 = Weights52_g174471;
				float4 weightedBlend31_g174471 = ( weightedBlendVar31_g174471.x*Layer133_g174471 + weightedBlendVar31_g174471.y*Layer237_g174471 + weightedBlendVar31_g174471.z*Layer338_g174471 + weightedBlendVar31_g174471.w*Layer439_g174471 );
				half4 Terrain_Shaders_088730_g174452 = weightedBlend31_g174471;
				half4 Layer_0810_g174461 = Terrain_Shaders_088730_g174452;
				half4 Weights52_g174478 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174478 = temp_output_8815_0_g174452;
				half4 Layer237_g174478 = temp_output_8818_0_g174452;
				half4 Layer338_g174478 = temp_output_8819_0_g174452;
				half4 Layer439_g174478 = temp_output_8820_0_g174452;
				float4 weightedBlendVar31_g174478 = Weights52_g174478;
				float4 weightedBlend31_g174478 = ( weightedBlendVar31_g174478.x*Layer133_g174478 + weightedBlendVar31_g174478.y*Layer237_g174478 + weightedBlendVar31_g174478.z*Layer338_g174478 + weightedBlendVar31_g174478.w*Layer439_g174478 );
				half4 Terrain_Shaders_128871_g174452 = weightedBlend31_g174478;
				half4 Layer_1243_g174461 = Terrain_Shaders_128871_g174452;
				half4 Weights52_g174485 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174485 = temp_output_8931_0_g174452;
				half4 Layer237_g174485 = temp_output_8934_0_g174452;
				half4 Layer338_g174485 = temp_output_8935_0_g174452;
				half4 Layer439_g174485 = temp_output_8936_0_g174452;
				float4 weightedBlendVar31_g174485 = Weights52_g174485;
				float4 weightedBlend31_g174485 = ( weightedBlendVar31_g174485.x*Layer133_g174485 + weightedBlendVar31_g174485.y*Layer237_g174485 + weightedBlendVar31_g174485.z*Layer338_g174485 + weightedBlendVar31_g174485.w*Layer439_g174485 );
				half4 Terrain_Shaders_169014_g174452 = weightedBlend31_g174485;
				half4 Layer_1644_g174461 = Terrain_Shaders_169014_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174461 = Layer_045_g174461;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174461 = ( Layer_045_g174461 + Layer_0810_g174461 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174461 = ( Layer_045_g174461 + Layer_0810_g174461 + Layer_1243_g174461 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174461 = ( Layer_045_g174461 + Layer_0810_g174461 + Layer_1243_g174461 + Layer_1644_g174461 );
				#else
				float4 staticSwitch40_g174461 = Layer_045_g174461;
				#endif
				half4 Blend_Shaders7420_g174452 = staticSwitch40_g174461;
				half4 Normal_Packed45_g174552 = Blend_Shaders7420_g174452;
				half2 Normal_NO_DTX544_g174552 = (Normal_Packed45_g174552).wy;
				#ifdef TVE_TERRAIN_PACKED
				float2 staticSwitch9080_g174452 = (Normal_NO_DTX544_g174552*2.0 + -1.0);
				#else
				float2 staticSwitch9080_g174452 = (staticSwitch37_g174553*2.0 + -1.0);
				#endif
				half4 Weights52_g174456 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174456 = _TerrainParams1;
				half4 Layer237_g174456 = _TerrainParams2;
				half4 Layer338_g174456 = _TerrainParams3;
				half4 Layer439_g174456 = _TerrainParams4;
				float4 weightedBlendVar31_g174456 = Weights52_g174456;
				float4 weightedBlend31_g174456 = ( weightedBlendVar31_g174456.x*Layer133_g174456 + weightedBlendVar31_g174456.y*Layer237_g174456 + weightedBlendVar31_g174456.z*Layer338_g174456 + weightedBlendVar31_g174456.w*Layer439_g174456 );
				half4 Terrain_Params_047533_g174452 = weightedBlend31_g174456;
				half4 Layer_045_g174462 = Terrain_Params_047533_g174452;
				half4 Weights52_g174472 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174472 = _TerrainParams5;
				half4 Layer237_g174472 = _TerrainParams6;
				half4 Layer338_g174472 = _TerrainParams7;
				half4 Layer439_g174472 = _TerrainParams8;
				float4 weightedBlendVar31_g174472 = Weights52_g174472;
				float4 weightedBlend31_g174472 = ( weightedBlendVar31_g174472.x*Layer133_g174472 + weightedBlendVar31_g174472.y*Layer237_g174472 + weightedBlendVar31_g174472.z*Layer338_g174472 + weightedBlendVar31_g174472.w*Layer439_g174472 );
				half4 Terrain_Params_088739_g174452 = weightedBlend31_g174472;
				half4 Layer_0810_g174462 = Terrain_Params_088739_g174452;
				half4 Weights52_g174479 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174479 = _TerrainParams9;
				half4 Layer237_g174479 = _TerrainParams10;
				half4 Layer338_g174479 = _TerrainParams11;
				half4 Layer439_g174479 = _TerrainParams12;
				float4 weightedBlendVar31_g174479 = Weights52_g174479;
				float4 weightedBlend31_g174479 = ( weightedBlendVar31_g174479.x*Layer133_g174479 + weightedBlendVar31_g174479.y*Layer237_g174479 + weightedBlendVar31_g174479.z*Layer338_g174479 + weightedBlendVar31_g174479.w*Layer439_g174479 );
				half4 Terrain_Params_128867_g174452 = weightedBlend31_g174479;
				half4 Layer_1243_g174462 = Terrain_Params_128867_g174452;
				half4 Weights52_g174486 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174486 = _TerrainParams13;
				half4 Layer237_g174486 = _TerrainParams14;
				half4 Layer338_g174486 = _TerrainParams15;
				half4 Layer439_g174486 = _TerrainParams16;
				float4 weightedBlendVar31_g174486 = Weights52_g174486;
				float4 weightedBlend31_g174486 = ( weightedBlendVar31_g174486.x*Layer133_g174486 + weightedBlendVar31_g174486.y*Layer237_g174486 + weightedBlendVar31_g174486.z*Layer338_g174486 + weightedBlendVar31_g174486.w*Layer439_g174486 );
				half4 Terrain_Params_169017_g174452 = weightedBlend31_g174486;
				half4 Layer_1644_g174462 = Terrain_Params_169017_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174462 = Layer_045_g174462;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174462 = ( Layer_045_g174462 + Layer_0810_g174462 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174462 = ( Layer_045_g174462 + Layer_0810_g174462 + Layer_1243_g174462 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174462 = ( Layer_045_g174462 + Layer_0810_g174462 + Layer_1243_g174462 + Layer_1644_g174462 );
				#else
				float4 staticSwitch40_g174462 = Layer_045_g174462;
				#endif
				half4 Blend_Params7547_g174452 = staticSwitch40_g174462;
				half2 Normal_Planar45_g174554 = ( ( staticSwitch9080_g174452 * (Blend_Params7547_g174452).z ) * _TerrainNormalValue );
				float2 break71_g174554 = Normal_Planar45_g174554;
				float3 appendResult72_g174554 = (float3(break71_g174554.x , 0.0 , break71_g174554.y));
				half2 Final_NormalTS9145_g174452 = (mul( ase_worldToTangent, appendResult72_g174554 )).xy;
				half2 Local_NormalTS729_g174425 = Final_NormalTS9145_g174452;
				float2 lerpResult405_g174425 = lerp( Visual_NormalTS529_g174425 , Local_NormalTS729_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float2 staticSwitch418_g174425 = lerpResult405_g174425;
				#else
				float2 staticSwitch418_g174425 = Visual_NormalTS529_g174425;
				#endif
				half2 Final_NormalTS612_g174425 = staticSwitch418_g174425;
				float2 In_NormalTS3_g174429 = Final_NormalTS612_g174425;
				float3 appendResult68_g174427 = (float3(Final_NormalTS612_g174425 , 1.0));
				float3 tanNormal74_g174427 = appendResult68_g174427;
				float3 worldNormal74_g174427 = normalize( float3(dot(tanToWorld0,tanNormal74_g174427), dot(tanToWorld1,tanNormal74_g174427), dot(tanToWorld2,tanNormal74_g174427)) );
				half3 Final_NormalWS956_g174425 = worldNormal74_g174427;
				float3 In_NormalWS3_g174429 = Final_NormalWS956_g174425;
				half4 Visual_Shader531_g174425 = Out_Shader4_g174428;
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9139_g174452 = 0.0;
				#else
				float staticSwitch9139_g174452 = ( (Blend_Shaders7420_g174452).x * (Blend_Params7547_g174452).x * _TerrainMetallicValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9097_g174452 = 1.0;
				#else
				float staticSwitch9097_g174452 = ( (Blend_Shaders7420_g174452).y * _TerrainOcclusionValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9105_g174452 = (Blend_Shaders7420_g174452).x;
				#else
				float staticSwitch9105_g174452 = (Blend_Shaders7420_g174452).w;
				#endif
				float4 appendResult9147_g174452 = (float4(staticSwitch9139_g174452 , staticSwitch9097_g174452 , (Blend_Shaders7420_g174452).z , ( staticSwitch9105_g174452 * (Blend_Params7547_g174452).w * _TerrainSmoothnessValue )));
				half4 Final_Shaders9146_g174452 = appendResult9147_g174452;
				half4 Local_Masks750_g174425 = Final_Shaders9146_g174452;
				float4 lerpResult998_g174425 = lerp( Visual_Shader531_g174425 , Local_Masks750_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float4 staticSwitch451_g174425 = lerpResult998_g174425;
				#else
				float4 staticSwitch451_g174425 = Visual_Shader531_g174425;
				#endif
				half4 Final_Masks613_g174425 = staticSwitch451_g174425;
				float4 In_Shader3_g174429 = Final_Masks613_g174425;
				half4 Weights52_g174545 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174545 = _TerrainSpecular1;
				half4 Layer237_g174545 = _TerrainSpecular2;
				half4 Layer338_g174545 = _TerrainSpecular3;
				half4 Layer439_g174545 = _TerrainSpecular4;
				float4 weightedBlendVar31_g174545 = Weights52_g174545;
				float4 weightedBlend31_g174545 = ( weightedBlendVar31_g174545.x*Layer133_g174545 + weightedBlendVar31_g174545.y*Layer237_g174545 + weightedBlendVar31_g174545.z*Layer338_g174545 + weightedBlendVar31_g174545.w*Layer439_g174545 );
				half4 Terrain_Specular_047390_g174452 = weightedBlend31_g174545;
				half4 Layer_045_g174550 = Terrain_Specular_047390_g174452;
				half4 Weights52_g174473 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174473 = _TerrainSpecular5;
				half4 Layer237_g174473 = _TerrainSpecular6;
				half4 Layer338_g174473 = _TerrainSpecular7;
				half4 Layer439_g174473 = _TerrainSpecular8;
				float4 weightedBlendVar31_g174473 = Weights52_g174473;
				float4 weightedBlend31_g174473 = ( weightedBlendVar31_g174473.x*Layer133_g174473 + weightedBlendVar31_g174473.y*Layer237_g174473 + weightedBlendVar31_g174473.z*Layer338_g174473 + weightedBlendVar31_g174473.w*Layer439_g174473 );
				half4 Terrain_Specular_088745_g174452 = weightedBlend31_g174473;
				half4 Layer_0810_g174550 = Terrain_Specular_088745_g174452;
				half4 Weights52_g174480 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174480 = _TerrainSpecular9;
				half4 Layer237_g174480 = _TerrainSpecular10;
				half4 Layer338_g174480 = _TerrainSpecular11;
				half4 Layer439_g174480 = _TerrainSpecular12;
				float4 weightedBlendVar31_g174480 = Weights52_g174480;
				float4 weightedBlend31_g174480 = ( weightedBlendVar31_g174480.x*Layer133_g174480 + weightedBlendVar31_g174480.y*Layer237_g174480 + weightedBlendVar31_g174480.z*Layer338_g174480 + weightedBlendVar31_g174480.w*Layer439_g174480 );
				half4 Terrain_Specular_128869_g174452 = weightedBlend31_g174480;
				half4 Layer_1243_g174550 = Terrain_Specular_128869_g174452;
				half4 Weights52_g174487 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174487 = _TerrainSpecular13;
				half4 Layer237_g174487 = _TerrainSpecular14;
				half4 Layer338_g174487 = _TerrainSpecular15;
				half4 Layer439_g174487 = _TerrainSpecular16;
				float4 weightedBlendVar31_g174487 = Weights52_g174487;
				float4 weightedBlend31_g174487 = ( weightedBlendVar31_g174487.x*Layer133_g174487 + weightedBlendVar31_g174487.y*Layer237_g174487 + weightedBlendVar31_g174487.z*Layer338_g174487 + weightedBlendVar31_g174487.w*Layer439_g174487 );
				half4 Terrain_Specular_169019_g174452 = weightedBlend31_g174487;
				half4 Layer_1644_g174550 = Terrain_Specular_169019_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174550 = Layer_045_g174550;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174550 = ( Layer_045_g174550 + Layer_0810_g174550 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174550 = ( Layer_045_g174550 + Layer_0810_g174550 + Layer_1243_g174550 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174550 = ( Layer_045_g174550 + Layer_0810_g174550 + Layer_1243_g174550 + Layer_1644_g174550 );
				#else
				float4 staticSwitch40_g174550 = Layer_045_g174550;
				#endif
				half4 Blend_TerrainSpecular7446_g174452 = staticSwitch40_g174550;
				float3 temp_output_9088_0_g174452 = (Blend_TerrainSpecular7446_g174452).rgb;
				float4 appendResult9189_g174452 = (float4(temp_output_9088_0_g174452 , 1.0));
				half4 Final_Emissive9151_g174452 = appendResult9189_g174452;
				half4 Local_Emissive1006_g174425 = Final_Emissive9151_g174452;
				float4 appendResult1092_g174425 = (float4((Local_Emissive1006_g174425).xyz , Terrain_Mask412_g174425));
				#ifdef TVE_TERRAIN
				float4 staticSwitch1096_g174425 = appendResult1092_g174425;
				#else
				float4 staticSwitch1096_g174425 = half4(1,1,1,0);
				#endif
				half4 Final_EmissiveLDR1094_g174425 = staticSwitch1096_g174425;
				float4 In_Emissive3_g174429 = Final_EmissiveLDR1094_g174425;
				float3 temp_output_3_0_g174432 = Final_Albedo601_g174425;
				float dotResult20_g174432 = dot( temp_output_3_0_g174432 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale615_g174425 = dotResult20_g174432;
				float In_Grayscale3_g174429 = Final_Grayscale615_g174425;
				float clampResult651_g174425 = clamp( saturate( ( Final_Grayscale615_g174425 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity652_g174425 = clampResult651_g174425;
				float In_Luminosity3_g174429 = Final_Luminosity652_g174425;
				half Visual_MultiMask547_g174425 = Out_MultiMask4_g174428;
				half Final_MultiShader9150_g174452 = ( (Blend_TerrainSpecular7446_g174452).a * (Blend_Albedo7468_g174452).w );
				half Local_MultiMask767_g174425 = Final_MultiShader9150_g174452;
				float lerpResult477_g174425 = lerp( Visual_MultiMask547_g174425 , Local_MultiMask767_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float staticSwitch482_g174425 = lerpResult477_g174425;
				#else
				float staticSwitch482_g174425 = Visual_MultiMask547_g174425;
				#endif
				half Final_MultiMask572_g174425 = staticSwitch482_g174425;
				float In_MultiMask3_g174429 = Final_MultiMask572_g174425;
				half Visual_AlphaClip559_g174425 = Out_AlphaClip4_g174428;
				float4 temp_output_35_0_g174561 = appendResult9125_g174452;
				float2 InputScale48_g174561 = (temp_output_35_0_g174561).zw;
				half2 FinalScale53_g174561 = ( 1.0 / InputScale48_g174561 );
				float2 InputPosition52_g174561 = (temp_output_35_0_g174561).xy;
				half2 FinalPosition58_g174561 = -( FinalScale53_g174561 * InputPosition52_g174561 );
				float2 temp_output_65_0_g174561 = ( ( (ase_worldPos).xz * FinalScale53_g174561 ) + FinalPosition58_g174561 );
				float2 Terrain_Holes_UV9409_g174452 = temp_output_65_0_g174561;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch9188_g174452 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9409_g174452 ).r;
				#else
				float staticSwitch9188_g174452 = 1.0;
				#endif
				half Terrain_Holes7437_g174452 = staticSwitch9188_g174452;
				float temp_output_1141_9195_g174425 = Terrain_Holes7437_g174452;
				half Local_AlphaClip772_g174425 = temp_output_1141_9195_g174425;
				float lerpResult448_g174425 = lerp( Visual_AlphaClip559_g174425 , Local_AlphaClip772_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float staticSwitch564_g174425 = lerpResult448_g174425;
				#else
				float staticSwitch564_g174425 = Visual_AlphaClip559_g174425;
				#endif
				half Final_AlphaClip602_g174425 = staticSwitch564_g174425;
				float In_AlphaClip3_g174429 = Final_AlphaClip602_g174425;
				half Visual_AlphaFade588_g174425 = Out_AlphaFade4_g174428;
				half Local_AlphaFade773_g174425 = temp_output_1141_9195_g174425;
				float lerpResult604_g174425 = lerp( Visual_AlphaFade588_g174425 , Local_AlphaFade773_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float staticSwitch608_g174425 = lerpResult604_g174425;
				#else
				float staticSwitch608_g174425 = Visual_AlphaFade588_g174425;
				#endif
				half Final_AlphaFade611_g174425 = staticSwitch608_g174425;
				float In_AlphaFade3_g174429 = Final_AlphaFade611_g174425;
				float3 In_Translucency3_g174429 = Out_Translucency4_g174428;
				float In_Transmission3_g174429 = Out_Transmission4_g174428;
				float In_Thickness3_g174429 = Out_Thickness4_g174428;
				float In_Diffusion3_g174429 = Out_Diffusion4_g174428;
				Data3_g174429.Dummy = In_Dummy3_g174429;
				Data3_g174429.Albedo = In_Albedo3_g174429;
				Data3_g174429.AlbedoRaw = In_AlbedoRaw3_g174429;
				Data3_g174429.NormalTS = In_NormalTS3_g174429;
				Data3_g174429.NormalWS = In_NormalWS3_g174429;
				Data3_g174429.Shader = In_Shader3_g174429;
				Data3_g174429.Emissive= In_Emissive3_g174429;
				Data3_g174429.MultiMask = In_MultiMask3_g174429;
				Data3_g174429.Grayscale = In_Grayscale3_g174429;
				Data3_g174429.Luminosity = In_Luminosity3_g174429;
				Data3_g174429.AlphaClip = In_AlphaClip3_g174429;
				Data3_g174429.AlphaFade = In_AlphaFade3_g174429;
				Data3_g174429.Translucency = In_Translucency3_g174429;
				Data3_g174429.Transmission = In_Transmission3_g174429;
				Data3_g174429.Thickness = In_Thickness3_g174429;
				Data3_g174429.Diffusion = In_Diffusion3_g174429;
				TVEVisualData Data4_g174641 = Data3_g174429;
				float Out_Dummy4_g174641 = 0;
				float3 Out_Albedo4_g174641 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174641 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174641 = float2( 0,0 );
				float3 Out_NormalWS4_g174641 = float3( 0,0,0 );
				float4 Out_Shader4_g174641 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174641 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174641 = 0;
				float Out_Grayscale4_g174641 = 0;
				float Out_Luminosity4_g174641 = 0;
				float Out_AlphaClip4_g174641 = 0;
				float Out_AlphaFade4_g174641 = 0;
				float3 Out_Translucency4_g174641 = float3( 0,0,0 );
				float Out_Transmission4_g174641 = 0;
				float Out_Thickness4_g174641 = 0;
				float Out_Diffusion4_g174641 = 0;
				Out_Dummy4_g174641 = Data4_g174641.Dummy;
				Out_Albedo4_g174641 = Data4_g174641.Albedo;
				Out_AlbedoRaw4_g174641 = Data4_g174641.AlbedoRaw;
				Out_NormalTS4_g174641 = Data4_g174641.NormalTS;
				Out_NormalWS4_g174641 = Data4_g174641.NormalWS;
				Out_Shader4_g174641 = Data4_g174641.Shader;
				Out_Emissive4_g174641= Data4_g174641.Emissive;
				Out_MultiMask4_g174641 = Data4_g174641.MultiMask;
				Out_Grayscale4_g174641 = Data4_g174641.Grayscale;
				Out_Luminosity4_g174641= Data4_g174641.Luminosity;
				Out_AlphaClip4_g174641 = Data4_g174641.AlphaClip;
				Out_AlphaFade4_g174641 = Data4_g174641.AlphaFade;
				Out_Translucency4_g174641 = Data4_g174641.Translucency;
				Out_Transmission4_g174641 = Data4_g174641.Transmission;
				Out_Thickness4_g174641 = Data4_g174641.Thickness;
				Out_Diffusion4_g174641 = Data4_g174641.Diffusion;
				half3 Visual_Albedo127_g174640 = Out_Albedo4_g174641;
				TVEModelData Data15_g174649 = Data16_g164566;
				float Out_Dummy15_g174649 = 0;
				float3 Out_PositionWS15_g174649 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174649 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174649 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174649 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174649 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174649 = float3( 0,0,0 );
				float4 Out_VertexData15_g174649 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174649 = float4( 0,0,0,0 );
				Out_Dummy15_g174649 = Data15_g174649.Dummy;
				Out_PositionWS15_g174649 = Data15_g174649.PositionWS;
				Out_PositionWO15_g174649 = Data15_g174649.PositionWO;
				Out_PivotWS15_g174649 = Data15_g174649.PivotWS;
				Out_PivotWO15_g174649 = Data15_g174649.PivotWO;
				Out_NormalWS15_g174649 = Data15_g174649.NormalWS;
				Out_ViewDirWS15_g174649 = Data15_g174649.ViewDirWS;
				Out_VertexData15_g174649 = Data15_g174649.VertexData;
				Out_BoundsData15_g174649 = Data15_g174649.BoundsData;
				half4 Model_VertexData206_g174640 = Out_VertexData15_g174649;
				float4 break208_g174640 = Model_VertexData206_g174640;
				float4 break33_g174647 = _occlusion_vert_mode;
				float temp_output_30_0_g174647 = ( break208_g174640.x * break33_g174647.x );
				float temp_output_29_0_g174647 = ( break208_g174640.y * break33_g174647.y );
				float temp_output_31_0_g174647 = ( break208_g174640.z * break33_g174647.z );
				float temp_output_28_0_g174647 = ( temp_output_30_0_g174647 + temp_output_29_0_g174647 + temp_output_31_0_g174647 + ( break208_g174640.w * break33_g174647.w ) );
				float temp_output_194_0_g174640 = temp_output_28_0_g174647;
				float clampResult17_g174645 = clamp( temp_output_194_0_g174640 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174644 = _OcclusionMeshRemap.x;
				float temp_output_10_0_g174644 = ( _OcclusionMeshRemap.y - temp_output_7_0_g174644 );
				float temp_output_6_0_g174646 = saturate( ( ( clampResult17_g174645 - temp_output_7_0_g174644 ) / ( temp_output_10_0_g174644 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174646 = ( temp_output_6_0_g174646 + ( _OcclusionMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174646 = temp_output_6_0_g174646;
				#endif
				half Occlusion_Mask82_g174640 = staticSwitch14_g174646;
				float3 lerpResult75_g174640 = lerp( (_OcclusionColorTwo).rgb , (_OcclusionColorOne).rgb , Occlusion_Mask82_g174640);
				float3 lerpResult186_g174640 = lerp( Visual_Albedo127_g174640 , ( Visual_Albedo127_g174640 * lerpResult75_g174640 ) , _OcclusionIntensityValue);
				#ifdef TVE_OCCLUSION
				float3 staticSwitch171_g174640 = lerpResult186_g174640;
				#else
				float3 staticSwitch171_g174640 = Visual_Albedo127_g174640;
				#endif
				half3 Final_Albedo160_g174640 = staticSwitch171_g174640;
				float3 In_Albedo3_g174642 = Final_Albedo160_g174640;
				float3 In_AlbedoRaw3_g174642 = Final_Albedo160_g174640;
				float2 In_NormalTS3_g174642 = Out_NormalTS4_g174641;
				float3 In_NormalWS3_g174642 = Out_NormalWS4_g174641;
				float4 In_Shader3_g174642 = Out_Shader4_g174641;
				float4 In_Emissive3_g174642 = Out_Emissive4_g174641;
				float3 temp_output_3_0_g174643 = Final_Albedo160_g174640;
				float dotResult20_g174643 = dot( temp_output_3_0_g174643 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale164_g174640 = dotResult20_g174643;
				float In_Grayscale3_g174642 = Final_Grayscale164_g174640;
				float clampResult180_g174640 = clamp( saturate( ( Final_Grayscale164_g174640 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Shading181_g174640 = clampResult180_g174640;
				float In_Luminosity3_g174642 = Final_Shading181_g174640;
				float In_MultiMask3_g174642 = Out_MultiMask4_g174641;
				float In_AlphaClip3_g174642 = Out_AlphaClip4_g174641;
				float In_AlphaFade3_g174642 = Out_AlphaFade4_g174641;
				float3 In_Translucency3_g174642 = Out_Translucency4_g174641;
				float In_Transmission3_g174642 = Out_Transmission4_g174641;
				float In_Thickness3_g174642 = Out_Thickness4_g174641;
				float In_Diffusion3_g174642 = Out_Diffusion4_g174641;
				Data3_g174642.Dummy = In_Dummy3_g174642;
				Data3_g174642.Albedo = In_Albedo3_g174642;
				Data3_g174642.AlbedoRaw = In_AlbedoRaw3_g174642;
				Data3_g174642.NormalTS = In_NormalTS3_g174642;
				Data3_g174642.NormalWS = In_NormalWS3_g174642;
				Data3_g174642.Shader = In_Shader3_g174642;
				Data3_g174642.Emissive= In_Emissive3_g174642;
				Data3_g174642.MultiMask = In_MultiMask3_g174642;
				Data3_g174642.Grayscale = In_Grayscale3_g174642;
				Data3_g174642.Luminosity = In_Luminosity3_g174642;
				Data3_g174642.AlphaClip = In_AlphaClip3_g174642;
				Data3_g174642.AlphaFade = In_AlphaFade3_g174642;
				Data3_g174642.Translucency = In_Translucency3_g174642;
				Data3_g174642.Transmission = In_Transmission3_g174642;
				Data3_g174642.Thickness = In_Thickness3_g174642;
				Data3_g174642.Diffusion = In_Diffusion3_g174642;
				TVEVisualData Data4_g174652 = Data3_g174642;
				float Out_Dummy4_g174652 = 0;
				float3 Out_Albedo4_g174652 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174652 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174652 = float2( 0,0 );
				float3 Out_NormalWS4_g174652 = float3( 0,0,0 );
				float4 Out_Shader4_g174652 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174652 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174652 = 0;
				float Out_Grayscale4_g174652 = 0;
				float Out_Luminosity4_g174652 = 0;
				float Out_AlphaClip4_g174652 = 0;
				float Out_AlphaFade4_g174652 = 0;
				float3 Out_Translucency4_g174652 = float3( 0,0,0 );
				float Out_Transmission4_g174652 = 0;
				float Out_Thickness4_g174652 = 0;
				float Out_Diffusion4_g174652 = 0;
				Out_Dummy4_g174652 = Data4_g174652.Dummy;
				Out_Albedo4_g174652 = Data4_g174652.Albedo;
				Out_AlbedoRaw4_g174652 = Data4_g174652.AlbedoRaw;
				Out_NormalTS4_g174652 = Data4_g174652.NormalTS;
				Out_NormalWS4_g174652 = Data4_g174652.NormalWS;
				Out_Shader4_g174652 = Data4_g174652.Shader;
				Out_Emissive4_g174652= Data4_g174652.Emissive;
				Out_MultiMask4_g174652 = Data4_g174652.MultiMask;
				Out_Grayscale4_g174652 = Data4_g174652.Grayscale;
				Out_Luminosity4_g174652= Data4_g174652.Luminosity;
				Out_AlphaClip4_g174652 = Data4_g174652.AlphaClip;
				Out_AlphaFade4_g174652 = Data4_g174652.AlphaFade;
				Out_Translucency4_g174652 = Data4_g174652.Translucency;
				Out_Transmission4_g174652 = Data4_g174652.Transmission;
				Out_Thickness4_g174652 = Data4_g174652.Thickness;
				Out_Diffusion4_g174652 = Data4_g174652.Diffusion;
				half3 Visual_Albedo127_g174650 = Out_Albedo4_g174652;
				TVEModelData Data15_g174659 = Data16_g164566;
				float Out_Dummy15_g174659 = 0;
				float3 Out_PositionWS15_g174659 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174659 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174659 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174659 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174659 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174659 = float3( 0,0,0 );
				float4 Out_VertexData15_g174659 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174659 = float4( 0,0,0,0 );
				Out_Dummy15_g174659 = Data15_g174659.Dummy;
				Out_PositionWS15_g174659 = Data15_g174659.PositionWS;
				Out_PositionWO15_g174659 = Data15_g174659.PositionWO;
				Out_PivotWS15_g174659 = Data15_g174659.PivotWS;
				Out_PivotWO15_g174659 = Data15_g174659.PivotWO;
				Out_NormalWS15_g174659 = Data15_g174659.NormalWS;
				Out_ViewDirWS15_g174659 = Data15_g174659.ViewDirWS;
				Out_VertexData15_g174659 = Data15_g174659.VertexData;
				Out_BoundsData15_g174659 = Data15_g174659.BoundsData;
				half4 Model_VertexData224_g174650 = Out_VertexData15_g174659;
				float4 break226_g174650 = Model_VertexData224_g174650;
				float4 break33_g174651 = _gradient_vert_mode;
				float temp_output_30_0_g174651 = ( break226_g174650.x * break33_g174651.x );
				float temp_output_29_0_g174651 = ( break226_g174650.y * break33_g174651.y );
				float temp_output_31_0_g174651 = ( break226_g174650.z * break33_g174651.z );
				float temp_output_28_0_g174651 = ( temp_output_30_0_g174651 + temp_output_29_0_g174651 + temp_output_31_0_g174651 + ( break226_g174650.w * break33_g174651.w ) );
				float temp_output_211_0_g174650 = temp_output_28_0_g174651;
				float clampResult17_g174656 = clamp( temp_output_211_0_g174650 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174657 = _GradientMeshRemap.x;
				float temp_output_10_0_g174657 = ( _GradientMeshRemap.y - temp_output_7_0_g174657 );
				float temp_output_6_0_g174658 = saturate( ( ( clampResult17_g174656 - temp_output_7_0_g174657 ) / ( temp_output_10_0_g174657 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174658 = ( temp_output_6_0_g174658 + ( _GradientMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174658 = temp_output_6_0_g174658;
				#endif
				half Gradient_VertMask82_g174650 = staticSwitch14_g174658;
				half Gradient_Mask200_g174650 = Gradient_VertMask82_g174650;
				float3 lerpResult75_g174650 = lerp( (_GradientColorTwo).rgb , (_GradientColorOne).rgb , Gradient_Mask200_g174650);
				float temp_output_162_11_g174650 = Out_MultiMask4_g174652;
				half Visual_MultiMask196_g174650 = temp_output_162_11_g174650;
				float lerpResult190_g174650 = lerp( 1.0 , Visual_MultiMask196_g174650 , _GradientMultiValue);
				half Gradient_MultiMask194_g174650 = lerpResult190_g174650;
				float3 lerpResult186_g174650 = lerp( Visual_Albedo127_g174650 , ( Visual_Albedo127_g174650 * lerpResult75_g174650 ) , ( _GradientIntensityValue * Gradient_MultiMask194_g174650 ));
				#ifdef TVE_GRADIENT
				float3 staticSwitch171_g174650 = lerpResult186_g174650;
				#else
				float3 staticSwitch171_g174650 = Visual_Albedo127_g174650;
				#endif
				half3 Final_Albedo160_g174650 = staticSwitch171_g174650;
				float3 In_Albedo3_g174653 = Final_Albedo160_g174650;
				float3 In_AlbedoRaw3_g174653 = Final_Albedo160_g174650;
				float2 In_NormalTS3_g174653 = Out_NormalTS4_g174652;
				float3 In_NormalWS3_g174653 = Out_NormalWS4_g174652;
				float4 In_Shader3_g174653 = Out_Shader4_g174652;
				float4 In_Emissive3_g174653 = Out_Emissive4_g174652;
				float3 temp_output_3_0_g174654 = Final_Albedo160_g174650;
				float dotResult20_g174654 = dot( temp_output_3_0_g174654 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale164_g174650 = dotResult20_g174654;
				float In_Grayscale3_g174653 = Final_Grayscale164_g174650;
				float clampResult180_g174650 = clamp( saturate( ( Final_Grayscale164_g174650 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity181_g174650 = clampResult180_g174650;
				float In_Luminosity3_g174653 = Final_Luminosity181_g174650;
				float In_MultiMask3_g174653 = temp_output_162_11_g174650;
				float In_AlphaClip3_g174653 = Out_AlphaClip4_g174652;
				float In_AlphaFade3_g174653 = Out_AlphaFade4_g174652;
				float3 In_Translucency3_g174653 = Out_Translucency4_g174652;
				float In_Transmission3_g174653 = Out_Transmission4_g174652;
				float In_Thickness3_g174653 = Out_Thickness4_g174652;
				float In_Diffusion3_g174653 = Out_Diffusion4_g174652;
				Data3_g174653.Dummy = In_Dummy3_g174653;
				Data3_g174653.Albedo = In_Albedo3_g174653;
				Data3_g174653.AlbedoRaw = In_AlbedoRaw3_g174653;
				Data3_g174653.NormalTS = In_NormalTS3_g174653;
				Data3_g174653.NormalWS = In_NormalWS3_g174653;
				Data3_g174653.Shader = In_Shader3_g174653;
				Data3_g174653.Emissive= In_Emissive3_g174653;
				Data3_g174653.MultiMask = In_MultiMask3_g174653;
				Data3_g174653.Grayscale = In_Grayscale3_g174653;
				Data3_g174653.Luminosity = In_Luminosity3_g174653;
				Data3_g174653.AlphaClip = In_AlphaClip3_g174653;
				Data3_g174653.AlphaFade = In_AlphaFade3_g174653;
				Data3_g174653.Translucency = In_Translucency3_g174653;
				Data3_g174653.Transmission = In_Transmission3_g174653;
				Data3_g174653.Thickness = In_Thickness3_g174653;
				Data3_g174653.Diffusion = In_Diffusion3_g174653;
				TVEVisualData Data4_g174662 = Data3_g174653;
				float Out_Dummy4_g174662 = 0;
				float3 Out_Albedo4_g174662 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174662 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174662 = float2( 0,0 );
				float3 Out_NormalWS4_g174662 = float3( 0,0,0 );
				float4 Out_Shader4_g174662 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174662 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174662 = 0;
				float Out_Grayscale4_g174662 = 0;
				float Out_Luminosity4_g174662 = 0;
				float Out_AlphaClip4_g174662 = 0;
				float Out_AlphaFade4_g174662 = 0;
				float3 Out_Translucency4_g174662 = float3( 0,0,0 );
				float Out_Transmission4_g174662 = 0;
				float Out_Thickness4_g174662 = 0;
				float Out_Diffusion4_g174662 = 0;
				Out_Dummy4_g174662 = Data4_g174662.Dummy;
				Out_Albedo4_g174662 = Data4_g174662.Albedo;
				Out_AlbedoRaw4_g174662 = Data4_g174662.AlbedoRaw;
				Out_NormalTS4_g174662 = Data4_g174662.NormalTS;
				Out_NormalWS4_g174662 = Data4_g174662.NormalWS;
				Out_Shader4_g174662 = Data4_g174662.Shader;
				Out_Emissive4_g174662= Data4_g174662.Emissive;
				Out_MultiMask4_g174662 = Data4_g174662.MultiMask;
				Out_Grayscale4_g174662 = Data4_g174662.Grayscale;
				Out_Luminosity4_g174662= Data4_g174662.Luminosity;
				Out_AlphaClip4_g174662 = Data4_g174662.AlphaClip;
				Out_AlphaFade4_g174662 = Data4_g174662.AlphaFade;
				Out_Translucency4_g174662 = Data4_g174662.Translucency;
				Out_Transmission4_g174662 = Data4_g174662.Transmission;
				Out_Thickness4_g174662 = Data4_g174662.Thickness;
				Out_Diffusion4_g174662 = Data4_g174662.Diffusion;
				half3 Visual_Albedo127_g174660 = Out_Albedo4_g174662;
				TVEModelData Data15_g174668 = Data16_g164566;
				float Out_Dummy15_g174668 = 0;
				float3 Out_PositionWS15_g174668 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174668 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174668 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174668 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174668 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174668 = float3( 0,0,0 );
				float4 Out_VertexData15_g174668 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174668 = float4( 0,0,0,0 );
				Out_Dummy15_g174668 = Data15_g174668.Dummy;
				Out_PositionWS15_g174668 = Data15_g174668.PositionWS;
				Out_PositionWO15_g174668 = Data15_g174668.PositionWO;
				Out_PivotWS15_g174668 = Data15_g174668.PivotWS;
				Out_PivotWO15_g174668 = Data15_g174668.PivotWO;
				Out_NormalWS15_g174668 = Data15_g174668.NormalWS;
				Out_ViewDirWS15_g174668 = Data15_g174668.ViewDirWS;
				Out_VertexData15_g174668 = Data15_g174668.VertexData;
				Out_BoundsData15_g174668 = Data15_g174668.BoundsData;
				half3 Model_PositionWO224_g174660 = Out_PositionWO15_g174668;
				half3 Model_PivotWO239_g174660 = Out_PivotWO15_g174668;
				float3 lerpResult242_g174660 = lerp( Model_PositionWO224_g174660 , Model_PivotWO239_g174660 , _VariationNoisePivotValue);
				float4 tex3DNode60_g174664 = SAMPLE_TEXTURE3D( _NoiseTex3D, sampler_Linear_Repeat, ( lerpResult242_g174660 * ( _VariationNoiseTillingValue * 0.01 ) ) );
				float clampResult17_g174666 = clamp( tex3DNode60_g174664.r , 0.0001 , 0.9999 );
				float temp_output_7_0_g174667 = _VariationNoiseRemap.x;
				float temp_output_10_0_g174667 = ( _VariationNoiseRemap.y - temp_output_7_0_g174667 );
				float temp_output_238_0_g174660 = saturate( ( ( clampResult17_g174666 - temp_output_7_0_g174667 ) / ( temp_output_10_0_g174667 + 0.0001 ) ) );
				half Variaton_NoiseMask82_g174660 = temp_output_238_0_g174660;
				half Variaton_Mask200_g174660 = Variaton_NoiseMask82_g174660;
				float3 lerpResult75_g174660 = lerp( (_VariationColorTwo).rgb , (_VariationColorOne).rgb , Variaton_Mask200_g174660);
				float temp_output_162_11_g174660 = Out_MultiMask4_g174662;
				half Visual_MultiMask196_g174660 = temp_output_162_11_g174660;
				float lerpResult190_g174660 = lerp( 1.0 , Visual_MultiMask196_g174660 , _VariationMultiValue);
				half Variaton_MultiMask194_g174660 = lerpResult190_g174660;
				float3 lerpResult186_g174660 = lerp( Visual_Albedo127_g174660 , ( Visual_Albedo127_g174660 * lerpResult75_g174660 ) , ( _VariationIntensityValue * Variaton_MultiMask194_g174660 ));
				#ifdef TVE_VARIATION
				float3 staticSwitch171_g174660 = lerpResult186_g174660;
				#else
				float3 staticSwitch171_g174660 = Visual_Albedo127_g174660;
				#endif
				half3 Final_Albedo160_g174660 = staticSwitch171_g174660;
				float3 In_Albedo3_g174663 = Final_Albedo160_g174660;
				float3 In_AlbedoRaw3_g174663 = Final_Albedo160_g174660;
				float2 In_NormalTS3_g174663 = Out_NormalTS4_g174662;
				float3 In_NormalWS3_g174663 = Out_NormalWS4_g174662;
				float4 In_Shader3_g174663 = Out_Shader4_g174662;
				float4 In_Emissive3_g174663 = Out_Emissive4_g174662;
				float3 temp_output_3_0_g174661 = Final_Albedo160_g174660;
				float dotResult20_g174661 = dot( temp_output_3_0_g174661 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale164_g174660 = dotResult20_g174661;
				float In_Grayscale3_g174663 = Final_Grayscale164_g174660;
				float clampResult180_g174660 = clamp( saturate( ( Final_Grayscale164_g174660 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity181_g174660 = clampResult180_g174660;
				float In_Luminosity3_g174663 = Final_Luminosity181_g174660;
				float In_MultiMask3_g174663 = temp_output_162_11_g174660;
				float In_AlphaClip3_g174663 = Out_AlphaClip4_g174662;
				float In_AlphaFade3_g174663 = Out_AlphaFade4_g174662;
				float3 In_Translucency3_g174663 = Out_Translucency4_g174662;
				float In_Transmission3_g174663 = Out_Transmission4_g174662;
				float In_Thickness3_g174663 = Out_Thickness4_g174662;
				float In_Diffusion3_g174663 = Out_Diffusion4_g174662;
				Data3_g174663.Dummy = In_Dummy3_g174663;
				Data3_g174663.Albedo = In_Albedo3_g174663;
				Data3_g174663.AlbedoRaw = In_AlbedoRaw3_g174663;
				Data3_g174663.NormalTS = In_NormalTS3_g174663;
				Data3_g174663.NormalWS = In_NormalWS3_g174663;
				Data3_g174663.Shader = In_Shader3_g174663;
				Data3_g174663.Emissive= In_Emissive3_g174663;
				Data3_g174663.MultiMask = In_MultiMask3_g174663;
				Data3_g174663.Grayscale = In_Grayscale3_g174663;
				Data3_g174663.Luminosity = In_Luminosity3_g174663;
				Data3_g174663.AlphaClip = In_AlphaClip3_g174663;
				Data3_g174663.AlphaFade = In_AlphaFade3_g174663;
				Data3_g174663.Translucency = In_Translucency3_g174663;
				Data3_g174663.Transmission = In_Transmission3_g174663;
				Data3_g174663.Thickness = In_Thickness3_g174663;
				Data3_g174663.Diffusion = In_Diffusion3_g174663;
				TVEVisualData Data4_g174692 = Data3_g174663;
				float Out_Dummy4_g174692 = 0;
				float3 Out_Albedo4_g174692 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174692 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174692 = float2( 0,0 );
				float3 Out_NormalWS4_g174692 = float3( 0,0,0 );
				float4 Out_Shader4_g174692 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174692 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174692 = 0;
				float Out_Grayscale4_g174692 = 0;
				float Out_Luminosity4_g174692 = 0;
				float Out_AlphaClip4_g174692 = 0;
				float Out_AlphaFade4_g174692 = 0;
				float3 Out_Translucency4_g174692 = float3( 0,0,0 );
				float Out_Transmission4_g174692 = 0;
				float Out_Thickness4_g174692 = 0;
				float Out_Diffusion4_g174692 = 0;
				Out_Dummy4_g174692 = Data4_g174692.Dummy;
				Out_Albedo4_g174692 = Data4_g174692.Albedo;
				Out_AlbedoRaw4_g174692 = Data4_g174692.AlbedoRaw;
				Out_NormalTS4_g174692 = Data4_g174692.NormalTS;
				Out_NormalWS4_g174692 = Data4_g174692.NormalWS;
				Out_Shader4_g174692 = Data4_g174692.Shader;
				Out_Emissive4_g174692= Data4_g174692.Emissive;
				Out_MultiMask4_g174692 = Data4_g174692.MultiMask;
				Out_Grayscale4_g174692 = Data4_g174692.Grayscale;
				Out_Luminosity4_g174692= Data4_g174692.Luminosity;
				Out_AlphaClip4_g174692 = Data4_g174692.AlphaClip;
				Out_AlphaFade4_g174692 = Data4_g174692.AlphaFade;
				Out_Translucency4_g174692 = Data4_g174692.Translucency;
				Out_Transmission4_g174692 = Data4_g174692.Transmission;
				Out_Thickness4_g174692 = Data4_g174692.Thickness;
				Out_Diffusion4_g174692 = Data4_g174692.Diffusion;
				half3 Visual_Albedo139_g174670 = Out_Albedo4_g174692;
				float temp_output_200_12_g174670 = Out_Grayscale4_g174692;
				half Visual_Grayscale150_g174670 = temp_output_200_12_g174670;
				float3 temp_cast_46 = (Visual_Grayscale150_g174670).xxx;
				TVEGlobalData Data15_g174671 = Data204_g173897;
				float Out_Dummy15_g174671 = 0;
				float4 Out_CoatParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174671 = float4( 0,0,0,0 );
				Out_Dummy15_g174671 = Data15_g174671.Dummy;
				Out_CoatParams15_g174671 = Data15_g174671.CoatParams;
				Out_PaintParams15_g174671 = Data15_g174671.PaintParams;
				Out_GlowParams15_g174671 = Data15_g174671.GlowParams;
				Out_AtmoParams15_g174671= Data15_g174671.AtmoParams;
				Out_FadeParams15_g174671= Data15_g174671.FadeParams;
				Out_FormParams15_g174671 = Data15_g174671.FormParams;
				Out_LandParams15_g174671 = Data15_g174671.LandParams;
				Out_WindParams15_g174671 = Data15_g174671.WindParams;
				Out_PushParams15_g174671 = Data15_g174671.PushParams;
				half4 Global_PaintParams209_g174670 = Out_PaintParams15_g174671;
				float temp_output_6_0_g174672 = ( saturate( (Global_PaintParams209_g174670).w ) * TVE_IsEnabled );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174672 = ( temp_output_6_0_g174672 + ( _TintingElementMode * 0.0 ) );
				#else
				float staticSwitch14_g174672 = temp_output_6_0_g174672;
				#endif
				#ifdef TVE_TINTING_ELEMENT
				float staticSwitch283_g174670 = staticSwitch14_g174672;
				#else
				float staticSwitch283_g174670 = 1.0;
				#endif
				half Tinting_GlobalValue285_g174670 = staticSwitch283_g174670;
				float3 lerpResult368_g174670 = lerp( Visual_Albedo139_g174670 , temp_cast_46 , ( Tinting_GlobalValue285_g174670 * _TintingGrayValue ));
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174690 = 2.0;
				#else
				float staticSwitch1_g174690 = 4.594794;
				#endif
				float3 temp_cast_47 = (1.0).xxx;
				#ifdef TVE_TINTING_ELEMENT
				float3 staticSwitch288_g174670 = (Global_PaintParams209_g174670).xyz;
				#else
				float3 staticSwitch288_g174670 = temp_cast_47;
				#endif
				half3 Tinting_ColorGlobal290_g174670 = staticSwitch288_g174670;
				float temp_output_200_11_g174670 = Out_MultiMask4_g174692;
				half Visual_MultiMask181_g174670 = temp_output_200_11_g174670;
				float lerpResult147_g174670 = lerp( 1.0 , Visual_MultiMask181_g174670 , _TintingMultiValue);
				half Tinting_MutiMask121_g174670 = lerpResult147_g174670;
				half Tinting_TexMask385_g174670 = 1.0;
				float temp_output_200_15_g174670 = Out_Luminosity4_g174692;
				half Visual_Luminosity257_g174670 = temp_output_200_15_g174670;
				float clampResult17_g174684 = clamp( Visual_Luminosity257_g174670 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174683 = _TintingLumaRemap.x;
				float temp_output_10_0_g174683 = ( _TintingLumaRemap.y - temp_output_7_0_g174683 );
				float lerpResult228_g174670 = lerp( 1.0 , saturate( ( ( clampResult17_g174684 - temp_output_7_0_g174683 ) / ( temp_output_10_0_g174683 + 0.0001 ) ) ) , _TintingLumaValue);
				half Tinting_LumaMask153_g174670 = lerpResult228_g174670;
				TVEModelData Data15_g174693 = Data16_g164566;
				float Out_Dummy15_g174693 = 0;
				float3 Out_PositionWS15_g174693 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174693 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174693 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174693 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174693 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174693 = float3( 0,0,0 );
				float4 Out_VertexData15_g174693 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174693 = float4( 0,0,0,0 );
				Out_Dummy15_g174693 = Data15_g174693.Dummy;
				Out_PositionWS15_g174693 = Data15_g174693.PositionWS;
				Out_PositionWO15_g174693 = Data15_g174693.PositionWO;
				Out_PivotWS15_g174693 = Data15_g174693.PivotWS;
				Out_PivotWO15_g174693 = Data15_g174693.PivotWO;
				Out_NormalWS15_g174693 = Data15_g174693.NormalWS;
				Out_ViewDirWS15_g174693 = Data15_g174693.ViewDirWS;
				Out_VertexData15_g174693 = Data15_g174693.VertexData;
				Out_BoundsData15_g174693 = Data15_g174693.BoundsData;
				half4 Model_VertexMasks307_g174670 = Out_VertexData15_g174693;
				float4 break311_g174670 = Model_VertexMasks307_g174670;
				float4 break33_g174676 = _tinting_vert_mode;
				float temp_output_30_0_g174676 = ( break311_g174670.x * break33_g174676.x );
				float temp_output_29_0_g174676 = ( break311_g174670.y * break33_g174676.y );
				float temp_output_31_0_g174676 = ( break311_g174670.z * break33_g174676.z );
				float temp_output_28_0_g174676 = ( temp_output_30_0_g174676 + temp_output_29_0_g174676 + temp_output_31_0_g174676 + ( break311_g174670.w * break33_g174676.w ) );
				float clampResult17_g174682 = clamp( temp_output_28_0_g174676 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174681 = _TintingMeshRemap.x;
				float temp_output_10_0_g174681 = ( _TintingMeshRemap.y - temp_output_7_0_g174681 );
				float lerpResult370_g174670 = lerp( 1.0 , saturate( ( ( clampResult17_g174682 - temp_output_7_0_g174681 ) / ( temp_output_10_0_g174681 + 0.0001 ) ) ) , _TintingMeshValue);
				float temp_output_6_0_g174685 = lerpResult370_g174670;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174685 = ( temp_output_6_0_g174685 + ( _TintingMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174685 = temp_output_6_0_g174685;
				#endif
				float temp_output_333_0_g174670 = staticSwitch14_g174685;
				half Tinting_VertMask309_g174670 = temp_output_333_0_g174670;
				half Tinting_NoiseMask213_g174670 = 1.0;
				half Custom_Mask345_g174670 = 1.0;
				float temp_output_7_0_g174679 = _TintingBlendRemap.x;
				float temp_output_10_0_g174679 = ( _TintingBlendRemap.y - temp_output_7_0_g174679 );
				half Tinting_Mask242_g174670 = ( saturate( ( ( ( _TintingIntensityValue * Tinting_MutiMask121_g174670 * Tinting_TexMask385_g174670 * Tinting_LumaMask153_g174670 * Tinting_VertMask309_g174670 * Tinting_NoiseMask213_g174670 * Tinting_GlobalValue285_g174670 * Custom_Mask345_g174670 ) - temp_output_7_0_g174679 ) / ( temp_output_10_0_g174679 + 0.0001 ) ) ) * TVE_IsEnabled );
				float3 lerpResult90_g174670 = lerp( Visual_Albedo139_g174670 , ( lerpResult368_g174670 * staticSwitch1_g174690 * Tinting_ColorGlobal290_g174670 * (_TintingColor).rgb ) , Tinting_Mask242_g174670);
				#ifdef TVE_TINTING
				float3 staticSwitch286_g174670 = lerpResult90_g174670;
				#else
				float3 staticSwitch286_g174670 = Visual_Albedo139_g174670;
				#endif
				half3 Final_Albedo97_g174670 = staticSwitch286_g174670;
				float3 In_Albedo3_g174691 = Final_Albedo97_g174670;
				float3 In_AlbedoRaw3_g174691 = Out_AlbedoRaw4_g174692;
				float2 In_NormalTS3_g174691 = Out_NormalTS4_g174692;
				float3 In_NormalWS3_g174691 = Out_NormalWS4_g174692;
				float4 In_Shader3_g174691 = Out_Shader4_g174692;
				float4 In_Emissive3_g174691 = Out_Emissive4_g174692;
				float In_Grayscale3_g174691 = temp_output_200_12_g174670;
				float In_Luminosity3_g174691 = temp_output_200_15_g174670;
				float In_MultiMask3_g174691 = temp_output_200_11_g174670;
				float In_AlphaClip3_g174691 = Out_AlphaClip4_g174692;
				float In_AlphaFade3_g174691 = Out_AlphaFade4_g174692;
				float3 In_Translucency3_g174691 = Out_Translucency4_g174692;
				float In_Transmission3_g174691 = Out_Transmission4_g174692;
				float In_Thickness3_g174691 = Out_Thickness4_g174692;
				float In_Diffusion3_g174691 = Out_Diffusion4_g174692;
				Data3_g174691.Dummy = In_Dummy3_g174691;
				Data3_g174691.Albedo = In_Albedo3_g174691;
				Data3_g174691.AlbedoRaw = In_AlbedoRaw3_g174691;
				Data3_g174691.NormalTS = In_NormalTS3_g174691;
				Data3_g174691.NormalWS = In_NormalWS3_g174691;
				Data3_g174691.Shader = In_Shader3_g174691;
				Data3_g174691.Emissive= In_Emissive3_g174691;
				Data3_g174691.MultiMask = In_MultiMask3_g174691;
				Data3_g174691.Grayscale = In_Grayscale3_g174691;
				Data3_g174691.Luminosity = In_Luminosity3_g174691;
				Data3_g174691.AlphaClip = In_AlphaClip3_g174691;
				Data3_g174691.AlphaFade = In_AlphaFade3_g174691;
				Data3_g174691.Translucency = In_Translucency3_g174691;
				Data3_g174691.Transmission = In_Transmission3_g174691;
				Data3_g174691.Thickness = In_Thickness3_g174691;
				Data3_g174691.Diffusion = In_Diffusion3_g174691;
				TVEVisualData Data4_g174696 = Data3_g174691;
				float Out_Dummy4_g174696 = 0;
				float3 Out_Albedo4_g174696 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174696 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174696 = float2( 0,0 );
				float3 Out_NormalWS4_g174696 = float3( 0,0,0 );
				float4 Out_Shader4_g174696 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174696 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174696 = 0;
				float Out_Grayscale4_g174696 = 0;
				float Out_Luminosity4_g174696 = 0;
				float Out_AlphaClip4_g174696 = 0;
				float Out_AlphaFade4_g174696 = 0;
				float3 Out_Translucency4_g174696 = float3( 0,0,0 );
				float Out_Transmission4_g174696 = 0;
				float Out_Thickness4_g174696 = 0;
				float Out_Diffusion4_g174696 = 0;
				Out_Dummy4_g174696 = Data4_g174696.Dummy;
				Out_Albedo4_g174696 = Data4_g174696.Albedo;
				Out_AlbedoRaw4_g174696 = Data4_g174696.AlbedoRaw;
				Out_NormalTS4_g174696 = Data4_g174696.NormalTS;
				Out_NormalWS4_g174696 = Data4_g174696.NormalWS;
				Out_Shader4_g174696 = Data4_g174696.Shader;
				Out_Emissive4_g174696= Data4_g174696.Emissive;
				Out_MultiMask4_g174696 = Data4_g174696.MultiMask;
				Out_Grayscale4_g174696 = Data4_g174696.Grayscale;
				Out_Luminosity4_g174696= Data4_g174696.Luminosity;
				Out_AlphaClip4_g174696 = Data4_g174696.AlphaClip;
				Out_AlphaFade4_g174696 = Data4_g174696.AlphaFade;
				Out_Translucency4_g174696 = Data4_g174696.Translucency;
				Out_Transmission4_g174696 = Data4_g174696.Transmission;
				Out_Thickness4_g174696 = Data4_g174696.Thickness;
				Out_Diffusion4_g174696 = Data4_g174696.Diffusion;
				half3 Visual_Albedo292_g174694 = Out_Albedo4_g174696;
				float temp_output_280_12_g174694 = Out_Grayscale4_g174696;
				half Visual_Grayscale308_g174694 = temp_output_280_12_g174694;
				float3 temp_cast_48 = (Visual_Grayscale308_g174694).xxx;
				TVEGlobalData Data15_g174695 = Data204_g173897;
				float Out_Dummy15_g174695 = 0;
				float4 Out_CoatParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174695 = float4( 0,0,0,0 );
				Out_Dummy15_g174695 = Data15_g174695.Dummy;
				Out_CoatParams15_g174695 = Data15_g174695.CoatParams;
				Out_PaintParams15_g174695 = Data15_g174695.PaintParams;
				Out_GlowParams15_g174695 = Data15_g174695.GlowParams;
				Out_AtmoParams15_g174695= Data15_g174695.AtmoParams;
				Out_FadeParams15_g174695= Data15_g174695.FadeParams;
				Out_FormParams15_g174695 = Data15_g174695.FormParams;
				Out_LandParams15_g174695 = Data15_g174695.LandParams;
				Out_WindParams15_g174695 = Data15_g174695.WindParams;
				Out_PushParams15_g174695 = Data15_g174695.PushParams;
				half4 Global_AtmoParams314_g174694 = Out_AtmoParams15_g174695;
				#ifdef TVE_DRYNESS_ELEMENT
				float staticSwitch351_g174694 = ( (Global_AtmoParams314_g174694).x * TVE_IsEnabled );
				#else
				float staticSwitch351_g174694 = 1.0;
				#endif
				half Dryness_GlobalMask352_g174694 = staticSwitch351_g174694;
				float3 lerpResult485_g174694 = lerp( Visual_Albedo292_g174694 , temp_cast_48 , ( Dryness_GlobalMask352_g174694 * _DrynessGrayValue ));
				half3 hsvTorgb58_g174715 = RGBToHSV( lerpResult485_g174694 );
				half3 hsvTorgb61_g174715 = HSVToRGB( half3(( hsvTorgb58_g174715.x + _DrynessShiftValue ),hsvTorgb58_g174715.y,hsvTorgb58_g174715.z) );
				#ifdef TVE_DRYNESS_SHIFT
				float3 staticSwitch499_g174694 = hsvTorgb61_g174715;
				#else
				float3 staticSwitch499_g174694 = lerpResult485_g174694;
				#endif
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174714 = 2.0;
				#else
				float staticSwitch1_g174714 = 4.594794;
				#endif
				half Dryness_TexMask478_g174694 = 1.0;
				float temp_output_280_11_g174694 = Out_MultiMask4_g174696;
				half Visual_MultiMask310_g174694 = temp_output_280_11_g174694;
				float lerpResult283_g174694 = lerp( 1.0 , Visual_MultiMask310_g174694 , _DrynessMultiValue);
				half Dryness_MultiMask302_g174694 = lerpResult283_g174694;
				float temp_output_280_15_g174694 = Out_Luminosity4_g174696;
				half Visual_Luminosity309_g174694 = temp_output_280_15_g174694;
				float clampResult17_g174710 = clamp( Visual_Luminosity309_g174694 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174709 = _DrynessLumaRemap.x;
				float temp_output_10_0_g174709 = ( _DrynessLumaRemap.y - temp_output_7_0_g174709 );
				float lerpResult295_g174694 = lerp( 1.0 , saturate( ( ( clampResult17_g174710 - temp_output_7_0_g174709 ) / ( temp_output_10_0_g174709 + 0.0001 ) ) ) , _DrynessLumaValue);
				half Dryness_LumaMask301_g174694 = lerpResult295_g174694;
				TVEModelData Data15_g174716 = Data16_g164566;
				float Out_Dummy15_g174716 = 0;
				float3 Out_PositionWS15_g174716 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174716 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174716 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174716 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174716 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174716 = float3( 0,0,0 );
				float4 Out_VertexData15_g174716 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174716 = float4( 0,0,0,0 );
				Out_Dummy15_g174716 = Data15_g174716.Dummy;
				Out_PositionWS15_g174716 = Data15_g174716.PositionWS;
				Out_PositionWO15_g174716 = Data15_g174716.PositionWO;
				Out_PivotWS15_g174716 = Data15_g174716.PivotWS;
				Out_PivotWO15_g174716 = Data15_g174716.PivotWO;
				Out_NormalWS15_g174716 = Data15_g174716.NormalWS;
				Out_ViewDirWS15_g174716 = Data15_g174716.ViewDirWS;
				Out_VertexData15_g174716 = Data15_g174716.VertexData;
				Out_BoundsData15_g174716 = Data15_g174716.BoundsData;
				half4 Model_VertexMasks386_g174694 = Out_VertexData15_g174716;
				float4 break375_g174694 = Model_VertexMasks386_g174694;
				float4 break33_g174703 = _dryness_vert_mode;
				float temp_output_30_0_g174703 = ( break375_g174694.x * break33_g174703.x );
				float temp_output_29_0_g174703 = ( break375_g174694.y * break33_g174703.y );
				float temp_output_31_0_g174703 = ( break375_g174694.z * break33_g174703.z );
				float temp_output_28_0_g174703 = ( temp_output_30_0_g174703 + temp_output_29_0_g174703 + temp_output_31_0_g174703 + ( break375_g174694.w * break33_g174703.w ) );
				float clampResult17_g174704 = clamp( temp_output_28_0_g174703 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174705 = _DrynessMeshRemap.x;
				float temp_output_10_0_g174705 = ( _DrynessMeshRemap.y - temp_output_7_0_g174705 );
				float lerpResult452_g174694 = lerp( 1.0 , saturate( ( ( clampResult17_g174704 - temp_output_7_0_g174705 ) / ( temp_output_10_0_g174705 + 0.0001 ) ) ) , _DrynessMeshValue);
				float temp_output_6_0_g174711 = lerpResult452_g174694;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174711 = ( temp_output_6_0_g174711 + ( _DrynessMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174711 = temp_output_6_0_g174711;
				#endif
				float temp_output_448_0_g174694 = staticSwitch14_g174711;
				half Dryness_VertMask378_g174694 = temp_output_448_0_g174694;
				half Dryness_MaskNoise291_g174694 = 1.0;
				half Custom_Mask411_g174694 = 1.0;
				float temp_output_7_0_g174708 = _DrynessBlendRemap.x;
				float temp_output_10_0_g174708 = ( _DrynessBlendRemap.y - temp_output_7_0_g174708 );
				half Dryness_Mask329_g174694 = saturate( ( ( ( _DrynessIntensityValue * Dryness_TexMask478_g174694 * Dryness_MultiMask302_g174694 * Dryness_LumaMask301_g174694 * Dryness_VertMask378_g174694 * Dryness_MaskNoise291_g174694 * Dryness_GlobalMask352_g174694 * Custom_Mask411_g174694 ) - temp_output_7_0_g174708 ) / ( temp_output_10_0_g174708 + 0.0001 ) ) );
				float3 lerpResult336_g174694 = lerp( Visual_Albedo292_g174694 , ( staticSwitch499_g174694 * staticSwitch1_g174714 * (_DrynessColor).rgb ) , Dryness_Mask329_g174694);
				#ifdef TVE_DRYNESS
				float3 staticSwitch356_g174694 = lerpResult336_g174694;
				#else
				float3 staticSwitch356_g174694 = Visual_Albedo292_g174694;
				#endif
				half3 Final_Albedo331_g174694 = staticSwitch356_g174694;
				float3 In_Albedo3_g174697 = Final_Albedo331_g174694;
				float3 In_AlbedoRaw3_g174697 = Out_AlbedoRaw4_g174696;
				float2 In_NormalTS3_g174697 = Out_NormalTS4_g174696;
				float3 In_NormalWS3_g174697 = Out_NormalWS4_g174696;
				half4 Visual_Shader415_g174694 = Out_Shader4_g174696;
				float4 break438_g174694 = Visual_Shader415_g174694;
				float4 appendResult439_g174694 = (float4(break438_g174694.x , break438_g174694.y , break438_g174694.z , ( break438_g174694.w * _DrynessSmoothnessValue )));
				float4 lerpResult427_g174694 = lerp( Visual_Shader415_g174694 , appendResult439_g174694 , Dryness_Mask329_g174694);
				#ifdef TVE_DRYNESS
				float4 staticSwitch426_g174694 = lerpResult427_g174694;
				#else
				float4 staticSwitch426_g174694 = Visual_Shader415_g174694;
				#endif
				half4 Final_Shader433_g174694 = staticSwitch426_g174694;
				float4 In_Shader3_g174697 = Final_Shader433_g174694;
				float4 In_Emissive3_g174697 = Out_Emissive4_g174696;
				float In_Grayscale3_g174697 = temp_output_280_12_g174694;
				float In_Luminosity3_g174697 = temp_output_280_15_g174694;
				float In_MultiMask3_g174697 = temp_output_280_11_g174694;
				float In_AlphaClip3_g174697 = Out_AlphaClip4_g174696;
				float In_AlphaFade3_g174697 = Out_AlphaFade4_g174696;
				float3 In_Translucency3_g174697 = Out_Translucency4_g174696;
				half Visual_Transmission416_g174694 = Out_Transmission4_g174696;
				float lerpResult421_g174694 = lerp( Visual_Transmission416_g174694 , ( Visual_Transmission416_g174694 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g174694);
				#ifdef TVE_DRYNESS
				float staticSwitch418_g174694 = lerpResult421_g174694;
				#else
				float staticSwitch418_g174694 = Visual_Transmission416_g174694;
				#endif
				half Final_Transmission425_g174694 = staticSwitch418_g174694;
				float In_Transmission3_g174697 = Final_Transmission425_g174694;
				float In_Thickness3_g174697 = Out_Thickness4_g174696;
				float In_Diffusion3_g174697 = Out_Diffusion4_g174696;
				Data3_g174697.Dummy = In_Dummy3_g174697;
				Data3_g174697.Albedo = In_Albedo3_g174697;
				Data3_g174697.AlbedoRaw = In_AlbedoRaw3_g174697;
				Data3_g174697.NormalTS = In_NormalTS3_g174697;
				Data3_g174697.NormalWS = In_NormalWS3_g174697;
				Data3_g174697.Shader = In_Shader3_g174697;
				Data3_g174697.Emissive= In_Emissive3_g174697;
				Data3_g174697.MultiMask = In_MultiMask3_g174697;
				Data3_g174697.Grayscale = In_Grayscale3_g174697;
				Data3_g174697.Luminosity = In_Luminosity3_g174697;
				Data3_g174697.AlphaClip = In_AlphaClip3_g174697;
				Data3_g174697.AlphaFade = In_AlphaFade3_g174697;
				Data3_g174697.Translucency = In_Translucency3_g174697;
				Data3_g174697.Transmission = In_Transmission3_g174697;
				Data3_g174697.Thickness = In_Thickness3_g174697;
				Data3_g174697.Diffusion = In_Diffusion3_g174697;
				TVEVisualData Data4_g174718 = Data3_g174697;
				float Out_Dummy4_g174718 = 0;
				float3 Out_Albedo4_g174718 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174718 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174718 = float2( 0,0 );
				float3 Out_NormalWS4_g174718 = float3( 0,0,0 );
				float4 Out_Shader4_g174718 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174718 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174718 = 0;
				float Out_Grayscale4_g174718 = 0;
				float Out_Luminosity4_g174718 = 0;
				float Out_AlphaClip4_g174718 = 0;
				float Out_AlphaFade4_g174718 = 0;
				float3 Out_Translucency4_g174718 = float3( 0,0,0 );
				float Out_Transmission4_g174718 = 0;
				float Out_Thickness4_g174718 = 0;
				float Out_Diffusion4_g174718 = 0;
				Out_Dummy4_g174718 = Data4_g174718.Dummy;
				Out_Albedo4_g174718 = Data4_g174718.Albedo;
				Out_AlbedoRaw4_g174718 = Data4_g174718.AlbedoRaw;
				Out_NormalTS4_g174718 = Data4_g174718.NormalTS;
				Out_NormalWS4_g174718 = Data4_g174718.NormalWS;
				Out_Shader4_g174718 = Data4_g174718.Shader;
				Out_Emissive4_g174718= Data4_g174718.Emissive;
				Out_MultiMask4_g174718 = Data4_g174718.MultiMask;
				Out_Grayscale4_g174718 = Data4_g174718.Grayscale;
				Out_Luminosity4_g174718= Data4_g174718.Luminosity;
				Out_AlphaClip4_g174718 = Data4_g174718.AlphaClip;
				Out_AlphaFade4_g174718 = Data4_g174718.AlphaFade;
				Out_Translucency4_g174718 = Data4_g174718.Translucency;
				Out_Transmission4_g174718 = Data4_g174718.Transmission;
				Out_Thickness4_g174718 = Data4_g174718.Thickness;
				Out_Diffusion4_g174718 = Data4_g174718.Diffusion;
				half3 Visual_Albedo127_g174717 = Out_Albedo4_g174718;
				float4 vertexToFrag24_g174669 = IN.ase_texcoord11;
				half4 Interp_Data1003 = vertexToFrag24_g174669;
				float clampResult208_g174717 = clamp( (Interp_Data1003).w , 0.0 , 0.09 );
				#ifdef TVE_MOTION_HIGHLIGHT
				float3 staticSwitch214_g174717 = ( Visual_Albedo127_g174717 + ( ( Visual_Albedo127_g174717 * Visual_Albedo127_g174717 * 200.0 * _motion_highlight_color ) * clampResult208_g174717 ) );
				#else
				float3 staticSwitch214_g174717 = Visual_Albedo127_g174717;
				#endif
				half3 Final_Albedo160_g174717 = staticSwitch214_g174717;
				float3 In_Albedo3_g174719 = Final_Albedo160_g174717;
				float3 In_AlbedoRaw3_g174719 = Out_AlbedoRaw4_g174718;
				float2 In_NormalTS3_g174719 = Out_NormalTS4_g174718;
				float3 In_NormalWS3_g174719 = Out_NormalWS4_g174718;
				float4 In_Shader3_g174719 = Out_Shader4_g174718;
				float4 In_Emissive3_g174719 = Out_Emissive4_g174718;
				float In_Grayscale3_g174719 = Out_Grayscale4_g174718;
				float In_Luminosity3_g174719 = Out_Luminosity4_g174718;
				float In_MultiMask3_g174719 = Out_MultiMask4_g174718;
				float In_AlphaClip3_g174719 = Out_AlphaClip4_g174718;
				float In_AlphaFade3_g174719 = Out_AlphaFade4_g174718;
				float3 In_Translucency3_g174719 = Out_Translucency4_g174718;
				float In_Transmission3_g174719 = Out_Transmission4_g174718;
				float In_Thickness3_g174719 = Out_Thickness4_g174718;
				float In_Diffusion3_g174719 = Out_Diffusion4_g174718;
				Data3_g174719.Dummy = In_Dummy3_g174719;
				Data3_g174719.Albedo = In_Albedo3_g174719;
				Data3_g174719.AlbedoRaw = In_AlbedoRaw3_g174719;
				Data3_g174719.NormalTS = In_NormalTS3_g174719;
				Data3_g174719.NormalWS = In_NormalWS3_g174719;
				Data3_g174719.Shader = In_Shader3_g174719;
				Data3_g174719.Emissive= In_Emissive3_g174719;
				Data3_g174719.MultiMask = In_MultiMask3_g174719;
				Data3_g174719.Grayscale = In_Grayscale3_g174719;
				Data3_g174719.Luminosity = In_Luminosity3_g174719;
				Data3_g174719.AlphaClip = In_AlphaClip3_g174719;
				Data3_g174719.AlphaFade = In_AlphaFade3_g174719;
				Data3_g174719.Translucency = In_Translucency3_g174719;
				Data3_g174719.Transmission = In_Transmission3_g174719;
				Data3_g174719.Thickness = In_Thickness3_g174719;
				Data3_g174719.Diffusion = In_Diffusion3_g174719;
				TVEVisualData Data4_g174721 = Data3_g174719;
				float Out_Dummy4_g174721 = 0;
				float3 Out_Albedo4_g174721 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174721 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174721 = float2( 0,0 );
				float3 Out_NormalWS4_g174721 = float3( 0,0,0 );
				float4 Out_Shader4_g174721 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174721 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174721 = 0;
				float Out_Grayscale4_g174721 = 0;
				float Out_Luminosity4_g174721 = 0;
				float Out_AlphaClip4_g174721 = 0;
				float Out_AlphaFade4_g174721 = 0;
				float3 Out_Translucency4_g174721 = float3( 0,0,0 );
				float Out_Transmission4_g174721 = 0;
				float Out_Thickness4_g174721 = 0;
				float Out_Diffusion4_g174721 = 0;
				Out_Dummy4_g174721 = Data4_g174721.Dummy;
				Out_Albedo4_g174721 = Data4_g174721.Albedo;
				Out_AlbedoRaw4_g174721 = Data4_g174721.AlbedoRaw;
				Out_NormalTS4_g174721 = Data4_g174721.NormalTS;
				Out_NormalWS4_g174721 = Data4_g174721.NormalWS;
				Out_Shader4_g174721 = Data4_g174721.Shader;
				Out_Emissive4_g174721= Data4_g174721.Emissive;
				Out_MultiMask4_g174721 = Data4_g174721.MultiMask;
				Out_Grayscale4_g174721 = Data4_g174721.Grayscale;
				Out_Luminosity4_g174721= Data4_g174721.Luminosity;
				Out_AlphaClip4_g174721 = Data4_g174721.AlphaClip;
				Out_AlphaFade4_g174721 = Data4_g174721.AlphaFade;
				Out_Translucency4_g174721 = Data4_g174721.Translucency;
				Out_Transmission4_g174721 = Data4_g174721.Transmission;
				Out_Thickness4_g174721 = Data4_g174721.Thickness;
				Out_Diffusion4_g174721 = Data4_g174721.Diffusion;
				half3 Visual_Albedo127_g174720 = Out_Albedo4_g174721;
				float3 temp_output_622_0_g174720 = (_OverlayColor).rgb;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174724) = _OverlayAlbedoTex;
				float localFilterTexture19_g174753 = ( 0.0 );
				SamplerState SamplerDefault19_g174753 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174753 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174753 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174753 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174753 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174753 = SamplerDefault19_g174753;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174753 = SamplerDefault19_g174753;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174753 = SamplerPoint19_g174753;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174753 = SamplerLow19_g174753;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174753 = SamplerMedium19_g174753;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174753 = SamplerHigh19_g174753;
				#endif
				SamplerState Sampler238_g174724 = SS19_g174753;
				float4 temp_output_6_0_g174725 = _overlay_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174725 = ( temp_output_6_0_g174725 + ( ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174725 = temp_output_6_0_g174725;
				#endif
				half4 Overlay_Coords639_g174720 = staticSwitch14_g174725;
				float4 temp_output_37_0_g174724 = Overlay_Coords639_g174720;
				half4 Coords238_g174724 = temp_output_37_0_g174724;
				TVEModelData Data15_g174755 = Data16_g164566;
				float Out_Dummy15_g174755 = 0;
				float3 Out_PositionWS15_g174755 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174755 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174755 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174755 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174755 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174755 = float3( 0,0,0 );
				float4 Out_VertexData15_g174755 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174755 = float4( 0,0,0,0 );
				Out_Dummy15_g174755 = Data15_g174755.Dummy;
				Out_PositionWS15_g174755 = Data15_g174755.PositionWS;
				Out_PositionWO15_g174755 = Data15_g174755.PositionWO;
				Out_PivotWS15_g174755 = Data15_g174755.PivotWS;
				Out_PivotWO15_g174755 = Data15_g174755.PivotWO;
				Out_NormalWS15_g174755 = Data15_g174755.NormalWS;
				Out_ViewDirWS15_g174755 = Data15_g174755.ViewDirWS;
				Out_VertexData15_g174755 = Data15_g174755.VertexData;
				Out_BoundsData15_g174755 = Data15_g174755.BoundsData;
				half3 Model_PositionWO602_g174720 = Out_PositionWO15_g174755;
				float3 temp_output_279_0_g174724 = Model_PositionWO602_g174720;
				half3 WorldPosition238_g174724 = temp_output_279_0_g174724;
				half4 localSamplePlanar2D238_g174724 = SamplePlanar2D( Texture238_g174724 , Sampler238_g174724 , Coords238_g174724 , WorldPosition238_g174724 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174724) = _OverlayAlbedoTex;
				SamplerState Sampler246_g174724 = SS19_g174753;
				half4 Coords246_g174724 = temp_output_37_0_g174724;
				half3 WorldPosition246_g174724 = temp_output_279_0_g174724;
				half3 Model_NormalWS712_g174720 = Out_NormalWS15_g174755;
				float3 temp_output_280_0_g174724 = Model_NormalWS712_g174720;
				half3 WorldNormal246_g174724 = temp_output_280_0_g174724;
				half4 localSamplePlanar3D246_g174724 = SamplePlanar3D( Texture246_g174724 , Sampler246_g174724 , Coords246_g174724 , WorldPosition246_g174724 , WorldNormal246_g174724 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174724) = _OverlayAlbedoTex;
				SamplerState Sampler234_g174724 = SS19_g174753;
				float4 Coords234_g174724 = temp_output_37_0_g174724;
				float3 WorldPosition234_g174724 = temp_output_279_0_g174724;
				float4 localSampleStochastic2D234_g174724 = SampleStochastic2D( Texture234_g174724 , Sampler234_g174724 , Coords234_g174724 , WorldPosition234_g174724 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174724) = _OverlayAlbedoTex;
				SamplerState Sampler263_g174724 = SS19_g174753;
				half4 Coords263_g174724 = temp_output_37_0_g174724;
				half3 WorldPosition263_g174724 = temp_output_279_0_g174724;
				half3 WorldNormal263_g174724 = temp_output_280_0_g174724;
				half4 localSampleStochastic3D263_g174724 = SampleStochastic3D( Texture263_g174724 , Sampler263_g174724 , Coords263_g174724 , WorldPosition263_g174724 , WorldNormal263_g174724 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch676_g174720 = localSamplePlanar2D238_g174724;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch676_g174720 = localSamplePlanar3D246_g174724;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch676_g174720 = localSampleStochastic2D234_g174724;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch676_g174720 = localSampleStochastic3D263_g174724;
				#else
				float4 staticSwitch676_g174720 = localSamplePlanar2D238_g174724;
				#endif
				half3 Overlay_Albedo526_g174720 = (staticSwitch676_g174720).xyz;
				#ifdef TVE_OVERLAY_TEX
				float3 staticSwitch578_g174720 = ( temp_output_622_0_g174720 * Overlay_Albedo526_g174720 );
				#else
				float3 staticSwitch578_g174720 = temp_output_622_0_g174720;
				#endif
				float3 temp_output_6_0_g174731 = staticSwitch578_g174720;
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g174731 = ( temp_output_6_0_g174731 + ( _OverlayTextureMode * 0.0 ) );
				#else
				float3 staticSwitch14_g174731 = temp_output_6_0_g174731;
				#endif
				float3 temp_cast_49 = (0.0).xxx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174728) = _OverlayGlitterTexRT;
				SamplerState Sampler246_g174728 = sampler_Linear_Repeat;
				float4 appendResult863_g174720 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g174728 = appendResult863_g174720;
				half4 Coords246_g174728 = temp_output_37_0_g174728;
				float3 temp_output_279_0_g174728 = Model_PositionWO602_g174720;
				half3 WorldPosition246_g174728 = temp_output_279_0_g174728;
				float3 temp_output_280_0_g174728 = Model_NormalWS712_g174720;
				half3 WorldNormal246_g174728 = temp_output_280_0_g174728;
				half4 localSamplePlanar3D246_g174728 = SamplePlanar3D( Texture246_g174728 , Sampler246_g174728 , Coords246_g174728 , WorldPosition246_g174728 , WorldNormal246_g174728 );
				half Overlay_GlitterTex854_g174720 = (localSamplePlanar3D246_g174728).x;
				half3 Model_PositionWS879_g174720 = Out_PositionWS15_g174755;
				#ifdef TVE_OVERLAY_GLITTER
				float3 staticSwitch868_g174720 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g174720 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g174720 ) / _OverlayGlitterDistValue ) ) ) );
				#else
				float3 staticSwitch868_g174720 = temp_cast_49;
				#endif
				half3 Overlay_GlitterColor865_g174720 = staticSwitch868_g174720;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174745) = _OverlayMaskTex;
				SamplerState Sampler276_g174745 = sampler_Linear_Repeat;
				float4 temp_output_6_0_g174746 = _overlay_mask_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174746 = ( temp_output_6_0_g174746 + ( ( _OverlayMaskSampleMode + _OverlayMaskCoordMode + _OverlayMaskCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174746 = temp_output_6_0_g174746;
				#endif
				half4 Local_MaskCoords888_g174720 = staticSwitch14_g174746;
				float4 temp_output_37_0_g174745 = Local_MaskCoords888_g174720;
				half4 Coords276_g174745 = temp_output_37_0_g174745;
				half2 TexCoord276_g174745 = IN.ase_texcoord3.xy;
				half4 localSampleMain276_g174745 = SampleMain( Texture276_g174745 , Sampler276_g174745 , Coords276_g174745 , TexCoord276_g174745 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174745) = _OverlayMaskTex;
				SamplerState Sampler275_g174745 = sampler_Linear_Repeat;
				half4 Coords275_g174745 = temp_output_37_0_g174745;
				half2 TexCoord275_g174745 = IN.ase_texcoord4.xy;
				half4 localSampleExtra275_g174745 = SampleExtra( Texture275_g174745 , Sampler275_g174745 , Coords275_g174745 , TexCoord275_g174745 );
				#if defined( TVE_OVERLAY_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch894_g174720 = localSampleMain276_g174745;
				#elif defined( TVE_OVERLAY_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch894_g174720 = localSampleExtra275_g174745;
				#else
				float4 staticSwitch894_g174720 = localSampleMain276_g174745;
				#endif
				half4 Local_MaskTex887_g174720 = staticSwitch894_g174720;
				float clampResult17_g174747 = clamp( (Local_MaskTex887_g174720).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174748 = _OverlayMaskRemap.x;
				float temp_output_10_0_g174748 = ( _OverlayMaskRemap.y - temp_output_7_0_g174748 );
				float lerpResult900_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174747 - temp_output_7_0_g174748 ) / ( temp_output_10_0_g174748 + 0.0001 ) ) ) , _OverlayMaskValue);
				half Overlay_TexMask908_g174720 = lerpResult900_g174720;
				float3 temp_output_739_21_g174720 = Out_NormalWS4_g174721;
				half3 Visual_NormalWS749_g174720 = temp_output_739_21_g174720;
				float clampResult17_g174741 = clamp( saturate( (Visual_NormalWS749_g174720).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174740 = _OverlayProjRemap.x;
				float temp_output_10_0_g174740 = ( _OverlayProjRemap.y - temp_output_7_0_g174740 );
				float lerpResult842_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174741 - temp_output_7_0_g174740 ) / ( temp_output_10_0_g174740 + 0.0001 ) ) ) , _OverlayProjValue);
				half Overlay_MaskProj457_g174720 = lerpResult842_g174720;
				float temp_output_739_15_g174720 = Out_Luminosity4_g174721;
				half Visual_Luminosity654_g174720 = temp_output_739_15_g174720;
				float clampResult17_g174743 = clamp( Visual_Luminosity654_g174720 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174742 = _OverlayLumaRemap.x;
				float temp_output_10_0_g174742 = ( _OverlayLumaRemap.y - temp_output_7_0_g174742 );
				float lerpResult587_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174743 - temp_output_7_0_g174742 ) / ( temp_output_10_0_g174742 + 0.0001 ) ) ) , _OverlayLumaValue);
				half Overlay_MaskLuma438_g174720 = lerpResult587_g174720;
				half4 Model_VertexMasks791_g174720 = Out_VertexData15_g174755;
				float4 break792_g174720 = Model_VertexMasks791_g174720;
				float4 break33_g174733 = _overlay_vert_mode;
				float temp_output_30_0_g174733 = ( break792_g174720.x * break33_g174733.x );
				float temp_output_29_0_g174733 = ( break792_g174720.y * break33_g174733.y );
				float temp_output_31_0_g174733 = ( break792_g174720.z * break33_g174733.z );
				float temp_output_28_0_g174733 = ( temp_output_30_0_g174733 + temp_output_29_0_g174733 + temp_output_31_0_g174733 + ( break792_g174720.w * break33_g174733.w ) );
				float clampResult17_g174734 = clamp( temp_output_28_0_g174733 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174737 = _OverlayMeshRemap.x;
				float temp_output_10_0_g174737 = ( _OverlayMeshRemap.y - temp_output_7_0_g174737 );
				float lerpResult881_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174734 - temp_output_7_0_g174737 ) / ( temp_output_10_0_g174737 + 0.0001 ) ) ) , _OverlayMeshValue);
				float temp_output_6_0_g174744 = lerpResult881_g174720;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174744 = ( temp_output_6_0_g174744 + ( _OverlayMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174744 = temp_output_6_0_g174744;
				#endif
				float temp_output_831_0_g174720 = staticSwitch14_g174744;
				half Overlay_VertMask801_g174720 = temp_output_831_0_g174720;
				half Overlay_MaskNoise427_g174720 = 1.0;
				TVEGlobalData Data15_g174722 = Data204_g173897;
				float Out_Dummy15_g174722 = 0;
				float4 Out_CoatParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174722 = float4( 0,0,0,0 );
				Out_Dummy15_g174722 = Data15_g174722.Dummy;
				Out_CoatParams15_g174722 = Data15_g174722.CoatParams;
				Out_PaintParams15_g174722 = Data15_g174722.PaintParams;
				Out_GlowParams15_g174722 = Data15_g174722.GlowParams;
				Out_AtmoParams15_g174722= Data15_g174722.AtmoParams;
				Out_FadeParams15_g174722= Data15_g174722.FadeParams;
				Out_FormParams15_g174722 = Data15_g174722.FormParams;
				Out_LandParams15_g174722 = Data15_g174722.LandParams;
				Out_WindParams15_g174722 = Data15_g174722.WindParams;
				Out_PushParams15_g174722 = Data15_g174722.PushParams;
				half4 Global_AtmoParams516_g174720 = Out_AtmoParams15_g174722;
				#ifdef TVE_OVERLAY_ELEMENT
				float staticSwitch705_g174720 = ( (Global_AtmoParams516_g174720).z * TVE_IsEnabled );
				#else
				float staticSwitch705_g174720 = 1.0;
				#endif
				half Overlay_MaskGlobal429_g174720 = staticSwitch705_g174720;
				half Custom_Mask646_g174720 = 1.0;
				float temp_output_7_0_g174749 = _OverlayBlendRemap1.x;
				float temp_output_10_0_g174749 = ( _OverlayBlendRemap1.y - temp_output_7_0_g174749 );
				half Overlay_Mask494_g174720 = saturate( ( ( ( _OverlayIntensityValue * Overlay_TexMask908_g174720 * Overlay_MaskProj457_g174720 * Overlay_MaskLuma438_g174720 * Overlay_VertMask801_g174720 * Overlay_MaskNoise427_g174720 * Overlay_MaskGlobal429_g174720 * Custom_Mask646_g174720 ) - temp_output_7_0_g174749 ) / ( temp_output_10_0_g174749 + 0.0001 ) ) );
				float3 lerpResult467_g174720 = lerp( Visual_Albedo127_g174720 , ( staticSwitch14_g174731 + Overlay_GlitterColor865_g174720 ) , Overlay_Mask494_g174720);
				#ifdef TVE_OVERLAY
				float3 staticSwitch577_g174720 = lerpResult467_g174720;
				#else
				float3 staticSwitch577_g174720 = Visual_Albedo127_g174720;
				#endif
				half3 Final_Albedo493_g174720 = staticSwitch577_g174720;
				float3 In_Albedo3_g174723 = Final_Albedo493_g174720;
				float3 In_AlbedoRaw3_g174723 = Out_AlbedoRaw4_g174721;
				half2 Visual_NormalTS535_g174720 = Out_NormalTS4_g174721;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174726) = _OverlayNormalTex;
				float localFilterTexture29_g174754 = ( 0.0 );
				SamplerState SamplerDefault29_g174754 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174754 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174754 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174754 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174754 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174754 = SamplerDefault29_g174754;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174754 = SamplerDefault29_g174754;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174754 = SamplerPoint29_g174754;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174754 = SamplerLow29_g174754;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174754 = SamplerMedium29_g174754;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174754 = SamplerHigh29_g174754;
				#endif
				SamplerState Sampler238_g174726 = SS29_g174754;
				float4 temp_output_37_0_g174726 = Overlay_Coords639_g174720;
				half4 Coords238_g174726 = temp_output_37_0_g174726;
				float3 temp_output_279_0_g174726 = Model_PositionWO602_g174720;
				half3 WorldPosition238_g174726 = temp_output_279_0_g174726;
				half4 localSamplePlanar2D238_g174726 = SamplePlanar2D( Texture238_g174726 , Sampler238_g174726 , Coords238_g174726 , WorldPosition238_g174726 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174726) = _OverlayNormalTex;
				SamplerState Sampler246_g174726 = SS29_g174754;
				half4 Coords246_g174726 = temp_output_37_0_g174726;
				half3 WorldPosition246_g174726 = temp_output_279_0_g174726;
				float3 temp_output_280_0_g174726 = Model_NormalWS712_g174720;
				half3 WorldNormal246_g174726 = temp_output_280_0_g174726;
				half4 localSamplePlanar3D246_g174726 = SamplePlanar3D( Texture246_g174726 , Sampler246_g174726 , Coords246_g174726 , WorldPosition246_g174726 , WorldNormal246_g174726 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174726) = _OverlayNormalTex;
				SamplerState Sampler234_g174726 = SS29_g174754;
				float4 Coords234_g174726 = temp_output_37_0_g174726;
				float3 WorldPosition234_g174726 = temp_output_279_0_g174726;
				float4 localSampleStochastic2D234_g174726 = SampleStochastic2D( Texture234_g174726 , Sampler234_g174726 , Coords234_g174726 , WorldPosition234_g174726 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174726) = _OverlayNormalTex;
				SamplerState Sampler263_g174726 = SS29_g174754;
				half4 Coords263_g174726 = temp_output_37_0_g174726;
				half3 WorldPosition263_g174726 = temp_output_279_0_g174726;
				half3 WorldNormal263_g174726 = temp_output_280_0_g174726;
				half4 localSampleStochastic3D263_g174726 = SampleStochastic3D( Texture263_g174726 , Sampler263_g174726 , Coords263_g174726 , WorldPosition263_g174726 , WorldNormal263_g174726 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch686_g174720 = localSamplePlanar2D238_g174726;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch686_g174720 = localSamplePlanar3D246_g174726;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch686_g174720 = localSampleStochastic2D234_g174726;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch686_g174720 = localSampleStochastic3D263_g174726;
				#else
				float4 staticSwitch686_g174720 = localSamplePlanar2D238_g174726;
				#endif
				half4 Normal_Packed45_g174730 = staticSwitch686_g174720;
				float2 appendResult58_g174730 = (float2(( (Normal_Packed45_g174730).x * (Normal_Packed45_g174730).w ) , (Normal_Packed45_g174730).y));
				half2 Normal_Default50_g174730 = appendResult58_g174730;
				half2 Normal_ASTC41_g174730 = (Normal_Packed45_g174730).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174730 = Normal_ASTC41_g174730;
				#else
				float2 staticSwitch38_g174730 = Normal_Default50_g174730;
				#endif
				half2 Normal_NO_DTX544_g174730 = (Normal_Packed45_g174730).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174730 = Normal_NO_DTX544_g174730;
				#else
				float2 staticSwitch37_g174730 = staticSwitch38_g174730;
				#endif
				half2 Normal_Planar45_g174729 = (staticSwitch37_g174730*2.0 + -1.0);
				float2 break71_g174729 = Normal_Planar45_g174729;
				float3 appendResult72_g174729 = (float3(break71_g174729.x , 0.0 , break71_g174729.y));
				half2 Overlay_Normal528_g174720 = (mul( ase_worldToTangent, appendResult72_g174729 )).xy;
				#ifdef TVE_OVERLAY_TEX
				float2 staticSwitch579_g174720 = Overlay_Normal528_g174720;
				#else
				float2 staticSwitch579_g174720 = Visual_NormalTS535_g174720;
				#endif
				float2 lerpResult551_g174720 = lerp( Visual_NormalTS535_g174720 , ( staticSwitch579_g174720 * _OverlayNormalValue ) , Overlay_Mask494_g174720);
				#ifdef TVE_OVERLAY
				float2 staticSwitch583_g174720 = lerpResult551_g174720;
				#else
				float2 staticSwitch583_g174720 = Visual_NormalTS535_g174720;
				#endif
				half2 Final_NormalTS499_g174720 = staticSwitch583_g174720;
				float2 In_NormalTS3_g174723 = Final_NormalTS499_g174720;
				float3 In_NormalWS3_g174723 = temp_output_739_21_g174720;
				half4 Visual_Masks536_g174720 = Out_Shader4_g174721;
				float4 appendResult585_g174720 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
				float4 lerpResult584_g174720 = lerp( Visual_Masks536_g174720 , appendResult585_g174720 , Overlay_Mask494_g174720);
				#ifdef TVE_OVERLAY
				float4 staticSwitch586_g174720 = lerpResult584_g174720;
				#else
				float4 staticSwitch586_g174720 = Visual_Masks536_g174720;
				#endif
				half4 Final_Masks482_g174720 = staticSwitch586_g174720;
				float4 In_Shader3_g174723 = Final_Masks482_g174720;
				float4 In_Emissive3_g174723 = Out_Emissive4_g174721;
				float temp_output_739_12_g174720 = Out_Grayscale4_g174721;
				float In_Grayscale3_g174723 = temp_output_739_12_g174720;
				float In_Luminosity3_g174723 = temp_output_739_15_g174720;
				float In_MultiMask3_g174723 = Out_MultiMask4_g174721;
				float In_AlphaClip3_g174723 = Out_AlphaClip4_g174721;
				float In_AlphaFade3_g174723 = Out_AlphaFade4_g174721;
				float3 In_Translucency3_g174723 = Out_Translucency4_g174721;
				half Visual_Transmission699_g174720 = Out_Transmission4_g174721;
				float lerpResult746_g174720 = lerp( Visual_Transmission699_g174720 , ( Visual_Transmission699_g174720 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g174720 * Overlay_MaskNoise427_g174720 * Overlay_MaskGlobal429_g174720 ));
				#ifdef TVE_OVERLAY
				float staticSwitch703_g174720 = lerpResult746_g174720;
				#else
				float staticSwitch703_g174720 = Visual_Transmission699_g174720;
				#endif
				half Final_Transmission702_g174720 = staticSwitch703_g174720;
				float In_Transmission3_g174723 = Final_Transmission702_g174720;
				float In_Thickness3_g174723 = Out_Thickness4_g174721;
				float In_Diffusion3_g174723 = Out_Diffusion4_g174721;
				Data3_g174723.Dummy = In_Dummy3_g174723;
				Data3_g174723.Albedo = In_Albedo3_g174723;
				Data3_g174723.AlbedoRaw = In_AlbedoRaw3_g174723;
				Data3_g174723.NormalTS = In_NormalTS3_g174723;
				Data3_g174723.NormalWS = In_NormalWS3_g174723;
				Data3_g174723.Shader = In_Shader3_g174723;
				Data3_g174723.Emissive= In_Emissive3_g174723;
				Data3_g174723.MultiMask = In_MultiMask3_g174723;
				Data3_g174723.Grayscale = In_Grayscale3_g174723;
				Data3_g174723.Luminosity = In_Luminosity3_g174723;
				Data3_g174723.AlphaClip = In_AlphaClip3_g174723;
				Data3_g174723.AlphaFade = In_AlphaFade3_g174723;
				Data3_g174723.Translucency = In_Translucency3_g174723;
				Data3_g174723.Transmission = In_Transmission3_g174723;
				Data3_g174723.Thickness = In_Thickness3_g174723;
				Data3_g174723.Diffusion = In_Diffusion3_g174723;
				TVEVisualData Data4_g174757 = Data3_g174723;
				float Out_Dummy4_g174757 = 0;
				float3 Out_Albedo4_g174757 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174757 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174757 = float2( 0,0 );
				float3 Out_NormalWS4_g174757 = float3( 0,0,0 );
				float4 Out_Shader4_g174757 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174757 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174757 = 0;
				float Out_Grayscale4_g174757 = 0;
				float Out_Luminosity4_g174757 = 0;
				float Out_AlphaClip4_g174757 = 0;
				float Out_AlphaFade4_g174757 = 0;
				float3 Out_Translucency4_g174757 = float3( 0,0,0 );
				float Out_Transmission4_g174757 = 0;
				float Out_Thickness4_g174757 = 0;
				float Out_Diffusion4_g174757 = 0;
				Out_Dummy4_g174757 = Data4_g174757.Dummy;
				Out_Albedo4_g174757 = Data4_g174757.Albedo;
				Out_AlbedoRaw4_g174757 = Data4_g174757.AlbedoRaw;
				Out_NormalTS4_g174757 = Data4_g174757.NormalTS;
				Out_NormalWS4_g174757 = Data4_g174757.NormalWS;
				Out_Shader4_g174757 = Data4_g174757.Shader;
				Out_Emissive4_g174757= Data4_g174757.Emissive;
				Out_MultiMask4_g174757 = Data4_g174757.MultiMask;
				Out_Grayscale4_g174757 = Data4_g174757.Grayscale;
				Out_Luminosity4_g174757= Data4_g174757.Luminosity;
				Out_AlphaClip4_g174757 = Data4_g174757.AlphaClip;
				Out_AlphaFade4_g174757 = Data4_g174757.AlphaFade;
				Out_Translucency4_g174757 = Data4_g174757.Translucency;
				Out_Transmission4_g174757 = Data4_g174757.Transmission;
				Out_Thickness4_g174757 = Data4_g174757.Thickness;
				Out_Diffusion4_g174757 = Data4_g174757.Diffusion;
				half3 Visual_Albedo127_g174756 = Out_Albedo4_g174757;
				TVEGlobalData Data15_g174762 = Data204_g173897;
				float Out_Dummy15_g174762 = 0;
				float4 Out_CoatParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174762 = float4( 0,0,0,0 );
				Out_Dummy15_g174762 = Data15_g174762.Dummy;
				Out_CoatParams15_g174762 = Data15_g174762.CoatParams;
				Out_PaintParams15_g174762 = Data15_g174762.PaintParams;
				Out_GlowParams15_g174762 = Data15_g174762.GlowParams;
				Out_AtmoParams15_g174762= Data15_g174762.AtmoParams;
				Out_FadeParams15_g174762= Data15_g174762.FadeParams;
				Out_FormParams15_g174762 = Data15_g174762.FormParams;
				Out_LandParams15_g174762 = Data15_g174762.LandParams;
				Out_WindParams15_g174762 = Data15_g174762.WindParams;
				Out_PushParams15_g174762 = Data15_g174762.PushParams;
				half4 Global_AtmoParams516_g174756 = Out_AtmoParams15_g174762;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch663_g174756 = ( (Global_AtmoParams516_g174756).y * TVE_IsEnabled );
				#else
				float staticSwitch663_g174756 = 1.0;
				#endif
				half Global_Wetness429_g174756 = staticSwitch663_g174756;
				half Wetness_Value1042_g174756 = ( _WetnessIntensityValue * Global_Wetness429_g174756 );
				TVEModelData Data15_g174770 = Data16_g164566;
				float Out_Dummy15_g174770 = 0;
				float3 Out_PositionWS15_g174770 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174770 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174770 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174770 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174770 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174770 = float3( 0,0,0 );
				float4 Out_VertexData15_g174770 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174770 = float4( 0,0,0,0 );
				Out_Dummy15_g174770 = Data15_g174770.Dummy;
				Out_PositionWS15_g174770 = Data15_g174770.PositionWS;
				Out_PositionWO15_g174770 = Data15_g174770.PositionWO;
				Out_PivotWS15_g174770 = Data15_g174770.PivotWS;
				Out_PivotWO15_g174770 = Data15_g174770.PivotWO;
				Out_NormalWS15_g174770 = Data15_g174770.NormalWS;
				Out_ViewDirWS15_g174770 = Data15_g174770.ViewDirWS;
				Out_VertexData15_g174770 = Data15_g174770.VertexData;
				Out_BoundsData15_g174770 = Data15_g174770.BoundsData;
				half4 Model_VertexData1030_g174756 = Out_VertexData15_g174770;
				float4 break1019_g174756 = Model_VertexData1030_g174756;
				float4 break33_g174775 = _wetness_vert_mode;
				float temp_output_30_0_g174775 = ( break1019_g174756.x * break33_g174775.x );
				float temp_output_29_0_g174775 = ( break1019_g174756.y * break33_g174775.y );
				float temp_output_31_0_g174775 = ( break1019_g174756.z * break33_g174775.z );
				float temp_output_28_0_g174775 = ( temp_output_30_0_g174775 + temp_output_29_0_g174775 + temp_output_31_0_g174775 + ( break1019_g174756.w * break33_g174775.w ) );
				float clampResult17_g174773 = clamp( temp_output_28_0_g174775 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174774 = _WetnessMeshRemap.x;
				float temp_output_10_0_g174774 = ( _WetnessMeshRemap.y - temp_output_7_0_g174774 );
				float lerpResult1026_g174756 = lerp( 1.0 , saturate( ( ( clampResult17_g174773 - temp_output_7_0_g174774 ) / ( temp_output_10_0_g174774 + 0.0001 ) ) ) , _WetnessMeshValue);
				float temp_output_6_0_g174776 = lerpResult1026_g174756;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174776 = ( temp_output_6_0_g174776 + ( _WetnessMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174776 = temp_output_6_0_g174776;
				#endif
				#ifdef TVE_WETNESS_VERT
				float staticSwitch1110_g174756 = staticSwitch14_g174776;
				#else
				float staticSwitch1110_g174756 = 1.0;
				#endif
				half Wetness_VertMask1024_g174756 = staticSwitch1110_g174756;
				float temp_output_1043_0_g174756 = ( Wetness_Value1042_g174756 * Wetness_VertMask1024_g174756 );
				half Wetness_Mask866_g174756 = temp_output_1043_0_g174756;
				float4 break1083_g174756 = Model_VertexData1030_g174756;
				float4 break33_g174779 = _wetness_water_vert_mode;
				float temp_output_30_0_g174779 = ( break1083_g174756.x * break33_g174779.x );
				float temp_output_29_0_g174779 = ( break1083_g174756.y * break33_g174779.y );
				float temp_output_31_0_g174779 = ( break1083_g174756.z * break33_g174779.z );
				float temp_output_28_0_g174779 = ( temp_output_30_0_g174779 + temp_output_29_0_g174779 + temp_output_31_0_g174779 + ( break1083_g174756.w * break33_g174779.w ) );
				float clampResult17_g174777 = clamp( temp_output_28_0_g174779 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174778 = _WetnessWaterMeshRemap.x;
				float temp_output_10_0_g174778 = ( _WetnessWaterMeshRemap.y - temp_output_7_0_g174778 );
				float lerpResult1089_g174756 = lerp( 1.0 , saturate( ( ( clampResult17_g174777 - temp_output_7_0_g174778 ) / ( temp_output_10_0_g174778 + 0.0001 ) ) ) , _WetnessWaterMeshValue);
				float temp_output_6_0_g174780 = lerpResult1089_g174756;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174780 = ( temp_output_6_0_g174780 + ( _WetnessWaterMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174780 = temp_output_6_0_g174780;
				#endif
				#ifdef TVE_WETNESS_VERT
				float staticSwitch1113_g174756 = staticSwitch14_g174780;
				#else
				float staticSwitch1113_g174756 = 1.0;
				#endif
				half Water_VertMask1094_g174756 = staticSwitch1113_g174756;
				half4 Visual_Masks536_g174756 = Out_Shader4_g174757;
				float lerpResult1013_g174756 = lerp( 1.0 , (Visual_Masks536_g174756).z , _WetnessWaterBaseValue);
				half Water_HeightMask782_g174756 = lerpResult1013_g174756;
				float clampResult17_g174771 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g174756 * Water_VertMask1094_g174756 ) - Water_HeightMask782_g174756 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174772 = _WetnessWaterBlendRemap.x;
				float temp_output_10_0_g174772 = ( _WetnessWaterBlendRemap.y - temp_output_7_0_g174772 );
				half3 Model_NormalWS798_g174756 = Out_NormalWS15_g174770;
				float temp_output_786_0_g174756 = saturate( (Model_NormalWS798_g174756).y );
				half Wetness_ProjMask790_g174756 = temp_output_786_0_g174756;
				half Water_Mask760_g174756 = ( saturate( ( ( clampResult17_g174771 - temp_output_7_0_g174772 ) / ( temp_output_10_0_g174772 + 0.0001 ) ) ) * Wetness_ProjMask790_g174756 );
				float3 lerpResult918_g174756 = lerp( Visual_Albedo127_g174756 , ( Visual_Albedo127_g174756 * (_WetnessWaterColor).rgb ) , Water_Mask760_g174756);
				#ifdef TVE_WETNESS_WATER
				float3 staticSwitch946_g174756 = lerpResult918_g174756;
				#else
				float3 staticSwitch946_g174756 = Visual_Albedo127_g174756;
				#endif
				float3 lerpResult768_g174756 = lerp( staticSwitch946_g174756 , ( staticSwitch946_g174756 * staticSwitch946_g174756 ) , _WetnessContrastValue);
				float3 lerpResult651_g174756 = lerp( Visual_Albedo127_g174756 , lerpResult768_g174756 , Wetness_Mask866_g174756);
				#ifdef TVE_WETNESS
				float3 staticSwitch577_g174756 = lerpResult651_g174756;
				#else
				float3 staticSwitch577_g174756 = Visual_Albedo127_g174756;
				#endif
				half3 Final_Albedo493_g174756 = staticSwitch577_g174756;
				float3 In_Albedo3_g174758 = Final_Albedo493_g174756;
				float3 In_AlbedoRaw3_g174758 = Out_AlbedoRaw4_g174757;
				half2 Visual_Normal535_g174756 = Out_NormalTS4_g174757;
				float lerpResult877_g174756 = lerp( 1.0 , 0.0 , ( Water_Mask760_g174756 * Water_Mask760_g174756 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch957_g174756 = ( Visual_Normal535_g174756 * lerpResult877_g174756 );
				#else
				float2 staticSwitch957_g174756 = Visual_Normal535_g174756;
				#endif
				float2 temp_cast_50 = (0.0).xx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174768) = _WetnessDropsTexRT;
				SamplerState Sampler238_g174768 = sampler_Linear_Repeat_Aniso8;
				float4 appendResult924_g174756 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g174768 = appendResult924_g174756;
				half4 Coords238_g174768 = temp_output_37_0_g174768;
				half3 Model_PositionWO602_g174756 = Out_PositionWO15_g174770;
				float3 temp_output_279_0_g174768 = Model_PositionWO602_g174756;
				half3 WorldPosition238_g174768 = temp_output_279_0_g174768;
				half4 localSamplePlanar2D238_g174768 = SamplePlanar2D( Texture238_g174768 , Sampler238_g174768 , Coords238_g174768 , WorldPosition238_g174768 );
				float4 temp_output_1010_0_g174756 = localSamplePlanar2D238_g174768;
				half2 Rain_DropsNormal919_g174756 = (temp_output_1010_0_g174756).zw;
				float2 temp_output_903_0_g174756 = (Rain_DropsNormal919_g174756*2.0 + -1.0);
				half2 Rain_RingsNormal713_g174756 = (temp_output_1010_0_g174756).xy;
				float2 lerpResult904_g174756 = lerp( temp_output_903_0_g174756 , (Rain_RingsNormal713_g174756*2.0 + -1.0) , ( Water_Mask760_g174756 * Water_Mask760_g174756 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch960_g174756 = lerpResult904_g174756;
				#else
				float2 staticSwitch960_g174756 = temp_output_903_0_g174756;
				#endif
				half2 Rain_Drops1002_g174756 = ( staticSwitch960_g174756 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
				half3 Model_PositionWS823_g174756 = Out_PositionWS15_g174770;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch949_g174756 = ( (Global_AtmoParams516_g174756).w * TVE_IsEnabled );
				#else
				float staticSwitch949_g174756 = 1.0;
				#endif
				half Global_Rain955_g174756 = staticSwitch949_g174756;
				half Rain_Value1067_g174756 = Global_Rain955_g174756;
				float4 break1097_g174756 = Model_VertexData1030_g174756;
				float4 break33_g174783 = _wetness_drops_vert_mode;
				float temp_output_30_0_g174783 = ( break1097_g174756.x * break33_g174783.x );
				float temp_output_29_0_g174783 = ( break1097_g174756.y * break33_g174783.y );
				float temp_output_31_0_g174783 = ( break1097_g174756.z * break33_g174783.z );
				float temp_output_28_0_g174783 = ( temp_output_30_0_g174783 + temp_output_29_0_g174783 + temp_output_31_0_g174783 + ( break1097_g174756.w * break33_g174783.w ) );
				float clampResult17_g174781 = clamp( temp_output_28_0_g174783 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174782 = _WetnessDropsMeshRemap.x;
				float temp_output_10_0_g174782 = ( _WetnessDropsMeshRemap.y - temp_output_7_0_g174782 );
				float lerpResult1100_g174756 = lerp( 1.0 , saturate( ( ( clampResult17_g174781 - temp_output_7_0_g174782 ) / ( temp_output_10_0_g174782 + 0.0001 ) ) ) , _WetnessDropsMeshValue);
				float temp_output_6_0_g174784 = lerpResult1100_g174756;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174784 = ( temp_output_6_0_g174784 + ( _WetnessDropsMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174784 = temp_output_6_0_g174784;
				#endif
				#ifdef TVE_WETNESS_VERT
				float staticSwitch1115_g174756 = staticSwitch14_g174784;
				#else
				float staticSwitch1115_g174756 = 1.0;
				#endif
				half Rain_VertMask1108_g174756 = staticSwitch1115_g174756;
				half Rain_Mask999_g174756 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g174756 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g174756 * Rain_VertMask1108_g174756 );
				half2 Normal_Planar45_g174767 = ( Rain_Drops1002_g174756 * Rain_Mask999_g174756 * Wetness_ProjMask790_g174756 );
				float2 break71_g174767 = Normal_Planar45_g174767;
				float3 appendResult72_g174767 = (float3(break71_g174767.x , 0.0 , break71_g174767.y));
				half2 Wetness_Normal526_g174756 = (mul( ase_worldToTangent, appendResult72_g174767 )).xy;
				#ifdef TVE_WETNESS_DROPS
				float2 staticSwitch583_g174756 = Wetness_Normal526_g174756;
				#else
				float2 staticSwitch583_g174756 = temp_cast_50;
				#endif
				#ifdef TVE_WETNESS
				float2 staticSwitch774_g174756 = ( staticSwitch957_g174756 + staticSwitch583_g174756 );
				#else
				float2 staticSwitch774_g174756 = Visual_Normal535_g174756;
				#endif
				half2 Final_Normal499_g174756 = staticSwitch774_g174756;
				float2 In_NormalTS3_g174758 = Final_Normal499_g174756;
				float3 In_NormalWS3_g174758 = Out_NormalWS4_g174757;
				float4 break658_g174756 = Visual_Masks536_g174756;
				float temp_output_935_0_g174756 = ( Wetness_Mask866_g174756 * _WetnessSmoothnessValue );
				float lerpResult941_g174756 = lerp( temp_output_935_0_g174756 , 2.0 , Water_Mask760_g174756);
				#ifdef TVE_WETNESS_WATER
				float staticSwitch959_g174756 = lerpResult941_g174756;
				#else
				float staticSwitch959_g174756 = temp_output_935_0_g174756;
				#endif
				float4 appendResult661_g174756 = (float4(break658_g174756.x , break658_g174756.y , break658_g174756.z , saturate( ( break658_g174756.w + staticSwitch959_g174756 ) )));
				#ifdef TVE_WETNESS
				float4 staticSwitch586_g174756 = appendResult661_g174756;
				#else
				float4 staticSwitch586_g174756 = Visual_Masks536_g174756;
				#endif
				half4 Final_Masks482_g174756 = staticSwitch586_g174756;
				float4 In_Shader3_g174758 = Final_Masks482_g174756;
				float4 In_Emissive3_g174758 = Out_Emissive4_g174757;
				float In_Grayscale3_g174758 = Out_Grayscale4_g174757;
				float In_Luminosity3_g174758 = Out_Luminosity4_g174757;
				float In_MultiMask3_g174758 = Out_MultiMask4_g174757;
				float In_AlphaClip3_g174758 = Out_AlphaClip4_g174757;
				float In_AlphaFade3_g174758 = Out_AlphaFade4_g174757;
				float3 In_Translucency3_g174758 = Out_Translucency4_g174757;
				float In_Transmission3_g174758 = Out_Transmission4_g174757;
				float In_Thickness3_g174758 = Out_Thickness4_g174757;
				float In_Diffusion3_g174758 = Out_Diffusion4_g174757;
				Data3_g174758.Dummy = In_Dummy3_g174758;
				Data3_g174758.Albedo = In_Albedo3_g174758;
				Data3_g174758.AlbedoRaw = In_AlbedoRaw3_g174758;
				Data3_g174758.NormalTS = In_NormalTS3_g174758;
				Data3_g174758.NormalWS = In_NormalWS3_g174758;
				Data3_g174758.Shader = In_Shader3_g174758;
				Data3_g174758.Emissive= In_Emissive3_g174758;
				Data3_g174758.MultiMask = In_MultiMask3_g174758;
				Data3_g174758.Grayscale = In_Grayscale3_g174758;
				Data3_g174758.Luminosity = In_Luminosity3_g174758;
				Data3_g174758.AlphaClip = In_AlphaClip3_g174758;
				Data3_g174758.AlphaFade = In_AlphaFade3_g174758;
				Data3_g174758.Translucency = In_Translucency3_g174758;
				Data3_g174758.Transmission = In_Transmission3_g174758;
				Data3_g174758.Thickness = In_Thickness3_g174758;
				Data3_g174758.Diffusion = In_Diffusion3_g174758;
				TVEVisualData Data4_g174796 = Data3_g174758;
				float Out_Dummy4_g174796 = 0;
				float3 Out_Albedo4_g174796 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174796 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174796 = float2( 0,0 );
				float3 Out_NormalWS4_g174796 = float3( 0,0,0 );
				float4 Out_Shader4_g174796 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174796 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174796 = 0;
				float Out_Grayscale4_g174796 = 0;
				float Out_Luminosity4_g174796 = 0;
				float Out_AlphaClip4_g174796 = 0;
				float Out_AlphaFade4_g174796 = 0;
				float3 Out_Translucency4_g174796 = float3( 0,0,0 );
				float Out_Transmission4_g174796 = 0;
				float Out_Thickness4_g174796 = 0;
				float Out_Diffusion4_g174796 = 0;
				Out_Dummy4_g174796 = Data4_g174796.Dummy;
				Out_Albedo4_g174796 = Data4_g174796.Albedo;
				Out_AlbedoRaw4_g174796 = Data4_g174796.AlbedoRaw;
				Out_NormalTS4_g174796 = Data4_g174796.NormalTS;
				Out_NormalWS4_g174796 = Data4_g174796.NormalWS;
				Out_Shader4_g174796 = Data4_g174796.Shader;
				Out_Emissive4_g174796= Data4_g174796.Emissive;
				Out_MultiMask4_g174796 = Data4_g174796.MultiMask;
				Out_Grayscale4_g174796 = Data4_g174796.Grayscale;
				Out_Luminosity4_g174796= Data4_g174796.Luminosity;
				Out_AlphaClip4_g174796 = Data4_g174796.AlphaClip;
				Out_AlphaFade4_g174796 = Data4_g174796.AlphaFade;
				Out_Translucency4_g174796 = Data4_g174796.Translucency;
				Out_Transmission4_g174796 = Data4_g174796.Transmission;
				Out_Thickness4_g174796 = Data4_g174796.Thickness;
				Out_Diffusion4_g174796 = Data4_g174796.Diffusion;
				float3 In_Albedo3_g174786 = Out_Albedo4_g174796;
				float3 In_AlbedoRaw3_g174786 = Out_AlbedoRaw4_g174796;
				float2 In_NormalTS3_g174786 = Out_NormalTS4_g174796;
				float3 In_NormalWS3_g174786 = Out_NormalWS4_g174796;
				float4 In_Shader3_g174786 = Out_Shader4_g174796;
				float4 In_Emissive3_g174786 = Out_Emissive4_g174796;
				float In_Grayscale3_g174786 = Out_Grayscale4_g174796;
				float In_Luminosity3_g174786 = Out_Luminosity4_g174796;
				float temp_output_836_11_g174785 = Out_MultiMask4_g174796;
				float In_MultiMask3_g174786 = temp_output_836_11_g174785;
				half Visual_AlphaClip667_g174785 = Out_AlphaClip4_g174796;
				TVEGlobalData Data15_g174795 = Data204_g173897;
				float Out_Dummy15_g174795 = 0;
				float4 Out_CoatParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174795 = float4( 0,0,0,0 );
				Out_Dummy15_g174795 = Data15_g174795.Dummy;
				Out_CoatParams15_g174795 = Data15_g174795.CoatParams;
				Out_PaintParams15_g174795 = Data15_g174795.PaintParams;
				Out_GlowParams15_g174795 = Data15_g174795.GlowParams;
				Out_AtmoParams15_g174795= Data15_g174795.AtmoParams;
				Out_FadeParams15_g174795= Data15_g174795.FadeParams;
				Out_FormParams15_g174795 = Data15_g174795.FormParams;
				Out_LandParams15_g174795 = Data15_g174795.LandParams;
				Out_WindParams15_g174795 = Data15_g174795.WindParams;
				Out_PushParams15_g174795 = Data15_g174795.PushParams;
				half4 Global_FadeParams516_g174785 = Out_FadeParams15_g174795;
				#ifdef TVE_CUTOUT_ELEMENT
				float staticSwitch663_g174785 = saturate( (Global_FadeParams516_g174785).w );
				#else
				float staticSwitch663_g174785 = 1.0;
				#endif
				half Local_GlobalMask429_g174785 = staticSwitch663_g174785;
				float lerpResult811_g174785 = lerp( 1.0 , Visual_AlphaClip667_g174785 , _CutoutAlphaValue);
				half Local_AlphaMask814_g174785 = lerpResult811_g174785;
				TVEModelData Data15_g174797 = Data16_g164566;
				float Out_Dummy15_g174797 = 0;
				float3 Out_PositionWS15_g174797 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174797 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174797 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174797 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174797 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174797 = float3( 0,0,0 );
				float4 Out_VertexData15_g174797 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174797 = float4( 0,0,0,0 );
				Out_Dummy15_g174797 = Data15_g174797.Dummy;
				Out_PositionWS15_g174797 = Data15_g174797.PositionWS;
				Out_PositionWO15_g174797 = Data15_g174797.PositionWO;
				Out_PivotWS15_g174797 = Data15_g174797.PivotWS;
				Out_PivotWO15_g174797 = Data15_g174797.PivotWO;
				Out_NormalWS15_g174797 = Data15_g174797.NormalWS;
				Out_ViewDirWS15_g174797 = Data15_g174797.ViewDirWS;
				Out_VertexData15_g174797 = Data15_g174797.VertexData;
				Out_BoundsData15_g174797 = Data15_g174797.BoundsData;
				half3 Model_PositionWO602_g174785 = Out_PositionWO15_g174797;
				float4 tex3DNode60_g174789 = SAMPLE_TEXTURE3D( _NoiseTex3D, sampler_Linear_Repeat, ( Model_PositionWO602_g174785 * ( _CutoutNoiseTillingValue * 0.01 ) ) );
				float lerpResult673_g174785 = lerp( 1.0 , tex3DNode60_g174789.r , _CutoutNoiseValue);
				half Local_NoiseMask678_g174785 = lerpResult673_g174785;
				half4 Model_VertexMasks752_g174785 = Out_VertexData15_g174797;
				float4 break755_g174785 = Model_VertexMasks752_g174785;
				float4 break33_g174787 = _cutout_vert_mode;
				float temp_output_30_0_g174787 = ( break755_g174785.x * break33_g174787.x );
				float temp_output_29_0_g174787 = ( break755_g174785.y * break33_g174787.y );
				float temp_output_31_0_g174787 = ( break755_g174785.z * break33_g174787.z );
				float temp_output_28_0_g174787 = ( temp_output_30_0_g174787 + temp_output_29_0_g174787 + temp_output_31_0_g174787 + ( break755_g174785.w * break33_g174787.w ) );
				float clampResult17_g174788 = clamp( temp_output_28_0_g174787 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174791 = _CutoutMeshRemap.x;
				float temp_output_10_0_g174791 = ( _CutoutMeshRemap.y - temp_output_7_0_g174791 );
				float lerpResult820_g174785 = lerp( 1.0 , saturate( ( ( clampResult17_g174788 - temp_output_7_0_g174791 ) / ( temp_output_10_0_g174791 + 0.0001 ) ) ) , _CutoutMeshValue);
				float temp_output_6_0_g174792 = lerpResult820_g174785;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174792 = ( temp_output_6_0_g174792 + ( _CutoutMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174792 = temp_output_6_0_g174792;
				#endif
				float temp_output_801_0_g174785 = staticSwitch14_g174792;
				half Local_VertMask766_g174785 = temp_output_801_0_g174785;
				half Visual_MultiMask671_g174785 = temp_output_836_11_g174785;
				float lerpResult683_g174785 = lerp( 1.0 , Visual_MultiMask671_g174785 , _CutoutMultiValue);
				half Local_MultiMask685_g174785 = lerpResult683_g174785;
				float lerpResult728_g174785 = lerp( Visual_AlphaClip667_g174785 , min( Visual_AlphaClip667_g174785 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g174785 ) - ( Local_AlphaMask814_g174785 * Local_NoiseMask678_g174785 * Local_VertMask766_g174785 ) ) ) ) , Local_MultiMask685_g174785);
				half Local_AlphaClip784_g174785 = lerpResult728_g174785;
				#ifdef TVE_CUTOUT
				float staticSwitch577_g174785 = Local_AlphaClip784_g174785;
				#else
				float staticSwitch577_g174785 = Visual_AlphaClip667_g174785;
				#endif
				half Final_AlphaClip795_g174785 = staticSwitch577_g174785;
				float In_AlphaClip3_g174786 = Final_AlphaClip795_g174785;
				float In_AlphaFade3_g174786 = Out_AlphaFade4_g174796;
				float3 In_Translucency3_g174786 = Out_Translucency4_g174796;
				float In_Transmission3_g174786 = Out_Transmission4_g174796;
				float In_Thickness3_g174786 = Out_Thickness4_g174796;
				float In_Diffusion3_g174786 = Out_Diffusion4_g174796;
				Data3_g174786.Dummy = In_Dummy3_g174786;
				Data3_g174786.Albedo = In_Albedo3_g174786;
				Data3_g174786.AlbedoRaw = In_AlbedoRaw3_g174786;
				Data3_g174786.NormalTS = In_NormalTS3_g174786;
				Data3_g174786.NormalWS = In_NormalWS3_g174786;
				Data3_g174786.Shader = In_Shader3_g174786;
				Data3_g174786.Emissive= In_Emissive3_g174786;
				Data3_g174786.MultiMask = In_MultiMask3_g174786;
				Data3_g174786.Grayscale = In_Grayscale3_g174786;
				Data3_g174786.Luminosity = In_Luminosity3_g174786;
				Data3_g174786.AlphaClip = In_AlphaClip3_g174786;
				Data3_g174786.AlphaFade = In_AlphaFade3_g174786;
				Data3_g174786.Translucency = In_Translucency3_g174786;
				Data3_g174786.Transmission = In_Transmission3_g174786;
				Data3_g174786.Thickness = In_Thickness3_g174786;
				Data3_g174786.Diffusion = In_Diffusion3_g174786;
				TVEVisualData Data4_g174807 = Data3_g174786;
				float Out_Dummy4_g174807 = 0;
				float3 Out_Albedo4_g174807 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174807 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174807 = float2( 0,0 );
				float3 Out_NormalWS4_g174807 = float3( 0,0,0 );
				float4 Out_Shader4_g174807 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174807 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174807 = 0;
				float Out_Grayscale4_g174807 = 0;
				float Out_Luminosity4_g174807 = 0;
				float Out_AlphaClip4_g174807 = 0;
				float Out_AlphaFade4_g174807 = 0;
				float3 Out_Translucency4_g174807 = float3( 0,0,0 );
				float Out_Transmission4_g174807 = 0;
				float Out_Thickness4_g174807 = 0;
				float Out_Diffusion4_g174807 = 0;
				Out_Dummy4_g174807 = Data4_g174807.Dummy;
				Out_Albedo4_g174807 = Data4_g174807.Albedo;
				Out_AlbedoRaw4_g174807 = Data4_g174807.AlbedoRaw;
				Out_NormalTS4_g174807 = Data4_g174807.NormalTS;
				Out_NormalWS4_g174807 = Data4_g174807.NormalWS;
				Out_Shader4_g174807 = Data4_g174807.Shader;
				Out_Emissive4_g174807= Data4_g174807.Emissive;
				Out_MultiMask4_g174807 = Data4_g174807.MultiMask;
				Out_Grayscale4_g174807 = Data4_g174807.Grayscale;
				Out_Luminosity4_g174807= Data4_g174807.Luminosity;
				Out_AlphaClip4_g174807 = Data4_g174807.AlphaClip;
				Out_AlphaFade4_g174807 = Data4_g174807.AlphaFade;
				Out_Translucency4_g174807 = Data4_g174807.Translucency;
				Out_Transmission4_g174807 = Data4_g174807.Transmission;
				Out_Thickness4_g174807 = Data4_g174807.Thickness;
				Out_Diffusion4_g174807 = Data4_g174807.Diffusion;
				float3 In_Albedo3_g174808 = Out_Albedo4_g174807;
				float3 In_AlbedoRaw3_g174808 = Out_AlbedoRaw4_g174807;
				float2 In_NormalTS3_g174808 = Out_NormalTS4_g174807;
				float3 In_NormalWS3_g174808 = Out_NormalWS4_g174807;
				float4 In_Shader3_g174808 = Out_Shader4_g174807;
				float4 In_Emissive3_g174808 = Out_Emissive4_g174807;
				float In_Grayscale3_g174808 = Out_Grayscale4_g174807;
				float In_Luminosity3_g174808 = Out_Luminosity4_g174807;
				float temp_output_821_11_g174805 = Out_MultiMask4_g174807;
				float In_MultiMask3_g174808 = temp_output_821_11_g174805;
				half Visual_AlphaClip754_g174805 = Out_AlphaClip4_g174807;
				half Dither_Constant768_g174805 = _DitherConstantValue;
				float temp_output_7_0_g174815 = _DitherProximityMaxValue;
				float temp_output_10_0_g174815 = ( _DitherProximityMinValue - temp_output_7_0_g174815 );
				half Dither_Proximity767_g174805 = ( saturate( ( ( distance( ase_worldPos , _WorldSpaceCameraPos ) - temp_output_7_0_g174815 ) / ( temp_output_10_0_g174815 + 0.0001 ) ) ) * _DitherProximityValue );
				TVEModelData Data15_g174814 = Data16_g164566;
				float Out_Dummy15_g174814 = 0;
				float3 Out_PositionWS15_g174814 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174814 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174814 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174814 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174814 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174814 = float3( 0,0,0 );
				float4 Out_VertexData15_g174814 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174814 = float4( 0,0,0,0 );
				Out_Dummy15_g174814 = Data15_g174814.Dummy;
				Out_PositionWS15_g174814 = Data15_g174814.PositionWS;
				Out_PositionWO15_g174814 = Data15_g174814.PositionWO;
				Out_PivotWS15_g174814 = Data15_g174814.PivotWS;
				Out_PivotWO15_g174814 = Data15_g174814.PivotWO;
				Out_NormalWS15_g174814 = Data15_g174814.NormalWS;
				Out_ViewDirWS15_g174814 = Data15_g174814.ViewDirWS;
				Out_VertexData15_g174814 = Data15_g174814.VertexData;
				Out_BoundsData15_g174814 = Data15_g174814.BoundsData;
				half3 Model_PositionWS776_g174805 = Out_PositionWS15_g174814;
				float temp_output_7_0_g174813 = _DitherDistanceMinValue;
				float temp_output_10_0_g174813 = ( _DitherDistanceMaxValue - temp_output_7_0_g174813 );
				half Dither_Distance856_g174805 = ( saturate( ( ( distance( Model_PositionWS776_g174805 , _WorldSpaceCameraPos ) - temp_output_7_0_g174813 ) / ( temp_output_10_0_g174813 + 0.0001 ) ) ) * _DitherDistanceValue );
				half3 Model_ViewDirWS845_g174805 = Out_ViewDirWS15_g174814;
				float3 normalizeResult792_g174805 = normalize( cross( ddy( ase_worldPos ) , ddx( ase_worldPos ) ) );
				float dotResult778_g174805 = dot( Model_ViewDirWS845_g174805 , normalizeResult792_g174805 );
				half Dither_Glancing784_g174805 = ( saturate( ( ( 1.0 - abs( dotResult778_g174805 ) ) * _DitherGlancingAngleValue ) ) * _DitherGlancingValue );
				half Dither_Value429_g174805 = max( max( max( Dither_Constant768_g174805 , Dither_Proximity767_g174805 ) , Dither_Distance856_g174805 ) , Dither_Glancing784_g174805 );
				half3 Model_PositionWO602_g174805 = Out_PositionWO15_g174814;
				float4 tex3DNode60_g174811 = SAMPLE_TEXTURE3D( _NoiseTex3D, sampler_Linear_Repeat, ( ( Model_PositionWO602_g174805 * 20.0 ) * ( _DitherNoiseTillingValue * 0.01 ) ) );
				float temp_output_809_0_g174805 = tex3DNode60_g174811.r;
				half Local_MaskNoise678_g174805 = temp_output_809_0_g174805;
				half Visual_MultiMask671_g174805 = temp_output_821_11_g174805;
				float lerpResult683_g174805 = lerp( 1.0 , Visual_MultiMask671_g174805 , _DitherMultiValue);
				half Local_MaskMulti685_g174805 = lerpResult683_g174805;
				half Custom_Mask826_g174805 = 1.0;
				float lerpResult728_g174805 = lerp( Visual_AlphaClip754_g174805 , min( Visual_AlphaClip754_g174805 , ( -0.001 - ( Dither_Value429_g174805 - Local_MaskNoise678_g174805 ) ) ) , ( Local_MaskMulti685_g174805 * Custom_Mask826_g174805 ));
				half Local_AlphaClip834_g174805 = lerpResult728_g174805;
				#ifdef TVE_DITHER
				float staticSwitch577_g174805 = Local_AlphaClip834_g174805;
				#else
				float staticSwitch577_g174805 = Visual_AlphaClip754_g174805;
				#endif
				half Final_AlphaClip493_g174805 = staticSwitch577_g174805;
				float In_AlphaClip3_g174808 = Final_AlphaClip493_g174805;
				float In_AlphaFade3_g174808 = Out_AlphaFade4_g174807;
				float3 In_Translucency3_g174808 = Out_Translucency4_g174807;
				float In_Transmission3_g174808 = Out_Transmission4_g174807;
				float In_Thickness3_g174808 = Out_Thickness4_g174807;
				float In_Diffusion3_g174808 = Out_Diffusion4_g174807;
				Data3_g174808.Dummy = In_Dummy3_g174808;
				Data3_g174808.Albedo = In_Albedo3_g174808;
				Data3_g174808.AlbedoRaw = In_AlbedoRaw3_g174808;
				Data3_g174808.NormalTS = In_NormalTS3_g174808;
				Data3_g174808.NormalWS = In_NormalWS3_g174808;
				Data3_g174808.Shader = In_Shader3_g174808;
				Data3_g174808.Emissive= In_Emissive3_g174808;
				Data3_g174808.MultiMask = In_MultiMask3_g174808;
				Data3_g174808.Grayscale = In_Grayscale3_g174808;
				Data3_g174808.Luminosity = In_Luminosity3_g174808;
				Data3_g174808.AlphaClip = In_AlphaClip3_g174808;
				Data3_g174808.AlphaFade = In_AlphaFade3_g174808;
				Data3_g174808.Translucency = In_Translucency3_g174808;
				Data3_g174808.Transmission = In_Transmission3_g174808;
				Data3_g174808.Thickness = In_Thickness3_g174808;
				Data3_g174808.Diffusion = In_Diffusion3_g174808;
				TVEVisualData Data4_g174835 = Data3_g174808;
				float Out_Dummy4_g174835 = 0;
				float3 Out_Albedo4_g174835 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174835 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174835 = float2( 0,0 );
				float3 Out_NormalWS4_g174835 = float3( 0,0,0 );
				float4 Out_Shader4_g174835 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174835 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174835 = 0;
				float Out_Grayscale4_g174835 = 0;
				float Out_Luminosity4_g174835 = 0;
				float Out_AlphaClip4_g174835 = 0;
				float Out_AlphaFade4_g174835 = 0;
				float3 Out_Translucency4_g174835 = float3( 0,0,0 );
				float Out_Transmission4_g174835 = 0;
				float Out_Thickness4_g174835 = 0;
				float Out_Diffusion4_g174835 = 0;
				Out_Dummy4_g174835 = Data4_g174835.Dummy;
				Out_Albedo4_g174835 = Data4_g174835.Albedo;
				Out_AlbedoRaw4_g174835 = Data4_g174835.AlbedoRaw;
				Out_NormalTS4_g174835 = Data4_g174835.NormalTS;
				Out_NormalWS4_g174835 = Data4_g174835.NormalWS;
				Out_Shader4_g174835 = Data4_g174835.Shader;
				Out_Emissive4_g174835= Data4_g174835.Emissive;
				Out_MultiMask4_g174835 = Data4_g174835.MultiMask;
				Out_Grayscale4_g174835 = Data4_g174835.Grayscale;
				Out_Luminosity4_g174835= Data4_g174835.Luminosity;
				Out_AlphaClip4_g174835 = Data4_g174835.AlphaClip;
				Out_AlphaFade4_g174835 = Data4_g174835.AlphaFade;
				Out_Translucency4_g174835 = Data4_g174835.Translucency;
				Out_Transmission4_g174835 = Data4_g174835.Transmission;
				Out_Thickness4_g174835 = Data4_g174835.Thickness;
				Out_Diffusion4_g174835 = Data4_g174835.Diffusion;
				float3 temp_output_297_0_g174826 = Out_Albedo4_g174835;
				float3 In_Albedo3_g174836 = temp_output_297_0_g174826;
				float3 temp_output_297_23_g174826 = Out_AlbedoRaw4_g174835;
				float3 In_AlbedoRaw3_g174836 = temp_output_297_23_g174826;
				float2 In_NormalTS3_g174836 = Out_NormalTS4_g174835;
				float3 In_NormalWS3_g174836 = Out_NormalWS4_g174835;
				float4 In_Shader3_g174836 = Out_Shader4_g174835;
				float4 temp_cast_51 = (0.0).xxxx;
				TVEModelData Data15_g174839 = Data16_g164566;
				float Out_Dummy15_g174839 = 0;
				float3 Out_PositionWS15_g174839 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174839 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174839 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174839 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174839 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174839 = float3( 0,0,0 );
				float4 Out_VertexData15_g174839 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174839 = float4( 0,0,0,0 );
				Out_Dummy15_g174839 = Data15_g174839.Dummy;
				Out_PositionWS15_g174839 = Data15_g174839.PositionWS;
				Out_PositionWO15_g174839 = Data15_g174839.PositionWO;
				Out_PivotWS15_g174839 = Data15_g174839.PivotWS;
				Out_PivotWO15_g174839 = Data15_g174839.PivotWO;
				Out_NormalWS15_g174839 = Data15_g174839.NormalWS;
				Out_ViewDirWS15_g174839 = Data15_g174839.ViewDirWS;
				Out_VertexData15_g174839 = Data15_g174839.VertexData;
				Out_BoundsData15_g174839 = Data15_g174839.BoundsData;
				half4 Model_VertexMasks216_g174826 = Out_VertexData15_g174839;
				float4 break251_g174826 = Model_VertexMasks216_g174826;
				float4 break33_g174830 = _emissive_vert_mode;
				float temp_output_30_0_g174830 = ( break251_g174826.x * break33_g174830.x );
				float temp_output_29_0_g174830 = ( break251_g174826.y * break33_g174830.y );
				float temp_output_31_0_g174830 = ( break251_g174826.z * break33_g174830.z );
				float temp_output_28_0_g174830 = ( temp_output_30_0_g174830 + temp_output_29_0_g174830 + temp_output_31_0_g174830 + ( break251_g174826.w * break33_g174830.w ) );
				float clampResult17_g174829 = clamp( temp_output_28_0_g174830 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174833 = _EmissiveMeshRemap.x;
				float temp_output_10_0_g174833 = ( _EmissiveMeshRemap.y - temp_output_7_0_g174833 );
				float lerpResult303_g174826 = lerp( 1.0 , saturate( ( ( clampResult17_g174829 - temp_output_7_0_g174833 ) / ( temp_output_10_0_g174833 + 0.0001 ) ) ) , _EmissiveMeshValue);
				float temp_output_6_0_g174838 = lerpResult303_g174826;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174838 = ( temp_output_6_0_g174838 + ( _EmissiveMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174838 = temp_output_6_0_g174838;
				#endif
				float temp_output_263_0_g174826 = staticSwitch14_g174838;
				half Emissive_MeshMask221_g174826 = temp_output_263_0_g174826;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174828) = _EmissiveMaskTex;
				SamplerState Sampler276_g174828 = sampler_Linear_Repeat;
				float4 temp_output_6_0_g174834 = _emissive_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174834 = ( temp_output_6_0_g174834 + ( ( _EmissiveSampleMode + _EmissiveCoordMode + _EmissiveCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174834 = temp_output_6_0_g174834;
				#endif
				half4 Emissive_Coords167_g174826 = staticSwitch14_g174834;
				float4 temp_output_37_0_g174828 = Emissive_Coords167_g174826;
				half4 Coords276_g174828 = temp_output_37_0_g174828;
				half2 TexCoord276_g174828 = IN.ase_texcoord3.xy;
				half4 localSampleMain276_g174828 = SampleMain( Texture276_g174828 , Sampler276_g174828 , Coords276_g174828 , TexCoord276_g174828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174828) = _EmissiveMaskTex;
				SamplerState Sampler275_g174828 = sampler_Linear_Repeat;
				half4 Coords275_g174828 = temp_output_37_0_g174828;
				half2 TexCoord275_g174828 = IN.ase_texcoord4.xy;
				half4 localSampleExtra275_g174828 = SampleExtra( Texture275_g174828 , Sampler275_g174828 , Coords275_g174828 , TexCoord275_g174828 );
				#if defined( TVE_EMISSIVE_SAMPLE_MAIN_UV )
				float4 staticSwitch176_g174826 = localSampleMain276_g174828;
				#elif defined( TVE_EMISSIVE_SAMPLE_EXTRA_UV )
				float4 staticSwitch176_g174826 = localSampleExtra275_g174828;
				#else
				float4 staticSwitch176_g174826 = localSampleMain276_g174828;
				#endif
				half4 Emissive_MaskTex201_g174826 = staticSwitch176_g174826;
				float clampResult17_g174832 = clamp( (Emissive_MaskTex201_g174826).x , 0.0001 , 0.9999 );
				float temp_output_7_0_g174831 = _EmissiveMaskRemap.x;
				float temp_output_10_0_g174831 = ( _EmissiveMaskRemap.y - temp_output_7_0_g174831 );
				float lerpResult302_g174826 = lerp( 1.0 , saturate( ( ( clampResult17_g174832 - temp_output_7_0_g174831 ) / ( temp_output_10_0_g174831 + 0.0001 ) ) ) , _EmissiveMaskValue);
				half Emissive_Mask103_g174826 = lerpResult302_g174826;
				float temp_output_279_0_g174826 = ( Emissive_MeshMask221_g174826 * Emissive_Mask103_g174826 );
				float3 appendResult293_g174826 = (float3(temp_output_279_0_g174826 , temp_output_279_0_g174826 , temp_output_279_0_g174826));
				half3 Local_EmissiveColor278_g174826 = appendResult293_g174826;
				half4 Visual_Emissive255_g174826 = Out_Emissive4_g174835;
				float3 lerpResult285_g174826 = lerp( Local_EmissiveColor278_g174826 , (Visual_Emissive255_g174826).xyz , (Visual_Emissive255_g174826).w);
				float3 temp_cast_52 = (1.0).xxx;
				TVEGlobalData Data15_g174827 = Data204_g173897;
				float Out_Dummy15_g174827 = 0;
				float4 Out_CoatParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174827 = float4( 0,0,0,0 );
				Out_Dummy15_g174827 = Data15_g174827.Dummy;
				Out_CoatParams15_g174827 = Data15_g174827.CoatParams;
				Out_PaintParams15_g174827 = Data15_g174827.PaintParams;
				Out_GlowParams15_g174827 = Data15_g174827.GlowParams;
				Out_AtmoParams15_g174827= Data15_g174827.AtmoParams;
				Out_FadeParams15_g174827= Data15_g174827.FadeParams;
				Out_FormParams15_g174827 = Data15_g174827.FormParams;
				Out_LandParams15_g174827 = Data15_g174827.LandParams;
				Out_WindParams15_g174827 = Data15_g174827.WindParams;
				Out_PushParams15_g174827 = Data15_g174827.PushParams;
				half4 Global_GlowParams179_g174826 = Out_GlowParams15_g174827;
				float3 lerpResult299_g174826 = lerp( float3( 1,1,1 ) , (Global_GlowParams179_g174826).xyz , TVE_IsEnabled);
				#ifdef TVE_EMISSIVE_ELEMENT
				float3 staticSwitch228_g174826 = lerpResult299_g174826;
				#else
				float3 staticSwitch228_g174826 = temp_cast_52;
				#endif
				half3 Emissive_GlobalMask248_g174826 = staticSwitch228_g174826;
				half3 Visual_AlbedoRaw306_g174826 = temp_output_297_23_g174826;
				float3 lerpResult307_g174826 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g174826 , _EmissiveColorMode);
				half3 Local_EmissiveValue88_g174826 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g174826 * lerpResult307_g174826 );
				half3 Emissive_Blend260_g174826 = ( lerpResult285_g174826 * Local_EmissiveValue88_g174826 );
				float3 temp_output_3_0_g174840 = Emissive_Blend260_g174826;
				float temp_output_15_0_g174840 = _emissive_power_value;
				float3 temp_output_23_0_g174840 = ( temp_output_3_0_g174840 * temp_output_15_0_g174840 );
				half Local_EmissiveMask294_g174826 = temp_output_279_0_g174826;
				float4 appendResult295_g174826 = (float4(temp_output_23_0_g174840 , Local_EmissiveMask294_g174826));
				#ifdef TVE_EMISSIVE
				float4 staticSwitch129_g174826 = appendResult295_g174826;
				#else
				float4 staticSwitch129_g174826 = temp_cast_51;
				#endif
				half4 Final_Emissive184_g174826 = staticSwitch129_g174826;
				float4 In_Emissive3_g174836 = Final_Emissive184_g174826;
				float In_Grayscale3_g174836 = Out_Grayscale4_g174835;
				float In_Luminosity3_g174836 = Out_Luminosity4_g174835;
				float temp_output_297_11_g174826 = Out_MultiMask4_g174835;
				float In_MultiMask3_g174836 = temp_output_297_11_g174826;
				float In_AlphaClip3_g174836 = Out_AlphaClip4_g174835;
				float In_AlphaFade3_g174836 = Out_AlphaFade4_g174835;
				float3 In_Translucency3_g174836 = Out_Translucency4_g174835;
				float In_Transmission3_g174836 = Out_Transmission4_g174835;
				float In_Thickness3_g174836 = Out_Thickness4_g174835;
				float In_Diffusion3_g174836 = Out_Diffusion4_g174835;
				Data3_g174836.Dummy = In_Dummy3_g174836;
				Data3_g174836.Albedo = In_Albedo3_g174836;
				Data3_g174836.AlbedoRaw = In_AlbedoRaw3_g174836;
				Data3_g174836.NormalTS = In_NormalTS3_g174836;
				Data3_g174836.NormalWS = In_NormalWS3_g174836;
				Data3_g174836.Shader = In_Shader3_g174836;
				Data3_g174836.Emissive= In_Emissive3_g174836;
				Data3_g174836.MultiMask = In_MultiMask3_g174836;
				Data3_g174836.Grayscale = In_Grayscale3_g174836;
				Data3_g174836.Luminosity = In_Luminosity3_g174836;
				Data3_g174836.AlphaClip = In_AlphaClip3_g174836;
				Data3_g174836.AlphaFade = In_AlphaFade3_g174836;
				Data3_g174836.Translucency = In_Translucency3_g174836;
				Data3_g174836.Transmission = In_Transmission3_g174836;
				Data3_g174836.Thickness = In_Thickness3_g174836;
				Data3_g174836.Diffusion = In_Diffusion3_g174836;
				TVEVisualData Data4_g174858 = Data3_g174836;
				float Out_Dummy4_g174858 = 0;
				float3 Out_Albedo4_g174858 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174858 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174858 = float2( 0,0 );
				float3 Out_NormalWS4_g174858 = float3( 0,0,0 );
				float4 Out_Shader4_g174858 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174858 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174858 = 0;
				float Out_Grayscale4_g174858 = 0;
				float Out_Luminosity4_g174858 = 0;
				float Out_AlphaClip4_g174858 = 0;
				float Out_AlphaFade4_g174858 = 0;
				float3 Out_Translucency4_g174858 = float3( 0,0,0 );
				float Out_Transmission4_g174858 = 0;
				float Out_Thickness4_g174858 = 0;
				float Out_Diffusion4_g174858 = 0;
				Out_Dummy4_g174858 = Data4_g174858.Dummy;
				Out_Albedo4_g174858 = Data4_g174858.Albedo;
				Out_AlbedoRaw4_g174858 = Data4_g174858.AlbedoRaw;
				Out_NormalTS4_g174858 = Data4_g174858.NormalTS;
				Out_NormalWS4_g174858 = Data4_g174858.NormalWS;
				Out_Shader4_g174858 = Data4_g174858.Shader;
				Out_Emissive4_g174858= Data4_g174858.Emissive;
				Out_MultiMask4_g174858 = Data4_g174858.MultiMask;
				Out_Grayscale4_g174858 = Data4_g174858.Grayscale;
				Out_Luminosity4_g174858= Data4_g174858.Luminosity;
				Out_AlphaClip4_g174858 = Data4_g174858.AlphaClip;
				Out_AlphaFade4_g174858 = Data4_g174858.AlphaFade;
				Out_Translucency4_g174858 = Data4_g174858.Translucency;
				Out_Transmission4_g174858 = Data4_g174858.Transmission;
				Out_Thickness4_g174858 = Data4_g174858.Thickness;
				Out_Diffusion4_g174858 = Data4_g174858.Diffusion;
				half3 Visual_Albedo199_g174857 = Out_Albedo4_g174858;
				float3 temp_cast_53 = (0.0).xxx;
				half3 Subsurface_Color264_g174857 = ( (_SubsurfaceColor).rgb * Visual_Albedo199_g174857 );
				half Visual_Transmission138_g174857 = Out_Transmission4_g174858;
				half Subsurface_Value268_g174857 = _SubsurfaceIntensityValue;
				TVEGlobalData Data15_g174860 = Data204_g173897;
				float Out_Dummy15_g174860 = 0;
				float4 Out_CoatParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174860 = float4( 0,0,0,0 );
				Out_Dummy15_g174860 = Data15_g174860.Dummy;
				Out_CoatParams15_g174860 = Data15_g174860.CoatParams;
				Out_PaintParams15_g174860 = Data15_g174860.PaintParams;
				Out_GlowParams15_g174860 = Data15_g174860.GlowParams;
				Out_AtmoParams15_g174860= Data15_g174860.AtmoParams;
				Out_FadeParams15_g174860= Data15_g174860.FadeParams;
				Out_FormParams15_g174860 = Data15_g174860.FormParams;
				Out_LandParams15_g174860 = Data15_g174860.LandParams;
				Out_WindParams15_g174860 = Data15_g174860.WindParams;
				Out_PushParams15_g174860 = Data15_g174860.PushParams;
				half4 Global_GlowParams373_g174857 = Out_GlowParams15_g174860;
				float lerpResult403_g174857 = lerp( 1.0 , saturate( (Global_GlowParams373_g174857).w ) , TVE_IsEnabled);
				#ifdef TVE_SUBSURFACE_ELEMENT
				float staticSwitch367_g174857 = lerpResult403_g174857;
				#else
				float staticSwitch367_g174857 = 1.0;
				#endif
				half Subsurface_GlobalMask369_g174857 = staticSwitch367_g174857;
				float temp_output_301_11_g174857 = Out_MultiMask4_g174858;
				half Visual_MultiMask292_g174857 = temp_output_301_11_g174857;
				float lerpResult293_g174857 = lerp( 1.0 , Visual_MultiMask292_g174857 , _SubsurfaceMultiValue);
				half Subsurface_MultiMask296_g174857 = lerpResult293_g174857;
				half Custom_Mask363_g174857 = 1.0;
				#ifdef TVE_SUBSURFACE
				float staticSwitch345_g174857 = ( Visual_Transmission138_g174857 * Subsurface_Value268_g174857 * Subsurface_GlobalMask369_g174857 * Subsurface_MultiMask296_g174857 * Custom_Mask363_g174857 );
				#else
				float staticSwitch345_g174857 = 0.0;
				#endif
				half Final_Transmission269_g174857 = staticSwitch345_g174857;
				#ifdef TVE_SUBSURFACE
				float3 staticSwitch348_g174857 = ( Subsurface_Color264_g174857 * Final_Transmission269_g174857 * 10.0 );
				#else
				float3 staticSwitch348_g174857 = temp_cast_53;
				#endif
				half3 Final_Translucency254_g174857 = staticSwitch348_g174857;
				TVEModelData Data15_g174863 = Data16_g164566;
				float Out_Dummy15_g174863 = 0;
				float3 Out_PositionWS15_g174863 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174863 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174863 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174863 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174863 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174863 = float3( 0,0,0 );
				float4 Out_VertexData15_g174863 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174863 = float4( 0,0,0,0 );
				Out_Dummy15_g174863 = Data15_g174863.Dummy;
				Out_PositionWS15_g174863 = Data15_g174863.PositionWS;
				Out_PositionWO15_g174863 = Data15_g174863.PositionWO;
				Out_PivotWS15_g174863 = Data15_g174863.PivotWS;
				Out_PivotWO15_g174863 = Data15_g174863.PivotWO;
				Out_NormalWS15_g174863 = Data15_g174863.NormalWS;
				Out_ViewDirWS15_g174863 = Data15_g174863.ViewDirWS;
				Out_VertexData15_g174863 = Data15_g174863.VertexData;
				Out_BoundsData15_g174863 = Data15_g174863.BoundsData;
				half3 Model_ViewDirWS392_g174857 = Out_ViewDirWS15_g174863;
				float dotResult324_g174857 = dot( -TVE_MainLightDirection , Model_ViewDirWS392_g174857 );
				float saferPower323_g174857 = abs( saturate( dotResult324_g174857 ) );
				#ifdef UNITY_PASS_FORWARDADD
				float staticSwitch330_g174857 = 0.0;
				#else
				float staticSwitch330_g174857 = ( pow( saferPower323_g174857 , _SubsurfaceAngleValue ) * _SubsurfaceScatteringValue );
				#endif
				half Mask_Subsurface_View320_g174857 = staticSwitch330_g174857;
				float3 temp_output_6_0_g174861 = ( Final_Translucency254_g174857 * Mask_Subsurface_View320_g174857 );
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g174861 = ( temp_output_6_0_g174861 + ( _SubsurfaceAproxInfo * 0.0 ) );
				#else
				float3 staticSwitch14_g174861 = temp_output_6_0_g174861;
				#endif
				half3 Subsurface_Approximation333_g174857 = staticSwitch14_g174861;
				#ifdef TVE_SUBSURFACE
				float3 staticSwitch353_g174857 = ( Visual_Albedo199_g174857 + Subsurface_Approximation333_g174857 );
				#else
				float3 staticSwitch353_g174857 = Visual_Albedo199_g174857;
				#endif
				half3 Final_Albedo312_g174857 = staticSwitch353_g174857;
				float3 In_Albedo3_g174859 = Final_Albedo312_g174857;
				float3 In_AlbedoRaw3_g174859 = Out_AlbedoRaw4_g174858;
				float2 In_NormalTS3_g174859 = Out_NormalTS4_g174858;
				float3 In_NormalWS3_g174859 = Out_NormalWS4_g174858;
				float4 In_Shader3_g174859 = Out_Shader4_g174858;
				float4 In_Emissive3_g174859 = Out_Emissive4_g174858;
				float In_Grayscale3_g174859 = Out_Grayscale4_g174858;
				float In_Luminosity3_g174859 = Out_Luminosity4_g174858;
				float In_MultiMask3_g174859 = temp_output_301_11_g174857;
				float In_AlphaClip3_g174859 = Out_AlphaClip4_g174858;
				float In_AlphaFade3_g174859 = Out_AlphaFade4_g174858;
				float3 In_Translucency3_g174859 = Final_Translucency254_g174857;
				float In_Transmission3_g174859 = Final_Transmission269_g174857;
				#ifdef TVE_SUBSURFACE
				float staticSwitch351_g174857 = 0.0;
				#else
				float staticSwitch351_g174857 = 1.0;
				#endif
				half Final_Thickness275_g174857 = staticSwitch351_g174857;
				float In_Thickness3_g174859 = Final_Thickness275_g174857;
				float Final_Diffusion340_g174857 = _SubsurfaceDiffusion;
				float In_Diffusion3_g174859 = Final_Diffusion340_g174857;
				Data3_g174859.Dummy = In_Dummy3_g174859;
				Data3_g174859.Albedo = In_Albedo3_g174859;
				Data3_g174859.AlbedoRaw = In_AlbedoRaw3_g174859;
				Data3_g174859.NormalTS = In_NormalTS3_g174859;
				Data3_g174859.NormalWS = In_NormalWS3_g174859;
				Data3_g174859.Shader = In_Shader3_g174859;
				Data3_g174859.Emissive= In_Emissive3_g174859;
				Data3_g174859.MultiMask = In_MultiMask3_g174859;
				Data3_g174859.Grayscale = In_Grayscale3_g174859;
				Data3_g174859.Luminosity = In_Luminosity3_g174859;
				Data3_g174859.AlphaClip = In_AlphaClip3_g174859;
				Data3_g174859.AlphaFade = In_AlphaFade3_g174859;
				Data3_g174859.Translucency = In_Translucency3_g174859;
				Data3_g174859.Transmission = In_Transmission3_g174859;
				Data3_g174859.Thickness = In_Thickness3_g174859;
				Data3_g174859.Diffusion = In_Diffusion3_g174859;
				TVEVisualData Data4_g174874 = Data3_g174859;
				float Out_Dummy4_g174874 = 0;
				float3 Out_Albedo4_g174874 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174874 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174874 = float2( 0,0 );
				float3 Out_NormalWS4_g174874 = float3( 0,0,0 );
				float4 Out_Shader4_g174874 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174874 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174874 = 0;
				float Out_Grayscale4_g174874 = 0;
				float Out_Luminosity4_g174874 = 0;
				float Out_AlphaClip4_g174874 = 0;
				float Out_AlphaFade4_g174874 = 0;
				float3 Out_Translucency4_g174874 = float3( 0,0,0 );
				float Out_Transmission4_g174874 = 0;
				float Out_Thickness4_g174874 = 0;
				float Out_Diffusion4_g174874 = 0;
				Out_Dummy4_g174874 = Data4_g174874.Dummy;
				Out_Albedo4_g174874 = Data4_g174874.Albedo;
				Out_AlbedoRaw4_g174874 = Data4_g174874.AlbedoRaw;
				Out_NormalTS4_g174874 = Data4_g174874.NormalTS;
				Out_NormalWS4_g174874 = Data4_g174874.NormalWS;
				Out_Shader4_g174874 = Data4_g174874.Shader;
				Out_Emissive4_g174874= Data4_g174874.Emissive;
				Out_MultiMask4_g174874 = Data4_g174874.MultiMask;
				Out_Grayscale4_g174874 = Data4_g174874.Grayscale;
				Out_Luminosity4_g174874= Data4_g174874.Luminosity;
				Out_AlphaClip4_g174874 = Data4_g174874.AlphaClip;
				Out_AlphaFade4_g174874 = Data4_g174874.AlphaFade;
				Out_Translucency4_g174874 = Data4_g174874.Translucency;
				Out_Transmission4_g174874 = Data4_g174874.Transmission;
				Out_Thickness4_g174874 = Data4_g174874.Thickness;
				Out_Diffusion4_g174874 = Data4_g174874.Diffusion;
				half3 Input_Albedo24_g174873 = Out_Albedo4_g174874;
				#ifdef UNITY_COLORSPACE_GAMMA
				float4 staticSwitch22_g174873 = half4(0.2209163,0.2209163,0.2209163,0.7790837);
				#else
				float4 staticSwitch22_g174873 = half4(0.04,0.04,0.04,0.96);
				#endif
				half4 ColorSpaceDielectricSpec23_g174873 = staticSwitch22_g174873;
				float4 break24_g174868 = Out_Shader4_g174874;
				half Metallic95_g174868 = break24_g174868.x;
				half Input_Metallic25_g174873 = Metallic95_g174868;
				half OneMinusReflectivity31_g174873 = ( (ColorSpaceDielectricSpec23_g174873).w - ( (ColorSpaceDielectricSpec23_g174873).w * Input_Metallic25_g174873 ) );
				
				float localCustomAlphaClip19_g174875 = ( 0.0 );
				float temp_output_3_0_g174875 = Out_AlphaClip4_g174874;
				float Alpha19_g174875 = temp_output_3_0_g174875;
				float temp_output_15_0_g174875 = 0.0;
				float Treshold19_g174875 = temp_output_15_0_g174875;
				#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_DITHER)
				#if defined ( TVE_PIPELINE_HD)
				#if !defined(SHADERPASS_FORWARD_BYPASS_ALPHA_TEST) && !defined(SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST)
				clip(Alpha19_g174875 - Treshold19_g174875);
				#endif
				#else
				clip(Alpha19_g174875 - Treshold19_g174875);
				#endif
				#endif
				
				o.Albedo = ( Input_Albedo24_g174873 * OneMinusReflectivity31_g174873 );
				o.Normal = fixed3( 0, 0, 1 );
				o.Emission = (Out_Emissive4_g174874).xyz;
				o.Alpha = saturate( ( Alpha19_g174875 * Out_AlphaFade4_g174874 ) );
				float AlphaClipThreshold = 0.5;

				#ifdef _ALPHATEST_ON
					clip( o.Alpha - AlphaClipThreshold );
				#endif

				#ifdef _DEPTHOFFSET_ON
					outputDepth = IN.pos.z;
				#endif

				UnityMetaInput metaIN;
				UNITY_INITIALIZE_OUTPUT(UnityMetaInput, metaIN);
				metaIN.Albedo = o.Albedo;
				metaIN.Emission = o.Emission;
				#ifdef EDITOR_VISUALIZATION
					metaIN.VizUV = IN.vizUV;
					metaIN.LightCoord = IN.lightCoord;
				#endif
				return UnityMetaFragment(metaIN);
			}
			ENDCG
		}

		
		Pass
		{
			
			Name "ShadowCaster"
			Tags { "LightMode"="ShadowCaster" }
			ZWrite On
			ZTest LEqual
			AlphaToMask Off

			CGPROGRAM
			#define ASE_GEOMETRY 1
			#define ASE_NEEDS_FRAG_SHADOWCOORDS
			#pragma multi_compile_instancing
			#pragma multi_compile __ LOD_FADE_CROSSFADE
			#pragma multi_compile_fog
			#define ASE_FOG 1
			#define ASE_ABSOLUTE_VERTEX_POS 1
			#define _SPECULAR_SETUP 1
			#define ASE_LIGHTING_SIMPLE 1
			#define _ENVIRONMENTREFLECTIONS_OFF 1
			#define ASE_USING_SAMPLING_MACROS 1

			#pragma vertex vert
			#pragma fragment frag
			#pragma skip_variants FOG_LINEAR FOG_EXP FOG_EXP2
			#pragma multi_compile_shadowcaster
			#ifndef UNITY_PASS_SHADOWCASTER
				#define UNITY_PASS_SHADOWCASTER
			#endif
			#include "HLSLSupport.cginc"

			#ifdef ASE_GEOMETRY
				#ifndef UNITY_INSTANCED_LOD_FADE
					#define UNITY_INSTANCED_LOD_FADE
				#endif
				#ifndef UNITY_INSTANCED_SH
					#define UNITY_INSTANCED_SH
				#endif
				#ifndef UNITY_INSTANCED_LIGHTMAPSTS
					#define UNITY_INSTANCED_LIGHTMAPSTS
				#endif
			#endif

			#if ( SHADER_API_D3D11 || SHADER_API_GLCORE || SHADER_API_GLES || SHADER_API_GLES3 || SHADER_API_METAL || SHADER_API_VULKAN )
				#define CAN_SKIP_VPOS
			#endif
			#include "UnityShaderVariables.cginc"
			#include "UnityCG.cginc"
			#include "Lighting.cginc"
			#include "UnityPBSLighting.cginc"

			#include "UnityStandardBRDF.cginc"
			#define ASE_NEEDS_VERT_POSITION
			#define ASE_NEEDS_VERT_NORMAL
			#define ASE_NEEDS_VERT_TANGENT
			#pragma shader_feature_local_fragment TVE_PIPELINE_STANDARD TVE_PIPELINE_UNIVERSAL TVE_PIPELINE_HD
			#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
			#pragma shader_feature_local_vertex TVE_SIZEFADE
			#pragma shader_feature_local_vertex TVE_PERSPECTIVE
			#pragma shader_feature_local_vertex TVE_PIVOT_OFF TVE_PIVOT_BAKED TVE_PIVOT_PROC
			#pragma shader_feature_local_vertex TVE_SIZEFADE_ELEMENT
			#pragma shader_feature_local_vertex TVE_MOTION_SMALL_SQUASH
			#pragma shader_feature_local TVE_LEGACY
			#pragma shader_feature_local_vertex TVE_MOTION_WIND_ELEMENT
			#pragma shader_feature_local_vertex TVE_MOTION_WIND_OFF TVE_MOTION_WIND_OPTIMIZED TVE_MOTION_WIND_ADVANCED
			#pragma shader_feature_local_vertex TVE_MOTION_TINY_FLUTTER
			#pragma shader_feature_local_vertex TVE_MOTION_PUSH_BENDING
			#pragma shader_feature_local_vertex TVE_MOTION_BASE_BENDING
			#pragma shader_feature_local_vertex TVE_BLANKET_BENDING
			#pragma shader_feature_local_vertex TVE_NORMAL_COMPUTE
			#pragma shader_feature_local_fragment TVE_SUBSURFACE
			#pragma shader_feature_local_fragment TVE_WETNESS
			#pragma shader_feature_local_fragment TVE_OVERLAY
			#pragma shader_feature_local_fragment TVE_MOTION_HIGHLIGHT
			#pragma shader_feature_local_fragment TVE_DRYNESS
			#pragma shader_feature_local_fragment TVE_TINTING
			#pragma shader_feature_local_fragment TVE_VARIATION
			#pragma shader_feature_local_fragment TVE_GRADIENT
			#pragma shader_feature_local_fragment TVE_OCCLUSION
			#pragma shader_feature_local_fragment TVE_TERRAIN
			#pragma shader_feature_local_fragment TVE_THIRD
			#pragma shader_feature_local_fragment TVE_SECOND
			#pragma shader_feature_local_fragment TVE_MAIN_SAMPLE_MAIN_UV TVE_MAIN_SAMPLE_EXTRA_UV TVE_MAIN_SAMPLE_PLANAR_2D TVE_MAIN_SAMPLE_PLANAR_3D TVE_MAIN_SAMPLE_STOCHASTIC_2D TVE_MAIN_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
			#pragma shader_feature_local_fragment TVE_SECOND_SAMPLE_MAIN_UV TVE_SECOND_SAMPLE_EXTRA_UV TVE_SECOND_SAMPLE_PLANAR_2D TVE_SECOND_SAMPLE_PLANAR_3D TVE_SECOND_SAMPLE_STOCHASTIC_2D TVE_SECOND_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_SECOND_MASK_SAMPLE_MAIN_UV TVE_SECOND_MASK_SAMPLE_EXTRA_UV TVE_SECOND_MASK_SAMPLE_PLANAR_2D TVE_SECOND_MASK_SAMPLE_PLANAR_3D
			#pragma shader_feature_local_fragment TVE_SECOND_ELEMENT
			#pragma shader_feature_local_fragment TVE_THIRD_SAMPLE_MAIN_UV TVE_THIRD_SAMPLE_EXTRA_UV TVE_THIRD_SAMPLE_PLANAR_2D TVE_THIRD_SAMPLE_PLANAR_3D TVE_THIRD_SAMPLE_STOCHASTIC_2D TVE_THIRD_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_THIRD_MASK_SAMPLE_MAIN_UV TVE_THIRD_MASK_SAMPLE_EXTRA_UV TVE_THIRD_MASK_SAMPLE_PLANAR_2D TVE_THIRD_MASK_SAMPLE_PLANAR_3D
			#pragma shader_feature_local_fragment TVE_THIRD_ELEMENT
			#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
			#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_MASK_SAMPLE_MAIN_UV TVE_TERRAIN_MASK_SAMPLE_EXTRA_UV TVE_TERRAIN_MASK_SAMPLE_PLANAR_2D TVE_TERRAIN_MASK_SAMPLE_PLANAR_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_ELEMENT
			#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
			#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
			#pragma shader_feature_local_fragment TVE_DRYNESS_SHIFT
			#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
			#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
			#pragma shader_feature_local_fragment TVE_OVERLAY_MASK_SAMPLE_MAIN_UV TVE_OVERLAY_MASK_SAMPLE_EXTRA_UV
			#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_WATER
			#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_VERT
			#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
			#pragma shader_feature_local_fragment TVE_CUTOUT
			#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
			#pragma shader_feature_local_fragment TVE_DITHER
			#pragma shader_feature_local_fragment TVE_EMISSIVE
			#pragma shader_feature_local_fragment TVE_EMISSIVE_SAMPLE_MAIN_UV TVE_EMISSIVE_SAMPLE_EXTRA_UV
			#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
			#pragma shader_feature_local_fragment TVE_SUBSURFACE_ELEMENT
			//SHADER INJECTION POINT BEGIN
			//SHADER INJECTION POINT END
			  
			struct TVEVisualData
			{  
				half Dummy;  
				half3 Albedo;
				half3 AlbedoRaw;
				half2 NormalTS;
				half3 NormalWS; 
				half4 Shader;
				half4 Emissive;
				half AlphaClip;
				half AlphaFade;
				half MultiMask;
				half Grayscale;
				half Luminosity;
				half3 Translucency;
				half Transmission;
				half Thickness;
				float Diffusion;
			};  
			    
			struct TVEModelData
			{    
				half Dummy;    
				half3 PositionOS;
				half3 PositionWS;
				half3 PositionWO;
				half3 PositionRawOS;
				half3 PositionAddOS;
				half3 PivotOS;
				half3 PivotWS;
				half3 PivotWO;
				half3 NormalOS;
				half3 NormalWS;
				half3 NormalRawOS;
				half3 NormalRawWS;
				half4 TangentOS;
				half3 ViewDirWS;
				half4 VertexData;
				half4 MotionData;
				half4 BoundsData;
				half4 RotationData;
			};    
			      
			struct TVEGlobalData
			{      
				half Dummy;      
				half4 CoatParams;
				half4 PaintParams;
				half4 GlowParams;
				half4 AtmoParams;
				half4 FadeParams;
				half4 FormParams;
				half4 LandParams;
				half4 WindParams;
				half4 PushParams;
			};      
			        
			//#pragma editor_sync_compilation
			#if defined(SHADER_API_D3D11) || defined(SHADER_API_XBOXONE) || defined(UNITY_COMPILER_HLSLCC) || defined(SHADER_API_PSSL) || (defined(SHADER_TARGET_SURFACE_ANALYSIS) && !defined(SHADER_TARGET_SURFACE_ANALYSIS_MOJOSHADER))//ASE Sampler Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex.SampleBias(samplerTex,coord,bias)
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex.SampleGrad(samplerTex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE3D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#else//ASE Sampling Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex2D(tex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex2Dlod(tex,float4(coord,0,lod))
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex2Dbias(tex,float4(coord,0,bias))
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex2Dgrad(tex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE3D(tex,samplerTex,coord) tex3D(tex,coord)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplertex,coord,lod) tex2DArraylod(tex, float4(coord,lod))
			#endif//ASE Sampling Macros
			

			struct appdata {
				float4 vertex : POSITION;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;
				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct v2f {
				V2F_SHADOW_CASTER;
				float4 ase_texcoord2 : TEXCOORD2;
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_texcoord4 : TEXCOORD4;
				float4 ase_texcoord5 : TEXCOORD5;
				float4 ase_texcoord6 : TEXCOORD6;
				float4 ase_color : COLOR;
				float4 ase_texcoord7 : TEXCOORD7;
				float4 ase_texcoord8 : TEXCOORD8;
				float4 ase_texcoord9 : TEXCOORD9;
				float4 ase_texcoord10 : TEXCOORD10;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				UNITY_VERTEX_OUTPUT_STEREO
			};

			#ifdef UNITY_STANDARD_USE_DITHER_MASK
				sampler3D _DitherMaskLOD;
			#endif
			#ifdef ASE_TESSELLATION
				float _TessPhongStrength;
				float _TessValue;
				float _TessMin;
				float _TessMax;
				float _TessEdgeLength;
				float _TessMaxDisp;
			#endif
			uniform half _TerrainSampleMode1;
			uniform half _TerrainSampleMode2;
			uniform half _TerrainSampleMode3;
			uniform half _TerrainSampleMode4;
			uniform half _TerrainSampleMode5;
			uniform half _TerrainSampleMode6;
			uniform half _TerrainSampleMode7;
			uniform half _TerrainSampleMode8;
			uniform half _TerrainSampleMode9;
			uniform half _TerrainSampleMode10;
			uniform half _TerrainSampleMode11;
			uniform half _TerrainSampleMode12;
			uniform half _TerrainSampleMode13;
			uniform half _TerrainSampleMode14;
			uniform half _TerrainSampleMode15;
			uniform half _TerrainSampleMode16;
			uniform half _TerrainLayersMode;
			uniform half _TerrainTextureMode;
			uniform half _SubsurfaceScatteringValue;
			uniform half _SubsurfaceAngleValue;
			uniform float _SubsurfaceDiffusion;
			uniform float4 _SubsurfaceDiffusion_Asset;
			uniform half _SubsurfaceSpace;
			uniform half _render_src;
			uniform half _render_cull;
			uniform half _render_dst;
			uniform half _render_zw;
			uniform half _render_coverage;
			uniform half _IsBlanketShader;
			uniform half _IsSimpleShader;
			uniform half _RenderZWrite;
			uniform half4 _Color;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_BumpMap);
			SamplerState sampler_BumpMap;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainTex);
			SamplerState sampler_MainTex;
			uniform half _Cutoff;
			uniform half _IsVersion;
			uniform half _RenderCategory;
			uniform half _RenderEnd;
			uniform half _RenderMode;
			uniform half _NoiseCategory;
			uniform half _NoiseEnd;
			uniform half _RenderCull;
			uniform half _RenderNormal;
			uniform half _RenderBakeGI;
			uniform half _RenderDecals;
			uniform half _RenderSSR;
			uniform half _RenderPriority;
			uniform half _RenderQueue;
			uniform half _RenderMotion;
			uniform half _RenderClip;
			uniform half _RenderShadow;
			uniform half _IsTVEShader;
			uniform half _IsCustomShader;
			uniform half _IsShared;
			uniform half _HasDefaultTextures;
			uniform half _IsCollected;
			uniform half _IsConverted;
			uniform half _IsIdentifier;
			uniform half _RenderFilter;
			UNITY_DECLARE_TEX3D_NOSAMPLER(_NoiseTex3D);
			SamplerState sampler_NoiseTex3D;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_NoiseTexSS);
			SamplerState sampler_NoiseTexSS;
			uniform half _NormalCategory;
			uniform half _NormalEnd;
			uniform half _NormalSpace;
			uniform half _BlanketCategory;
			uniform half _BlanketEnd;
			uniform half _BlanketInfo;
			uniform half _MotionWindCategory;
			uniform half _MotionWindEnd;
			uniform half _MotionInteractionCategory;
			uniform half _MotionInteractionEnd;
			uniform half _MotionWindMode;
			uniform half _MotionWindElementMode;
			uniform half _MotionPushElementMode;
			uniform half _MotionWindOffInfo;
			uniform half _MotionWindOptimizedInfo;
			uniform half _MotionWindAdvancedInfo;
			uniform half _SizeFadeCategory;
			uniform half _SizeFadeEnd;
			uniform half _SizeFadeElementMode;
			uniform half _PerspectiveCategory;
			uniform half _PerspectiveEnd;
			uniform half _ObjectCategory;
			uniform half _ObjectEnd;
			uniform half _ObjectModelMode;
			uniform half _ObjectPivotMode;
			uniform half _ObjectPhaseMode;
			uniform half _ObjectBoundsInfo;
			uniform float3 TVE_WorldOrigin;
			uniform half4 _object_phase_mode;
			uniform half _ObjectHeightValue;
			uniform half _ObjectRadiusValue;
			uniform half _PerspectiveIntensityValue;
			uniform half _PerspectiveAngleValue;
			uniform half _SizeFadeDistMaxValue;
			uniform half _SizeFadeDistMinValue;
			uniform half _SizeFadeScaleValue;
			uniform half _GlobalCategory;
			uniform half _GlobalEnd;
			uniform half _GlobalCoatLayerValue;
			uniform float TVE_CoatLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_CoatBaseTex);
			uniform half4 TVE_RenderBaseCoords;
			uniform half _GlobalCoatPivotValue;
			SamplerState sampler_Linear_Clamp;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_CoatNearTex);
			uniform half4 TVE_RenderNearCoords;
			SamplerState sampler_Linear_Repeat;
			uniform float4 TVE_RenderNearPositionR;
			uniform half TVE_RenderNearFadeValue;
			uniform half4 TVE_CoatParams;
			uniform half _GlobalPaintLayerValue;
			uniform float TVE_PaintLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintBaseTex);
			uniform half _GlobalPaintPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintNearTex);
			uniform half4 TVE_PaintParams;
			uniform half _GlobalGlowLayerValue;
			uniform float TVE_GlowLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowBaseTex);
			uniform half _GlobalGlowPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowNearTex);
			uniform half4 TVE_GlowParams;
			uniform half _GlobalAtmoLayerValue;
			uniform float TVE_AtmoLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoBaseTex);
			uniform half _GlobalAtmoPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoNearTex);
			uniform half4 TVE_AtmoParams;
			uniform half _GlobalFadeLayerValue;
			uniform float TVE_FadeLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeBaseTex);
			uniform half _GlobalFadePivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeNearTex);
			uniform half4 TVE_FadeParams;
			uniform half _GlobalFormLayerValue;
			uniform float TVE_FormLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormBaseTex);
			uniform half _GlobalFormPivotValue;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormNearTex);
			uniform half4 TVE_FormParams;
			uniform half4 TVE_LandParams;
			uniform half _GlobalWindLayerValue;
			uniform float TVE_WindLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_WindBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_WindNearTex);
			uniform half4 TVE_WindParams;
			uniform half _GlobalPushLayerValue;
			uniform float TVE_PushLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PushBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PushNearTex);
			uniform half4 TVE_PushParams;
			uniform half TVE_IsEnabled;
			uniform half _SizeFadeScaleMode;
			uniform half _SizeFadeIntensityValue;
			uniform half _MotionSmallIntensityValue;
			uniform half4 _motion_small_vert_mode;
			uniform half4 _motion_small_proc_mode;
			uniform half _motion_small_mask_mode;
			uniform half4 _MotionSmallMaskRemap;
			uniform half _MotionSmallMaskMode;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MotionNoiseTexRT);
			uniform half _MotionBasePivotValue;
			uniform half _MotionBasePhaseValue;
			uniform half _MotionTillingValue;
			uniform half _MotionIntensityValue;
			uniform half4 TVE_MotionParams;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MotionNoiseTex);
			uniform half _MotionBaseTillingValue;
			uniform half4 TVE_TimeParams;
			uniform half _MotionBaseSpeedValue;
			uniform half _MotionBaseNoiseValue;
			uniform half _global_wind_layer_value;
			uniform half _MotionSmallPivotValue;
			uniform half _MotionSmallPhaseValue;
			uniform half _MotionSmallTillingValue;
			uniform half _MotionSmallSpeedValue;
			uniform half _MotionSmallNoiseValue;
			uniform half _MotionFrontValue;
			uniform half _MotionSmallDelayValue;
			uniform half _MotionTinyIntensityValue;
			uniform half4 _motion_tiny_vert_mode;
			uniform half4 _motion_tiny_proc_mode;
			uniform half _motion_tiny_mask_mode;
			uniform half4 _MotionTinyMaskRemap;
			uniform half _MotionTinyMaskMode;
			uniform half _MotionTinyTillingValue;
			uniform half _MotionTinySpeedValue;
			uniform half _MotionDistValue;
			uniform half _global_push_layer_value;
			uniform half _MotionPushPivotValue;
			uniform half _MotionPushPhaseValue;
			uniform half _MotionPushIntensityValue;
			uniform half _MotionBaseIntensityValue;
			uniform half4 _motion_base_vert_mode;
			uniform half4 _motion_base_proc_mode;
			uniform half _motion_base_mask_mode;
			uniform half4 _MotionBaseMaskRemap;
			uniform half _MotionBaseMaskMode;
			uniform half _MotionBaseDelayValue;
			uniform half4 _motion_push_vert_mode;
			uniform half4 _motion_push_proc_mode;
			uniform half _motion_push_mask_mode;
			uniform half4 _MotionPushMaskRemap;
			uniform half _MotionPushMaskMode;
			uniform half _BlanketConformOffsetMode;
			uniform half _BlanketConformOffsetValue;
			uniform half _BlanketConformValue;
			uniform half _BlanketOrientationValue;
			uniform half _NormalFlattenValue;
			uniform half3 _NormalSphereOffsetValue;
			uniform half _NormalSphereValue;
			uniform half _NormalComputeValue;
			uniform half _NormalBlanketValue;
			uniform half4 _normal_vert_mode;
			uniform half4 _NormalMeshRemap;
			uniform half _NormalMeshValue;
			uniform half _NormalMeshMode;
			uniform half4 _NormalProjRemap;
			uniform half _NormalProjValue;
			uniform half _NormalLandOffsetValue;
			uniform half _NormalLandValue;
			uniform half _NormalLandMode;
			uniform half _NormalBlanketInfo;
			uniform half _DisableSRPBatcher;
			uniform half _SubsurfaceCategory;
			uniform half _SubsurfaceEnd;
			uniform half _SubsurfaceDirectValue;
			uniform half _SubsurfaceNormalValue;
			uniform half _SubsurfaceAmbientValue;
			uniform half _SubsurfaceShadowValue;
			uniform half _SubsurfaceElementMode;
			uniform half _EmissiveCategory;
			uniform half _EmissiveEnd;
			uniform half _EmissivePowerMode;
			uniform half _EmissivePowerValue;
			uniform half _EmissiveElementMode;
			uniform half _EmissiveFlagMode;
			uniform half _DitherCategory;
			uniform half _DitherEnd;
			uniform half _CutoutCategory;
			uniform half _CutoutEnd;
			uniform half _CutoutElementMode;
			uniform half _CutoutBakeMode;
			uniform half _WetnessCategory;
			uniform half _WetnessEnd;
			uniform half _WetnessElementMode;
			uniform half _WetnessBakeMode;
			uniform half _OverlayCategory;
			uniform half _OverlayEnd;
			uniform half _OverlaySpace;
			uniform half _OverlayElementMode;
			uniform half _OverlayBakeMode;
			uniform half _DrynessCategory;
			uniform half _DrynessEnd;
			uniform half _DrynessSpace;
			uniform half _DrynessElementMode;
			uniform half _DrynessBakeMode;
			uniform half _TintingCategory;
			uniform half _TintingEnd;
			uniform half _TintingSpace;
			uniform half _TintingBakeMode;
			uniform half _VariationCategory;
			uniform half _VariationEnd;
			uniform half _GradientCategory;
			uniform half _GradientEnd;
			uniform half _GradientBakeMode;
			uniform half _OcclusionCategory;
			uniform half _OcclusionEnd;
			uniform half _OcclusionBakeMode;
			uniform half _TerrainCategory;
			uniform half _TerrainEnd;
			uniform half _TerrainFormInfo;
			uniform half _ThirdElementMode;
			uniform half _DetailCategory;
			uniform half _DetailEnd;
			uniform half _ThirdSampleMode;
			uniform half _ThirdCoordMode;
			uniform half4 _ThirdCoordValue;
			uniform half _ThirdMaskSampleMode;
			uniform half _ThirdMaskCoordMode;
			uniform half4 _ThirdMaskCoordValue;
			uniform half _ThirdBakeMode;
			uniform half _LayerCategory;
			uniform half _LayerEnd;
			uniform half _SecondSampleMode;
			uniform half _SecondCoordMode;
			uniform half4 _SecondCoordValue;
			uniform half _SecondMaskSampleMode;
			uniform half _SecondMaskCoordMode;
			uniform half4 _SecondMaskCoordValue;
			uniform half _SecondElementMode;
			uniform half _SecondBakeMode;
			uniform half _MainCategory;
			uniform half _MainEnd;
			uniform half _MainSampleMode;
			uniform half _MainCoordMode;
			uniform half4 _MainCoordValue;
			uniform half _MainMultiMaskInfo;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainAlbedoTex);
			SamplerState sampler_Linear_Repeat_Aniso8;
			SamplerState sampler_Point_Repeat;
			uniform half4 _main_coord_value;
			uniform half _MainAlbedoValue;
			uniform half4 _MainColorTwo;
			uniform half4 _MainColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainShaderTex);
			uniform half _MainMetallicValue;
			uniform half _MainOcclusionValue;
			uniform half _MainSmoothnessValue;
			uniform half4 _MainMultiRemap;
			uniform half _MainColorMode;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_MainNormalTex);
			uniform half _MainNormalValue;
			uniform half _MainAlphaClipValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondAlbedoTex);
			uniform half4 _second_coord_value;
			uniform half _SecondAlbedoValue;
			uniform half4 _SecondColorTwo;
			uniform half4 _SecondColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondShaderTex);
			uniform half _SecondMetallicValue;
			uniform half _SecondOcclusionValue;
			uniform half _SecondSmoothnessValue;
			uniform half4 _SecondMultiRemap;
			uniform half _SecondColorMode;
			uniform half _SecondBlendAlbedoValue;
			uniform half _SecondIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondMaskTex);
			uniform half4 _second_mask_coord_value;
			uniform half4 _SecondMaskRemap;
			uniform half _SecondMaskValue;
			uniform half4 _SecondProjRemap;
			uniform half _SecondProjValue;
			uniform half4 _second_vert_mode;
			uniform half4 _SecondMeshRemap;
			uniform half _SecondMeshValue;
			uniform half _SecondMeshMode;
			uniform half4 _SecondBlendRemap;
			uniform half _SecondBlendIntensityValue;
			uniform half _SecondBlendNormalValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_SecondNormalTex);
			uniform half _SecondNormalValue;
			uniform half _SecondBlendShaderValue;
			uniform half _SecondAlphaClipValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdAlbedoTex);
			uniform half4 _third_coord_value;
			uniform half _ThirdAlbedoValue;
			uniform half4 _ThirdColorTwo;
			uniform half4 _ThirdColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdShaderTex);
			uniform half _ThirdMetallicValue;
			uniform half _ThirdOcclusionValue;
			uniform half _ThirdSmoothnessValue;
			uniform half4 _ThirdMultiRemap;
			uniform half _ThirdColorMode;
			uniform half _ThirdBlendAlbedoValue;
			uniform half _ThirdIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdMaskTex);
			uniform half4 _third_mask_coord_value;
			uniform half4 _ThirdMaskRemap;
			uniform half _ThirdMaskValue;
			uniform half4 _third_vert_mode;
			uniform half4 _ThirdMeshRemap;
			uniform half _ThirdMeshValue;
			uniform half _ThirdMeshMode;
			uniform half4 _ThirdProjRemap;
			uniform half _ThirdProjValue;
			uniform half4 _ThirdBlendRemap;
			uniform half _ThirdBlendIntensityValue;
			uniform half _ThirdBlendNormalValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_ThirdNormalTex);
			uniform half _ThirdNormalValue;
			uniform half _ThirdBlendShaderValue;
			uniform half _ThirdAlphaClipValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex1);
			uniform half4 _TerrainPosition;
			uniform half4 _TerrainSize;
			float4 _TerrainControlTex1_TexelSize;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex1);
			uniform half4 _TerrainCoord1;
			uniform half4 _TerrainShaderMin1;
			uniform half4 _TerrainShaderMax1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex2);
			uniform half4 _TerrainCoord2;
			uniform half4 _TerrainShaderMin2;
			uniform half4 _TerrainShaderMax2;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex3);
			uniform half4 _TerrainCoord3;
			uniform half4 _TerrainShaderMin3;
			uniform half4 _TerrainShaderMax3;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex4);
			uniform half4 _TerrainCoord4;
			uniform half4 _TerrainShaderMin4;
			uniform half4 _TerrainShaderMax4;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex5);
			uniform half4 _TerrainCoord5;
			uniform half4 _TerrainShaderMin5;
			uniform half4 _TerrainShaderMax5;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex6);
			uniform half4 _TerrainCoord6;
			uniform half4 _TerrainShaderMin6;
			uniform half4 _TerrainShaderMax6;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex7);
			uniform half4 _TerrainCoord7;
			uniform half4 _TerrainShaderMin7;
			uniform half4 _TerrainShaderMax7;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex8);
			uniform half4 _TerrainCoord8;
			uniform half4 _TerrainShaderMin8;
			uniform half4 _TerrainShaderMax8;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex9);
			uniform half4 _TerrainCoord9;
			uniform half4 _TerrainShaderMin9;
			uniform half4 _TerrainShaderMax9;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex10);
			uniform half4 _TerrainCoord10;
			uniform half4 _TerrainShaderMin10;
			uniform half4 _TerrainShaderMax10;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex11);
			uniform half4 _TerrainCoord11;
			uniform half4 _TerrainShaderMin11;
			uniform half4 _TerrainShaderMax11;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex12);
			uniform half4 _TerrainCoord12;
			uniform half4 _TerrainShaderMin12;
			uniform half4 _TerrainShaderMax12;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex13);
			uniform half4 _TerrainCoord13;
			uniform half4 _TerrainShaderMin13;
			uniform half4 _TerrainShaderMax13;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex14);
			uniform half4 _TerrainCoord14;
			uniform half4 _TerrainShaderMin14;
			uniform half4 _TerrainShaderMax14;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex15);
			uniform half4 _TerrainCoord15;
			uniform half4 _TerrainShaderMin15;
			uniform half4 _TerrainShaderMax15;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex16);
			uniform half4 _TerrainCoord16;
			uniform half4 _TerrainShaderMin16;
			uniform half4 _TerrainShaderMax16;
			uniform half _TerrainHeightBlendValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex16);
			uniform half4 _TerrainColor1;
			uniform half4 _TerrainColor2;
			uniform half4 _TerrainColor3;
			uniform half4 _TerrainColor4;
			uniform half4 _TerrainColor5;
			uniform half4 _TerrainColor6;
			uniform half4 _TerrainColor7;
			uniform half4 _TerrainColor8;
			uniform half4 _TerrainColor9;
			uniform half4 _TerrainColor10;
			uniform half4 _TerrainColor11;
			uniform half4 _TerrainColor12;
			uniform half4 _TerrainColor13;
			uniform half4 _TerrainColor14;
			uniform half4 _TerrainColor15;
			uniform half4 _TerrainColor16;
			uniform half4 _TerrainColor;
			uniform half _TerrainIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainMaskTex);
			uniform half4 _terrain_mask_coord_value;
			uniform half _TerrainMaskSampleMode;
			uniform half _TerrainMaskCoordMode;
			uniform half4 _TerrainMaskCoordValue;
			uniform half4 _TerrainMaskRemap;
			uniform half _TerrainMaskValue;
			uniform half4 _TerrainProjRemap;
			uniform half _TerrainProjValue;
			uniform float _TerrainLandOffsetValue;
			uniform float _TerrainLandValue;
			uniform half _TerrainLandMode;
			uniform half4 _TerrainBlendRemap;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex16);
			uniform half4 _TerrainParams1;
			uniform half4 _TerrainParams2;
			uniform half4 _TerrainParams3;
			uniform half4 _TerrainParams4;
			uniform half4 _TerrainParams5;
			uniform half4 _TerrainParams6;
			uniform half4 _TerrainParams7;
			uniform half4 _TerrainParams8;
			uniform half4 _TerrainParams9;
			uniform half4 _TerrainParams10;
			uniform half4 _TerrainParams11;
			uniform half4 _TerrainParams12;
			uniform half4 _TerrainParams13;
			uniform half4 _TerrainParams14;
			uniform half4 _TerrainParams15;
			uniform half4 _TerrainParams16;
			uniform half _TerrainNormalValue;
			uniform half _TerrainMetallicValue;
			uniform half _TerrainOcclusionValue;
			uniform half _TerrainSmoothnessValue;
			uniform half4 _TerrainSpecular1;
			uniform half4 _TerrainSpecular2;
			uniform half4 _TerrainSpecular3;
			uniform half4 _TerrainSpecular4;
			uniform half4 _TerrainSpecular5;
			uniform half4 _TerrainSpecular6;
			uniform half4 _TerrainSpecular7;
			uniform half4 _TerrainSpecular8;
			uniform half4 _TerrainSpecular9;
			uniform half4 _TerrainSpecular10;
			uniform half4 _TerrainSpecular11;
			uniform half4 _TerrainSpecular12;
			uniform half4 _TerrainSpecular13;
			uniform half4 _TerrainSpecular14;
			uniform half4 _TerrainSpecular15;
			uniform half4 _TerrainSpecular16;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainHolesTex);
			uniform half4 _OcclusionColorTwo;
			uniform half4 _OcclusionColorOne;
			uniform half4 _occlusion_vert_mode;
			uniform half4 _OcclusionMeshRemap;
			uniform half _OcclusionMeshMode;
			uniform half _OcclusionIntensityValue;
			uniform half4 _GradientColorTwo;
			uniform half4 _GradientColorOne;
			uniform half4 _gradient_vert_mode;
			uniform half4 _GradientMeshRemap;
			uniform half _GradientMeshMode;
			uniform half _GradientIntensityValue;
			uniform half _GradientMultiValue;
			uniform half4 _VariationColorTwo;
			uniform half4 _VariationColorOne;
			uniform half _VariationNoisePivotValue;
			uniform half _VariationNoiseTillingValue;
			uniform half4 _VariationNoiseRemap;
			uniform half _VariationIntensityValue;
			uniform half _VariationMultiValue;
			uniform half _TintingElementMode;
			uniform half _TintingGrayValue;
			uniform float4 _TintingColor;
			uniform half _TintingIntensityValue;
			uniform half _TintingMultiValue;
			uniform half4 _TintingLumaRemap;
			uniform half _TintingLumaValue;
			uniform half4 _tinting_vert_mode;
			uniform half4 _TintingMeshRemap;
			uniform half _TintingMeshValue;
			uniform half _TintingMeshMode;
			uniform half4 _TintingBlendRemap;
			uniform half _DrynessGrayValue;
			uniform half _DrynessShiftValue;
			uniform float4 _DrynessColor;
			uniform half _DrynessIntensityValue;
			uniform half _DrynessMultiValue;
			uniform half4 _DrynessLumaRemap;
			uniform half _DrynessLumaValue;
			uniform half4 _dryness_vert_mode;
			uniform half4 _DrynessMeshRemap;
			uniform half _DrynessMeshValue;
			uniform half _DrynessMeshMode;
			uniform half4 _DrynessBlendRemap;
			uniform half _DrynessSmoothnessValue;
			uniform half _DrynessSubsurfaceValue;
			uniform half3 _motion_highlight_color;
			uniform half _MotionHighlightValue;
			uniform half4 _MotionHighlightColor;
			uniform half4 _OverlayColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayAlbedoTex);
			uniform half4 _overlay_coord_value;
			uniform half _OverlaySampleMode;
			uniform half _OverlayCoordMode;
			uniform half4 _OverlayCoordValue;
			uniform half _OverlayTextureMode;
			uniform half _OverlayGlitterIntensityValue;
			uniform half4 _OverlayGlitterColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayGlitterTexRT);
			uniform half _OverlayGlitterTillingValue;
			uniform half _OverlayGlitterDistValue;
			uniform half _OverlayIntensityValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayMaskTex);
			uniform half4 _overlay_mask_coord_value;
			uniform half _OverlayMaskSampleMode;
			uniform half _OverlayMaskCoordMode;
			uniform half4 _OverlayMaskCoordValue;
			uniform half4 _OverlayMaskRemap;
			uniform half _OverlayMaskValue;
			uniform half4 _OverlayProjRemap;
			uniform half _OverlayProjValue;
			uniform half4 _OverlayLumaRemap;
			uniform half _OverlayLumaValue;
			uniform half4 _overlay_vert_mode;
			uniform half4 _OverlayMeshRemap;
			uniform half _OverlayMeshValue;
			uniform half _OverlayMeshMode;
			uniform half4 _OverlayBlendRemap1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayNormalTex);
			uniform half _OverlayNormalValue;
			uniform half _OverlaySmoothnessValue;
			uniform half _OverlaySubsurfaceValue;
			uniform half4 _WetnessWaterColor;
			uniform half _WetnessWaterIntensityValue;
			uniform half _WetnessIntensityValue;
			uniform half4 _wetness_vert_mode;
			uniform half4 _WetnessMeshRemap;
			uniform half _WetnessMeshValue;
			uniform half _WetnessMeshMode;
			uniform half4 _wetness_water_vert_mode;
			uniform half4 _WetnessWaterMeshRemap;
			uniform half _WetnessWaterMeshValue;
			uniform half _WetnessWaterMeshMode;
			uniform half _WetnessWaterBaseValue;
			uniform half4 _WetnessWaterBlendRemap;
			uniform half _WetnessContrastValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_WetnessDropsTexRT);
			uniform half _WetnessDropsTillingValue;
			uniform half _WetnessDropsIntensityValue;
			uniform half _WetnessDropsNormalValue;
			uniform half _WetnessDropsDistValue;
			uniform half4 _wetness_drops_vert_mode;
			uniform half4 _WetnessDropsMeshRemap;
			uniform half _WetnessDropsMeshValue;
			uniform half _WetnessDropsMeshMode;
			uniform half _WetnessSmoothnessValue;
			uniform half _CutoutIntensityValue;
			uniform half _CutoutAlphaValue;
			uniform half _CutoutNoiseTillingValue;
			uniform half _CutoutNoiseValue;
			uniform half4 _cutout_vert_mode;
			uniform half4 _CutoutMeshRemap;
			uniform half _CutoutMeshValue;
			uniform half _CutoutMeshMode;
			uniform half _CutoutMultiValue;
			uniform half _DitherConstantValue;
			uniform half _DitherProximityMaxValue;
			uniform half _DitherProximityMinValue;
			uniform half _DitherProximityValue;
			uniform half _DitherDistanceMinValue;
			uniform half _DitherDistanceMaxValue;
			uniform half _DitherDistanceValue;
			uniform half _DitherGlancingAngleValue;
			uniform half _DitherGlancingValue;
			uniform half _DitherNoiseTillingValue;
			uniform half _DitherMultiValue;
			uniform half4 _emissive_vert_mode;
			uniform half4 _EmissiveMeshRemap;
			uniform half _EmissiveMeshValue;
			uniform half _EmissiveMeshMode;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_EmissiveMaskTex);
			uniform half4 _emissive_coord_value;
			uniform half _EmissiveSampleMode;
			uniform half _EmissiveCoordMode;
			uniform half4 _EmissiveCoordValue;
			uniform half4 _EmissiveMaskRemap;
			uniform half _EmissiveMaskValue;
			uniform half _EmissiveIntensityValue;
			uniform half4 _EmissiveColor;
			uniform half _EmissiveColorMode;
			uniform float _emissive_power_value;
			uniform half4 _SubsurfaceColor;
			uniform half _SubsurfaceIntensityValue;
			uniform half _SubsurfaceMultiValue;
			uniform half3 TVE_MainLightDirection;
			uniform half _SubsurfaceAproxInfo;


			float2 DecodeFloatToVector2( float enc )
			{
				float2 result ;
				result.y = enc % 2048;
				result.x = floor(enc / 2048);
				return result / (2048 - 1);
			}
			
			float3 ASESafeNormalize(float3 inVec)
			{
				float dp3 = max(1.175494351e-38, dot(inVec, inVec));
				return inVec* rsqrt(dp3);
			}
			
			void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
			{
				ZX = WorldPosition.xz * Coords.xx - Coords.zz;
				ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
				XY = WorldPosition.xy * Coords.xy - Coords.zw;
			}
			
			half4 SampleMain( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, half2 TexCoord )
			{
				half2 UV = TexCoord * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			half4 SampleExtra( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, half2 TexCoord )
			{
				half2 UV = TexCoord * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			half4 SamplePlanar2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
			{
				half3 powNormal = abs( WorldNormal.xyz );
				half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
				weights /= ( weights.x + weights.y + weights.z ).xxx;
				T1 = weights.y;
				T2 = weights.x;
				T3 = weights.z;
			}
			
			half4 SamplePlanar3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
				half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
				half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
				return tex1 * T1 + tex2 * T2 + tex3 * T3;
			}
			
			void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
			{
				half2 vertex1, vertex2, vertex3;
				// Scaling of the input
				half2 uv = UV * 3.464; // 2 * sqrt (3)
				// Skew input space into simplex triangle grid
				const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
				half2 skewedCoord = mul( gridToSkewedGrid, uv );
				// Compute local triangle vertex IDs and local barycentric coordinates
				int2 baseId = int2( floor( skewedCoord ) );
				half3 temp = half3( frac( skewedCoord ), 0 );
				temp.z = 1.0 - temp.x - temp.y;
				if ( temp.z > 0.0 )
				{
					W1 = temp.z;
					W2 = temp.y;
					W3 = temp.x;
					vertex1 = baseId;
					vertex2 = baseId + int2( 0, 1 );
					vertex3 = baseId + int2( 1, 0 );
				}
				else
				{
					W1 = -temp.z;
					W2 = 1.0 - temp.y;
					W3 = 1.0 - temp.x;
					vertex1 = baseId + int2( 1, 1 );
					vertex2 = baseId + int2( 1, 0 );
					vertex3 = baseId + int2( 0, 1 );
				}
				UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
				UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
				UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
				return;
			}
			
			float4 SampleStochastic2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
				half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
				half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
				half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
				return tex1 * W1 + tex2 * W2 + tex3 * W3;
			}
			
			half4 SampleStochastic3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				half4 tex1, tex2, tex3;
				ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
				half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
				half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
				half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				return texZX * T1 + texZY * T2 + texXY * T3;
			}
			
			half3 HSVToRGB( half3 c )
			{
				half4 K = half4( 1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0 );
				half3 p = abs( frac( c.xxx + K.xyz ) * 6.0 - K.www );
				return c.z * lerp( K.xxx, saturate( p - K.xxx ), c.y );
			}
			
			half3 RGBToHSV(half3 c)
			{
				half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
				half4 p = lerp( half4( c.bg, K.wz ), half4( c.gb, K.xy ), step( c.b, c.g ) );
				half4 q = lerp( half4( p.xyw, c.r ), half4( c.r, p.yzx ), step( p.x, c.r ) );
				half d = q.x - min( q.w, q.y );
				half e = 1.0e-10;
				return half3( abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
			}

			v2f VertexFunction (appdata v  ) {
				UNITY_SETUP_INSTANCE_ID(v);
				v2f o;
				UNITY_INITIALIZE_OUTPUT(v2f,o);
				UNITY_TRANSFER_INSTANCE_ID(v,o);
				UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);

				TVEModelData Data16_g174866 = (TVEModelData)0;
				float In_Dummy16_g174866 = 0.0;
				TVEModelData Data16_g174843 = (TVEModelData)0;
				half Dummy1575_g174841 = ( _NormalCategory + _NormalEnd + _NormalSpace );
				float In_Dummy16_g174843 = Dummy1575_g174841;
				TVEModelData Data16_g174820 = (TVEModelData)0;
				float In_Dummy16_g174820 = 0.0;
				TVEModelData Data16_g174801 = (TVEModelData)0;
				half Dummy181_g174798 = ( _BlanketCategory + _BlanketEnd + _BlanketInfo );
				float In_Dummy16_g174801 = Dummy181_g174798;
				TVEModelData Data16_g174577 = (TVEModelData)0;
				half Dummy181_g174563 = ( ( _MotionWindCategory + _MotionWindEnd ) + ( _MotionInteractionCategory + _MotionInteractionEnd ) + _MotionWindMode + _MotionWindElementMode + _MotionPushElementMode + ( _MotionWindOffInfo + _MotionWindOptimizedInfo + _MotionWindAdvancedInfo ) );
				float In_Dummy16_g174577 = Dummy181_g174563;
				TVEModelData Data16_g174422 = (TVEModelData)0;
				half Dummy181_g174419 = ( _SizeFadeCategory + _SizeFadeEnd + _SizeFadeElementMode );
				float In_Dummy16_g174422 = Dummy181_g174419;
				TVEModelData Data16_g174385 = (TVEModelData)0;
				half Dummy181_g174382 = ( _PerspectiveCategory + _PerspectiveEnd );
				float In_Dummy16_g174385 = Dummy181_g174382;
				TVEModelData Data16_g174346 = (TVEModelData)0;
				float In_Dummy16_g174346 = 0.0;
				TVEModelData Data16_g164565 = (TVEModelData)0;
				half Dummy207_g164551 = ( _ObjectCategory + _ObjectEnd + _ObjectModelMode + _ObjectPivotMode + _ObjectPhaseMode + _ObjectBoundsInfo );
				float In_Dummy16_g164565 = Dummy207_g164551;
				half3 PositionOS131_g164551 = v.vertex.xyz;
				float3 In_PositionOS16_g164565 = PositionOS131_g164551;
				float3 ase_worldPos = mul(unity_ObjectToWorld, float4( (v.vertex).xyz, 1 )).xyz;
				float3 vertexToFrag73_g164551 = ase_worldPos;
				half3 PositionWS122_g164551 = vertexToFrag73_g164551;
				float3 In_PositionWS16_g164565 = PositionWS122_g164551;
				float4x4 break19_g164553 = unity_ObjectToWorld;
				float3 appendResult20_g164553 = (float3(break19_g164553[ 0 ][ 3 ] , break19_g164553[ 1 ][ 3 ] , break19_g164553[ 2 ][ 3 ]));
				half3 ObjectData20_g164555 = appendResult20_g164553;
				half3 WorldData19_g164555 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g164555 = WorldData19_g164555;
				#else
				float3 staticSwitch14_g164555 = ObjectData20_g164555;
				#endif
				float3 temp_output_124_0_g164553 = staticSwitch14_g164555;
				float3 temp_output_239_7_g164551 = temp_output_124_0_g164553;
				float4x4 break19_g164557 = unity_ObjectToWorld;
				float3 appendResult20_g164557 = (float3(break19_g164557[ 0 ][ 3 ] , break19_g164557[ 1 ][ 3 ] , break19_g164557[ 2 ][ 3 ]));
				float3 _Vector0 = float3(0,0,0);
				float3 appendResult60_g164561 = (float3(v.ase_texcoord3.x , 0.0 , v.ase_texcoord3.y));
				float3 break233_g164551 = PositionOS131_g164551;
				float3 appendResult234_g164551 = (float3(break233_g164551.x , 0.0 , break233_g164551.z));
				#if defined( TVE_PIVOT_OFF )
				float3 staticSwitch229_g164551 = _Vector0;
				#elif defined( TVE_PIVOT_BAKED )
				float3 staticSwitch229_g164551 = appendResult60_g164561;
				#elif defined( TVE_PIVOT_PROC )
				float3 staticSwitch229_g164551 = appendResult234_g164551;
				#else
				float3 staticSwitch229_g164551 = _Vector0;
				#endif
				half3 PivotOS149_g164551 = staticSwitch229_g164551;
				float3 temp_output_122_0_g164557 = PivotOS149_g164551;
				float3 PivotsOnly105_g164557 = (mul( unity_ObjectToWorld, float4( temp_output_122_0_g164557 , 0.0 ) ).xyz).xyz;
				half3 ObjectData20_g164559 = ( appendResult20_g164557 + PivotsOnly105_g164557 );
				half3 WorldData19_g164559 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g164559 = WorldData19_g164559;
				#else
				float3 staticSwitch14_g164559 = ObjectData20_g164559;
				#endif
				float3 temp_output_124_0_g164557 = staticSwitch14_g164559;
				float3 temp_output_237_7_g164551 = temp_output_124_0_g164557;
				#if defined( TVE_PIVOT_OFF )
				float3 staticSwitch236_g164551 = temp_output_239_7_g164551;
				#elif defined( TVE_PIVOT_BAKED )
				float3 staticSwitch236_g164551 = temp_output_237_7_g164551;
				#elif defined( TVE_PIVOT_PROC )
				float3 staticSwitch236_g164551 = temp_output_237_7_g164551;
				#else
				float3 staticSwitch236_g164551 = temp_output_239_7_g164551;
				#endif
				float3 vertexToFrag76_g164551 = staticSwitch236_g164551;
				half3 PivotWS121_g164551 = vertexToFrag76_g164551;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g164551 = ( PositionWS122_g164551 - PivotWS121_g164551 );
				#else
				float3 staticSwitch204_g164551 = PositionWS122_g164551;
				#endif
				half3 PositionWO132_g164551 = ( staticSwitch204_g164551 - TVE_WorldOrigin );
				float3 In_PositionWO16_g164565 = PositionWO132_g164551;
				float3 In_PositionRawOS16_g164565 = PositionOS131_g164551;
				float3 In_PositionAddOS16_g164565 = float3( 0,0,0 );
				float3 In_PivotOS16_g164565 = PivotOS149_g164551;
				float3 In_PivotWS16_g164565 = PivotWS121_g164551;
				half3 PivotWO133_g164551 = ( PivotWS121_g164551 - TVE_WorldOrigin );
				float3 In_PivotWO16_g164565 = PivotWO133_g164551;
				half3 NormalOS134_g164551 = v.normal;
				float3 In_NormalOS16_g164565 = NormalOS134_g164551;
				float3 ase_worldNormal = UnityObjectToWorldNormal(v.normal);
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g164551 = normalizedWorldNormal;
				float3 In_NormalWS16_g164565 = Normal_WS95_g164551;
				float3 In_NormalRawOS16_g164565 = NormalOS134_g164551;
				float3 objToWorldDir298_g164551 = normalize( mul( unity_ObjectToWorld, float4( v.normal, 0 ) ).xyz );
				half3 Normal_RawWS136_g164551 = objToWorldDir298_g164551;
				float3 In_NormalRawWS16_g164565 = Normal_RawWS136_g164551;
				half4 TangentlOS153_g164551 = v.tangent;
				float4 In_TangentOS16_g164565 = TangentlOS153_g164551;
				float3 normalizeResult296_g164551 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g164551 ) );
				half3 ViewDirWS169_g164551 = normalizeResult296_g164551;
				float3 In_ViewDirWS16_g164565 = ViewDirWS169_g164551;
				half4 VertexMasks171_g164551 = v.ase_color;
				float4 In_VertexData16_g164565 = VertexMasks171_g164551;
				float4 break33_g164564 = _object_phase_mode;
				float temp_output_30_0_g164564 = ( v.ase_color.r * break33_g164564.x );
				float temp_output_29_0_g164564 = ( v.ase_color.g * break33_g164564.y );
				float temp_output_31_0_g164564 = ( v.ase_color.b * break33_g164564.z );
				float temp_output_28_0_g164564 = ( temp_output_30_0_g164564 + temp_output_29_0_g164564 + temp_output_31_0_g164564 + ( v.ase_color.a * break33_g164564.w ) );
				float3 break243_g164551 = PivotWO133_g164551;
				float temp_output_315_0_g164551 = (frac( ( temp_output_28_0_g164564 + ( break243_g164551.x + break243_g164551.z ) ) )*2.0 + -1.0);
				float4 appendResult177_g164551 = (float4(1.0 , 1.0 , temp_output_315_0_g164551 , 1.0));
				half4 MotionMasks176_g164551 = appendResult177_g164551;
				float4 In_MotionData16_g164565 = MotionMasks176_g164551;
				half Object_HeightValue267_g164551 = _ObjectHeightValue;
				half Object_RadiusValue268_g164551 = _ObjectRadiusValue;
				half Bounds_HeightMask274_g164551 = saturate( ( (PositionOS131_g164551).y / Object_HeightValue267_g164551 ) );
				half Bounds_SphereMask282_g164551 = saturate( ( length( PositionOS131_g164551 ) / max( Object_HeightValue267_g164551 , Object_RadiusValue268_g164551 ) ) );
				float4 appendResult253_g164551 = (float4(Object_HeightValue267_g164551 , Object_RadiusValue268_g164551 , Bounds_HeightMask274_g164551 , Bounds_SphereMask282_g164551));
				half4 BoundsData254_g164551 = appendResult253_g164551;
				float4 In_BoundsData16_g164565 = BoundsData254_g164551;
				float4 In_RotationData16_g164565 = float4( 0,0,0,0 );
				Data16_g164565.Dummy = In_Dummy16_g164565;
				Data16_g164565.PositionOS = In_PositionOS16_g164565;
				Data16_g164565.PositionWS = In_PositionWS16_g164565;
				Data16_g164565.PositionWO = In_PositionWO16_g164565;
				Data16_g164565.PositionRawOS = In_PositionRawOS16_g164565;
				Data16_g164565.PositionAddOS = In_PositionAddOS16_g164565;
				Data16_g164565.PivotOS = In_PivotOS16_g164565;
				Data16_g164565.PivotWS = In_PivotWS16_g164565;
				Data16_g164565.PivotWO = In_PivotWO16_g164565;
				Data16_g164565.NormalOS = In_NormalOS16_g164565;
				Data16_g164565.NormalWS = In_NormalWS16_g164565;
				Data16_g164565.NormalRawOS = In_NormalRawOS16_g164565;
				Data16_g164565.NormalRawWS = In_NormalRawWS16_g164565;
				Data16_g164565.TangentOS = In_TangentOS16_g164565;
				Data16_g164565.ViewDirWS = In_ViewDirWS16_g164565;
				Data16_g164565.VertexData = In_VertexData16_g164565;
				Data16_g164565.MotionData = In_MotionData16_g164565;
				Data16_g164565.BoundsData = In_BoundsData16_g164565;
				Data16_g164565.RotationData = In_RotationData16_g164565;
				TVEModelData Data15_g174347 = Data16_g164565;
				float Out_Dummy15_g174347 = 0;
				float3 Out_PositionOS15_g174347 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174347 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174347 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174347 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174347 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174347 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174347 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174347 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174347 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174347 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174347 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174347 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174347 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174347 = float3( 0,0,0 );
				float4 Out_VertexData15_g174347 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174347 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174347 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174347 = float4( 0,0,0,0 );
				Out_Dummy15_g174347 = Data15_g174347.Dummy;
				Out_PositionOS15_g174347 = Data15_g174347.PositionOS;
				Out_PositionWS15_g174347 = Data15_g174347.PositionWS;
				Out_PositionWO15_g174347 = Data15_g174347.PositionWO;
				Out_PositionRawOS15_g174347 = Data15_g174347.PositionRawOS;
				Out_PositionAddOS15_g174347 = Data15_g174347.PositionAddOS;
				Out_PivotOS15_g174347 = Data15_g174347.PivotOS;
				Out_PivotWS15_g174347 = Data15_g174347.PivotWS;
				Out_PivotWO15_g174347 = Data15_g174347.PivotWO;
				Out_NormalOS15_g174347 = Data15_g174347.NormalOS;
				Out_NormalWS15_g174347 = Data15_g174347.NormalWS;
				Out_NormalRawOS15_g174347 = Data15_g174347.NormalRawOS;
				Out_NormalRawWS15_g174347 = Data15_g174347.NormalRawWS;
				Out_TangentOS15_g174347 = Data15_g174347.TangentOS;
				Out_ViewDirWS15_g174347 = Data15_g174347.ViewDirWS;
				Out_VertexData15_g174347 = Data15_g174347.VertexData;
				Out_MotionData15_g174347 = Data15_g174347.MotionData;
				Out_BoundsData15_g174347 = Data15_g174347.BoundsData;
				Out_RotationData15_g174347 = Data15_g174347.RotationData;
				float3 temp_output_218_24_g174345 = Out_PivotOS15_g174347;
				float3 In_PositionOS16_g174346 = ( Out_PositionOS15_g174347 - temp_output_218_24_g174345 );
				float3 In_PositionWS16_g174346 = Out_PositionWS15_g174347;
				float3 In_PositionWO16_g174346 = Out_PositionWO15_g174347;
				float3 In_PositionRawOS16_g174346 = Out_PositionRawOS15_g174347;
				float3 In_PositionAddOS16_g174346 = Out_PositionAddOS15_g174347;
				float3 In_PivotOS16_g174346 = temp_output_218_24_g174345;
				float3 In_PivotWS16_g174346 = Out_PivotWS15_g174347;
				float3 In_PivotWO16_g174346 = Out_PivotWO15_g174347;
				float3 In_NormalOS16_g174346 = Out_NormalOS15_g174347;
				float3 In_NormalWS16_g174346 = Out_NormalWS15_g174347;
				float3 In_NormalRawOS16_g174346 = Out_NormalRawOS15_g174347;
				float3 In_NormalRawWS16_g174346 = Out_NormalRawWS15_g174347;
				float4 In_TangentOS16_g174346 = Out_TangentOS15_g174347;
				float3 In_ViewDirWS16_g174346 = Out_ViewDirWS15_g174347;
				float4 In_VertexData16_g174346 = Out_VertexData15_g174347;
				float4 In_MotionData16_g174346 = Out_MotionData15_g174347;
				float4 In_BoundsData16_g174346 = Out_BoundsData15_g174347;
				float4 In_RotationData16_g174346 = Out_RotationData15_g174347;
				Data16_g174346.Dummy = In_Dummy16_g174346;
				Data16_g174346.PositionOS = In_PositionOS16_g174346;
				Data16_g174346.PositionWS = In_PositionWS16_g174346;
				Data16_g174346.PositionWO = In_PositionWO16_g174346;
				Data16_g174346.PositionRawOS = In_PositionRawOS16_g174346;
				Data16_g174346.PositionAddOS = In_PositionAddOS16_g174346;
				Data16_g174346.PivotOS = In_PivotOS16_g174346;
				Data16_g174346.PivotWS = In_PivotWS16_g174346;
				Data16_g174346.PivotWO = In_PivotWO16_g174346;
				Data16_g174346.NormalOS = In_NormalOS16_g174346;
				Data16_g174346.NormalWS = In_NormalWS16_g174346;
				Data16_g174346.NormalRawOS = In_NormalRawOS16_g174346;
				Data16_g174346.NormalRawWS = In_NormalRawWS16_g174346;
				Data16_g174346.TangentOS = In_TangentOS16_g174346;
				Data16_g174346.ViewDirWS = In_ViewDirWS16_g174346;
				Data16_g174346.VertexData = In_VertexData16_g174346;
				Data16_g174346.MotionData = In_MotionData16_g174346;
				Data16_g174346.BoundsData = In_BoundsData16_g174346;
				Data16_g174346.RotationData = In_RotationData16_g174346;
				TVEModelData Data15_g174383 = Data16_g174346;
				float Out_Dummy15_g174383 = 0;
				float3 Out_PositionOS15_g174383 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174383 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174383 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174383 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174383 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174383 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174383 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174383 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174383 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174383 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174383 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174383 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174383 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174383 = float3( 0,0,0 );
				float4 Out_VertexData15_g174383 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174383 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174383 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174383 = float4( 0,0,0,0 );
				Out_Dummy15_g174383 = Data15_g174383.Dummy;
				Out_PositionOS15_g174383 = Data15_g174383.PositionOS;
				Out_PositionWS15_g174383 = Data15_g174383.PositionWS;
				Out_PositionWO15_g174383 = Data15_g174383.PositionWO;
				Out_PositionRawOS15_g174383 = Data15_g174383.PositionRawOS;
				Out_PositionAddOS15_g174383 = Data15_g174383.PositionAddOS;
				Out_PivotOS15_g174383 = Data15_g174383.PivotOS;
				Out_PivotWS15_g174383 = Data15_g174383.PivotWS;
				Out_PivotWO15_g174383 = Data15_g174383.PivotWO;
				Out_NormalOS15_g174383 = Data15_g174383.NormalOS;
				Out_NormalWS15_g174383 = Data15_g174383.NormalWS;
				Out_NormalRawOS15_g174383 = Data15_g174383.NormalRawOS;
				Out_NormalRawWS15_g174383 = Data15_g174383.NormalRawWS;
				Out_TangentOS15_g174383 = Data15_g174383.TangentOS;
				Out_ViewDirWS15_g174383 = Data15_g174383.ViewDirWS;
				Out_VertexData15_g174383 = Data15_g174383.VertexData;
				Out_MotionData15_g174383 = Data15_g174383.MotionData;
				Out_BoundsData15_g174383 = Data15_g174383.BoundsData;
				Out_RotationData15_g174383 = Data15_g174383.RotationData;
				half3 Model_PositionOS147_g174382 = Out_PositionOS15_g174383;
				float3 ase_worldViewDir = UnityWorldSpaceViewDir(ase_worldPos);
				ase_worldViewDir = Unity_SafeNormalize( ase_worldViewDir );
				float4x4 break117_g174384 = unity_CameraToWorld;
				float3 appendResult118_g174384 = (float3(break117_g174384[ 0 ][ 2 ] , break117_g174384[ 1 ][ 2 ] , break117_g174384[ 2 ][ 2 ]));
				float3 lerpResult209_g174382 = lerp( ase_worldViewDir , -appendResult118_g174384 , unity_OrthoParams.w);
				float3 break201_g174382 = cross( lerpResult209_g174382 , half3(0,1,0) );
				float3 appendResult196_g174382 = (float3(-break201_g174382.z , 0.0 , break201_g174382.x));
				float dotResult189_g174382 = dot( ase_worldViewDir , float3(0,1,0) );
				float saferPower192_g174382 = abs( dotResult189_g174382 );
				#ifdef TVE_PERSPECTIVE
				float3 staticSwitch211_g174382 = ( Model_PositionOS147_g174382 + ( mul( unity_WorldToObject, float4( appendResult196_g174382 , 0.0 ) ).xyz * _PerspectiveIntensityValue * pow( saferPower192_g174382 , _PerspectiveAngleValue ) * saturate( (Model_PositionOS147_g174382).y ) ) );
				#else
				float3 staticSwitch211_g174382 = Model_PositionOS147_g174382;
				#endif
				half3 Final_Position178_g174382 = staticSwitch211_g174382;
				float3 In_PositionOS16_g174385 = Final_Position178_g174382;
				float3 In_PositionWS16_g174385 = Out_PositionWS15_g174383;
				float3 In_PositionWO16_g174385 = Out_PositionWO15_g174383;
				float3 In_PositionRawOS16_g174385 = Out_PositionRawOS15_g174383;
				float3 In_PositionAddOS16_g174385 = Out_PositionAddOS15_g174383;
				float3 In_PivotOS16_g174385 = Out_PivotOS15_g174383;
				float3 In_PivotWS16_g174385 = Out_PivotWS15_g174383;
				float3 In_PivotWO16_g174385 = Out_PivotWO15_g174383;
				float3 In_NormalOS16_g174385 = Out_NormalOS15_g174383;
				float3 In_NormalWS16_g174385 = Out_NormalWS15_g174383;
				float3 In_NormalRawOS16_g174385 = Out_NormalRawOS15_g174383;
				float3 In_NormalRawWS16_g174385 = Out_NormalRawWS15_g174383;
				float4 In_TangentOS16_g174385 = Out_TangentOS15_g174383;
				float3 In_ViewDirWS16_g174385 = Out_ViewDirWS15_g174383;
				float4 In_VertexData16_g174385 = Out_VertexData15_g174383;
				float4 In_MotionData16_g174385 = Out_MotionData15_g174383;
				float4 In_BoundsData16_g174385 = Out_BoundsData15_g174383;
				float4 In_RotationData16_g174385 = Out_RotationData15_g174383;
				Data16_g174385.Dummy = In_Dummy16_g174385;
				Data16_g174385.PositionOS = In_PositionOS16_g174385;
				Data16_g174385.PositionWS = In_PositionWS16_g174385;
				Data16_g174385.PositionWO = In_PositionWO16_g174385;
				Data16_g174385.PositionRawOS = In_PositionRawOS16_g174385;
				Data16_g174385.PositionAddOS = In_PositionAddOS16_g174385;
				Data16_g174385.PivotOS = In_PivotOS16_g174385;
				Data16_g174385.PivotWS = In_PivotWS16_g174385;
				Data16_g174385.PivotWO = In_PivotWO16_g174385;
				Data16_g174385.NormalOS = In_NormalOS16_g174385;
				Data16_g174385.NormalWS = In_NormalWS16_g174385;
				Data16_g174385.NormalRawOS = In_NormalRawOS16_g174385;
				Data16_g174385.NormalRawWS = In_NormalRawWS16_g174385;
				Data16_g174385.TangentOS = In_TangentOS16_g174385;
				Data16_g174385.ViewDirWS = In_ViewDirWS16_g174385;
				Data16_g174385.VertexData = In_VertexData16_g174385;
				Data16_g174385.MotionData = In_MotionData16_g174385;
				Data16_g174385.BoundsData = In_BoundsData16_g174385;
				Data16_g174385.RotationData = In_RotationData16_g174385;
				TVEModelData Data15_g174421 = Data16_g174385;
				float Out_Dummy15_g174421 = 0;
				float3 Out_PositionOS15_g174421 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174421 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174421 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174421 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174421 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174421 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174421 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174421 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174421 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174421 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174421 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174421 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174421 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174421 = float3( 0,0,0 );
				float4 Out_VertexData15_g174421 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174421 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174421 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174421 = float4( 0,0,0,0 );
				Out_Dummy15_g174421 = Data15_g174421.Dummy;
				Out_PositionOS15_g174421 = Data15_g174421.PositionOS;
				Out_PositionWS15_g174421 = Data15_g174421.PositionWS;
				Out_PositionWO15_g174421 = Data15_g174421.PositionWO;
				Out_PositionRawOS15_g174421 = Data15_g174421.PositionRawOS;
				Out_PositionAddOS15_g174421 = Data15_g174421.PositionAddOS;
				Out_PivotOS15_g174421 = Data15_g174421.PivotOS;
				Out_PivotWS15_g174421 = Data15_g174421.PivotWS;
				Out_PivotWO15_g174421 = Data15_g174421.PivotWO;
				Out_NormalOS15_g174421 = Data15_g174421.NormalOS;
				Out_NormalWS15_g174421 = Data15_g174421.NormalWS;
				Out_NormalRawOS15_g174421 = Data15_g174421.NormalRawOS;
				Out_NormalRawWS15_g174421 = Data15_g174421.NormalRawWS;
				Out_TangentOS15_g174421 = Data15_g174421.TangentOS;
				Out_ViewDirWS15_g174421 = Data15_g174421.ViewDirWS;
				Out_VertexData15_g174421 = Data15_g174421.VertexData;
				Out_MotionData15_g174421 = Data15_g174421.MotionData;
				Out_BoundsData15_g174421 = Data15_g174421.BoundsData;
				Out_RotationData15_g174421 = Data15_g174421.RotationData;
				half3 Model_PositionOS147_g174419 = Out_PositionOS15_g174421;
				float3 temp_cast_5 = (1.0).xxx;
				float3 temp_output_210_19_g174419 = Out_PivotWO15_g174421;
				half3 Model_PivotWO162_g174419 = temp_output_210_19_g174419;
				float temp_output_7_0_g174420 = _SizeFadeDistMaxValue;
				float temp_output_10_0_g174420 = ( _SizeFadeDistMinValue - temp_output_7_0_g174420 );
				float localBuildGlobalData204_g173897 = ( 0.0 );
				TVEGlobalData Data204_g173897 = (TVEGlobalData)0;
				half Dummy211_g173897 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g173897 = Dummy211_g173897;
				float temp_output_82_0_g173907 = _GlobalCoatLayerValue;
				float temp_output_19_0_g173909 = TVE_CoatLayers[(int)temp_output_82_0_g173907];
				TVEModelData Data16_g164566 = (TVEModelData)0;
				float In_Dummy16_g164566 = 0.0;
				float3 In_PositionWS16_g164566 = PositionWS122_g164551;
				float3 In_PositionWO16_g164566 = PositionWO132_g164551;
				float3 In_PivotWS16_g164566 = PivotWS121_g164551;
				float3 In_PivotWO16_g164566 = PivotWO133_g164551;
				float3 In_NormalWS16_g164566 = Normal_WS95_g164551;
				float3 In_ViewDirWS16_g164566 = ViewDirWS169_g164551;
				float4 In_VertexData16_g164566 = VertexMasks171_g164551;
				float4 In_BoundsData16_g164566 = float4( 1,1,1,1 );
				Data16_g164566.Dummy = In_Dummy16_g164566;
				Data16_g164566.PositionWS = In_PositionWS16_g164566;
				Data16_g164566.PositionWO = In_PositionWO16_g164566;
				Data16_g164566.PivotWS = In_PivotWS16_g164566;
				Data16_g164566.PivotWO = In_PivotWO16_g164566;
				Data16_g164566.NormalWS = In_NormalWS16_g164566;
				Data16_g164566.ViewDirWS = In_ViewDirWS16_g164566;
				Data16_g164566.VertexData = In_VertexData16_g164566;
				Data16_g164566.BoundsData = In_BoundsData16_g164566;
				TVEModelData Data15_g173979 = Data16_g164566;
				float Out_Dummy15_g173979 = 0;
				float3 Out_PositionWS15_g173979 = float3( 0,0,0 );
				float3 Out_PositionWO15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWS15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWO15_g173979 = float3( 0,0,0 );
				float3 Out_NormalWS15_g173979 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g173979 = float3( 0,0,0 );
				float4 Out_VertexData15_g173979 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g173979 = float4( 0,0,0,0 );
				Out_Dummy15_g173979 = Data15_g173979.Dummy;
				Out_PositionWS15_g173979 = Data15_g173979.PositionWS;
				Out_PositionWO15_g173979 = Data15_g173979.PositionWO;
				Out_PivotWS15_g173979 = Data15_g173979.PivotWS;
				Out_PivotWO15_g173979 = Data15_g173979.PivotWO;
				Out_NormalWS15_g173979 = Data15_g173979.NormalWS;
				Out_ViewDirWS15_g173979 = Data15_g173979.ViewDirWS;
				Out_VertexData15_g173979 = Data15_g173979.VertexData;
				Out_BoundsData15_g173979 = Data15_g173979.BoundsData;
				half3 Model_PositionWS143_g173897 = Out_PositionWS15_g173979;
				half3 Model_PivotWS145_g173897 = Out_PivotWS15_g173979;
				float3 lerpResult300_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalCoatPivotValue);
				half3 Input_Position180_g173910 = lerpResult300_g173897;
				float2 temp_output_75_0_g173910 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_82_0_g173910 = temp_output_82_0_g173907;
				float2 temp_output_119_0_g173910 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_7_0_g173915 = 1.0;
				float temp_output_10_0_g173915 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173915 );
				float4 lerpResult131_g173910 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173910,temp_output_82_0_g173910), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173910,temp_output_82_0_g173910), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173910 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173915 ) / temp_output_10_0_g173915 ) ));
				float4 temp_output_17_0_g173909 = lerpResult131_g173910;
				float4 temp_output_3_0_g173909 = TVE_CoatParams;
				float4 ifLocalVar18_g173909 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173909 >= 0.5 )
				ifLocalVar18_g173909 = temp_output_17_0_g173909;
				else
				ifLocalVar18_g173909 = temp_output_3_0_g173909;
				float4 lerpResult22_g173909 = lerp( temp_output_3_0_g173909 , temp_output_17_0_g173909 , temp_output_19_0_g173909);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173909 = lerpResult22_g173909;
				#else
				float4 staticSwitch24_g173909 = ifLocalVar18_g173909;
				#endif
				half4 Coat_Params302_g173897 = staticSwitch24_g173909;
				float4 In_CoatParams204_g173897 = Coat_Params302_g173897;
				float temp_output_82_0_g173898 = _GlobalPaintLayerValue;
				float temp_output_19_0_g173900 = TVE_PaintLayers[(int)temp_output_82_0_g173898];
				float3 lerpResult85_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalPaintPivotValue);
				half3 Input_Position180_g173901 = lerpResult85_g173897;
				float2 temp_output_75_0_g173901 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_82_0_g173901 = temp_output_82_0_g173898;
				float2 temp_output_119_0_g173901 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_7_0_g173906 = 1.0;
				float temp_output_10_0_g173906 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173906 );
				float4 lerpResult131_g173901 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173901,temp_output_82_0_g173901), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173901,temp_output_82_0_g173901), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173901 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173906 ) / temp_output_10_0_g173906 ) ));
				float4 temp_output_17_0_g173900 = lerpResult131_g173901;
				float4 temp_output_3_0_g173900 = TVE_PaintParams;
				float4 ifLocalVar18_g173900 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173900 >= 0.5 )
				ifLocalVar18_g173900 = temp_output_17_0_g173900;
				else
				ifLocalVar18_g173900 = temp_output_3_0_g173900;
				float4 lerpResult22_g173900 = lerp( temp_output_3_0_g173900 , temp_output_17_0_g173900 , temp_output_19_0_g173900);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173900 = lerpResult22_g173900;
				#else
				float4 staticSwitch24_g173900 = ifLocalVar18_g173900;
				#endif
				half4 Paint_Params71_g173897 = staticSwitch24_g173900;
				float4 In_PaintParams204_g173897 = Paint_Params71_g173897;
				float temp_output_82_0_g173916 = _GlobalGlowLayerValue;
				float temp_output_19_0_g173918 = TVE_GlowLayers[(int)temp_output_82_0_g173916];
				float3 lerpResult247_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalGlowPivotValue);
				half3 Input_Position180_g173919 = lerpResult247_g173897;
				float2 temp_output_75_0_g173919 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_82_0_g173919 = temp_output_82_0_g173916;
				float2 temp_output_119_0_g173919 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_7_0_g173924 = 1.0;
				float temp_output_10_0_g173924 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173924 );
				float4 lerpResult131_g173919 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173919,temp_output_82_0_g173919), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173919,temp_output_82_0_g173919), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173919 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173924 ) / temp_output_10_0_g173924 ) ));
				float4 temp_output_17_0_g173918 = lerpResult131_g173919;
				float4 temp_output_3_0_g173918 = TVE_GlowParams;
				float4 ifLocalVar18_g173918 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173918 >= 0.5 )
				ifLocalVar18_g173918 = temp_output_17_0_g173918;
				else
				ifLocalVar18_g173918 = temp_output_3_0_g173918;
				float4 lerpResult22_g173918 = lerp( temp_output_3_0_g173918 , temp_output_17_0_g173918 , temp_output_19_0_g173918);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173918 = lerpResult22_g173918;
				#else
				float4 staticSwitch24_g173918 = ifLocalVar18_g173918;
				#endif
				half4 Glow_Params248_g173897 = staticSwitch24_g173918;
				float4 In_GlowParams204_g173897 = Glow_Params248_g173897;
				float temp_output_132_0_g173961 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g173963 = TVE_AtmoLayers[(int)temp_output_132_0_g173961];
				float3 lerpResult104_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalAtmoPivotValue);
				half3 Input_Position180_g173964 = lerpResult104_g173897;
				float2 temp_output_75_0_g173964 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_82_0_g173964 = temp_output_132_0_g173961;
				float2 temp_output_119_0_g173964 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_7_0_g173969 = 1.0;
				float temp_output_10_0_g173969 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173969 );
				float4 lerpResult131_g173964 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173964,temp_output_82_0_g173964), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173964,temp_output_82_0_g173964), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173964 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173969 ) / temp_output_10_0_g173969 ) ));
				float4 temp_output_17_0_g173963 = lerpResult131_g173964;
				float4 temp_output_3_0_g173963 = TVE_AtmoParams;
				float4 ifLocalVar18_g173963 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173963 >= 0.5 )
				ifLocalVar18_g173963 = temp_output_17_0_g173963;
				else
				ifLocalVar18_g173963 = temp_output_3_0_g173963;
				float4 lerpResult22_g173963 = lerp( temp_output_3_0_g173963 , temp_output_17_0_g173963 , temp_output_19_0_g173963);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173963 = lerpResult22_g173963;
				#else
				float4 staticSwitch24_g173963 = ifLocalVar18_g173963;
				#endif
				half4 Atmo_Params80_g173897 = staticSwitch24_g173963;
				float4 In_AtmoParams204_g173897 = Atmo_Params80_g173897;
				float temp_output_132_0_g173970 = _GlobalFadeLayerValue;
				float temp_output_19_0_g173972 = TVE_FadeLayers[(int)temp_output_132_0_g173970];
				float3 lerpResult382_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFadePivotValue);
				half3 Input_Position180_g173973 = lerpResult382_g173897;
				float2 temp_output_75_0_g173973 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_82_0_g173973 = temp_output_132_0_g173970;
				float2 temp_output_119_0_g173973 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_7_0_g173978 = 1.0;
				float temp_output_10_0_g173978 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173978 );
				float4 lerpResult131_g173973 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173973,temp_output_82_0_g173973), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173973,temp_output_82_0_g173973), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173973 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173978 ) / temp_output_10_0_g173978 ) ));
				float4 temp_output_17_0_g173972 = lerpResult131_g173973;
				float4 temp_output_3_0_g173972 = TVE_FadeParams;
				float4 ifLocalVar18_g173972 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173972 >= 0.5 )
				ifLocalVar18_g173972 = temp_output_17_0_g173972;
				else
				ifLocalVar18_g173972 = temp_output_3_0_g173972;
				float4 lerpResult22_g173972 = lerp( temp_output_3_0_g173972 , temp_output_17_0_g173972 , temp_output_19_0_g173972);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173972 = lerpResult22_g173972;
				#else
				float4 staticSwitch24_g173972 = ifLocalVar18_g173972;
				#endif
				half4 Fade_Params387_g173897 = staticSwitch24_g173972;
				float4 In_FadeParams204_g173897 = Fade_Params387_g173897;
				float temp_output_130_0_g173952 = _GlobalFormLayerValue;
				float temp_output_19_0_g173954 = TVE_FormLayers[(int)temp_output_130_0_g173952];
				float3 lerpResult168_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFormPivotValue);
				half3 Input_Position180_g173955 = lerpResult168_g173897;
				float2 temp_output_75_0_g173955 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_82_0_g173955 = temp_output_130_0_g173952;
				float2 temp_output_119_0_g173955 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_7_0_g173960 = 1.0;
				float temp_output_10_0_g173960 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173960 );
				float4 lerpResult131_g173955 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173955,temp_output_82_0_g173955), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173955,temp_output_82_0_g173955), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173955 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173960 ) / temp_output_10_0_g173960 ) ));
				float4 temp_output_17_0_g173954 = lerpResult131_g173955;
				float4 temp_output_3_0_g173954 = TVE_FormParams;
				float4 ifLocalVar18_g173954 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173954 >= 0.5 )
				ifLocalVar18_g173954 = temp_output_17_0_g173954;
				else
				ifLocalVar18_g173954 = temp_output_3_0_g173954;
				float4 lerpResult22_g173954 = lerp( temp_output_3_0_g173954 , temp_output_17_0_g173954 , temp_output_19_0_g173954);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173954 = lerpResult22_g173954;
				#else
				float4 staticSwitch24_g173954 = ifLocalVar18_g173954;
				#endif
				half4 Form_Params112_g173897 = staticSwitch24_g173954;
				float4 In_FormParams204_g173897 = Form_Params112_g173897;
				half4 Land_Params375_g173897 = TVE_LandParams;
				float4 In_LandParams204_g173897 = Land_Params375_g173897;
				float temp_output_136_0_g173943 = _GlobalWindLayerValue;
				float temp_output_19_0_g173945 = TVE_WindLayers[(int)temp_output_136_0_g173943];
				half3 Input_Position180_g173946 = Model_PositionWS143_g173897;
				float2 temp_output_75_0_g173946 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_82_0_g173946 = temp_output_136_0_g173943;
				float2 temp_output_119_0_g173946 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_7_0_g173951 = 1.0;
				float temp_output_10_0_g173951 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173951 );
				float4 lerpResult131_g173946 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173946,temp_output_82_0_g173946), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173946,temp_output_82_0_g173946), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173946 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173951 ) / temp_output_10_0_g173951 ) ));
				float4 temp_output_17_0_g173945 = lerpResult131_g173946;
				float4 temp_output_3_0_g173945 = TVE_WindParams;
				float4 ifLocalVar18_g173945 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173945 >= 0.5 )
				ifLocalVar18_g173945 = temp_output_17_0_g173945;
				else
				ifLocalVar18_g173945 = temp_output_3_0_g173945;
				float4 lerpResult22_g173945 = lerp( temp_output_3_0_g173945 , temp_output_17_0_g173945 , temp_output_19_0_g173945);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173945 = lerpResult22_g173945;
				#else
				float4 staticSwitch24_g173945 = ifLocalVar18_g173945;
				#endif
				half4 Wind_Params88_g173897 = staticSwitch24_g173945;
				float4 In_WindParams204_g173897 = Wind_Params88_g173897;
				float temp_output_136_0_g173925 = _GlobalPushLayerValue;
				float temp_output_19_0_g173926 = TVE_PushLayers[(int)temp_output_136_0_g173925];
				half3 Input_Position180_g173927 = Model_PivotWS145_g173897;
				float2 temp_output_75_0_g173927 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_82_0_g173927 = temp_output_136_0_g173925;
				float2 temp_output_119_0_g173927 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_7_0_g173932 = 1.0;
				float temp_output_10_0_g173932 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173932 );
				float4 lerpResult131_g173927 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173927,temp_output_82_0_g173927), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173927,temp_output_82_0_g173927), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173927 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173932 ) / temp_output_10_0_g173932 ) ));
				float4 temp_output_17_0_g173926 = lerpResult131_g173927;
				float4 temp_output_3_0_g173926 = TVE_PushParams;
				float4 ifLocalVar18_g173926 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173926 >= 0.5 )
				ifLocalVar18_g173926 = temp_output_17_0_g173926;
				else
				ifLocalVar18_g173926 = temp_output_3_0_g173926;
				float4 lerpResult22_g173926 = lerp( temp_output_3_0_g173926 , temp_output_17_0_g173926 , temp_output_19_0_g173926);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173926 = lerpResult22_g173926;
				#else
				float4 staticSwitch24_g173926 = ifLocalVar18_g173926;
				#endif
				half4 Push_Params335_g173897 = staticSwitch24_g173926;
				float4 In_PushParams204_g173897 = Push_Params335_g173897;
				Data204_g173897.Dummy = In_Dummy204_g173897;
				Data204_g173897.CoatParams = In_CoatParams204_g173897;
				Data204_g173897.PaintParams = In_PaintParams204_g173897;
				Data204_g173897.GlowParams = In_GlowParams204_g173897;
				Data204_g173897.AtmoParams = In_AtmoParams204_g173897;
				Data204_g173897.FadeParams = In_FadeParams204_g173897;
				Data204_g173897.FormParams= In_FormParams204_g173897;
				Data204_g173897.LandParams = In_LandParams204_g173897;
				Data204_g173897.WindParams = In_WindParams204_g173897;
				Data204_g173897.PushParams = In_PushParams204_g173897;
				TVEGlobalData Data15_g174423 = Data204_g173897;
				float Out_Dummy15_g174423 = 0;
				float4 Out_CoatParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174423 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174423 = float4( 0,0,0,0 );
				Out_Dummy15_g174423 = Data15_g174423.Dummy;
				Out_CoatParams15_g174423 = Data15_g174423.CoatParams;
				Out_PaintParams15_g174423 = Data15_g174423.PaintParams;
				Out_GlowParams15_g174423 = Data15_g174423.GlowParams;
				Out_AtmoParams15_g174423= Data15_g174423.AtmoParams;
				Out_FadeParams15_g174423= Data15_g174423.FadeParams;
				Out_FormParams15_g174423 = Data15_g174423.FormParams;
				Out_LandParams15_g174423 = Data15_g174423.LandParams;
				Out_WindParams15_g174423 = Data15_g174423.WindParams;
				Out_PushParams15_g174423 = Data15_g174423.PushParams;
				half4 Input_FormParams188_g174419 = Out_FormParams15_g174423;
				float lerpResult213_g174419 = lerp( 1.0 , (Input_FormParams188_g174419).w , TVE_IsEnabled);
				#ifdef TVE_SIZEFADE_ELEMENT
				float staticSwitch194_g174419 = lerpResult213_g174419;
				#else
				float staticSwitch194_g174419 = 1.0;
				#endif
				half SizeFade_MaskGlobal192_g174419 = staticSwitch194_g174419;
				float temp_output_189_0_g174419 = ( saturate( ( ( distance( _WorldSpaceCameraPos , Model_PivotWO162_g174419 ) - temp_output_7_0_g174420 ) / ( temp_output_10_0_g174420 + 0.0001 ) ) ) * _SizeFadeScaleValue * SizeFade_MaskGlobal192_g174419 );
				float3 appendResult200_g174419 = (float3(temp_output_189_0_g174419 , temp_output_189_0_g174419 , temp_output_189_0_g174419));
				float3 appendResult201_g174419 = (float3(1.0 , temp_output_189_0_g174419 , 1.0));
				float3 lerpResult202_g174419 = lerp( appendResult200_g174419 , appendResult201_g174419 , _SizeFadeScaleMode);
				float3 lerpResult184_g174419 = lerp( temp_cast_5 , lerpResult202_g174419 , _SizeFadeIntensityValue);
				float3 temp_output_167_0_g174419 = ( lerpResult184_g174419 * Model_PositionOS147_g174419 );
				#ifdef TVE_SIZEFADE
				float3 staticSwitch199_g174419 = temp_output_167_0_g174419;
				#else
				float3 staticSwitch199_g174419 = Model_PositionOS147_g174419;
				#endif
				half3 Final_Position178_g174419 = staticSwitch199_g174419;
				float3 In_PositionOS16_g174422 = Final_Position178_g174419;
				float3 In_PositionWS16_g174422 = Out_PositionWS15_g174421;
				float3 In_PositionWO16_g174422 = Out_PositionWO15_g174421;
				float3 In_PositionRawOS16_g174422 = Out_PositionRawOS15_g174421;
				float3 In_PositionAddOS16_g174422 = Out_PositionAddOS15_g174421;
				float3 temp_output_210_24_g174419 = Out_PivotOS15_g174421;
				float3 In_PivotOS16_g174422 = temp_output_210_24_g174419;
				float3 In_PivotWS16_g174422 = Out_PivotWS15_g174421;
				float3 In_PivotWO16_g174422 = temp_output_210_19_g174419;
				float3 In_NormalOS16_g174422 = Out_NormalOS15_g174421;
				float3 In_NormalWS16_g174422 = Out_NormalWS15_g174421;
				float3 In_NormalRawOS16_g174422 = Out_NormalRawOS15_g174421;
				float3 In_NormalRawWS16_g174422 = Out_NormalRawWS15_g174421;
				float4 In_TangentOS16_g174422 = Out_TangentOS15_g174421;
				float3 In_ViewDirWS16_g174422 = Out_ViewDirWS15_g174421;
				float4 In_VertexData16_g174422 = Out_VertexData15_g174421;
				float4 In_MotionData16_g174422 = Out_MotionData15_g174421;
				float4 In_BoundsData16_g174422 = Out_BoundsData15_g174421;
				float4 In_RotationData16_g174422 = Out_RotationData15_g174421;
				Data16_g174422.Dummy = In_Dummy16_g174422;
				Data16_g174422.PositionOS = In_PositionOS16_g174422;
				Data16_g174422.PositionWS = In_PositionWS16_g174422;
				Data16_g174422.PositionWO = In_PositionWO16_g174422;
				Data16_g174422.PositionRawOS = In_PositionRawOS16_g174422;
				Data16_g174422.PositionAddOS = In_PositionAddOS16_g174422;
				Data16_g174422.PivotOS = In_PivotOS16_g174422;
				Data16_g174422.PivotWS = In_PivotWS16_g174422;
				Data16_g174422.PivotWO = In_PivotWO16_g174422;
				Data16_g174422.NormalOS = In_NormalOS16_g174422;
				Data16_g174422.NormalWS = In_NormalWS16_g174422;
				Data16_g174422.NormalRawOS = In_NormalRawOS16_g174422;
				Data16_g174422.NormalRawWS = In_NormalRawWS16_g174422;
				Data16_g174422.TangentOS = In_TangentOS16_g174422;
				Data16_g174422.ViewDirWS = In_ViewDirWS16_g174422;
				Data16_g174422.VertexData = In_VertexData16_g174422;
				Data16_g174422.MotionData = In_MotionData16_g174422;
				Data16_g174422.BoundsData = In_BoundsData16_g174422;
				Data16_g174422.RotationData = In_RotationData16_g174422;
				TVEModelData Data15_g174573 = Data16_g174422;
				float Out_Dummy15_g174573 = 0;
				float3 Out_PositionOS15_g174573 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174573 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174573 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174573 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174573 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174573 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174573 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174573 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174573 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174573 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174573 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174573 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174573 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174573 = float3( 0,0,0 );
				float4 Out_VertexData15_g174573 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174573 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174573 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174573 = float4( 0,0,0,0 );
				Out_Dummy15_g174573 = Data15_g174573.Dummy;
				Out_PositionOS15_g174573 = Data15_g174573.PositionOS;
				Out_PositionWS15_g174573 = Data15_g174573.PositionWS;
				Out_PositionWO15_g174573 = Data15_g174573.PositionWO;
				Out_PositionRawOS15_g174573 = Data15_g174573.PositionRawOS;
				Out_PositionAddOS15_g174573 = Data15_g174573.PositionAddOS;
				Out_PivotOS15_g174573 = Data15_g174573.PivotOS;
				Out_PivotWS15_g174573 = Data15_g174573.PivotWS;
				Out_PivotWO15_g174573 = Data15_g174573.PivotWO;
				Out_NormalOS15_g174573 = Data15_g174573.NormalOS;
				Out_NormalWS15_g174573 = Data15_g174573.NormalWS;
				Out_NormalRawOS15_g174573 = Data15_g174573.NormalRawOS;
				Out_NormalRawWS15_g174573 = Data15_g174573.NormalRawWS;
				Out_TangentOS15_g174573 = Data15_g174573.TangentOS;
				Out_ViewDirWS15_g174573 = Data15_g174573.ViewDirWS;
				Out_VertexData15_g174573 = Data15_g174573.VertexData;
				Out_MotionData15_g174573 = Data15_g174573.MotionData;
				Out_BoundsData15_g174573 = Data15_g174573.BoundsData;
				Out_RotationData15_g174573 = Data15_g174573.RotationData;
				float3 temp_output_1567_0_g174563 = Out_PositionOS15_g174573;
				float3 In_PositionOS16_g174577 = temp_output_1567_0_g174563;
				float3 temp_output_1567_16_g174563 = Out_PositionWS15_g174573;
				float3 In_PositionWS16_g174577 = temp_output_1567_16_g174563;
				float3 temp_output_1567_17_g174563 = Out_PositionWO15_g174573;
				float3 In_PositionWO16_g174577 = temp_output_1567_17_g174563;
				float3 In_PositionRawOS16_g174577 = Out_PositionRawOS15_g174573;
				float3 temp_cast_39 = (0.0).xxx;
				half Small_Value2180_g174563 = _MotionSmallIntensityValue;
				float4 temp_output_1567_29_g174563 = Out_VertexData15_g174573;
				half4 Model_VertexMasks518_g174563 = temp_output_1567_29_g174563;
				float4 break1689_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174575 = _motion_small_vert_mode;
				float temp_output_30_0_g174575 = ( break1689_g174563.x * break33_g174575.x );
				float temp_output_29_0_g174575 = ( break1689_g174563.y * break33_g174575.y );
				float temp_output_31_0_g174575 = ( break1689_g174563.z * break33_g174575.z );
				float temp_output_28_0_g174575 = ( temp_output_30_0_g174575 + temp_output_29_0_g174575 + temp_output_31_0_g174575 + ( break1689_g174563.w * break33_g174575.w ) );
				float temp_output_1727_0_g174563 = temp_output_28_0_g174575;
				float4 temp_output_1567_30_g174563 = Out_BoundsData15_g174573;
				half4 Model_BoundsData1322_g174563 = temp_output_1567_30_g174563;
				float4 break33_g174578 = _motion_small_proc_mode;
				float temp_output_30_0_g174578 = ( (Model_BoundsData1322_g174563).z * break33_g174578.x );
				float temp_output_29_0_g174578 = ( (Model_BoundsData1322_g174563).w * break33_g174578.y );
				float temp_output_1734_0_g174563 = ( temp_output_30_0_g174578 + temp_output_29_0_g174578 );
				float lerpResult1906_g174563 = lerp( temp_output_1727_0_g174563 , temp_output_1734_0_g174563 , _motion_small_mask_mode);
				float enc1805_g174563 = v.ase_texcoord.z;
				float2 localDecodeFloatToVector21805_g174563 = DecodeFloatToVector2( enc1805_g174563 );
				float2 break1804_g174563 = localDecodeFloatToVector21805_g174563;
				half Small_Mask_Legacy1806_g174563 = break1804_g174563.x;
				#ifdef TVE_LEGACY
				float staticSwitch1800_g174563 = Small_Mask_Legacy1806_g174563;
				#else
				float staticSwitch1800_g174563 = lerpResult1906_g174563;
				#endif
				float clampResult17_g174580 = clamp( staticSwitch1800_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174581 = _MotionSmallMaskRemap.x;
				float temp_output_10_0_g174581 = ( _MotionSmallMaskRemap.y - temp_output_7_0_g174581 );
				float temp_output_6_0_g174599 = saturate( ( ( clampResult17_g174580 - temp_output_7_0_g174581 ) / ( temp_output_10_0_g174581 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174599 = ( temp_output_6_0_g174599 + ( _MotionSmallMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174599 = temp_output_6_0_g174599;
				#endif
				half Small_Mask640_g174563 = staticSwitch14_g174599;
				half3 Model_PositionOS147_g174563 = temp_output_1567_0_g174563;
				float3 normalizeResult1832_g174563 = normalize( Model_PositionOS147_g174563 );
				half3 Model_PositionWO162_g174563 = temp_output_1567_17_g174563;
				float3 temp_output_1567_19_g174563 = Out_PivotWO15_g174573;
				half3 Model_PivotWO402_g174563 = temp_output_1567_19_g174563;
				float3 lerpResult829_g174563 = lerp( Model_PositionWO162_g174563 , Model_PivotWO402_g174563 , _MotionBasePivotValue);
				float4 temp_output_1567_27_g174563 = Out_MotionData15_g174573;
				half4 Model_MotionMasks489_g174563 = temp_output_1567_27_g174563;
				half3 Base_Position1394_g174563 = ( lerpResult829_g174563 + ( (Model_MotionMasks489_g174563).z * _MotionBasePhaseValue ) );
				half3 Input_PositionWO419_g174606 = Base_Position1394_g174563;
				half Flow_TilllingRT1397_g174563 = _MotionTillingValue;
				half Input_MotionTillingRT670_g174606 = ( Flow_TilllingRT1397_g174563 + 0.2 );
				half2 Noise_CoordRT668_g174606 = ( -(Input_PositionWO419_g174606).xz * Input_MotionTillingRT670_g174606 * 0.005 );
				half4 Noise_ParamsRT535_g174606 = SAMPLE_TEXTURE2D_LOD( _MotionNoiseTexRT, sampler_Linear_Repeat, Noise_CoordRT668_g174606, 0.0 );
				half Flow_Value1855_g174563 = _MotionIntensityValue;
				half Input_MotionValue629_g174606 = Flow_Value1855_g174563;
				float2 lerpResult709_g174606 = lerp( float2( 0.5,0.5 ) , (Noise_ParamsRT535_g174606).rg , Input_MotionValue629_g174606);
				float3 appendResult712_g174606 = (float3(lerpResult709_g174606 , ( (Noise_ParamsRT535_g174606).b * Input_MotionValue629_g174606 )));
				float4 lerpResult627_g174606 = lerp( half4(0,1,1,0) , TVE_MotionParams , TVE_IsEnabled);
				half2 Global_WindDirection593_g174606 = (lerpResult627_g174606).xy;
				half Input_MotionTilling321_g174606 = ( _MotionBaseTillingValue + 0.2 );
				half2 Noise_Coord515_g174606 = ( -(Input_PositionWO419_g174606).xz * Input_MotionTilling321_g174606 * 0.005 );
				float2 temp_output_3_0_g174607 = Noise_Coord515_g174606;
				float2 temp_output_21_0_g174607 = (Global_WindDirection593_g174606*2.0 + -1.0);
				float lerpResult128_g174612 = lerp( _Time.y , ( ( _Time.y * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				half Input_MotionSpeed62_g174606 = _MotionBaseSpeedValue;
				half Noise_Speed516_g174606 = ( ( lerpResult128_g174612 * Input_MotionSpeed62_g174606 ) * 0.02 );
				float temp_output_15_0_g174607 = Noise_Speed516_g174606;
				float temp_output_23_0_g174607 = frac( temp_output_15_0_g174607 );
				float4 lerpResult39_g174607 = lerp( SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174607 + ( temp_output_21_0_g174607 * temp_output_23_0_g174607 ) ), 0.0 ) , SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174607 + ( temp_output_21_0_g174607 * frac( ( temp_output_15_0_g174607 + 0.5 ) ) ) ), 0.0 ) , ( abs( ( temp_output_23_0_g174607 - 0.5 ) ) / 0.5 ));
				half4 Noise_Params685_g174606 = lerpResult39_g174607;
				half Input_MotionNoise552_g174606 = _MotionBaseNoiseValue;
				half Global_WindIntensity576_g174606 = (lerpResult627_g174606).z;
				half Motion_Intensity720_g174606 = ( Global_WindIntensity576_g174606 * Input_MotionValue629_g174606 );
				float lerpResult701_g174606 = lerp( 1.0 , Input_MotionNoise552_g174606 , Motion_Intensity720_g174606);
				float2 lerpResult646_g174606 = lerp( Global_WindDirection593_g174606 , (Noise_Params685_g174606).rg , lerpResult701_g174606);
				float2 lerpResult724_g174606 = lerp( float2( 0.5,0.5 ) , lerpResult646_g174606 , Motion_Intensity720_g174606);
				float3 appendResult708_g174606 = (float3(lerpResult724_g174606 , ( (Noise_Params685_g174606).a * Motion_Intensity720_g174606 )));
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch673_g174606 = half3(0.5,0.5,0);
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch673_g174606 = appendResult712_g174606;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch673_g174606 = appendResult708_g174606;
				#else
				float3 staticSwitch673_g174606 = half3(0.5,0.5,0);
				#endif
				half3 Motion_Local694_g174606 = staticSwitch673_g174606;
				float temp_output_136_0_g174613 = _global_wind_layer_value;
				float temp_output_19_0_g174615 = TVE_WindLayers[(int)temp_output_136_0_g174613];
				half3 Input_Position180_g174616 = Input_PositionWO419_g174606;
				float2 temp_output_75_0_g174616 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g174616).xz ) );
				float temp_output_82_0_g174616 = temp_output_136_0_g174613;
				float2 temp_output_119_0_g174616 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g174616).xz ) );
				float temp_output_7_0_g174621 = 1.0;
				float temp_output_10_0_g174621 = ( TVE_RenderNearFadeValue - temp_output_7_0_g174621 );
				float4 lerpResult131_g174616 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g174616,temp_output_82_0_g174616), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g174616,temp_output_82_0_g174616), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g174616 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g174621 ) / temp_output_10_0_g174621 ) ));
				float4 temp_output_17_0_g174615 = lerpResult131_g174616;
				float4 temp_output_3_0_g174615 = TVE_WindParams;
				float4 ifLocalVar18_g174615 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g174615 >= 0.5 )
				ifLocalVar18_g174615 = temp_output_17_0_g174615;
				else
				ifLocalVar18_g174615 = temp_output_3_0_g174615;
				float4 lerpResult22_g174615 = lerp( temp_output_3_0_g174615 , temp_output_17_0_g174615 , temp_output_19_0_g174615);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g174615 = lerpResult22_g174615;
				#else
				float4 staticSwitch24_g174615 = ifLocalVar18_g174615;
				#endif
				float4 temp_output_610_0_g174606 = staticSwitch24_g174615;
				float2 lerpResult699_g174606 = lerp( float2( 0.5,0.5 ) , (temp_output_610_0_g174606).rg , Input_MotionValue629_g174606);
				float3 appendResult643_g174606 = (float3(lerpResult699_g174606 , ( (temp_output_610_0_g174606).b * Input_MotionValue629_g174606 )));
				float3 lerpResult623_g174606 = lerp( Motion_Local694_g174606 , appendResult643_g174606 , (temp_output_610_0_g174606).a);
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch693_g174606 = appendResult643_g174606;
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch693_g174606 = lerpResult623_g174606;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch693_g174606 = lerpResult623_g174606;
				#else
				float3 staticSwitch693_g174606 = appendResult643_g174606;
				#endif
				#ifdef TVE_MOTION_WIND_ELEMENT
				float3 staticSwitch612_g174606 = staticSwitch693_g174606;
				#else
				float3 staticSwitch612_g174606 = Motion_Local694_g174606;
				#endif
				float3 temp_output_2275_567_g174563 = staticSwitch612_g174606;
				float2 break83_g174595 = ((temp_output_2275_567_g174563).xy*2.0 + -1.0);
				float3 appendResult79_g174595 = (float3(break83_g174595.x , 0.0 , break83_g174595.y));
				float3 ase_parentObjectScale = ( 1.0 / float3( length( unity_WorldToObject[ 0 ].xyz ), length( unity_WorldToObject[ 1 ].xyz ), length( unity_WorldToObject[ 2 ].xyz ) ) );
				half2 Base_Direction893_g174563 = (( mul( unity_WorldToObject, float4( appendResult79_g174595 , 0.0 ) ).xyz * ase_parentObjectScale )).xz;
				float3 lerpResult1411_g174563 = lerp( Model_PositionWO162_g174563 , Model_PivotWO402_g174563 , _MotionSmallPivotValue);
				half3 Small_Position1421_g174563 = ( lerpResult1411_g174563 + ( (Model_MotionMasks489_g174563).z * _MotionSmallPhaseValue ) );
				half3 Input_PositionWO419_g174623 = Small_Position1421_g174563;
				half Input_MotionTillingRT670_g174623 = ( Flow_TilllingRT1397_g174563 + 0.2 );
				half2 Noise_CoordRT668_g174623 = ( -(Input_PositionWO419_g174623).xz * Input_MotionTillingRT670_g174623 * 0.005 );
				half4 Noise_ParamsRT535_g174623 = SAMPLE_TEXTURE2D_LOD( _MotionNoiseTexRT, sampler_Linear_Repeat, Noise_CoordRT668_g174623, 0.0 );
				half Input_MotionValue629_g174623 = Flow_Value1855_g174563;
				float2 lerpResult709_g174623 = lerp( float2( 0.5,0.5 ) , (Noise_ParamsRT535_g174623).rg , Input_MotionValue629_g174623);
				float3 appendResult712_g174623 = (float3(lerpResult709_g174623 , ( (Noise_ParamsRT535_g174623).b * Input_MotionValue629_g174623 )));
				float4 lerpResult627_g174623 = lerp( half4(0,1,1,0) , TVE_MotionParams , TVE_IsEnabled);
				half2 Global_WindDirection593_g174623 = (lerpResult627_g174623).xy;
				half Input_MotionTilling321_g174623 = ( _MotionSmallTillingValue + 0.2 );
				half2 Noise_Coord515_g174623 = ( -(Input_PositionWO419_g174623).xz * Input_MotionTilling321_g174623 * 0.005 );
				float2 temp_output_3_0_g174624 = Noise_Coord515_g174623;
				float2 temp_output_21_0_g174624 = (Global_WindDirection593_g174623*2.0 + -1.0);
				float lerpResult128_g174629 = lerp( _Time.y , ( ( _Time.y * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				half Input_MotionSpeed62_g174623 = _MotionSmallSpeedValue;
				half Noise_Speed516_g174623 = ( ( lerpResult128_g174629 * Input_MotionSpeed62_g174623 ) * 0.02 );
				float temp_output_15_0_g174624 = Noise_Speed516_g174623;
				float temp_output_23_0_g174624 = frac( temp_output_15_0_g174624 );
				float4 lerpResult39_g174624 = lerp( SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174624 + ( temp_output_21_0_g174624 * temp_output_23_0_g174624 ) ), 0.0 ) , SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( temp_output_3_0_g174624 + ( temp_output_21_0_g174624 * frac( ( temp_output_15_0_g174624 + 0.5 ) ) ) ), 0.0 ) , ( abs( ( temp_output_23_0_g174624 - 0.5 ) ) / 0.5 ));
				half4 Noise_Params685_g174623 = lerpResult39_g174624;
				half Input_MotionNoise552_g174623 = _MotionSmallNoiseValue;
				half Global_WindIntensity576_g174623 = (lerpResult627_g174623).z;
				half Motion_Intensity720_g174623 = ( Global_WindIntensity576_g174623 * Input_MotionValue629_g174623 );
				float lerpResult701_g174623 = lerp( 1.0 , Input_MotionNoise552_g174623 , Motion_Intensity720_g174623);
				float2 lerpResult646_g174623 = lerp( Global_WindDirection593_g174623 , (Noise_Params685_g174623).rg , lerpResult701_g174623);
				float2 lerpResult724_g174623 = lerp( float2( 0.5,0.5 ) , lerpResult646_g174623 , Motion_Intensity720_g174623);
				float3 appendResult708_g174623 = (float3(lerpResult724_g174623 , ( (Noise_Params685_g174623).a * Motion_Intensity720_g174623 )));
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch673_g174623 = half3(0.5,0.5,0);
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch673_g174623 = appendResult712_g174623;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch673_g174623 = appendResult708_g174623;
				#else
				float3 staticSwitch673_g174623 = half3(0.5,0.5,0);
				#endif
				half3 Motion_Local694_g174623 = staticSwitch673_g174623;
				float temp_output_136_0_g174630 = _global_wind_layer_value;
				float temp_output_19_0_g174632 = TVE_WindLayers[(int)temp_output_136_0_g174630];
				half3 Input_Position180_g174633 = Input_PositionWO419_g174623;
				float2 temp_output_75_0_g174633 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g174633).xz ) );
				float temp_output_82_0_g174633 = temp_output_136_0_g174630;
				float2 temp_output_119_0_g174633 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g174633).xz ) );
				float temp_output_7_0_g174638 = 1.0;
				float temp_output_10_0_g174638 = ( TVE_RenderNearFadeValue - temp_output_7_0_g174638 );
				float4 lerpResult131_g174633 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g174633,temp_output_82_0_g174633), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g174633,temp_output_82_0_g174633), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g174633 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g174638 ) / temp_output_10_0_g174638 ) ));
				float4 temp_output_17_0_g174632 = lerpResult131_g174633;
				float4 temp_output_3_0_g174632 = TVE_WindParams;
				float4 ifLocalVar18_g174632 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g174632 >= 0.5 )
				ifLocalVar18_g174632 = temp_output_17_0_g174632;
				else
				ifLocalVar18_g174632 = temp_output_3_0_g174632;
				float4 lerpResult22_g174632 = lerp( temp_output_3_0_g174632 , temp_output_17_0_g174632 , temp_output_19_0_g174632);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g174632 = lerpResult22_g174632;
				#else
				float4 staticSwitch24_g174632 = ifLocalVar18_g174632;
				#endif
				float4 temp_output_610_0_g174623 = staticSwitch24_g174632;
				float2 lerpResult699_g174623 = lerp( float2( 0.5,0.5 ) , (temp_output_610_0_g174623).rg , Input_MotionValue629_g174623);
				float3 appendResult643_g174623 = (float3(lerpResult699_g174623 , ( (temp_output_610_0_g174623).b * Input_MotionValue629_g174623 )));
				float3 lerpResult623_g174623 = lerp( Motion_Local694_g174623 , appendResult643_g174623 , (temp_output_610_0_g174623).a);
				#if defined( TVE_MOTION_WIND_OFF )
				float3 staticSwitch693_g174623 = appendResult643_g174623;
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float3 staticSwitch693_g174623 = lerpResult623_g174623;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float3 staticSwitch693_g174623 = lerpResult623_g174623;
				#else
				float3 staticSwitch693_g174623 = appendResult643_g174623;
				#endif
				#ifdef TVE_MOTION_WIND_ELEMENT
				float3 staticSwitch612_g174623 = staticSwitch693_g174623;
				#else
				float3 staticSwitch612_g174623 = Motion_Local694_g174623;
				#endif
				float3 temp_output_2276_567_g174563 = staticSwitch612_g174623;
				float2 break83_g174594 = ((temp_output_2276_567_g174563).xy*2.0 + -1.0);
				float3 appendResult79_g174594 = (float3(break83_g174594.x , 0.0 , break83_g174594.y));
				half2 Small_Direction1489_g174563 = (( mul( unity_WorldToObject, float4( appendResult79_g174594 , 0.0 ) ).xyz * ase_parentObjectScale )).xz;
				#ifdef TVE_MOTION_SMALL_SQUASH
				float2 staticSwitch1485_g174563 = Small_Direction1489_g174563;
				#else
				float2 staticSwitch1485_g174563 = Base_Direction893_g174563;
				#endif
				half2 Wave_Direction1486_g174563 = staticSwitch1485_g174563;
				float2 break1828_g174563 = -Wave_Direction1486_g174563;
				float3 appendResult1830_g174563 = (float3(break1828_g174563.x , 0.0 , break1828_g174563.y));
				float dotResult1831_g174563 = dot( normalizeResult1832_g174563 , appendResult1830_g174563 );
				float lerpResult1826_g174563 = lerp( 1.0 , (dotResult1831_g174563*0.5 + 0.5) , _MotionFrontValue);
				half Motion_FrontMask1142_g174563 = lerpResult1826_g174563;
				float2 break1939_g174563 = Small_Direction1489_g174563;
				#if defined( TVE_MOTION_WIND_OFF )
				float staticSwitch734_g174623 = 4.0;
				#elif defined( TVE_MOTION_WIND_OPTIMIZED )
				float staticSwitch734_g174623 = 4.0;
				#elif defined( TVE_MOTION_WIND_ADVANCED )
				float staticSwitch734_g174623 = Input_MotionSpeed62_g174623;
				#else
				float staticSwitch734_g174623 = 4.0;
				#endif
				float mulTime113_g174639 = _Time.y * staticSwitch734_g174623;
				float lerpResult128_g174639 = lerp( mulTime113_g174639 , ( ( mulTime113_g174639 * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				float3 break726_g174623 = Input_PositionWO419_g174623;
				half Small_Vertical2215_g174563 = ( sin( ( lerpResult128_g174639 + ( ( break726_g174623.x + break726_g174623.y + break726_g174623.z ) * 2.0 ) ) ) * 0.1 );
				half Small_Intensity2047_g174563 = length( Small_Direction1489_g174563 );
				float3 appendResult2056_g174563 = (float3(break1939_g174563.x , ( Small_Vertical2215_g174563 * Small_Intensity2047_g174563 ) , break1939_g174563.y));
				float lerpResult2098_g174563 = lerp( 1.0 , ( Small_Intensity2047_g174563 * Small_Intensity2047_g174563 ) , _MotionSmallDelayValue);
				float3 appendResult2101_g174563 = (float3(lerpResult2098_g174563 , 1.0 , lerpResult2098_g174563));
				half3 Small_Squash789_g174563 = ( Small_Value2180_g174563 * Small_Mask640_g174563 * Motion_FrontMask1142_g174563 * appendResult2056_g174563 * appendResult2101_g174563 );
				#ifdef TVE_MOTION_SMALL_SQUASH
				float3 staticSwitch495_g174563 = Small_Squash789_g174563;
				#else
				float3 staticSwitch495_g174563 = temp_cast_39;
				#endif
				float3 temp_cast_50 = (0.0).xxx;
				float4 break1710_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174576 = _motion_tiny_vert_mode;
				float temp_output_30_0_g174576 = ( break1710_g174563.x * break33_g174576.x );
				float temp_output_29_0_g174576 = ( break1710_g174563.y * break33_g174576.y );
				float temp_output_31_0_g174576 = ( break1710_g174563.z * break33_g174576.z );
				float temp_output_28_0_g174576 = ( temp_output_30_0_g174576 + temp_output_29_0_g174576 + temp_output_31_0_g174576 + ( break1710_g174563.w * break33_g174576.w ) );
				float temp_output_1729_0_g174563 = temp_output_28_0_g174576;
				float4 break33_g174579 = _motion_tiny_proc_mode;
				float temp_output_30_0_g174579 = ( (Model_BoundsData1322_g174563).z * break33_g174579.x );
				float temp_output_29_0_g174579 = ( (Model_BoundsData1322_g174563).w * break33_g174579.y );
				float temp_output_1735_0_g174563 = ( temp_output_30_0_g174579 + temp_output_29_0_g174579 );
				float lerpResult1908_g174563 = lerp( temp_output_1729_0_g174563 , temp_output_1735_0_g174563 , _motion_tiny_mask_mode);
				half Tiny_Mask_Legacy1807_g174563 = break1804_g174563.y;
				#ifdef TVE_LEGACY
				float staticSwitch1810_g174563 = Tiny_Mask_Legacy1807_g174563;
				#else
				float staticSwitch1810_g174563 = lerpResult1908_g174563;
				#endif
				float clampResult17_g174582 = clamp( staticSwitch1810_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174583 = _MotionTinyMaskRemap.x;
				float temp_output_10_0_g174583 = ( _MotionTinyMaskRemap.y - temp_output_7_0_g174583 );
				float temp_output_6_0_g174584 = saturate( ( ( clampResult17_g174582 - temp_output_7_0_g174583 ) / ( temp_output_10_0_g174583 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174584 = ( temp_output_6_0_g174584 + ( _MotionTinyMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174584 = temp_output_6_0_g174584;
				#endif
				half Tiny_Mask218_g174563 = staticSwitch14_g174584;
				half3 Input_Position500_g174600 = Model_PositionWO162_g174563;
				half Input_MotionTilling321_g174600 = _MotionTinyTillingValue;
				float lerpResult128_g174604 = lerp( _Time.y , ( ( _Time.y * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
				half Input_MotionSpeed62_g174600 = _MotionTinySpeedValue;
				float3 temp_output_519_0_g174600 = (SAMPLE_TEXTURE2D_LOD( _MotionNoiseTex, sampler_Linear_Repeat, ( ( (Input_Position500_g174600).xz * Input_MotionTilling321_g174600 * 0.03 ) + ( lerpResult128_g174604 * Input_MotionSpeed62_g174600 * 0.01 ) ), 0.0 ).rgb*2.0 + -1.0);
				half3 Tiny_Direction859_g174563 = temp_output_519_0_g174600;
				half3 Model_PositionWS1819_g174563 = temp_output_1567_16_g174563;
				half Motion_FadeMask1820_g174563 = ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS1819_g174563 ) / _MotionDistValue ) ) );
				half Base_Noise1159_g174563 = abs( (temp_output_2275_567_g174563).z );
				half Small_Noise1427_g174563 = (temp_output_2276_567_g174563).z;
				#ifdef TVE_MOTION_SMALL_SQUASH
				float staticSwitch2013_g174563 = Small_Noise1427_g174563;
				#else
				float staticSwitch2013_g174563 = Base_Noise1159_g174563;
				#endif
				float temp_output_136_0_g174564 = _global_push_layer_value;
				float temp_output_19_0_g174565 = TVE_PushLayers[(int)temp_output_136_0_g174564];
				float3 lerpResult1547_g174563 = lerp( Model_PositionWO162_g174563 , Model_PivotWO402_g174563 , _MotionPushPivotValue);
				half3 Push_Position1549_g174563 = ( lerpResult1547_g174563 + ( (Model_MotionMasks489_g174563).z * _MotionPushPhaseValue ) );
				half3 Input_Position180_g174566 = Push_Position1549_g174563;
				float2 temp_output_75_0_g174566 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g174566).xz ) );
				float temp_output_82_0_g174566 = temp_output_136_0_g174564;
				float2 temp_output_119_0_g174566 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g174566).xz ) );
				float temp_output_7_0_g174571 = 1.0;
				float temp_output_10_0_g174571 = ( TVE_RenderNearFadeValue - temp_output_7_0_g174571 );
				float4 lerpResult131_g174566 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g174566,temp_output_82_0_g174566), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g174566,temp_output_82_0_g174566), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g174566 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g174571 ) / temp_output_10_0_g174571 ) ));
				float4 temp_output_17_0_g174565 = lerpResult131_g174566;
				float4 temp_output_3_0_g174565 = TVE_PushParams;
				float4 ifLocalVar18_g174565 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g174565 >= 0.5 )
				ifLocalVar18_g174565 = temp_output_17_0_g174565;
				else
				ifLocalVar18_g174565 = temp_output_3_0_g174565;
				float4 lerpResult22_g174565 = lerp( temp_output_3_0_g174565 , temp_output_17_0_g174565 , temp_output_19_0_g174565);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g174565 = lerpResult22_g174565;
				#else
				float4 staticSwitch24_g174565 = ifLocalVar18_g174565;
				#endif
				half4 Global_PushParams214_g174563 = staticSwitch24_g174565;
				half Push_Noise1977_g174563 = (Global_PushParams214_g174563).b;
				half Push_Value1501_g174563 = _MotionPushIntensityValue;
				half Push_Influence1504_g174563 = saturate( ( (Global_PushParams214_g174563).a * Push_Value1501_g174563 ) );
				float lerpResult2016_g174563 = lerp( staticSwitch2013_g174563 , Push_Noise1977_g174563 , Push_Influence1504_g174563);
				#ifdef TVE_MOTION_PUSH_BENDING
				float staticSwitch2012_g174563 = lerpResult2016_g174563;
				#else
				float staticSwitch2012_g174563 = staticSwitch2013_g174563;
				#endif
				half Wave_Noise1475_g174563 = staticSwitch2012_g174563;
				half3 Tiny_Flutter1451_g174563 = ( _MotionTinyIntensityValue * Tiny_Mask218_g174563 * Tiny_Direction859_g174563 * Motion_FadeMask1820_g174563 * Flow_Value1855_g174563 * ( Wave_Noise1475_g174563 * Wave_Noise1475_g174563 ) );
				#ifdef TVE_MOTION_TINY_FLUTTER
				float3 staticSwitch414_g174563 = Tiny_Flutter1451_g174563;
				#else
				float3 staticSwitch414_g174563 = temp_cast_50;
				#endif
				half3 Final_PositionADD1569_g174563 = ( staticSwitch495_g174563 + staticSwitch414_g174563 );
				float3 In_PositionAddOS16_g174577 = Final_PositionADD1569_g174563;
				float3 temp_output_1567_24_g174563 = Out_PivotOS15_g174573;
				float3 In_PivotOS16_g174577 = temp_output_1567_24_g174563;
				float3 In_PivotWS16_g174577 = Out_PivotWS15_g174573;
				float3 In_PivotWO16_g174577 = temp_output_1567_19_g174563;
				float3 temp_output_1567_20_g174563 = Out_NormalOS15_g174573;
				float3 In_NormalOS16_g174577 = temp_output_1567_20_g174563;
				float3 In_NormalWS16_g174577 = Out_NormalWS15_g174573;
				float3 In_NormalRawOS16_g174577 = Out_NormalRawOS15_g174573;
				float3 In_NormalRawWS16_g174577 = Out_NormalRawWS15_g174573;
				float4 In_TangentOS16_g174577 = Out_TangentOS15_g174573;
				float3 In_ViewDirWS16_g174577 = Out_ViewDirWS15_g174573;
				float4 In_VertexData16_g174577 = temp_output_1567_29_g174563;
				float4 In_MotionData16_g174577 = temp_output_1567_27_g174563;
				float4 In_BoundsData16_g174577 = temp_output_1567_30_g174563;
				float2 temp_cast_54 = (0.0).xx;
				half Base_Value2242_g174563 = _MotionBaseIntensityValue;
				float4 break748_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174587 = _motion_base_vert_mode;
				float temp_output_30_0_g174587 = ( break748_g174563.x * break33_g174587.x );
				float temp_output_29_0_g174587 = ( break748_g174563.y * break33_g174587.y );
				float temp_output_31_0_g174587 = ( break748_g174563.z * break33_g174587.z );
				float temp_output_28_0_g174587 = ( temp_output_30_0_g174587 + temp_output_29_0_g174587 + temp_output_31_0_g174587 + ( break748_g174563.w * break33_g174587.w ) );
				float temp_output_1731_0_g174563 = temp_output_28_0_g174587;
				float4 break33_g174588 = _motion_base_proc_mode;
				float temp_output_30_0_g174588 = ( (Model_BoundsData1322_g174563).z * break33_g174588.x );
				float temp_output_29_0_g174588 = ( (Model_BoundsData1322_g174563).w * break33_g174588.y );
				float temp_output_1733_0_g174563 = ( temp_output_30_0_g174588 + temp_output_29_0_g174588 );
				float lerpResult1904_g174563 = lerp( temp_output_1731_0_g174563 , temp_output_1733_0_g174563 , _motion_base_mask_mode);
				float clampResult17_g174585 = clamp( lerpResult1904_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174586 = _MotionBaseMaskRemap.x;
				float temp_output_10_0_g174586 = ( _MotionBaseMaskRemap.y - temp_output_7_0_g174586 );
				float temp_output_6_0_g174598 = saturate( ( ( clampResult17_g174585 - temp_output_7_0_g174586 ) / ( temp_output_10_0_g174586 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174598 = ( temp_output_6_0_g174598 + ( _MotionBaseMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174598 = temp_output_6_0_g174598;
				#endif
				half Base_Mask217_g174563 = staticSwitch14_g174598;
				half Base_Intensity2041_g174563 = length( Base_Direction893_g174563 );
				float lerpResult2090_g174563 = lerp( 1.0 , ( Base_Intensity2041_g174563 * Base_Intensity2041_g174563 ) , _MotionBaseDelayValue);
				#ifdef TVE_MOTION_BASE_BENDING
				float2 staticSwitch1573_g174563 = ( Base_Value2242_g174563 * Base_Mask217_g174563 * Base_Direction893_g174563 * lerpResult2090_g174563 );
				#else
				float2 staticSwitch1573_g174563 = temp_cast_54;
				#endif
				float4 break1864_g174563 = Model_VertexMasks518_g174563;
				float4 break33_g174591 = _motion_push_vert_mode;
				float temp_output_30_0_g174591 = ( break1864_g174563.x * break33_g174591.x );
				float temp_output_29_0_g174591 = ( break1864_g174563.y * break33_g174591.y );
				float temp_output_31_0_g174591 = ( break1864_g174563.z * break33_g174591.z );
				float temp_output_28_0_g174591 = ( temp_output_30_0_g174591 + temp_output_29_0_g174591 + temp_output_31_0_g174591 + ( break1864_g174563.w * break33_g174591.w ) );
				float temp_output_1867_0_g174563 = temp_output_28_0_g174591;
				float4 break33_g174592 = _motion_push_proc_mode;
				float temp_output_30_0_g174592 = ( (Model_BoundsData1322_g174563).z * break33_g174592.x );
				float temp_output_29_0_g174592 = ( (Model_BoundsData1322_g174563).w * break33_g174592.y );
				float temp_output_1868_0_g174563 = ( temp_output_30_0_g174592 + temp_output_29_0_g174592 );
				float lerpResult1910_g174563 = lerp( temp_output_1867_0_g174563 , temp_output_1868_0_g174563 , _motion_push_mask_mode);
				float clampResult17_g174589 = clamp( lerpResult1910_g174563 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174590 = _MotionPushMaskRemap.x;
				float temp_output_10_0_g174590 = ( _MotionPushMaskRemap.y - temp_output_7_0_g174590 );
				float temp_output_6_0_g174593 = saturate( ( ( clampResult17_g174589 - temp_output_7_0_g174590 ) / ( temp_output_10_0_g174590 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174593 = ( temp_output_6_0_g174593 + ( _MotionPushMaskMode * 0.0 ) );
				#else
				float staticSwitch14_g174593 = temp_output_6_0_g174593;
				#endif
				half Push_Mask1877_g174563 = staticSwitch14_g174593;
				float2 break83_g174596 = ((Global_PushParams214_g174563).rg*2.0 + -1.0);
				float3 appendResult79_g174596 = (float3(break83_g174596.x , 0.0 , break83_g174596.y));
				half2 Push_Direction1972_g174563 = (( mul( unity_WorldToObject, float4( appendResult79_g174596 , 0.0 ) ).xyz * ase_parentObjectScale )).xz;
				float2 lerpResult1496_g174563 = lerp( staticSwitch1573_g174563 , ( Push_Mask1877_g174563 * Push_Value1501_g174563 * Push_Direction1972_g174563 ) , Push_Influence1504_g174563);
				#ifdef TVE_MOTION_PUSH_BENDING
				float2 staticSwitch1506_g174563 = lerpResult1496_g174563;
				#else
				float2 staticSwitch1506_g174563 = staticSwitch1573_g174563;
				#endif
				half2 Base_Bending1440_g174563 = staticSwitch1506_g174563;
				float4 appendResult2023_g174563 = (float4(Base_Bending1440_g174563 , 0.0 , 0.0));
				half4 Final_RotationData1570_g174563 = appendResult2023_g174563;
				float4 In_RotationData16_g174577 = Final_RotationData1570_g174563;
				Data16_g174577.Dummy = In_Dummy16_g174577;
				Data16_g174577.PositionOS = In_PositionOS16_g174577;
				Data16_g174577.PositionWS = In_PositionWS16_g174577;
				Data16_g174577.PositionWO = In_PositionWO16_g174577;
				Data16_g174577.PositionRawOS = In_PositionRawOS16_g174577;
				Data16_g174577.PositionAddOS = In_PositionAddOS16_g174577;
				Data16_g174577.PivotOS = In_PivotOS16_g174577;
				Data16_g174577.PivotWS = In_PivotWS16_g174577;
				Data16_g174577.PivotWO = In_PivotWO16_g174577;
				Data16_g174577.NormalOS = In_NormalOS16_g174577;
				Data16_g174577.NormalWS = In_NormalWS16_g174577;
				Data16_g174577.NormalRawOS = In_NormalRawOS16_g174577;
				Data16_g174577.NormalRawWS = In_NormalRawWS16_g174577;
				Data16_g174577.TangentOS = In_TangentOS16_g174577;
				Data16_g174577.ViewDirWS = In_ViewDirWS16_g174577;
				Data16_g174577.VertexData = In_VertexData16_g174577;
				Data16_g174577.MotionData = In_MotionData16_g174577;
				Data16_g174577.BoundsData = In_BoundsData16_g174577;
				Data16_g174577.RotationData = In_RotationData16_g174577;
				TVEModelData Data15_g174800 = Data16_g174577;
				float Out_Dummy15_g174800 = 0;
				float3 Out_PositionOS15_g174800 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174800 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174800 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174800 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174800 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174800 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174800 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174800 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174800 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174800 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174800 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174800 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174800 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174800 = float3( 0,0,0 );
				float4 Out_VertexData15_g174800 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174800 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174800 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174800 = float4( 0,0,0,0 );
				Out_Dummy15_g174800 = Data15_g174800.Dummy;
				Out_PositionOS15_g174800 = Data15_g174800.PositionOS;
				Out_PositionWS15_g174800 = Data15_g174800.PositionWS;
				Out_PositionWO15_g174800 = Data15_g174800.PositionWO;
				Out_PositionRawOS15_g174800 = Data15_g174800.PositionRawOS;
				Out_PositionAddOS15_g174800 = Data15_g174800.PositionAddOS;
				Out_PivotOS15_g174800 = Data15_g174800.PivotOS;
				Out_PivotWS15_g174800 = Data15_g174800.PivotWS;
				Out_PivotWO15_g174800 = Data15_g174800.PivotWO;
				Out_NormalOS15_g174800 = Data15_g174800.NormalOS;
				Out_NormalWS15_g174800 = Data15_g174800.NormalWS;
				Out_NormalRawOS15_g174800 = Data15_g174800.NormalRawOS;
				Out_NormalRawWS15_g174800 = Data15_g174800.NormalRawWS;
				Out_TangentOS15_g174800 = Data15_g174800.TangentOS;
				Out_ViewDirWS15_g174800 = Data15_g174800.ViewDirWS;
				Out_VertexData15_g174800 = Data15_g174800.VertexData;
				Out_MotionData15_g174800 = Data15_g174800.MotionData;
				Out_BoundsData15_g174800 = Data15_g174800.BoundsData;
				Out_RotationData15_g174800 = Data15_g174800.RotationData;
				float3 In_PositionOS16_g174801 = Out_PositionOS15_g174800;
				float3 In_PositionWS16_g174801 = Out_PositionWS15_g174800;
				float3 In_PositionWO16_g174801 = Out_PositionWO15_g174800;
				float3 In_PositionRawOS16_g174801 = Out_PositionRawOS15_g174800;
				half3 Model_PositionADD147_g174798 = Out_PositionAddOS15_g174800;
				TVEGlobalData Data15_g174799 = Data204_g173897;
				float Out_Dummy15_g174799 = 0;
				float4 Out_CoatParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174799 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174799 = float4( 0,0,0,0 );
				Out_Dummy15_g174799 = Data15_g174799.Dummy;
				Out_CoatParams15_g174799 = Data15_g174799.CoatParams;
				Out_PaintParams15_g174799 = Data15_g174799.PaintParams;
				Out_GlowParams15_g174799 = Data15_g174799.GlowParams;
				Out_AtmoParams15_g174799= Data15_g174799.AtmoParams;
				Out_FadeParams15_g174799= Data15_g174799.FadeParams;
				Out_FormParams15_g174799 = Data15_g174799.FormParams;
				Out_LandParams15_g174799 = Data15_g174799.LandParams;
				Out_WindParams15_g174799 = Data15_g174799.WindParams;
				Out_PushParams15_g174799 = Data15_g174799.PushParams;
				half4 Input_FormParams188_g174798 = Out_FormParams15_g174799;
				float3 temp_output_210_19_g174798 = Out_PivotWO15_g174800;
				half3 Model_PivotWO162_g174798 = temp_output_210_19_g174798;
				float3 ase_objectScale = float3( length( unity_ObjectToWorld[ 0 ].xyz ), length( unity_ObjectToWorld[ 1 ].xyz ), length( unity_ObjectToWorld[ 2 ].xyz ) );
				float3 appendResult233_g174798 = (float3(0.0 , ( ( ( ( (Input_FormParams188_g174798).z - ( (Model_PivotWO162_g174798).y * _BlanketConformOffsetMode ) ) + _BlanketConformOffsetValue ) / ase_objectScale.y ) * ( _BlanketConformValue * TVE_IsEnabled ) ) , 0.0));
				half3 Blanket_Conform238_g174798 = appendResult233_g174798;
				float3 temp_output_249_0_g174798 = ( Model_PositionADD147_g174798 + Blanket_Conform238_g174798 );
				half3 Final_PositionADD178_g174798 = temp_output_249_0_g174798;
				float3 In_PositionAddOS16_g174801 = Final_PositionADD178_g174798;
				float3 In_PivotOS16_g174801 = Out_PivotOS15_g174800;
				float3 In_PivotWS16_g174801 = Out_PivotWS15_g174800;
				float3 In_PivotWO16_g174801 = temp_output_210_19_g174798;
				float3 In_NormalOS16_g174801 = Out_NormalOS15_g174800;
				float3 In_NormalWS16_g174801 = Out_NormalWS15_g174800;
				float3 In_NormalRawOS16_g174801 = Out_NormalRawOS15_g174800;
				float3 In_NormalRawWS16_g174801 = Out_NormalRawWS15_g174800;
				float4 In_TangentOS16_g174801 = Out_TangentOS15_g174800;
				float3 In_ViewDirWS16_g174801 = Out_ViewDirWS15_g174800;
				float4 In_VertexData16_g174801 = Out_VertexData15_g174800;
				float4 In_MotionData16_g174801 = Out_MotionData15_g174800;
				float4 In_BoundsData16_g174801 = Out_BoundsData15_g174800;
				half4 Model_RotationData212_g174798 = Out_RotationData15_g174800;
				float2 break83_g174804 = ((Input_FormParams188_g174798).xy*2.0 + -1.0);
				float3 appendResult79_g174804 = (float3(break83_g174804.x , 0.0 , break83_g174804.y));
				float2 lerpResult227_g174798 = lerp( float2( 0,0 ) , (( mul( unity_WorldToObject, float4( appendResult79_g174804 , 0.0 ) ).xyz * ase_parentObjectScale )).xz , ( _BlanketOrientationValue * TVE_IsEnabled ));
				half2 Blanket_Orientation192_g174798 = lerpResult227_g174798;
				float4 appendResult222_g174798 = (float4(( (Model_RotationData212_g174798).xy + Blanket_Orientation192_g174798 ) , (Model_RotationData212_g174798).zw));
				#ifdef TVE_BLANKET_BENDING
				float4 staticSwitch218_g174798 = appendResult222_g174798;
				#else
				float4 staticSwitch218_g174798 = Model_RotationData212_g174798;
				#endif
				half4 Final_RotationData225_g174798 = staticSwitch218_g174798;
				float4 In_RotationData16_g174801 = Final_RotationData225_g174798;
				Data16_g174801.Dummy = In_Dummy16_g174801;
				Data16_g174801.PositionOS = In_PositionOS16_g174801;
				Data16_g174801.PositionWS = In_PositionWS16_g174801;
				Data16_g174801.PositionWO = In_PositionWO16_g174801;
				Data16_g174801.PositionRawOS = In_PositionRawOS16_g174801;
				Data16_g174801.PositionAddOS = In_PositionAddOS16_g174801;
				Data16_g174801.PivotOS = In_PivotOS16_g174801;
				Data16_g174801.PivotWS = In_PivotWS16_g174801;
				Data16_g174801.PivotWO = In_PivotWO16_g174801;
				Data16_g174801.NormalOS = In_NormalOS16_g174801;
				Data16_g174801.NormalWS = In_NormalWS16_g174801;
				Data16_g174801.NormalRawOS = In_NormalRawOS16_g174801;
				Data16_g174801.NormalRawWS = In_NormalRawWS16_g174801;
				Data16_g174801.TangentOS = In_TangentOS16_g174801;
				Data16_g174801.ViewDirWS = In_ViewDirWS16_g174801;
				Data16_g174801.VertexData = In_VertexData16_g174801;
				Data16_g174801.MotionData = In_MotionData16_g174801;
				Data16_g174801.BoundsData = In_BoundsData16_g174801;
				Data16_g174801.RotationData = In_RotationData16_g174801;
				TVEModelData Data15_g174819 = Data16_g174801;
				float Out_Dummy15_g174819 = 0;
				float3 Out_PositionOS15_g174819 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174819 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174819 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174819 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174819 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174819 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174819 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174819 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174819 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174819 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174819 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174819 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174819 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174819 = float3( 0,0,0 );
				float4 Out_VertexData15_g174819 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174819 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174819 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174819 = float4( 0,0,0,0 );
				Out_Dummy15_g174819 = Data15_g174819.Dummy;
				Out_PositionOS15_g174819 = Data15_g174819.PositionOS;
				Out_PositionWS15_g174819 = Data15_g174819.PositionWS;
				Out_PositionWO15_g174819 = Data15_g174819.PositionWO;
				Out_PositionRawOS15_g174819 = Data15_g174819.PositionRawOS;
				Out_PositionAddOS15_g174819 = Data15_g174819.PositionAddOS;
				Out_PivotOS15_g174819 = Data15_g174819.PivotOS;
				Out_PivotWS15_g174819 = Data15_g174819.PivotWS;
				Out_PivotWO15_g174819 = Data15_g174819.PivotWO;
				Out_NormalOS15_g174819 = Data15_g174819.NormalOS;
				Out_NormalWS15_g174819 = Data15_g174819.NormalWS;
				Out_NormalRawOS15_g174819 = Data15_g174819.NormalRawOS;
				Out_NormalRawWS15_g174819 = Data15_g174819.NormalRawWS;
				Out_TangentOS15_g174819 = Data15_g174819.TangentOS;
				Out_ViewDirWS15_g174819 = Data15_g174819.ViewDirWS;
				Out_VertexData15_g174819 = Data15_g174819.VertexData;
				Out_MotionData15_g174819 = Data15_g174819.MotionData;
				Out_BoundsData15_g174819 = Data15_g174819.BoundsData;
				Out_RotationData15_g174819 = Data15_g174819.RotationData;
				half3 Model_PositionOS147_g174818 = Out_PositionOS15_g174819;
				half3 Input_False58_g174821 = Model_PositionOS147_g174818;
				half3 VertexPos40_g174822 = Model_PositionOS147_g174818;
				half3 VertexPos40_g174823 = VertexPos40_g174822;
				float3 appendResult74_g174823 = (float3(VertexPos40_g174823.x , 0.0 , 0.0));
				half3 VertexPosRotationAxis50_g174823 = appendResult74_g174823;
				float3 break84_g174823 = VertexPos40_g174823;
				float3 appendResult81_g174823 = (float3(0.0 , break84_g174823.y , break84_g174823.z));
				half3 VertexPosOtherAxis82_g174823 = appendResult81_g174823;
				float4 temp_output_1567_33_g174818 = Out_RotationData15_g174819;
				half4 Model_VertexBend1569_g174818 = temp_output_1567_33_g174818;
				half2 Angle44_g174822 = (Model_VertexBend1569_g174818).xy;
				half Angle44_g174823 = (Angle44_g174822).y;
				half3 VertexPos40_g174824 = ( VertexPosRotationAxis50_g174823 + ( VertexPosOtherAxis82_g174823 * cos( Angle44_g174823 ) ) + ( cross( float3(1,0,0) , VertexPosOtherAxis82_g174823 ) * sin( Angle44_g174823 ) ) );
				float3 appendResult74_g174824 = (float3(0.0 , 0.0 , VertexPos40_g174824.z));
				half3 VertexPosRotationAxis50_g174824 = appendResult74_g174824;
				float3 break84_g174824 = VertexPos40_g174824;
				float3 appendResult81_g174824 = (float3(break84_g174824.x , break84_g174824.y , 0.0));
				half3 VertexPosOtherAxis82_g174824 = appendResult81_g174824;
				half Angle44_g174824 = -(Angle44_g174822).x;
				half3 Input_True57_g174821 = ( VertexPosRotationAxis50_g174824 + ( VertexPosOtherAxis82_g174824 * cos( Angle44_g174824 ) ) + ( cross( float3(0,0,1) , VertexPosOtherAxis82_g174824 ) * sin( Angle44_g174824 ) ) );
				#ifdef TVE_MOTION_BASE_BENDING
				float3 staticSwitch65_g174821 = Input_True57_g174821;
				#else
				float3 staticSwitch65_g174821 = Input_False58_g174821;
				#endif
				#ifdef TVE_MOTION_PUSH_BENDING
				float3 staticSwitch67_g174821 = Input_True57_g174821;
				#else
				float3 staticSwitch67_g174821 = staticSwitch65_g174821;
				#endif
				#ifdef TVE_BLANKET_BENDING
				float3 staticSwitch69_g174821 = Input_True57_g174821;
				#else
				float3 staticSwitch69_g174821 = staticSwitch67_g174821;
				#endif
				float3 temp_output_1578_0_g174818 = staticSwitch69_g174821;
				float3 temp_output_1567_31_g174818 = Out_PositionAddOS15_g174819;
				half3 Model_PositionADD1568_g174818 = temp_output_1567_31_g174818;
				half3 Final_PositionOS178_g174818 = ( temp_output_1578_0_g174818 + Model_PositionADD1568_g174818 );
				float3 In_PositionOS16_g174820 = Final_PositionOS178_g174818;
				float3 In_PositionWS16_g174820 = Out_PositionWS15_g174819;
				float3 In_PositionWO16_g174820 = Out_PositionWO15_g174819;
				float3 In_PositionRawOS16_g174820 = Out_PositionRawOS15_g174819;
				float3 In_PositionAddOS16_g174820 = temp_output_1567_31_g174818;
				float3 In_PivotOS16_g174820 = Out_PivotOS15_g174819;
				float3 In_PivotWS16_g174820 = Out_PivotWS15_g174819;
				float3 In_PivotWO16_g174820 = Out_PivotWO15_g174819;
				float3 In_NormalOS16_g174820 = Out_NormalOS15_g174819;
				float3 In_NormalWS16_g174820 = Out_NormalWS15_g174819;
				float3 In_NormalRawOS16_g174820 = Out_NormalRawOS15_g174819;
				float3 In_NormalRawWS16_g174820 = Out_NormalRawWS15_g174819;
				float4 In_TangentOS16_g174820 = Out_TangentOS15_g174819;
				float3 In_ViewDirWS16_g174820 = Out_ViewDirWS15_g174819;
				float4 In_VertexData16_g174820 = Out_VertexData15_g174819;
				float4 In_MotionData16_g174820 = Out_MotionData15_g174819;
				float4 In_BoundsData16_g174820 = Out_BoundsData15_g174819;
				float4 In_RotationData16_g174820 = temp_output_1567_33_g174818;
				Data16_g174820.Dummy = In_Dummy16_g174820;
				Data16_g174820.PositionOS = In_PositionOS16_g174820;
				Data16_g174820.PositionWS = In_PositionWS16_g174820;
				Data16_g174820.PositionWO = In_PositionWO16_g174820;
				Data16_g174820.PositionRawOS = In_PositionRawOS16_g174820;
				Data16_g174820.PositionAddOS = In_PositionAddOS16_g174820;
				Data16_g174820.PivotOS = In_PivotOS16_g174820;
				Data16_g174820.PivotWS = In_PivotWS16_g174820;
				Data16_g174820.PivotWO = In_PivotWO16_g174820;
				Data16_g174820.NormalOS = In_NormalOS16_g174820;
				Data16_g174820.NormalWS = In_NormalWS16_g174820;
				Data16_g174820.NormalRawOS = In_NormalRawOS16_g174820;
				Data16_g174820.NormalRawWS = In_NormalRawWS16_g174820;
				Data16_g174820.TangentOS = In_TangentOS16_g174820;
				Data16_g174820.ViewDirWS = In_ViewDirWS16_g174820;
				Data16_g174820.VertexData = In_VertexData16_g174820;
				Data16_g174820.MotionData = In_MotionData16_g174820;
				Data16_g174820.BoundsData = In_BoundsData16_g174820;
				Data16_g174820.RotationData = In_RotationData16_g174820;
				TVEModelData Data15_g174842 = Data16_g174820;
				float Out_Dummy15_g174842 = 0;
				float3 Out_PositionOS15_g174842 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174842 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174842 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174842 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174842 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174842 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174842 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174842 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174842 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174842 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174842 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174842 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174842 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174842 = float3( 0,0,0 );
				float4 Out_VertexData15_g174842 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174842 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174842 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174842 = float4( 0,0,0,0 );
				Out_Dummy15_g174842 = Data15_g174842.Dummy;
				Out_PositionOS15_g174842 = Data15_g174842.PositionOS;
				Out_PositionWS15_g174842 = Data15_g174842.PositionWS;
				Out_PositionWO15_g174842 = Data15_g174842.PositionWO;
				Out_PositionRawOS15_g174842 = Data15_g174842.PositionRawOS;
				Out_PositionAddOS15_g174842 = Data15_g174842.PositionAddOS;
				Out_PivotOS15_g174842 = Data15_g174842.PivotOS;
				Out_PivotWS15_g174842 = Data15_g174842.PivotWS;
				Out_PivotWO15_g174842 = Data15_g174842.PivotWO;
				Out_NormalOS15_g174842 = Data15_g174842.NormalOS;
				Out_NormalWS15_g174842 = Data15_g174842.NormalWS;
				Out_NormalRawOS15_g174842 = Data15_g174842.NormalRawOS;
				Out_NormalRawWS15_g174842 = Data15_g174842.NormalRawWS;
				Out_TangentOS15_g174842 = Data15_g174842.TangentOS;
				Out_ViewDirWS15_g174842 = Data15_g174842.ViewDirWS;
				Out_VertexData15_g174842 = Data15_g174842.VertexData;
				Out_MotionData15_g174842 = Data15_g174842.MotionData;
				Out_BoundsData15_g174842 = Data15_g174842.BoundsData;
				Out_RotationData15_g174842 = Data15_g174842.RotationData;
				float3 In_PositionOS16_g174843 = Out_PositionOS15_g174842;
				float3 In_PositionWS16_g174843 = Out_PositionWS15_g174842;
				float3 temp_output_1567_17_g174841 = Out_PositionWO15_g174842;
				float3 In_PositionWO16_g174843 = temp_output_1567_17_g174841;
				float3 temp_output_1567_26_g174841 = Out_PositionRawOS15_g174842;
				float3 In_PositionRawOS16_g174843 = temp_output_1567_26_g174841;
				float3 In_PositionAddOS16_g174843 = Out_PositionAddOS15_g174842;
				float3 In_PivotOS16_g174843 = Out_PivotOS15_g174842;
				float3 In_PivotWS16_g174843 = Out_PivotWS15_g174842;
				float3 In_PivotWO16_g174843 = Out_PivotWO15_g174842;
				half3 Model_NormalOS1568_g174841 = Out_NormalOS15_g174842;
				float3 lerpResult1589_g174841 = lerp( Model_NormalOS1568_g174841 , half3(0,1,0) , _NormalFlattenValue);
				half3 Model_PositionRAW1592_g174841 = temp_output_1567_26_g174841;
				float3 normalizeResult1594_g174841 = ASESafeNormalize( ( Model_PositionRAW1592_g174841 + _NormalSphereOffsetValue ) );
				float3 lerpResult1585_g174841 = lerp( lerpResult1589_g174841 , normalizeResult1594_g174841 , _NormalSphereValue);
				half3 Input_False58_g174856 = lerpResult1585_g174841;
				half3 VertexPos40_g174845 = lerpResult1585_g174841;
				half3 VertexPos40_g174846 = VertexPos40_g174845;
				float3 appendResult74_g174846 = (float3(VertexPos40_g174846.x , 0.0 , 0.0));
				half3 VertexPosRotationAxis50_g174846 = appendResult74_g174846;
				float3 break84_g174846 = VertexPos40_g174846;
				float3 appendResult81_g174846 = (float3(0.0 , break84_g174846.y , break84_g174846.z));
				half3 VertexPosOtherAxis82_g174846 = appendResult81_g174846;
				float4 temp_output_1567_33_g174841 = Out_RotationData15_g174842;
				half4 Model_RotationData1583_g174841 = temp_output_1567_33_g174841;
				half2 Angle44_g174845 = Model_RotationData1583_g174841.xy;
				half Angle44_g174846 = (Angle44_g174845).y;
				half3 VertexPos40_g174847 = ( VertexPosRotationAxis50_g174846 + ( VertexPosOtherAxis82_g174846 * cos( Angle44_g174846 ) ) + ( cross( float3(1,0,0) , VertexPosOtherAxis82_g174846 ) * sin( Angle44_g174846 ) ) );
				float3 appendResult74_g174847 = (float3(0.0 , 0.0 , VertexPos40_g174847.z));
				half3 VertexPosRotationAxis50_g174847 = appendResult74_g174847;
				float3 break84_g174847 = VertexPos40_g174847;
				float3 appendResult81_g174847 = (float3(break84_g174847.x , break84_g174847.y , 0.0));
				half3 VertexPosOtherAxis82_g174847 = appendResult81_g174847;
				half Angle44_g174847 = -(Angle44_g174845).x;
				float3 lerpResult1591_g174841 = lerp( lerpResult1585_g174841 , ( VertexPosRotationAxis50_g174847 + ( VertexPosOtherAxis82_g174847 * cos( Angle44_g174847 ) ) + ( cross( float3(0,0,1) , VertexPosOtherAxis82_g174847 ) * sin( Angle44_g174847 ) ) ) , _NormalComputeValue);
				half3 Input_True57_g174856 = lerpResult1591_g174841;
				#ifdef TVE_MOTION_BASE_BENDING
				float3 staticSwitch65_g174856 = Input_True57_g174856;
				#else
				float3 staticSwitch65_g174856 = Input_False58_g174856;
				#endif
				#ifdef TVE_MOTION_PUSH_BENDING
				float3 staticSwitch67_g174856 = Input_True57_g174856;
				#else
				float3 staticSwitch67_g174856 = staticSwitch65_g174856;
				#endif
				#ifdef TVE_BLANKET_BENDING
				float3 staticSwitch69_g174856 = Input_True57_g174856;
				#else
				float3 staticSwitch69_g174856 = staticSwitch67_g174856;
				#endif
				#ifdef TVE_NORMAL_COMPUTE
				float3 staticSwitch1595_g174841 = staticSwitch69_g174856;
				#else
				float3 staticSwitch1595_g174841 = lerpResult1585_g174841;
				#endif
				TVEGlobalData Data15_g174844 = Data204_g173897;
				float Out_Dummy15_g174844 = 0;
				float4 Out_CoatParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174844 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174844 = float4( 0,0,0,0 );
				Out_Dummy15_g174844 = Data15_g174844.Dummy;
				Out_CoatParams15_g174844 = Data15_g174844.CoatParams;
				Out_PaintParams15_g174844 = Data15_g174844.PaintParams;
				Out_GlowParams15_g174844 = Data15_g174844.GlowParams;
				Out_AtmoParams15_g174844= Data15_g174844.AtmoParams;
				Out_FadeParams15_g174844= Data15_g174844.FadeParams;
				Out_FormParams15_g174844 = Data15_g174844.FormParams;
				Out_LandParams15_g174844 = Data15_g174844.LandParams;
				Out_WindParams15_g174844 = Data15_g174844.WindParams;
				Out_PushParams15_g174844 = Data15_g174844.PushParams;
				half4 Global_FormParams1633_g174841 = Out_FormParams15_g174844;
				float2 temp_output_1627_0_g174841 = ((Global_FormParams1633_g174841).xy*2.0 + -1.0);
				float2 break1617_g174841 = temp_output_1627_0_g174841;
				float dotResult1619_g174841 = dot( temp_output_1627_0_g174841 , temp_output_1627_0_g174841 );
				float3 appendResult1618_g174841 = (float3(break1617_g174841.x , sqrt( ( 1.0 - saturate( dotResult1619_g174841 ) ) ) , break1617_g174841.y));
				float3 worldToObjDir1623_g174841 = ASESafeNormalize( mul( unity_WorldToObject, float4( appendResult1618_g174841, 0 ) ).xyz );
				half3 Blanket_Normal1630_g174841 = worldToObjDir1623_g174841;
				float3 lerpResult1636_g174841 = lerp( staticSwitch1595_g174841 , Blanket_Normal1630_g174841 , ( _NormalBlanketValue * TVE_IsEnabled ));
				float4 temp_output_1567_29_g174841 = Out_VertexData15_g174842;
				half4 Model_VertexData1608_g174841 = temp_output_1567_29_g174841;
				float4 break1683_g174841 = Model_VertexData1608_g174841;
				float4 break33_g174849 = _normal_vert_mode;
				float temp_output_30_0_g174849 = ( break1683_g174841.x * break33_g174849.x );
				float temp_output_29_0_g174849 = ( break1683_g174841.y * break33_g174849.y );
				float temp_output_31_0_g174849 = ( break1683_g174841.z * break33_g174849.z );
				float temp_output_28_0_g174849 = ( temp_output_30_0_g174849 + temp_output_29_0_g174849 + temp_output_31_0_g174849 + ( break1683_g174841.w * break33_g174849.w ) );
				float clampResult17_g174851 = clamp( temp_output_28_0_g174849 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174850 = _NormalMeshRemap.x;
				float temp_output_10_0_g174850 = ( _NormalMeshRemap.y - temp_output_7_0_g174850 );
				float lerpResult1695_g174841 = lerp( 1.0 , saturate( ( ( clampResult17_g174851 - temp_output_7_0_g174850 ) / ( temp_output_10_0_g174850 + 0.0001 ) ) ) , _NormalMeshValue);
				float temp_output_6_0_g174852 = lerpResult1695_g174841;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174852 = ( temp_output_6_0_g174852 + ( _NormalMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174852 = temp_output_6_0_g174852;
				#endif
				float temp_output_1690_0_g174841 = staticSwitch14_g174852;
				half Normal_MeskMask1691_g174841 = temp_output_1690_0_g174841;
				float3 temp_output_1567_21_g174841 = Out_NormalWS15_g174842;
				half3 Model_NormalWS1639_g174841 = temp_output_1567_21_g174841;
				float clampResult17_g174853 = clamp( (Model_NormalWS1639_g174841).y , 0.0001 , 0.9999 );
				float temp_output_7_0_g174854 = _NormalProjRemap.x;
				float temp_output_10_0_g174854 = ( _NormalProjRemap.y - temp_output_7_0_g174854 );
				float lerpResult1669_g174841 = lerp( 1.0 , saturate( ( ( clampResult17_g174853 - temp_output_7_0_g174854 ) / ( temp_output_10_0_g174854 + 0.0001 ) ) ) , _NormalProjValue);
				half Normal_Proj_Mask1647_g174841 = lerpResult1669_g174841;
				float temp_output_1699_0_g174841 = ( Normal_MeskMask1691_g174841 * Normal_Proj_Mask1647_g174841 );
				half3 Model_PositionWO1640_g174841 = temp_output_1567_17_g174841;
				float temp_output_1704_0_g174841 = saturate( ( ( (Global_FormParams1633_g174841).z - (Model_PositionWO1640_g174841).y ) + _NormalLandOffsetValue ) );
				float lerpResult1707_g174841 = lerp( 1.0 , temp_output_1704_0_g174841 , ( _NormalLandValue * _NormalLandMode ));
				half Normal_Land_Mask_Mul1708_g174841 = lerpResult1707_g174841;
				half Normal_Land_Mask_Add1629_g174841 = ( temp_output_1704_0_g174841 * _NormalLandValue );
				float temp_output_6_0_g174855 = saturate( ( ( temp_output_1699_0_g174841 * Normal_Land_Mask_Mul1708_g174841 ) + Normal_Land_Mask_Add1629_g174841 ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174855 = ( temp_output_6_0_g174855 + ( _NormalBlanketInfo * 0.0 ) );
				#else
				float staticSwitch14_g174855 = temp_output_6_0_g174855;
				#endif
				float3 lerpResult1670_g174841 = lerp( Model_NormalOS1568_g174841 , lerpResult1636_g174841 , staticSwitch14_g174855);
				half3 Final_NormalOS178_g174841 = lerpResult1670_g174841;
				float3 In_NormalOS16_g174843 = Final_NormalOS178_g174841;
				float3 In_NormalWS16_g174843 = temp_output_1567_21_g174841;
				float3 In_NormalRawOS16_g174843 = Out_NormalRawOS15_g174842;
				float3 In_NormalRawWS16_g174843 = Out_NormalRawWS15_g174842;
				float4 In_TangentOS16_g174843 = Out_TangentOS15_g174842;
				float3 In_ViewDirWS16_g174843 = Out_ViewDirWS15_g174842;
				float4 In_VertexData16_g174843 = temp_output_1567_29_g174841;
				float4 In_MotionData16_g174843 = Out_MotionData15_g174842;
				float4 In_BoundsData16_g174843 = Out_BoundsData15_g174842;
				float4 In_RotationData16_g174843 = temp_output_1567_33_g174841;
				Data16_g174843.Dummy = In_Dummy16_g174843;
				Data16_g174843.PositionOS = In_PositionOS16_g174843;
				Data16_g174843.PositionWS = In_PositionWS16_g174843;
				Data16_g174843.PositionWO = In_PositionWO16_g174843;
				Data16_g174843.PositionRawOS = In_PositionRawOS16_g174843;
				Data16_g174843.PositionAddOS = In_PositionAddOS16_g174843;
				Data16_g174843.PivotOS = In_PivotOS16_g174843;
				Data16_g174843.PivotWS = In_PivotWS16_g174843;
				Data16_g174843.PivotWO = In_PivotWO16_g174843;
				Data16_g174843.NormalOS = In_NormalOS16_g174843;
				Data16_g174843.NormalWS = In_NormalWS16_g174843;
				Data16_g174843.NormalRawOS = In_NormalRawOS16_g174843;
				Data16_g174843.NormalRawWS = In_NormalRawWS16_g174843;
				Data16_g174843.TangentOS = In_TangentOS16_g174843;
				Data16_g174843.ViewDirWS = In_ViewDirWS16_g174843;
				Data16_g174843.VertexData = In_VertexData16_g174843;
				Data16_g174843.MotionData = In_MotionData16_g174843;
				Data16_g174843.BoundsData = In_BoundsData16_g174843;
				Data16_g174843.RotationData = In_RotationData16_g174843;
				TVEModelData Data15_g174865 = Data16_g174843;
				float Out_Dummy15_g174865 = 0;
				float3 Out_PositionOS15_g174865 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174865 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174865 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174865 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174865 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174865 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174865 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174865 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174865 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174865 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174865 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174865 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174865 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174865 = float3( 0,0,0 );
				float4 Out_VertexData15_g174865 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174865 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174865 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174865 = float4( 0,0,0,0 );
				Out_Dummy15_g174865 = Data15_g174865.Dummy;
				Out_PositionOS15_g174865 = Data15_g174865.PositionOS;
				Out_PositionWS15_g174865 = Data15_g174865.PositionWS;
				Out_PositionWO15_g174865 = Data15_g174865.PositionWO;
				Out_PositionRawOS15_g174865 = Data15_g174865.PositionRawOS;
				Out_PositionAddOS15_g174865 = Data15_g174865.PositionAddOS;
				Out_PivotOS15_g174865 = Data15_g174865.PivotOS;
				Out_PivotWS15_g174865 = Data15_g174865.PivotWS;
				Out_PivotWO15_g174865 = Data15_g174865.PivotWO;
				Out_NormalOS15_g174865 = Data15_g174865.NormalOS;
				Out_NormalWS15_g174865 = Data15_g174865.NormalWS;
				Out_NormalRawOS15_g174865 = Data15_g174865.NormalRawOS;
				Out_NormalRawWS15_g174865 = Data15_g174865.NormalRawWS;
				Out_TangentOS15_g174865 = Data15_g174865.TangentOS;
				Out_ViewDirWS15_g174865 = Data15_g174865.ViewDirWS;
				Out_VertexData15_g174865 = Data15_g174865.VertexData;
				Out_MotionData15_g174865 = Data15_g174865.MotionData;
				Out_BoundsData15_g174865 = Data15_g174865.BoundsData;
				Out_RotationData15_g174865 = Data15_g174865.RotationData;
				float3 temp_output_217_24_g174864 = Out_PivotOS15_g174865;
				float3 In_PositionOS16_g174866 = ( Out_PositionOS15_g174865 + temp_output_217_24_g174864 );
				float3 In_PositionWS16_g174866 = Out_PositionWS15_g174865;
				float3 In_PositionWO16_g174866 = Out_PositionWO15_g174865;
				float3 In_PositionRawOS16_g174866 = Out_PositionRawOS15_g174865;
				float3 In_PositionAddOS16_g174866 = Out_PositionAddOS15_g174865;
				float3 In_PivotOS16_g174866 = temp_output_217_24_g174864;
				float3 In_PivotWS16_g174866 = Out_PivotWS15_g174865;
				float3 In_PivotWO16_g174866 = Out_PivotWO15_g174865;
				float3 In_NormalOS16_g174866 = Out_NormalOS15_g174865;
				float3 In_NormalWS16_g174866 = Out_NormalWS15_g174865;
				float3 In_NormalRawOS16_g174866 = Out_NormalRawOS15_g174865;
				float3 In_NormalRawWS16_g174866 = Out_NormalRawWS15_g174865;
				float4 In_TangentOS16_g174866 = Out_TangentOS15_g174865;
				float3 In_ViewDirWS16_g174866 = Out_ViewDirWS15_g174865;
				float4 In_VertexData16_g174866 = Out_VertexData15_g174865;
				float4 In_MotionData16_g174866 = Out_MotionData15_g174865;
				float4 In_BoundsData16_g174866 = Out_BoundsData15_g174865;
				float4 In_RotationData16_g174866 = Out_RotationData15_g174865;
				Data16_g174866.Dummy = In_Dummy16_g174866;
				Data16_g174866.PositionOS = In_PositionOS16_g174866;
				Data16_g174866.PositionWS = In_PositionWS16_g174866;
				Data16_g174866.PositionWO = In_PositionWO16_g174866;
				Data16_g174866.PositionRawOS = In_PositionRawOS16_g174866;
				Data16_g174866.PositionAddOS = In_PositionAddOS16_g174866;
				Data16_g174866.PivotOS = In_PivotOS16_g174866;
				Data16_g174866.PivotWS = In_PivotWS16_g174866;
				Data16_g174866.PivotWO = In_PivotWO16_g174866;
				Data16_g174866.NormalOS = In_NormalOS16_g174866;
				Data16_g174866.NormalWS = In_NormalWS16_g174866;
				Data16_g174866.NormalRawOS = In_NormalRawOS16_g174866;
				Data16_g174866.NormalRawWS = In_NormalRawWS16_g174866;
				Data16_g174866.TangentOS = In_TangentOS16_g174866;
				Data16_g174866.ViewDirWS = In_ViewDirWS16_g174866;
				Data16_g174866.VertexData = In_VertexData16_g174866;
				Data16_g174866.MotionData = In_MotionData16_g174866;
				Data16_g174866.BoundsData = In_BoundsData16_g174866;
				Data16_g174866.RotationData = In_RotationData16_g174866;
				TVEModelData Data15_g174871 = Data16_g174866;
				float Out_Dummy15_g174871 = 0;
				float3 Out_PositionOS15_g174871 = float3( 0,0,0 );
				float3 Out_PositionWS15_g174871 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174871 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g174871 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g174871 = float3( 0,0,0 );
				float3 Out_PivotOS15_g174871 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174871 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174871 = float3( 0,0,0 );
				float3 Out_NormalOS15_g174871 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174871 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g174871 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g174871 = float3( 0,0,0 );
				float4 Out_TangentOS15_g174871 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g174871 = float3( 0,0,0 );
				float4 Out_VertexData15_g174871 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g174871 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174871 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g174871 = float4( 0,0,0,0 );
				Out_Dummy15_g174871 = Data15_g174871.Dummy;
				Out_PositionOS15_g174871 = Data15_g174871.PositionOS;
				Out_PositionWS15_g174871 = Data15_g174871.PositionWS;
				Out_PositionWO15_g174871 = Data15_g174871.PositionWO;
				Out_PositionRawOS15_g174871 = Data15_g174871.PositionRawOS;
				Out_PositionAddOS15_g174871 = Data15_g174871.PositionAddOS;
				Out_PivotOS15_g174871 = Data15_g174871.PivotOS;
				Out_PivotWS15_g174871 = Data15_g174871.PivotWS;
				Out_PivotWO15_g174871 = Data15_g174871.PivotWO;
				Out_NormalOS15_g174871 = Data15_g174871.NormalOS;
				Out_NormalWS15_g174871 = Data15_g174871.NormalWS;
				Out_NormalRawOS15_g174871 = Data15_g174871.NormalRawOS;
				Out_NormalRawWS15_g174871 = Data15_g174871.NormalRawWS;
				Out_TangentOS15_g174871 = Data15_g174871.TangentOS;
				Out_ViewDirWS15_g174871 = Data15_g174871.ViewDirWS;
				Out_VertexData15_g174871 = Data15_g174871.VertexData;
				Out_MotionData15_g174871 = Data15_g174871.MotionData;
				Out_BoundsData15_g174871 = Data15_g174871.BoundsData;
				Out_RotationData15_g174871 = Data15_g174871.RotationData;
				float3 temp_output_31_0_g174868 = Out_PositionOS15_g174871;
				
				o.ase_texcoord4.xyz = vertexToFrag73_g164551;
				o.ase_texcoord5.xyz = vertexToFrag76_g164551;
				o.ase_texcoord6.xyz = ase_worldNormal;
				float3 ase_worldTangent = UnityObjectToWorldDir(v.tangent);
				o.ase_texcoord7.xyz = ase_worldTangent;
				float ase_vertexTangentSign = v.tangent.w * ( unity_WorldTransformParams.w >= 0.0 ? 1.0 : -1.0 );
				float3 ase_worldBitangent = cross( ase_worldNormal, ase_worldTangent ) * ase_vertexTangentSign;
				o.ase_texcoord8.xyz = ase_worldBitangent;
				o.ase_texcoord9.xyz = ase_worldPos;
				float temp_output_6_0_g174597 = ( _MotionHighlightValue * Motion_FadeMask1820_g174563 * ( Base_Mask217_g174563 * Base_Mask217_g174563 ) * ( Wave_Noise1475_g174563 * Wave_Noise1475_g174563 * Wave_Noise1475_g174563 * Wave_Noise1475_g174563 ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174597 = ( temp_output_6_0_g174597 + ( _MotionHighlightColor.r * 0.0 ) );
				#else
				float staticSwitch14_g174597 = temp_output_6_0_g174597;
				#endif
				half Wave_Mask1000 = staticSwitch14_g174597;
				float4 appendResult23_g174669 = (float4(0.0 , 0.0 , 0.0 , Wave_Mask1000));
				float4 vertexToFrag24_g174669 = appendResult23_g174669;
				o.ase_texcoord10 = vertexToFrag24_g174669;
				
				o.ase_texcoord2 = v.ase_texcoord;
				o.ase_texcoord3.xy = v.texcoord2.xyzw.xy;
				o.ase_color = v.ase_color;
				
				//setting value to unused interpolator channels and avoid initialization warnings
				o.ase_texcoord3.zw = 0;
				o.ase_texcoord4.w = 0;
				o.ase_texcoord5.w = 0;
				o.ase_texcoord6.w = 0;
				o.ase_texcoord7.w = 0;
				o.ase_texcoord8.w = 0;
				o.ase_texcoord9.w = 0;
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					float3 defaultVertexValue = v.vertex.xyz;
				#else
					float3 defaultVertexValue = float3(0, 0, 0);
				#endif
				float3 vertexValue = ( temp_output_31_0_g174868 + _DisableSRPBatcher );
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					v.vertex.xyz = vertexValue;
				#else
					v.vertex.xyz += vertexValue;
				#endif
				v.vertex.w = 1;
				v.normal = Out_NormalOS15_g174871;
				v.tangent = Out_TangentOS15_g174871;

				TRANSFER_SHADOW_CASTER_NORMALOFFSET(o)
				return o;
			}

			#if defined(ASE_TESSELLATION)
			struct VertexControl
			{
				float4 vertex : INTERNALTESSPOS;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;

				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct TessellationFactors
			{
				float edge[3] : SV_TessFactor;
				float inside : SV_InsideTessFactor;
			};

			VertexControl vert ( appdata v )
			{
				VertexControl o;
				UNITY_SETUP_INSTANCE_ID(v);
				UNITY_TRANSFER_INSTANCE_ID(v, o);
				o.vertex = v.vertex;
				o.tangent = v.tangent;
				o.normal = v.normal;
				o.texcoord1 = v.texcoord1;
				o.texcoord2 = v.texcoord2;
				o.ase_texcoord3 = v.ase_texcoord3;
				o.ase_color = v.ase_color;
				o.ase_texcoord = v.ase_texcoord;
				return o;
			}

			TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
			{
				TessellationFactors o;
				float4 tf = 1;
				float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
				float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
				#if defined(ASE_FIXED_TESSELLATION)
				tf = FixedTess( tessValue );
				#elif defined(ASE_DISTANCE_TESSELLATION)
				tf = DistanceBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, tessValue, tessMin, tessMax, UNITY_MATRIX_M, _WorldSpaceCameraPos );
				#elif defined(ASE_LENGTH_TESSELLATION)
				tf = EdgeLengthBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams );
				#elif defined(ASE_LENGTH_CULL_TESSELLATION)
				tf = EdgeLengthBasedTessCull(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, tessMaxDisp, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams, unity_CameraWorldClipPlanes );
				#endif
				o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
				return o;
			}

			[domain("tri")]
			[partitioning("fractional_odd")]
			[outputtopology("triangle_cw")]
			[patchconstantfunc("TessellationFunction")]
			[outputcontrolpoints(3)]
			VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
			{
			   return patch[id];
			}

			[domain("tri")]
			v2f DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
			{
				appdata o = (appdata) 0;
				o.vertex = patch[0].vertex * bary.x + patch[1].vertex * bary.y + patch[2].vertex * bary.z;
				o.tangent = patch[0].tangent * bary.x + patch[1].tangent * bary.y + patch[2].tangent * bary.z;
				o.normal = patch[0].normal * bary.x + patch[1].normal * bary.y + patch[2].normal * bary.z;
				o.texcoord1 = patch[0].texcoord1 * bary.x + patch[1].texcoord1 * bary.y + patch[2].texcoord1 * bary.z;
				o.texcoord2 = patch[0].texcoord2 * bary.x + patch[1].texcoord2 * bary.y + patch[2].texcoord2 * bary.z;
				o.ase_texcoord3 = patch[0].ase_texcoord3 * bary.x + patch[1].ase_texcoord3 * bary.y + patch[2].ase_texcoord3 * bary.z;
				o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
				o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
				#if defined(ASE_PHONG_TESSELLATION)
				float3 pp[3];
				for (int i = 0; i < 3; ++i)
					pp[i] = o.vertex.xyz - patch[i].normal * (dot(o.vertex.xyz, patch[i].normal) - dot(patch[i].vertex.xyz, patch[i].normal));
				float phongStrength = _TessPhongStrength;
				o.vertex.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.vertex.xyz;
				#endif
				UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
				return VertexFunction(o);
			}
			#else
			v2f vert ( appdata v )
			{
				return VertexFunction( v );
			}
			#endif

			fixed4 frag (v2f IN 
				#ifdef _DEPTHOFFSET_ON
				, out float outputDepth : SV_Depth
				#endif
				#if !defined( CAN_SKIP_VPOS )
				, UNITY_VPOS_TYPE vpos : VPOS
				#endif
				) : SV_Target
			{
				UNITY_SETUP_INSTANCE_ID(IN);

				#ifdef LOD_FADE_CROSSFADE
					UNITY_APPLY_DITHER_CROSSFADE(IN.pos.xy);
				#endif

				#if defined(ASE_LIGHTING_SIMPLE)
					SurfaceOutput o = (SurfaceOutput)0;
				#else
					#if defined(_SPECULAR_SETUP)
						SurfaceOutputStandardSpecular o = (SurfaceOutputStandardSpecular)0;
					#else
						SurfaceOutputStandard o = (SurfaceOutputStandard)0;
					#endif
				#endif

				float localCustomAlphaClip19_g174875 = ( 0.0 );
				float localBreakData4_g174874 = ( 0.0 );
				float localCompData3_g174859 = ( 0.0 );
				TVEVisualData Data3_g174859 = (TVEVisualData)0;
				half Dummy145_g174857 = ( _SubsurfaceCategory + _SubsurfaceEnd + ( _SubsurfaceDirectValue + _SubsurfaceNormalValue + _SubsurfaceAmbientValue + _SubsurfaceShadowValue ) + _SubsurfaceElementMode );
				float In_Dummy3_g174859 = Dummy145_g174857;
				float localBreakData4_g174858 = ( 0.0 );
				float localCompData3_g174836 = ( 0.0 );
				TVEVisualData Data3_g174836 = (TVEVisualData)0;
				half Dummy145_g174826 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveElementMode + _EmissiveFlagMode );
				float In_Dummy3_g174836 = Dummy145_g174826;
				float localBreakData4_g174835 = ( 0.0 );
				float localCompData3_g174808 = ( 0.0 );
				TVEVisualData Data3_g174808 = (TVEVisualData)0;
				half Dummy594_g174805 = ( _DitherCategory + _DitherEnd );
				float In_Dummy3_g174808 = Dummy594_g174805;
				float localBreakData4_g174807 = ( 0.0 );
				float localCompData3_g174786 = ( 0.0 );
				TVEVisualData Data3_g174786 = (TVEVisualData)0;
				half Dummy594_g174785 = ( _CutoutCategory + _CutoutEnd + _CutoutElementMode + _CutoutBakeMode );
				float In_Dummy3_g174786 = Dummy594_g174785;
				float localBreakData4_g174796 = ( 0.0 );
				float localCompData3_g174758 = ( 0.0 );
				TVEVisualData Data3_g174758 = (TVEVisualData)0;
				half Dummy594_g174756 = ( _WetnessCategory + _WetnessEnd + _WetnessElementMode + _WetnessBakeMode );
				float In_Dummy3_g174758 = Dummy594_g174756;
				float localBreakData4_g174757 = ( 0.0 );
				float localCompData3_g174723 = ( 0.0 );
				TVEVisualData Data3_g174723 = (TVEVisualData)0;
				half Dummy594_g174720 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayElementMode + _OverlayBakeMode );
				float In_Dummy3_g174723 = Dummy594_g174720;
				float localBreakData4_g174721 = ( 0.0 );
				float localCompData3_g174719 = ( 0.0 );
				TVEVisualData Data3_g174719 = (TVEVisualData)0;
				float In_Dummy3_g174719 = 0.0;
				float localBreakData4_g174718 = ( 0.0 );
				float localCompData3_g174697 = ( 0.0 );
				TVEVisualData Data3_g174697 = (TVEVisualData)0;
				half Dummy205_g174694 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessElementMode + _DrynessBakeMode );
				float In_Dummy3_g174697 = Dummy205_g174694;
				float localBreakData4_g174696 = ( 0.0 );
				float localCompData3_g174691 = ( 0.0 );
				TVEVisualData Data3_g174691 = (TVEVisualData)0;
				half Dummy205_g174670 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeMode );
				float In_Dummy3_g174691 = Dummy205_g174670;
				float localBreakData4_g174692 = ( 0.0 );
				float localCompData3_g174663 = ( 0.0 );
				TVEVisualData Data3_g174663 = (TVEVisualData)0;
				half Dummy220_g174660 = ( _VariationCategory + _VariationEnd );
				float In_Dummy3_g174663 = Dummy220_g174660;
				float localBreakData4_g174662 = ( 0.0 );
				float localCompData3_g174653 = ( 0.0 );
				TVEVisualData Data3_g174653 = (TVEVisualData)0;
				half Dummy220_g174650 = ( _GradientCategory + _GradientEnd + _GradientBakeMode );
				float In_Dummy3_g174653 = Dummy220_g174650;
				float localBreakData4_g174652 = ( 0.0 );
				float localCompData3_g174642 = ( 0.0 );
				TVEVisualData Data3_g174642 = (TVEVisualData)0;
				half Dummy202_g174640 = ( _OcclusionCategory + _OcclusionEnd + _OcclusionBakeMode );
				float In_Dummy3_g174642 = Dummy202_g174640;
				float localBreakData4_g174641 = ( 0.0 );
				float localCompData3_g174429 = ( 0.0 );
				TVEVisualData Data3_g174429 = (TVEVisualData)0;
				half Dummy944_g174425 = ( ( _TerrainCategory + _TerrainEnd ) + _TerrainFormInfo + _ThirdElementMode );
				float In_Dummy3_g174429 = Dummy944_g174425;
				float localBreakData4_g174428 = ( 0.0 );
				float localCompData3_g174403 = ( 0.0 );
				TVEVisualData Data3_g174403 = (TVEVisualData)0;
				half4 Dummy944_g174386 = ( ( _DetailCategory + _DetailEnd ) + ( _ThirdSampleMode + _ThirdCoordMode + _ThirdCoordValue ) + ( _ThirdMaskSampleMode + _ThirdMaskCoordMode + _ThirdMaskCoordValue ) + _ThirdElementMode + _ThirdBakeMode );
				float In_Dummy3_g174403 = Dummy944_g174386.x;
				float localBreakData4_g174402 = ( 0.0 );
				float localCompData3_g174381 = ( 0.0 );
				TVEVisualData Data3_g174381 = (TVEVisualData)0;
				half4 Dummy946_g174348 = ( ( _LayerCategory + _LayerEnd ) + ( _SecondSampleMode + _SecondCoordMode + _SecondCoordValue ) + ( _SecondMaskSampleMode + _SecondMaskCoordMode + _SecondMaskCoordValue ) + _SecondElementMode + _SecondBakeMode );
				float In_Dummy3_g174381 = Dummy946_g174348.x;
				float localBreakData4_g174360 = ( 0.0 );
				float localCompData3_g174158 = ( 0.0 );
				TVEVisualData Data3_g174158 = (TVEVisualData)0;
				half4 Dummy130_g174142 = ( _MainCategory + _MainEnd + ( _MainSampleMode + _MainCoordMode + _MainCoordValue ) + _MainMultiMaskInfo );
				float In_Dummy3_g174158 = Dummy130_g174142.x;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174151) = _MainAlbedoTex;
				float localFilterTexture19_g174154 = ( 0.0 );
				SamplerState SamplerDefault19_g174154 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174154 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174154 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174154 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174154 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174154 = SamplerDefault19_g174154;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174154 = SamplerDefault19_g174154;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174154 = SamplerPoint19_g174154;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174154 = SamplerLow19_g174154;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174154 = SamplerMedium19_g174154;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174154 = SamplerHigh19_g174154;
				#endif
				SamplerState Sampler276_g174151 = SS19_g174154;
				half4 Local_Coords180_g174142 = _main_coord_value;
				float4 temp_output_37_0_g174151 = Local_Coords180_g174142;
				half4 Coords276_g174151 = temp_output_37_0_g174151;
				half2 TexCoord276_g174151 = IN.ase_texcoord2.xy;
				half4 localSampleMain276_g174151 = SampleMain( Texture276_g174151 , Sampler276_g174151 , Coords276_g174151 , TexCoord276_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174151) = _MainAlbedoTex;
				SamplerState Sampler275_g174151 = SS19_g174154;
				half4 Coords275_g174151 = temp_output_37_0_g174151;
				half2 TexCoord275_g174151 = IN.ase_texcoord3.xy;
				half4 localSampleExtra275_g174151 = SampleExtra( Texture275_g174151 , Sampler275_g174151 , Coords275_g174151 , TexCoord275_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174151) = _MainAlbedoTex;
				SamplerState Sampler238_g174151 = SS19_g174154;
				half4 Coords238_g174151 = temp_output_37_0_g174151;
				TVEModelData Data16_g164566 = (TVEModelData)0;
				float In_Dummy16_g164566 = 0.0;
				float3 vertexToFrag73_g164551 = IN.ase_texcoord4.xyz;
				half3 PositionWS122_g164551 = vertexToFrag73_g164551;
				float3 In_PositionWS16_g164566 = PositionWS122_g164551;
				float3 vertexToFrag76_g164551 = IN.ase_texcoord5.xyz;
				half3 PivotWS121_g164551 = vertexToFrag76_g164551;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g164551 = ( PositionWS122_g164551 - PivotWS121_g164551 );
				#else
				float3 staticSwitch204_g164551 = PositionWS122_g164551;
				#endif
				half3 PositionWO132_g164551 = ( staticSwitch204_g164551 - TVE_WorldOrigin );
				float3 In_PositionWO16_g164566 = PositionWO132_g164551;
				float3 In_PivotWS16_g164566 = PivotWS121_g164551;
				half3 PivotWO133_g164551 = ( PivotWS121_g164551 - TVE_WorldOrigin );
				float3 In_PivotWO16_g164566 = PivotWO133_g164551;
				float3 ase_worldNormal = IN.ase_texcoord6.xyz;
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g164551 = normalizedWorldNormal;
				float3 In_NormalWS16_g164566 = Normal_WS95_g164551;
				float3 normalizeResult296_g164551 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g164551 ) );
				half3 ViewDirWS169_g164551 = normalizeResult296_g164551;
				float3 In_ViewDirWS16_g164566 = ViewDirWS169_g164551;
				half4 VertexMasks171_g164551 = IN.ase_color;
				float4 In_VertexData16_g164566 = VertexMasks171_g164551;
				float4 In_BoundsData16_g164566 = float4( 1,1,1,1 );
				Data16_g164566.Dummy = In_Dummy16_g164566;
				Data16_g164566.PositionWS = In_PositionWS16_g164566;
				Data16_g164566.PositionWO = In_PositionWO16_g164566;
				Data16_g164566.PivotWS = In_PivotWS16_g164566;
				Data16_g164566.PivotWO = In_PivotWO16_g164566;
				Data16_g164566.NormalWS = In_NormalWS16_g164566;
				Data16_g164566.ViewDirWS = In_ViewDirWS16_g164566;
				Data16_g164566.VertexData = In_VertexData16_g164566;
				Data16_g164566.BoundsData = In_BoundsData16_g164566;
				TVEModelData Data15_g174157 = Data16_g164566;
				float Out_Dummy15_g174157 = 0;
				float3 Out_PositionWS15_g174157 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174157 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174157 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174157 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174157 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174157 = float3( 0,0,0 );
				float4 Out_VertexData15_g174157 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174157 = float4( 0,0,0,0 );
				Out_Dummy15_g174157 = Data15_g174157.Dummy;
				Out_PositionWS15_g174157 = Data15_g174157.PositionWS;
				Out_PositionWO15_g174157 = Data15_g174157.PositionWO;
				Out_PivotWS15_g174157 = Data15_g174157.PivotWS;
				Out_PivotWO15_g174157 = Data15_g174157.PivotWO;
				Out_NormalWS15_g174157 = Data15_g174157.NormalWS;
				Out_ViewDirWS15_g174157 = Data15_g174157.ViewDirWS;
				Out_VertexData15_g174157 = Data15_g174157.VertexData;
				Out_BoundsData15_g174157 = Data15_g174157.BoundsData;
				half3 Model_PositionWO222_g174142 = Out_PositionWO15_g174157;
				float3 temp_output_279_0_g174151 = Model_PositionWO222_g174142;
				half3 WorldPosition238_g174151 = temp_output_279_0_g174151;
				half4 localSamplePlanar2D238_g174151 = SamplePlanar2D( Texture238_g174151 , Sampler238_g174151 , Coords238_g174151 , WorldPosition238_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174151) = _MainAlbedoTex;
				SamplerState Sampler246_g174151 = SS19_g174154;
				half4 Coords246_g174151 = temp_output_37_0_g174151;
				half3 WorldPosition246_g174151 = temp_output_279_0_g174151;
				half3 Model_NormalWS226_g174142 = Out_NormalWS15_g174157;
				float3 temp_output_280_0_g174151 = Model_NormalWS226_g174142;
				half3 WorldNormal246_g174151 = temp_output_280_0_g174151;
				half4 localSamplePlanar3D246_g174151 = SamplePlanar3D( Texture246_g174151 , Sampler246_g174151 , Coords246_g174151 , WorldPosition246_g174151 , WorldNormal246_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174151) = _MainAlbedoTex;
				SamplerState Sampler234_g174151 = SS19_g174154;
				float4 Coords234_g174151 = temp_output_37_0_g174151;
				float3 WorldPosition234_g174151 = temp_output_279_0_g174151;
				float4 localSampleStochastic2D234_g174151 = SampleStochastic2D( Texture234_g174151 , Sampler234_g174151 , Coords234_g174151 , WorldPosition234_g174151 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174151) = _MainAlbedoTex;
				SamplerState Sampler263_g174151 = SS19_g174154;
				half4 Coords263_g174151 = temp_output_37_0_g174151;
				half3 WorldPosition263_g174151 = temp_output_279_0_g174151;
				half3 WorldNormal263_g174151 = temp_output_280_0_g174151;
				half4 localSampleStochastic3D263_g174151 = SampleStochastic3D( Texture263_g174151 , Sampler263_g174151 , Coords263_g174151 , WorldPosition263_g174151 , WorldNormal263_g174151 );
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float4 staticSwitch184_g174142 = localSampleMain276_g174151;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float4 staticSwitch184_g174142 = localSampleExtra275_g174151;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float4 staticSwitch184_g174142 = localSamplePlanar2D238_g174151;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float4 staticSwitch184_g174142 = localSamplePlanar3D246_g174151;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch184_g174142 = localSampleStochastic2D234_g174151;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch184_g174142 = localSampleStochastic3D263_g174151;
				#else
				float4 staticSwitch184_g174142 = localSampleMain276_g174151;
				#endif
				half4 Local_AlbedoTex185_g174142 = staticSwitch184_g174142;
				float3 lerpResult53_g174142 = lerp( float3( 1,1,1 ) , (Local_AlbedoTex185_g174142).xyz , _MainAlbedoValue);
				half3 Local_AlbedoRGB107_g174142 = lerpResult53_g174142;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174153) = _MainShaderTex;
				float localFilterTexture30_g174156 = ( 0.0 );
				SamplerState SamplerDefault30_g174156 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174156 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174156 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174156 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174156 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174156 = SamplerDefault30_g174156;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174156 = SamplerDefault30_g174156;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174156 = SamplerPoint30_g174156;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174156 = SamplerLow30_g174156;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174156 = SamplerMedium30_g174156;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174156 = SamplerHigh30_g174156;
				#endif
				SamplerState Sampler276_g174153 = SS30_g174156;
				float4 temp_output_37_0_g174153 = Local_Coords180_g174142;
				half4 Coords276_g174153 = temp_output_37_0_g174153;
				half2 TexCoord276_g174153 = IN.ase_texcoord2.xy;
				half4 localSampleMain276_g174153 = SampleMain( Texture276_g174153 , Sampler276_g174153 , Coords276_g174153 , TexCoord276_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174153) = _MainShaderTex;
				SamplerState Sampler275_g174153 = SS30_g174156;
				half4 Coords275_g174153 = temp_output_37_0_g174153;
				half2 TexCoord275_g174153 = IN.ase_texcoord3.xy;
				half4 localSampleExtra275_g174153 = SampleExtra( Texture275_g174153 , Sampler275_g174153 , Coords275_g174153 , TexCoord275_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174153) = _MainShaderTex;
				SamplerState Sampler238_g174153 = SS30_g174156;
				half4 Coords238_g174153 = temp_output_37_0_g174153;
				float3 temp_output_279_0_g174153 = Model_PositionWO222_g174142;
				half3 WorldPosition238_g174153 = temp_output_279_0_g174153;
				half4 localSamplePlanar2D238_g174153 = SamplePlanar2D( Texture238_g174153 , Sampler238_g174153 , Coords238_g174153 , WorldPosition238_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174153) = _MainShaderTex;
				SamplerState Sampler246_g174153 = SS30_g174156;
				half4 Coords246_g174153 = temp_output_37_0_g174153;
				half3 WorldPosition246_g174153 = temp_output_279_0_g174153;
				float3 temp_output_280_0_g174153 = Model_NormalWS226_g174142;
				half3 WorldNormal246_g174153 = temp_output_280_0_g174153;
				half4 localSamplePlanar3D246_g174153 = SamplePlanar3D( Texture246_g174153 , Sampler246_g174153 , Coords246_g174153 , WorldPosition246_g174153 , WorldNormal246_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174153) = _MainShaderTex;
				SamplerState Sampler234_g174153 = SS30_g174156;
				float4 Coords234_g174153 = temp_output_37_0_g174153;
				float3 WorldPosition234_g174153 = temp_output_279_0_g174153;
				float4 localSampleStochastic2D234_g174153 = SampleStochastic2D( Texture234_g174153 , Sampler234_g174153 , Coords234_g174153 , WorldPosition234_g174153 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174153) = _MainShaderTex;
				SamplerState Sampler263_g174153 = SS30_g174156;
				half4 Coords263_g174153 = temp_output_37_0_g174153;
				half3 WorldPosition263_g174153 = temp_output_279_0_g174153;
				half3 WorldNormal263_g174153 = temp_output_280_0_g174153;
				half4 localSampleStochastic3D263_g174153 = SampleStochastic3D( Texture263_g174153 , Sampler263_g174153 , Coords263_g174153 , WorldPosition263_g174153 , WorldNormal263_g174153 );
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float4 staticSwitch198_g174142 = localSampleMain276_g174153;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float4 staticSwitch198_g174142 = localSampleExtra275_g174153;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float4 staticSwitch198_g174142 = localSamplePlanar2D238_g174153;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float4 staticSwitch198_g174142 = localSamplePlanar3D246_g174153;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch198_g174142 = localSampleStochastic2D234_g174153;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch198_g174142 = localSampleStochastic3D263_g174153;
				#else
				float4 staticSwitch198_g174142 = localSampleMain276_g174153;
				#endif
				half4 Local_MasksTex199_g174142 = staticSwitch198_g174142;
				float lerpResult23_g174142 = lerp( 1.0 , (Local_MasksTex199_g174142).y , _MainOcclusionValue);
				float4 appendResult73_g174142 = (float4(( (Local_MasksTex199_g174142).x * _MainMetallicValue ) , lerpResult23_g174142 , (Local_MasksTex199_g174142).z , ( (Local_MasksTex199_g174142).w * _MainSmoothnessValue )));
				half4 Local_Masks109_g174142 = appendResult73_g174142;
				float clampResult17_g174147 = clamp( (Local_Masks109_g174142).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174148 = _MainMultiRemap.x;
				float temp_output_10_0_g174148 = ( _MainMultiRemap.y - temp_output_7_0_g174148 );
				half Local_MultiMask78_g174142 = saturate( ( ( clampResult17_g174147 - temp_output_7_0_g174148 ) / ( temp_output_10_0_g174148 + 0.0001 ) ) );
				float lerpResult58_g174142 = lerp( 1.0 , Local_MultiMask78_g174142 , _MainColorMode);
				float4 lerpResult62_g174142 = lerp( _MainColorTwo , _MainColor , lerpResult58_g174142);
				half3 Local_ColorRGB93_g174142 = (lerpResult62_g174142).rgb;
				half3 Local_Albedo139_g174142 = ( Local_AlbedoRGB107_g174142 * Local_ColorRGB93_g174142 );
				float3 In_Albedo3_g174158 = Local_Albedo139_g174142;
				float3 In_AlbedoRaw3_g174158 = Local_Albedo139_g174142;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174152) = _MainNormalTex;
				float localFilterTexture29_g174155 = ( 0.0 );
				SamplerState SamplerDefault29_g174155 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174155 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174155 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174155 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174155 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174155 = SamplerDefault29_g174155;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174155 = SamplerDefault29_g174155;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174155 = SamplerPoint29_g174155;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174155 = SamplerLow29_g174155;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174155 = SamplerMedium29_g174155;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174155 = SamplerHigh29_g174155;
				#endif
				SamplerState Sampler276_g174152 = SS29_g174155;
				float4 temp_output_37_0_g174152 = Local_Coords180_g174142;
				half4 Coords276_g174152 = temp_output_37_0_g174152;
				half2 TexCoord276_g174152 = IN.ase_texcoord2.xy;
				half4 localSampleMain276_g174152 = SampleMain( Texture276_g174152 , Sampler276_g174152 , Coords276_g174152 , TexCoord276_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174152) = _MainNormalTex;
				SamplerState Sampler275_g174152 = SS29_g174155;
				half4 Coords275_g174152 = temp_output_37_0_g174152;
				half2 TexCoord275_g174152 = IN.ase_texcoord3.xy;
				half4 localSampleExtra275_g174152 = SampleExtra( Texture275_g174152 , Sampler275_g174152 , Coords275_g174152 , TexCoord275_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174152) = _MainNormalTex;
				SamplerState Sampler238_g174152 = SS29_g174155;
				half4 Coords238_g174152 = temp_output_37_0_g174152;
				float3 temp_output_279_0_g174152 = Model_PositionWO222_g174142;
				half3 WorldPosition238_g174152 = temp_output_279_0_g174152;
				half4 localSamplePlanar2D238_g174152 = SamplePlanar2D( Texture238_g174152 , Sampler238_g174152 , Coords238_g174152 , WorldPosition238_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174152) = _MainNormalTex;
				SamplerState Sampler246_g174152 = SS29_g174155;
				half4 Coords246_g174152 = temp_output_37_0_g174152;
				half3 WorldPosition246_g174152 = temp_output_279_0_g174152;
				float3 temp_output_280_0_g174152 = Model_NormalWS226_g174142;
				half3 WorldNormal246_g174152 = temp_output_280_0_g174152;
				half4 localSamplePlanar3D246_g174152 = SamplePlanar3D( Texture246_g174152 , Sampler246_g174152 , Coords246_g174152 , WorldPosition246_g174152 , WorldNormal246_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174152) = _MainNormalTex;
				SamplerState Sampler234_g174152 = SS29_g174155;
				float4 Coords234_g174152 = temp_output_37_0_g174152;
				float3 WorldPosition234_g174152 = temp_output_279_0_g174152;
				float4 localSampleStochastic2D234_g174152 = SampleStochastic2D( Texture234_g174152 , Sampler234_g174152 , Coords234_g174152 , WorldPosition234_g174152 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174152) = _MainNormalTex;
				SamplerState Sampler263_g174152 = SS29_g174155;
				half4 Coords263_g174152 = temp_output_37_0_g174152;
				half3 WorldPosition263_g174152 = temp_output_279_0_g174152;
				half3 WorldNormal263_g174152 = temp_output_280_0_g174152;
				half4 localSampleStochastic3D263_g174152 = SampleStochastic3D( Texture263_g174152 , Sampler263_g174152 , Coords263_g174152 , WorldPosition263_g174152 , WorldNormal263_g174152 );
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float4 staticSwitch193_g174142 = localSampleMain276_g174152;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float4 staticSwitch193_g174142 = localSampleExtra275_g174152;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float4 staticSwitch193_g174142 = localSamplePlanar2D238_g174152;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float4 staticSwitch193_g174142 = localSamplePlanar3D246_g174152;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch193_g174142 = localSampleStochastic2D234_g174152;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch193_g174142 = localSampleStochastic3D263_g174152;
				#else
				float4 staticSwitch193_g174142 = localSampleMain276_g174152;
				#endif
				half4 Local_NormaTex191_g174142 = staticSwitch193_g174142;
				half4 Normal_Packed45_g174143 = Local_NormaTex191_g174142;
				float2 appendResult58_g174143 = (float2(( (Normal_Packed45_g174143).x * (Normal_Packed45_g174143).w ) , (Normal_Packed45_g174143).y));
				half2 Normal_Default50_g174143 = appendResult58_g174143;
				half2 Normal_ASTC41_g174143 = (Normal_Packed45_g174143).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174143 = Normal_ASTC41_g174143;
				#else
				float2 staticSwitch38_g174143 = Normal_Default50_g174143;
				#endif
				half2 Normal_NO_DTX544_g174143 = (Normal_Packed45_g174143).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174143 = Normal_NO_DTX544_g174143;
				#else
				float2 staticSwitch37_g174143 = staticSwitch38_g174143;
				#endif
				float2 temp_output_26_0_g174142 = ( (staticSwitch37_g174143*2.0 + -1.0) * _MainNormalValue );
				float3 ase_worldTangent = IN.ase_texcoord7.xyz;
				float3 ase_worldBitangent = IN.ase_texcoord8.xyz;
				float3x3 ase_worldToTangent = float3x3(ase_worldTangent,ase_worldBitangent,ase_worldNormal);
				half2 Normal_Planar45_g174144 = temp_output_26_0_g174142;
				float2 break71_g174144 = Normal_Planar45_g174144;
				float3 appendResult72_g174144 = (float3(break71_g174144.x , 0.0 , break71_g174144.y));
				float2 temp_output_205_0_g174142 = (mul( ase_worldToTangent, appendResult72_g174144 )).xy;
				#if defined( TVE_MAIN_SAMPLE_MAIN_UV )
				float2 staticSwitch204_g174142 = temp_output_26_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_EXTRA_UV )
				float2 staticSwitch204_g174142 = temp_output_26_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_2D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_PLANAR_3D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_2D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#elif defined( TVE_MAIN_SAMPLE_STOCHASTIC_3D )
				float2 staticSwitch204_g174142 = temp_output_205_0_g174142;
				#else
				float2 staticSwitch204_g174142 = temp_output_26_0_g174142;
				#endif
				half2 Local_NormalTS108_g174142 = staticSwitch204_g174142;
				float2 In_NormalTS3_g174158 = Local_NormalTS108_g174142;
				float3 appendResult68_g174145 = (float3(Local_NormalTS108_g174142 , 1.0));
				float3 tanToWorld0 = float3( ase_worldTangent.x, ase_worldBitangent.x, ase_worldNormal.x );
				float3 tanToWorld1 = float3( ase_worldTangent.y, ase_worldBitangent.y, ase_worldNormal.y );
				float3 tanToWorld2 = float3( ase_worldTangent.z, ase_worldBitangent.z, ase_worldNormal.z );
				float3 tanNormal74_g174145 = appendResult68_g174145;
				float3 worldNormal74_g174145 = normalize( float3(dot(tanToWorld0,tanNormal74_g174145), dot(tanToWorld1,tanNormal74_g174145), dot(tanToWorld2,tanNormal74_g174145)) );
				half3 Local_NormalWS250_g174142 = worldNormal74_g174145;
				float3 In_NormalWS3_g174158 = Local_NormalWS250_g174142;
				float4 In_Shader3_g174158 = Local_Masks109_g174142;
				float4 In_Emissive3_g174158 = half4(1,1,1,1);
				float3 temp_output_3_0_g174146 = Local_Albedo139_g174142;
				float dotResult20_g174146 = dot( temp_output_3_0_g174146 , float3(0.2126,0.7152,0.0722) );
				half Local_Grayscale110_g174142 = dotResult20_g174146;
				float In_Grayscale3_g174158 = Local_Grayscale110_g174142;
				float clampResult144_g174142 = clamp( saturate( ( Local_Grayscale110_g174142 * 5.0 ) ) , 0.2 , 1.0 );
				half Local_Luminosity145_g174142 = clampResult144_g174142;
				float In_Luminosity3_g174158 = Local_Luminosity145_g174142;
				float In_MultiMask3_g174158 = Local_MultiMask78_g174142;
				float temp_output_187_0_g174142 = (Local_AlbedoTex185_g174142).w;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch236_g174142 = ( temp_output_187_0_g174142 - _MainAlphaClipValue );
				#else
				float staticSwitch236_g174142 = temp_output_187_0_g174142;
				#endif
				half Local_AlphaClip111_g174142 = staticSwitch236_g174142;
				float In_AlphaClip3_g174158 = Local_AlphaClip111_g174142;
				half Local_AlphaFade246_g174142 = (lerpResult62_g174142).a;
				float In_AlphaFade3_g174158 = Local_AlphaFade246_g174142;
				float3 temp_cast_4 = (1.0).xxx;
				float3 In_Translucency3_g174158 = temp_cast_4;
				float In_Transmission3_g174158 = 1.0;
				float In_Thickness3_g174158 = 0.0;
				float In_Diffusion3_g174158 = 0.0;
				Data3_g174158.Dummy = In_Dummy3_g174158;
				Data3_g174158.Albedo = In_Albedo3_g174158;
				Data3_g174158.AlbedoRaw = In_AlbedoRaw3_g174158;
				Data3_g174158.NormalTS = In_NormalTS3_g174158;
				Data3_g174158.NormalWS = In_NormalWS3_g174158;
				Data3_g174158.Shader = In_Shader3_g174158;
				Data3_g174158.Emissive= In_Emissive3_g174158;
				Data3_g174158.MultiMask = In_MultiMask3_g174158;
				Data3_g174158.Grayscale = In_Grayscale3_g174158;
				Data3_g174158.Luminosity = In_Luminosity3_g174158;
				Data3_g174158.AlphaClip = In_AlphaClip3_g174158;
				Data3_g174158.AlphaFade = In_AlphaFade3_g174158;
				Data3_g174158.Translucency = In_Translucency3_g174158;
				Data3_g174158.Transmission = In_Transmission3_g174158;
				Data3_g174158.Thickness = In_Thickness3_g174158;
				Data3_g174158.Diffusion = In_Diffusion3_g174158;
				TVEVisualData Data4_g174360 = Data3_g174158;
				float Out_Dummy4_g174360 = 0;
				float3 Out_Albedo4_g174360 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174360 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174360 = float2( 0,0 );
				float3 Out_NormalWS4_g174360 = float3( 0,0,0 );
				float4 Out_Shader4_g174360 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174360 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174360 = 0;
				float Out_Grayscale4_g174360 = 0;
				float Out_Luminosity4_g174360 = 0;
				float Out_AlphaClip4_g174360 = 0;
				float Out_AlphaFade4_g174360 = 0;
				float3 Out_Translucency4_g174360 = float3( 0,0,0 );
				float Out_Transmission4_g174360 = 0;
				float Out_Thickness4_g174360 = 0;
				float Out_Diffusion4_g174360 = 0;
				Out_Dummy4_g174360 = Data4_g174360.Dummy;
				Out_Albedo4_g174360 = Data4_g174360.Albedo;
				Out_AlbedoRaw4_g174360 = Data4_g174360.AlbedoRaw;
				Out_NormalTS4_g174360 = Data4_g174360.NormalTS;
				Out_NormalWS4_g174360 = Data4_g174360.NormalWS;
				Out_Shader4_g174360 = Data4_g174360.Shader;
				Out_Emissive4_g174360= Data4_g174360.Emissive;
				Out_MultiMask4_g174360 = Data4_g174360.MultiMask;
				Out_Grayscale4_g174360 = Data4_g174360.Grayscale;
				Out_Luminosity4_g174360= Data4_g174360.Luminosity;
				Out_AlphaClip4_g174360 = Data4_g174360.AlphaClip;
				Out_AlphaFade4_g174360 = Data4_g174360.AlphaFade;
				Out_Translucency4_g174360 = Data4_g174360.Translucency;
				Out_Transmission4_g174360 = Data4_g174360.Transmission;
				Out_Thickness4_g174360 = Data4_g174360.Thickness;
				Out_Diffusion4_g174360 = Data4_g174360.Diffusion;
				half3 Visual_Albedo527_g174348 = Out_Albedo4_g174360;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174349) = _SecondAlbedoTex;
				float localFilterTexture19_g174377 = ( 0.0 );
				SamplerState SamplerDefault19_g174377 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174377 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174377 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174377 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174377 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174377 = SamplerDefault19_g174377;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174377 = SamplerDefault19_g174377;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174377 = SamplerPoint19_g174377;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174377 = SamplerLow19_g174377;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174377 = SamplerMedium19_g174377;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174377 = SamplerHigh19_g174377;
				#endif
				SamplerState Sampler276_g174349 = SS19_g174377;
				half4 Local_LayerCoords790_g174348 = _second_coord_value;
				float4 temp_output_37_0_g174349 = Local_LayerCoords790_g174348;
				half4 Coords276_g174349 = temp_output_37_0_g174349;
				half2 TexCoord276_g174349 = IN.ase_texcoord2.xy;
				half4 localSampleMain276_g174349 = SampleMain( Texture276_g174349 , Sampler276_g174349 , Coords276_g174349 , TexCoord276_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174349) = _SecondAlbedoTex;
				SamplerState Sampler275_g174349 = SS19_g174377;
				half4 Coords275_g174349 = temp_output_37_0_g174349;
				half2 TexCoord275_g174349 = IN.ase_texcoord3.xy;
				half4 localSampleExtra275_g174349 = SampleExtra( Texture275_g174349 , Sampler275_g174349 , Coords275_g174349 , TexCoord275_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174349) = _SecondAlbedoTex;
				SamplerState Sampler238_g174349 = SS19_g174377;
				half4 Coords238_g174349 = temp_output_37_0_g174349;
				TVEModelData Data15_g174380 = Data16_g164566;
				float Out_Dummy15_g174380 = 0;
				float3 Out_PositionWS15_g174380 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174380 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174380 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174380 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174380 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174380 = float3( 0,0,0 );
				float4 Out_VertexData15_g174380 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174380 = float4( 0,0,0,0 );
				Out_Dummy15_g174380 = Data15_g174380.Dummy;
				Out_PositionWS15_g174380 = Data15_g174380.PositionWS;
				Out_PositionWO15_g174380 = Data15_g174380.PositionWO;
				Out_PivotWS15_g174380 = Data15_g174380.PivotWS;
				Out_PivotWO15_g174380 = Data15_g174380.PivotWO;
				Out_NormalWS15_g174380 = Data15_g174380.NormalWS;
				Out_ViewDirWS15_g174380 = Data15_g174380.ViewDirWS;
				Out_VertexData15_g174380 = Data15_g174380.VertexData;
				Out_BoundsData15_g174380 = Data15_g174380.BoundsData;
				half3 Model_PositionWO636_g174348 = Out_PositionWO15_g174380;
				float3 temp_output_279_0_g174349 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174349 = temp_output_279_0_g174349;
				half4 localSamplePlanar2D238_g174349 = SamplePlanar2D( Texture238_g174349 , Sampler238_g174349 , Coords238_g174349 , WorldPosition238_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174349) = _SecondAlbedoTex;
				SamplerState Sampler246_g174349 = SS19_g174377;
				half4 Coords246_g174349 = temp_output_37_0_g174349;
				half3 WorldPosition246_g174349 = temp_output_279_0_g174349;
				half3 Model_NormalWS869_g174348 = Out_NormalWS15_g174380;
				float3 temp_output_280_0_g174349 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174349 = temp_output_280_0_g174349;
				half4 localSamplePlanar3D246_g174349 = SamplePlanar3D( Texture246_g174349 , Sampler246_g174349 , Coords246_g174349 , WorldPosition246_g174349 , WorldNormal246_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174349) = _SecondAlbedoTex;
				SamplerState Sampler234_g174349 = SS19_g174377;
				float4 Coords234_g174349 = temp_output_37_0_g174349;
				float3 WorldPosition234_g174349 = temp_output_279_0_g174349;
				float4 localSampleStochastic2D234_g174349 = SampleStochastic2D( Texture234_g174349 , Sampler234_g174349 , Coords234_g174349 , WorldPosition234_g174349 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174349) = _SecondAlbedoTex;
				SamplerState Sampler263_g174349 = SS19_g174377;
				half4 Coords263_g174349 = temp_output_37_0_g174349;
				half3 WorldPosition263_g174349 = temp_output_279_0_g174349;
				half3 WorldNormal263_g174349 = temp_output_280_0_g174349;
				half4 localSampleStochastic3D263_g174349 = SampleStochastic3D( Texture263_g174349 , Sampler263_g174349 , Coords263_g174349 , WorldPosition263_g174349 , WorldNormal263_g174349 );
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float4 staticSwitch693_g174348 = localSampleMain276_g174349;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float4 staticSwitch693_g174348 = localSampleExtra275_g174349;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float4 staticSwitch693_g174348 = localSamplePlanar2D238_g174349;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float4 staticSwitch693_g174348 = localSamplePlanar3D246_g174349;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch693_g174348 = localSampleStochastic2D234_g174349;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch693_g174348 = localSampleStochastic3D263_g174349;
				#else
				float4 staticSwitch693_g174348 = localSampleMain276_g174349;
				#endif
				half4 Local_AlbedoTex777_g174348 = staticSwitch693_g174348;
				float3 lerpResult716_g174348 = lerp( float3( 1,1,1 ) , (Local_AlbedoTex777_g174348).xyz , _SecondAlbedoValue);
				half3 Local_AlbedoRGB771_g174348 = lerpResult716_g174348;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174351) = _SecondShaderTex;
				float localFilterTexture30_g174379 = ( 0.0 );
				SamplerState SamplerDefault30_g174379 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174379 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174379 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174379 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174379 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174379 = SamplerDefault30_g174379;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174379 = SamplerDefault30_g174379;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174379 = SamplerPoint30_g174379;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174379 = SamplerLow30_g174379;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174379 = SamplerMedium30_g174379;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174379 = SamplerHigh30_g174379;
				#endif
				SamplerState Sampler276_g174351 = SS30_g174379;
				float4 temp_output_37_0_g174351 = Local_LayerCoords790_g174348;
				half4 Coords276_g174351 = temp_output_37_0_g174351;
				half2 TexCoord276_g174351 = IN.ase_texcoord2.xy;
				half4 localSampleMain276_g174351 = SampleMain( Texture276_g174351 , Sampler276_g174351 , Coords276_g174351 , TexCoord276_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174351) = _SecondShaderTex;
				SamplerState Sampler275_g174351 = SS30_g174379;
				half4 Coords275_g174351 = temp_output_37_0_g174351;
				half2 TexCoord275_g174351 = IN.ase_texcoord3.xy;
				half4 localSampleExtra275_g174351 = SampleExtra( Texture275_g174351 , Sampler275_g174351 , Coords275_g174351 , TexCoord275_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174351) = _SecondShaderTex;
				SamplerState Sampler238_g174351 = SS30_g174379;
				half4 Coords238_g174351 = temp_output_37_0_g174351;
				float3 temp_output_279_0_g174351 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174351 = temp_output_279_0_g174351;
				half4 localSamplePlanar2D238_g174351 = SamplePlanar2D( Texture238_g174351 , Sampler238_g174351 , Coords238_g174351 , WorldPosition238_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174351) = _SecondShaderTex;
				SamplerState Sampler246_g174351 = SS30_g174379;
				half4 Coords246_g174351 = temp_output_37_0_g174351;
				half3 WorldPosition246_g174351 = temp_output_279_0_g174351;
				float3 temp_output_280_0_g174351 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174351 = temp_output_280_0_g174351;
				half4 localSamplePlanar3D246_g174351 = SamplePlanar3D( Texture246_g174351 , Sampler246_g174351 , Coords246_g174351 , WorldPosition246_g174351 , WorldNormal246_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174351) = _SecondShaderTex;
				SamplerState Sampler234_g174351 = SS30_g174379;
				float4 Coords234_g174351 = temp_output_37_0_g174351;
				float3 WorldPosition234_g174351 = temp_output_279_0_g174351;
				float4 localSampleStochastic2D234_g174351 = SampleStochastic2D( Texture234_g174351 , Sampler234_g174351 , Coords234_g174351 , WorldPosition234_g174351 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174351) = _SecondShaderTex;
				SamplerState Sampler263_g174351 = SS30_g174379;
				half4 Coords263_g174351 = temp_output_37_0_g174351;
				half3 WorldPosition263_g174351 = temp_output_279_0_g174351;
				half3 WorldNormal263_g174351 = temp_output_280_0_g174351;
				half4 localSampleStochastic3D263_g174351 = SampleStochastic3D( Texture263_g174351 , Sampler263_g174351 , Coords263_g174351 , WorldPosition263_g174351 , WorldNormal263_g174351 );
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float4 staticSwitch722_g174348 = localSampleMain276_g174351;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float4 staticSwitch722_g174348 = localSampleExtra275_g174351;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float4 staticSwitch722_g174348 = localSamplePlanar2D238_g174351;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float4 staticSwitch722_g174348 = localSamplePlanar3D246_g174351;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch722_g174348 = localSampleStochastic2D234_g174351;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch722_g174348 = localSampleStochastic3D263_g174351;
				#else
				float4 staticSwitch722_g174348 = localSampleMain276_g174351;
				#endif
				half4 Local_ShaderTex775_g174348 = staticSwitch722_g174348;
				float lerpResult739_g174348 = lerp( 1.0 , (Local_ShaderTex775_g174348).y , _SecondOcclusionValue);
				float4 appendResult749_g174348 = (float4(( (Local_ShaderTex775_g174348).x * _SecondMetallicValue ) , lerpResult739_g174348 , (Local_ShaderTex775_g174348).z , ( (Local_ShaderTex775_g174348).w * _SecondSmoothnessValue )));
				half4 Local_Masks750_g174348 = appendResult749_g174348;
				float clampResult17_g174355 = clamp( (Local_Masks750_g174348).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174356 = _SecondMultiRemap.x;
				float temp_output_10_0_g174356 = ( _SecondMultiRemap.y - temp_output_7_0_g174356 );
				float temp_output_765_0_g174348 = saturate( ( ( clampResult17_g174355 - temp_output_7_0_g174356 ) / ( temp_output_10_0_g174356 + 0.0001 ) ) );
				half Local_MultiMask767_g174348 = temp_output_765_0_g174348;
				float lerpResult705_g174348 = lerp( 1.0 , Local_MultiMask767_g174348 , _SecondColorMode);
				float4 lerpResult706_g174348 = lerp( _SecondColorTwo , _SecondColor , lerpResult705_g174348);
				half3 Local_ColorRGB774_g174348 = (lerpResult706_g174348).rgb;
				half3 Local_Albedo768_g174348 = ( Local_AlbedoRGB771_g174348 * Local_ColorRGB774_g174348 );
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174373 = 2.0;
				#else
				float staticSwitch1_g174373 = 4.594794;
				#endif
				float3 lerpResult985_g174348 = lerp( Local_Albedo768_g174348 , ( Visual_Albedo527_g174348 * Local_Albedo768_g174348 * staticSwitch1_g174373 ) , _SecondBlendAlbedoValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174352) = _SecondMaskTex;
				SamplerState Sampler276_g174352 = sampler_Linear_Repeat;
				half4 Local_BlendCoords813_g174348 = _second_mask_coord_value;
				float4 temp_output_37_0_g174352 = Local_BlendCoords813_g174348;
				half4 Coords276_g174352 = temp_output_37_0_g174352;
				half2 TexCoord276_g174352 = IN.ase_texcoord2.xy;
				half4 localSampleMain276_g174352 = SampleMain( Texture276_g174352 , Sampler276_g174352 , Coords276_g174352 , TexCoord276_g174352 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174352) = _SecondMaskTex;
				SamplerState Sampler275_g174352 = sampler_Linear_Repeat;
				half4 Coords275_g174352 = temp_output_37_0_g174352;
				half2 TexCoord275_g174352 = IN.ase_texcoord3.xy;
				half4 localSampleExtra275_g174352 = SampleExtra( Texture275_g174352 , Sampler275_g174352 , Coords275_g174352 , TexCoord275_g174352 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174352) = _SecondMaskTex;
				SamplerState Sampler238_g174352 = sampler_Linear_Repeat;
				half4 Coords238_g174352 = temp_output_37_0_g174352;
				float3 temp_output_279_0_g174352 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174352 = temp_output_279_0_g174352;
				half4 localSamplePlanar2D238_g174352 = SamplePlanar2D( Texture238_g174352 , Sampler238_g174352 , Coords238_g174352 , WorldPosition238_g174352 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174352) = _SecondMaskTex;
				SamplerState Sampler246_g174352 = sampler_Linear_Repeat;
				half4 Coords246_g174352 = temp_output_37_0_g174352;
				half3 WorldPosition246_g174352 = temp_output_279_0_g174352;
				float3 temp_output_280_0_g174352 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174352 = temp_output_280_0_g174352;
				half4 localSamplePlanar3D246_g174352 = SamplePlanar3D( Texture246_g174352 , Sampler246_g174352 , Coords246_g174352 , WorldPosition246_g174352 , WorldNormal246_g174352 );
				#if defined( TVE_SECOND_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch817_g174348 = localSampleMain276_g174352;
				#elif defined( TVE_SECOND_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch817_g174348 = localSampleExtra275_g174352;
				#elif defined( TVE_SECOND_MASK_SAMPLE_PLANAR_2D )
				float4 staticSwitch817_g174348 = localSamplePlanar2D238_g174352;
				#elif defined( TVE_SECOND_MASK_SAMPLE_PLANAR_3D )
				float4 staticSwitch817_g174348 = localSamplePlanar3D246_g174352;
				#else
				float4 staticSwitch817_g174348 = localSampleMain276_g174352;
				#endif
				half4 Local_MaskTex861_g174348 = staticSwitch817_g174348;
				float clampResult17_g174364 = clamp( (Local_MaskTex861_g174348).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174363 = _SecondMaskRemap.x;
				float temp_output_10_0_g174363 = ( _SecondMaskRemap.y - temp_output_7_0_g174363 );
				float lerpResult1015_g174348 = lerp( 1.0 , saturate( ( ( clampResult17_g174364 - temp_output_7_0_g174363 ) / ( temp_output_10_0_g174363 + 0.0001 ) ) ) , _SecondMaskValue);
				half Blend_TexMask429_g174348 = lerpResult1015_g174348;
				half3 Visual_NormalWS951_g174348 = Out_NormalWS4_g174360;
				float clampResult17_g174365 = clamp( saturate( (Visual_NormalWS951_g174348).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174366 = _SecondProjRemap.x;
				float temp_output_10_0_g174366 = ( _SecondProjRemap.y - temp_output_7_0_g174366 );
				float lerpResult996_g174348 = lerp( 1.0 , saturate( ( ( clampResult17_g174365 - temp_output_7_0_g174366 ) / ( temp_output_10_0_g174366 + 0.0001 ) ) ) , _SecondProjValue);
				half Blend_ProjMask434_g174348 = lerpResult996_g174348;
				half4 Model_VertexMasks964_g174348 = Out_VertexData15_g174380;
				float4 break965_g174348 = Model_VertexMasks964_g174348;
				float4 break33_g174367 = _second_vert_mode;
				float temp_output_30_0_g174367 = ( break965_g174348.x * break33_g174367.x );
				float temp_output_29_0_g174367 = ( break965_g174348.y * break33_g174367.y );
				float temp_output_31_0_g174367 = ( break965_g174348.z * break33_g174367.z );
				float temp_output_28_0_g174367 = ( temp_output_30_0_g174367 + temp_output_29_0_g174367 + temp_output_31_0_g174367 + ( break965_g174348.w * break33_g174367.w ) );
				float clampResult17_g174361 = clamp( temp_output_28_0_g174367 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174362 = _SecondMeshRemap.x;
				float temp_output_10_0_g174362 = ( _SecondMeshRemap.y - temp_output_7_0_g174362 );
				float lerpResult1017_g174348 = lerp( 1.0 , saturate( ( ( clampResult17_g174361 - temp_output_7_0_g174362 ) / ( temp_output_10_0_g174362 + 0.0001 ) ) ) , _SecondMeshValue);
				float temp_output_6_0_g174375 = lerpResult1017_g174348;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174375 = ( temp_output_6_0_g174375 + ( _SecondMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174375 = temp_output_6_0_g174375;
				#endif
				float temp_output_987_0_g174348 = staticSwitch14_g174375;
				half Blend_VertMask918_g174348 = temp_output_987_0_g174348;
				float localBuildGlobalData204_g173897 = ( 0.0 );
				TVEGlobalData Data204_g173897 = (TVEGlobalData)0;
				half Dummy211_g173897 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g173897 = Dummy211_g173897;
				float temp_output_82_0_g173907 = _GlobalCoatLayerValue;
				float temp_output_19_0_g173909 = TVE_CoatLayers[(int)temp_output_82_0_g173907];
				TVEModelData Data15_g173979 = Data16_g164566;
				float Out_Dummy15_g173979 = 0;
				float3 Out_PositionWS15_g173979 = float3( 0,0,0 );
				float3 Out_PositionWO15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWS15_g173979 = float3( 0,0,0 );
				float3 Out_PivotWO15_g173979 = float3( 0,0,0 );
				float3 Out_NormalWS15_g173979 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g173979 = float3( 0,0,0 );
				float4 Out_VertexData15_g173979 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g173979 = float4( 0,0,0,0 );
				Out_Dummy15_g173979 = Data15_g173979.Dummy;
				Out_PositionWS15_g173979 = Data15_g173979.PositionWS;
				Out_PositionWO15_g173979 = Data15_g173979.PositionWO;
				Out_PivotWS15_g173979 = Data15_g173979.PivotWS;
				Out_PivotWO15_g173979 = Data15_g173979.PivotWO;
				Out_NormalWS15_g173979 = Data15_g173979.NormalWS;
				Out_ViewDirWS15_g173979 = Data15_g173979.ViewDirWS;
				Out_VertexData15_g173979 = Data15_g173979.VertexData;
				Out_BoundsData15_g173979 = Data15_g173979.BoundsData;
				half3 Model_PositionWS143_g173897 = Out_PositionWS15_g173979;
				half3 Model_PivotWS145_g173897 = Out_PivotWS15_g173979;
				float3 lerpResult300_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalCoatPivotValue);
				half3 Input_Position180_g173910 = lerpResult300_g173897;
				float2 temp_output_75_0_g173910 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_82_0_g173910 = temp_output_82_0_g173907;
				float2 temp_output_119_0_g173910 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173910).xz ) );
				float temp_output_7_0_g173915 = 1.0;
				float temp_output_10_0_g173915 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173915 );
				float4 lerpResult131_g173910 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173910,temp_output_82_0_g173910), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_CoatNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173910,temp_output_82_0_g173910), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173910 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173915 ) / temp_output_10_0_g173915 ) ));
				float4 temp_output_17_0_g173909 = lerpResult131_g173910;
				float4 temp_output_3_0_g173909 = TVE_CoatParams;
				float4 ifLocalVar18_g173909 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173909 >= 0.5 )
				ifLocalVar18_g173909 = temp_output_17_0_g173909;
				else
				ifLocalVar18_g173909 = temp_output_3_0_g173909;
				float4 lerpResult22_g173909 = lerp( temp_output_3_0_g173909 , temp_output_17_0_g173909 , temp_output_19_0_g173909);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173909 = lerpResult22_g173909;
				#else
				float4 staticSwitch24_g173909 = ifLocalVar18_g173909;
				#endif
				half4 Coat_Params302_g173897 = staticSwitch24_g173909;
				float4 In_CoatParams204_g173897 = Coat_Params302_g173897;
				float temp_output_82_0_g173898 = _GlobalPaintLayerValue;
				float temp_output_19_0_g173900 = TVE_PaintLayers[(int)temp_output_82_0_g173898];
				float3 lerpResult85_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalPaintPivotValue);
				half3 Input_Position180_g173901 = lerpResult85_g173897;
				float2 temp_output_75_0_g173901 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_82_0_g173901 = temp_output_82_0_g173898;
				float2 temp_output_119_0_g173901 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173901).xz ) );
				float temp_output_7_0_g173906 = 1.0;
				float temp_output_10_0_g173906 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173906 );
				float4 lerpResult131_g173901 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173901,temp_output_82_0_g173901), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173901,temp_output_82_0_g173901), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173901 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173906 ) / temp_output_10_0_g173906 ) ));
				float4 temp_output_17_0_g173900 = lerpResult131_g173901;
				float4 temp_output_3_0_g173900 = TVE_PaintParams;
				float4 ifLocalVar18_g173900 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173900 >= 0.5 )
				ifLocalVar18_g173900 = temp_output_17_0_g173900;
				else
				ifLocalVar18_g173900 = temp_output_3_0_g173900;
				float4 lerpResult22_g173900 = lerp( temp_output_3_0_g173900 , temp_output_17_0_g173900 , temp_output_19_0_g173900);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173900 = lerpResult22_g173900;
				#else
				float4 staticSwitch24_g173900 = ifLocalVar18_g173900;
				#endif
				half4 Paint_Params71_g173897 = staticSwitch24_g173900;
				float4 In_PaintParams204_g173897 = Paint_Params71_g173897;
				float temp_output_82_0_g173916 = _GlobalGlowLayerValue;
				float temp_output_19_0_g173918 = TVE_GlowLayers[(int)temp_output_82_0_g173916];
				float3 lerpResult247_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalGlowPivotValue);
				half3 Input_Position180_g173919 = lerpResult247_g173897;
				float2 temp_output_75_0_g173919 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_82_0_g173919 = temp_output_82_0_g173916;
				float2 temp_output_119_0_g173919 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173919).xz ) );
				float temp_output_7_0_g173924 = 1.0;
				float temp_output_10_0_g173924 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173924 );
				float4 lerpResult131_g173919 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173919,temp_output_82_0_g173919), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173919,temp_output_82_0_g173919), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173919 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173924 ) / temp_output_10_0_g173924 ) ));
				float4 temp_output_17_0_g173918 = lerpResult131_g173919;
				float4 temp_output_3_0_g173918 = TVE_GlowParams;
				float4 ifLocalVar18_g173918 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173918 >= 0.5 )
				ifLocalVar18_g173918 = temp_output_17_0_g173918;
				else
				ifLocalVar18_g173918 = temp_output_3_0_g173918;
				float4 lerpResult22_g173918 = lerp( temp_output_3_0_g173918 , temp_output_17_0_g173918 , temp_output_19_0_g173918);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173918 = lerpResult22_g173918;
				#else
				float4 staticSwitch24_g173918 = ifLocalVar18_g173918;
				#endif
				half4 Glow_Params248_g173897 = staticSwitch24_g173918;
				float4 In_GlowParams204_g173897 = Glow_Params248_g173897;
				float temp_output_132_0_g173961 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g173963 = TVE_AtmoLayers[(int)temp_output_132_0_g173961];
				float3 lerpResult104_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalAtmoPivotValue);
				half3 Input_Position180_g173964 = lerpResult104_g173897;
				float2 temp_output_75_0_g173964 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_82_0_g173964 = temp_output_132_0_g173961;
				float2 temp_output_119_0_g173964 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173964).xz ) );
				float temp_output_7_0_g173969 = 1.0;
				float temp_output_10_0_g173969 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173969 );
				float4 lerpResult131_g173964 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173964,temp_output_82_0_g173964), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173964,temp_output_82_0_g173964), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173964 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173969 ) / temp_output_10_0_g173969 ) ));
				float4 temp_output_17_0_g173963 = lerpResult131_g173964;
				float4 temp_output_3_0_g173963 = TVE_AtmoParams;
				float4 ifLocalVar18_g173963 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173963 >= 0.5 )
				ifLocalVar18_g173963 = temp_output_17_0_g173963;
				else
				ifLocalVar18_g173963 = temp_output_3_0_g173963;
				float4 lerpResult22_g173963 = lerp( temp_output_3_0_g173963 , temp_output_17_0_g173963 , temp_output_19_0_g173963);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173963 = lerpResult22_g173963;
				#else
				float4 staticSwitch24_g173963 = ifLocalVar18_g173963;
				#endif
				half4 Atmo_Params80_g173897 = staticSwitch24_g173963;
				float4 In_AtmoParams204_g173897 = Atmo_Params80_g173897;
				float temp_output_132_0_g173970 = _GlobalFadeLayerValue;
				float temp_output_19_0_g173972 = TVE_FadeLayers[(int)temp_output_132_0_g173970];
				float3 lerpResult382_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFadePivotValue);
				half3 Input_Position180_g173973 = lerpResult382_g173897;
				float2 temp_output_75_0_g173973 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_82_0_g173973 = temp_output_132_0_g173970;
				float2 temp_output_119_0_g173973 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173973).xz ) );
				float temp_output_7_0_g173978 = 1.0;
				float temp_output_10_0_g173978 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173978 );
				float4 lerpResult131_g173973 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173973,temp_output_82_0_g173973), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173973,temp_output_82_0_g173973), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173973 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173978 ) / temp_output_10_0_g173978 ) ));
				float4 temp_output_17_0_g173972 = lerpResult131_g173973;
				float4 temp_output_3_0_g173972 = TVE_FadeParams;
				float4 ifLocalVar18_g173972 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173972 >= 0.5 )
				ifLocalVar18_g173972 = temp_output_17_0_g173972;
				else
				ifLocalVar18_g173972 = temp_output_3_0_g173972;
				float4 lerpResult22_g173972 = lerp( temp_output_3_0_g173972 , temp_output_17_0_g173972 , temp_output_19_0_g173972);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173972 = lerpResult22_g173972;
				#else
				float4 staticSwitch24_g173972 = ifLocalVar18_g173972;
				#endif
				half4 Fade_Params387_g173897 = staticSwitch24_g173972;
				float4 In_FadeParams204_g173897 = Fade_Params387_g173897;
				float temp_output_130_0_g173952 = _GlobalFormLayerValue;
				float temp_output_19_0_g173954 = TVE_FormLayers[(int)temp_output_130_0_g173952];
				float3 lerpResult168_g173897 = lerp( Model_PositionWS143_g173897 , Model_PivotWS145_g173897 , _GlobalFormPivotValue);
				half3 Input_Position180_g173955 = lerpResult168_g173897;
				float2 temp_output_75_0_g173955 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_82_0_g173955 = temp_output_130_0_g173952;
				float2 temp_output_119_0_g173955 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173955).xz ) );
				float temp_output_7_0_g173960 = 1.0;
				float temp_output_10_0_g173960 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173960 );
				float4 lerpResult131_g173955 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173955,temp_output_82_0_g173955), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173955,temp_output_82_0_g173955), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173955 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173960 ) / temp_output_10_0_g173960 ) ));
				float4 temp_output_17_0_g173954 = lerpResult131_g173955;
				float4 temp_output_3_0_g173954 = TVE_FormParams;
				float4 ifLocalVar18_g173954 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173954 >= 0.5 )
				ifLocalVar18_g173954 = temp_output_17_0_g173954;
				else
				ifLocalVar18_g173954 = temp_output_3_0_g173954;
				float4 lerpResult22_g173954 = lerp( temp_output_3_0_g173954 , temp_output_17_0_g173954 , temp_output_19_0_g173954);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173954 = lerpResult22_g173954;
				#else
				float4 staticSwitch24_g173954 = ifLocalVar18_g173954;
				#endif
				half4 Form_Params112_g173897 = staticSwitch24_g173954;
				float4 In_FormParams204_g173897 = Form_Params112_g173897;
				half4 Land_Params375_g173897 = TVE_LandParams;
				float4 In_LandParams204_g173897 = Land_Params375_g173897;
				float temp_output_136_0_g173943 = _GlobalWindLayerValue;
				float temp_output_19_0_g173945 = TVE_WindLayers[(int)temp_output_136_0_g173943];
				half3 Input_Position180_g173946 = Model_PositionWS143_g173897;
				float2 temp_output_75_0_g173946 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_82_0_g173946 = temp_output_136_0_g173943;
				float2 temp_output_119_0_g173946 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173946).xz ) );
				float temp_output_7_0_g173951 = 1.0;
				float temp_output_10_0_g173951 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173951 );
				float4 lerpResult131_g173946 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173946,temp_output_82_0_g173946), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_WindNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173946,temp_output_82_0_g173946), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173946 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173951 ) / temp_output_10_0_g173951 ) ));
				float4 temp_output_17_0_g173945 = lerpResult131_g173946;
				float4 temp_output_3_0_g173945 = TVE_WindParams;
				float4 ifLocalVar18_g173945 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173945 >= 0.5 )
				ifLocalVar18_g173945 = temp_output_17_0_g173945;
				else
				ifLocalVar18_g173945 = temp_output_3_0_g173945;
				float4 lerpResult22_g173945 = lerp( temp_output_3_0_g173945 , temp_output_17_0_g173945 , temp_output_19_0_g173945);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173945 = lerpResult22_g173945;
				#else
				float4 staticSwitch24_g173945 = ifLocalVar18_g173945;
				#endif
				half4 Wind_Params88_g173897 = staticSwitch24_g173945;
				float4 In_WindParams204_g173897 = Wind_Params88_g173897;
				float temp_output_136_0_g173925 = _GlobalPushLayerValue;
				float temp_output_19_0_g173926 = TVE_PushLayers[(int)temp_output_136_0_g173925];
				half3 Input_Position180_g173927 = Model_PivotWS145_g173897;
				float2 temp_output_75_0_g173927 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_82_0_g173927 = temp_output_136_0_g173925;
				float2 temp_output_119_0_g173927 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g173927).xz ) );
				float temp_output_7_0_g173932 = 1.0;
				float temp_output_10_0_g173932 = ( TVE_RenderNearFadeValue - temp_output_7_0_g173932 );
				float4 lerpResult131_g173927 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g173927,temp_output_82_0_g173927), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PushNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g173927,temp_output_82_0_g173927), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g173927 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g173932 ) / temp_output_10_0_g173932 ) ));
				float4 temp_output_17_0_g173926 = lerpResult131_g173927;
				float4 temp_output_3_0_g173926 = TVE_PushParams;
				float4 ifLocalVar18_g173926 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g173926 >= 0.5 )
				ifLocalVar18_g173926 = temp_output_17_0_g173926;
				else
				ifLocalVar18_g173926 = temp_output_3_0_g173926;
				float4 lerpResult22_g173926 = lerp( temp_output_3_0_g173926 , temp_output_17_0_g173926 , temp_output_19_0_g173926);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g173926 = lerpResult22_g173926;
				#else
				float4 staticSwitch24_g173926 = ifLocalVar18_g173926;
				#endif
				half4 Push_Params335_g173897 = staticSwitch24_g173926;
				float4 In_PushParams204_g173897 = Push_Params335_g173897;
				Data204_g173897.Dummy = In_Dummy204_g173897;
				Data204_g173897.CoatParams = In_CoatParams204_g173897;
				Data204_g173897.PaintParams = In_PaintParams204_g173897;
				Data204_g173897.GlowParams = In_GlowParams204_g173897;
				Data204_g173897.AtmoParams = In_AtmoParams204_g173897;
				Data204_g173897.FadeParams = In_FadeParams204_g173897;
				Data204_g173897.FormParams= In_FormParams204_g173897;
				Data204_g173897.LandParams = In_LandParams204_g173897;
				Data204_g173897.WindParams = In_WindParams204_g173897;
				Data204_g173897.PushParams = In_PushParams204_g173897;
				TVEGlobalData Data15_g174359 = Data204_g173897;
				float Out_Dummy15_g174359 = 0;
				float4 Out_CoatParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174359 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174359 = float4( 0,0,0,0 );
				Out_Dummy15_g174359 = Data15_g174359.Dummy;
				Out_CoatParams15_g174359 = Data15_g174359.CoatParams;
				Out_PaintParams15_g174359 = Data15_g174359.PaintParams;
				Out_GlowParams15_g174359 = Data15_g174359.GlowParams;
				Out_AtmoParams15_g174359= Data15_g174359.AtmoParams;
				Out_FadeParams15_g174359= Data15_g174359.FadeParams;
				Out_FormParams15_g174359 = Data15_g174359.FormParams;
				Out_LandParams15_g174359 = Data15_g174359.LandParams;
				Out_WindParams15_g174359 = Data15_g174359.WindParams;
				Out_PushParams15_g174359 = Data15_g174359.PushParams;
				half4 Global_CoatParams975_g174348 = Out_CoatParams15_g174359;
				float lerpResult1013_g174348 = lerp( 1.0 , (Global_CoatParams975_g174348).z , TVE_IsEnabled);
				#ifdef TVE_SECOND_ELEMENT
				float staticSwitch971_g174348 = lerpResult1013_g174348;
				#else
				float staticSwitch971_g174348 = 1.0;
				#endif
				half Blend_GlobalMask972_g174348 = staticSwitch971_g174348;
				float temp_output_432_0_g174348 = ( _SecondIntensityValue * Blend_TexMask429_g174348 * Blend_ProjMask434_g174348 * Blend_VertMask918_g174348 * Blend_GlobalMask972_g174348 );
				float clampResult17_g174369 = clamp( temp_output_432_0_g174348 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174368 = _SecondBlendRemap.x;
				float temp_output_10_0_g174368 = ( _SecondBlendRemap.y - temp_output_7_0_g174368 );
				half Blend_Mask412_g174348 = ( saturate( ( ( clampResult17_g174369 - temp_output_7_0_g174368 ) / ( temp_output_10_0_g174368 + 0.0001 ) ) ) * _SecondBlendIntensityValue );
				float3 lerpResult403_g174348 = lerp( Visual_Albedo527_g174348 , lerpResult985_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float3 staticSwitch415_g174348 = lerpResult403_g174348;
				#else
				float3 staticSwitch415_g174348 = Visual_Albedo527_g174348;
				#endif
				half3 Final_Albedo601_g174348 = staticSwitch415_g174348;
				float3 In_Albedo3_g174381 = Final_Albedo601_g174348;
				float3 In_AlbedoRaw3_g174381 = Final_Albedo601_g174348;
				half2 Visual_NormalTS529_g174348 = Out_NormalTS4_g174360;
				float2 lerpResult40_g174371 = lerp( float2( 0,0 ) , Visual_NormalTS529_g174348 , _SecondBlendNormalValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174350) = _SecondNormalTex;
				float localFilterTexture29_g174378 = ( 0.0 );
				SamplerState SamplerDefault29_g174378 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174378 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174378 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174378 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174378 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174378 = SamplerDefault29_g174378;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174378 = SamplerDefault29_g174378;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174378 = SamplerPoint29_g174378;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174378 = SamplerLow29_g174378;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174378 = SamplerMedium29_g174378;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174378 = SamplerHigh29_g174378;
				#endif
				SamplerState Sampler276_g174350 = SS29_g174378;
				float4 temp_output_37_0_g174350 = Local_LayerCoords790_g174348;
				half4 Coords276_g174350 = temp_output_37_0_g174350;
				half2 TexCoord276_g174350 = IN.ase_texcoord2.xy;
				half4 localSampleMain276_g174350 = SampleMain( Texture276_g174350 , Sampler276_g174350 , Coords276_g174350 , TexCoord276_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174350) = _SecondNormalTex;
				SamplerState Sampler275_g174350 = SS29_g174378;
				half4 Coords275_g174350 = temp_output_37_0_g174350;
				half2 TexCoord275_g174350 = IN.ase_texcoord3.xy;
				half4 localSampleExtra275_g174350 = SampleExtra( Texture275_g174350 , Sampler275_g174350 , Coords275_g174350 , TexCoord275_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174350) = _SecondNormalTex;
				SamplerState Sampler238_g174350 = SS29_g174378;
				half4 Coords238_g174350 = temp_output_37_0_g174350;
				float3 temp_output_279_0_g174350 = Model_PositionWO636_g174348;
				half3 WorldPosition238_g174350 = temp_output_279_0_g174350;
				half4 localSamplePlanar2D238_g174350 = SamplePlanar2D( Texture238_g174350 , Sampler238_g174350 , Coords238_g174350 , WorldPosition238_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174350) = _SecondNormalTex;
				SamplerState Sampler246_g174350 = SS29_g174378;
				half4 Coords246_g174350 = temp_output_37_0_g174350;
				half3 WorldPosition246_g174350 = temp_output_279_0_g174350;
				float3 temp_output_280_0_g174350 = Model_NormalWS869_g174348;
				half3 WorldNormal246_g174350 = temp_output_280_0_g174350;
				half4 localSamplePlanar3D246_g174350 = SamplePlanar3D( Texture246_g174350 , Sampler246_g174350 , Coords246_g174350 , WorldPosition246_g174350 , WorldNormal246_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174350) = _SecondNormalTex;
				SamplerState Sampler234_g174350 = SS29_g174378;
				float4 Coords234_g174350 = temp_output_37_0_g174350;
				float3 WorldPosition234_g174350 = temp_output_279_0_g174350;
				float4 localSampleStochastic2D234_g174350 = SampleStochastic2D( Texture234_g174350 , Sampler234_g174350 , Coords234_g174350 , WorldPosition234_g174350 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174350) = _SecondNormalTex;
				SamplerState Sampler263_g174350 = SS29_g174378;
				half4 Coords263_g174350 = temp_output_37_0_g174350;
				half3 WorldPosition263_g174350 = temp_output_279_0_g174350;
				half3 WorldNormal263_g174350 = temp_output_280_0_g174350;
				half4 localSampleStochastic3D263_g174350 = SampleStochastic3D( Texture263_g174350 , Sampler263_g174350 , Coords263_g174350 , WorldPosition263_g174350 , WorldNormal263_g174350 );
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float4 staticSwitch698_g174348 = localSampleMain276_g174350;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float4 staticSwitch698_g174348 = localSampleExtra275_g174350;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float4 staticSwitch698_g174348 = localSamplePlanar2D238_g174350;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float4 staticSwitch698_g174348 = localSamplePlanar3D246_g174350;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch698_g174348 = localSampleStochastic2D234_g174350;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch698_g174348 = localSampleStochastic3D263_g174350;
				#else
				float4 staticSwitch698_g174348 = localSampleMain276_g174350;
				#endif
				half4 Local_NormalTex776_g174348 = staticSwitch698_g174348;
				half4 Normal_Packed45_g174353 = Local_NormalTex776_g174348;
				float2 appendResult58_g174353 = (float2(( (Normal_Packed45_g174353).x * (Normal_Packed45_g174353).w ) , (Normal_Packed45_g174353).y));
				half2 Normal_Default50_g174353 = appendResult58_g174353;
				half2 Normal_ASTC41_g174353 = (Normal_Packed45_g174353).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174353 = Normal_ASTC41_g174353;
				#else
				float2 staticSwitch38_g174353 = Normal_Default50_g174353;
				#endif
				half2 Normal_NO_DTX544_g174353 = (Normal_Packed45_g174353).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174353 = Normal_NO_DTX544_g174353;
				#else
				float2 staticSwitch37_g174353 = staticSwitch38_g174353;
				#endif
				float2 temp_output_724_0_g174348 = ( (staticSwitch37_g174353*2.0 + -1.0) * _SecondNormalValue );
				half2 Normal_Planar45_g174354 = temp_output_724_0_g174348;
				float2 break71_g174354 = Normal_Planar45_g174354;
				float3 appendResult72_g174354 = (float3(break71_g174354.x , 0.0 , break71_g174354.y));
				float2 temp_output_858_0_g174348 = (mul( ase_worldToTangent, appendResult72_g174354 )).xy;
				#if defined( TVE_SECOND_SAMPLE_MAIN_UV )
				float2 staticSwitch727_g174348 = temp_output_724_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_EXTRA_UV )
				float2 staticSwitch727_g174348 = temp_output_724_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_2D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_PLANAR_3D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_2D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#elif defined( TVE_SECOND_SAMPLE_STOCHASTIC_3D )
				float2 staticSwitch727_g174348 = temp_output_858_0_g174348;
				#else
				float2 staticSwitch727_g174348 = temp_output_724_0_g174348;
				#endif
				half2 Local_NormalTS729_g174348 = staticSwitch727_g174348;
				float2 temp_output_36_0_g174371 = ( lerpResult40_g174371 + Local_NormalTS729_g174348 );
				float2 lerpResult405_g174348 = lerp( Visual_NormalTS529_g174348 , temp_output_36_0_g174371 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float2 staticSwitch418_g174348 = lerpResult405_g174348;
				#else
				float2 staticSwitch418_g174348 = Visual_NormalTS529_g174348;
				#endif
				half2 Final_NormalTS612_g174348 = staticSwitch418_g174348;
				float2 In_NormalTS3_g174381 = Final_NormalTS612_g174348;
				float3 appendResult68_g174372 = (float3(Final_NormalTS612_g174348 , 1.0));
				float3 tanNormal74_g174372 = appendResult68_g174372;
				float3 worldNormal74_g174372 = normalize( float3(dot(tanToWorld0,tanNormal74_g174372), dot(tanToWorld1,tanNormal74_g174372), dot(tanToWorld2,tanNormal74_g174372)) );
				half3 Final_NormalWS950_g174348 = worldNormal74_g174372;
				float3 In_NormalWS3_g174381 = Final_NormalWS950_g174348;
				half4 Visual_Shader531_g174348 = Out_Shader4_g174360;
				float4 lerpResult994_g174348 = lerp( Local_Masks750_g174348 , ( Visual_Shader531_g174348 * Local_Masks750_g174348 ) , _SecondBlendShaderValue);
				float4 lerpResult440_g174348 = lerp( Visual_Shader531_g174348 , lerpResult994_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float4 staticSwitch451_g174348 = lerpResult440_g174348;
				#else
				float4 staticSwitch451_g174348 = Visual_Shader531_g174348;
				#endif
				half4 Final_Masks613_g174348 = staticSwitch451_g174348;
				float4 In_Shader3_g174381 = Final_Masks613_g174348;
				float4 In_Emissive3_g174381 = Out_Emissive4_g174360;
				float3 temp_output_3_0_g174374 = Final_Albedo601_g174348;
				float dotResult20_g174374 = dot( temp_output_3_0_g174374 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale615_g174348 = dotResult20_g174374;
				float In_Grayscale3_g174381 = Final_Grayscale615_g174348;
				float clampResult651_g174348 = clamp( saturate( ( Final_Grayscale615_g174348 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity652_g174348 = clampResult651_g174348;
				float In_Luminosity3_g174381 = Final_Luminosity652_g174348;
				half Visual_MultiMask547_g174348 = Out_MultiMask4_g174360;
				float lerpResult477_g174348 = lerp( Visual_MultiMask547_g174348 , Local_MultiMask767_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float staticSwitch482_g174348 = lerpResult477_g174348;
				#else
				float staticSwitch482_g174348 = Visual_MultiMask547_g174348;
				#endif
				half Final_MultiMask572_g174348 = staticSwitch482_g174348;
				float In_MultiMask3_g174381 = Final_MultiMask572_g174348;
				half Visual_AlphaClip559_g174348 = Out_AlphaClip4_g174360;
				float temp_output_718_0_g174348 = (Local_AlbedoTex777_g174348).w;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch932_g174348 = ( temp_output_718_0_g174348 - _SecondAlphaClipValue );
				#else
				float staticSwitch932_g174348 = temp_output_718_0_g174348;
				#endif
				half Local_AlphaClip772_g174348 = staticSwitch932_g174348;
				float lerpResult448_g174348 = lerp( Visual_AlphaClip559_g174348 , Local_AlphaClip772_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float staticSwitch564_g174348 = lerpResult448_g174348;
				#else
				float staticSwitch564_g174348 = Visual_AlphaClip559_g174348;
				#endif
				half Final_AlphaClip602_g174348 = staticSwitch564_g174348;
				float In_AlphaClip3_g174381 = Final_AlphaClip602_g174348;
				half Visual_AlphaFade588_g174348 = Out_AlphaFade4_g174360;
				half Local_AlphaFade773_g174348 = (lerpResult706_g174348).a;
				float lerpResult604_g174348 = lerp( Visual_AlphaFade588_g174348 , Local_AlphaFade773_g174348 , Blend_Mask412_g174348);
				#ifdef TVE_SECOND
				float staticSwitch608_g174348 = lerpResult604_g174348;
				#else
				float staticSwitch608_g174348 = Visual_AlphaFade588_g174348;
				#endif
				half Final_AlphaFade611_g174348 = staticSwitch608_g174348;
				float In_AlphaFade3_g174381 = Final_AlphaFade611_g174348;
				float3 In_Translucency3_g174381 = Out_Translucency4_g174360;
				float In_Transmission3_g174381 = Out_Transmission4_g174360;
				float In_Thickness3_g174381 = Out_Thickness4_g174360;
				float In_Diffusion3_g174381 = Out_Diffusion4_g174360;
				Data3_g174381.Dummy = In_Dummy3_g174381;
				Data3_g174381.Albedo = In_Albedo3_g174381;
				Data3_g174381.AlbedoRaw = In_AlbedoRaw3_g174381;
				Data3_g174381.NormalTS = In_NormalTS3_g174381;
				Data3_g174381.NormalWS = In_NormalWS3_g174381;
				Data3_g174381.Shader = In_Shader3_g174381;
				Data3_g174381.Emissive= In_Emissive3_g174381;
				Data3_g174381.MultiMask = In_MultiMask3_g174381;
				Data3_g174381.Grayscale = In_Grayscale3_g174381;
				Data3_g174381.Luminosity = In_Luminosity3_g174381;
				Data3_g174381.AlphaClip = In_AlphaClip3_g174381;
				Data3_g174381.AlphaFade = In_AlphaFade3_g174381;
				Data3_g174381.Translucency = In_Translucency3_g174381;
				Data3_g174381.Transmission = In_Transmission3_g174381;
				Data3_g174381.Thickness = In_Thickness3_g174381;
				Data3_g174381.Diffusion = In_Diffusion3_g174381;
				TVEVisualData Data4_g174402 = Data3_g174381;
				float Out_Dummy4_g174402 = 0;
				float3 Out_Albedo4_g174402 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174402 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174402 = float2( 0,0 );
				float3 Out_NormalWS4_g174402 = float3( 0,0,0 );
				float4 Out_Shader4_g174402 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174402 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174402 = 0;
				float Out_Grayscale4_g174402 = 0;
				float Out_Luminosity4_g174402 = 0;
				float Out_AlphaClip4_g174402 = 0;
				float Out_AlphaFade4_g174402 = 0;
				float3 Out_Translucency4_g174402 = float3( 0,0,0 );
				float Out_Transmission4_g174402 = 0;
				float Out_Thickness4_g174402 = 0;
				float Out_Diffusion4_g174402 = 0;
				Out_Dummy4_g174402 = Data4_g174402.Dummy;
				Out_Albedo4_g174402 = Data4_g174402.Albedo;
				Out_AlbedoRaw4_g174402 = Data4_g174402.AlbedoRaw;
				Out_NormalTS4_g174402 = Data4_g174402.NormalTS;
				Out_NormalWS4_g174402 = Data4_g174402.NormalWS;
				Out_Shader4_g174402 = Data4_g174402.Shader;
				Out_Emissive4_g174402= Data4_g174402.Emissive;
				Out_MultiMask4_g174402 = Data4_g174402.MultiMask;
				Out_Grayscale4_g174402 = Data4_g174402.Grayscale;
				Out_Luminosity4_g174402= Data4_g174402.Luminosity;
				Out_AlphaClip4_g174402 = Data4_g174402.AlphaClip;
				Out_AlphaFade4_g174402 = Data4_g174402.AlphaFade;
				Out_Translucency4_g174402 = Data4_g174402.Translucency;
				Out_Transmission4_g174402 = Data4_g174402.Transmission;
				Out_Thickness4_g174402 = Data4_g174402.Thickness;
				Out_Diffusion4_g174402 = Data4_g174402.Diffusion;
				half3 Visual_Albedo527_g174386 = Out_Albedo4_g174402;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174387) = _ThirdAlbedoTex;
				float localFilterTexture19_g174415 = ( 0.0 );
				SamplerState SamplerDefault19_g174415 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174415 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174415 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174415 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174415 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174415 = SamplerDefault19_g174415;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174415 = SamplerDefault19_g174415;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174415 = SamplerPoint19_g174415;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174415 = SamplerLow19_g174415;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174415 = SamplerMedium19_g174415;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174415 = SamplerHigh19_g174415;
				#endif
				SamplerState Sampler276_g174387 = SS19_g174415;
				half4 Local_LayerCoords790_g174386 = _third_coord_value;
				float4 temp_output_37_0_g174387 = Local_LayerCoords790_g174386;
				half4 Coords276_g174387 = temp_output_37_0_g174387;
				half2 TexCoord276_g174387 = IN.ase_texcoord2.xy;
				half4 localSampleMain276_g174387 = SampleMain( Texture276_g174387 , Sampler276_g174387 , Coords276_g174387 , TexCoord276_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler275_g174387 = SS19_g174415;
				half4 Coords275_g174387 = temp_output_37_0_g174387;
				half2 TexCoord275_g174387 = IN.ase_texcoord3.xy;
				half4 localSampleExtra275_g174387 = SampleExtra( Texture275_g174387 , Sampler275_g174387 , Coords275_g174387 , TexCoord275_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler238_g174387 = SS19_g174415;
				half4 Coords238_g174387 = temp_output_37_0_g174387;
				TVEModelData Data15_g174418 = Data16_g164566;
				float Out_Dummy15_g174418 = 0;
				float3 Out_PositionWS15_g174418 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174418 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174418 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174418 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174418 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174418 = float3( 0,0,0 );
				float4 Out_VertexData15_g174418 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174418 = float4( 0,0,0,0 );
				Out_Dummy15_g174418 = Data15_g174418.Dummy;
				Out_PositionWS15_g174418 = Data15_g174418.PositionWS;
				Out_PositionWO15_g174418 = Data15_g174418.PositionWO;
				Out_PivotWS15_g174418 = Data15_g174418.PivotWS;
				Out_PivotWO15_g174418 = Data15_g174418.PivotWO;
				Out_NormalWS15_g174418 = Data15_g174418.NormalWS;
				Out_ViewDirWS15_g174418 = Data15_g174418.ViewDirWS;
				Out_VertexData15_g174418 = Data15_g174418.VertexData;
				Out_BoundsData15_g174418 = Data15_g174418.BoundsData;
				half3 Model_PositionWO636_g174386 = Out_PositionWO15_g174418;
				float3 temp_output_279_0_g174387 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174387 = temp_output_279_0_g174387;
				half4 localSamplePlanar2D238_g174387 = SamplePlanar2D( Texture238_g174387 , Sampler238_g174387 , Coords238_g174387 , WorldPosition238_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler246_g174387 = SS19_g174415;
				half4 Coords246_g174387 = temp_output_37_0_g174387;
				half3 WorldPosition246_g174387 = temp_output_279_0_g174387;
				half3 Model_NormalWS869_g174386 = Out_NormalWS15_g174418;
				float3 temp_output_280_0_g174387 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174387 = temp_output_280_0_g174387;
				half4 localSamplePlanar3D246_g174387 = SamplePlanar3D( Texture246_g174387 , Sampler246_g174387 , Coords246_g174387 , WorldPosition246_g174387 , WorldNormal246_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler234_g174387 = SS19_g174415;
				float4 Coords234_g174387 = temp_output_37_0_g174387;
				float3 WorldPosition234_g174387 = temp_output_279_0_g174387;
				float4 localSampleStochastic2D234_g174387 = SampleStochastic2D( Texture234_g174387 , Sampler234_g174387 , Coords234_g174387 , WorldPosition234_g174387 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174387) = _ThirdAlbedoTex;
				SamplerState Sampler263_g174387 = SS19_g174415;
				half4 Coords263_g174387 = temp_output_37_0_g174387;
				half3 WorldPosition263_g174387 = temp_output_279_0_g174387;
				half3 WorldNormal263_g174387 = temp_output_280_0_g174387;
				half4 localSampleStochastic3D263_g174387 = SampleStochastic3D( Texture263_g174387 , Sampler263_g174387 , Coords263_g174387 , WorldPosition263_g174387 , WorldNormal263_g174387 );
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float4 staticSwitch693_g174386 = localSampleMain276_g174387;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float4 staticSwitch693_g174386 = localSampleExtra275_g174387;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float4 staticSwitch693_g174386 = localSamplePlanar2D238_g174387;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float4 staticSwitch693_g174386 = localSamplePlanar3D246_g174387;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch693_g174386 = localSampleStochastic2D234_g174387;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch693_g174386 = localSampleStochastic3D263_g174387;
				#else
				float4 staticSwitch693_g174386 = localSampleMain276_g174387;
				#endif
				half4 Local_AlbedoTex777_g174386 = staticSwitch693_g174386;
				float3 lerpResult716_g174386 = lerp( float3( 1,1,1 ) , (Local_AlbedoTex777_g174386).xyz , _ThirdAlbedoValue);
				half3 Local_AlbedoRGB771_g174386 = lerpResult716_g174386;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174389) = _ThirdShaderTex;
				float localFilterTexture30_g174417 = ( 0.0 );
				SamplerState SamplerDefault30_g174417 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174417 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174417 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174417 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174417 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174417 = SamplerDefault30_g174417;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174417 = SamplerDefault30_g174417;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174417 = SamplerPoint30_g174417;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174417 = SamplerLow30_g174417;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174417 = SamplerMedium30_g174417;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174417 = SamplerHigh30_g174417;
				#endif
				SamplerState Sampler276_g174389 = SS30_g174417;
				float4 temp_output_37_0_g174389 = Local_LayerCoords790_g174386;
				half4 Coords276_g174389 = temp_output_37_0_g174389;
				half2 TexCoord276_g174389 = IN.ase_texcoord2.xy;
				half4 localSampleMain276_g174389 = SampleMain( Texture276_g174389 , Sampler276_g174389 , Coords276_g174389 , TexCoord276_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174389) = _ThirdShaderTex;
				SamplerState Sampler275_g174389 = SS30_g174417;
				half4 Coords275_g174389 = temp_output_37_0_g174389;
				half2 TexCoord275_g174389 = IN.ase_texcoord3.xy;
				half4 localSampleExtra275_g174389 = SampleExtra( Texture275_g174389 , Sampler275_g174389 , Coords275_g174389 , TexCoord275_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174389) = _ThirdShaderTex;
				SamplerState Sampler238_g174389 = SS30_g174417;
				half4 Coords238_g174389 = temp_output_37_0_g174389;
				float3 temp_output_279_0_g174389 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174389 = temp_output_279_0_g174389;
				half4 localSamplePlanar2D238_g174389 = SamplePlanar2D( Texture238_g174389 , Sampler238_g174389 , Coords238_g174389 , WorldPosition238_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174389) = _ThirdShaderTex;
				SamplerState Sampler246_g174389 = SS30_g174417;
				half4 Coords246_g174389 = temp_output_37_0_g174389;
				half3 WorldPosition246_g174389 = temp_output_279_0_g174389;
				float3 temp_output_280_0_g174389 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174389 = temp_output_280_0_g174389;
				half4 localSamplePlanar3D246_g174389 = SamplePlanar3D( Texture246_g174389 , Sampler246_g174389 , Coords246_g174389 , WorldPosition246_g174389 , WorldNormal246_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174389) = _ThirdShaderTex;
				SamplerState Sampler234_g174389 = SS30_g174417;
				float4 Coords234_g174389 = temp_output_37_0_g174389;
				float3 WorldPosition234_g174389 = temp_output_279_0_g174389;
				float4 localSampleStochastic2D234_g174389 = SampleStochastic2D( Texture234_g174389 , Sampler234_g174389 , Coords234_g174389 , WorldPosition234_g174389 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174389) = _ThirdShaderTex;
				SamplerState Sampler263_g174389 = SS30_g174417;
				half4 Coords263_g174389 = temp_output_37_0_g174389;
				half3 WorldPosition263_g174389 = temp_output_279_0_g174389;
				half3 WorldNormal263_g174389 = temp_output_280_0_g174389;
				half4 localSampleStochastic3D263_g174389 = SampleStochastic3D( Texture263_g174389 , Sampler263_g174389 , Coords263_g174389 , WorldPosition263_g174389 , WorldNormal263_g174389 );
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float4 staticSwitch722_g174386 = localSampleMain276_g174389;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float4 staticSwitch722_g174386 = localSampleExtra275_g174389;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float4 staticSwitch722_g174386 = localSamplePlanar2D238_g174389;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float4 staticSwitch722_g174386 = localSamplePlanar3D246_g174389;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch722_g174386 = localSampleStochastic2D234_g174389;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch722_g174386 = localSampleStochastic3D263_g174389;
				#else
				float4 staticSwitch722_g174386 = localSampleMain276_g174389;
				#endif
				half4 Local_ShaderTex775_g174386 = staticSwitch722_g174386;
				float lerpResult739_g174386 = lerp( 1.0 , (Local_ShaderTex775_g174386).y , _ThirdOcclusionValue);
				float4 appendResult749_g174386 = (float4(( (Local_ShaderTex775_g174386).x * _ThirdMetallicValue ) , lerpResult739_g174386 , (Local_ShaderTex775_g174386).z , ( (Local_ShaderTex775_g174386).w * _ThirdSmoothnessValue )));
				half4 Local_Masks750_g174386 = appendResult749_g174386;
				float clampResult17_g174392 = clamp( (Local_Masks750_g174386).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174393 = _ThirdMultiRemap.x;
				float temp_output_10_0_g174393 = ( _ThirdMultiRemap.y - temp_output_7_0_g174393 );
				float temp_output_765_0_g174386 = saturate( ( ( clampResult17_g174392 - temp_output_7_0_g174393 ) / ( temp_output_10_0_g174393 + 0.0001 ) ) );
				half Local_MultiMask767_g174386 = temp_output_765_0_g174386;
				float lerpResult705_g174386 = lerp( 1.0 , Local_MultiMask767_g174386 , _ThirdColorMode);
				float4 lerpResult706_g174386 = lerp( _ThirdColorTwo , _ThirdColor , lerpResult705_g174386);
				half3 Local_ColorRGB774_g174386 = (lerpResult706_g174386).rgb;
				half3 Local_Albedo768_g174386 = ( Local_AlbedoRGB771_g174386 * Local_ColorRGB774_g174386 );
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174410 = 2.0;
				#else
				float staticSwitch1_g174410 = 4.594794;
				#endif
				float3 lerpResult985_g174386 = lerp( Local_Albedo768_g174386 , ( Visual_Albedo527_g174386 * Local_Albedo768_g174386 * staticSwitch1_g174410 ) , _ThirdBlendAlbedoValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174413) = _ThirdMaskTex;
				SamplerState Sampler276_g174413 = sampler_Linear_Repeat;
				half4 Local_MaskCoords813_g174386 = _third_mask_coord_value;
				float4 temp_output_37_0_g174413 = Local_MaskCoords813_g174386;
				half4 Coords276_g174413 = temp_output_37_0_g174413;
				half2 TexCoord276_g174413 = IN.ase_texcoord2.xy;
				half4 localSampleMain276_g174413 = SampleMain( Texture276_g174413 , Sampler276_g174413 , Coords276_g174413 , TexCoord276_g174413 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174413) = _ThirdMaskTex;
				SamplerState Sampler275_g174413 = sampler_Linear_Repeat;
				half4 Coords275_g174413 = temp_output_37_0_g174413;
				half2 TexCoord275_g174413 = IN.ase_texcoord3.xy;
				half4 localSampleExtra275_g174413 = SampleExtra( Texture275_g174413 , Sampler275_g174413 , Coords275_g174413 , TexCoord275_g174413 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174413) = _ThirdMaskTex;
				SamplerState Sampler238_g174413 = sampler_Linear_Repeat;
				half4 Coords238_g174413 = temp_output_37_0_g174413;
				float3 temp_output_279_0_g174413 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174413 = temp_output_279_0_g174413;
				half4 localSamplePlanar2D238_g174413 = SamplePlanar2D( Texture238_g174413 , Sampler238_g174413 , Coords238_g174413 , WorldPosition238_g174413 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174413) = _ThirdMaskTex;
				SamplerState Sampler246_g174413 = sampler_Linear_Repeat;
				half4 Coords246_g174413 = temp_output_37_0_g174413;
				half3 WorldPosition246_g174413 = temp_output_279_0_g174413;
				float3 temp_output_280_0_g174413 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174413 = temp_output_280_0_g174413;
				half4 localSamplePlanar3D246_g174413 = SamplePlanar3D( Texture246_g174413 , Sampler246_g174413 , Coords246_g174413 , WorldPosition246_g174413 , WorldNormal246_g174413 );
				#if defined( TVE_THIRD_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch817_g174386 = localSampleMain276_g174413;
				#elif defined( TVE_THIRD_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch817_g174386 = localSampleExtra275_g174413;
				#elif defined( TVE_THIRD_MASK_SAMPLE_PLANAR_2D )
				float4 staticSwitch817_g174386 = localSamplePlanar2D238_g174413;
				#elif defined( TVE_THIRD_MASK_SAMPLE_PLANAR_3D )
				float4 staticSwitch817_g174386 = localSamplePlanar3D246_g174413;
				#else
				float4 staticSwitch817_g174386 = localSampleMain276_g174413;
				#endif
				half4 Local_MaskTex861_g174386 = staticSwitch817_g174386;
				float clampResult17_g174397 = clamp( (Local_MaskTex861_g174386).y , 0.0001 , 0.9999 );
				float temp_output_7_0_g174398 = _ThirdMaskRemap.x;
				float temp_output_10_0_g174398 = ( _ThirdMaskRemap.y - temp_output_7_0_g174398 );
				float lerpResult1028_g174386 = lerp( 1.0 , saturate( ( ( clampResult17_g174397 - temp_output_7_0_g174398 ) / ( temp_output_10_0_g174398 + 0.0001 ) ) ) , _ThirdMaskValue);
				half Detail_TexMask429_g174386 = lerpResult1028_g174386;
				half4 Model_VertexMasks960_g174386 = Out_VertexData15_g174418;
				float4 break961_g174386 = Model_VertexMasks960_g174386;
				float4 break33_g174401 = _third_vert_mode;
				float temp_output_30_0_g174401 = ( break961_g174386.x * break33_g174401.x );
				float temp_output_29_0_g174401 = ( break961_g174386.y * break33_g174401.y );
				float temp_output_31_0_g174401 = ( break961_g174386.z * break33_g174401.z );
				float temp_output_28_0_g174401 = ( temp_output_30_0_g174401 + temp_output_29_0_g174401 + temp_output_31_0_g174401 + ( break961_g174386.w * break33_g174401.w ) );
				float clampResult17_g174395 = clamp( temp_output_28_0_g174401 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174396 = _ThirdMeshRemap.x;
				float temp_output_10_0_g174396 = ( _ThirdMeshRemap.y - temp_output_7_0_g174396 );
				float lerpResult1026_g174386 = lerp( 1.0 , saturate( ( ( clampResult17_g174395 - temp_output_7_0_g174396 ) / ( temp_output_10_0_g174396 + 0.0001 ) ) ) , _ThirdMeshValue);
				float temp_output_6_0_g174412 = lerpResult1026_g174386;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174412 = ( temp_output_6_0_g174412 + ( _ThirdMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174412 = temp_output_6_0_g174412;
				#endif
				float temp_output_992_0_g174386 = staticSwitch14_g174412;
				half Blend_VertMask913_g174386 = temp_output_992_0_g174386;
				half3 Visual_NormalWS953_g174386 = Out_NormalWS4_g174402;
				float clampResult17_g174399 = clamp( saturate( (Visual_NormalWS953_g174386).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174400 = _ThirdProjRemap.x;
				float temp_output_10_0_g174400 = ( _ThirdProjRemap.y - temp_output_7_0_g174400 );
				float lerpResult1004_g174386 = lerp( 1.0 , saturate( ( ( clampResult17_g174399 - temp_output_7_0_g174400 ) / ( temp_output_10_0_g174400 + 0.0001 ) ) ) , _ThirdProjValue);
				half Blend_ProjMask912_g174386 = lerpResult1004_g174386;
				TVEGlobalData Data15_g174404 = Data204_g173897;
				float Out_Dummy15_g174404 = 0;
				float4 Out_CoatParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174404 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174404 = float4( 0,0,0,0 );
				Out_Dummy15_g174404 = Data15_g174404.Dummy;
				Out_CoatParams15_g174404 = Data15_g174404.CoatParams;
				Out_PaintParams15_g174404 = Data15_g174404.PaintParams;
				Out_GlowParams15_g174404 = Data15_g174404.GlowParams;
				Out_AtmoParams15_g174404= Data15_g174404.AtmoParams;
				Out_FadeParams15_g174404= Data15_g174404.FadeParams;
				Out_FormParams15_g174404 = Data15_g174404.FormParams;
				Out_LandParams15_g174404 = Data15_g174404.LandParams;
				Out_WindParams15_g174404 = Data15_g174404.WindParams;
				Out_PushParams15_g174404 = Data15_g174404.PushParams;
				half4 Global_CoatParams972_g174386 = Out_CoatParams15_g174404;
				float lerpResult1023_g174386 = lerp( 1.0 , (Global_CoatParams972_g174386).y , TVE_IsEnabled);
				#ifdef TVE_THIRD_ELEMENT
				float staticSwitch965_g174386 = lerpResult1023_g174386;
				#else
				float staticSwitch965_g174386 = 1.0;
				#endif
				half Blend_GlobalMask968_g174386 = staticSwitch965_g174386;
				float temp_output_432_0_g174386 = ( _ThirdIntensityValue * Detail_TexMask429_g174386 * Blend_VertMask913_g174386 * Blend_ProjMask912_g174386 * Blend_GlobalMask968_g174386 );
				float clampResult17_g174406 = clamp( temp_output_432_0_g174386 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174405 = _ThirdBlendRemap.x;
				float temp_output_10_0_g174405 = ( _ThirdBlendRemap.y - temp_output_7_0_g174405 );
				half Detail_Mask412_g174386 = ( saturate( ( ( clampResult17_g174406 - temp_output_7_0_g174405 ) / ( temp_output_10_0_g174405 + 0.0001 ) ) ) * _ThirdBlendIntensityValue );
				float3 lerpResult989_g174386 = lerp( Visual_Albedo527_g174386 , lerpResult985_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float3 staticSwitch415_g174386 = lerpResult989_g174386;
				#else
				float3 staticSwitch415_g174386 = Visual_Albedo527_g174386;
				#endif
				half3 Final_Albedo601_g174386 = staticSwitch415_g174386;
				float3 In_Albedo3_g174403 = Final_Albedo601_g174386;
				float3 In_AlbedoRaw3_g174403 = Final_Albedo601_g174386;
				half2 Visual_NormalTS529_g174386 = Out_NormalTS4_g174402;
				float2 lerpResult40_g174408 = lerp( float2( 0,0 ) , Visual_NormalTS529_g174386 , _ThirdBlendNormalValue);
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174388) = _ThirdNormalTex;
				float localFilterTexture29_g174416 = ( 0.0 );
				SamplerState SamplerDefault29_g174416 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174416 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174416 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174416 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174416 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174416 = SamplerDefault29_g174416;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174416 = SamplerDefault29_g174416;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174416 = SamplerPoint29_g174416;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174416 = SamplerLow29_g174416;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174416 = SamplerMedium29_g174416;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174416 = SamplerHigh29_g174416;
				#endif
				SamplerState Sampler276_g174388 = SS29_g174416;
				float4 temp_output_37_0_g174388 = Local_LayerCoords790_g174386;
				half4 Coords276_g174388 = temp_output_37_0_g174388;
				half2 TexCoord276_g174388 = IN.ase_texcoord2.xy;
				half4 localSampleMain276_g174388 = SampleMain( Texture276_g174388 , Sampler276_g174388 , Coords276_g174388 , TexCoord276_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174388) = _ThirdNormalTex;
				SamplerState Sampler275_g174388 = SS29_g174416;
				half4 Coords275_g174388 = temp_output_37_0_g174388;
				half2 TexCoord275_g174388 = IN.ase_texcoord3.xy;
				half4 localSampleExtra275_g174388 = SampleExtra( Texture275_g174388 , Sampler275_g174388 , Coords275_g174388 , TexCoord275_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174388) = _ThirdNormalTex;
				SamplerState Sampler238_g174388 = SS29_g174416;
				half4 Coords238_g174388 = temp_output_37_0_g174388;
				float3 temp_output_279_0_g174388 = Model_PositionWO636_g174386;
				half3 WorldPosition238_g174388 = temp_output_279_0_g174388;
				half4 localSamplePlanar2D238_g174388 = SamplePlanar2D( Texture238_g174388 , Sampler238_g174388 , Coords238_g174388 , WorldPosition238_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174388) = _ThirdNormalTex;
				SamplerState Sampler246_g174388 = SS29_g174416;
				half4 Coords246_g174388 = temp_output_37_0_g174388;
				half3 WorldPosition246_g174388 = temp_output_279_0_g174388;
				float3 temp_output_280_0_g174388 = Model_NormalWS869_g174386;
				half3 WorldNormal246_g174388 = temp_output_280_0_g174388;
				half4 localSamplePlanar3D246_g174388 = SamplePlanar3D( Texture246_g174388 , Sampler246_g174388 , Coords246_g174388 , WorldPosition246_g174388 , WorldNormal246_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174388) = _ThirdNormalTex;
				SamplerState Sampler234_g174388 = SS29_g174416;
				float4 Coords234_g174388 = temp_output_37_0_g174388;
				float3 WorldPosition234_g174388 = temp_output_279_0_g174388;
				float4 localSampleStochastic2D234_g174388 = SampleStochastic2D( Texture234_g174388 , Sampler234_g174388 , Coords234_g174388 , WorldPosition234_g174388 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174388) = _ThirdNormalTex;
				SamplerState Sampler263_g174388 = SS29_g174416;
				half4 Coords263_g174388 = temp_output_37_0_g174388;
				half3 WorldPosition263_g174388 = temp_output_279_0_g174388;
				half3 WorldNormal263_g174388 = temp_output_280_0_g174388;
				half4 localSampleStochastic3D263_g174388 = SampleStochastic3D( Texture263_g174388 , Sampler263_g174388 , Coords263_g174388 , WorldPosition263_g174388 , WorldNormal263_g174388 );
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float4 staticSwitch698_g174386 = localSampleMain276_g174388;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float4 staticSwitch698_g174386 = localSampleExtra275_g174388;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float4 staticSwitch698_g174386 = localSamplePlanar2D238_g174388;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float4 staticSwitch698_g174386 = localSamplePlanar3D246_g174388;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch698_g174386 = localSampleStochastic2D234_g174388;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch698_g174386 = localSampleStochastic3D263_g174388;
				#else
				float4 staticSwitch698_g174386 = localSampleMain276_g174388;
				#endif
				half4 Local_NormalTex776_g174386 = staticSwitch698_g174386;
				half4 Normal_Packed45_g174390 = Local_NormalTex776_g174386;
				float2 appendResult58_g174390 = (float2(( (Normal_Packed45_g174390).x * (Normal_Packed45_g174390).w ) , (Normal_Packed45_g174390).y));
				half2 Normal_Default50_g174390 = appendResult58_g174390;
				half2 Normal_ASTC41_g174390 = (Normal_Packed45_g174390).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174390 = Normal_ASTC41_g174390;
				#else
				float2 staticSwitch38_g174390 = Normal_Default50_g174390;
				#endif
				half2 Normal_NO_DTX544_g174390 = (Normal_Packed45_g174390).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174390 = Normal_NO_DTX544_g174390;
				#else
				float2 staticSwitch37_g174390 = staticSwitch38_g174390;
				#endif
				float2 temp_output_724_0_g174386 = ( (staticSwitch37_g174390*2.0 + -1.0) * _ThirdNormalValue );
				half2 Normal_Planar45_g174391 = temp_output_724_0_g174386;
				float2 break71_g174391 = Normal_Planar45_g174391;
				float3 appendResult72_g174391 = (float3(break71_g174391.x , 0.0 , break71_g174391.y));
				float2 temp_output_858_0_g174386 = (mul( ase_worldToTangent, appendResult72_g174391 )).xy;
				#if defined( TVE_THIRD_SAMPLE_MAIN_UV )
				float2 staticSwitch727_g174386 = temp_output_724_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_EXTRA_UV )
				float2 staticSwitch727_g174386 = temp_output_724_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_2D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_PLANAR_3D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_2D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#elif defined( TVE_THIRD_SAMPLE_STOCHASTIC_3D )
				float2 staticSwitch727_g174386 = temp_output_858_0_g174386;
				#else
				float2 staticSwitch727_g174386 = temp_output_724_0_g174386;
				#endif
				half2 Local_NormalTS729_g174386 = staticSwitch727_g174386;
				float2 temp_output_36_0_g174408 = ( lerpResult40_g174408 + Local_NormalTS729_g174386 );
				float2 lerpResult405_g174386 = lerp( Visual_NormalTS529_g174386 , temp_output_36_0_g174408 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float2 staticSwitch418_g174386 = lerpResult405_g174386;
				#else
				float2 staticSwitch418_g174386 = Visual_NormalTS529_g174386;
				#endif
				half2 Final_NormalTS612_g174386 = staticSwitch418_g174386;
				float2 In_NormalTS3_g174403 = Final_NormalTS612_g174386;
				float3 appendResult68_g174409 = (float3(Final_NormalTS612_g174386 , 1.0));
				float3 tanNormal74_g174409 = appendResult68_g174409;
				float3 worldNormal74_g174409 = normalize( float3(dot(tanToWorld0,tanNormal74_g174409), dot(tanToWorld1,tanNormal74_g174409), dot(tanToWorld2,tanNormal74_g174409)) );
				half3 Final_NormalWS956_g174386 = worldNormal74_g174409;
				float3 In_NormalWS3_g174403 = Final_NormalWS956_g174386;
				half4 Visual_Shader531_g174386 = Out_Shader4_g174402;
				float4 lerpResult1000_g174386 = lerp( Local_Masks750_g174386 , ( Visual_Shader531_g174386 * Local_Masks750_g174386 ) , _ThirdBlendShaderValue);
				float4 lerpResult998_g174386 = lerp( Visual_Shader531_g174386 , lerpResult1000_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float4 staticSwitch451_g174386 = lerpResult998_g174386;
				#else
				float4 staticSwitch451_g174386 = Visual_Shader531_g174386;
				#endif
				half4 Final_Masks613_g174386 = staticSwitch451_g174386;
				float4 In_Shader3_g174403 = Final_Masks613_g174386;
				float4 In_Emissive3_g174403 = Out_Emissive4_g174402;
				float3 temp_output_3_0_g174411 = Final_Albedo601_g174386;
				float dotResult20_g174411 = dot( temp_output_3_0_g174411 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale615_g174386 = dotResult20_g174411;
				float In_Grayscale3_g174403 = Final_Grayscale615_g174386;
				float clampResult651_g174386 = clamp( saturate( ( Final_Grayscale615_g174386 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity652_g174386 = clampResult651_g174386;
				float In_Luminosity3_g174403 = Final_Luminosity652_g174386;
				half Visual_MultiMask547_g174386 = Out_MultiMask4_g174402;
				float lerpResult477_g174386 = lerp( Visual_MultiMask547_g174386 , Local_MultiMask767_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float staticSwitch482_g174386 = lerpResult477_g174386;
				#else
				float staticSwitch482_g174386 = Visual_MultiMask547_g174386;
				#endif
				half Final_MultiMask572_g174386 = staticSwitch482_g174386;
				float In_MultiMask3_g174403 = Final_MultiMask572_g174386;
				half Visual_AlphaClip559_g174386 = Out_AlphaClip4_g174402;
				float temp_output_718_0_g174386 = (Local_AlbedoTex777_g174386).w;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch924_g174386 = ( temp_output_718_0_g174386 - _ThirdAlphaClipValue );
				#else
				float staticSwitch924_g174386 = temp_output_718_0_g174386;
				#endif
				half Local_AlphaClip772_g174386 = staticSwitch924_g174386;
				float lerpResult448_g174386 = lerp( Visual_AlphaClip559_g174386 , Local_AlphaClip772_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float staticSwitch564_g174386 = lerpResult448_g174386;
				#else
				float staticSwitch564_g174386 = Visual_AlphaClip559_g174386;
				#endif
				half Final_AlphaClip602_g174386 = staticSwitch564_g174386;
				float In_AlphaClip3_g174403 = Final_AlphaClip602_g174386;
				half Visual_AlphaFade588_g174386 = Out_AlphaFade4_g174402;
				half Local_AlphaFade773_g174386 = (lerpResult706_g174386).a;
				float lerpResult604_g174386 = lerp( Visual_AlphaFade588_g174386 , Local_AlphaFade773_g174386 , Detail_Mask412_g174386);
				#ifdef TVE_THIRD
				float staticSwitch608_g174386 = lerpResult604_g174386;
				#else
				float staticSwitch608_g174386 = Visual_AlphaFade588_g174386;
				#endif
				half Final_AlphaFade611_g174386 = staticSwitch608_g174386;
				float In_AlphaFade3_g174403 = Final_AlphaFade611_g174386;
				float3 In_Translucency3_g174403 = Out_Translucency4_g174402;
				float In_Transmission3_g174403 = Out_Transmission4_g174402;
				float In_Thickness3_g174403 = Out_Thickness4_g174402;
				float In_Diffusion3_g174403 = Out_Diffusion4_g174402;
				Data3_g174403.Dummy = In_Dummy3_g174403;
				Data3_g174403.Albedo = In_Albedo3_g174403;
				Data3_g174403.AlbedoRaw = In_AlbedoRaw3_g174403;
				Data3_g174403.NormalTS = In_NormalTS3_g174403;
				Data3_g174403.NormalWS = In_NormalWS3_g174403;
				Data3_g174403.Shader = In_Shader3_g174403;
				Data3_g174403.Emissive= In_Emissive3_g174403;
				Data3_g174403.MultiMask = In_MultiMask3_g174403;
				Data3_g174403.Grayscale = In_Grayscale3_g174403;
				Data3_g174403.Luminosity = In_Luminosity3_g174403;
				Data3_g174403.AlphaClip = In_AlphaClip3_g174403;
				Data3_g174403.AlphaFade = In_AlphaFade3_g174403;
				Data3_g174403.Translucency = In_Translucency3_g174403;
				Data3_g174403.Transmission = In_Transmission3_g174403;
				Data3_g174403.Thickness = In_Thickness3_g174403;
				Data3_g174403.Diffusion = In_Diffusion3_g174403;
				TVEVisualData Data4_g174428 = Data3_g174403;
				float Out_Dummy4_g174428 = 0;
				float3 Out_Albedo4_g174428 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174428 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174428 = float2( 0,0 );
				float3 Out_NormalWS4_g174428 = float3( 0,0,0 );
				float4 Out_Shader4_g174428 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174428 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174428 = 0;
				float Out_Grayscale4_g174428 = 0;
				float Out_Luminosity4_g174428 = 0;
				float Out_AlphaClip4_g174428 = 0;
				float Out_AlphaFade4_g174428 = 0;
				float3 Out_Translucency4_g174428 = float3( 0,0,0 );
				float Out_Transmission4_g174428 = 0;
				float Out_Thickness4_g174428 = 0;
				float Out_Diffusion4_g174428 = 0;
				Out_Dummy4_g174428 = Data4_g174428.Dummy;
				Out_Albedo4_g174428 = Data4_g174428.Albedo;
				Out_AlbedoRaw4_g174428 = Data4_g174428.AlbedoRaw;
				Out_NormalTS4_g174428 = Data4_g174428.NormalTS;
				Out_NormalWS4_g174428 = Data4_g174428.NormalWS;
				Out_Shader4_g174428 = Data4_g174428.Shader;
				Out_Emissive4_g174428= Data4_g174428.Emissive;
				Out_MultiMask4_g174428 = Data4_g174428.MultiMask;
				Out_Grayscale4_g174428 = Data4_g174428.Grayscale;
				Out_Luminosity4_g174428= Data4_g174428.Luminosity;
				Out_AlphaClip4_g174428 = Data4_g174428.AlphaClip;
				Out_AlphaFade4_g174428 = Data4_g174428.AlphaFade;
				Out_Translucency4_g174428 = Data4_g174428.Translucency;
				Out_Transmission4_g174428 = Data4_g174428.Transmission;
				Out_Thickness4_g174428 = Data4_g174428.Thickness;
				Out_Diffusion4_g174428 = Data4_g174428.Diffusion;
				half3 Visual_Albedo527_g174425 = Out_Albedo4_g174428;
				float localHeightBasedBlending7362_g174452 = ( 0.0 );
				float3 ase_worldPos = IN.ase_texcoord9.xyz;
				float4 appendResult9125_g174452 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
				float4 temp_output_35_0_g174560 = appendResult9125_g174452;
				float2 InputScale48_g174560 = (temp_output_35_0_g174560).zw;
				half2 FinalScale53_g174560 = ( 1.0 / InputScale48_g174560 );
				float2 InputPosition52_g174560 = (temp_output_35_0_g174560).xy;
				half2 FinalPosition58_g174560 = -( FinalScale53_g174560 * InputPosition52_g174560 );
				float2 temp_output_65_0_g174560 = ( ( (ase_worldPos).xz * FinalScale53_g174560 ) + FinalPosition58_g174560 );
				float4 temp_output_70_0_g174560 = _TerrainControlTex1_TexelSize;
				float2 InputTexelSize68_g174560 = (temp_output_70_0_g174560).zw;
				float2 temp_cast_37 = (1.0).xx;
				float2 InputTexelRecip69_g174560 = (temp_output_70_0_g174560).xy;
				float2 Terrain_Control_UV7873_g174452 = ( ( ( temp_output_65_0_g174560 / ( 1.0 / ( InputTexelSize68_g174560 - temp_cast_37 ) ) ) + 0.5 ) * InputTexelRecip69_g174560 );
				half4 Terrain_Control_047365_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_047362_g174452 = Terrain_Control_047365_g174452;
				half4 Terrain_Control_087366_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_087362_g174452 = Terrain_Control_087366_g174452;
				half4 Terrain_Control_127712_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_127362_g174452 = Terrain_Control_127712_g174452;
				half4 Terrain_Control_167711_g174452 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g174452 );
				float4 control_167362_g174452 = Terrain_Control_167711_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174497) = _TerrainShaderTex1;
				float localFilterTexture30_g174557 = ( 0.0 );
				SamplerState SamplerDefault30_g174557 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g174557 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g174557 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g174557 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g174557 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g174557 = SamplerDefault30_g174557;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g174557 = SamplerDefault30_g174557;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g174557 = SamplerPoint30_g174557;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g174557 = SamplerLow30_g174557;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g174557 = SamplerMedium30_g174557;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g174557 = SamplerHigh30_g174557;
				#endif
				SamplerState Sampler238_g174497 = SS30_g174557;
				half4 Input_Terrain_Coords_016785_g174452 = _TerrainCoord1;
				float4 temp_output_37_0_g174497 = Input_Terrain_Coords_016785_g174452;
				half4 Coords238_g174497 = temp_output_37_0_g174497;
				TVEModelData Data15_g174562 = Data16_g164566;
				float Out_Dummy15_g174562 = 0;
				float3 Out_PositionWS15_g174562 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174562 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174562 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174562 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174562 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174562 = float3( 0,0,0 );
				float4 Out_VertexData15_g174562 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174562 = float4( 0,0,0,0 );
				Out_Dummy15_g174562 = Data15_g174562.Dummy;
				Out_PositionWS15_g174562 = Data15_g174562.PositionWS;
				Out_PositionWO15_g174562 = Data15_g174562.PositionWO;
				Out_PivotWS15_g174562 = Data15_g174562.PivotWS;
				Out_PivotWO15_g174562 = Data15_g174562.PivotWO;
				Out_NormalWS15_g174562 = Data15_g174562.NormalWS;
				Out_ViewDirWS15_g174562 = Data15_g174562.ViewDirWS;
				Out_VertexData15_g174562 = Data15_g174562.VertexData;
				Out_BoundsData15_g174562 = Data15_g174562.BoundsData;
				half3 Model_PositionWO636_g174425 = Out_PositionWO15_g174562;
				half3 Input_Position9197_g174452 = Model_PositionWO636_g174425;
				float3 temp_output_279_0_g174497 = Input_Position9197_g174452;
				half3 WorldPosition238_g174497 = temp_output_279_0_g174497;
				half4 localSamplePlanar2D238_g174497 = SamplePlanar2D( Texture238_g174497 , Sampler238_g174497 , Coords238_g174497 , WorldPosition238_g174497 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174497) = _TerrainShaderTex1;
				SamplerState Sampler246_g174497 = SS30_g174557;
				half4 Coords246_g174497 = temp_output_37_0_g174497;
				half3 WorldPosition246_g174497 = temp_output_279_0_g174497;
				half3 Model_NormalRawWS869_g174425 = Out_NormalWS15_g174562;
				half3 Input_Normal9199_g174452 = Model_NormalRawWS869_g174425;
				float3 temp_output_280_0_g174497 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174497 = temp_output_280_0_g174497;
				half4 localSamplePlanar3D246_g174497 = SamplePlanar3D( Texture246_g174497 , Sampler246_g174497 , Coords246_g174497 , WorldPosition246_g174497 , WorldNormal246_g174497 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174497) = _TerrainShaderTex1;
				SamplerState Sampler234_g174497 = SS30_g174557;
				float4 Coords234_g174497 = temp_output_37_0_g174497;
				float3 WorldPosition234_g174497 = temp_output_279_0_g174497;
				float4 localSampleStochastic2D234_g174497 = SampleStochastic2D( Texture234_g174497 , Sampler234_g174497 , Coords234_g174497 , WorldPosition234_g174497 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174497) = _TerrainShaderTex1;
				SamplerState Sampler263_g174497 = SS30_g174557;
				half4 Coords263_g174497 = temp_output_37_0_g174497;
				half3 WorldPosition263_g174497 = temp_output_279_0_g174497;
				half3 WorldNormal263_g174497 = temp_output_280_0_g174497;
				half4 localSampleStochastic3D263_g174497 = SampleStochastic3D( Texture263_g174497 , Sampler263_g174497 , Coords263_g174497 , WorldPosition263_g174497 , WorldNormal263_g174497 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8639_g174452 = localSamplePlanar2D238_g174497;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8639_g174452 = localSamplePlanar3D246_g174497;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8639_g174452 = localSampleStochastic2D234_g174497;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8639_g174452 = localSampleStochastic3D263_g174497;
				#else
				float4 staticSwitch8639_g174452 = localSamplePlanar2D238_g174497;
				#endif
				float4 temp_output_7_0_g174454 = _TerrainShaderMin1;
				float4 temp_output_10_0_g174454 = ( _TerrainShaderMax1 - temp_output_7_0_g174454 );
				float4 temp_output_6970_0_g174452 = saturate( ( ( staticSwitch8639_g174452 - temp_output_7_0_g174454 ) / ( temp_output_10_0_g174454 + 0.0001 ) ) );
				half4 Masks_015_g174458 = temp_output_6970_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174501) = _TerrainShaderTex2;
				SamplerState Sampler238_g174501 = SS30_g174557;
				half4 Input_Terrain_Coords_026787_g174452 = _TerrainCoord2;
				float4 temp_output_37_0_g174501 = Input_Terrain_Coords_026787_g174452;
				half4 Coords238_g174501 = temp_output_37_0_g174501;
				float3 temp_output_279_0_g174501 = Input_Position9197_g174452;
				half3 WorldPosition238_g174501 = temp_output_279_0_g174501;
				half4 localSamplePlanar2D238_g174501 = SamplePlanar2D( Texture238_g174501 , Sampler238_g174501 , Coords238_g174501 , WorldPosition238_g174501 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174501) = _TerrainShaderTex2;
				SamplerState Sampler246_g174501 = SS30_g174557;
				half4 Coords246_g174501 = temp_output_37_0_g174501;
				half3 WorldPosition246_g174501 = temp_output_279_0_g174501;
				float3 temp_output_280_0_g174501 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174501 = temp_output_280_0_g174501;
				half4 localSamplePlanar3D246_g174501 = SamplePlanar3D( Texture246_g174501 , Sampler246_g174501 , Coords246_g174501 , WorldPosition246_g174501 , WorldNormal246_g174501 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174501) = _TerrainShaderTex2;
				SamplerState Sampler234_g174501 = SS30_g174557;
				float4 Coords234_g174501 = temp_output_37_0_g174501;
				float3 WorldPosition234_g174501 = temp_output_279_0_g174501;
				float4 localSampleStochastic2D234_g174501 = SampleStochastic2D( Texture234_g174501 , Sampler234_g174501 , Coords234_g174501 , WorldPosition234_g174501 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174501) = _TerrainShaderTex2;
				SamplerState Sampler263_g174501 = SS30_g174557;
				half4 Coords263_g174501 = temp_output_37_0_g174501;
				half3 WorldPosition263_g174501 = temp_output_279_0_g174501;
				half3 WorldNormal263_g174501 = temp_output_280_0_g174501;
				half4 localSampleStochastic3D263_g174501 = SampleStochastic3D( Texture263_g174501 , Sampler263_g174501 , Coords263_g174501 , WorldPosition263_g174501 , WorldNormal263_g174501 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8640_g174452 = localSamplePlanar2D238_g174501;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8640_g174452 = localSamplePlanar3D246_g174501;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8640_g174452 = localSampleStochastic2D234_g174501;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8640_g174452 = localSampleStochastic3D263_g174501;
				#else
				float4 staticSwitch8640_g174452 = localSamplePlanar2D238_g174501;
				#endif
				float4 temp_output_7_0_g174464 = _TerrainShaderMin2;
				float4 temp_output_10_0_g174464 = ( _TerrainShaderMax2 - temp_output_7_0_g174464 );
				float4 temp_output_6977_0_g174452 = saturate( ( ( staticSwitch8640_g174452 - temp_output_7_0_g174464 ) / ( temp_output_10_0_g174464 + 0.0001 ) ) );
				half4 Masks_0210_g174458 = temp_output_6977_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174506) = _TerrainShaderTex3;
				SamplerState Sampler238_g174506 = SS30_g174557;
				half4 Input_Terrain_Coords_036789_g174452 = _TerrainCoord3;
				float4 temp_output_37_0_g174506 = Input_Terrain_Coords_036789_g174452;
				half4 Coords238_g174506 = temp_output_37_0_g174506;
				float3 temp_output_279_0_g174506 = Input_Position9197_g174452;
				half3 WorldPosition238_g174506 = temp_output_279_0_g174506;
				half4 localSamplePlanar2D238_g174506 = SamplePlanar2D( Texture238_g174506 , Sampler238_g174506 , Coords238_g174506 , WorldPosition238_g174506 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174506) = _TerrainShaderTex3;
				SamplerState Sampler246_g174506 = SS30_g174557;
				half4 Coords246_g174506 = temp_output_37_0_g174506;
				half3 WorldPosition246_g174506 = temp_output_279_0_g174506;
				float3 temp_output_280_0_g174506 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174506 = temp_output_280_0_g174506;
				half4 localSamplePlanar3D246_g174506 = SamplePlanar3D( Texture246_g174506 , Sampler246_g174506 , Coords246_g174506 , WorldPosition246_g174506 , WorldNormal246_g174506 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174506) = _TerrainShaderTex3;
				SamplerState Sampler234_g174506 = SS30_g174557;
				float4 Coords234_g174506 = temp_output_37_0_g174506;
				float3 WorldPosition234_g174506 = temp_output_279_0_g174506;
				float4 localSampleStochastic2D234_g174506 = SampleStochastic2D( Texture234_g174506 , Sampler234_g174506 , Coords234_g174506 , WorldPosition234_g174506 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174506) = _TerrainShaderTex3;
				SamplerState Sampler263_g174506 = SS30_g174557;
				half4 Coords263_g174506 = temp_output_37_0_g174506;
				half3 WorldPosition263_g174506 = temp_output_279_0_g174506;
				half3 WorldNormal263_g174506 = temp_output_280_0_g174506;
				half4 localSampleStochastic3D263_g174506 = SampleStochastic3D( Texture263_g174506 , Sampler263_g174506 , Coords263_g174506 , WorldPosition263_g174506 , WorldNormal263_g174506 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8641_g174452 = localSamplePlanar2D238_g174506;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8641_g174452 = localSamplePlanar3D246_g174506;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8641_g174452 = localSampleStochastic2D234_g174506;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8641_g174452 = localSampleStochastic3D263_g174506;
				#else
				float4 staticSwitch8641_g174452 = localSamplePlanar2D238_g174506;
				#endif
				float4 temp_output_7_0_g174465 = _TerrainShaderMin3;
				float4 temp_output_10_0_g174465 = ( _TerrainShaderMax3 - temp_output_7_0_g174465 );
				float4 temp_output_6978_0_g174452 = saturate( ( ( staticSwitch8641_g174452 - temp_output_7_0_g174465 ) / ( temp_output_10_0_g174465 + 0.0001 ) ) );
				half4 Masks_0312_g174458 = temp_output_6978_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174507) = _TerrainShaderTex4;
				SamplerState Sampler238_g174507 = SS30_g174557;
				half4 Input_Terrain_Coords_046791_g174452 = _TerrainCoord4;
				float4 temp_output_37_0_g174507 = Input_Terrain_Coords_046791_g174452;
				half4 Coords238_g174507 = temp_output_37_0_g174507;
				float3 temp_output_279_0_g174507 = Input_Position9197_g174452;
				half3 WorldPosition238_g174507 = temp_output_279_0_g174507;
				half4 localSamplePlanar2D238_g174507 = SamplePlanar2D( Texture238_g174507 , Sampler238_g174507 , Coords238_g174507 , WorldPosition238_g174507 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174507) = _TerrainShaderTex4;
				SamplerState Sampler246_g174507 = SS30_g174557;
				half4 Coords246_g174507 = temp_output_37_0_g174507;
				half3 WorldPosition246_g174507 = temp_output_279_0_g174507;
				float3 temp_output_280_0_g174507 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174507 = temp_output_280_0_g174507;
				half4 localSamplePlanar3D246_g174507 = SamplePlanar3D( Texture246_g174507 , Sampler246_g174507 , Coords246_g174507 , WorldPosition246_g174507 , WorldNormal246_g174507 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174507) = _TerrainShaderTex4;
				SamplerState Sampler234_g174507 = SS30_g174557;
				float4 Coords234_g174507 = temp_output_37_0_g174507;
				float3 WorldPosition234_g174507 = temp_output_279_0_g174507;
				float4 localSampleStochastic2D234_g174507 = SampleStochastic2D( Texture234_g174507 , Sampler234_g174507 , Coords234_g174507 , WorldPosition234_g174507 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174507) = _TerrainShaderTex4;
				SamplerState Sampler263_g174507 = SS30_g174557;
				half4 Coords263_g174507 = temp_output_37_0_g174507;
				half3 WorldPosition263_g174507 = temp_output_279_0_g174507;
				half3 WorldNormal263_g174507 = temp_output_280_0_g174507;
				half4 localSampleStochastic3D263_g174507 = SampleStochastic3D( Texture263_g174507 , Sampler263_g174507 , Coords263_g174507 , WorldPosition263_g174507 , WorldNormal263_g174507 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8642_g174452 = localSamplePlanar2D238_g174507;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8642_g174452 = localSamplePlanar3D246_g174507;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8642_g174452 = localSampleStochastic2D234_g174507;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8642_g174452 = localSampleStochastic3D263_g174507;
				#else
				float4 staticSwitch8642_g174452 = localSamplePlanar2D238_g174507;
				#endif
				float4 temp_output_7_0_g174466 = _TerrainShaderMin4;
				float4 temp_output_10_0_g174466 = ( _TerrainShaderMax4 - temp_output_7_0_g174466 );
				float4 temp_output_6983_0_g174452 = saturate( ( ( staticSwitch8642_g174452 - temp_output_7_0_g174466 ) / ( temp_output_10_0_g174466 + 0.0001 ) ) );
				half4 Masks_0414_g174458 = temp_output_6983_0_g174452;
				float4 appendResult29_g174458 = (float4((Masks_015_g174458).z , (Masks_0210_g174458).z , (Masks_0312_g174458).z , (Masks_0414_g174458).z));
				half4 Control31_g174458 = Terrain_Control_047365_g174452;
				half4 Terrain_Height_047210_g174452 = ( appendResult29_g174458 * Control31_g174458 );
				float4 heights_047362_g174452 = Terrain_Height_047210_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174510) = _TerrainShaderTex5;
				SamplerState Sampler238_g174510 = SS30_g174557;
				half4 Input_Terrain_Coords_058750_g174452 = _TerrainCoord5;
				float4 temp_output_37_0_g174510 = Input_Terrain_Coords_058750_g174452;
				half4 Coords238_g174510 = temp_output_37_0_g174510;
				float3 temp_output_279_0_g174510 = Input_Position9197_g174452;
				half3 WorldPosition238_g174510 = temp_output_279_0_g174510;
				half4 localSamplePlanar2D238_g174510 = SamplePlanar2D( Texture238_g174510 , Sampler238_g174510 , Coords238_g174510 , WorldPosition238_g174510 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174510) = _TerrainShaderTex5;
				SamplerState Sampler246_g174510 = SS30_g174557;
				half4 Coords246_g174510 = temp_output_37_0_g174510;
				half3 WorldPosition246_g174510 = temp_output_279_0_g174510;
				float3 temp_output_280_0_g174510 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174510 = temp_output_280_0_g174510;
				half4 localSamplePlanar3D246_g174510 = SamplePlanar3D( Texture246_g174510 , Sampler246_g174510 , Coords246_g174510 , WorldPosition246_g174510 , WorldNormal246_g174510 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174510) = _TerrainShaderTex5;
				SamplerState Sampler234_g174510 = SS30_g174557;
				float4 Coords234_g174510 = temp_output_37_0_g174510;
				float3 WorldPosition234_g174510 = temp_output_279_0_g174510;
				float4 localSampleStochastic2D234_g174510 = SampleStochastic2D( Texture234_g174510 , Sampler234_g174510 , Coords234_g174510 , WorldPosition234_g174510 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174510) = _TerrainShaderTex5;
				SamplerState Sampler263_g174510 = SS30_g174557;
				half4 Coords263_g174510 = temp_output_37_0_g174510;
				half3 WorldPosition263_g174510 = temp_output_279_0_g174510;
				half3 WorldNormal263_g174510 = temp_output_280_0_g174510;
				half4 localSampleStochastic3D263_g174510 = SampleStochastic3D( Texture263_g174510 , Sampler263_g174510 , Coords263_g174510 , WorldPosition263_g174510 , WorldNormal263_g174510 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8710_g174452 = localSamplePlanar2D238_g174510;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8710_g174452 = localSamplePlanar3D246_g174510;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8710_g174452 = localSampleStochastic2D234_g174510;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8710_g174452 = localSampleStochastic3D263_g174510;
				#else
				float4 staticSwitch8710_g174452 = localSamplePlanar2D238_g174510;
				#endif
				float4 temp_output_7_0_g174469 = _TerrainShaderMin5;
				float4 temp_output_10_0_g174469 = ( _TerrainShaderMax5 - temp_output_7_0_g174469 );
				float4 temp_output_8714_0_g174452 = saturate( ( ( staticSwitch8710_g174452 - temp_output_7_0_g174469 ) / ( temp_output_10_0_g174469 + 0.0001 ) ) );
				half4 Masks_015_g174470 = temp_output_8714_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174541) = _TerrainShaderTex6;
				SamplerState Sampler238_g174541 = SS30_g174557;
				half4 Input_Terrain_Coords_068751_g174452 = _TerrainCoord6;
				float4 temp_output_37_0_g174541 = Input_Terrain_Coords_068751_g174452;
				half4 Coords238_g174541 = temp_output_37_0_g174541;
				float3 temp_output_279_0_g174541 = Input_Position9197_g174452;
				half3 WorldPosition238_g174541 = temp_output_279_0_g174541;
				half4 localSamplePlanar2D238_g174541 = SamplePlanar2D( Texture238_g174541 , Sampler238_g174541 , Coords238_g174541 , WorldPosition238_g174541 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174541) = _TerrainShaderTex6;
				SamplerState Sampler246_g174541 = SS30_g174557;
				half4 Coords246_g174541 = temp_output_37_0_g174541;
				half3 WorldPosition246_g174541 = temp_output_279_0_g174541;
				float3 temp_output_280_0_g174541 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174541 = temp_output_280_0_g174541;
				half4 localSamplePlanar3D246_g174541 = SamplePlanar3D( Texture246_g174541 , Sampler246_g174541 , Coords246_g174541 , WorldPosition246_g174541 , WorldNormal246_g174541 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174541) = _TerrainShaderTex6;
				SamplerState Sampler234_g174541 = SS30_g174557;
				float4 Coords234_g174541 = temp_output_37_0_g174541;
				float3 WorldPosition234_g174541 = temp_output_279_0_g174541;
				float4 localSampleStochastic2D234_g174541 = SampleStochastic2D( Texture234_g174541 , Sampler234_g174541 , Coords234_g174541 , WorldPosition234_g174541 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174541) = _TerrainShaderTex6;
				SamplerState Sampler263_g174541 = SS30_g174557;
				half4 Coords263_g174541 = temp_output_37_0_g174541;
				half3 WorldPosition263_g174541 = temp_output_279_0_g174541;
				half3 WorldNormal263_g174541 = temp_output_280_0_g174541;
				half4 localSampleStochastic3D263_g174541 = SampleStochastic3D( Texture263_g174541 , Sampler263_g174541 , Coords263_g174541 , WorldPosition263_g174541 , WorldNormal263_g174541 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8711_g174452 = localSamplePlanar2D238_g174541;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8711_g174452 = localSamplePlanar3D246_g174541;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8711_g174452 = localSampleStochastic2D234_g174541;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8711_g174452 = localSampleStochastic3D263_g174541;
				#else
				float4 staticSwitch8711_g174452 = localSamplePlanar2D238_g174541;
				#endif
				float4 temp_output_7_0_g174494 = _TerrainShaderMin6;
				float4 temp_output_10_0_g174494 = ( _TerrainShaderMax6 - temp_output_7_0_g174494 );
				float4 temp_output_8721_0_g174452 = saturate( ( ( staticSwitch8711_g174452 - temp_output_7_0_g174494 ) / ( temp_output_10_0_g174494 + 0.0001 ) ) );
				half4 Masks_0210_g174470 = temp_output_8721_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174542) = _TerrainShaderTex7;
				SamplerState Sampler238_g174542 = SS30_g174557;
				half4 Input_Terrain_Coords_078752_g174452 = _TerrainCoord7;
				float4 temp_output_37_0_g174542 = Input_Terrain_Coords_078752_g174452;
				half4 Coords238_g174542 = temp_output_37_0_g174542;
				float3 temp_output_279_0_g174542 = Input_Position9197_g174452;
				half3 WorldPosition238_g174542 = temp_output_279_0_g174542;
				half4 localSamplePlanar2D238_g174542 = SamplePlanar2D( Texture238_g174542 , Sampler238_g174542 , Coords238_g174542 , WorldPosition238_g174542 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174542) = _TerrainShaderTex7;
				SamplerState Sampler246_g174542 = SS30_g174557;
				half4 Coords246_g174542 = temp_output_37_0_g174542;
				half3 WorldPosition246_g174542 = temp_output_279_0_g174542;
				float3 temp_output_280_0_g174542 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174542 = temp_output_280_0_g174542;
				half4 localSamplePlanar3D246_g174542 = SamplePlanar3D( Texture246_g174542 , Sampler246_g174542 , Coords246_g174542 , WorldPosition246_g174542 , WorldNormal246_g174542 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174542) = _TerrainShaderTex7;
				SamplerState Sampler234_g174542 = SS30_g174557;
				float4 Coords234_g174542 = temp_output_37_0_g174542;
				float3 WorldPosition234_g174542 = temp_output_279_0_g174542;
				float4 localSampleStochastic2D234_g174542 = SampleStochastic2D( Texture234_g174542 , Sampler234_g174542 , Coords234_g174542 , WorldPosition234_g174542 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174542) = _TerrainShaderTex7;
				SamplerState Sampler263_g174542 = SS30_g174557;
				half4 Coords263_g174542 = temp_output_37_0_g174542;
				half3 WorldPosition263_g174542 = temp_output_279_0_g174542;
				half3 WorldNormal263_g174542 = temp_output_280_0_g174542;
				half4 localSampleStochastic3D263_g174542 = SampleStochastic3D( Texture263_g174542 , Sampler263_g174542 , Coords263_g174542 , WorldPosition263_g174542 , WorldNormal263_g174542 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8712_g174452 = localSamplePlanar2D238_g174542;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8712_g174452 = localSamplePlanar3D246_g174542;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8712_g174452 = localSampleStochastic2D234_g174542;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8712_g174452 = localSampleStochastic3D263_g174542;
				#else
				float4 staticSwitch8712_g174452 = localSamplePlanar2D238_g174542;
				#endif
				float4 temp_output_7_0_g174495 = _TerrainShaderMin7;
				float4 temp_output_10_0_g174495 = ( _TerrainShaderMax7 - temp_output_7_0_g174495 );
				float4 temp_output_8724_0_g174452 = saturate( ( ( staticSwitch8712_g174452 - temp_output_7_0_g174495 ) / ( temp_output_10_0_g174495 + 0.0001 ) ) );
				half4 Masks_0312_g174470 = temp_output_8724_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174543) = _TerrainShaderTex8;
				SamplerState Sampler238_g174543 = SS30_g174557;
				half4 Input_Terrain_Coords_088749_g174452 = _TerrainCoord8;
				float4 temp_output_37_0_g174543 = Input_Terrain_Coords_088749_g174452;
				half4 Coords238_g174543 = temp_output_37_0_g174543;
				float3 temp_output_279_0_g174543 = Input_Position9197_g174452;
				half3 WorldPosition238_g174543 = temp_output_279_0_g174543;
				half4 localSamplePlanar2D238_g174543 = SamplePlanar2D( Texture238_g174543 , Sampler238_g174543 , Coords238_g174543 , WorldPosition238_g174543 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174543) = _TerrainShaderTex8;
				SamplerState Sampler246_g174543 = SS30_g174557;
				half4 Coords246_g174543 = temp_output_37_0_g174543;
				half3 WorldPosition246_g174543 = temp_output_279_0_g174543;
				float3 temp_output_280_0_g174543 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174543 = temp_output_280_0_g174543;
				half4 localSamplePlanar3D246_g174543 = SamplePlanar3D( Texture246_g174543 , Sampler246_g174543 , Coords246_g174543 , WorldPosition246_g174543 , WorldNormal246_g174543 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174543) = _TerrainShaderTex8;
				SamplerState Sampler234_g174543 = SS30_g174557;
				float4 Coords234_g174543 = temp_output_37_0_g174543;
				float3 WorldPosition234_g174543 = temp_output_279_0_g174543;
				float4 localSampleStochastic2D234_g174543 = SampleStochastic2D( Texture234_g174543 , Sampler234_g174543 , Coords234_g174543 , WorldPosition234_g174543 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174543) = _TerrainShaderTex8;
				SamplerState Sampler263_g174543 = SS30_g174557;
				half4 Coords263_g174543 = temp_output_37_0_g174543;
				half3 WorldPosition263_g174543 = temp_output_279_0_g174543;
				half3 WorldNormal263_g174543 = temp_output_280_0_g174543;
				half4 localSampleStochastic3D263_g174543 = SampleStochastic3D( Texture263_g174543 , Sampler263_g174543 , Coords263_g174543 , WorldPosition263_g174543 , WorldNormal263_g174543 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8713_g174452 = localSamplePlanar2D238_g174543;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8713_g174452 = localSamplePlanar3D246_g174543;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8713_g174452 = localSampleStochastic2D234_g174543;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8713_g174452 = localSampleStochastic3D263_g174543;
				#else
				float4 staticSwitch8713_g174452 = localSamplePlanar2D238_g174543;
				#endif
				float4 temp_output_7_0_g174496 = _TerrainShaderMin8;
				float4 temp_output_10_0_g174496 = ( _TerrainShaderMax8 - temp_output_7_0_g174496 );
				float4 temp_output_8727_0_g174452 = saturate( ( ( staticSwitch8713_g174452 - temp_output_7_0_g174496 ) / ( temp_output_10_0_g174496 + 0.0001 ) ) );
				half4 Masks_0414_g174470 = temp_output_8727_0_g174452;
				float4 appendResult29_g174470 = (float4((Masks_015_g174470).z , (Masks_0210_g174470).z , (Masks_0312_g174470).z , (Masks_0414_g174470).z));
				half4 Control31_g174470 = Terrain_Control_087366_g174452;
				half4 Terrain_Height_088731_g174452 = ( appendResult29_g174470 * Control31_g174470 );
				float4 heights_087362_g174452 = Terrain_Height_088731_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174513) = _TerrainShaderTex9;
				SamplerState Sampler238_g174513 = SS30_g174557;
				half4 Input_Terrain_Coords_098833_g174452 = _TerrainCoord9;
				float4 temp_output_37_0_g174513 = Input_Terrain_Coords_098833_g174452;
				half4 Coords238_g174513 = temp_output_37_0_g174513;
				float3 temp_output_279_0_g174513 = Input_Position9197_g174452;
				half3 WorldPosition238_g174513 = temp_output_279_0_g174513;
				half4 localSamplePlanar2D238_g174513 = SamplePlanar2D( Texture238_g174513 , Sampler238_g174513 , Coords238_g174513 , WorldPosition238_g174513 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174513) = _TerrainShaderTex9;
				SamplerState Sampler246_g174513 = SS30_g174557;
				half4 Coords246_g174513 = temp_output_37_0_g174513;
				half3 WorldPosition246_g174513 = temp_output_279_0_g174513;
				float3 temp_output_280_0_g174513 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174513 = temp_output_280_0_g174513;
				half4 localSamplePlanar3D246_g174513 = SamplePlanar3D( Texture246_g174513 , Sampler246_g174513 , Coords246_g174513 , WorldPosition246_g174513 , WorldNormal246_g174513 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174513) = _TerrainShaderTex9;
				SamplerState Sampler234_g174513 = SS30_g174557;
				float4 Coords234_g174513 = temp_output_37_0_g174513;
				float3 WorldPosition234_g174513 = temp_output_279_0_g174513;
				float4 localSampleStochastic2D234_g174513 = SampleStochastic2D( Texture234_g174513 , Sampler234_g174513 , Coords234_g174513 , WorldPosition234_g174513 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174513) = _TerrainShaderTex9;
				SamplerState Sampler263_g174513 = SS30_g174557;
				half4 Coords263_g174513 = temp_output_37_0_g174513;
				half3 WorldPosition263_g174513 = temp_output_279_0_g174513;
				half3 WorldNormal263_g174513 = temp_output_280_0_g174513;
				half4 localSampleStochastic3D263_g174513 = SampleStochastic3D( Texture263_g174513 , Sampler263_g174513 , Coords263_g174513 , WorldPosition263_g174513 , WorldNormal263_g174513 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8878_g174452 = localSamplePlanar2D238_g174513;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8878_g174452 = localSamplePlanar3D246_g174513;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8878_g174452 = localSampleStochastic2D234_g174513;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8878_g174452 = localSampleStochastic3D263_g174513;
				#else
				float4 staticSwitch8878_g174452 = localSamplePlanar2D238_g174513;
				#endif
				float4 temp_output_7_0_g174476 = _TerrainShaderMin9;
				float4 temp_output_10_0_g174476 = ( _TerrainShaderMax9 - temp_output_7_0_g174476 );
				float4 temp_output_8815_0_g174452 = saturate( ( ( staticSwitch8878_g174452 - temp_output_7_0_g174476 ) / ( temp_output_10_0_g174476 + 0.0001 ) ) );
				half4 Masks_015_g174477 = temp_output_8815_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174523) = _TerrainShaderTex10;
				SamplerState Sampler238_g174523 = SS30_g174557;
				half4 Input_Terrain_Coords_108834_g174452 = _TerrainCoord10;
				float4 temp_output_37_0_g174523 = Input_Terrain_Coords_108834_g174452;
				half4 Coords238_g174523 = temp_output_37_0_g174523;
				float3 temp_output_279_0_g174523 = Input_Position9197_g174452;
				half3 WorldPosition238_g174523 = temp_output_279_0_g174523;
				half4 localSamplePlanar2D238_g174523 = SamplePlanar2D( Texture238_g174523 , Sampler238_g174523 , Coords238_g174523 , WorldPosition238_g174523 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174523) = _TerrainShaderTex10;
				SamplerState Sampler246_g174523 = SS30_g174557;
				half4 Coords246_g174523 = temp_output_37_0_g174523;
				half3 WorldPosition246_g174523 = temp_output_279_0_g174523;
				float3 temp_output_280_0_g174523 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174523 = temp_output_280_0_g174523;
				half4 localSamplePlanar3D246_g174523 = SamplePlanar3D( Texture246_g174523 , Sampler246_g174523 , Coords246_g174523 , WorldPosition246_g174523 , WorldNormal246_g174523 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174523) = _TerrainShaderTex10;
				SamplerState Sampler234_g174523 = SS30_g174557;
				float4 Coords234_g174523 = temp_output_37_0_g174523;
				float3 WorldPosition234_g174523 = temp_output_279_0_g174523;
				float4 localSampleStochastic2D234_g174523 = SampleStochastic2D( Texture234_g174523 , Sampler234_g174523 , Coords234_g174523 , WorldPosition234_g174523 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174523) = _TerrainShaderTex10;
				SamplerState Sampler263_g174523 = SS30_g174557;
				half4 Coords263_g174523 = temp_output_37_0_g174523;
				half3 WorldPosition263_g174523 = temp_output_279_0_g174523;
				half3 WorldNormal263_g174523 = temp_output_280_0_g174523;
				half4 localSampleStochastic3D263_g174523 = SampleStochastic3D( Texture263_g174523 , Sampler263_g174523 , Coords263_g174523 , WorldPosition263_g174523 , WorldNormal263_g174523 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8860_g174452 = localSamplePlanar2D238_g174523;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8860_g174452 = localSamplePlanar3D246_g174523;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8860_g174452 = localSampleStochastic2D234_g174523;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8860_g174452 = localSampleStochastic3D263_g174523;
				#else
				float4 staticSwitch8860_g174452 = localSamplePlanar2D238_g174523;
				#endif
				float4 temp_output_7_0_g174488 = _TerrainShaderMin10;
				float4 temp_output_10_0_g174488 = ( _TerrainShaderMax10 - temp_output_7_0_g174488 );
				float4 temp_output_8818_0_g174452 = saturate( ( ( staticSwitch8860_g174452 - temp_output_7_0_g174488 ) / ( temp_output_10_0_g174488 + 0.0001 ) ) );
				half4 Masks_0210_g174477 = temp_output_8818_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174524) = _TerrainShaderTex11;
				SamplerState Sampler238_g174524 = SS30_g174557;
				half4 Input_Terrain_Coords_118835_g174452 = _TerrainCoord11;
				float4 temp_output_37_0_g174524 = Input_Terrain_Coords_118835_g174452;
				half4 Coords238_g174524 = temp_output_37_0_g174524;
				float3 temp_output_279_0_g174524 = Input_Position9197_g174452;
				half3 WorldPosition238_g174524 = temp_output_279_0_g174524;
				half4 localSamplePlanar2D238_g174524 = SamplePlanar2D( Texture238_g174524 , Sampler238_g174524 , Coords238_g174524 , WorldPosition238_g174524 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174524) = _TerrainShaderTex11;
				SamplerState Sampler246_g174524 = SS30_g174557;
				half4 Coords246_g174524 = temp_output_37_0_g174524;
				half3 WorldPosition246_g174524 = temp_output_279_0_g174524;
				float3 temp_output_280_0_g174524 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174524 = temp_output_280_0_g174524;
				half4 localSamplePlanar3D246_g174524 = SamplePlanar3D( Texture246_g174524 , Sampler246_g174524 , Coords246_g174524 , WorldPosition246_g174524 , WorldNormal246_g174524 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174524) = _TerrainShaderTex11;
				SamplerState Sampler234_g174524 = SS30_g174557;
				float4 Coords234_g174524 = temp_output_37_0_g174524;
				float3 WorldPosition234_g174524 = temp_output_279_0_g174524;
				float4 localSampleStochastic2D234_g174524 = SampleStochastic2D( Texture234_g174524 , Sampler234_g174524 , Coords234_g174524 , WorldPosition234_g174524 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174524) = _TerrainShaderTex11;
				SamplerState Sampler263_g174524 = SS30_g174557;
				half4 Coords263_g174524 = temp_output_37_0_g174524;
				half3 WorldPosition263_g174524 = temp_output_279_0_g174524;
				half3 WorldNormal263_g174524 = temp_output_280_0_g174524;
				half4 localSampleStochastic3D263_g174524 = SampleStochastic3D( Texture263_g174524 , Sampler263_g174524 , Coords263_g174524 , WorldPosition263_g174524 , WorldNormal263_g174524 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8861_g174452 = localSamplePlanar2D238_g174524;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8861_g174452 = localSamplePlanar3D246_g174524;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8861_g174452 = localSampleStochastic2D234_g174524;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8861_g174452 = localSampleStochastic3D263_g174524;
				#else
				float4 staticSwitch8861_g174452 = localSamplePlanar2D238_g174524;
				#endif
				float4 temp_output_7_0_g174489 = _TerrainShaderMin11;
				float4 temp_output_10_0_g174489 = ( _TerrainShaderMax11 - temp_output_7_0_g174489 );
				float4 temp_output_8819_0_g174452 = saturate( ( ( staticSwitch8861_g174452 - temp_output_7_0_g174489 ) / ( temp_output_10_0_g174489 + 0.0001 ) ) );
				half4 Masks_0312_g174477 = temp_output_8819_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174525) = _TerrainShaderTex12;
				SamplerState Sampler238_g174525 = SS30_g174557;
				half4 Input_Terrain_Coords_128836_g174452 = _TerrainCoord12;
				float4 temp_output_37_0_g174525 = Input_Terrain_Coords_128836_g174452;
				half4 Coords238_g174525 = temp_output_37_0_g174525;
				float3 temp_output_279_0_g174525 = Input_Position9197_g174452;
				half3 WorldPosition238_g174525 = temp_output_279_0_g174525;
				half4 localSamplePlanar2D238_g174525 = SamplePlanar2D( Texture238_g174525 , Sampler238_g174525 , Coords238_g174525 , WorldPosition238_g174525 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174525) = _TerrainShaderTex12;
				SamplerState Sampler246_g174525 = SS30_g174557;
				half4 Coords246_g174525 = temp_output_37_0_g174525;
				half3 WorldPosition246_g174525 = temp_output_279_0_g174525;
				float3 temp_output_280_0_g174525 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174525 = temp_output_280_0_g174525;
				half4 localSamplePlanar3D246_g174525 = SamplePlanar3D( Texture246_g174525 , Sampler246_g174525 , Coords246_g174525 , WorldPosition246_g174525 , WorldNormal246_g174525 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174525) = _TerrainShaderTex12;
				SamplerState Sampler234_g174525 = SS30_g174557;
				float4 Coords234_g174525 = temp_output_37_0_g174525;
				float3 WorldPosition234_g174525 = temp_output_279_0_g174525;
				float4 localSampleStochastic2D234_g174525 = SampleStochastic2D( Texture234_g174525 , Sampler234_g174525 , Coords234_g174525 , WorldPosition234_g174525 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174525) = _TerrainShaderTex12;
				SamplerState Sampler263_g174525 = SS30_g174557;
				half4 Coords263_g174525 = temp_output_37_0_g174525;
				half3 WorldPosition263_g174525 = temp_output_279_0_g174525;
				half3 WorldNormal263_g174525 = temp_output_280_0_g174525;
				half4 localSampleStochastic3D263_g174525 = SampleStochastic3D( Texture263_g174525 , Sampler263_g174525 , Coords263_g174525 , WorldPosition263_g174525 , WorldNormal263_g174525 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8879_g174452 = localSamplePlanar2D238_g174525;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8879_g174452 = localSamplePlanar3D246_g174525;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8879_g174452 = localSampleStochastic2D234_g174525;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8879_g174452 = localSampleStochastic3D263_g174525;
				#else
				float4 staticSwitch8879_g174452 = localSamplePlanar2D238_g174525;
				#endif
				float4 temp_output_7_0_g174490 = _TerrainShaderMin12;
				float4 temp_output_10_0_g174490 = ( _TerrainShaderMax12 - temp_output_7_0_g174490 );
				float4 temp_output_8820_0_g174452 = saturate( ( ( staticSwitch8879_g174452 - temp_output_7_0_g174490 ) / ( temp_output_10_0_g174490 + 0.0001 ) ) );
				half4 Masks_0414_g174477 = temp_output_8820_0_g174452;
				float4 appendResult29_g174477 = (float4((Masks_015_g174477).z , (Masks_0210_g174477).z , (Masks_0312_g174477).z , (Masks_0414_g174477).z));
				half4 Control31_g174477 = Terrain_Control_127712_g174452;
				half4 Terrain_Height_128870_g174452 = ( appendResult29_g174477 * Control31_g174477 );
				float4 heights_127362_g174452 = Terrain_Height_128870_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174521) = _TerrainShaderTex13;
				SamplerState Sampler238_g174521 = SS30_g174557;
				half4 Input_Terrain_Coords_138960_g174452 = _TerrainCoord13;
				float4 temp_output_37_0_g174521 = Input_Terrain_Coords_138960_g174452;
				half4 Coords238_g174521 = temp_output_37_0_g174521;
				float3 temp_output_279_0_g174521 = Input_Position9197_g174452;
				half3 WorldPosition238_g174521 = temp_output_279_0_g174521;
				half4 localSamplePlanar2D238_g174521 = SamplePlanar2D( Texture238_g174521 , Sampler238_g174521 , Coords238_g174521 , WorldPosition238_g174521 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174521) = _TerrainShaderTex13;
				SamplerState Sampler246_g174521 = SS30_g174557;
				half4 Coords246_g174521 = temp_output_37_0_g174521;
				half3 WorldPosition246_g174521 = temp_output_279_0_g174521;
				float3 temp_output_280_0_g174521 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174521 = temp_output_280_0_g174521;
				half4 localSamplePlanar3D246_g174521 = SamplePlanar3D( Texture246_g174521 , Sampler246_g174521 , Coords246_g174521 , WorldPosition246_g174521 , WorldNormal246_g174521 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174521) = _TerrainShaderTex13;
				SamplerState Sampler234_g174521 = SS30_g174557;
				float4 Coords234_g174521 = temp_output_37_0_g174521;
				float3 WorldPosition234_g174521 = temp_output_279_0_g174521;
				float4 localSampleStochastic2D234_g174521 = SampleStochastic2D( Texture234_g174521 , Sampler234_g174521 , Coords234_g174521 , WorldPosition234_g174521 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174521) = _TerrainShaderTex13;
				SamplerState Sampler263_g174521 = SS30_g174557;
				half4 Coords263_g174521 = temp_output_37_0_g174521;
				half3 WorldPosition263_g174521 = temp_output_279_0_g174521;
				half3 WorldNormal263_g174521 = temp_output_280_0_g174521;
				half4 localSampleStochastic3D263_g174521 = SampleStochastic3D( Texture263_g174521 , Sampler263_g174521 , Coords263_g174521 , WorldPosition263_g174521 , WorldNormal263_g174521 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch9000_g174452 = localSamplePlanar2D238_g174521;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch9000_g174452 = localSamplePlanar3D246_g174521;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch9000_g174452 = localSampleStochastic2D234_g174521;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch9000_g174452 = localSampleStochastic3D263_g174521;
				#else
				float4 staticSwitch9000_g174452 = localSamplePlanar2D238_g174521;
				#endif
				float4 temp_output_7_0_g174483 = _TerrainShaderMin13;
				float4 temp_output_10_0_g174483 = ( _TerrainShaderMax13 - temp_output_7_0_g174483 );
				float4 temp_output_8931_0_g174452 = saturate( ( ( staticSwitch9000_g174452 - temp_output_7_0_g174483 ) / ( temp_output_10_0_g174483 + 0.0001 ) ) );
				half4 Masks_015_g174484 = temp_output_8931_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174532) = _TerrainShaderTex14;
				SamplerState Sampler238_g174532 = SS30_g174557;
				half4 Input_Terrain_Coords_148961_g174452 = _TerrainCoord14;
				float4 temp_output_37_0_g174532 = Input_Terrain_Coords_148961_g174452;
				half4 Coords238_g174532 = temp_output_37_0_g174532;
				float3 temp_output_279_0_g174532 = Input_Position9197_g174452;
				half3 WorldPosition238_g174532 = temp_output_279_0_g174532;
				half4 localSamplePlanar2D238_g174532 = SamplePlanar2D( Texture238_g174532 , Sampler238_g174532 , Coords238_g174532 , WorldPosition238_g174532 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174532) = _TerrainShaderTex14;
				SamplerState Sampler246_g174532 = SS30_g174557;
				half4 Coords246_g174532 = temp_output_37_0_g174532;
				half3 WorldPosition246_g174532 = temp_output_279_0_g174532;
				float3 temp_output_280_0_g174532 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174532 = temp_output_280_0_g174532;
				half4 localSamplePlanar3D246_g174532 = SamplePlanar3D( Texture246_g174532 , Sampler246_g174532 , Coords246_g174532 , WorldPosition246_g174532 , WorldNormal246_g174532 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174532) = _TerrainShaderTex14;
				SamplerState Sampler234_g174532 = SS30_g174557;
				float4 Coords234_g174532 = temp_output_37_0_g174532;
				float3 WorldPosition234_g174532 = temp_output_279_0_g174532;
				float4 localSampleStochastic2D234_g174532 = SampleStochastic2D( Texture234_g174532 , Sampler234_g174532 , Coords234_g174532 , WorldPosition234_g174532 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174532) = _TerrainShaderTex14;
				SamplerState Sampler263_g174532 = SS30_g174557;
				half4 Coords263_g174532 = temp_output_37_0_g174532;
				half3 WorldPosition263_g174532 = temp_output_279_0_g174532;
				half3 WorldNormal263_g174532 = temp_output_280_0_g174532;
				half4 localSampleStochastic3D263_g174532 = SampleStochastic3D( Texture263_g174532 , Sampler263_g174532 , Coords263_g174532 , WorldPosition263_g174532 , WorldNormal263_g174532 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch9001_g174452 = localSamplePlanar2D238_g174532;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch9001_g174452 = localSamplePlanar3D246_g174532;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch9001_g174452 = localSampleStochastic2D234_g174532;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch9001_g174452 = localSampleStochastic3D263_g174532;
				#else
				float4 staticSwitch9001_g174452 = localSamplePlanar2D238_g174532;
				#endif
				float4 temp_output_7_0_g174491 = _TerrainShaderMin14;
				float4 temp_output_10_0_g174491 = ( _TerrainShaderMax14 - temp_output_7_0_g174491 );
				float4 temp_output_8934_0_g174452 = saturate( ( ( staticSwitch9001_g174452 - temp_output_7_0_g174491 ) / ( temp_output_10_0_g174491 + 0.0001 ) ) );
				half4 Masks_0210_g174484 = temp_output_8934_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174533) = _TerrainShaderTex15;
				SamplerState Sampler238_g174533 = SS30_g174557;
				half4 Input_Terrain_Coords_158962_g174452 = _TerrainCoord15;
				float4 temp_output_37_0_g174533 = Input_Terrain_Coords_158962_g174452;
				half4 Coords238_g174533 = temp_output_37_0_g174533;
				float3 temp_output_279_0_g174533 = Input_Position9197_g174452;
				half3 WorldPosition238_g174533 = temp_output_279_0_g174533;
				half4 localSamplePlanar2D238_g174533 = SamplePlanar2D( Texture238_g174533 , Sampler238_g174533 , Coords238_g174533 , WorldPosition238_g174533 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174533) = _TerrainShaderTex15;
				SamplerState Sampler246_g174533 = SS30_g174557;
				half4 Coords246_g174533 = temp_output_37_0_g174533;
				half3 WorldPosition246_g174533 = temp_output_279_0_g174533;
				float3 temp_output_280_0_g174533 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174533 = temp_output_280_0_g174533;
				half4 localSamplePlanar3D246_g174533 = SamplePlanar3D( Texture246_g174533 , Sampler246_g174533 , Coords246_g174533 , WorldPosition246_g174533 , WorldNormal246_g174533 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174533) = _TerrainShaderTex15;
				SamplerState Sampler234_g174533 = SS30_g174557;
				float4 Coords234_g174533 = temp_output_37_0_g174533;
				float3 WorldPosition234_g174533 = temp_output_279_0_g174533;
				float4 localSampleStochastic2D234_g174533 = SampleStochastic2D( Texture234_g174533 , Sampler234_g174533 , Coords234_g174533 , WorldPosition234_g174533 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174533) = _TerrainShaderTex15;
				SamplerState Sampler263_g174533 = SS30_g174557;
				half4 Coords263_g174533 = temp_output_37_0_g174533;
				half3 WorldPosition263_g174533 = temp_output_279_0_g174533;
				half3 WorldNormal263_g174533 = temp_output_280_0_g174533;
				half4 localSampleStochastic3D263_g174533 = SampleStochastic3D( Texture263_g174533 , Sampler263_g174533 , Coords263_g174533 , WorldPosition263_g174533 , WorldNormal263_g174533 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch9002_g174452 = localSamplePlanar2D238_g174533;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch9002_g174452 = localSamplePlanar3D246_g174533;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch9002_g174452 = localSampleStochastic2D234_g174533;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch9002_g174452 = localSampleStochastic3D263_g174533;
				#else
				float4 staticSwitch9002_g174452 = localSamplePlanar2D238_g174533;
				#endif
				float4 temp_output_7_0_g174492 = _TerrainShaderMin15;
				float4 temp_output_10_0_g174492 = ( _TerrainShaderMax15 - temp_output_7_0_g174492 );
				float4 temp_output_8935_0_g174452 = saturate( ( ( staticSwitch9002_g174452 - temp_output_7_0_g174492 ) / ( temp_output_10_0_g174492 + 0.0001 ) ) );
				half4 Masks_0312_g174484 = temp_output_8935_0_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174534) = _TerrainShaderTex16;
				SamplerState Sampler238_g174534 = SS30_g174557;
				half4 Input_Terrain_Coords_168959_g174452 = _TerrainCoord16;
				float4 temp_output_37_0_g174534 = Input_Terrain_Coords_168959_g174452;
				half4 Coords238_g174534 = temp_output_37_0_g174534;
				float3 temp_output_279_0_g174534 = Input_Position9197_g174452;
				half3 WorldPosition238_g174534 = temp_output_279_0_g174534;
				half4 localSamplePlanar2D238_g174534 = SamplePlanar2D( Texture238_g174534 , Sampler238_g174534 , Coords238_g174534 , WorldPosition238_g174534 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174534) = _TerrainShaderTex16;
				SamplerState Sampler246_g174534 = SS30_g174557;
				half4 Coords246_g174534 = temp_output_37_0_g174534;
				half3 WorldPosition246_g174534 = temp_output_279_0_g174534;
				float3 temp_output_280_0_g174534 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174534 = temp_output_280_0_g174534;
				half4 localSamplePlanar3D246_g174534 = SamplePlanar3D( Texture246_g174534 , Sampler246_g174534 , Coords246_g174534 , WorldPosition246_g174534 , WorldNormal246_g174534 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174534) = _TerrainShaderTex16;
				SamplerState Sampler234_g174534 = SS30_g174557;
				float4 Coords234_g174534 = temp_output_37_0_g174534;
				float3 WorldPosition234_g174534 = temp_output_279_0_g174534;
				float4 localSampleStochastic2D234_g174534 = SampleStochastic2D( Texture234_g174534 , Sampler234_g174534 , Coords234_g174534 , WorldPosition234_g174534 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174534) = _TerrainShaderTex16;
				SamplerState Sampler263_g174534 = SS30_g174557;
				half4 Coords263_g174534 = temp_output_37_0_g174534;
				half3 WorldPosition263_g174534 = temp_output_279_0_g174534;
				half3 WorldNormal263_g174534 = temp_output_280_0_g174534;
				half4 localSampleStochastic3D263_g174534 = SampleStochastic3D( Texture263_g174534 , Sampler263_g174534 , Coords263_g174534 , WorldPosition263_g174534 , WorldNormal263_g174534 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch9003_g174452 = localSamplePlanar2D238_g174534;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch9003_g174452 = localSamplePlanar3D246_g174534;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch9003_g174452 = localSampleStochastic2D234_g174534;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch9003_g174452 = localSampleStochastic3D263_g174534;
				#else
				float4 staticSwitch9003_g174452 = localSamplePlanar2D238_g174534;
				#endif
				float4 temp_output_7_0_g174493 = _TerrainShaderMin16;
				float4 temp_output_10_0_g174493 = ( _TerrainShaderMax16 - temp_output_7_0_g174493 );
				float4 temp_output_8936_0_g174452 = saturate( ( ( staticSwitch9003_g174452 - temp_output_7_0_g174493 ) / ( temp_output_10_0_g174493 + 0.0001 ) ) );
				half4 Masks_0414_g174484 = temp_output_8936_0_g174452;
				float4 appendResult29_g174484 = (float4((Masks_015_g174484).z , (Masks_0210_g174484).z , (Masks_0312_g174484).z , (Masks_0414_g174484).z));
				half4 Control31_g174484 = Terrain_Control_167711_g174452;
				half4 Terrain_Height_169015_g174452 = ( appendResult29_g174484 * Control31_g174484 );
				float4 heights_167362_g174452 = Terrain_Height_169015_g174452;
				float heightTransition7362_g174452 = ( 1.0 - _TerrainHeightBlendValue );
				float4 weights_047362_g174452 = float4( 0,0,0,0 );
				float4 weights_087362_g174452 = float4( 0,0,0,0 );
				float4 weights_127362_g174452 = float4( 0,0,0,0 );
				float4 weights_167362_g174452 = float4( 0,0,0,0 );
				//Modified version of the HDRP terrain height based blending
				float maxHeight = 0;
				float4 weightedHeights_04 = float4( 0,0,0,0 );
				float4 weightedHeights_08 = float4( 0,0,0,0 );
				float4 weightedHeights_12 = float4( 0,0,0,0 );
				float4 weightedHeights_16 = float4( 0,0,0,0 );
				maxHeight = heights_047362_g174452.x;
				maxHeight = max(maxHeight, heights_047362_g174452.y);
				maxHeight = max(maxHeight, heights_047362_g174452.z);
				maxHeight = max(maxHeight, heights_047362_g174452.w);
				#ifdef TVE_TERRAIN_08
				maxHeight = max(maxHeight, heights_087362_g174452.x);
				maxHeight = max(maxHeight, heights_087362_g174452.y);
				maxHeight = max(maxHeight, heights_087362_g174452.z);
				maxHeight = max(maxHeight, heights_087362_g174452.w);
				#endif
				#ifdef TVE_TERRAIN_12
				maxHeight = max(maxHeight, heights_087362_g174452.x);
				maxHeight = max(maxHeight, heights_087362_g174452.y);
				maxHeight = max(maxHeight, heights_087362_g174452.z);
				maxHeight = max(maxHeight, heights_087362_g174452.w);
				maxHeight = max(maxHeight, heights_127362_g174452.x);
				maxHeight = max(maxHeight, heights_127362_g174452.y);
				maxHeight = max(maxHeight, heights_127362_g174452.z);
				maxHeight = max(maxHeight, heights_127362_g174452.w);
				#endif
				#ifdef TVE_TERRAIN_16
				maxHeight = max(maxHeight, heights_087362_g174452.x);
				maxHeight = max(maxHeight, heights_087362_g174452.y);
				maxHeight = max(maxHeight, heights_087362_g174452.z);
				maxHeight = max(maxHeight, heights_087362_g174452.w);
				maxHeight = max(maxHeight, heights_127362_g174452.x);
				maxHeight = max(maxHeight, heights_127362_g174452.y);
				maxHeight = max(maxHeight, heights_127362_g174452.z);
				maxHeight = max(maxHeight, heights_127362_g174452.w);
				maxHeight = max(maxHeight, heights_167362_g174452.x);
				maxHeight = max(maxHeight, heights_167362_g174452.y);
				maxHeight = max(maxHeight, heights_167362_g174452.z);
				maxHeight = max(maxHeight, heights_167362_g174452.w);
				#endif
				float transition = max(heightTransition7362_g174452, 0.01);
				weightedHeights_04 = float4 ( heights_047362_g174452.x, heights_047362_g174452.y, heights_047362_g174452.z, heights_047362_g174452.w );
				weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
				weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g174452;
				#ifdef TVE_TERRAIN_08
				weightedHeights_08 = float4 ( heights_087362_g174452.x, heights_087362_g174452.y, heights_087362_g174452.z, heights_087362_g174452.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g174452;
				#endif
				#ifdef TVE_TERRAIN_12
				weightedHeights_08 = float4 ( heights_087362_g174452.x, heights_087362_g174452.y, heights_087362_g174452.z, heights_087362_g174452.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g174452;
				weightedHeights_12 = float4 ( heights_127362_g174452.x, heights_127362_g174452.y, heights_127362_g174452.z, heights_127362_g174452.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g174452;
				#endif
				#ifdef TVE_TERRAIN_16
				weightedHeights_08 = float4 ( heights_087362_g174452.x, heights_087362_g174452.y, heights_087362_g174452.z, heights_087362_g174452.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g174452;
				weightedHeights_12 = float4 ( heights_127362_g174452.x, heights_127362_g174452.y, heights_127362_g174452.z, heights_127362_g174452.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g174452;
				weightedHeights_16 = float4 ( heights_167362_g174452.x, heights_167362_g174452.y, heights_167362_g174452.z, heights_167362_g174452.w );
				weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
				weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g174452;
				#endif
				float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
				float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
				float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
				float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
				float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
				weights_047362_g174452 = weightedHeights_04 / sumHeight.xxxx;
				#ifdef TVE_TERRAIN_08
				weights_087362_g174452 = weightedHeights_08 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_12
				weights_087362_g174452 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g174452 = weightedHeights_12 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_16
				weights_087362_g174452 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g174452 = weightedHeights_12 / sumHeight.xxxx;
				weights_167362_g174452 = weightedHeights_16 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8792_g174452 = weights_047362_g174452;
				#else
				float4 staticSwitch8792_g174452 = control_047362_g174452;
				#endif
				half4 Terrain_Weights_046781_g174452 = staticSwitch8792_g174452;
				half4 Weights52_g174457 = Terrain_Weights_046781_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174498) = _TerrainAlbedoTex1;
				float localFilterTexture19_g174558 = ( 0.0 );
				SamplerState SamplerDefault19_g174558 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174558 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174558 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174558 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174558 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174558 = SamplerDefault19_g174558;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174558 = SamplerDefault19_g174558;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174558 = SamplerPoint19_g174558;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174558 = SamplerLow19_g174558;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174558 = SamplerMedium19_g174558;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174558 = SamplerHigh19_g174558;
				#endif
				SamplerState Sampler238_g174498 = SS19_g174558;
				float4 temp_output_37_0_g174498 = Input_Terrain_Coords_016785_g174452;
				half4 Coords238_g174498 = temp_output_37_0_g174498;
				float3 temp_output_279_0_g174498 = Input_Position9197_g174452;
				half3 WorldPosition238_g174498 = temp_output_279_0_g174498;
				half4 localSamplePlanar2D238_g174498 = SamplePlanar2D( Texture238_g174498 , Sampler238_g174498 , Coords238_g174498 , WorldPosition238_g174498 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174498) = _TerrainAlbedoTex1;
				SamplerState Sampler246_g174498 = SS19_g174558;
				half4 Coords246_g174498 = temp_output_37_0_g174498;
				half3 WorldPosition246_g174498 = temp_output_279_0_g174498;
				float3 temp_output_280_0_g174498 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174498 = temp_output_280_0_g174498;
				half4 localSamplePlanar3D246_g174498 = SamplePlanar3D( Texture246_g174498 , Sampler246_g174498 , Coords246_g174498 , WorldPosition246_g174498 , WorldNormal246_g174498 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174498) = _TerrainAlbedoTex1;
				SamplerState Sampler234_g174498 = SS19_g174558;
				float4 Coords234_g174498 = temp_output_37_0_g174498;
				float3 WorldPosition234_g174498 = temp_output_279_0_g174498;
				float4 localSampleStochastic2D234_g174498 = SampleStochastic2D( Texture234_g174498 , Sampler234_g174498 , Coords234_g174498 , WorldPosition234_g174498 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174498) = _TerrainAlbedoTex1;
				SamplerState Sampler263_g174498 = SS19_g174558;
				half4 Coords263_g174498 = temp_output_37_0_g174498;
				half3 WorldPosition263_g174498 = temp_output_279_0_g174498;
				half3 WorldNormal263_g174498 = temp_output_280_0_g174498;
				half4 localSampleStochastic3D263_g174498 = SampleStochastic3D( Texture263_g174498 , Sampler263_g174498 , Coords263_g174498 , WorldPosition263_g174498 , WorldNormal263_g174498 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8614_g174452 = localSamplePlanar2D238_g174498;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8614_g174452 = localSamplePlanar3D246_g174498;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8614_g174452 = localSampleStochastic2D234_g174498;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8614_g174452 = localSampleStochastic3D263_g174498;
				#else
				float4 staticSwitch8614_g174452 = localSamplePlanar2D238_g174498;
				#endif
				half4 Layer133_g174457 = staticSwitch8614_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler238_g174499 = SS19_g174558;
				float4 temp_output_37_0_g174499 = Input_Terrain_Coords_026787_g174452;
				half4 Coords238_g174499 = temp_output_37_0_g174499;
				float3 temp_output_279_0_g174499 = Input_Position9197_g174452;
				half3 WorldPosition238_g174499 = temp_output_279_0_g174499;
				half4 localSamplePlanar2D238_g174499 = SamplePlanar2D( Texture238_g174499 , Sampler238_g174499 , Coords238_g174499 , WorldPosition238_g174499 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler246_g174499 = SS19_g174558;
				half4 Coords246_g174499 = temp_output_37_0_g174499;
				half3 WorldPosition246_g174499 = temp_output_279_0_g174499;
				float3 temp_output_280_0_g174499 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174499 = temp_output_280_0_g174499;
				half4 localSamplePlanar3D246_g174499 = SamplePlanar3D( Texture246_g174499 , Sampler246_g174499 , Coords246_g174499 , WorldPosition246_g174499 , WorldNormal246_g174499 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler234_g174499 = SS19_g174558;
				float4 Coords234_g174499 = temp_output_37_0_g174499;
				float3 WorldPosition234_g174499 = temp_output_279_0_g174499;
				float4 localSampleStochastic2D234_g174499 = SampleStochastic2D( Texture234_g174499 , Sampler234_g174499 , Coords234_g174499 , WorldPosition234_g174499 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174499) = _TerrainAlbedoTex2;
				SamplerState Sampler263_g174499 = SS19_g174558;
				half4 Coords263_g174499 = temp_output_37_0_g174499;
				half3 WorldPosition263_g174499 = temp_output_279_0_g174499;
				half3 WorldNormal263_g174499 = temp_output_280_0_g174499;
				half4 localSampleStochastic3D263_g174499 = SampleStochastic3D( Texture263_g174499 , Sampler263_g174499 , Coords263_g174499 , WorldPosition263_g174499 , WorldNormal263_g174499 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8629_g174452 = localSamplePlanar2D238_g174499;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8629_g174452 = localSamplePlanar3D246_g174499;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8629_g174452 = localSampleStochastic2D234_g174499;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8629_g174452 = localSampleStochastic3D263_g174499;
				#else
				float4 staticSwitch8629_g174452 = localSamplePlanar2D238_g174499;
				#endif
				half4 Layer237_g174457 = staticSwitch8629_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler238_g174502 = SS19_g174558;
				float4 temp_output_37_0_g174502 = Input_Terrain_Coords_036789_g174452;
				half4 Coords238_g174502 = temp_output_37_0_g174502;
				float3 temp_output_279_0_g174502 = Input_Position9197_g174452;
				half3 WorldPosition238_g174502 = temp_output_279_0_g174502;
				half4 localSamplePlanar2D238_g174502 = SamplePlanar2D( Texture238_g174502 , Sampler238_g174502 , Coords238_g174502 , WorldPosition238_g174502 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler246_g174502 = SS19_g174558;
				half4 Coords246_g174502 = temp_output_37_0_g174502;
				half3 WorldPosition246_g174502 = temp_output_279_0_g174502;
				float3 temp_output_280_0_g174502 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174502 = temp_output_280_0_g174502;
				half4 localSamplePlanar3D246_g174502 = SamplePlanar3D( Texture246_g174502 , Sampler246_g174502 , Coords246_g174502 , WorldPosition246_g174502 , WorldNormal246_g174502 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler234_g174502 = SS19_g174558;
				float4 Coords234_g174502 = temp_output_37_0_g174502;
				float3 WorldPosition234_g174502 = temp_output_279_0_g174502;
				float4 localSampleStochastic2D234_g174502 = SampleStochastic2D( Texture234_g174502 , Sampler234_g174502 , Coords234_g174502 , WorldPosition234_g174502 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174502) = _TerrainAlbedoTex3;
				SamplerState Sampler263_g174502 = SS19_g174558;
				half4 Coords263_g174502 = temp_output_37_0_g174502;
				half3 WorldPosition263_g174502 = temp_output_279_0_g174502;
				half3 WorldNormal263_g174502 = temp_output_280_0_g174502;
				half4 localSampleStochastic3D263_g174502 = SampleStochastic3D( Texture263_g174502 , Sampler263_g174502 , Coords263_g174502 , WorldPosition263_g174502 , WorldNormal263_g174502 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8630_g174452 = localSamplePlanar2D238_g174502;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8630_g174452 = localSamplePlanar3D246_g174502;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8630_g174452 = localSampleStochastic2D234_g174502;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8630_g174452 = localSampleStochastic3D263_g174502;
				#else
				float4 staticSwitch8630_g174452 = localSamplePlanar2D238_g174502;
				#endif
				half4 Layer338_g174457 = staticSwitch8630_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler238_g174504 = SS19_g174558;
				float4 temp_output_37_0_g174504 = Input_Terrain_Coords_046791_g174452;
				half4 Coords238_g174504 = temp_output_37_0_g174504;
				float3 temp_output_279_0_g174504 = Input_Position9197_g174452;
				half3 WorldPosition238_g174504 = temp_output_279_0_g174504;
				half4 localSamplePlanar2D238_g174504 = SamplePlanar2D( Texture238_g174504 , Sampler238_g174504 , Coords238_g174504 , WorldPosition238_g174504 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler246_g174504 = SS19_g174558;
				half4 Coords246_g174504 = temp_output_37_0_g174504;
				half3 WorldPosition246_g174504 = temp_output_279_0_g174504;
				float3 temp_output_280_0_g174504 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174504 = temp_output_280_0_g174504;
				half4 localSamplePlanar3D246_g174504 = SamplePlanar3D( Texture246_g174504 , Sampler246_g174504 , Coords246_g174504 , WorldPosition246_g174504 , WorldNormal246_g174504 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler234_g174504 = SS19_g174558;
				float4 Coords234_g174504 = temp_output_37_0_g174504;
				float3 WorldPosition234_g174504 = temp_output_279_0_g174504;
				float4 localSampleStochastic2D234_g174504 = SampleStochastic2D( Texture234_g174504 , Sampler234_g174504 , Coords234_g174504 , WorldPosition234_g174504 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174504) = _TerrainAlbedoTex4;
				SamplerState Sampler263_g174504 = SS19_g174558;
				half4 Coords263_g174504 = temp_output_37_0_g174504;
				half3 WorldPosition263_g174504 = temp_output_279_0_g174504;
				half3 WorldNormal263_g174504 = temp_output_280_0_g174504;
				half4 localSampleStochastic3D263_g174504 = SampleStochastic3D( Texture263_g174504 , Sampler263_g174504 , Coords263_g174504 , WorldPosition263_g174504 , WorldNormal263_g174504 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8631_g174452 = localSamplePlanar2D238_g174504;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8631_g174452 = localSamplePlanar3D246_g174504;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8631_g174452 = localSampleStochastic2D234_g174504;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8631_g174452 = localSampleStochastic3D263_g174504;
				#else
				float4 staticSwitch8631_g174452 = localSamplePlanar2D238_g174504;
				#endif
				half4 Layer439_g174457 = staticSwitch8631_g174452;
				float4 weightedBlendVar31_g174457 = Weights52_g174457;
				float4 weightedBlend31_g174457 = ( weightedBlendVar31_g174457.x*Layer133_g174457 + weightedBlendVar31_g174457.y*Layer237_g174457 + weightedBlendVar31_g174457.z*Layer338_g174457 + weightedBlendVar31_g174457.w*Layer439_g174457 );
				half4 Terrain_AAAA_047200_g174452 = weightedBlend31_g174457;
				half4 Layer_045_g174460 = Terrain_AAAA_047200_g174452;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8793_g174452 = weights_087362_g174452;
				#else
				float4 staticSwitch8793_g174452 = control_087362_g174452;
				#endif
				half4 Terrain_Weights_087340_g174452 = staticSwitch8793_g174452;
				half4 Weights52_g174467 = Terrain_Weights_087340_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler238_g174508 = SS19_g174558;
				float4 temp_output_37_0_g174508 = Input_Terrain_Coords_058750_g174452;
				half4 Coords238_g174508 = temp_output_37_0_g174508;
				float3 temp_output_279_0_g174508 = Input_Position9197_g174452;
				half3 WorldPosition238_g174508 = temp_output_279_0_g174508;
				half4 localSamplePlanar2D238_g174508 = SamplePlanar2D( Texture238_g174508 , Sampler238_g174508 , Coords238_g174508 , WorldPosition238_g174508 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler246_g174508 = SS19_g174558;
				half4 Coords246_g174508 = temp_output_37_0_g174508;
				half3 WorldPosition246_g174508 = temp_output_279_0_g174508;
				float3 temp_output_280_0_g174508 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174508 = temp_output_280_0_g174508;
				half4 localSamplePlanar3D246_g174508 = SamplePlanar3D( Texture246_g174508 , Sampler246_g174508 , Coords246_g174508 , WorldPosition246_g174508 , WorldNormal246_g174508 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler234_g174508 = SS19_g174558;
				float4 Coords234_g174508 = temp_output_37_0_g174508;
				float3 WorldPosition234_g174508 = temp_output_279_0_g174508;
				float4 localSampleStochastic2D234_g174508 = SampleStochastic2D( Texture234_g174508 , Sampler234_g174508 , Coords234_g174508 , WorldPosition234_g174508 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174508) = _TerrainAlbedoTex5;
				SamplerState Sampler263_g174508 = SS19_g174558;
				half4 Coords263_g174508 = temp_output_37_0_g174508;
				half3 WorldPosition263_g174508 = temp_output_279_0_g174508;
				half3 WorldNormal263_g174508 = temp_output_280_0_g174508;
				half4 localSampleStochastic3D263_g174508 = SampleStochastic3D( Texture263_g174508 , Sampler263_g174508 , Coords263_g174508 , WorldPosition263_g174508 , WorldNormal263_g174508 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8690_g174452 = localSamplePlanar2D238_g174508;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8690_g174452 = localSamplePlanar3D246_g174508;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8690_g174452 = localSampleStochastic2D234_g174508;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8690_g174452 = localSampleStochastic3D263_g174508;
				#else
				float4 staticSwitch8690_g174452 = localSamplePlanar2D238_g174508;
				#endif
				half4 Layer133_g174467 = staticSwitch8690_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler238_g174535 = SS19_g174558;
				float4 temp_output_37_0_g174535 = Input_Terrain_Coords_068751_g174452;
				half4 Coords238_g174535 = temp_output_37_0_g174535;
				float3 temp_output_279_0_g174535 = Input_Position9197_g174452;
				half3 WorldPosition238_g174535 = temp_output_279_0_g174535;
				half4 localSamplePlanar2D238_g174535 = SamplePlanar2D( Texture238_g174535 , Sampler238_g174535 , Coords238_g174535 , WorldPosition238_g174535 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler246_g174535 = SS19_g174558;
				half4 Coords246_g174535 = temp_output_37_0_g174535;
				half3 WorldPosition246_g174535 = temp_output_279_0_g174535;
				float3 temp_output_280_0_g174535 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174535 = temp_output_280_0_g174535;
				half4 localSamplePlanar3D246_g174535 = SamplePlanar3D( Texture246_g174535 , Sampler246_g174535 , Coords246_g174535 , WorldPosition246_g174535 , WorldNormal246_g174535 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler234_g174535 = SS19_g174558;
				float4 Coords234_g174535 = temp_output_37_0_g174535;
				float3 WorldPosition234_g174535 = temp_output_279_0_g174535;
				float4 localSampleStochastic2D234_g174535 = SampleStochastic2D( Texture234_g174535 , Sampler234_g174535 , Coords234_g174535 , WorldPosition234_g174535 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174535) = _TerrainAlbedoTex6;
				SamplerState Sampler263_g174535 = SS19_g174558;
				half4 Coords263_g174535 = temp_output_37_0_g174535;
				half3 WorldPosition263_g174535 = temp_output_279_0_g174535;
				half3 WorldNormal263_g174535 = temp_output_280_0_g174535;
				half4 localSampleStochastic3D263_g174535 = SampleStochastic3D( Texture263_g174535 , Sampler263_g174535 , Coords263_g174535 , WorldPosition263_g174535 , WorldNormal263_g174535 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8691_g174452 = localSamplePlanar2D238_g174535;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8691_g174452 = localSamplePlanar3D246_g174535;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8691_g174452 = localSampleStochastic2D234_g174535;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8691_g174452 = localSampleStochastic3D263_g174535;
				#else
				float4 staticSwitch8691_g174452 = localSamplePlanar2D238_g174535;
				#endif
				half4 Layer237_g174467 = staticSwitch8691_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler238_g174536 = SS19_g174558;
				float4 temp_output_37_0_g174536 = Input_Terrain_Coords_078752_g174452;
				half4 Coords238_g174536 = temp_output_37_0_g174536;
				float3 temp_output_279_0_g174536 = Input_Position9197_g174452;
				half3 WorldPosition238_g174536 = temp_output_279_0_g174536;
				half4 localSamplePlanar2D238_g174536 = SamplePlanar2D( Texture238_g174536 , Sampler238_g174536 , Coords238_g174536 , WorldPosition238_g174536 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler246_g174536 = SS19_g174558;
				half4 Coords246_g174536 = temp_output_37_0_g174536;
				half3 WorldPosition246_g174536 = temp_output_279_0_g174536;
				float3 temp_output_280_0_g174536 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174536 = temp_output_280_0_g174536;
				half4 localSamplePlanar3D246_g174536 = SamplePlanar3D( Texture246_g174536 , Sampler246_g174536 , Coords246_g174536 , WorldPosition246_g174536 , WorldNormal246_g174536 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler234_g174536 = SS19_g174558;
				float4 Coords234_g174536 = temp_output_37_0_g174536;
				float3 WorldPosition234_g174536 = temp_output_279_0_g174536;
				float4 localSampleStochastic2D234_g174536 = SampleStochastic2D( Texture234_g174536 , Sampler234_g174536 , Coords234_g174536 , WorldPosition234_g174536 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174536) = _TerrainAlbedoTex7;
				SamplerState Sampler263_g174536 = SS19_g174558;
				half4 Coords263_g174536 = temp_output_37_0_g174536;
				half3 WorldPosition263_g174536 = temp_output_279_0_g174536;
				half3 WorldNormal263_g174536 = temp_output_280_0_g174536;
				half4 localSampleStochastic3D263_g174536 = SampleStochastic3D( Texture263_g174536 , Sampler263_g174536 , Coords263_g174536 , WorldPosition263_g174536 , WorldNormal263_g174536 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8692_g174452 = localSamplePlanar2D238_g174536;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8692_g174452 = localSamplePlanar3D246_g174536;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8692_g174452 = localSampleStochastic2D234_g174536;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8692_g174452 = localSampleStochastic3D263_g174536;
				#else
				float4 staticSwitch8692_g174452 = localSamplePlanar2D238_g174536;
				#endif
				half4 Layer338_g174467 = staticSwitch8692_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler238_g174537 = SS19_g174558;
				float4 temp_output_37_0_g174537 = Input_Terrain_Coords_088749_g174452;
				half4 Coords238_g174537 = temp_output_37_0_g174537;
				float3 temp_output_279_0_g174537 = Input_Position9197_g174452;
				half3 WorldPosition238_g174537 = temp_output_279_0_g174537;
				half4 localSamplePlanar2D238_g174537 = SamplePlanar2D( Texture238_g174537 , Sampler238_g174537 , Coords238_g174537 , WorldPosition238_g174537 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler246_g174537 = SS19_g174558;
				half4 Coords246_g174537 = temp_output_37_0_g174537;
				half3 WorldPosition246_g174537 = temp_output_279_0_g174537;
				float3 temp_output_280_0_g174537 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174537 = temp_output_280_0_g174537;
				half4 localSamplePlanar3D246_g174537 = SamplePlanar3D( Texture246_g174537 , Sampler246_g174537 , Coords246_g174537 , WorldPosition246_g174537 , WorldNormal246_g174537 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler234_g174537 = SS19_g174558;
				float4 Coords234_g174537 = temp_output_37_0_g174537;
				float3 WorldPosition234_g174537 = temp_output_279_0_g174537;
				float4 localSampleStochastic2D234_g174537 = SampleStochastic2D( Texture234_g174537 , Sampler234_g174537 , Coords234_g174537 , WorldPosition234_g174537 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174537) = _TerrainAlbedoTex8;
				SamplerState Sampler263_g174537 = SS19_g174558;
				half4 Coords263_g174537 = temp_output_37_0_g174537;
				half3 WorldPosition263_g174537 = temp_output_279_0_g174537;
				half3 WorldNormal263_g174537 = temp_output_280_0_g174537;
				half4 localSampleStochastic3D263_g174537 = SampleStochastic3D( Texture263_g174537 , Sampler263_g174537 , Coords263_g174537 , WorldPosition263_g174537 , WorldNormal263_g174537 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8693_g174452 = localSamplePlanar2D238_g174537;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8693_g174452 = localSamplePlanar3D246_g174537;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8693_g174452 = localSampleStochastic2D234_g174537;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8693_g174452 = localSampleStochastic3D263_g174537;
				#else
				float4 staticSwitch8693_g174452 = localSamplePlanar2D238_g174537;
				#endif
				half4 Layer439_g174467 = staticSwitch8693_g174452;
				float4 weightedBlendVar31_g174467 = Weights52_g174467;
				float4 weightedBlend31_g174467 = ( weightedBlendVar31_g174467.x*Layer133_g174467 + weightedBlendVar31_g174467.y*Layer237_g174467 + weightedBlendVar31_g174467.z*Layer338_g174467 + weightedBlendVar31_g174467.w*Layer439_g174467 );
				half4 Terrain_AAAA_088665_g174452 = weightedBlend31_g174467;
				half4 Layer_0810_g174460 = Terrain_AAAA_088665_g174452;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8794_g174452 = weights_127362_g174452;
				#else
				float4 staticSwitch8794_g174452 = control_127362_g174452;
				#endif
				half4 Terrain_Weights_127710_g174452 = staticSwitch8794_g174452;
				half4 Weights52_g174474 = Terrain_Weights_127710_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler238_g174511 = SS19_g174558;
				float4 temp_output_37_0_g174511 = Input_Terrain_Coords_098833_g174452;
				half4 Coords238_g174511 = temp_output_37_0_g174511;
				float3 temp_output_279_0_g174511 = Input_Position9197_g174452;
				half3 WorldPosition238_g174511 = temp_output_279_0_g174511;
				half4 localSamplePlanar2D238_g174511 = SamplePlanar2D( Texture238_g174511 , Sampler238_g174511 , Coords238_g174511 , WorldPosition238_g174511 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler246_g174511 = SS19_g174558;
				half4 Coords246_g174511 = temp_output_37_0_g174511;
				half3 WorldPosition246_g174511 = temp_output_279_0_g174511;
				float3 temp_output_280_0_g174511 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174511 = temp_output_280_0_g174511;
				half4 localSamplePlanar3D246_g174511 = SamplePlanar3D( Texture246_g174511 , Sampler246_g174511 , Coords246_g174511 , WorldPosition246_g174511 , WorldNormal246_g174511 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler234_g174511 = SS19_g174558;
				float4 Coords234_g174511 = temp_output_37_0_g174511;
				float3 WorldPosition234_g174511 = temp_output_279_0_g174511;
				float4 localSampleStochastic2D234_g174511 = SampleStochastic2D( Texture234_g174511 , Sampler234_g174511 , Coords234_g174511 , WorldPosition234_g174511 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174511) = _TerrainAlbedoTex9;
				SamplerState Sampler263_g174511 = SS19_g174558;
				half4 Coords263_g174511 = temp_output_37_0_g174511;
				half3 WorldPosition263_g174511 = temp_output_279_0_g174511;
				half3 WorldNormal263_g174511 = temp_output_280_0_g174511;
				half4 localSampleStochastic3D263_g174511 = SampleStochastic3D( Texture263_g174511 , Sampler263_g174511 , Coords263_g174511 , WorldPosition263_g174511 , WorldNormal263_g174511 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8872_g174452 = localSamplePlanar2D238_g174511;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8872_g174452 = localSamplePlanar3D246_g174511;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8872_g174452 = localSampleStochastic2D234_g174511;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8872_g174452 = localSampleStochastic3D263_g174511;
				#else
				float4 staticSwitch8872_g174452 = localSamplePlanar2D238_g174511;
				#endif
				half4 Layer133_g174474 = staticSwitch8872_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler238_g174514 = SS19_g174558;
				float4 temp_output_37_0_g174514 = Input_Terrain_Coords_108834_g174452;
				half4 Coords238_g174514 = temp_output_37_0_g174514;
				float3 temp_output_279_0_g174514 = Input_Position9197_g174452;
				half3 WorldPosition238_g174514 = temp_output_279_0_g174514;
				half4 localSamplePlanar2D238_g174514 = SamplePlanar2D( Texture238_g174514 , Sampler238_g174514 , Coords238_g174514 , WorldPosition238_g174514 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler246_g174514 = SS19_g174558;
				half4 Coords246_g174514 = temp_output_37_0_g174514;
				half3 WorldPosition246_g174514 = temp_output_279_0_g174514;
				float3 temp_output_280_0_g174514 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174514 = temp_output_280_0_g174514;
				half4 localSamplePlanar3D246_g174514 = SamplePlanar3D( Texture246_g174514 , Sampler246_g174514 , Coords246_g174514 , WorldPosition246_g174514 , WorldNormal246_g174514 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler234_g174514 = SS19_g174558;
				float4 Coords234_g174514 = temp_output_37_0_g174514;
				float3 WorldPosition234_g174514 = temp_output_279_0_g174514;
				float4 localSampleStochastic2D234_g174514 = SampleStochastic2D( Texture234_g174514 , Sampler234_g174514 , Coords234_g174514 , WorldPosition234_g174514 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174514) = _TerrainAlbedoTex10;
				SamplerState Sampler263_g174514 = SS19_g174558;
				half4 Coords263_g174514 = temp_output_37_0_g174514;
				half3 WorldPosition263_g174514 = temp_output_279_0_g174514;
				half3 WorldNormal263_g174514 = temp_output_280_0_g174514;
				half4 localSampleStochastic3D263_g174514 = SampleStochastic3D( Texture263_g174514 , Sampler263_g174514 , Coords263_g174514 , WorldPosition263_g174514 , WorldNormal263_g174514 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8873_g174452 = localSamplePlanar2D238_g174514;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8873_g174452 = localSamplePlanar3D246_g174514;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8873_g174452 = localSampleStochastic2D234_g174514;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8873_g174452 = localSampleStochastic3D263_g174514;
				#else
				float4 staticSwitch8873_g174452 = localSamplePlanar2D238_g174514;
				#endif
				half4 Layer237_g174474 = staticSwitch8873_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler238_g174515 = SS19_g174558;
				float4 temp_output_37_0_g174515 = Input_Terrain_Coords_118835_g174452;
				half4 Coords238_g174515 = temp_output_37_0_g174515;
				float3 temp_output_279_0_g174515 = Input_Position9197_g174452;
				half3 WorldPosition238_g174515 = temp_output_279_0_g174515;
				half4 localSamplePlanar2D238_g174515 = SamplePlanar2D( Texture238_g174515 , Sampler238_g174515 , Coords238_g174515 , WorldPosition238_g174515 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler246_g174515 = SS19_g174558;
				half4 Coords246_g174515 = temp_output_37_0_g174515;
				half3 WorldPosition246_g174515 = temp_output_279_0_g174515;
				float3 temp_output_280_0_g174515 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174515 = temp_output_280_0_g174515;
				half4 localSamplePlanar3D246_g174515 = SamplePlanar3D( Texture246_g174515 , Sampler246_g174515 , Coords246_g174515 , WorldPosition246_g174515 , WorldNormal246_g174515 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler234_g174515 = SS19_g174558;
				float4 Coords234_g174515 = temp_output_37_0_g174515;
				float3 WorldPosition234_g174515 = temp_output_279_0_g174515;
				float4 localSampleStochastic2D234_g174515 = SampleStochastic2D( Texture234_g174515 , Sampler234_g174515 , Coords234_g174515 , WorldPosition234_g174515 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174515) = _TerrainAlbedoTex11;
				SamplerState Sampler263_g174515 = SS19_g174558;
				half4 Coords263_g174515 = temp_output_37_0_g174515;
				half3 WorldPosition263_g174515 = temp_output_279_0_g174515;
				half3 WorldNormal263_g174515 = temp_output_280_0_g174515;
				half4 localSampleStochastic3D263_g174515 = SampleStochastic3D( Texture263_g174515 , Sampler263_g174515 , Coords263_g174515 , WorldPosition263_g174515 , WorldNormal263_g174515 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8874_g174452 = localSamplePlanar2D238_g174515;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8874_g174452 = localSamplePlanar3D246_g174515;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8874_g174452 = localSampleStochastic2D234_g174515;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8874_g174452 = localSampleStochastic3D263_g174515;
				#else
				float4 staticSwitch8874_g174452 = localSamplePlanar2D238_g174515;
				#endif
				half4 Layer338_g174474 = staticSwitch8874_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler238_g174516 = SS19_g174558;
				float4 temp_output_37_0_g174516 = Input_Terrain_Coords_128836_g174452;
				half4 Coords238_g174516 = temp_output_37_0_g174516;
				float3 temp_output_279_0_g174516 = Input_Position9197_g174452;
				half3 WorldPosition238_g174516 = temp_output_279_0_g174516;
				half4 localSamplePlanar2D238_g174516 = SamplePlanar2D( Texture238_g174516 , Sampler238_g174516 , Coords238_g174516 , WorldPosition238_g174516 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler246_g174516 = SS19_g174558;
				half4 Coords246_g174516 = temp_output_37_0_g174516;
				half3 WorldPosition246_g174516 = temp_output_279_0_g174516;
				float3 temp_output_280_0_g174516 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174516 = temp_output_280_0_g174516;
				half4 localSamplePlanar3D246_g174516 = SamplePlanar3D( Texture246_g174516 , Sampler246_g174516 , Coords246_g174516 , WorldPosition246_g174516 , WorldNormal246_g174516 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler234_g174516 = SS19_g174558;
				float4 Coords234_g174516 = temp_output_37_0_g174516;
				float3 WorldPosition234_g174516 = temp_output_279_0_g174516;
				float4 localSampleStochastic2D234_g174516 = SampleStochastic2D( Texture234_g174516 , Sampler234_g174516 , Coords234_g174516 , WorldPosition234_g174516 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174516) = _TerrainAlbedoTex12;
				SamplerState Sampler263_g174516 = SS19_g174558;
				half4 Coords263_g174516 = temp_output_37_0_g174516;
				half3 WorldPosition263_g174516 = temp_output_279_0_g174516;
				half3 WorldNormal263_g174516 = temp_output_280_0_g174516;
				half4 localSampleStochastic3D263_g174516 = SampleStochastic3D( Texture263_g174516 , Sampler263_g174516 , Coords263_g174516 , WorldPosition263_g174516 , WorldNormal263_g174516 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8875_g174452 = localSamplePlanar2D238_g174516;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8875_g174452 = localSamplePlanar3D246_g174516;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8875_g174452 = localSampleStochastic2D234_g174516;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8875_g174452 = localSampleStochastic3D263_g174516;
				#else
				float4 staticSwitch8875_g174452 = localSamplePlanar2D238_g174516;
				#endif
				half4 Layer439_g174474 = staticSwitch8875_g174452;
				float4 weightedBlendVar31_g174474 = Weights52_g174474;
				float4 weightedBlend31_g174474 = ( weightedBlendVar31_g174474.x*Layer133_g174474 + weightedBlendVar31_g174474.y*Layer237_g174474 + weightedBlendVar31_g174474.z*Layer338_g174474 + weightedBlendVar31_g174474.w*Layer439_g174474 );
				half4 Terrain_AAAA_128851_g174452 = weightedBlend31_g174474;
				half4 Layer_1243_g174460 = Terrain_AAAA_128851_g174452;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8795_g174452 = weights_167362_g174452;
				#else
				float4 staticSwitch8795_g174452 = control_167362_g174452;
				#endif
				half4 Terrain_Weights_167709_g174452 = staticSwitch8795_g174452;
				half4 Weights52_g174481 = Terrain_Weights_167709_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler238_g174520 = SS19_g174558;
				float4 temp_output_37_0_g174520 = Input_Terrain_Coords_138960_g174452;
				half4 Coords238_g174520 = temp_output_37_0_g174520;
				float3 temp_output_279_0_g174520 = Input_Position9197_g174452;
				half3 WorldPosition238_g174520 = temp_output_279_0_g174520;
				half4 localSamplePlanar2D238_g174520 = SamplePlanar2D( Texture238_g174520 , Sampler238_g174520 , Coords238_g174520 , WorldPosition238_g174520 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler246_g174520 = SS19_g174558;
				half4 Coords246_g174520 = temp_output_37_0_g174520;
				half3 WorldPosition246_g174520 = temp_output_279_0_g174520;
				float3 temp_output_280_0_g174520 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174520 = temp_output_280_0_g174520;
				half4 localSamplePlanar3D246_g174520 = SamplePlanar3D( Texture246_g174520 , Sampler246_g174520 , Coords246_g174520 , WorldPosition246_g174520 , WorldNormal246_g174520 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler234_g174520 = SS19_g174558;
				float4 Coords234_g174520 = temp_output_37_0_g174520;
				float3 WorldPosition234_g174520 = temp_output_279_0_g174520;
				float4 localSampleStochastic2D234_g174520 = SampleStochastic2D( Texture234_g174520 , Sampler234_g174520 , Coords234_g174520 , WorldPosition234_g174520 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174520) = _TerrainAlbedoTex13;
				SamplerState Sampler263_g174520 = SS19_g174558;
				half4 Coords263_g174520 = temp_output_37_0_g174520;
				half3 WorldPosition263_g174520 = temp_output_279_0_g174520;
				half3 WorldNormal263_g174520 = temp_output_280_0_g174520;
				half4 localSampleStochastic3D263_g174520 = SampleStochastic3D( Texture263_g174520 , Sampler263_g174520 , Coords263_g174520 , WorldPosition263_g174520 , WorldNormal263_g174520 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8972_g174452 = localSamplePlanar2D238_g174520;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8972_g174452 = localSamplePlanar3D246_g174520;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8972_g174452 = localSampleStochastic2D234_g174520;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8972_g174452 = localSampleStochastic3D263_g174520;
				#else
				float4 staticSwitch8972_g174452 = localSamplePlanar2D238_g174520;
				#endif
				half4 Layer133_g174481 = staticSwitch8972_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler238_g174526 = SS19_g174558;
				float4 temp_output_37_0_g174526 = Input_Terrain_Coords_148961_g174452;
				half4 Coords238_g174526 = temp_output_37_0_g174526;
				float3 temp_output_279_0_g174526 = Input_Position9197_g174452;
				half3 WorldPosition238_g174526 = temp_output_279_0_g174526;
				half4 localSamplePlanar2D238_g174526 = SamplePlanar2D( Texture238_g174526 , Sampler238_g174526 , Coords238_g174526 , WorldPosition238_g174526 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler246_g174526 = SS19_g174558;
				half4 Coords246_g174526 = temp_output_37_0_g174526;
				half3 WorldPosition246_g174526 = temp_output_279_0_g174526;
				float3 temp_output_280_0_g174526 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174526 = temp_output_280_0_g174526;
				half4 localSamplePlanar3D246_g174526 = SamplePlanar3D( Texture246_g174526 , Sampler246_g174526 , Coords246_g174526 , WorldPosition246_g174526 , WorldNormal246_g174526 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler234_g174526 = SS19_g174558;
				float4 Coords234_g174526 = temp_output_37_0_g174526;
				float3 WorldPosition234_g174526 = temp_output_279_0_g174526;
				float4 localSampleStochastic2D234_g174526 = SampleStochastic2D( Texture234_g174526 , Sampler234_g174526 , Coords234_g174526 , WorldPosition234_g174526 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174526) = _TerrainAlbedoTex14;
				SamplerState Sampler263_g174526 = SS19_g174558;
				half4 Coords263_g174526 = temp_output_37_0_g174526;
				half3 WorldPosition263_g174526 = temp_output_279_0_g174526;
				half3 WorldNormal263_g174526 = temp_output_280_0_g174526;
				half4 localSampleStochastic3D263_g174526 = SampleStochastic3D( Texture263_g174526 , Sampler263_g174526 , Coords263_g174526 , WorldPosition263_g174526 , WorldNormal263_g174526 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8973_g174452 = localSamplePlanar2D238_g174526;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8973_g174452 = localSamplePlanar3D246_g174526;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8973_g174452 = localSampleStochastic2D234_g174526;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8973_g174452 = localSampleStochastic3D263_g174526;
				#else
				float4 staticSwitch8973_g174452 = localSamplePlanar2D238_g174526;
				#endif
				half4 Layer237_g174481 = staticSwitch8973_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler238_g174527 = SS19_g174558;
				float4 temp_output_37_0_g174527 = Input_Terrain_Coords_158962_g174452;
				half4 Coords238_g174527 = temp_output_37_0_g174527;
				float3 temp_output_279_0_g174527 = Input_Position9197_g174452;
				half3 WorldPosition238_g174527 = temp_output_279_0_g174527;
				half4 localSamplePlanar2D238_g174527 = SamplePlanar2D( Texture238_g174527 , Sampler238_g174527 , Coords238_g174527 , WorldPosition238_g174527 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler246_g174527 = SS19_g174558;
				half4 Coords246_g174527 = temp_output_37_0_g174527;
				half3 WorldPosition246_g174527 = temp_output_279_0_g174527;
				float3 temp_output_280_0_g174527 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174527 = temp_output_280_0_g174527;
				half4 localSamplePlanar3D246_g174527 = SamplePlanar3D( Texture246_g174527 , Sampler246_g174527 , Coords246_g174527 , WorldPosition246_g174527 , WorldNormal246_g174527 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler234_g174527 = SS19_g174558;
				float4 Coords234_g174527 = temp_output_37_0_g174527;
				float3 WorldPosition234_g174527 = temp_output_279_0_g174527;
				float4 localSampleStochastic2D234_g174527 = SampleStochastic2D( Texture234_g174527 , Sampler234_g174527 , Coords234_g174527 , WorldPosition234_g174527 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174527) = _TerrainAlbedoTex15;
				SamplerState Sampler263_g174527 = SS19_g174558;
				half4 Coords263_g174527 = temp_output_37_0_g174527;
				half3 WorldPosition263_g174527 = temp_output_279_0_g174527;
				half3 WorldNormal263_g174527 = temp_output_280_0_g174527;
				half4 localSampleStochastic3D263_g174527 = SampleStochastic3D( Texture263_g174527 , Sampler263_g174527 , Coords263_g174527 , WorldPosition263_g174527 , WorldNormal263_g174527 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8974_g174452 = localSamplePlanar2D238_g174527;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8974_g174452 = localSamplePlanar3D246_g174527;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8974_g174452 = localSampleStochastic2D234_g174527;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8974_g174452 = localSampleStochastic3D263_g174527;
				#else
				float4 staticSwitch8974_g174452 = localSamplePlanar2D238_g174527;
				#endif
				half4 Layer338_g174481 = staticSwitch8974_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler238_g174528 = SS19_g174558;
				float4 temp_output_37_0_g174528 = Input_Terrain_Coords_168959_g174452;
				half4 Coords238_g174528 = temp_output_37_0_g174528;
				float3 temp_output_279_0_g174528 = Input_Position9197_g174452;
				half3 WorldPosition238_g174528 = temp_output_279_0_g174528;
				half4 localSamplePlanar2D238_g174528 = SamplePlanar2D( Texture238_g174528 , Sampler238_g174528 , Coords238_g174528 , WorldPosition238_g174528 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler246_g174528 = SS19_g174558;
				half4 Coords246_g174528 = temp_output_37_0_g174528;
				half3 WorldPosition246_g174528 = temp_output_279_0_g174528;
				float3 temp_output_280_0_g174528 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174528 = temp_output_280_0_g174528;
				half4 localSamplePlanar3D246_g174528 = SamplePlanar3D( Texture246_g174528 , Sampler246_g174528 , Coords246_g174528 , WorldPosition246_g174528 , WorldNormal246_g174528 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler234_g174528 = SS19_g174558;
				float4 Coords234_g174528 = temp_output_37_0_g174528;
				float3 WorldPosition234_g174528 = temp_output_279_0_g174528;
				float4 localSampleStochastic2D234_g174528 = SampleStochastic2D( Texture234_g174528 , Sampler234_g174528 , Coords234_g174528 , WorldPosition234_g174528 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174528) = _TerrainAlbedoTex16;
				SamplerState Sampler263_g174528 = SS19_g174558;
				half4 Coords263_g174528 = temp_output_37_0_g174528;
				half3 WorldPosition263_g174528 = temp_output_279_0_g174528;
				half3 WorldNormal263_g174528 = temp_output_280_0_g174528;
				half4 localSampleStochastic3D263_g174528 = SampleStochastic3D( Texture263_g174528 , Sampler263_g174528 , Coords263_g174528 , WorldPosition263_g174528 , WorldNormal263_g174528 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8975_g174452 = localSamplePlanar2D238_g174528;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8975_g174452 = localSamplePlanar3D246_g174528;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8975_g174452 = localSampleStochastic2D234_g174528;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8975_g174452 = localSampleStochastic3D263_g174528;
				#else
				float4 staticSwitch8975_g174452 = localSamplePlanar2D238_g174528;
				#endif
				half4 Layer439_g174481 = staticSwitch8975_g174452;
				float4 weightedBlendVar31_g174481 = Weights52_g174481;
				float4 weightedBlend31_g174481 = ( weightedBlendVar31_g174481.x*Layer133_g174481 + weightedBlendVar31_g174481.y*Layer237_g174481 + weightedBlendVar31_g174481.z*Layer338_g174481 + weightedBlendVar31_g174481.w*Layer439_g174481 );
				half4 Terrain_AAAA_168986_g174452 = weightedBlend31_g174481;
				half4 Layer_1644_g174460 = Terrain_AAAA_168986_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174460 = Layer_045_g174460;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174460 = ( Layer_045_g174460 + Layer_0810_g174460 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174460 = ( Layer_045_g174460 + Layer_0810_g174460 + Layer_1243_g174460 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174460 = ( Layer_045_g174460 + Layer_0810_g174460 + Layer_1243_g174460 + Layer_1644_g174460 );
				#else
				float4 staticSwitch40_g174460 = Layer_045_g174460;
				#endif
				half4 Blend_Albedo7468_g174452 = staticSwitch40_g174460;
				half4 Weights52_g174546 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174546 = _TerrainColor1;
				half4 Layer237_g174546 = _TerrainColor2;
				half4 Layer338_g174546 = _TerrainColor3;
				half4 Layer439_g174546 = _TerrainColor4;
				float4 weightedBlendVar31_g174546 = Weights52_g174546;
				float4 weightedBlend31_g174546 = ( weightedBlendVar31_g174546.x*Layer133_g174546 + weightedBlendVar31_g174546.y*Layer237_g174546 + weightedBlendVar31_g174546.z*Layer338_g174546 + weightedBlendVar31_g174546.w*Layer439_g174546 );
				half4 Terrain_Color_049349_g174452 = weightedBlend31_g174546;
				half4 Layer_045_g174551 = Terrain_Color_049349_g174452;
				half4 Weights52_g174547 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174547 = _TerrainColor5;
				half4 Layer237_g174547 = _TerrainColor6;
				half4 Layer338_g174547 = _TerrainColor7;
				half4 Layer439_g174547 = _TerrainColor8;
				float4 weightedBlendVar31_g174547 = Weights52_g174547;
				float4 weightedBlend31_g174547 = ( weightedBlendVar31_g174547.x*Layer133_g174547 + weightedBlendVar31_g174547.y*Layer237_g174547 + weightedBlendVar31_g174547.z*Layer338_g174547 + weightedBlendVar31_g174547.w*Layer439_g174547 );
				half4 Terrain_Color_089361_g174452 = weightedBlend31_g174547;
				half4 Layer_0810_g174551 = Terrain_Color_089361_g174452;
				half4 Weights52_g174548 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174548 = _TerrainColor9;
				half4 Layer237_g174548 = _TerrainColor10;
				half4 Layer338_g174548 = _TerrainColor11;
				half4 Layer439_g174548 = _TerrainColor12;
				float4 weightedBlendVar31_g174548 = Weights52_g174548;
				float4 weightedBlend31_g174548 = ( weightedBlendVar31_g174548.x*Layer133_g174548 + weightedBlendVar31_g174548.y*Layer237_g174548 + weightedBlendVar31_g174548.z*Layer338_g174548 + weightedBlendVar31_g174548.w*Layer439_g174548 );
				half4 Terrain_Color_129373_g174452 = weightedBlend31_g174548;
				half4 Layer_1243_g174551 = Terrain_Color_129373_g174452;
				half4 Weights52_g174549 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174549 = _TerrainColor13;
				half4 Layer237_g174549 = _TerrainColor14;
				half4 Layer338_g174549 = _TerrainColor15;
				half4 Layer439_g174549 = _TerrainColor16;
				float4 weightedBlendVar31_g174549 = Weights52_g174549;
				float4 weightedBlend31_g174549 = ( weightedBlendVar31_g174549.x*Layer133_g174549 + weightedBlendVar31_g174549.y*Layer237_g174549 + weightedBlendVar31_g174549.z*Layer338_g174549 + weightedBlendVar31_g174549.w*Layer439_g174549 );
				half4 Terrain_Color_169381_g174452 = weightedBlend31_g174549;
				half4 Layer_1644_g174551 = Terrain_Color_169381_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174551 = Layer_045_g174551;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174551 = ( Layer_045_g174551 + Layer_0810_g174551 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174551 = ( Layer_045_g174551 + Layer_0810_g174551 + Layer_1243_g174551 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174551 = ( Layer_045_g174551 + Layer_0810_g174551 + Layer_1243_g174551 + Layer_1644_g174551 );
				#else
				float4 staticSwitch40_g174551 = Layer_045_g174551;
				#endif
				half4 Blend_TerrainColor9387_g174452 = staticSwitch40_g174551;
				half3 Final_Albedo9144_g174452 = ( (Blend_Albedo7468_g174452).xyz * (Blend_TerrainColor9387_g174452).rgb * (_TerrainColor).rgb );
				half3 Local_Albedo768_g174425 = Final_Albedo9144_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174446) = _TerrainMaskTex;
				SamplerState Sampler276_g174446 = sampler_Linear_Repeat;
				float4 temp_output_6_0_g174444 = _terrain_mask_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174444 = ( temp_output_6_0_g174444 + ( ( _TerrainMaskSampleMode + _TerrainMaskCoordMode + _TerrainMaskCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174444 = temp_output_6_0_g174444;
				#endif
				half4 Local_MaskCoords813_g174425 = staticSwitch14_g174444;
				float4 temp_output_37_0_g174446 = Local_MaskCoords813_g174425;
				half4 Coords276_g174446 = temp_output_37_0_g174446;
				half2 TexCoord276_g174446 = IN.ase_texcoord2.xy;
				half4 localSampleMain276_g174446 = SampleMain( Texture276_g174446 , Sampler276_g174446 , Coords276_g174446 , TexCoord276_g174446 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174446) = _TerrainMaskTex;
				SamplerState Sampler275_g174446 = sampler_Linear_Repeat;
				half4 Coords275_g174446 = temp_output_37_0_g174446;
				half2 TexCoord275_g174446 = IN.ase_texcoord3.xy;
				half4 localSampleExtra275_g174446 = SampleExtra( Texture275_g174446 , Sampler275_g174446 , Coords275_g174446 , TexCoord275_g174446 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174446) = _TerrainMaskTex;
				SamplerState Sampler238_g174446 = sampler_Linear_Repeat;
				half4 Coords238_g174446 = temp_output_37_0_g174446;
				float3 temp_output_279_0_g174446 = Model_PositionWO636_g174425;
				half3 WorldPosition238_g174446 = temp_output_279_0_g174446;
				half4 localSamplePlanar2D238_g174446 = SamplePlanar2D( Texture238_g174446 , Sampler238_g174446 , Coords238_g174446 , WorldPosition238_g174446 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174446) = _TerrainMaskTex;
				SamplerState Sampler246_g174446 = sampler_Linear_Repeat;
				half4 Coords246_g174446 = temp_output_37_0_g174446;
				half3 WorldPosition246_g174446 = temp_output_279_0_g174446;
				float3 temp_output_280_0_g174446 = Model_NormalRawWS869_g174425;
				half3 WorldNormal246_g174446 = temp_output_280_0_g174446;
				half4 localSamplePlanar3D246_g174446 = SamplePlanar3D( Texture246_g174446 , Sampler246_g174446 , Coords246_g174446 , WorldPosition246_g174446 , WorldNormal246_g174446 );
				#if defined( TVE_TERRAIN_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch817_g174425 = localSampleMain276_g174446;
				#elif defined( TVE_TERRAIN_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch817_g174425 = localSampleExtra275_g174446;
				#elif defined( TVE_TERRAIN_MASK_SAMPLE_PLANAR_2D )
				float4 staticSwitch817_g174425 = localSamplePlanar2D238_g174446;
				#elif defined( TVE_TERRAIN_MASK_SAMPLE_PLANAR_3D )
				float4 staticSwitch817_g174425 = localSamplePlanar3D246_g174446;
				#else
				float4 staticSwitch817_g174425 = localSampleMain276_g174446;
				#endif
				half4 Local_MaskTex861_g174425 = staticSwitch817_g174425;
				float clampResult17_g174435 = clamp( (Local_MaskTex861_g174425).x , 0.0001 , 0.9999 );
				float temp_output_7_0_g174436 = _TerrainMaskRemap.x;
				float temp_output_10_0_g174436 = ( _TerrainMaskRemap.y - temp_output_7_0_g174436 );
				float lerpResult1108_g174425 = lerp( 1.0 , saturate( ( ( clampResult17_g174435 - temp_output_7_0_g174436 ) / ( temp_output_10_0_g174436 + 0.0001 ) ) ) , _TerrainMaskValue);
				half Detail_TexMask429_g174425 = lerpResult1108_g174425;
				half3 Visual_NormalWS953_g174425 = Out_NormalWS4_g174428;
				float clampResult17_g174437 = clamp( saturate( (Visual_NormalWS953_g174425).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174438 = _TerrainProjRemap.x;
				float temp_output_10_0_g174438 = ( _TerrainProjRemap.y - temp_output_7_0_g174438 );
				float lerpResult1106_g174425 = lerp( 1.0 , saturate( ( ( clampResult17_g174437 - temp_output_7_0_g174438 ) / ( temp_output_10_0_g174438 + 0.0001 ) ) ) , _TerrainProjValue);
				half Blend_ProjMask912_g174425 = lerpResult1106_g174425;
				TVEGlobalData Data15_g174430 = Data204_g173897;
				float Out_Dummy15_g174430 = 0;
				float4 Out_CoatParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174430 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174430 = float4( 0,0,0,0 );
				Out_Dummy15_g174430 = Data15_g174430.Dummy;
				Out_CoatParams15_g174430 = Data15_g174430.CoatParams;
				Out_PaintParams15_g174430 = Data15_g174430.PaintParams;
				Out_GlowParams15_g174430 = Data15_g174430.GlowParams;
				Out_AtmoParams15_g174430= Data15_g174430.AtmoParams;
				Out_FadeParams15_g174430= Data15_g174430.FadeParams;
				Out_FormParams15_g174430 = Data15_g174430.FormParams;
				Out_LandParams15_g174430 = Data15_g174430.LandParams;
				Out_WindParams15_g174430 = Data15_g174430.WindParams;
				Out_PushParams15_g174430 = Data15_g174430.PushParams;
				half4 Global_CoatParams972_g174425 = Out_CoatParams15_g174430;
				float lerpResult1103_g174425 = lerp( 1.0 , (Global_CoatParams972_g174425).x , TVE_IsEnabled);
				#ifdef TVE_TERRAIN_ELEMENT
				float staticSwitch965_g174425 = lerpResult1103_g174425;
				#else
				float staticSwitch965_g174425 = 1.0;
				#endif
				half Blend_GlobalMask968_g174425 = staticSwitch965_g174425;
				half4 Global_FormParams1018_g174425 = Out_FormParams15_g174430;
				float temp_output_1128_0_g174425 = saturate( ( ( (Global_FormParams1018_g174425).z - (Model_PositionWO636_g174425).y ) + _TerrainLandOffsetValue ) );
				float lerpResult1130_g174425 = lerp( 1.0 , temp_output_1128_0_g174425 , ( _TerrainLandValue * _TerrainLandMode ));
				half Blend_LandMask_Mul1132_g174425 = lerpResult1130_g174425;
				half Blend_LandMask_Add1131_g174425 = ( temp_output_1128_0_g174425 * _TerrainLandValue );
				float clampResult17_g174450 = clamp( ( ( _TerrainIntensityValue * Detail_TexMask429_g174425 * Blend_ProjMask912_g174425 * Blend_GlobalMask968_g174425 * Blend_LandMask_Mul1132_g174425 ) + Blend_LandMask_Add1131_g174425 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174449 = _TerrainBlendRemap.x;
				float temp_output_10_0_g174449 = ( _TerrainBlendRemap.y - temp_output_7_0_g174449 );
				half Terrain_Mask412_g174425 = saturate( ( ( clampResult17_g174450 - temp_output_7_0_g174449 ) / ( temp_output_10_0_g174449 + 0.0001 ) ) );
				float3 lerpResult989_g174425 = lerp( Visual_Albedo527_g174425 , Local_Albedo768_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float3 staticSwitch415_g174425 = lerpResult989_g174425;
				#else
				float3 staticSwitch415_g174425 = Visual_Albedo527_g174425;
				#endif
				half3 Final_Albedo601_g174425 = staticSwitch415_g174425;
				float3 In_Albedo3_g174429 = Final_Albedo601_g174425;
				float3 In_AlbedoRaw3_g174429 = Final_Albedo601_g174425;
				half2 Visual_NormalTS529_g174425 = Out_NormalTS4_g174428;
				half4 Weights52_g174453 = Terrain_Weights_046781_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174544) = _TerrainNormalTex1;
				float localFilterTexture29_g174559 = ( 0.0 );
				SamplerState SamplerDefault29_g174559 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174559 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174559 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174559 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174559 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174559 = SamplerDefault29_g174559;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174559 = SamplerDefault29_g174559;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174559 = SamplerPoint29_g174559;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174559 = SamplerLow29_g174559;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174559 = SamplerMedium29_g174559;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174559 = SamplerHigh29_g174559;
				#endif
				SamplerState Sampler238_g174544 = SS29_g174559;
				float4 temp_output_37_0_g174544 = Input_Terrain_Coords_016785_g174452;
				half4 Coords238_g174544 = temp_output_37_0_g174544;
				float3 temp_output_279_0_g174544 = Input_Position9197_g174452;
				half3 WorldPosition238_g174544 = temp_output_279_0_g174544;
				half4 localSamplePlanar2D238_g174544 = SamplePlanar2D( Texture238_g174544 , Sampler238_g174544 , Coords238_g174544 , WorldPosition238_g174544 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174544) = _TerrainNormalTex1;
				SamplerState Sampler246_g174544 = SS29_g174559;
				half4 Coords246_g174544 = temp_output_37_0_g174544;
				half3 WorldPosition246_g174544 = temp_output_279_0_g174544;
				float3 temp_output_280_0_g174544 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174544 = temp_output_280_0_g174544;
				half4 localSamplePlanar3D246_g174544 = SamplePlanar3D( Texture246_g174544 , Sampler246_g174544 , Coords246_g174544 , WorldPosition246_g174544 , WorldNormal246_g174544 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174544) = _TerrainNormalTex1;
				SamplerState Sampler234_g174544 = SS29_g174559;
				float4 Coords234_g174544 = temp_output_37_0_g174544;
				float3 WorldPosition234_g174544 = temp_output_279_0_g174544;
				float4 localSampleStochastic2D234_g174544 = SampleStochastic2D( Texture234_g174544 , Sampler234_g174544 , Coords234_g174544 , WorldPosition234_g174544 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174544) = _TerrainNormalTex1;
				SamplerState Sampler263_g174544 = SS29_g174559;
				half4 Coords263_g174544 = temp_output_37_0_g174544;
				half3 WorldPosition263_g174544 = temp_output_279_0_g174544;
				half3 WorldNormal263_g174544 = temp_output_280_0_g174544;
				half4 localSampleStochastic3D263_g174544 = SampleStochastic3D( Texture263_g174544 , Sampler263_g174544 , Coords263_g174544 , WorldPosition263_g174544 , WorldNormal263_g174544 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8635_g174452 = localSamplePlanar2D238_g174544;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8635_g174452 = localSamplePlanar3D246_g174544;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8635_g174452 = localSampleStochastic2D234_g174544;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8635_g174452 = localSampleStochastic3D263_g174544;
				#else
				float4 staticSwitch8635_g174452 = localSamplePlanar2D238_g174544;
				#endif
				half4 Layer133_g174453 = staticSwitch8635_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174500) = _TerrainNormalTex2;
				SamplerState Sampler238_g174500 = SS29_g174559;
				float4 temp_output_37_0_g174500 = Input_Terrain_Coords_026787_g174452;
				half4 Coords238_g174500 = temp_output_37_0_g174500;
				float3 temp_output_279_0_g174500 = Input_Position9197_g174452;
				half3 WorldPosition238_g174500 = temp_output_279_0_g174500;
				half4 localSamplePlanar2D238_g174500 = SamplePlanar2D( Texture238_g174500 , Sampler238_g174500 , Coords238_g174500 , WorldPosition238_g174500 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174500) = _TerrainNormalTex2;
				SamplerState Sampler246_g174500 = SS29_g174559;
				half4 Coords246_g174500 = temp_output_37_0_g174500;
				half3 WorldPosition246_g174500 = temp_output_279_0_g174500;
				float3 temp_output_280_0_g174500 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174500 = temp_output_280_0_g174500;
				half4 localSamplePlanar3D246_g174500 = SamplePlanar3D( Texture246_g174500 , Sampler246_g174500 , Coords246_g174500 , WorldPosition246_g174500 , WorldNormal246_g174500 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174500) = _TerrainNormalTex2;
				SamplerState Sampler234_g174500 = SS29_g174559;
				float4 Coords234_g174500 = temp_output_37_0_g174500;
				float3 WorldPosition234_g174500 = temp_output_279_0_g174500;
				float4 localSampleStochastic2D234_g174500 = SampleStochastic2D( Texture234_g174500 , Sampler234_g174500 , Coords234_g174500 , WorldPosition234_g174500 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174500) = _TerrainNormalTex2;
				SamplerState Sampler263_g174500 = SS29_g174559;
				half4 Coords263_g174500 = temp_output_37_0_g174500;
				half3 WorldPosition263_g174500 = temp_output_279_0_g174500;
				half3 WorldNormal263_g174500 = temp_output_280_0_g174500;
				half4 localSampleStochastic3D263_g174500 = SampleStochastic3D( Texture263_g174500 , Sampler263_g174500 , Coords263_g174500 , WorldPosition263_g174500 , WorldNormal263_g174500 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8636_g174452 = localSamplePlanar2D238_g174500;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8636_g174452 = localSamplePlanar3D246_g174500;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8636_g174452 = localSampleStochastic2D234_g174500;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8636_g174452 = localSampleStochastic3D263_g174500;
				#else
				float4 staticSwitch8636_g174452 = localSamplePlanar2D238_g174500;
				#endif
				half4 Layer237_g174453 = staticSwitch8636_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174503) = _TerrainNormalTex3;
				SamplerState Sampler238_g174503 = SS29_g174559;
				float4 temp_output_37_0_g174503 = Input_Terrain_Coords_036789_g174452;
				half4 Coords238_g174503 = temp_output_37_0_g174503;
				float3 temp_output_279_0_g174503 = Input_Position9197_g174452;
				half3 WorldPosition238_g174503 = temp_output_279_0_g174503;
				half4 localSamplePlanar2D238_g174503 = SamplePlanar2D( Texture238_g174503 , Sampler238_g174503 , Coords238_g174503 , WorldPosition238_g174503 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174503) = _TerrainNormalTex3;
				SamplerState Sampler246_g174503 = SS29_g174559;
				half4 Coords246_g174503 = temp_output_37_0_g174503;
				half3 WorldPosition246_g174503 = temp_output_279_0_g174503;
				float3 temp_output_280_0_g174503 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174503 = temp_output_280_0_g174503;
				half4 localSamplePlanar3D246_g174503 = SamplePlanar3D( Texture246_g174503 , Sampler246_g174503 , Coords246_g174503 , WorldPosition246_g174503 , WorldNormal246_g174503 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174503) = _TerrainNormalTex3;
				SamplerState Sampler234_g174503 = SS29_g174559;
				float4 Coords234_g174503 = temp_output_37_0_g174503;
				float3 WorldPosition234_g174503 = temp_output_279_0_g174503;
				float4 localSampleStochastic2D234_g174503 = SampleStochastic2D( Texture234_g174503 , Sampler234_g174503 , Coords234_g174503 , WorldPosition234_g174503 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174503) = _TerrainNormalTex3;
				SamplerState Sampler263_g174503 = SS29_g174559;
				half4 Coords263_g174503 = temp_output_37_0_g174503;
				half3 WorldPosition263_g174503 = temp_output_279_0_g174503;
				half3 WorldNormal263_g174503 = temp_output_280_0_g174503;
				half4 localSampleStochastic3D263_g174503 = SampleStochastic3D( Texture263_g174503 , Sampler263_g174503 , Coords263_g174503 , WorldPosition263_g174503 , WorldNormal263_g174503 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8637_g174452 = localSamplePlanar2D238_g174503;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8637_g174452 = localSamplePlanar3D246_g174503;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8637_g174452 = localSampleStochastic2D234_g174503;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8637_g174452 = localSampleStochastic3D263_g174503;
				#else
				float4 staticSwitch8637_g174452 = localSamplePlanar2D238_g174503;
				#endif
				half4 Layer338_g174453 = staticSwitch8637_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174505) = _TerrainNormalTex4;
				SamplerState Sampler238_g174505 = SS29_g174559;
				float4 temp_output_37_0_g174505 = Input_Terrain_Coords_046791_g174452;
				half4 Coords238_g174505 = temp_output_37_0_g174505;
				float3 temp_output_279_0_g174505 = Input_Position9197_g174452;
				half3 WorldPosition238_g174505 = temp_output_279_0_g174505;
				half4 localSamplePlanar2D238_g174505 = SamplePlanar2D( Texture238_g174505 , Sampler238_g174505 , Coords238_g174505 , WorldPosition238_g174505 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174505) = _TerrainNormalTex4;
				SamplerState Sampler246_g174505 = SS29_g174559;
				half4 Coords246_g174505 = temp_output_37_0_g174505;
				half3 WorldPosition246_g174505 = temp_output_279_0_g174505;
				float3 temp_output_280_0_g174505 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174505 = temp_output_280_0_g174505;
				half4 localSamplePlanar3D246_g174505 = SamplePlanar3D( Texture246_g174505 , Sampler246_g174505 , Coords246_g174505 , WorldPosition246_g174505 , WorldNormal246_g174505 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174505) = _TerrainNormalTex4;
				SamplerState Sampler234_g174505 = SS29_g174559;
				float4 Coords234_g174505 = temp_output_37_0_g174505;
				float3 WorldPosition234_g174505 = temp_output_279_0_g174505;
				float4 localSampleStochastic2D234_g174505 = SampleStochastic2D( Texture234_g174505 , Sampler234_g174505 , Coords234_g174505 , WorldPosition234_g174505 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174505) = _TerrainNormalTex4;
				SamplerState Sampler263_g174505 = SS29_g174559;
				half4 Coords263_g174505 = temp_output_37_0_g174505;
				half3 WorldPosition263_g174505 = temp_output_279_0_g174505;
				half3 WorldNormal263_g174505 = temp_output_280_0_g174505;
				half4 localSampleStochastic3D263_g174505 = SampleStochastic3D( Texture263_g174505 , Sampler263_g174505 , Coords263_g174505 , WorldPosition263_g174505 , WorldNormal263_g174505 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8638_g174452 = localSamplePlanar2D238_g174505;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8638_g174452 = localSamplePlanar3D246_g174505;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8638_g174452 = localSampleStochastic2D234_g174505;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8638_g174452 = localSampleStochastic3D263_g174505;
				#else
				float4 staticSwitch8638_g174452 = localSamplePlanar2D238_g174505;
				#endif
				half4 Layer439_g174453 = staticSwitch8638_g174452;
				float4 weightedBlendVar31_g174453 = Weights52_g174453;
				float4 weightedBlend31_g174453 = ( weightedBlendVar31_g174453.x*Layer133_g174453 + weightedBlendVar31_g174453.y*Layer237_g174453 + weightedBlendVar31_g174453.z*Layer338_g174453 + weightedBlendVar31_g174453.w*Layer439_g174453 );
				half4 Terrain_B_047202_g174452 = weightedBlend31_g174453;
				half4 Layer_045_g174459 = Terrain_B_047202_g174452;
				half4 Weights52_g174468 = Terrain_Weights_087340_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174509) = _TerrainNormalTex5;
				SamplerState Sampler238_g174509 = SS29_g174559;
				float4 temp_output_37_0_g174509 = Input_Terrain_Coords_058750_g174452;
				half4 Coords238_g174509 = temp_output_37_0_g174509;
				float3 temp_output_279_0_g174509 = Input_Position9197_g174452;
				half3 WorldPosition238_g174509 = temp_output_279_0_g174509;
				half4 localSamplePlanar2D238_g174509 = SamplePlanar2D( Texture238_g174509 , Sampler238_g174509 , Coords238_g174509 , WorldPosition238_g174509 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174509) = _TerrainNormalTex5;
				SamplerState Sampler246_g174509 = SS29_g174559;
				half4 Coords246_g174509 = temp_output_37_0_g174509;
				half3 WorldPosition246_g174509 = temp_output_279_0_g174509;
				float3 temp_output_280_0_g174509 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174509 = temp_output_280_0_g174509;
				half4 localSamplePlanar3D246_g174509 = SamplePlanar3D( Texture246_g174509 , Sampler246_g174509 , Coords246_g174509 , WorldPosition246_g174509 , WorldNormal246_g174509 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174509) = _TerrainNormalTex5;
				SamplerState Sampler234_g174509 = SS29_g174559;
				float4 Coords234_g174509 = temp_output_37_0_g174509;
				float3 WorldPosition234_g174509 = temp_output_279_0_g174509;
				float4 localSampleStochastic2D234_g174509 = SampleStochastic2D( Texture234_g174509 , Sampler234_g174509 , Coords234_g174509 , WorldPosition234_g174509 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174509) = _TerrainNormalTex5;
				SamplerState Sampler263_g174509 = SS29_g174559;
				half4 Coords263_g174509 = temp_output_37_0_g174509;
				half3 WorldPosition263_g174509 = temp_output_279_0_g174509;
				half3 WorldNormal263_g174509 = temp_output_280_0_g174509;
				half4 localSampleStochastic3D263_g174509 = SampleStochastic3D( Texture263_g174509 , Sampler263_g174509 , Coords263_g174509 , WorldPosition263_g174509 , WorldNormal263_g174509 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8686_g174452 = localSamplePlanar2D238_g174509;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8686_g174452 = localSamplePlanar3D246_g174509;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8686_g174452 = localSampleStochastic2D234_g174509;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8686_g174452 = localSampleStochastic3D263_g174509;
				#else
				float4 staticSwitch8686_g174452 = localSamplePlanar2D238_g174509;
				#endif
				half4 Layer133_g174468 = staticSwitch8686_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174538) = _TerrainNormalTex6;
				SamplerState Sampler238_g174538 = SS29_g174559;
				float4 temp_output_37_0_g174538 = Input_Terrain_Coords_068751_g174452;
				half4 Coords238_g174538 = temp_output_37_0_g174538;
				float3 temp_output_279_0_g174538 = Input_Position9197_g174452;
				half3 WorldPosition238_g174538 = temp_output_279_0_g174538;
				half4 localSamplePlanar2D238_g174538 = SamplePlanar2D( Texture238_g174538 , Sampler238_g174538 , Coords238_g174538 , WorldPosition238_g174538 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174538) = _TerrainNormalTex6;
				SamplerState Sampler246_g174538 = SS29_g174559;
				half4 Coords246_g174538 = temp_output_37_0_g174538;
				half3 WorldPosition246_g174538 = temp_output_279_0_g174538;
				float3 temp_output_280_0_g174538 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174538 = temp_output_280_0_g174538;
				half4 localSamplePlanar3D246_g174538 = SamplePlanar3D( Texture246_g174538 , Sampler246_g174538 , Coords246_g174538 , WorldPosition246_g174538 , WorldNormal246_g174538 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174538) = _TerrainNormalTex6;
				SamplerState Sampler234_g174538 = SS29_g174559;
				float4 Coords234_g174538 = temp_output_37_0_g174538;
				float3 WorldPosition234_g174538 = temp_output_279_0_g174538;
				float4 localSampleStochastic2D234_g174538 = SampleStochastic2D( Texture234_g174538 , Sampler234_g174538 , Coords234_g174538 , WorldPosition234_g174538 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174538) = _TerrainNormalTex6;
				SamplerState Sampler263_g174538 = SS29_g174559;
				half4 Coords263_g174538 = temp_output_37_0_g174538;
				half3 WorldPosition263_g174538 = temp_output_279_0_g174538;
				half3 WorldNormal263_g174538 = temp_output_280_0_g174538;
				half4 localSampleStochastic3D263_g174538 = SampleStochastic3D( Texture263_g174538 , Sampler263_g174538 , Coords263_g174538 , WorldPosition263_g174538 , WorldNormal263_g174538 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8687_g174452 = localSamplePlanar2D238_g174538;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8687_g174452 = localSamplePlanar3D246_g174538;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8687_g174452 = localSampleStochastic2D234_g174538;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8687_g174452 = localSampleStochastic3D263_g174538;
				#else
				float4 staticSwitch8687_g174452 = localSamplePlanar2D238_g174538;
				#endif
				half4 Layer237_g174468 = staticSwitch8687_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174539) = _TerrainNormalTex7;
				SamplerState Sampler238_g174539 = SS29_g174559;
				float4 temp_output_37_0_g174539 = Input_Terrain_Coords_078752_g174452;
				half4 Coords238_g174539 = temp_output_37_0_g174539;
				float3 temp_output_279_0_g174539 = Input_Position9197_g174452;
				half3 WorldPosition238_g174539 = temp_output_279_0_g174539;
				half4 localSamplePlanar2D238_g174539 = SamplePlanar2D( Texture238_g174539 , Sampler238_g174539 , Coords238_g174539 , WorldPosition238_g174539 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174539) = _TerrainNormalTex7;
				SamplerState Sampler246_g174539 = SS29_g174559;
				half4 Coords246_g174539 = temp_output_37_0_g174539;
				half3 WorldPosition246_g174539 = temp_output_279_0_g174539;
				float3 temp_output_280_0_g174539 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174539 = temp_output_280_0_g174539;
				half4 localSamplePlanar3D246_g174539 = SamplePlanar3D( Texture246_g174539 , Sampler246_g174539 , Coords246_g174539 , WorldPosition246_g174539 , WorldNormal246_g174539 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174539) = _TerrainNormalTex7;
				SamplerState Sampler234_g174539 = SS29_g174559;
				float4 Coords234_g174539 = temp_output_37_0_g174539;
				float3 WorldPosition234_g174539 = temp_output_279_0_g174539;
				float4 localSampleStochastic2D234_g174539 = SampleStochastic2D( Texture234_g174539 , Sampler234_g174539 , Coords234_g174539 , WorldPosition234_g174539 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174539) = _TerrainNormalTex7;
				SamplerState Sampler263_g174539 = SS29_g174559;
				half4 Coords263_g174539 = temp_output_37_0_g174539;
				half3 WorldPosition263_g174539 = temp_output_279_0_g174539;
				half3 WorldNormal263_g174539 = temp_output_280_0_g174539;
				half4 localSampleStochastic3D263_g174539 = SampleStochastic3D( Texture263_g174539 , Sampler263_g174539 , Coords263_g174539 , WorldPosition263_g174539 , WorldNormal263_g174539 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8688_g174452 = localSamplePlanar2D238_g174539;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8688_g174452 = localSamplePlanar3D246_g174539;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8688_g174452 = localSampleStochastic2D234_g174539;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8688_g174452 = localSampleStochastic3D263_g174539;
				#else
				float4 staticSwitch8688_g174452 = localSamplePlanar2D238_g174539;
				#endif
				half4 Layer338_g174468 = staticSwitch8688_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174540) = _TerrainNormalTex8;
				SamplerState Sampler238_g174540 = SS29_g174559;
				float4 temp_output_37_0_g174540 = Input_Terrain_Coords_088749_g174452;
				half4 Coords238_g174540 = temp_output_37_0_g174540;
				float3 temp_output_279_0_g174540 = Input_Position9197_g174452;
				half3 WorldPosition238_g174540 = temp_output_279_0_g174540;
				half4 localSamplePlanar2D238_g174540 = SamplePlanar2D( Texture238_g174540 , Sampler238_g174540 , Coords238_g174540 , WorldPosition238_g174540 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174540) = _TerrainNormalTex8;
				SamplerState Sampler246_g174540 = SS29_g174559;
				half4 Coords246_g174540 = temp_output_37_0_g174540;
				half3 WorldPosition246_g174540 = temp_output_279_0_g174540;
				float3 temp_output_280_0_g174540 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174540 = temp_output_280_0_g174540;
				half4 localSamplePlanar3D246_g174540 = SamplePlanar3D( Texture246_g174540 , Sampler246_g174540 , Coords246_g174540 , WorldPosition246_g174540 , WorldNormal246_g174540 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174540) = _TerrainNormalTex8;
				SamplerState Sampler234_g174540 = SS29_g174559;
				float4 Coords234_g174540 = temp_output_37_0_g174540;
				float3 WorldPosition234_g174540 = temp_output_279_0_g174540;
				float4 localSampleStochastic2D234_g174540 = SampleStochastic2D( Texture234_g174540 , Sampler234_g174540 , Coords234_g174540 , WorldPosition234_g174540 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174540) = _TerrainNormalTex8;
				SamplerState Sampler263_g174540 = SS29_g174559;
				half4 Coords263_g174540 = temp_output_37_0_g174540;
				half3 WorldPosition263_g174540 = temp_output_279_0_g174540;
				half3 WorldNormal263_g174540 = temp_output_280_0_g174540;
				half4 localSampleStochastic3D263_g174540 = SampleStochastic3D( Texture263_g174540 , Sampler263_g174540 , Coords263_g174540 , WorldPosition263_g174540 , WorldNormal263_g174540 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8689_g174452 = localSamplePlanar2D238_g174540;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8689_g174452 = localSamplePlanar3D246_g174540;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8689_g174452 = localSampleStochastic2D234_g174540;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8689_g174452 = localSampleStochastic3D263_g174540;
				#else
				float4 staticSwitch8689_g174452 = localSamplePlanar2D238_g174540;
				#endif
				half4 Layer439_g174468 = staticSwitch8689_g174452;
				float4 weightedBlendVar31_g174468 = Weights52_g174468;
				float4 weightedBlend31_g174468 = ( weightedBlendVar31_g174468.x*Layer133_g174468 + weightedBlendVar31_g174468.y*Layer237_g174468 + weightedBlendVar31_g174468.z*Layer338_g174468 + weightedBlendVar31_g174468.w*Layer439_g174468 );
				half4 Terrain_B_088684_g174452 = weightedBlend31_g174468;
				half4 Layer_0810_g174459 = Terrain_B_088684_g174452;
				half4 Weights52_g174475 = Terrain_Weights_127710_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174512) = _TerrainNormalTex9;
				SamplerState Sampler238_g174512 = SS29_g174559;
				float4 temp_output_37_0_g174512 = Input_Terrain_Coords_098833_g174452;
				half4 Coords238_g174512 = temp_output_37_0_g174512;
				float3 temp_output_279_0_g174512 = Input_Position9197_g174452;
				half3 WorldPosition238_g174512 = temp_output_279_0_g174512;
				half4 localSamplePlanar2D238_g174512 = SamplePlanar2D( Texture238_g174512 , Sampler238_g174512 , Coords238_g174512 , WorldPosition238_g174512 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174512) = _TerrainNormalTex9;
				SamplerState Sampler246_g174512 = SS29_g174559;
				half4 Coords246_g174512 = temp_output_37_0_g174512;
				half3 WorldPosition246_g174512 = temp_output_279_0_g174512;
				float3 temp_output_280_0_g174512 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174512 = temp_output_280_0_g174512;
				half4 localSamplePlanar3D246_g174512 = SamplePlanar3D( Texture246_g174512 , Sampler246_g174512 , Coords246_g174512 , WorldPosition246_g174512 , WorldNormal246_g174512 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174512) = _TerrainNormalTex9;
				SamplerState Sampler234_g174512 = SS29_g174559;
				float4 Coords234_g174512 = temp_output_37_0_g174512;
				float3 WorldPosition234_g174512 = temp_output_279_0_g174512;
				float4 localSampleStochastic2D234_g174512 = SampleStochastic2D( Texture234_g174512 , Sampler234_g174512 , Coords234_g174512 , WorldPosition234_g174512 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174512) = _TerrainNormalTex9;
				SamplerState Sampler263_g174512 = SS29_g174559;
				half4 Coords263_g174512 = temp_output_37_0_g174512;
				half3 WorldPosition263_g174512 = temp_output_279_0_g174512;
				half3 WorldNormal263_g174512 = temp_output_280_0_g174512;
				half4 localSampleStochastic3D263_g174512 = SampleStochastic3D( Texture263_g174512 , Sampler263_g174512 , Coords263_g174512 , WorldPosition263_g174512 , WorldNormal263_g174512 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8849_g174452 = localSamplePlanar2D238_g174512;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8849_g174452 = localSamplePlanar3D246_g174512;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8849_g174452 = localSampleStochastic2D234_g174512;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8849_g174452 = localSampleStochastic3D263_g174512;
				#else
				float4 staticSwitch8849_g174452 = localSamplePlanar2D238_g174512;
				#endif
				half4 Layer133_g174475 = staticSwitch8849_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174517) = _TerrainNormalTex10;
				SamplerState Sampler238_g174517 = SS29_g174559;
				float4 temp_output_37_0_g174517 = Input_Terrain_Coords_108834_g174452;
				half4 Coords238_g174517 = temp_output_37_0_g174517;
				float3 temp_output_279_0_g174517 = Input_Position9197_g174452;
				half3 WorldPosition238_g174517 = temp_output_279_0_g174517;
				half4 localSamplePlanar2D238_g174517 = SamplePlanar2D( Texture238_g174517 , Sampler238_g174517 , Coords238_g174517 , WorldPosition238_g174517 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174517) = _TerrainNormalTex10;
				SamplerState Sampler246_g174517 = SS29_g174559;
				half4 Coords246_g174517 = temp_output_37_0_g174517;
				half3 WorldPosition246_g174517 = temp_output_279_0_g174517;
				float3 temp_output_280_0_g174517 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174517 = temp_output_280_0_g174517;
				half4 localSamplePlanar3D246_g174517 = SamplePlanar3D( Texture246_g174517 , Sampler246_g174517 , Coords246_g174517 , WorldPosition246_g174517 , WorldNormal246_g174517 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174517) = _TerrainNormalTex10;
				SamplerState Sampler234_g174517 = SS29_g174559;
				float4 Coords234_g174517 = temp_output_37_0_g174517;
				float3 WorldPosition234_g174517 = temp_output_279_0_g174517;
				float4 localSampleStochastic2D234_g174517 = SampleStochastic2D( Texture234_g174517 , Sampler234_g174517 , Coords234_g174517 , WorldPosition234_g174517 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174517) = _TerrainNormalTex10;
				SamplerState Sampler263_g174517 = SS29_g174559;
				half4 Coords263_g174517 = temp_output_37_0_g174517;
				half3 WorldPosition263_g174517 = temp_output_279_0_g174517;
				half3 WorldNormal263_g174517 = temp_output_280_0_g174517;
				half4 localSampleStochastic3D263_g174517 = SampleStochastic3D( Texture263_g174517 , Sampler263_g174517 , Coords263_g174517 , WorldPosition263_g174517 , WorldNormal263_g174517 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8876_g174452 = localSamplePlanar2D238_g174517;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8876_g174452 = localSamplePlanar3D246_g174517;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8876_g174452 = localSampleStochastic2D234_g174517;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8876_g174452 = localSampleStochastic3D263_g174517;
				#else
				float4 staticSwitch8876_g174452 = localSamplePlanar2D238_g174517;
				#endif
				half4 Layer237_g174475 = staticSwitch8876_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174518) = _TerrainNormalTex11;
				SamplerState Sampler238_g174518 = SS29_g174559;
				float4 temp_output_37_0_g174518 = Input_Terrain_Coords_118835_g174452;
				half4 Coords238_g174518 = temp_output_37_0_g174518;
				float3 temp_output_279_0_g174518 = Input_Position9197_g174452;
				half3 WorldPosition238_g174518 = temp_output_279_0_g174518;
				half4 localSamplePlanar2D238_g174518 = SamplePlanar2D( Texture238_g174518 , Sampler238_g174518 , Coords238_g174518 , WorldPosition238_g174518 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174518) = _TerrainNormalTex11;
				SamplerState Sampler246_g174518 = SS29_g174559;
				half4 Coords246_g174518 = temp_output_37_0_g174518;
				half3 WorldPosition246_g174518 = temp_output_279_0_g174518;
				float3 temp_output_280_0_g174518 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174518 = temp_output_280_0_g174518;
				half4 localSamplePlanar3D246_g174518 = SamplePlanar3D( Texture246_g174518 , Sampler246_g174518 , Coords246_g174518 , WorldPosition246_g174518 , WorldNormal246_g174518 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174518) = _TerrainNormalTex11;
				SamplerState Sampler234_g174518 = SS29_g174559;
				float4 Coords234_g174518 = temp_output_37_0_g174518;
				float3 WorldPosition234_g174518 = temp_output_279_0_g174518;
				float4 localSampleStochastic2D234_g174518 = SampleStochastic2D( Texture234_g174518 , Sampler234_g174518 , Coords234_g174518 , WorldPosition234_g174518 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174518) = _TerrainNormalTex11;
				SamplerState Sampler263_g174518 = SS29_g174559;
				half4 Coords263_g174518 = temp_output_37_0_g174518;
				half3 WorldPosition263_g174518 = temp_output_279_0_g174518;
				half3 WorldNormal263_g174518 = temp_output_280_0_g174518;
				half4 localSampleStochastic3D263_g174518 = SampleStochastic3D( Texture263_g174518 , Sampler263_g174518 , Coords263_g174518 , WorldPosition263_g174518 , WorldNormal263_g174518 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8850_g174452 = localSamplePlanar2D238_g174518;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8850_g174452 = localSamplePlanar3D246_g174518;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8850_g174452 = localSampleStochastic2D234_g174518;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8850_g174452 = localSampleStochastic3D263_g174518;
				#else
				float4 staticSwitch8850_g174452 = localSamplePlanar2D238_g174518;
				#endif
				half4 Layer338_g174475 = staticSwitch8850_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174519) = _TerrainNormalTex12;
				SamplerState Sampler238_g174519 = SS29_g174559;
				float4 temp_output_37_0_g174519 = Input_Terrain_Coords_128836_g174452;
				half4 Coords238_g174519 = temp_output_37_0_g174519;
				float3 temp_output_279_0_g174519 = Input_Position9197_g174452;
				half3 WorldPosition238_g174519 = temp_output_279_0_g174519;
				half4 localSamplePlanar2D238_g174519 = SamplePlanar2D( Texture238_g174519 , Sampler238_g174519 , Coords238_g174519 , WorldPosition238_g174519 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174519) = _TerrainNormalTex12;
				SamplerState Sampler246_g174519 = SS29_g174559;
				half4 Coords246_g174519 = temp_output_37_0_g174519;
				half3 WorldPosition246_g174519 = temp_output_279_0_g174519;
				float3 temp_output_280_0_g174519 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174519 = temp_output_280_0_g174519;
				half4 localSamplePlanar3D246_g174519 = SamplePlanar3D( Texture246_g174519 , Sampler246_g174519 , Coords246_g174519 , WorldPosition246_g174519 , WorldNormal246_g174519 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174519) = _TerrainNormalTex12;
				SamplerState Sampler234_g174519 = SS29_g174559;
				float4 Coords234_g174519 = temp_output_37_0_g174519;
				float3 WorldPosition234_g174519 = temp_output_279_0_g174519;
				float4 localSampleStochastic2D234_g174519 = SampleStochastic2D( Texture234_g174519 , Sampler234_g174519 , Coords234_g174519 , WorldPosition234_g174519 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174519) = _TerrainNormalTex12;
				SamplerState Sampler263_g174519 = SS29_g174559;
				half4 Coords263_g174519 = temp_output_37_0_g174519;
				half3 WorldPosition263_g174519 = temp_output_279_0_g174519;
				half3 WorldNormal263_g174519 = temp_output_280_0_g174519;
				half4 localSampleStochastic3D263_g174519 = SampleStochastic3D( Texture263_g174519 , Sampler263_g174519 , Coords263_g174519 , WorldPosition263_g174519 , WorldNormal263_g174519 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8877_g174452 = localSamplePlanar2D238_g174519;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8877_g174452 = localSamplePlanar3D246_g174519;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8877_g174452 = localSampleStochastic2D234_g174519;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8877_g174452 = localSampleStochastic3D263_g174519;
				#else
				float4 staticSwitch8877_g174452 = localSamplePlanar2D238_g174519;
				#endif
				half4 Layer439_g174475 = staticSwitch8877_g174452;
				float4 weightedBlendVar31_g174475 = Weights52_g174475;
				float4 weightedBlend31_g174475 = ( weightedBlendVar31_g174475.x*Layer133_g174475 + weightedBlendVar31_g174475.y*Layer237_g174475 + weightedBlendVar31_g174475.z*Layer338_g174475 + weightedBlendVar31_g174475.w*Layer439_g174475 );
				half4 Terrain_B_128865_g174452 = weightedBlend31_g174475;
				half4 Layer_1243_g174459 = Terrain_B_128865_g174452;
				half4 Weights52_g174482 = Terrain_Weights_167709_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174522) = _TerrainNormalTex13;
				SamplerState Sampler238_g174522 = SS29_g174559;
				float4 temp_output_37_0_g174522 = Input_Terrain_Coords_138960_g174452;
				half4 Coords238_g174522 = temp_output_37_0_g174522;
				float3 temp_output_279_0_g174522 = Input_Position9197_g174452;
				half3 WorldPosition238_g174522 = temp_output_279_0_g174522;
				half4 localSamplePlanar2D238_g174522 = SamplePlanar2D( Texture238_g174522 , Sampler238_g174522 , Coords238_g174522 , WorldPosition238_g174522 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174522) = _TerrainNormalTex13;
				SamplerState Sampler246_g174522 = SS29_g174559;
				half4 Coords246_g174522 = temp_output_37_0_g174522;
				half3 WorldPosition246_g174522 = temp_output_279_0_g174522;
				float3 temp_output_280_0_g174522 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174522 = temp_output_280_0_g174522;
				half4 localSamplePlanar3D246_g174522 = SamplePlanar3D( Texture246_g174522 , Sampler246_g174522 , Coords246_g174522 , WorldPosition246_g174522 , WorldNormal246_g174522 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174522) = _TerrainNormalTex13;
				SamplerState Sampler234_g174522 = SS29_g174559;
				float4 Coords234_g174522 = temp_output_37_0_g174522;
				float3 WorldPosition234_g174522 = temp_output_279_0_g174522;
				float4 localSampleStochastic2D234_g174522 = SampleStochastic2D( Texture234_g174522 , Sampler234_g174522 , Coords234_g174522 , WorldPosition234_g174522 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174522) = _TerrainNormalTex13;
				SamplerState Sampler263_g174522 = SS29_g174559;
				half4 Coords263_g174522 = temp_output_37_0_g174522;
				half3 WorldPosition263_g174522 = temp_output_279_0_g174522;
				half3 WorldNormal263_g174522 = temp_output_280_0_g174522;
				half4 localSampleStochastic3D263_g174522 = SampleStochastic3D( Texture263_g174522 , Sampler263_g174522 , Coords263_g174522 , WorldPosition263_g174522 , WorldNormal263_g174522 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8991_g174452 = localSamplePlanar2D238_g174522;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8991_g174452 = localSamplePlanar3D246_g174522;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8991_g174452 = localSampleStochastic2D234_g174522;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8991_g174452 = localSampleStochastic3D263_g174522;
				#else
				float4 staticSwitch8991_g174452 = localSamplePlanar2D238_g174522;
				#endif
				half4 Layer133_g174482 = staticSwitch8991_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174529) = _TerrainNormalTex14;
				SamplerState Sampler238_g174529 = SS29_g174559;
				float4 temp_output_37_0_g174529 = Input_Terrain_Coords_148961_g174452;
				half4 Coords238_g174529 = temp_output_37_0_g174529;
				float3 temp_output_279_0_g174529 = Input_Position9197_g174452;
				half3 WorldPosition238_g174529 = temp_output_279_0_g174529;
				half4 localSamplePlanar2D238_g174529 = SamplePlanar2D( Texture238_g174529 , Sampler238_g174529 , Coords238_g174529 , WorldPosition238_g174529 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174529) = _TerrainNormalTex14;
				SamplerState Sampler246_g174529 = SS29_g174559;
				half4 Coords246_g174529 = temp_output_37_0_g174529;
				half3 WorldPosition246_g174529 = temp_output_279_0_g174529;
				float3 temp_output_280_0_g174529 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174529 = temp_output_280_0_g174529;
				half4 localSamplePlanar3D246_g174529 = SamplePlanar3D( Texture246_g174529 , Sampler246_g174529 , Coords246_g174529 , WorldPosition246_g174529 , WorldNormal246_g174529 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174529) = _TerrainNormalTex14;
				SamplerState Sampler234_g174529 = SS29_g174559;
				float4 Coords234_g174529 = temp_output_37_0_g174529;
				float3 WorldPosition234_g174529 = temp_output_279_0_g174529;
				float4 localSampleStochastic2D234_g174529 = SampleStochastic2D( Texture234_g174529 , Sampler234_g174529 , Coords234_g174529 , WorldPosition234_g174529 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174529) = _TerrainNormalTex14;
				SamplerState Sampler263_g174529 = SS29_g174559;
				half4 Coords263_g174529 = temp_output_37_0_g174529;
				half3 WorldPosition263_g174529 = temp_output_279_0_g174529;
				half3 WorldNormal263_g174529 = temp_output_280_0_g174529;
				half4 localSampleStochastic3D263_g174529 = SampleStochastic3D( Texture263_g174529 , Sampler263_g174529 , Coords263_g174529 , WorldPosition263_g174529 , WorldNormal263_g174529 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8990_g174452 = localSamplePlanar2D238_g174529;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8990_g174452 = localSamplePlanar3D246_g174529;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8990_g174452 = localSampleStochastic2D234_g174529;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8990_g174452 = localSampleStochastic3D263_g174529;
				#else
				float4 staticSwitch8990_g174452 = localSamplePlanar2D238_g174529;
				#endif
				half4 Layer237_g174482 = staticSwitch8990_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174530) = _TerrainNormalTex15;
				SamplerState Sampler238_g174530 = SS29_g174559;
				float4 temp_output_37_0_g174530 = Input_Terrain_Coords_158962_g174452;
				half4 Coords238_g174530 = temp_output_37_0_g174530;
				float3 temp_output_279_0_g174530 = Input_Position9197_g174452;
				half3 WorldPosition238_g174530 = temp_output_279_0_g174530;
				half4 localSamplePlanar2D238_g174530 = SamplePlanar2D( Texture238_g174530 , Sampler238_g174530 , Coords238_g174530 , WorldPosition238_g174530 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174530) = _TerrainNormalTex15;
				SamplerState Sampler246_g174530 = SS29_g174559;
				half4 Coords246_g174530 = temp_output_37_0_g174530;
				half3 WorldPosition246_g174530 = temp_output_279_0_g174530;
				float3 temp_output_280_0_g174530 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174530 = temp_output_280_0_g174530;
				half4 localSamplePlanar3D246_g174530 = SamplePlanar3D( Texture246_g174530 , Sampler246_g174530 , Coords246_g174530 , WorldPosition246_g174530 , WorldNormal246_g174530 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174530) = _TerrainNormalTex15;
				SamplerState Sampler234_g174530 = SS29_g174559;
				float4 Coords234_g174530 = temp_output_37_0_g174530;
				float3 WorldPosition234_g174530 = temp_output_279_0_g174530;
				float4 localSampleStochastic2D234_g174530 = SampleStochastic2D( Texture234_g174530 , Sampler234_g174530 , Coords234_g174530 , WorldPosition234_g174530 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174530) = _TerrainNormalTex15;
				SamplerState Sampler263_g174530 = SS29_g174559;
				half4 Coords263_g174530 = temp_output_37_0_g174530;
				half3 WorldPosition263_g174530 = temp_output_279_0_g174530;
				half3 WorldNormal263_g174530 = temp_output_280_0_g174530;
				half4 localSampleStochastic3D263_g174530 = SampleStochastic3D( Texture263_g174530 , Sampler263_g174530 , Coords263_g174530 , WorldPosition263_g174530 , WorldNormal263_g174530 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8989_g174452 = localSamplePlanar2D238_g174530;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8989_g174452 = localSamplePlanar3D246_g174530;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8989_g174452 = localSampleStochastic2D234_g174530;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8989_g174452 = localSampleStochastic3D263_g174530;
				#else
				float4 staticSwitch8989_g174452 = localSamplePlanar2D238_g174530;
				#endif
				half4 Layer338_g174482 = staticSwitch8989_g174452;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174531) = _TerrainNormalTex16;
				SamplerState Sampler238_g174531 = SS29_g174559;
				float4 temp_output_37_0_g174531 = Input_Terrain_Coords_168959_g174452;
				half4 Coords238_g174531 = temp_output_37_0_g174531;
				float3 temp_output_279_0_g174531 = Input_Position9197_g174452;
				half3 WorldPosition238_g174531 = temp_output_279_0_g174531;
				half4 localSamplePlanar2D238_g174531 = SamplePlanar2D( Texture238_g174531 , Sampler238_g174531 , Coords238_g174531 , WorldPosition238_g174531 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174531) = _TerrainNormalTex16;
				SamplerState Sampler246_g174531 = SS29_g174559;
				half4 Coords246_g174531 = temp_output_37_0_g174531;
				half3 WorldPosition246_g174531 = temp_output_279_0_g174531;
				float3 temp_output_280_0_g174531 = Input_Normal9199_g174452;
				half3 WorldNormal246_g174531 = temp_output_280_0_g174531;
				half4 localSamplePlanar3D246_g174531 = SamplePlanar3D( Texture246_g174531 , Sampler246_g174531 , Coords246_g174531 , WorldPosition246_g174531 , WorldNormal246_g174531 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174531) = _TerrainNormalTex16;
				SamplerState Sampler234_g174531 = SS29_g174559;
				float4 Coords234_g174531 = temp_output_37_0_g174531;
				float3 WorldPosition234_g174531 = temp_output_279_0_g174531;
				float4 localSampleStochastic2D234_g174531 = SampleStochastic2D( Texture234_g174531 , Sampler234_g174531 , Coords234_g174531 , WorldPosition234_g174531 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174531) = _TerrainNormalTex16;
				SamplerState Sampler263_g174531 = SS29_g174559;
				half4 Coords263_g174531 = temp_output_37_0_g174531;
				half3 WorldPosition263_g174531 = temp_output_279_0_g174531;
				half3 WorldNormal263_g174531 = temp_output_280_0_g174531;
				half4 localSampleStochastic3D263_g174531 = SampleStochastic3D( Texture263_g174531 , Sampler263_g174531 , Coords263_g174531 , WorldPosition263_g174531 , WorldNormal263_g174531 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8988_g174452 = localSamplePlanar2D238_g174531;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8988_g174452 = localSamplePlanar3D246_g174531;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8988_g174452 = localSampleStochastic2D234_g174531;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8988_g174452 = localSampleStochastic3D263_g174531;
				#else
				float4 staticSwitch8988_g174452 = localSamplePlanar2D238_g174531;
				#endif
				half4 Layer439_g174482 = staticSwitch8988_g174452;
				float4 weightedBlendVar31_g174482 = Weights52_g174482;
				float4 weightedBlend31_g174482 = ( weightedBlendVar31_g174482.x*Layer133_g174482 + weightedBlendVar31_g174482.y*Layer237_g174482 + weightedBlendVar31_g174482.z*Layer338_g174482 + weightedBlendVar31_g174482.w*Layer439_g174482 );
				half4 Terrain_B_168987_g174452 = weightedBlend31_g174482;
				half4 Layer_1644_g174459 = Terrain_B_168987_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174459 = Layer_045_g174459;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174459 = ( Layer_045_g174459 + Layer_0810_g174459 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174459 = ( Layer_045_g174459 + Layer_0810_g174459 + Layer_1243_g174459 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174459 = ( Layer_045_g174459 + Layer_0810_g174459 + Layer_1243_g174459 + Layer_1644_g174459 );
				#else
				float4 staticSwitch40_g174459 = Layer_045_g174459;
				#endif
				half4 Blend_Normal7512_g174452 = staticSwitch40_g174459;
				half4 Normal_Packed45_g174553 = Blend_Normal7512_g174452;
				float2 appendResult58_g174553 = (float2(( (Normal_Packed45_g174553).x * (Normal_Packed45_g174553).w ) , (Normal_Packed45_g174553).y));
				half2 Normal_Default50_g174553 = appendResult58_g174553;
				half2 Normal_ASTC41_g174553 = (Normal_Packed45_g174553).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174553 = Normal_ASTC41_g174553;
				#else
				float2 staticSwitch38_g174553 = Normal_Default50_g174553;
				#endif
				half2 Normal_NO_DTX544_g174553 = (Normal_Packed45_g174553).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174553 = Normal_NO_DTX544_g174553;
				#else
				float2 staticSwitch37_g174553 = staticSwitch38_g174553;
				#endif
				half4 Weights52_g174455 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174455 = temp_output_6970_0_g174452;
				half4 Layer237_g174455 = temp_output_6977_0_g174452;
				half4 Layer338_g174455 = temp_output_6978_0_g174452;
				half4 Layer439_g174455 = temp_output_6983_0_g174452;
				float4 weightedBlendVar31_g174455 = Weights52_g174455;
				float4 weightedBlend31_g174455 = ( weightedBlendVar31_g174455.x*Layer133_g174455 + weightedBlendVar31_g174455.y*Layer237_g174455 + weightedBlendVar31_g174455.z*Layer338_g174455 + weightedBlendVar31_g174455.w*Layer439_g174455 );
				half4 Terrain_Shaders_047203_g174452 = weightedBlend31_g174455;
				half4 Layer_045_g174461 = Terrain_Shaders_047203_g174452;
				half4 Weights52_g174471 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174471 = temp_output_8714_0_g174452;
				half4 Layer237_g174471 = temp_output_8721_0_g174452;
				half4 Layer338_g174471 = temp_output_8724_0_g174452;
				half4 Layer439_g174471 = temp_output_8727_0_g174452;
				float4 weightedBlendVar31_g174471 = Weights52_g174471;
				float4 weightedBlend31_g174471 = ( weightedBlendVar31_g174471.x*Layer133_g174471 + weightedBlendVar31_g174471.y*Layer237_g174471 + weightedBlendVar31_g174471.z*Layer338_g174471 + weightedBlendVar31_g174471.w*Layer439_g174471 );
				half4 Terrain_Shaders_088730_g174452 = weightedBlend31_g174471;
				half4 Layer_0810_g174461 = Terrain_Shaders_088730_g174452;
				half4 Weights52_g174478 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174478 = temp_output_8815_0_g174452;
				half4 Layer237_g174478 = temp_output_8818_0_g174452;
				half4 Layer338_g174478 = temp_output_8819_0_g174452;
				half4 Layer439_g174478 = temp_output_8820_0_g174452;
				float4 weightedBlendVar31_g174478 = Weights52_g174478;
				float4 weightedBlend31_g174478 = ( weightedBlendVar31_g174478.x*Layer133_g174478 + weightedBlendVar31_g174478.y*Layer237_g174478 + weightedBlendVar31_g174478.z*Layer338_g174478 + weightedBlendVar31_g174478.w*Layer439_g174478 );
				half4 Terrain_Shaders_128871_g174452 = weightedBlend31_g174478;
				half4 Layer_1243_g174461 = Terrain_Shaders_128871_g174452;
				half4 Weights52_g174485 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174485 = temp_output_8931_0_g174452;
				half4 Layer237_g174485 = temp_output_8934_0_g174452;
				half4 Layer338_g174485 = temp_output_8935_0_g174452;
				half4 Layer439_g174485 = temp_output_8936_0_g174452;
				float4 weightedBlendVar31_g174485 = Weights52_g174485;
				float4 weightedBlend31_g174485 = ( weightedBlendVar31_g174485.x*Layer133_g174485 + weightedBlendVar31_g174485.y*Layer237_g174485 + weightedBlendVar31_g174485.z*Layer338_g174485 + weightedBlendVar31_g174485.w*Layer439_g174485 );
				half4 Terrain_Shaders_169014_g174452 = weightedBlend31_g174485;
				half4 Layer_1644_g174461 = Terrain_Shaders_169014_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174461 = Layer_045_g174461;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174461 = ( Layer_045_g174461 + Layer_0810_g174461 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174461 = ( Layer_045_g174461 + Layer_0810_g174461 + Layer_1243_g174461 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174461 = ( Layer_045_g174461 + Layer_0810_g174461 + Layer_1243_g174461 + Layer_1644_g174461 );
				#else
				float4 staticSwitch40_g174461 = Layer_045_g174461;
				#endif
				half4 Blend_Shaders7420_g174452 = staticSwitch40_g174461;
				half4 Normal_Packed45_g174552 = Blend_Shaders7420_g174452;
				half2 Normal_NO_DTX544_g174552 = (Normal_Packed45_g174552).wy;
				#ifdef TVE_TERRAIN_PACKED
				float2 staticSwitch9080_g174452 = (Normal_NO_DTX544_g174552*2.0 + -1.0);
				#else
				float2 staticSwitch9080_g174452 = (staticSwitch37_g174553*2.0 + -1.0);
				#endif
				half4 Weights52_g174456 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174456 = _TerrainParams1;
				half4 Layer237_g174456 = _TerrainParams2;
				half4 Layer338_g174456 = _TerrainParams3;
				half4 Layer439_g174456 = _TerrainParams4;
				float4 weightedBlendVar31_g174456 = Weights52_g174456;
				float4 weightedBlend31_g174456 = ( weightedBlendVar31_g174456.x*Layer133_g174456 + weightedBlendVar31_g174456.y*Layer237_g174456 + weightedBlendVar31_g174456.z*Layer338_g174456 + weightedBlendVar31_g174456.w*Layer439_g174456 );
				half4 Terrain_Params_047533_g174452 = weightedBlend31_g174456;
				half4 Layer_045_g174462 = Terrain_Params_047533_g174452;
				half4 Weights52_g174472 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174472 = _TerrainParams5;
				half4 Layer237_g174472 = _TerrainParams6;
				half4 Layer338_g174472 = _TerrainParams7;
				half4 Layer439_g174472 = _TerrainParams8;
				float4 weightedBlendVar31_g174472 = Weights52_g174472;
				float4 weightedBlend31_g174472 = ( weightedBlendVar31_g174472.x*Layer133_g174472 + weightedBlendVar31_g174472.y*Layer237_g174472 + weightedBlendVar31_g174472.z*Layer338_g174472 + weightedBlendVar31_g174472.w*Layer439_g174472 );
				half4 Terrain_Params_088739_g174452 = weightedBlend31_g174472;
				half4 Layer_0810_g174462 = Terrain_Params_088739_g174452;
				half4 Weights52_g174479 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174479 = _TerrainParams9;
				half4 Layer237_g174479 = _TerrainParams10;
				half4 Layer338_g174479 = _TerrainParams11;
				half4 Layer439_g174479 = _TerrainParams12;
				float4 weightedBlendVar31_g174479 = Weights52_g174479;
				float4 weightedBlend31_g174479 = ( weightedBlendVar31_g174479.x*Layer133_g174479 + weightedBlendVar31_g174479.y*Layer237_g174479 + weightedBlendVar31_g174479.z*Layer338_g174479 + weightedBlendVar31_g174479.w*Layer439_g174479 );
				half4 Terrain_Params_128867_g174452 = weightedBlend31_g174479;
				half4 Layer_1243_g174462 = Terrain_Params_128867_g174452;
				half4 Weights52_g174486 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174486 = _TerrainParams13;
				half4 Layer237_g174486 = _TerrainParams14;
				half4 Layer338_g174486 = _TerrainParams15;
				half4 Layer439_g174486 = _TerrainParams16;
				float4 weightedBlendVar31_g174486 = Weights52_g174486;
				float4 weightedBlend31_g174486 = ( weightedBlendVar31_g174486.x*Layer133_g174486 + weightedBlendVar31_g174486.y*Layer237_g174486 + weightedBlendVar31_g174486.z*Layer338_g174486 + weightedBlendVar31_g174486.w*Layer439_g174486 );
				half4 Terrain_Params_169017_g174452 = weightedBlend31_g174486;
				half4 Layer_1644_g174462 = Terrain_Params_169017_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174462 = Layer_045_g174462;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174462 = ( Layer_045_g174462 + Layer_0810_g174462 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174462 = ( Layer_045_g174462 + Layer_0810_g174462 + Layer_1243_g174462 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174462 = ( Layer_045_g174462 + Layer_0810_g174462 + Layer_1243_g174462 + Layer_1644_g174462 );
				#else
				float4 staticSwitch40_g174462 = Layer_045_g174462;
				#endif
				half4 Blend_Params7547_g174452 = staticSwitch40_g174462;
				half2 Normal_Planar45_g174554 = ( ( staticSwitch9080_g174452 * (Blend_Params7547_g174452).z ) * _TerrainNormalValue );
				float2 break71_g174554 = Normal_Planar45_g174554;
				float3 appendResult72_g174554 = (float3(break71_g174554.x , 0.0 , break71_g174554.y));
				half2 Final_NormalTS9145_g174452 = (mul( ase_worldToTangent, appendResult72_g174554 )).xy;
				half2 Local_NormalTS729_g174425 = Final_NormalTS9145_g174452;
				float2 lerpResult405_g174425 = lerp( Visual_NormalTS529_g174425 , Local_NormalTS729_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float2 staticSwitch418_g174425 = lerpResult405_g174425;
				#else
				float2 staticSwitch418_g174425 = Visual_NormalTS529_g174425;
				#endif
				half2 Final_NormalTS612_g174425 = staticSwitch418_g174425;
				float2 In_NormalTS3_g174429 = Final_NormalTS612_g174425;
				float3 appendResult68_g174427 = (float3(Final_NormalTS612_g174425 , 1.0));
				float3 tanNormal74_g174427 = appendResult68_g174427;
				float3 worldNormal74_g174427 = normalize( float3(dot(tanToWorld0,tanNormal74_g174427), dot(tanToWorld1,tanNormal74_g174427), dot(tanToWorld2,tanNormal74_g174427)) );
				half3 Final_NormalWS956_g174425 = worldNormal74_g174427;
				float3 In_NormalWS3_g174429 = Final_NormalWS956_g174425;
				half4 Visual_Shader531_g174425 = Out_Shader4_g174428;
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9139_g174452 = 0.0;
				#else
				float staticSwitch9139_g174452 = ( (Blend_Shaders7420_g174452).x * (Blend_Params7547_g174452).x * _TerrainMetallicValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9097_g174452 = 1.0;
				#else
				float staticSwitch9097_g174452 = ( (Blend_Shaders7420_g174452).y * _TerrainOcclusionValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9105_g174452 = (Blend_Shaders7420_g174452).x;
				#else
				float staticSwitch9105_g174452 = (Blend_Shaders7420_g174452).w;
				#endif
				float4 appendResult9147_g174452 = (float4(staticSwitch9139_g174452 , staticSwitch9097_g174452 , (Blend_Shaders7420_g174452).z , ( staticSwitch9105_g174452 * (Blend_Params7547_g174452).w * _TerrainSmoothnessValue )));
				half4 Final_Shaders9146_g174452 = appendResult9147_g174452;
				half4 Local_Masks750_g174425 = Final_Shaders9146_g174452;
				float4 lerpResult998_g174425 = lerp( Visual_Shader531_g174425 , Local_Masks750_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float4 staticSwitch451_g174425 = lerpResult998_g174425;
				#else
				float4 staticSwitch451_g174425 = Visual_Shader531_g174425;
				#endif
				half4 Final_Masks613_g174425 = staticSwitch451_g174425;
				float4 In_Shader3_g174429 = Final_Masks613_g174425;
				half4 Weights52_g174545 = Terrain_Weights_046781_g174452;
				half4 Layer133_g174545 = _TerrainSpecular1;
				half4 Layer237_g174545 = _TerrainSpecular2;
				half4 Layer338_g174545 = _TerrainSpecular3;
				half4 Layer439_g174545 = _TerrainSpecular4;
				float4 weightedBlendVar31_g174545 = Weights52_g174545;
				float4 weightedBlend31_g174545 = ( weightedBlendVar31_g174545.x*Layer133_g174545 + weightedBlendVar31_g174545.y*Layer237_g174545 + weightedBlendVar31_g174545.z*Layer338_g174545 + weightedBlendVar31_g174545.w*Layer439_g174545 );
				half4 Terrain_Specular_047390_g174452 = weightedBlend31_g174545;
				half4 Layer_045_g174550 = Terrain_Specular_047390_g174452;
				half4 Weights52_g174473 = Terrain_Weights_087340_g174452;
				half4 Layer133_g174473 = _TerrainSpecular5;
				half4 Layer237_g174473 = _TerrainSpecular6;
				half4 Layer338_g174473 = _TerrainSpecular7;
				half4 Layer439_g174473 = _TerrainSpecular8;
				float4 weightedBlendVar31_g174473 = Weights52_g174473;
				float4 weightedBlend31_g174473 = ( weightedBlendVar31_g174473.x*Layer133_g174473 + weightedBlendVar31_g174473.y*Layer237_g174473 + weightedBlendVar31_g174473.z*Layer338_g174473 + weightedBlendVar31_g174473.w*Layer439_g174473 );
				half4 Terrain_Specular_088745_g174452 = weightedBlend31_g174473;
				half4 Layer_0810_g174550 = Terrain_Specular_088745_g174452;
				half4 Weights52_g174480 = Terrain_Weights_127710_g174452;
				half4 Layer133_g174480 = _TerrainSpecular9;
				half4 Layer237_g174480 = _TerrainSpecular10;
				half4 Layer338_g174480 = _TerrainSpecular11;
				half4 Layer439_g174480 = _TerrainSpecular12;
				float4 weightedBlendVar31_g174480 = Weights52_g174480;
				float4 weightedBlend31_g174480 = ( weightedBlendVar31_g174480.x*Layer133_g174480 + weightedBlendVar31_g174480.y*Layer237_g174480 + weightedBlendVar31_g174480.z*Layer338_g174480 + weightedBlendVar31_g174480.w*Layer439_g174480 );
				half4 Terrain_Specular_128869_g174452 = weightedBlend31_g174480;
				half4 Layer_1243_g174550 = Terrain_Specular_128869_g174452;
				half4 Weights52_g174487 = Terrain_Weights_167709_g174452;
				half4 Layer133_g174487 = _TerrainSpecular13;
				half4 Layer237_g174487 = _TerrainSpecular14;
				half4 Layer338_g174487 = _TerrainSpecular15;
				half4 Layer439_g174487 = _TerrainSpecular16;
				float4 weightedBlendVar31_g174487 = Weights52_g174487;
				float4 weightedBlend31_g174487 = ( weightedBlendVar31_g174487.x*Layer133_g174487 + weightedBlendVar31_g174487.y*Layer237_g174487 + weightedBlendVar31_g174487.z*Layer338_g174487 + weightedBlendVar31_g174487.w*Layer439_g174487 );
				half4 Terrain_Specular_169019_g174452 = weightedBlend31_g174487;
				half4 Layer_1644_g174550 = Terrain_Specular_169019_g174452;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g174550 = Layer_045_g174550;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g174550 = ( Layer_045_g174550 + Layer_0810_g174550 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g174550 = ( Layer_045_g174550 + Layer_0810_g174550 + Layer_1243_g174550 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g174550 = ( Layer_045_g174550 + Layer_0810_g174550 + Layer_1243_g174550 + Layer_1644_g174550 );
				#else
				float4 staticSwitch40_g174550 = Layer_045_g174550;
				#endif
				half4 Blend_TerrainSpecular7446_g174452 = staticSwitch40_g174550;
				float3 temp_output_9088_0_g174452 = (Blend_TerrainSpecular7446_g174452).rgb;
				float4 appendResult9189_g174452 = (float4(temp_output_9088_0_g174452 , 1.0));
				half4 Final_Emissive9151_g174452 = appendResult9189_g174452;
				half4 Local_Emissive1006_g174425 = Final_Emissive9151_g174452;
				float4 appendResult1092_g174425 = (float4((Local_Emissive1006_g174425).xyz , Terrain_Mask412_g174425));
				#ifdef TVE_TERRAIN
				float4 staticSwitch1096_g174425 = appendResult1092_g174425;
				#else
				float4 staticSwitch1096_g174425 = half4(1,1,1,0);
				#endif
				half4 Final_EmissiveLDR1094_g174425 = staticSwitch1096_g174425;
				float4 In_Emissive3_g174429 = Final_EmissiveLDR1094_g174425;
				float3 temp_output_3_0_g174432 = Final_Albedo601_g174425;
				float dotResult20_g174432 = dot( temp_output_3_0_g174432 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale615_g174425 = dotResult20_g174432;
				float In_Grayscale3_g174429 = Final_Grayscale615_g174425;
				float clampResult651_g174425 = clamp( saturate( ( Final_Grayscale615_g174425 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity652_g174425 = clampResult651_g174425;
				float In_Luminosity3_g174429 = Final_Luminosity652_g174425;
				half Visual_MultiMask547_g174425 = Out_MultiMask4_g174428;
				half Final_MultiShader9150_g174452 = ( (Blend_TerrainSpecular7446_g174452).a * (Blend_Albedo7468_g174452).w );
				half Local_MultiMask767_g174425 = Final_MultiShader9150_g174452;
				float lerpResult477_g174425 = lerp( Visual_MultiMask547_g174425 , Local_MultiMask767_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float staticSwitch482_g174425 = lerpResult477_g174425;
				#else
				float staticSwitch482_g174425 = Visual_MultiMask547_g174425;
				#endif
				half Final_MultiMask572_g174425 = staticSwitch482_g174425;
				float In_MultiMask3_g174429 = Final_MultiMask572_g174425;
				half Visual_AlphaClip559_g174425 = Out_AlphaClip4_g174428;
				float4 temp_output_35_0_g174561 = appendResult9125_g174452;
				float2 InputScale48_g174561 = (temp_output_35_0_g174561).zw;
				half2 FinalScale53_g174561 = ( 1.0 / InputScale48_g174561 );
				float2 InputPosition52_g174561 = (temp_output_35_0_g174561).xy;
				half2 FinalPosition58_g174561 = -( FinalScale53_g174561 * InputPosition52_g174561 );
				float2 temp_output_65_0_g174561 = ( ( (ase_worldPos).xz * FinalScale53_g174561 ) + FinalPosition58_g174561 );
				float2 Terrain_Holes_UV9409_g174452 = temp_output_65_0_g174561;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch9188_g174452 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9409_g174452 ).r;
				#else
				float staticSwitch9188_g174452 = 1.0;
				#endif
				half Terrain_Holes7437_g174452 = staticSwitch9188_g174452;
				float temp_output_1141_9195_g174425 = Terrain_Holes7437_g174452;
				half Local_AlphaClip772_g174425 = temp_output_1141_9195_g174425;
				float lerpResult448_g174425 = lerp( Visual_AlphaClip559_g174425 , Local_AlphaClip772_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float staticSwitch564_g174425 = lerpResult448_g174425;
				#else
				float staticSwitch564_g174425 = Visual_AlphaClip559_g174425;
				#endif
				half Final_AlphaClip602_g174425 = staticSwitch564_g174425;
				float In_AlphaClip3_g174429 = Final_AlphaClip602_g174425;
				half Visual_AlphaFade588_g174425 = Out_AlphaFade4_g174428;
				half Local_AlphaFade773_g174425 = temp_output_1141_9195_g174425;
				float lerpResult604_g174425 = lerp( Visual_AlphaFade588_g174425 , Local_AlphaFade773_g174425 , Terrain_Mask412_g174425);
				#ifdef TVE_TERRAIN
				float staticSwitch608_g174425 = lerpResult604_g174425;
				#else
				float staticSwitch608_g174425 = Visual_AlphaFade588_g174425;
				#endif
				half Final_AlphaFade611_g174425 = staticSwitch608_g174425;
				float In_AlphaFade3_g174429 = Final_AlphaFade611_g174425;
				float3 In_Translucency3_g174429 = Out_Translucency4_g174428;
				float In_Transmission3_g174429 = Out_Transmission4_g174428;
				float In_Thickness3_g174429 = Out_Thickness4_g174428;
				float In_Diffusion3_g174429 = Out_Diffusion4_g174428;
				Data3_g174429.Dummy = In_Dummy3_g174429;
				Data3_g174429.Albedo = In_Albedo3_g174429;
				Data3_g174429.AlbedoRaw = In_AlbedoRaw3_g174429;
				Data3_g174429.NormalTS = In_NormalTS3_g174429;
				Data3_g174429.NormalWS = In_NormalWS3_g174429;
				Data3_g174429.Shader = In_Shader3_g174429;
				Data3_g174429.Emissive= In_Emissive3_g174429;
				Data3_g174429.MultiMask = In_MultiMask3_g174429;
				Data3_g174429.Grayscale = In_Grayscale3_g174429;
				Data3_g174429.Luminosity = In_Luminosity3_g174429;
				Data3_g174429.AlphaClip = In_AlphaClip3_g174429;
				Data3_g174429.AlphaFade = In_AlphaFade3_g174429;
				Data3_g174429.Translucency = In_Translucency3_g174429;
				Data3_g174429.Transmission = In_Transmission3_g174429;
				Data3_g174429.Thickness = In_Thickness3_g174429;
				Data3_g174429.Diffusion = In_Diffusion3_g174429;
				TVEVisualData Data4_g174641 = Data3_g174429;
				float Out_Dummy4_g174641 = 0;
				float3 Out_Albedo4_g174641 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174641 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174641 = float2( 0,0 );
				float3 Out_NormalWS4_g174641 = float3( 0,0,0 );
				float4 Out_Shader4_g174641 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174641 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174641 = 0;
				float Out_Grayscale4_g174641 = 0;
				float Out_Luminosity4_g174641 = 0;
				float Out_AlphaClip4_g174641 = 0;
				float Out_AlphaFade4_g174641 = 0;
				float3 Out_Translucency4_g174641 = float3( 0,0,0 );
				float Out_Transmission4_g174641 = 0;
				float Out_Thickness4_g174641 = 0;
				float Out_Diffusion4_g174641 = 0;
				Out_Dummy4_g174641 = Data4_g174641.Dummy;
				Out_Albedo4_g174641 = Data4_g174641.Albedo;
				Out_AlbedoRaw4_g174641 = Data4_g174641.AlbedoRaw;
				Out_NormalTS4_g174641 = Data4_g174641.NormalTS;
				Out_NormalWS4_g174641 = Data4_g174641.NormalWS;
				Out_Shader4_g174641 = Data4_g174641.Shader;
				Out_Emissive4_g174641= Data4_g174641.Emissive;
				Out_MultiMask4_g174641 = Data4_g174641.MultiMask;
				Out_Grayscale4_g174641 = Data4_g174641.Grayscale;
				Out_Luminosity4_g174641= Data4_g174641.Luminosity;
				Out_AlphaClip4_g174641 = Data4_g174641.AlphaClip;
				Out_AlphaFade4_g174641 = Data4_g174641.AlphaFade;
				Out_Translucency4_g174641 = Data4_g174641.Translucency;
				Out_Transmission4_g174641 = Data4_g174641.Transmission;
				Out_Thickness4_g174641 = Data4_g174641.Thickness;
				Out_Diffusion4_g174641 = Data4_g174641.Diffusion;
				half3 Visual_Albedo127_g174640 = Out_Albedo4_g174641;
				TVEModelData Data15_g174649 = Data16_g164566;
				float Out_Dummy15_g174649 = 0;
				float3 Out_PositionWS15_g174649 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174649 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174649 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174649 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174649 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174649 = float3( 0,0,0 );
				float4 Out_VertexData15_g174649 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174649 = float4( 0,0,0,0 );
				Out_Dummy15_g174649 = Data15_g174649.Dummy;
				Out_PositionWS15_g174649 = Data15_g174649.PositionWS;
				Out_PositionWO15_g174649 = Data15_g174649.PositionWO;
				Out_PivotWS15_g174649 = Data15_g174649.PivotWS;
				Out_PivotWO15_g174649 = Data15_g174649.PivotWO;
				Out_NormalWS15_g174649 = Data15_g174649.NormalWS;
				Out_ViewDirWS15_g174649 = Data15_g174649.ViewDirWS;
				Out_VertexData15_g174649 = Data15_g174649.VertexData;
				Out_BoundsData15_g174649 = Data15_g174649.BoundsData;
				half4 Model_VertexData206_g174640 = Out_VertexData15_g174649;
				float4 break208_g174640 = Model_VertexData206_g174640;
				float4 break33_g174647 = _occlusion_vert_mode;
				float temp_output_30_0_g174647 = ( break208_g174640.x * break33_g174647.x );
				float temp_output_29_0_g174647 = ( break208_g174640.y * break33_g174647.y );
				float temp_output_31_0_g174647 = ( break208_g174640.z * break33_g174647.z );
				float temp_output_28_0_g174647 = ( temp_output_30_0_g174647 + temp_output_29_0_g174647 + temp_output_31_0_g174647 + ( break208_g174640.w * break33_g174647.w ) );
				float temp_output_194_0_g174640 = temp_output_28_0_g174647;
				float clampResult17_g174645 = clamp( temp_output_194_0_g174640 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174644 = _OcclusionMeshRemap.x;
				float temp_output_10_0_g174644 = ( _OcclusionMeshRemap.y - temp_output_7_0_g174644 );
				float temp_output_6_0_g174646 = saturate( ( ( clampResult17_g174645 - temp_output_7_0_g174644 ) / ( temp_output_10_0_g174644 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174646 = ( temp_output_6_0_g174646 + ( _OcclusionMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174646 = temp_output_6_0_g174646;
				#endif
				half Occlusion_Mask82_g174640 = staticSwitch14_g174646;
				float3 lerpResult75_g174640 = lerp( (_OcclusionColorTwo).rgb , (_OcclusionColorOne).rgb , Occlusion_Mask82_g174640);
				float3 lerpResult186_g174640 = lerp( Visual_Albedo127_g174640 , ( Visual_Albedo127_g174640 * lerpResult75_g174640 ) , _OcclusionIntensityValue);
				#ifdef TVE_OCCLUSION
				float3 staticSwitch171_g174640 = lerpResult186_g174640;
				#else
				float3 staticSwitch171_g174640 = Visual_Albedo127_g174640;
				#endif
				half3 Final_Albedo160_g174640 = staticSwitch171_g174640;
				float3 In_Albedo3_g174642 = Final_Albedo160_g174640;
				float3 In_AlbedoRaw3_g174642 = Final_Albedo160_g174640;
				float2 In_NormalTS3_g174642 = Out_NormalTS4_g174641;
				float3 In_NormalWS3_g174642 = Out_NormalWS4_g174641;
				float4 In_Shader3_g174642 = Out_Shader4_g174641;
				float4 In_Emissive3_g174642 = Out_Emissive4_g174641;
				float3 temp_output_3_0_g174643 = Final_Albedo160_g174640;
				float dotResult20_g174643 = dot( temp_output_3_0_g174643 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale164_g174640 = dotResult20_g174643;
				float In_Grayscale3_g174642 = Final_Grayscale164_g174640;
				float clampResult180_g174640 = clamp( saturate( ( Final_Grayscale164_g174640 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Shading181_g174640 = clampResult180_g174640;
				float In_Luminosity3_g174642 = Final_Shading181_g174640;
				float In_MultiMask3_g174642 = Out_MultiMask4_g174641;
				float In_AlphaClip3_g174642 = Out_AlphaClip4_g174641;
				float In_AlphaFade3_g174642 = Out_AlphaFade4_g174641;
				float3 In_Translucency3_g174642 = Out_Translucency4_g174641;
				float In_Transmission3_g174642 = Out_Transmission4_g174641;
				float In_Thickness3_g174642 = Out_Thickness4_g174641;
				float In_Diffusion3_g174642 = Out_Diffusion4_g174641;
				Data3_g174642.Dummy = In_Dummy3_g174642;
				Data3_g174642.Albedo = In_Albedo3_g174642;
				Data3_g174642.AlbedoRaw = In_AlbedoRaw3_g174642;
				Data3_g174642.NormalTS = In_NormalTS3_g174642;
				Data3_g174642.NormalWS = In_NormalWS3_g174642;
				Data3_g174642.Shader = In_Shader3_g174642;
				Data3_g174642.Emissive= In_Emissive3_g174642;
				Data3_g174642.MultiMask = In_MultiMask3_g174642;
				Data3_g174642.Grayscale = In_Grayscale3_g174642;
				Data3_g174642.Luminosity = In_Luminosity3_g174642;
				Data3_g174642.AlphaClip = In_AlphaClip3_g174642;
				Data3_g174642.AlphaFade = In_AlphaFade3_g174642;
				Data3_g174642.Translucency = In_Translucency3_g174642;
				Data3_g174642.Transmission = In_Transmission3_g174642;
				Data3_g174642.Thickness = In_Thickness3_g174642;
				Data3_g174642.Diffusion = In_Diffusion3_g174642;
				TVEVisualData Data4_g174652 = Data3_g174642;
				float Out_Dummy4_g174652 = 0;
				float3 Out_Albedo4_g174652 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174652 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174652 = float2( 0,0 );
				float3 Out_NormalWS4_g174652 = float3( 0,0,0 );
				float4 Out_Shader4_g174652 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174652 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174652 = 0;
				float Out_Grayscale4_g174652 = 0;
				float Out_Luminosity4_g174652 = 0;
				float Out_AlphaClip4_g174652 = 0;
				float Out_AlphaFade4_g174652 = 0;
				float3 Out_Translucency4_g174652 = float3( 0,0,0 );
				float Out_Transmission4_g174652 = 0;
				float Out_Thickness4_g174652 = 0;
				float Out_Diffusion4_g174652 = 0;
				Out_Dummy4_g174652 = Data4_g174652.Dummy;
				Out_Albedo4_g174652 = Data4_g174652.Albedo;
				Out_AlbedoRaw4_g174652 = Data4_g174652.AlbedoRaw;
				Out_NormalTS4_g174652 = Data4_g174652.NormalTS;
				Out_NormalWS4_g174652 = Data4_g174652.NormalWS;
				Out_Shader4_g174652 = Data4_g174652.Shader;
				Out_Emissive4_g174652= Data4_g174652.Emissive;
				Out_MultiMask4_g174652 = Data4_g174652.MultiMask;
				Out_Grayscale4_g174652 = Data4_g174652.Grayscale;
				Out_Luminosity4_g174652= Data4_g174652.Luminosity;
				Out_AlphaClip4_g174652 = Data4_g174652.AlphaClip;
				Out_AlphaFade4_g174652 = Data4_g174652.AlphaFade;
				Out_Translucency4_g174652 = Data4_g174652.Translucency;
				Out_Transmission4_g174652 = Data4_g174652.Transmission;
				Out_Thickness4_g174652 = Data4_g174652.Thickness;
				Out_Diffusion4_g174652 = Data4_g174652.Diffusion;
				half3 Visual_Albedo127_g174650 = Out_Albedo4_g174652;
				TVEModelData Data15_g174659 = Data16_g164566;
				float Out_Dummy15_g174659 = 0;
				float3 Out_PositionWS15_g174659 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174659 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174659 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174659 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174659 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174659 = float3( 0,0,0 );
				float4 Out_VertexData15_g174659 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174659 = float4( 0,0,0,0 );
				Out_Dummy15_g174659 = Data15_g174659.Dummy;
				Out_PositionWS15_g174659 = Data15_g174659.PositionWS;
				Out_PositionWO15_g174659 = Data15_g174659.PositionWO;
				Out_PivotWS15_g174659 = Data15_g174659.PivotWS;
				Out_PivotWO15_g174659 = Data15_g174659.PivotWO;
				Out_NormalWS15_g174659 = Data15_g174659.NormalWS;
				Out_ViewDirWS15_g174659 = Data15_g174659.ViewDirWS;
				Out_VertexData15_g174659 = Data15_g174659.VertexData;
				Out_BoundsData15_g174659 = Data15_g174659.BoundsData;
				half4 Model_VertexData224_g174650 = Out_VertexData15_g174659;
				float4 break226_g174650 = Model_VertexData224_g174650;
				float4 break33_g174651 = _gradient_vert_mode;
				float temp_output_30_0_g174651 = ( break226_g174650.x * break33_g174651.x );
				float temp_output_29_0_g174651 = ( break226_g174650.y * break33_g174651.y );
				float temp_output_31_0_g174651 = ( break226_g174650.z * break33_g174651.z );
				float temp_output_28_0_g174651 = ( temp_output_30_0_g174651 + temp_output_29_0_g174651 + temp_output_31_0_g174651 + ( break226_g174650.w * break33_g174651.w ) );
				float temp_output_211_0_g174650 = temp_output_28_0_g174651;
				float clampResult17_g174656 = clamp( temp_output_211_0_g174650 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174657 = _GradientMeshRemap.x;
				float temp_output_10_0_g174657 = ( _GradientMeshRemap.y - temp_output_7_0_g174657 );
				float temp_output_6_0_g174658 = saturate( ( ( clampResult17_g174656 - temp_output_7_0_g174657 ) / ( temp_output_10_0_g174657 + 0.0001 ) ) );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174658 = ( temp_output_6_0_g174658 + ( _GradientMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174658 = temp_output_6_0_g174658;
				#endif
				half Gradient_VertMask82_g174650 = staticSwitch14_g174658;
				half Gradient_Mask200_g174650 = Gradient_VertMask82_g174650;
				float3 lerpResult75_g174650 = lerp( (_GradientColorTwo).rgb , (_GradientColorOne).rgb , Gradient_Mask200_g174650);
				float temp_output_162_11_g174650 = Out_MultiMask4_g174652;
				half Visual_MultiMask196_g174650 = temp_output_162_11_g174650;
				float lerpResult190_g174650 = lerp( 1.0 , Visual_MultiMask196_g174650 , _GradientMultiValue);
				half Gradient_MultiMask194_g174650 = lerpResult190_g174650;
				float3 lerpResult186_g174650 = lerp( Visual_Albedo127_g174650 , ( Visual_Albedo127_g174650 * lerpResult75_g174650 ) , ( _GradientIntensityValue * Gradient_MultiMask194_g174650 ));
				#ifdef TVE_GRADIENT
				float3 staticSwitch171_g174650 = lerpResult186_g174650;
				#else
				float3 staticSwitch171_g174650 = Visual_Albedo127_g174650;
				#endif
				half3 Final_Albedo160_g174650 = staticSwitch171_g174650;
				float3 In_Albedo3_g174653 = Final_Albedo160_g174650;
				float3 In_AlbedoRaw3_g174653 = Final_Albedo160_g174650;
				float2 In_NormalTS3_g174653 = Out_NormalTS4_g174652;
				float3 In_NormalWS3_g174653 = Out_NormalWS4_g174652;
				float4 In_Shader3_g174653 = Out_Shader4_g174652;
				float4 In_Emissive3_g174653 = Out_Emissive4_g174652;
				float3 temp_output_3_0_g174654 = Final_Albedo160_g174650;
				float dotResult20_g174654 = dot( temp_output_3_0_g174654 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale164_g174650 = dotResult20_g174654;
				float In_Grayscale3_g174653 = Final_Grayscale164_g174650;
				float clampResult180_g174650 = clamp( saturate( ( Final_Grayscale164_g174650 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity181_g174650 = clampResult180_g174650;
				float In_Luminosity3_g174653 = Final_Luminosity181_g174650;
				float In_MultiMask3_g174653 = temp_output_162_11_g174650;
				float In_AlphaClip3_g174653 = Out_AlphaClip4_g174652;
				float In_AlphaFade3_g174653 = Out_AlphaFade4_g174652;
				float3 In_Translucency3_g174653 = Out_Translucency4_g174652;
				float In_Transmission3_g174653 = Out_Transmission4_g174652;
				float In_Thickness3_g174653 = Out_Thickness4_g174652;
				float In_Diffusion3_g174653 = Out_Diffusion4_g174652;
				Data3_g174653.Dummy = In_Dummy3_g174653;
				Data3_g174653.Albedo = In_Albedo3_g174653;
				Data3_g174653.AlbedoRaw = In_AlbedoRaw3_g174653;
				Data3_g174653.NormalTS = In_NormalTS3_g174653;
				Data3_g174653.NormalWS = In_NormalWS3_g174653;
				Data3_g174653.Shader = In_Shader3_g174653;
				Data3_g174653.Emissive= In_Emissive3_g174653;
				Data3_g174653.MultiMask = In_MultiMask3_g174653;
				Data3_g174653.Grayscale = In_Grayscale3_g174653;
				Data3_g174653.Luminosity = In_Luminosity3_g174653;
				Data3_g174653.AlphaClip = In_AlphaClip3_g174653;
				Data3_g174653.AlphaFade = In_AlphaFade3_g174653;
				Data3_g174653.Translucency = In_Translucency3_g174653;
				Data3_g174653.Transmission = In_Transmission3_g174653;
				Data3_g174653.Thickness = In_Thickness3_g174653;
				Data3_g174653.Diffusion = In_Diffusion3_g174653;
				TVEVisualData Data4_g174662 = Data3_g174653;
				float Out_Dummy4_g174662 = 0;
				float3 Out_Albedo4_g174662 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174662 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174662 = float2( 0,0 );
				float3 Out_NormalWS4_g174662 = float3( 0,0,0 );
				float4 Out_Shader4_g174662 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174662 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174662 = 0;
				float Out_Grayscale4_g174662 = 0;
				float Out_Luminosity4_g174662 = 0;
				float Out_AlphaClip4_g174662 = 0;
				float Out_AlphaFade4_g174662 = 0;
				float3 Out_Translucency4_g174662 = float3( 0,0,0 );
				float Out_Transmission4_g174662 = 0;
				float Out_Thickness4_g174662 = 0;
				float Out_Diffusion4_g174662 = 0;
				Out_Dummy4_g174662 = Data4_g174662.Dummy;
				Out_Albedo4_g174662 = Data4_g174662.Albedo;
				Out_AlbedoRaw4_g174662 = Data4_g174662.AlbedoRaw;
				Out_NormalTS4_g174662 = Data4_g174662.NormalTS;
				Out_NormalWS4_g174662 = Data4_g174662.NormalWS;
				Out_Shader4_g174662 = Data4_g174662.Shader;
				Out_Emissive4_g174662= Data4_g174662.Emissive;
				Out_MultiMask4_g174662 = Data4_g174662.MultiMask;
				Out_Grayscale4_g174662 = Data4_g174662.Grayscale;
				Out_Luminosity4_g174662= Data4_g174662.Luminosity;
				Out_AlphaClip4_g174662 = Data4_g174662.AlphaClip;
				Out_AlphaFade4_g174662 = Data4_g174662.AlphaFade;
				Out_Translucency4_g174662 = Data4_g174662.Translucency;
				Out_Transmission4_g174662 = Data4_g174662.Transmission;
				Out_Thickness4_g174662 = Data4_g174662.Thickness;
				Out_Diffusion4_g174662 = Data4_g174662.Diffusion;
				half3 Visual_Albedo127_g174660 = Out_Albedo4_g174662;
				TVEModelData Data15_g174668 = Data16_g164566;
				float Out_Dummy15_g174668 = 0;
				float3 Out_PositionWS15_g174668 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174668 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174668 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174668 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174668 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174668 = float3( 0,0,0 );
				float4 Out_VertexData15_g174668 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174668 = float4( 0,0,0,0 );
				Out_Dummy15_g174668 = Data15_g174668.Dummy;
				Out_PositionWS15_g174668 = Data15_g174668.PositionWS;
				Out_PositionWO15_g174668 = Data15_g174668.PositionWO;
				Out_PivotWS15_g174668 = Data15_g174668.PivotWS;
				Out_PivotWO15_g174668 = Data15_g174668.PivotWO;
				Out_NormalWS15_g174668 = Data15_g174668.NormalWS;
				Out_ViewDirWS15_g174668 = Data15_g174668.ViewDirWS;
				Out_VertexData15_g174668 = Data15_g174668.VertexData;
				Out_BoundsData15_g174668 = Data15_g174668.BoundsData;
				half3 Model_PositionWO224_g174660 = Out_PositionWO15_g174668;
				half3 Model_PivotWO239_g174660 = Out_PivotWO15_g174668;
				float3 lerpResult242_g174660 = lerp( Model_PositionWO224_g174660 , Model_PivotWO239_g174660 , _VariationNoisePivotValue);
				float4 tex3DNode60_g174664 = SAMPLE_TEXTURE3D( _NoiseTex3D, sampler_Linear_Repeat, ( lerpResult242_g174660 * ( _VariationNoiseTillingValue * 0.01 ) ) );
				float clampResult17_g174666 = clamp( tex3DNode60_g174664.r , 0.0001 , 0.9999 );
				float temp_output_7_0_g174667 = _VariationNoiseRemap.x;
				float temp_output_10_0_g174667 = ( _VariationNoiseRemap.y - temp_output_7_0_g174667 );
				float temp_output_238_0_g174660 = saturate( ( ( clampResult17_g174666 - temp_output_7_0_g174667 ) / ( temp_output_10_0_g174667 + 0.0001 ) ) );
				half Variaton_NoiseMask82_g174660 = temp_output_238_0_g174660;
				half Variaton_Mask200_g174660 = Variaton_NoiseMask82_g174660;
				float3 lerpResult75_g174660 = lerp( (_VariationColorTwo).rgb , (_VariationColorOne).rgb , Variaton_Mask200_g174660);
				float temp_output_162_11_g174660 = Out_MultiMask4_g174662;
				half Visual_MultiMask196_g174660 = temp_output_162_11_g174660;
				float lerpResult190_g174660 = lerp( 1.0 , Visual_MultiMask196_g174660 , _VariationMultiValue);
				half Variaton_MultiMask194_g174660 = lerpResult190_g174660;
				float3 lerpResult186_g174660 = lerp( Visual_Albedo127_g174660 , ( Visual_Albedo127_g174660 * lerpResult75_g174660 ) , ( _VariationIntensityValue * Variaton_MultiMask194_g174660 ));
				#ifdef TVE_VARIATION
				float3 staticSwitch171_g174660 = lerpResult186_g174660;
				#else
				float3 staticSwitch171_g174660 = Visual_Albedo127_g174660;
				#endif
				half3 Final_Albedo160_g174660 = staticSwitch171_g174660;
				float3 In_Albedo3_g174663 = Final_Albedo160_g174660;
				float3 In_AlbedoRaw3_g174663 = Final_Albedo160_g174660;
				float2 In_NormalTS3_g174663 = Out_NormalTS4_g174662;
				float3 In_NormalWS3_g174663 = Out_NormalWS4_g174662;
				float4 In_Shader3_g174663 = Out_Shader4_g174662;
				float4 In_Emissive3_g174663 = Out_Emissive4_g174662;
				float3 temp_output_3_0_g174661 = Final_Albedo160_g174660;
				float dotResult20_g174661 = dot( temp_output_3_0_g174661 , float3(0.2126,0.7152,0.0722) );
				half Final_Grayscale164_g174660 = dotResult20_g174661;
				float In_Grayscale3_g174663 = Final_Grayscale164_g174660;
				float clampResult180_g174660 = clamp( saturate( ( Final_Grayscale164_g174660 * 5.0 ) ) , 0.2 , 1.0 );
				half Final_Luminosity181_g174660 = clampResult180_g174660;
				float In_Luminosity3_g174663 = Final_Luminosity181_g174660;
				float In_MultiMask3_g174663 = temp_output_162_11_g174660;
				float In_AlphaClip3_g174663 = Out_AlphaClip4_g174662;
				float In_AlphaFade3_g174663 = Out_AlphaFade4_g174662;
				float3 In_Translucency3_g174663 = Out_Translucency4_g174662;
				float In_Transmission3_g174663 = Out_Transmission4_g174662;
				float In_Thickness3_g174663 = Out_Thickness4_g174662;
				float In_Diffusion3_g174663 = Out_Diffusion4_g174662;
				Data3_g174663.Dummy = In_Dummy3_g174663;
				Data3_g174663.Albedo = In_Albedo3_g174663;
				Data3_g174663.AlbedoRaw = In_AlbedoRaw3_g174663;
				Data3_g174663.NormalTS = In_NormalTS3_g174663;
				Data3_g174663.NormalWS = In_NormalWS3_g174663;
				Data3_g174663.Shader = In_Shader3_g174663;
				Data3_g174663.Emissive= In_Emissive3_g174663;
				Data3_g174663.MultiMask = In_MultiMask3_g174663;
				Data3_g174663.Grayscale = In_Grayscale3_g174663;
				Data3_g174663.Luminosity = In_Luminosity3_g174663;
				Data3_g174663.AlphaClip = In_AlphaClip3_g174663;
				Data3_g174663.AlphaFade = In_AlphaFade3_g174663;
				Data3_g174663.Translucency = In_Translucency3_g174663;
				Data3_g174663.Transmission = In_Transmission3_g174663;
				Data3_g174663.Thickness = In_Thickness3_g174663;
				Data3_g174663.Diffusion = In_Diffusion3_g174663;
				TVEVisualData Data4_g174692 = Data3_g174663;
				float Out_Dummy4_g174692 = 0;
				float3 Out_Albedo4_g174692 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174692 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174692 = float2( 0,0 );
				float3 Out_NormalWS4_g174692 = float3( 0,0,0 );
				float4 Out_Shader4_g174692 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174692 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174692 = 0;
				float Out_Grayscale4_g174692 = 0;
				float Out_Luminosity4_g174692 = 0;
				float Out_AlphaClip4_g174692 = 0;
				float Out_AlphaFade4_g174692 = 0;
				float3 Out_Translucency4_g174692 = float3( 0,0,0 );
				float Out_Transmission4_g174692 = 0;
				float Out_Thickness4_g174692 = 0;
				float Out_Diffusion4_g174692 = 0;
				Out_Dummy4_g174692 = Data4_g174692.Dummy;
				Out_Albedo4_g174692 = Data4_g174692.Albedo;
				Out_AlbedoRaw4_g174692 = Data4_g174692.AlbedoRaw;
				Out_NormalTS4_g174692 = Data4_g174692.NormalTS;
				Out_NormalWS4_g174692 = Data4_g174692.NormalWS;
				Out_Shader4_g174692 = Data4_g174692.Shader;
				Out_Emissive4_g174692= Data4_g174692.Emissive;
				Out_MultiMask4_g174692 = Data4_g174692.MultiMask;
				Out_Grayscale4_g174692 = Data4_g174692.Grayscale;
				Out_Luminosity4_g174692= Data4_g174692.Luminosity;
				Out_AlphaClip4_g174692 = Data4_g174692.AlphaClip;
				Out_AlphaFade4_g174692 = Data4_g174692.AlphaFade;
				Out_Translucency4_g174692 = Data4_g174692.Translucency;
				Out_Transmission4_g174692 = Data4_g174692.Transmission;
				Out_Thickness4_g174692 = Data4_g174692.Thickness;
				Out_Diffusion4_g174692 = Data4_g174692.Diffusion;
				half3 Visual_Albedo139_g174670 = Out_Albedo4_g174692;
				float temp_output_200_12_g174670 = Out_Grayscale4_g174692;
				half Visual_Grayscale150_g174670 = temp_output_200_12_g174670;
				float3 temp_cast_46 = (Visual_Grayscale150_g174670).xxx;
				TVEGlobalData Data15_g174671 = Data204_g173897;
				float Out_Dummy15_g174671 = 0;
				float4 Out_CoatParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174671 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174671 = float4( 0,0,0,0 );
				Out_Dummy15_g174671 = Data15_g174671.Dummy;
				Out_CoatParams15_g174671 = Data15_g174671.CoatParams;
				Out_PaintParams15_g174671 = Data15_g174671.PaintParams;
				Out_GlowParams15_g174671 = Data15_g174671.GlowParams;
				Out_AtmoParams15_g174671= Data15_g174671.AtmoParams;
				Out_FadeParams15_g174671= Data15_g174671.FadeParams;
				Out_FormParams15_g174671 = Data15_g174671.FormParams;
				Out_LandParams15_g174671 = Data15_g174671.LandParams;
				Out_WindParams15_g174671 = Data15_g174671.WindParams;
				Out_PushParams15_g174671 = Data15_g174671.PushParams;
				half4 Global_PaintParams209_g174670 = Out_PaintParams15_g174671;
				float temp_output_6_0_g174672 = ( saturate( (Global_PaintParams209_g174670).w ) * TVE_IsEnabled );
				#ifdef TVE_REGISTER
				float staticSwitch14_g174672 = ( temp_output_6_0_g174672 + ( _TintingElementMode * 0.0 ) );
				#else
				float staticSwitch14_g174672 = temp_output_6_0_g174672;
				#endif
				#ifdef TVE_TINTING_ELEMENT
				float staticSwitch283_g174670 = staticSwitch14_g174672;
				#else
				float staticSwitch283_g174670 = 1.0;
				#endif
				half Tinting_GlobalValue285_g174670 = staticSwitch283_g174670;
				float3 lerpResult368_g174670 = lerp( Visual_Albedo139_g174670 , temp_cast_46 , ( Tinting_GlobalValue285_g174670 * _TintingGrayValue ));
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174690 = 2.0;
				#else
				float staticSwitch1_g174690 = 4.594794;
				#endif
				float3 temp_cast_47 = (1.0).xxx;
				#ifdef TVE_TINTING_ELEMENT
				float3 staticSwitch288_g174670 = (Global_PaintParams209_g174670).xyz;
				#else
				float3 staticSwitch288_g174670 = temp_cast_47;
				#endif
				half3 Tinting_ColorGlobal290_g174670 = staticSwitch288_g174670;
				float temp_output_200_11_g174670 = Out_MultiMask4_g174692;
				half Visual_MultiMask181_g174670 = temp_output_200_11_g174670;
				float lerpResult147_g174670 = lerp( 1.0 , Visual_MultiMask181_g174670 , _TintingMultiValue);
				half Tinting_MutiMask121_g174670 = lerpResult147_g174670;
				half Tinting_TexMask385_g174670 = 1.0;
				float temp_output_200_15_g174670 = Out_Luminosity4_g174692;
				half Visual_Luminosity257_g174670 = temp_output_200_15_g174670;
				float clampResult17_g174684 = clamp( Visual_Luminosity257_g174670 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174683 = _TintingLumaRemap.x;
				float temp_output_10_0_g174683 = ( _TintingLumaRemap.y - temp_output_7_0_g174683 );
				float lerpResult228_g174670 = lerp( 1.0 , saturate( ( ( clampResult17_g174684 - temp_output_7_0_g174683 ) / ( temp_output_10_0_g174683 + 0.0001 ) ) ) , _TintingLumaValue);
				half Tinting_LumaMask153_g174670 = lerpResult228_g174670;
				TVEModelData Data15_g174693 = Data16_g164566;
				float Out_Dummy15_g174693 = 0;
				float3 Out_PositionWS15_g174693 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174693 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174693 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174693 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174693 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174693 = float3( 0,0,0 );
				float4 Out_VertexData15_g174693 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174693 = float4( 0,0,0,0 );
				Out_Dummy15_g174693 = Data15_g174693.Dummy;
				Out_PositionWS15_g174693 = Data15_g174693.PositionWS;
				Out_PositionWO15_g174693 = Data15_g174693.PositionWO;
				Out_PivotWS15_g174693 = Data15_g174693.PivotWS;
				Out_PivotWO15_g174693 = Data15_g174693.PivotWO;
				Out_NormalWS15_g174693 = Data15_g174693.NormalWS;
				Out_ViewDirWS15_g174693 = Data15_g174693.ViewDirWS;
				Out_VertexData15_g174693 = Data15_g174693.VertexData;
				Out_BoundsData15_g174693 = Data15_g174693.BoundsData;
				half4 Model_VertexMasks307_g174670 = Out_VertexData15_g174693;
				float4 break311_g174670 = Model_VertexMasks307_g174670;
				float4 break33_g174676 = _tinting_vert_mode;
				float temp_output_30_0_g174676 = ( break311_g174670.x * break33_g174676.x );
				float temp_output_29_0_g174676 = ( break311_g174670.y * break33_g174676.y );
				float temp_output_31_0_g174676 = ( break311_g174670.z * break33_g174676.z );
				float temp_output_28_0_g174676 = ( temp_output_30_0_g174676 + temp_output_29_0_g174676 + temp_output_31_0_g174676 + ( break311_g174670.w * break33_g174676.w ) );
				float clampResult17_g174682 = clamp( temp_output_28_0_g174676 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174681 = _TintingMeshRemap.x;
				float temp_output_10_0_g174681 = ( _TintingMeshRemap.y - temp_output_7_0_g174681 );
				float lerpResult370_g174670 = lerp( 1.0 , saturate( ( ( clampResult17_g174682 - temp_output_7_0_g174681 ) / ( temp_output_10_0_g174681 + 0.0001 ) ) ) , _TintingMeshValue);
				float temp_output_6_0_g174685 = lerpResult370_g174670;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174685 = ( temp_output_6_0_g174685 + ( _TintingMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174685 = temp_output_6_0_g174685;
				#endif
				float temp_output_333_0_g174670 = staticSwitch14_g174685;
				half Tinting_VertMask309_g174670 = temp_output_333_0_g174670;
				half Tinting_NoiseMask213_g174670 = 1.0;
				half Custom_Mask345_g174670 = 1.0;
				float temp_output_7_0_g174679 = _TintingBlendRemap.x;
				float temp_output_10_0_g174679 = ( _TintingBlendRemap.y - temp_output_7_0_g174679 );
				half Tinting_Mask242_g174670 = ( saturate( ( ( ( _TintingIntensityValue * Tinting_MutiMask121_g174670 * Tinting_TexMask385_g174670 * Tinting_LumaMask153_g174670 * Tinting_VertMask309_g174670 * Tinting_NoiseMask213_g174670 * Tinting_GlobalValue285_g174670 * Custom_Mask345_g174670 ) - temp_output_7_0_g174679 ) / ( temp_output_10_0_g174679 + 0.0001 ) ) ) * TVE_IsEnabled );
				float3 lerpResult90_g174670 = lerp( Visual_Albedo139_g174670 , ( lerpResult368_g174670 * staticSwitch1_g174690 * Tinting_ColorGlobal290_g174670 * (_TintingColor).rgb ) , Tinting_Mask242_g174670);
				#ifdef TVE_TINTING
				float3 staticSwitch286_g174670 = lerpResult90_g174670;
				#else
				float3 staticSwitch286_g174670 = Visual_Albedo139_g174670;
				#endif
				half3 Final_Albedo97_g174670 = staticSwitch286_g174670;
				float3 In_Albedo3_g174691 = Final_Albedo97_g174670;
				float3 In_AlbedoRaw3_g174691 = Out_AlbedoRaw4_g174692;
				float2 In_NormalTS3_g174691 = Out_NormalTS4_g174692;
				float3 In_NormalWS3_g174691 = Out_NormalWS4_g174692;
				float4 In_Shader3_g174691 = Out_Shader4_g174692;
				float4 In_Emissive3_g174691 = Out_Emissive4_g174692;
				float In_Grayscale3_g174691 = temp_output_200_12_g174670;
				float In_Luminosity3_g174691 = temp_output_200_15_g174670;
				float In_MultiMask3_g174691 = temp_output_200_11_g174670;
				float In_AlphaClip3_g174691 = Out_AlphaClip4_g174692;
				float In_AlphaFade3_g174691 = Out_AlphaFade4_g174692;
				float3 In_Translucency3_g174691 = Out_Translucency4_g174692;
				float In_Transmission3_g174691 = Out_Transmission4_g174692;
				float In_Thickness3_g174691 = Out_Thickness4_g174692;
				float In_Diffusion3_g174691 = Out_Diffusion4_g174692;
				Data3_g174691.Dummy = In_Dummy3_g174691;
				Data3_g174691.Albedo = In_Albedo3_g174691;
				Data3_g174691.AlbedoRaw = In_AlbedoRaw3_g174691;
				Data3_g174691.NormalTS = In_NormalTS3_g174691;
				Data3_g174691.NormalWS = In_NormalWS3_g174691;
				Data3_g174691.Shader = In_Shader3_g174691;
				Data3_g174691.Emissive= In_Emissive3_g174691;
				Data3_g174691.MultiMask = In_MultiMask3_g174691;
				Data3_g174691.Grayscale = In_Grayscale3_g174691;
				Data3_g174691.Luminosity = In_Luminosity3_g174691;
				Data3_g174691.AlphaClip = In_AlphaClip3_g174691;
				Data3_g174691.AlphaFade = In_AlphaFade3_g174691;
				Data3_g174691.Translucency = In_Translucency3_g174691;
				Data3_g174691.Transmission = In_Transmission3_g174691;
				Data3_g174691.Thickness = In_Thickness3_g174691;
				Data3_g174691.Diffusion = In_Diffusion3_g174691;
				TVEVisualData Data4_g174696 = Data3_g174691;
				float Out_Dummy4_g174696 = 0;
				float3 Out_Albedo4_g174696 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174696 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174696 = float2( 0,0 );
				float3 Out_NormalWS4_g174696 = float3( 0,0,0 );
				float4 Out_Shader4_g174696 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174696 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174696 = 0;
				float Out_Grayscale4_g174696 = 0;
				float Out_Luminosity4_g174696 = 0;
				float Out_AlphaClip4_g174696 = 0;
				float Out_AlphaFade4_g174696 = 0;
				float3 Out_Translucency4_g174696 = float3( 0,0,0 );
				float Out_Transmission4_g174696 = 0;
				float Out_Thickness4_g174696 = 0;
				float Out_Diffusion4_g174696 = 0;
				Out_Dummy4_g174696 = Data4_g174696.Dummy;
				Out_Albedo4_g174696 = Data4_g174696.Albedo;
				Out_AlbedoRaw4_g174696 = Data4_g174696.AlbedoRaw;
				Out_NormalTS4_g174696 = Data4_g174696.NormalTS;
				Out_NormalWS4_g174696 = Data4_g174696.NormalWS;
				Out_Shader4_g174696 = Data4_g174696.Shader;
				Out_Emissive4_g174696= Data4_g174696.Emissive;
				Out_MultiMask4_g174696 = Data4_g174696.MultiMask;
				Out_Grayscale4_g174696 = Data4_g174696.Grayscale;
				Out_Luminosity4_g174696= Data4_g174696.Luminosity;
				Out_AlphaClip4_g174696 = Data4_g174696.AlphaClip;
				Out_AlphaFade4_g174696 = Data4_g174696.AlphaFade;
				Out_Translucency4_g174696 = Data4_g174696.Translucency;
				Out_Transmission4_g174696 = Data4_g174696.Transmission;
				Out_Thickness4_g174696 = Data4_g174696.Thickness;
				Out_Diffusion4_g174696 = Data4_g174696.Diffusion;
				half3 Visual_Albedo292_g174694 = Out_Albedo4_g174696;
				float temp_output_280_12_g174694 = Out_Grayscale4_g174696;
				half Visual_Grayscale308_g174694 = temp_output_280_12_g174694;
				float3 temp_cast_48 = (Visual_Grayscale308_g174694).xxx;
				TVEGlobalData Data15_g174695 = Data204_g173897;
				float Out_Dummy15_g174695 = 0;
				float4 Out_CoatParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174695 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174695 = float4( 0,0,0,0 );
				Out_Dummy15_g174695 = Data15_g174695.Dummy;
				Out_CoatParams15_g174695 = Data15_g174695.CoatParams;
				Out_PaintParams15_g174695 = Data15_g174695.PaintParams;
				Out_GlowParams15_g174695 = Data15_g174695.GlowParams;
				Out_AtmoParams15_g174695= Data15_g174695.AtmoParams;
				Out_FadeParams15_g174695= Data15_g174695.FadeParams;
				Out_FormParams15_g174695 = Data15_g174695.FormParams;
				Out_LandParams15_g174695 = Data15_g174695.LandParams;
				Out_WindParams15_g174695 = Data15_g174695.WindParams;
				Out_PushParams15_g174695 = Data15_g174695.PushParams;
				half4 Global_AtmoParams314_g174694 = Out_AtmoParams15_g174695;
				#ifdef TVE_DRYNESS_ELEMENT
				float staticSwitch351_g174694 = ( (Global_AtmoParams314_g174694).x * TVE_IsEnabled );
				#else
				float staticSwitch351_g174694 = 1.0;
				#endif
				half Dryness_GlobalMask352_g174694 = staticSwitch351_g174694;
				float3 lerpResult485_g174694 = lerp( Visual_Albedo292_g174694 , temp_cast_48 , ( Dryness_GlobalMask352_g174694 * _DrynessGrayValue ));
				half3 hsvTorgb58_g174715 = RGBToHSV( lerpResult485_g174694 );
				half3 hsvTorgb61_g174715 = HSVToRGB( half3(( hsvTorgb58_g174715.x + _DrynessShiftValue ),hsvTorgb58_g174715.y,hsvTorgb58_g174715.z) );
				#ifdef TVE_DRYNESS_SHIFT
				float3 staticSwitch499_g174694 = hsvTorgb61_g174715;
				#else
				float3 staticSwitch499_g174694 = lerpResult485_g174694;
				#endif
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g174714 = 2.0;
				#else
				float staticSwitch1_g174714 = 4.594794;
				#endif
				half Dryness_TexMask478_g174694 = 1.0;
				float temp_output_280_11_g174694 = Out_MultiMask4_g174696;
				half Visual_MultiMask310_g174694 = temp_output_280_11_g174694;
				float lerpResult283_g174694 = lerp( 1.0 , Visual_MultiMask310_g174694 , _DrynessMultiValue);
				half Dryness_MultiMask302_g174694 = lerpResult283_g174694;
				float temp_output_280_15_g174694 = Out_Luminosity4_g174696;
				half Visual_Luminosity309_g174694 = temp_output_280_15_g174694;
				float clampResult17_g174710 = clamp( Visual_Luminosity309_g174694 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174709 = _DrynessLumaRemap.x;
				float temp_output_10_0_g174709 = ( _DrynessLumaRemap.y - temp_output_7_0_g174709 );
				float lerpResult295_g174694 = lerp( 1.0 , saturate( ( ( clampResult17_g174710 - temp_output_7_0_g174709 ) / ( temp_output_10_0_g174709 + 0.0001 ) ) ) , _DrynessLumaValue);
				half Dryness_LumaMask301_g174694 = lerpResult295_g174694;
				TVEModelData Data15_g174716 = Data16_g164566;
				float Out_Dummy15_g174716 = 0;
				float3 Out_PositionWS15_g174716 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174716 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174716 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174716 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174716 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174716 = float3( 0,0,0 );
				float4 Out_VertexData15_g174716 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174716 = float4( 0,0,0,0 );
				Out_Dummy15_g174716 = Data15_g174716.Dummy;
				Out_PositionWS15_g174716 = Data15_g174716.PositionWS;
				Out_PositionWO15_g174716 = Data15_g174716.PositionWO;
				Out_PivotWS15_g174716 = Data15_g174716.PivotWS;
				Out_PivotWO15_g174716 = Data15_g174716.PivotWO;
				Out_NormalWS15_g174716 = Data15_g174716.NormalWS;
				Out_ViewDirWS15_g174716 = Data15_g174716.ViewDirWS;
				Out_VertexData15_g174716 = Data15_g174716.VertexData;
				Out_BoundsData15_g174716 = Data15_g174716.BoundsData;
				half4 Model_VertexMasks386_g174694 = Out_VertexData15_g174716;
				float4 break375_g174694 = Model_VertexMasks386_g174694;
				float4 break33_g174703 = _dryness_vert_mode;
				float temp_output_30_0_g174703 = ( break375_g174694.x * break33_g174703.x );
				float temp_output_29_0_g174703 = ( break375_g174694.y * break33_g174703.y );
				float temp_output_31_0_g174703 = ( break375_g174694.z * break33_g174703.z );
				float temp_output_28_0_g174703 = ( temp_output_30_0_g174703 + temp_output_29_0_g174703 + temp_output_31_0_g174703 + ( break375_g174694.w * break33_g174703.w ) );
				float clampResult17_g174704 = clamp( temp_output_28_0_g174703 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174705 = _DrynessMeshRemap.x;
				float temp_output_10_0_g174705 = ( _DrynessMeshRemap.y - temp_output_7_0_g174705 );
				float lerpResult452_g174694 = lerp( 1.0 , saturate( ( ( clampResult17_g174704 - temp_output_7_0_g174705 ) / ( temp_output_10_0_g174705 + 0.0001 ) ) ) , _DrynessMeshValue);
				float temp_output_6_0_g174711 = lerpResult452_g174694;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174711 = ( temp_output_6_0_g174711 + ( _DrynessMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174711 = temp_output_6_0_g174711;
				#endif
				float temp_output_448_0_g174694 = staticSwitch14_g174711;
				half Dryness_VertMask378_g174694 = temp_output_448_0_g174694;
				half Dryness_MaskNoise291_g174694 = 1.0;
				half Custom_Mask411_g174694 = 1.0;
				float temp_output_7_0_g174708 = _DrynessBlendRemap.x;
				float temp_output_10_0_g174708 = ( _DrynessBlendRemap.y - temp_output_7_0_g174708 );
				half Dryness_Mask329_g174694 = saturate( ( ( ( _DrynessIntensityValue * Dryness_TexMask478_g174694 * Dryness_MultiMask302_g174694 * Dryness_LumaMask301_g174694 * Dryness_VertMask378_g174694 * Dryness_MaskNoise291_g174694 * Dryness_GlobalMask352_g174694 * Custom_Mask411_g174694 ) - temp_output_7_0_g174708 ) / ( temp_output_10_0_g174708 + 0.0001 ) ) );
				float3 lerpResult336_g174694 = lerp( Visual_Albedo292_g174694 , ( staticSwitch499_g174694 * staticSwitch1_g174714 * (_DrynessColor).rgb ) , Dryness_Mask329_g174694);
				#ifdef TVE_DRYNESS
				float3 staticSwitch356_g174694 = lerpResult336_g174694;
				#else
				float3 staticSwitch356_g174694 = Visual_Albedo292_g174694;
				#endif
				half3 Final_Albedo331_g174694 = staticSwitch356_g174694;
				float3 In_Albedo3_g174697 = Final_Albedo331_g174694;
				float3 In_AlbedoRaw3_g174697 = Out_AlbedoRaw4_g174696;
				float2 In_NormalTS3_g174697 = Out_NormalTS4_g174696;
				float3 In_NormalWS3_g174697 = Out_NormalWS4_g174696;
				half4 Visual_Shader415_g174694 = Out_Shader4_g174696;
				float4 break438_g174694 = Visual_Shader415_g174694;
				float4 appendResult439_g174694 = (float4(break438_g174694.x , break438_g174694.y , break438_g174694.z , ( break438_g174694.w * _DrynessSmoothnessValue )));
				float4 lerpResult427_g174694 = lerp( Visual_Shader415_g174694 , appendResult439_g174694 , Dryness_Mask329_g174694);
				#ifdef TVE_DRYNESS
				float4 staticSwitch426_g174694 = lerpResult427_g174694;
				#else
				float4 staticSwitch426_g174694 = Visual_Shader415_g174694;
				#endif
				half4 Final_Shader433_g174694 = staticSwitch426_g174694;
				float4 In_Shader3_g174697 = Final_Shader433_g174694;
				float4 In_Emissive3_g174697 = Out_Emissive4_g174696;
				float In_Grayscale3_g174697 = temp_output_280_12_g174694;
				float In_Luminosity3_g174697 = temp_output_280_15_g174694;
				float In_MultiMask3_g174697 = temp_output_280_11_g174694;
				float In_AlphaClip3_g174697 = Out_AlphaClip4_g174696;
				float In_AlphaFade3_g174697 = Out_AlphaFade4_g174696;
				float3 In_Translucency3_g174697 = Out_Translucency4_g174696;
				half Visual_Transmission416_g174694 = Out_Transmission4_g174696;
				float lerpResult421_g174694 = lerp( Visual_Transmission416_g174694 , ( Visual_Transmission416_g174694 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g174694);
				#ifdef TVE_DRYNESS
				float staticSwitch418_g174694 = lerpResult421_g174694;
				#else
				float staticSwitch418_g174694 = Visual_Transmission416_g174694;
				#endif
				half Final_Transmission425_g174694 = staticSwitch418_g174694;
				float In_Transmission3_g174697 = Final_Transmission425_g174694;
				float In_Thickness3_g174697 = Out_Thickness4_g174696;
				float In_Diffusion3_g174697 = Out_Diffusion4_g174696;
				Data3_g174697.Dummy = In_Dummy3_g174697;
				Data3_g174697.Albedo = In_Albedo3_g174697;
				Data3_g174697.AlbedoRaw = In_AlbedoRaw3_g174697;
				Data3_g174697.NormalTS = In_NormalTS3_g174697;
				Data3_g174697.NormalWS = In_NormalWS3_g174697;
				Data3_g174697.Shader = In_Shader3_g174697;
				Data3_g174697.Emissive= In_Emissive3_g174697;
				Data3_g174697.MultiMask = In_MultiMask3_g174697;
				Data3_g174697.Grayscale = In_Grayscale3_g174697;
				Data3_g174697.Luminosity = In_Luminosity3_g174697;
				Data3_g174697.AlphaClip = In_AlphaClip3_g174697;
				Data3_g174697.AlphaFade = In_AlphaFade3_g174697;
				Data3_g174697.Translucency = In_Translucency3_g174697;
				Data3_g174697.Transmission = In_Transmission3_g174697;
				Data3_g174697.Thickness = In_Thickness3_g174697;
				Data3_g174697.Diffusion = In_Diffusion3_g174697;
				TVEVisualData Data4_g174718 = Data3_g174697;
				float Out_Dummy4_g174718 = 0;
				float3 Out_Albedo4_g174718 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174718 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174718 = float2( 0,0 );
				float3 Out_NormalWS4_g174718 = float3( 0,0,0 );
				float4 Out_Shader4_g174718 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174718 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174718 = 0;
				float Out_Grayscale4_g174718 = 0;
				float Out_Luminosity4_g174718 = 0;
				float Out_AlphaClip4_g174718 = 0;
				float Out_AlphaFade4_g174718 = 0;
				float3 Out_Translucency4_g174718 = float3( 0,0,0 );
				float Out_Transmission4_g174718 = 0;
				float Out_Thickness4_g174718 = 0;
				float Out_Diffusion4_g174718 = 0;
				Out_Dummy4_g174718 = Data4_g174718.Dummy;
				Out_Albedo4_g174718 = Data4_g174718.Albedo;
				Out_AlbedoRaw4_g174718 = Data4_g174718.AlbedoRaw;
				Out_NormalTS4_g174718 = Data4_g174718.NormalTS;
				Out_NormalWS4_g174718 = Data4_g174718.NormalWS;
				Out_Shader4_g174718 = Data4_g174718.Shader;
				Out_Emissive4_g174718= Data4_g174718.Emissive;
				Out_MultiMask4_g174718 = Data4_g174718.MultiMask;
				Out_Grayscale4_g174718 = Data4_g174718.Grayscale;
				Out_Luminosity4_g174718= Data4_g174718.Luminosity;
				Out_AlphaClip4_g174718 = Data4_g174718.AlphaClip;
				Out_AlphaFade4_g174718 = Data4_g174718.AlphaFade;
				Out_Translucency4_g174718 = Data4_g174718.Translucency;
				Out_Transmission4_g174718 = Data4_g174718.Transmission;
				Out_Thickness4_g174718 = Data4_g174718.Thickness;
				Out_Diffusion4_g174718 = Data4_g174718.Diffusion;
				half3 Visual_Albedo127_g174717 = Out_Albedo4_g174718;
				float4 vertexToFrag24_g174669 = IN.ase_texcoord10;
				half4 Interp_Data1003 = vertexToFrag24_g174669;
				float clampResult208_g174717 = clamp( (Interp_Data1003).w , 0.0 , 0.09 );
				#ifdef TVE_MOTION_HIGHLIGHT
				float3 staticSwitch214_g174717 = ( Visual_Albedo127_g174717 + ( ( Visual_Albedo127_g174717 * Visual_Albedo127_g174717 * 200.0 * _motion_highlight_color ) * clampResult208_g174717 ) );
				#else
				float3 staticSwitch214_g174717 = Visual_Albedo127_g174717;
				#endif
				half3 Final_Albedo160_g174717 = staticSwitch214_g174717;
				float3 In_Albedo3_g174719 = Final_Albedo160_g174717;
				float3 In_AlbedoRaw3_g174719 = Out_AlbedoRaw4_g174718;
				float2 In_NormalTS3_g174719 = Out_NormalTS4_g174718;
				float3 In_NormalWS3_g174719 = Out_NormalWS4_g174718;
				float4 In_Shader3_g174719 = Out_Shader4_g174718;
				float4 In_Emissive3_g174719 = Out_Emissive4_g174718;
				float In_Grayscale3_g174719 = Out_Grayscale4_g174718;
				float In_Luminosity3_g174719 = Out_Luminosity4_g174718;
				float In_MultiMask3_g174719 = Out_MultiMask4_g174718;
				float In_AlphaClip3_g174719 = Out_AlphaClip4_g174718;
				float In_AlphaFade3_g174719 = Out_AlphaFade4_g174718;
				float3 In_Translucency3_g174719 = Out_Translucency4_g174718;
				float In_Transmission3_g174719 = Out_Transmission4_g174718;
				float In_Thickness3_g174719 = Out_Thickness4_g174718;
				float In_Diffusion3_g174719 = Out_Diffusion4_g174718;
				Data3_g174719.Dummy = In_Dummy3_g174719;
				Data3_g174719.Albedo = In_Albedo3_g174719;
				Data3_g174719.AlbedoRaw = In_AlbedoRaw3_g174719;
				Data3_g174719.NormalTS = In_NormalTS3_g174719;
				Data3_g174719.NormalWS = In_NormalWS3_g174719;
				Data3_g174719.Shader = In_Shader3_g174719;
				Data3_g174719.Emissive= In_Emissive3_g174719;
				Data3_g174719.MultiMask = In_MultiMask3_g174719;
				Data3_g174719.Grayscale = In_Grayscale3_g174719;
				Data3_g174719.Luminosity = In_Luminosity3_g174719;
				Data3_g174719.AlphaClip = In_AlphaClip3_g174719;
				Data3_g174719.AlphaFade = In_AlphaFade3_g174719;
				Data3_g174719.Translucency = In_Translucency3_g174719;
				Data3_g174719.Transmission = In_Transmission3_g174719;
				Data3_g174719.Thickness = In_Thickness3_g174719;
				Data3_g174719.Diffusion = In_Diffusion3_g174719;
				TVEVisualData Data4_g174721 = Data3_g174719;
				float Out_Dummy4_g174721 = 0;
				float3 Out_Albedo4_g174721 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174721 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174721 = float2( 0,0 );
				float3 Out_NormalWS4_g174721 = float3( 0,0,0 );
				float4 Out_Shader4_g174721 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174721 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174721 = 0;
				float Out_Grayscale4_g174721 = 0;
				float Out_Luminosity4_g174721 = 0;
				float Out_AlphaClip4_g174721 = 0;
				float Out_AlphaFade4_g174721 = 0;
				float3 Out_Translucency4_g174721 = float3( 0,0,0 );
				float Out_Transmission4_g174721 = 0;
				float Out_Thickness4_g174721 = 0;
				float Out_Diffusion4_g174721 = 0;
				Out_Dummy4_g174721 = Data4_g174721.Dummy;
				Out_Albedo4_g174721 = Data4_g174721.Albedo;
				Out_AlbedoRaw4_g174721 = Data4_g174721.AlbedoRaw;
				Out_NormalTS4_g174721 = Data4_g174721.NormalTS;
				Out_NormalWS4_g174721 = Data4_g174721.NormalWS;
				Out_Shader4_g174721 = Data4_g174721.Shader;
				Out_Emissive4_g174721= Data4_g174721.Emissive;
				Out_MultiMask4_g174721 = Data4_g174721.MultiMask;
				Out_Grayscale4_g174721 = Data4_g174721.Grayscale;
				Out_Luminosity4_g174721= Data4_g174721.Luminosity;
				Out_AlphaClip4_g174721 = Data4_g174721.AlphaClip;
				Out_AlphaFade4_g174721 = Data4_g174721.AlphaFade;
				Out_Translucency4_g174721 = Data4_g174721.Translucency;
				Out_Transmission4_g174721 = Data4_g174721.Transmission;
				Out_Thickness4_g174721 = Data4_g174721.Thickness;
				Out_Diffusion4_g174721 = Data4_g174721.Diffusion;
				half3 Visual_Albedo127_g174720 = Out_Albedo4_g174721;
				float3 temp_output_622_0_g174720 = (_OverlayColor).rgb;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174724) = _OverlayAlbedoTex;
				float localFilterTexture19_g174753 = ( 0.0 );
				SamplerState SamplerDefault19_g174753 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g174753 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g174753 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g174753 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g174753 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g174753 = SamplerDefault19_g174753;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g174753 = SamplerDefault19_g174753;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g174753 = SamplerPoint19_g174753;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g174753 = SamplerLow19_g174753;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g174753 = SamplerMedium19_g174753;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g174753 = SamplerHigh19_g174753;
				#endif
				SamplerState Sampler238_g174724 = SS19_g174753;
				float4 temp_output_6_0_g174725 = _overlay_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174725 = ( temp_output_6_0_g174725 + ( ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174725 = temp_output_6_0_g174725;
				#endif
				half4 Overlay_Coords639_g174720 = staticSwitch14_g174725;
				float4 temp_output_37_0_g174724 = Overlay_Coords639_g174720;
				half4 Coords238_g174724 = temp_output_37_0_g174724;
				TVEModelData Data15_g174755 = Data16_g164566;
				float Out_Dummy15_g174755 = 0;
				float3 Out_PositionWS15_g174755 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174755 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174755 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174755 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174755 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174755 = float3( 0,0,0 );
				float4 Out_VertexData15_g174755 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174755 = float4( 0,0,0,0 );
				Out_Dummy15_g174755 = Data15_g174755.Dummy;
				Out_PositionWS15_g174755 = Data15_g174755.PositionWS;
				Out_PositionWO15_g174755 = Data15_g174755.PositionWO;
				Out_PivotWS15_g174755 = Data15_g174755.PivotWS;
				Out_PivotWO15_g174755 = Data15_g174755.PivotWO;
				Out_NormalWS15_g174755 = Data15_g174755.NormalWS;
				Out_ViewDirWS15_g174755 = Data15_g174755.ViewDirWS;
				Out_VertexData15_g174755 = Data15_g174755.VertexData;
				Out_BoundsData15_g174755 = Data15_g174755.BoundsData;
				half3 Model_PositionWO602_g174720 = Out_PositionWO15_g174755;
				float3 temp_output_279_0_g174724 = Model_PositionWO602_g174720;
				half3 WorldPosition238_g174724 = temp_output_279_0_g174724;
				half4 localSamplePlanar2D238_g174724 = SamplePlanar2D( Texture238_g174724 , Sampler238_g174724 , Coords238_g174724 , WorldPosition238_g174724 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174724) = _OverlayAlbedoTex;
				SamplerState Sampler246_g174724 = SS19_g174753;
				half4 Coords246_g174724 = temp_output_37_0_g174724;
				half3 WorldPosition246_g174724 = temp_output_279_0_g174724;
				half3 Model_NormalWS712_g174720 = Out_NormalWS15_g174755;
				float3 temp_output_280_0_g174724 = Model_NormalWS712_g174720;
				half3 WorldNormal246_g174724 = temp_output_280_0_g174724;
				half4 localSamplePlanar3D246_g174724 = SamplePlanar3D( Texture246_g174724 , Sampler246_g174724 , Coords246_g174724 , WorldPosition246_g174724 , WorldNormal246_g174724 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174724) = _OverlayAlbedoTex;
				SamplerState Sampler234_g174724 = SS19_g174753;
				float4 Coords234_g174724 = temp_output_37_0_g174724;
				float3 WorldPosition234_g174724 = temp_output_279_0_g174724;
				float4 localSampleStochastic2D234_g174724 = SampleStochastic2D( Texture234_g174724 , Sampler234_g174724 , Coords234_g174724 , WorldPosition234_g174724 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174724) = _OverlayAlbedoTex;
				SamplerState Sampler263_g174724 = SS19_g174753;
				half4 Coords263_g174724 = temp_output_37_0_g174724;
				half3 WorldPosition263_g174724 = temp_output_279_0_g174724;
				half3 WorldNormal263_g174724 = temp_output_280_0_g174724;
				half4 localSampleStochastic3D263_g174724 = SampleStochastic3D( Texture263_g174724 , Sampler263_g174724 , Coords263_g174724 , WorldPosition263_g174724 , WorldNormal263_g174724 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch676_g174720 = localSamplePlanar2D238_g174724;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch676_g174720 = localSamplePlanar3D246_g174724;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch676_g174720 = localSampleStochastic2D234_g174724;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch676_g174720 = localSampleStochastic3D263_g174724;
				#else
				float4 staticSwitch676_g174720 = localSamplePlanar2D238_g174724;
				#endif
				half3 Overlay_Albedo526_g174720 = (staticSwitch676_g174720).xyz;
				#ifdef TVE_OVERLAY_TEX
				float3 staticSwitch578_g174720 = ( temp_output_622_0_g174720 * Overlay_Albedo526_g174720 );
				#else
				float3 staticSwitch578_g174720 = temp_output_622_0_g174720;
				#endif
				float3 temp_output_6_0_g174731 = staticSwitch578_g174720;
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g174731 = ( temp_output_6_0_g174731 + ( _OverlayTextureMode * 0.0 ) );
				#else
				float3 staticSwitch14_g174731 = temp_output_6_0_g174731;
				#endif
				float3 temp_cast_49 = (0.0).xxx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174728) = _OverlayGlitterTexRT;
				SamplerState Sampler246_g174728 = sampler_Linear_Repeat;
				float4 appendResult863_g174720 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g174728 = appendResult863_g174720;
				half4 Coords246_g174728 = temp_output_37_0_g174728;
				float3 temp_output_279_0_g174728 = Model_PositionWO602_g174720;
				half3 WorldPosition246_g174728 = temp_output_279_0_g174728;
				float3 temp_output_280_0_g174728 = Model_NormalWS712_g174720;
				half3 WorldNormal246_g174728 = temp_output_280_0_g174728;
				half4 localSamplePlanar3D246_g174728 = SamplePlanar3D( Texture246_g174728 , Sampler246_g174728 , Coords246_g174728 , WorldPosition246_g174728 , WorldNormal246_g174728 );
				half Overlay_GlitterTex854_g174720 = (localSamplePlanar3D246_g174728).x;
				half3 Model_PositionWS879_g174720 = Out_PositionWS15_g174755;
				#ifdef TVE_OVERLAY_GLITTER
				float3 staticSwitch868_g174720 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g174720 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g174720 ) / _OverlayGlitterDistValue ) ) ) );
				#else
				float3 staticSwitch868_g174720 = temp_cast_49;
				#endif
				half3 Overlay_GlitterColor865_g174720 = staticSwitch868_g174720;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174745) = _OverlayMaskTex;
				SamplerState Sampler276_g174745 = sampler_Linear_Repeat;
				float4 temp_output_6_0_g174746 = _overlay_mask_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174746 = ( temp_output_6_0_g174746 + ( ( _OverlayMaskSampleMode + _OverlayMaskCoordMode + _OverlayMaskCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174746 = temp_output_6_0_g174746;
				#endif
				half4 Local_MaskCoords888_g174720 = staticSwitch14_g174746;
				float4 temp_output_37_0_g174745 = Local_MaskCoords888_g174720;
				half4 Coords276_g174745 = temp_output_37_0_g174745;
				half2 TexCoord276_g174745 = IN.ase_texcoord2.xy;
				half4 localSampleMain276_g174745 = SampleMain( Texture276_g174745 , Sampler276_g174745 , Coords276_g174745 , TexCoord276_g174745 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174745) = _OverlayMaskTex;
				SamplerState Sampler275_g174745 = sampler_Linear_Repeat;
				half4 Coords275_g174745 = temp_output_37_0_g174745;
				half2 TexCoord275_g174745 = IN.ase_texcoord3.xy;
				half4 localSampleExtra275_g174745 = SampleExtra( Texture275_g174745 , Sampler275_g174745 , Coords275_g174745 , TexCoord275_g174745 );
				#if defined( TVE_OVERLAY_MASK_SAMPLE_MAIN_UV )
				float4 staticSwitch894_g174720 = localSampleMain276_g174745;
				#elif defined( TVE_OVERLAY_MASK_SAMPLE_EXTRA_UV )
				float4 staticSwitch894_g174720 = localSampleExtra275_g174745;
				#else
				float4 staticSwitch894_g174720 = localSampleMain276_g174745;
				#endif
				half4 Local_MaskTex887_g174720 = staticSwitch894_g174720;
				float clampResult17_g174747 = clamp( (Local_MaskTex887_g174720).z , 0.0001 , 0.9999 );
				float temp_output_7_0_g174748 = _OverlayMaskRemap.x;
				float temp_output_10_0_g174748 = ( _OverlayMaskRemap.y - temp_output_7_0_g174748 );
				float lerpResult900_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174747 - temp_output_7_0_g174748 ) / ( temp_output_10_0_g174748 + 0.0001 ) ) ) , _OverlayMaskValue);
				half Overlay_TexMask908_g174720 = lerpResult900_g174720;
				float3 temp_output_739_21_g174720 = Out_NormalWS4_g174721;
				half3 Visual_NormalWS749_g174720 = temp_output_739_21_g174720;
				float clampResult17_g174741 = clamp( saturate( (Visual_NormalWS749_g174720).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174740 = _OverlayProjRemap.x;
				float temp_output_10_0_g174740 = ( _OverlayProjRemap.y - temp_output_7_0_g174740 );
				float lerpResult842_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174741 - temp_output_7_0_g174740 ) / ( temp_output_10_0_g174740 + 0.0001 ) ) ) , _OverlayProjValue);
				half Overlay_MaskProj457_g174720 = lerpResult842_g174720;
				float temp_output_739_15_g174720 = Out_Luminosity4_g174721;
				half Visual_Luminosity654_g174720 = temp_output_739_15_g174720;
				float clampResult17_g174743 = clamp( Visual_Luminosity654_g174720 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174742 = _OverlayLumaRemap.x;
				float temp_output_10_0_g174742 = ( _OverlayLumaRemap.y - temp_output_7_0_g174742 );
				float lerpResult587_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174743 - temp_output_7_0_g174742 ) / ( temp_output_10_0_g174742 + 0.0001 ) ) ) , _OverlayLumaValue);
				half Overlay_MaskLuma438_g174720 = lerpResult587_g174720;
				half4 Model_VertexMasks791_g174720 = Out_VertexData15_g174755;
				float4 break792_g174720 = Model_VertexMasks791_g174720;
				float4 break33_g174733 = _overlay_vert_mode;
				float temp_output_30_0_g174733 = ( break792_g174720.x * break33_g174733.x );
				float temp_output_29_0_g174733 = ( break792_g174720.y * break33_g174733.y );
				float temp_output_31_0_g174733 = ( break792_g174720.z * break33_g174733.z );
				float temp_output_28_0_g174733 = ( temp_output_30_0_g174733 + temp_output_29_0_g174733 + temp_output_31_0_g174733 + ( break792_g174720.w * break33_g174733.w ) );
				float clampResult17_g174734 = clamp( temp_output_28_0_g174733 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174737 = _OverlayMeshRemap.x;
				float temp_output_10_0_g174737 = ( _OverlayMeshRemap.y - temp_output_7_0_g174737 );
				float lerpResult881_g174720 = lerp( 1.0 , saturate( ( ( clampResult17_g174734 - temp_output_7_0_g174737 ) / ( temp_output_10_0_g174737 + 0.0001 ) ) ) , _OverlayMeshValue);
				float temp_output_6_0_g174744 = lerpResult881_g174720;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174744 = ( temp_output_6_0_g174744 + ( _OverlayMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174744 = temp_output_6_0_g174744;
				#endif
				float temp_output_831_0_g174720 = staticSwitch14_g174744;
				half Overlay_VertMask801_g174720 = temp_output_831_0_g174720;
				half Overlay_MaskNoise427_g174720 = 1.0;
				TVEGlobalData Data15_g174722 = Data204_g173897;
				float Out_Dummy15_g174722 = 0;
				float4 Out_CoatParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174722 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174722 = float4( 0,0,0,0 );
				Out_Dummy15_g174722 = Data15_g174722.Dummy;
				Out_CoatParams15_g174722 = Data15_g174722.CoatParams;
				Out_PaintParams15_g174722 = Data15_g174722.PaintParams;
				Out_GlowParams15_g174722 = Data15_g174722.GlowParams;
				Out_AtmoParams15_g174722= Data15_g174722.AtmoParams;
				Out_FadeParams15_g174722= Data15_g174722.FadeParams;
				Out_FormParams15_g174722 = Data15_g174722.FormParams;
				Out_LandParams15_g174722 = Data15_g174722.LandParams;
				Out_WindParams15_g174722 = Data15_g174722.WindParams;
				Out_PushParams15_g174722 = Data15_g174722.PushParams;
				half4 Global_AtmoParams516_g174720 = Out_AtmoParams15_g174722;
				#ifdef TVE_OVERLAY_ELEMENT
				float staticSwitch705_g174720 = ( (Global_AtmoParams516_g174720).z * TVE_IsEnabled );
				#else
				float staticSwitch705_g174720 = 1.0;
				#endif
				half Overlay_MaskGlobal429_g174720 = staticSwitch705_g174720;
				half Custom_Mask646_g174720 = 1.0;
				float temp_output_7_0_g174749 = _OverlayBlendRemap1.x;
				float temp_output_10_0_g174749 = ( _OverlayBlendRemap1.y - temp_output_7_0_g174749 );
				half Overlay_Mask494_g174720 = saturate( ( ( ( _OverlayIntensityValue * Overlay_TexMask908_g174720 * Overlay_MaskProj457_g174720 * Overlay_MaskLuma438_g174720 * Overlay_VertMask801_g174720 * Overlay_MaskNoise427_g174720 * Overlay_MaskGlobal429_g174720 * Custom_Mask646_g174720 ) - temp_output_7_0_g174749 ) / ( temp_output_10_0_g174749 + 0.0001 ) ) );
				float3 lerpResult467_g174720 = lerp( Visual_Albedo127_g174720 , ( staticSwitch14_g174731 + Overlay_GlitterColor865_g174720 ) , Overlay_Mask494_g174720);
				#ifdef TVE_OVERLAY
				float3 staticSwitch577_g174720 = lerpResult467_g174720;
				#else
				float3 staticSwitch577_g174720 = Visual_Albedo127_g174720;
				#endif
				half3 Final_Albedo493_g174720 = staticSwitch577_g174720;
				float3 In_Albedo3_g174723 = Final_Albedo493_g174720;
				float3 In_AlbedoRaw3_g174723 = Out_AlbedoRaw4_g174721;
				half2 Visual_NormalTS535_g174720 = Out_NormalTS4_g174721;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174726) = _OverlayNormalTex;
				float localFilterTexture29_g174754 = ( 0.0 );
				SamplerState SamplerDefault29_g174754 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g174754 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g174754 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g174754 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g174754 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g174754 = SamplerDefault29_g174754;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g174754 = SamplerDefault29_g174754;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g174754 = SamplerPoint29_g174754;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g174754 = SamplerLow29_g174754;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g174754 = SamplerMedium29_g174754;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g174754 = SamplerHigh29_g174754;
				#endif
				SamplerState Sampler238_g174726 = SS29_g174754;
				float4 temp_output_37_0_g174726 = Overlay_Coords639_g174720;
				half4 Coords238_g174726 = temp_output_37_0_g174726;
				float3 temp_output_279_0_g174726 = Model_PositionWO602_g174720;
				half3 WorldPosition238_g174726 = temp_output_279_0_g174726;
				half4 localSamplePlanar2D238_g174726 = SamplePlanar2D( Texture238_g174726 , Sampler238_g174726 , Coords238_g174726 , WorldPosition238_g174726 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g174726) = _OverlayNormalTex;
				SamplerState Sampler246_g174726 = SS29_g174754;
				half4 Coords246_g174726 = temp_output_37_0_g174726;
				half3 WorldPosition246_g174726 = temp_output_279_0_g174726;
				float3 temp_output_280_0_g174726 = Model_NormalWS712_g174720;
				half3 WorldNormal246_g174726 = temp_output_280_0_g174726;
				half4 localSamplePlanar3D246_g174726 = SamplePlanar3D( Texture246_g174726 , Sampler246_g174726 , Coords246_g174726 , WorldPosition246_g174726 , WorldNormal246_g174726 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g174726) = _OverlayNormalTex;
				SamplerState Sampler234_g174726 = SS29_g174754;
				float4 Coords234_g174726 = temp_output_37_0_g174726;
				float3 WorldPosition234_g174726 = temp_output_279_0_g174726;
				float4 localSampleStochastic2D234_g174726 = SampleStochastic2D( Texture234_g174726 , Sampler234_g174726 , Coords234_g174726 , WorldPosition234_g174726 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g174726) = _OverlayNormalTex;
				SamplerState Sampler263_g174726 = SS29_g174754;
				half4 Coords263_g174726 = temp_output_37_0_g174726;
				half3 WorldPosition263_g174726 = temp_output_279_0_g174726;
				half3 WorldNormal263_g174726 = temp_output_280_0_g174726;
				half4 localSampleStochastic3D263_g174726 = SampleStochastic3D( Texture263_g174726 , Sampler263_g174726 , Coords263_g174726 , WorldPosition263_g174726 , WorldNormal263_g174726 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch686_g174720 = localSamplePlanar2D238_g174726;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch686_g174720 = localSamplePlanar3D246_g174726;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch686_g174720 = localSampleStochastic2D234_g174726;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch686_g174720 = localSampleStochastic3D263_g174726;
				#else
				float4 staticSwitch686_g174720 = localSamplePlanar2D238_g174726;
				#endif
				half4 Normal_Packed45_g174730 = staticSwitch686_g174720;
				float2 appendResult58_g174730 = (float2(( (Normal_Packed45_g174730).x * (Normal_Packed45_g174730).w ) , (Normal_Packed45_g174730).y));
				half2 Normal_Default50_g174730 = appendResult58_g174730;
				half2 Normal_ASTC41_g174730 = (Normal_Packed45_g174730).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g174730 = Normal_ASTC41_g174730;
				#else
				float2 staticSwitch38_g174730 = Normal_Default50_g174730;
				#endif
				half2 Normal_NO_DTX544_g174730 = (Normal_Packed45_g174730).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g174730 = Normal_NO_DTX544_g174730;
				#else
				float2 staticSwitch37_g174730 = staticSwitch38_g174730;
				#endif
				half2 Normal_Planar45_g174729 = (staticSwitch37_g174730*2.0 + -1.0);
				float2 break71_g174729 = Normal_Planar45_g174729;
				float3 appendResult72_g174729 = (float3(break71_g174729.x , 0.0 , break71_g174729.y));
				half2 Overlay_Normal528_g174720 = (mul( ase_worldToTangent, appendResult72_g174729 )).xy;
				#ifdef TVE_OVERLAY_TEX
				float2 staticSwitch579_g174720 = Overlay_Normal528_g174720;
				#else
				float2 staticSwitch579_g174720 = Visual_NormalTS535_g174720;
				#endif
				float2 lerpResult551_g174720 = lerp( Visual_NormalTS535_g174720 , ( staticSwitch579_g174720 * _OverlayNormalValue ) , Overlay_Mask494_g174720);
				#ifdef TVE_OVERLAY
				float2 staticSwitch583_g174720 = lerpResult551_g174720;
				#else
				float2 staticSwitch583_g174720 = Visual_NormalTS535_g174720;
				#endif
				half2 Final_NormalTS499_g174720 = staticSwitch583_g174720;
				float2 In_NormalTS3_g174723 = Final_NormalTS499_g174720;
				float3 In_NormalWS3_g174723 = temp_output_739_21_g174720;
				half4 Visual_Masks536_g174720 = Out_Shader4_g174721;
				float4 appendResult585_g174720 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
				float4 lerpResult584_g174720 = lerp( Visual_Masks536_g174720 , appendResult585_g174720 , Overlay_Mask494_g174720);
				#ifdef TVE_OVERLAY
				float4 staticSwitch586_g174720 = lerpResult584_g174720;
				#else
				float4 staticSwitch586_g174720 = Visual_Masks536_g174720;
				#endif
				half4 Final_Masks482_g174720 = staticSwitch586_g174720;
				float4 In_Shader3_g174723 = Final_Masks482_g174720;
				float4 In_Emissive3_g174723 = Out_Emissive4_g174721;
				float temp_output_739_12_g174720 = Out_Grayscale4_g174721;
				float In_Grayscale3_g174723 = temp_output_739_12_g174720;
				float In_Luminosity3_g174723 = temp_output_739_15_g174720;
				float In_MultiMask3_g174723 = Out_MultiMask4_g174721;
				float In_AlphaClip3_g174723 = Out_AlphaClip4_g174721;
				float In_AlphaFade3_g174723 = Out_AlphaFade4_g174721;
				float3 In_Translucency3_g174723 = Out_Translucency4_g174721;
				half Visual_Transmission699_g174720 = Out_Transmission4_g174721;
				float lerpResult746_g174720 = lerp( Visual_Transmission699_g174720 , ( Visual_Transmission699_g174720 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g174720 * Overlay_MaskNoise427_g174720 * Overlay_MaskGlobal429_g174720 ));
				#ifdef TVE_OVERLAY
				float staticSwitch703_g174720 = lerpResult746_g174720;
				#else
				float staticSwitch703_g174720 = Visual_Transmission699_g174720;
				#endif
				half Final_Transmission702_g174720 = staticSwitch703_g174720;
				float In_Transmission3_g174723 = Final_Transmission702_g174720;
				float In_Thickness3_g174723 = Out_Thickness4_g174721;
				float In_Diffusion3_g174723 = Out_Diffusion4_g174721;
				Data3_g174723.Dummy = In_Dummy3_g174723;
				Data3_g174723.Albedo = In_Albedo3_g174723;
				Data3_g174723.AlbedoRaw = In_AlbedoRaw3_g174723;
				Data3_g174723.NormalTS = In_NormalTS3_g174723;
				Data3_g174723.NormalWS = In_NormalWS3_g174723;
				Data3_g174723.Shader = In_Shader3_g174723;
				Data3_g174723.Emissive= In_Emissive3_g174723;
				Data3_g174723.MultiMask = In_MultiMask3_g174723;
				Data3_g174723.Grayscale = In_Grayscale3_g174723;
				Data3_g174723.Luminosity = In_Luminosity3_g174723;
				Data3_g174723.AlphaClip = In_AlphaClip3_g174723;
				Data3_g174723.AlphaFade = In_AlphaFade3_g174723;
				Data3_g174723.Translucency = In_Translucency3_g174723;
				Data3_g174723.Transmission = In_Transmission3_g174723;
				Data3_g174723.Thickness = In_Thickness3_g174723;
				Data3_g174723.Diffusion = In_Diffusion3_g174723;
				TVEVisualData Data4_g174757 = Data3_g174723;
				float Out_Dummy4_g174757 = 0;
				float3 Out_Albedo4_g174757 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174757 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174757 = float2( 0,0 );
				float3 Out_NormalWS4_g174757 = float3( 0,0,0 );
				float4 Out_Shader4_g174757 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174757 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174757 = 0;
				float Out_Grayscale4_g174757 = 0;
				float Out_Luminosity4_g174757 = 0;
				float Out_AlphaClip4_g174757 = 0;
				float Out_AlphaFade4_g174757 = 0;
				float3 Out_Translucency4_g174757 = float3( 0,0,0 );
				float Out_Transmission4_g174757 = 0;
				float Out_Thickness4_g174757 = 0;
				float Out_Diffusion4_g174757 = 0;
				Out_Dummy4_g174757 = Data4_g174757.Dummy;
				Out_Albedo4_g174757 = Data4_g174757.Albedo;
				Out_AlbedoRaw4_g174757 = Data4_g174757.AlbedoRaw;
				Out_NormalTS4_g174757 = Data4_g174757.NormalTS;
				Out_NormalWS4_g174757 = Data4_g174757.NormalWS;
				Out_Shader4_g174757 = Data4_g174757.Shader;
				Out_Emissive4_g174757= Data4_g174757.Emissive;
				Out_MultiMask4_g174757 = Data4_g174757.MultiMask;
				Out_Grayscale4_g174757 = Data4_g174757.Grayscale;
				Out_Luminosity4_g174757= Data4_g174757.Luminosity;
				Out_AlphaClip4_g174757 = Data4_g174757.AlphaClip;
				Out_AlphaFade4_g174757 = Data4_g174757.AlphaFade;
				Out_Translucency4_g174757 = Data4_g174757.Translucency;
				Out_Transmission4_g174757 = Data4_g174757.Transmission;
				Out_Thickness4_g174757 = Data4_g174757.Thickness;
				Out_Diffusion4_g174757 = Data4_g174757.Diffusion;
				half3 Visual_Albedo127_g174756 = Out_Albedo4_g174757;
				TVEGlobalData Data15_g174762 = Data204_g173897;
				float Out_Dummy15_g174762 = 0;
				float4 Out_CoatParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174762 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174762 = float4( 0,0,0,0 );
				Out_Dummy15_g174762 = Data15_g174762.Dummy;
				Out_CoatParams15_g174762 = Data15_g174762.CoatParams;
				Out_PaintParams15_g174762 = Data15_g174762.PaintParams;
				Out_GlowParams15_g174762 = Data15_g174762.GlowParams;
				Out_AtmoParams15_g174762= Data15_g174762.AtmoParams;
				Out_FadeParams15_g174762= Data15_g174762.FadeParams;
				Out_FormParams15_g174762 = Data15_g174762.FormParams;
				Out_LandParams15_g174762 = Data15_g174762.LandParams;
				Out_WindParams15_g174762 = Data15_g174762.WindParams;
				Out_PushParams15_g174762 = Data15_g174762.PushParams;
				half4 Global_AtmoParams516_g174756 = Out_AtmoParams15_g174762;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch663_g174756 = ( (Global_AtmoParams516_g174756).y * TVE_IsEnabled );
				#else
				float staticSwitch663_g174756 = 1.0;
				#endif
				half Global_Wetness429_g174756 = staticSwitch663_g174756;
				half Wetness_Value1042_g174756 = ( _WetnessIntensityValue * Global_Wetness429_g174756 );
				TVEModelData Data15_g174770 = Data16_g164566;
				float Out_Dummy15_g174770 = 0;
				float3 Out_PositionWS15_g174770 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174770 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174770 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174770 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174770 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174770 = float3( 0,0,0 );
				float4 Out_VertexData15_g174770 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174770 = float4( 0,0,0,0 );
				Out_Dummy15_g174770 = Data15_g174770.Dummy;
				Out_PositionWS15_g174770 = Data15_g174770.PositionWS;
				Out_PositionWO15_g174770 = Data15_g174770.PositionWO;
				Out_PivotWS15_g174770 = Data15_g174770.PivotWS;
				Out_PivotWO15_g174770 = Data15_g174770.PivotWO;
				Out_NormalWS15_g174770 = Data15_g174770.NormalWS;
				Out_ViewDirWS15_g174770 = Data15_g174770.ViewDirWS;
				Out_VertexData15_g174770 = Data15_g174770.VertexData;
				Out_BoundsData15_g174770 = Data15_g174770.BoundsData;
				half4 Model_VertexData1030_g174756 = Out_VertexData15_g174770;
				float4 break1019_g174756 = Model_VertexData1030_g174756;
				float4 break33_g174775 = _wetness_vert_mode;
				float temp_output_30_0_g174775 = ( break1019_g174756.x * break33_g174775.x );
				float temp_output_29_0_g174775 = ( break1019_g174756.y * break33_g174775.y );
				float temp_output_31_0_g174775 = ( break1019_g174756.z * break33_g174775.z );
				float temp_output_28_0_g174775 = ( temp_output_30_0_g174775 + temp_output_29_0_g174775 + temp_output_31_0_g174775 + ( break1019_g174756.w * break33_g174775.w ) );
				float clampResult17_g174773 = clamp( temp_output_28_0_g174775 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174774 = _WetnessMeshRemap.x;
				float temp_output_10_0_g174774 = ( _WetnessMeshRemap.y - temp_output_7_0_g174774 );
				float lerpResult1026_g174756 = lerp( 1.0 , saturate( ( ( clampResult17_g174773 - temp_output_7_0_g174774 ) / ( temp_output_10_0_g174774 + 0.0001 ) ) ) , _WetnessMeshValue);
				float temp_output_6_0_g174776 = lerpResult1026_g174756;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174776 = ( temp_output_6_0_g174776 + ( _WetnessMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174776 = temp_output_6_0_g174776;
				#endif
				#ifdef TVE_WETNESS_VERT
				float staticSwitch1110_g174756 = staticSwitch14_g174776;
				#else
				float staticSwitch1110_g174756 = 1.0;
				#endif
				half Wetness_VertMask1024_g174756 = staticSwitch1110_g174756;
				float temp_output_1043_0_g174756 = ( Wetness_Value1042_g174756 * Wetness_VertMask1024_g174756 );
				half Wetness_Mask866_g174756 = temp_output_1043_0_g174756;
				float4 break1083_g174756 = Model_VertexData1030_g174756;
				float4 break33_g174779 = _wetness_water_vert_mode;
				float temp_output_30_0_g174779 = ( break1083_g174756.x * break33_g174779.x );
				float temp_output_29_0_g174779 = ( break1083_g174756.y * break33_g174779.y );
				float temp_output_31_0_g174779 = ( break1083_g174756.z * break33_g174779.z );
				float temp_output_28_0_g174779 = ( temp_output_30_0_g174779 + temp_output_29_0_g174779 + temp_output_31_0_g174779 + ( break1083_g174756.w * break33_g174779.w ) );
				float clampResult17_g174777 = clamp( temp_output_28_0_g174779 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174778 = _WetnessWaterMeshRemap.x;
				float temp_output_10_0_g174778 = ( _WetnessWaterMeshRemap.y - temp_output_7_0_g174778 );
				float lerpResult1089_g174756 = lerp( 1.0 , saturate( ( ( clampResult17_g174777 - temp_output_7_0_g174778 ) / ( temp_output_10_0_g174778 + 0.0001 ) ) ) , _WetnessWaterMeshValue);
				float temp_output_6_0_g174780 = lerpResult1089_g174756;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174780 = ( temp_output_6_0_g174780 + ( _WetnessWaterMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174780 = temp_output_6_0_g174780;
				#endif
				#ifdef TVE_WETNESS_VERT
				float staticSwitch1113_g174756 = staticSwitch14_g174780;
				#else
				float staticSwitch1113_g174756 = 1.0;
				#endif
				half Water_VertMask1094_g174756 = staticSwitch1113_g174756;
				half4 Visual_Masks536_g174756 = Out_Shader4_g174757;
				float lerpResult1013_g174756 = lerp( 1.0 , (Visual_Masks536_g174756).z , _WetnessWaterBaseValue);
				half Water_HeightMask782_g174756 = lerpResult1013_g174756;
				float clampResult17_g174771 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g174756 * Water_VertMask1094_g174756 ) - Water_HeightMask782_g174756 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g174772 = _WetnessWaterBlendRemap.x;
				float temp_output_10_0_g174772 = ( _WetnessWaterBlendRemap.y - temp_output_7_0_g174772 );
				half3 Model_NormalWS798_g174756 = Out_NormalWS15_g174770;
				float temp_output_786_0_g174756 = saturate( (Model_NormalWS798_g174756).y );
				half Wetness_ProjMask790_g174756 = temp_output_786_0_g174756;
				half Water_Mask760_g174756 = ( saturate( ( ( clampResult17_g174771 - temp_output_7_0_g174772 ) / ( temp_output_10_0_g174772 + 0.0001 ) ) ) * Wetness_ProjMask790_g174756 );
				float3 lerpResult918_g174756 = lerp( Visual_Albedo127_g174756 , ( Visual_Albedo127_g174756 * (_WetnessWaterColor).rgb ) , Water_Mask760_g174756);
				#ifdef TVE_WETNESS_WATER
				float3 staticSwitch946_g174756 = lerpResult918_g174756;
				#else
				float3 staticSwitch946_g174756 = Visual_Albedo127_g174756;
				#endif
				float3 lerpResult768_g174756 = lerp( staticSwitch946_g174756 , ( staticSwitch946_g174756 * staticSwitch946_g174756 ) , _WetnessContrastValue);
				float3 lerpResult651_g174756 = lerp( Visual_Albedo127_g174756 , lerpResult768_g174756 , Wetness_Mask866_g174756);
				#ifdef TVE_WETNESS
				float3 staticSwitch577_g174756 = lerpResult651_g174756;
				#else
				float3 staticSwitch577_g174756 = Visual_Albedo127_g174756;
				#endif
				half3 Final_Albedo493_g174756 = staticSwitch577_g174756;
				float3 In_Albedo3_g174758 = Final_Albedo493_g174756;
				float3 In_AlbedoRaw3_g174758 = Out_AlbedoRaw4_g174757;
				half2 Visual_Normal535_g174756 = Out_NormalTS4_g174757;
				float lerpResult877_g174756 = lerp( 1.0 , 0.0 , ( Water_Mask760_g174756 * Water_Mask760_g174756 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch957_g174756 = ( Visual_Normal535_g174756 * lerpResult877_g174756 );
				#else
				float2 staticSwitch957_g174756 = Visual_Normal535_g174756;
				#endif
				float2 temp_cast_50 = (0.0).xx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g174768) = _WetnessDropsTexRT;
				SamplerState Sampler238_g174768 = sampler_Linear_Repeat_Aniso8;
				float4 appendResult924_g174756 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g174768 = appendResult924_g174756;
				half4 Coords238_g174768 = temp_output_37_0_g174768;
				half3 Model_PositionWO602_g174756 = Out_PositionWO15_g174770;
				float3 temp_output_279_0_g174768 = Model_PositionWO602_g174756;
				half3 WorldPosition238_g174768 = temp_output_279_0_g174768;
				half4 localSamplePlanar2D238_g174768 = SamplePlanar2D( Texture238_g174768 , Sampler238_g174768 , Coords238_g174768 , WorldPosition238_g174768 );
				float4 temp_output_1010_0_g174756 = localSamplePlanar2D238_g174768;
				half2 Rain_DropsNormal919_g174756 = (temp_output_1010_0_g174756).zw;
				float2 temp_output_903_0_g174756 = (Rain_DropsNormal919_g174756*2.0 + -1.0);
				half2 Rain_RingsNormal713_g174756 = (temp_output_1010_0_g174756).xy;
				float2 lerpResult904_g174756 = lerp( temp_output_903_0_g174756 , (Rain_RingsNormal713_g174756*2.0 + -1.0) , ( Water_Mask760_g174756 * Water_Mask760_g174756 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch960_g174756 = lerpResult904_g174756;
				#else
				float2 staticSwitch960_g174756 = temp_output_903_0_g174756;
				#endif
				half2 Rain_Drops1002_g174756 = ( staticSwitch960_g174756 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
				half3 Model_PositionWS823_g174756 = Out_PositionWS15_g174770;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch949_g174756 = ( (Global_AtmoParams516_g174756).w * TVE_IsEnabled );
				#else
				float staticSwitch949_g174756 = 1.0;
				#endif
				half Global_Rain955_g174756 = staticSwitch949_g174756;
				half Rain_Value1067_g174756 = Global_Rain955_g174756;
				float4 break1097_g174756 = Model_VertexData1030_g174756;
				float4 break33_g174783 = _wetness_drops_vert_mode;
				float temp_output_30_0_g174783 = ( break1097_g174756.x * break33_g174783.x );
				float temp_output_29_0_g174783 = ( break1097_g174756.y * break33_g174783.y );
				float temp_output_31_0_g174783 = ( break1097_g174756.z * break33_g174783.z );
				float temp_output_28_0_g174783 = ( temp_output_30_0_g174783 + temp_output_29_0_g174783 + temp_output_31_0_g174783 + ( break1097_g174756.w * break33_g174783.w ) );
				float clampResult17_g174781 = clamp( temp_output_28_0_g174783 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174782 = _WetnessDropsMeshRemap.x;
				float temp_output_10_0_g174782 = ( _WetnessDropsMeshRemap.y - temp_output_7_0_g174782 );
				float lerpResult1100_g174756 = lerp( 1.0 , saturate( ( ( clampResult17_g174781 - temp_output_7_0_g174782 ) / ( temp_output_10_0_g174782 + 0.0001 ) ) ) , _WetnessDropsMeshValue);
				float temp_output_6_0_g174784 = lerpResult1100_g174756;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174784 = ( temp_output_6_0_g174784 + ( _WetnessDropsMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174784 = temp_output_6_0_g174784;
				#endif
				#ifdef TVE_WETNESS_VERT
				float staticSwitch1115_g174756 = staticSwitch14_g174784;
				#else
				float staticSwitch1115_g174756 = 1.0;
				#endif
				half Rain_VertMask1108_g174756 = staticSwitch1115_g174756;
				half Rain_Mask999_g174756 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g174756 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g174756 * Rain_VertMask1108_g174756 );
				half2 Normal_Planar45_g174767 = ( Rain_Drops1002_g174756 * Rain_Mask999_g174756 * Wetness_ProjMask790_g174756 );
				float2 break71_g174767 = Normal_Planar45_g174767;
				float3 appendResult72_g174767 = (float3(break71_g174767.x , 0.0 , break71_g174767.y));
				half2 Wetness_Normal526_g174756 = (mul( ase_worldToTangent, appendResult72_g174767 )).xy;
				#ifdef TVE_WETNESS_DROPS
				float2 staticSwitch583_g174756 = Wetness_Normal526_g174756;
				#else
				float2 staticSwitch583_g174756 = temp_cast_50;
				#endif
				#ifdef TVE_WETNESS
				float2 staticSwitch774_g174756 = ( staticSwitch957_g174756 + staticSwitch583_g174756 );
				#else
				float2 staticSwitch774_g174756 = Visual_Normal535_g174756;
				#endif
				half2 Final_Normal499_g174756 = staticSwitch774_g174756;
				float2 In_NormalTS3_g174758 = Final_Normal499_g174756;
				float3 In_NormalWS3_g174758 = Out_NormalWS4_g174757;
				float4 break658_g174756 = Visual_Masks536_g174756;
				float temp_output_935_0_g174756 = ( Wetness_Mask866_g174756 * _WetnessSmoothnessValue );
				float lerpResult941_g174756 = lerp( temp_output_935_0_g174756 , 2.0 , Water_Mask760_g174756);
				#ifdef TVE_WETNESS_WATER
				float staticSwitch959_g174756 = lerpResult941_g174756;
				#else
				float staticSwitch959_g174756 = temp_output_935_0_g174756;
				#endif
				float4 appendResult661_g174756 = (float4(break658_g174756.x , break658_g174756.y , break658_g174756.z , saturate( ( break658_g174756.w + staticSwitch959_g174756 ) )));
				#ifdef TVE_WETNESS
				float4 staticSwitch586_g174756 = appendResult661_g174756;
				#else
				float4 staticSwitch586_g174756 = Visual_Masks536_g174756;
				#endif
				half4 Final_Masks482_g174756 = staticSwitch586_g174756;
				float4 In_Shader3_g174758 = Final_Masks482_g174756;
				float4 In_Emissive3_g174758 = Out_Emissive4_g174757;
				float In_Grayscale3_g174758 = Out_Grayscale4_g174757;
				float In_Luminosity3_g174758 = Out_Luminosity4_g174757;
				float In_MultiMask3_g174758 = Out_MultiMask4_g174757;
				float In_AlphaClip3_g174758 = Out_AlphaClip4_g174757;
				float In_AlphaFade3_g174758 = Out_AlphaFade4_g174757;
				float3 In_Translucency3_g174758 = Out_Translucency4_g174757;
				float In_Transmission3_g174758 = Out_Transmission4_g174757;
				float In_Thickness3_g174758 = Out_Thickness4_g174757;
				float In_Diffusion3_g174758 = Out_Diffusion4_g174757;
				Data3_g174758.Dummy = In_Dummy3_g174758;
				Data3_g174758.Albedo = In_Albedo3_g174758;
				Data3_g174758.AlbedoRaw = In_AlbedoRaw3_g174758;
				Data3_g174758.NormalTS = In_NormalTS3_g174758;
				Data3_g174758.NormalWS = In_NormalWS3_g174758;
				Data3_g174758.Shader = In_Shader3_g174758;
				Data3_g174758.Emissive= In_Emissive3_g174758;
				Data3_g174758.MultiMask = In_MultiMask3_g174758;
				Data3_g174758.Grayscale = In_Grayscale3_g174758;
				Data3_g174758.Luminosity = In_Luminosity3_g174758;
				Data3_g174758.AlphaClip = In_AlphaClip3_g174758;
				Data3_g174758.AlphaFade = In_AlphaFade3_g174758;
				Data3_g174758.Translucency = In_Translucency3_g174758;
				Data3_g174758.Transmission = In_Transmission3_g174758;
				Data3_g174758.Thickness = In_Thickness3_g174758;
				Data3_g174758.Diffusion = In_Diffusion3_g174758;
				TVEVisualData Data4_g174796 = Data3_g174758;
				float Out_Dummy4_g174796 = 0;
				float3 Out_Albedo4_g174796 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174796 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174796 = float2( 0,0 );
				float3 Out_NormalWS4_g174796 = float3( 0,0,0 );
				float4 Out_Shader4_g174796 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174796 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174796 = 0;
				float Out_Grayscale4_g174796 = 0;
				float Out_Luminosity4_g174796 = 0;
				float Out_AlphaClip4_g174796 = 0;
				float Out_AlphaFade4_g174796 = 0;
				float3 Out_Translucency4_g174796 = float3( 0,0,0 );
				float Out_Transmission4_g174796 = 0;
				float Out_Thickness4_g174796 = 0;
				float Out_Diffusion4_g174796 = 0;
				Out_Dummy4_g174796 = Data4_g174796.Dummy;
				Out_Albedo4_g174796 = Data4_g174796.Albedo;
				Out_AlbedoRaw4_g174796 = Data4_g174796.AlbedoRaw;
				Out_NormalTS4_g174796 = Data4_g174796.NormalTS;
				Out_NormalWS4_g174796 = Data4_g174796.NormalWS;
				Out_Shader4_g174796 = Data4_g174796.Shader;
				Out_Emissive4_g174796= Data4_g174796.Emissive;
				Out_MultiMask4_g174796 = Data4_g174796.MultiMask;
				Out_Grayscale4_g174796 = Data4_g174796.Grayscale;
				Out_Luminosity4_g174796= Data4_g174796.Luminosity;
				Out_AlphaClip4_g174796 = Data4_g174796.AlphaClip;
				Out_AlphaFade4_g174796 = Data4_g174796.AlphaFade;
				Out_Translucency4_g174796 = Data4_g174796.Translucency;
				Out_Transmission4_g174796 = Data4_g174796.Transmission;
				Out_Thickness4_g174796 = Data4_g174796.Thickness;
				Out_Diffusion4_g174796 = Data4_g174796.Diffusion;
				float3 In_Albedo3_g174786 = Out_Albedo4_g174796;
				float3 In_AlbedoRaw3_g174786 = Out_AlbedoRaw4_g174796;
				float2 In_NormalTS3_g174786 = Out_NormalTS4_g174796;
				float3 In_NormalWS3_g174786 = Out_NormalWS4_g174796;
				float4 In_Shader3_g174786 = Out_Shader4_g174796;
				float4 In_Emissive3_g174786 = Out_Emissive4_g174796;
				float In_Grayscale3_g174786 = Out_Grayscale4_g174796;
				float In_Luminosity3_g174786 = Out_Luminosity4_g174796;
				float temp_output_836_11_g174785 = Out_MultiMask4_g174796;
				float In_MultiMask3_g174786 = temp_output_836_11_g174785;
				half Visual_AlphaClip667_g174785 = Out_AlphaClip4_g174796;
				TVEGlobalData Data15_g174795 = Data204_g173897;
				float Out_Dummy15_g174795 = 0;
				float4 Out_CoatParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174795 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174795 = float4( 0,0,0,0 );
				Out_Dummy15_g174795 = Data15_g174795.Dummy;
				Out_CoatParams15_g174795 = Data15_g174795.CoatParams;
				Out_PaintParams15_g174795 = Data15_g174795.PaintParams;
				Out_GlowParams15_g174795 = Data15_g174795.GlowParams;
				Out_AtmoParams15_g174795= Data15_g174795.AtmoParams;
				Out_FadeParams15_g174795= Data15_g174795.FadeParams;
				Out_FormParams15_g174795 = Data15_g174795.FormParams;
				Out_LandParams15_g174795 = Data15_g174795.LandParams;
				Out_WindParams15_g174795 = Data15_g174795.WindParams;
				Out_PushParams15_g174795 = Data15_g174795.PushParams;
				half4 Global_FadeParams516_g174785 = Out_FadeParams15_g174795;
				#ifdef TVE_CUTOUT_ELEMENT
				float staticSwitch663_g174785 = saturate( (Global_FadeParams516_g174785).w );
				#else
				float staticSwitch663_g174785 = 1.0;
				#endif
				half Local_GlobalMask429_g174785 = staticSwitch663_g174785;
				float lerpResult811_g174785 = lerp( 1.0 , Visual_AlphaClip667_g174785 , _CutoutAlphaValue);
				half Local_AlphaMask814_g174785 = lerpResult811_g174785;
				TVEModelData Data15_g174797 = Data16_g164566;
				float Out_Dummy15_g174797 = 0;
				float3 Out_PositionWS15_g174797 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174797 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174797 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174797 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174797 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174797 = float3( 0,0,0 );
				float4 Out_VertexData15_g174797 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174797 = float4( 0,0,0,0 );
				Out_Dummy15_g174797 = Data15_g174797.Dummy;
				Out_PositionWS15_g174797 = Data15_g174797.PositionWS;
				Out_PositionWO15_g174797 = Data15_g174797.PositionWO;
				Out_PivotWS15_g174797 = Data15_g174797.PivotWS;
				Out_PivotWO15_g174797 = Data15_g174797.PivotWO;
				Out_NormalWS15_g174797 = Data15_g174797.NormalWS;
				Out_ViewDirWS15_g174797 = Data15_g174797.ViewDirWS;
				Out_VertexData15_g174797 = Data15_g174797.VertexData;
				Out_BoundsData15_g174797 = Data15_g174797.BoundsData;
				half3 Model_PositionWO602_g174785 = Out_PositionWO15_g174797;
				float4 tex3DNode60_g174789 = SAMPLE_TEXTURE3D( _NoiseTex3D, sampler_Linear_Repeat, ( Model_PositionWO602_g174785 * ( _CutoutNoiseTillingValue * 0.01 ) ) );
				float lerpResult673_g174785 = lerp( 1.0 , tex3DNode60_g174789.r , _CutoutNoiseValue);
				half Local_NoiseMask678_g174785 = lerpResult673_g174785;
				half4 Model_VertexMasks752_g174785 = Out_VertexData15_g174797;
				float4 break755_g174785 = Model_VertexMasks752_g174785;
				float4 break33_g174787 = _cutout_vert_mode;
				float temp_output_30_0_g174787 = ( break755_g174785.x * break33_g174787.x );
				float temp_output_29_0_g174787 = ( break755_g174785.y * break33_g174787.y );
				float temp_output_31_0_g174787 = ( break755_g174785.z * break33_g174787.z );
				float temp_output_28_0_g174787 = ( temp_output_30_0_g174787 + temp_output_29_0_g174787 + temp_output_31_0_g174787 + ( break755_g174785.w * break33_g174787.w ) );
				float clampResult17_g174788 = clamp( temp_output_28_0_g174787 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174791 = _CutoutMeshRemap.x;
				float temp_output_10_0_g174791 = ( _CutoutMeshRemap.y - temp_output_7_0_g174791 );
				float lerpResult820_g174785 = lerp( 1.0 , saturate( ( ( clampResult17_g174788 - temp_output_7_0_g174791 ) / ( temp_output_10_0_g174791 + 0.0001 ) ) ) , _CutoutMeshValue);
				float temp_output_6_0_g174792 = lerpResult820_g174785;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174792 = ( temp_output_6_0_g174792 + ( _CutoutMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174792 = temp_output_6_0_g174792;
				#endif
				float temp_output_801_0_g174785 = staticSwitch14_g174792;
				half Local_VertMask766_g174785 = temp_output_801_0_g174785;
				half Visual_MultiMask671_g174785 = temp_output_836_11_g174785;
				float lerpResult683_g174785 = lerp( 1.0 , Visual_MultiMask671_g174785 , _CutoutMultiValue);
				half Local_MultiMask685_g174785 = lerpResult683_g174785;
				float lerpResult728_g174785 = lerp( Visual_AlphaClip667_g174785 , min( Visual_AlphaClip667_g174785 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g174785 ) - ( Local_AlphaMask814_g174785 * Local_NoiseMask678_g174785 * Local_VertMask766_g174785 ) ) ) ) , Local_MultiMask685_g174785);
				half Local_AlphaClip784_g174785 = lerpResult728_g174785;
				#ifdef TVE_CUTOUT
				float staticSwitch577_g174785 = Local_AlphaClip784_g174785;
				#else
				float staticSwitch577_g174785 = Visual_AlphaClip667_g174785;
				#endif
				half Final_AlphaClip795_g174785 = staticSwitch577_g174785;
				float In_AlphaClip3_g174786 = Final_AlphaClip795_g174785;
				float In_AlphaFade3_g174786 = Out_AlphaFade4_g174796;
				float3 In_Translucency3_g174786 = Out_Translucency4_g174796;
				float In_Transmission3_g174786 = Out_Transmission4_g174796;
				float In_Thickness3_g174786 = Out_Thickness4_g174796;
				float In_Diffusion3_g174786 = Out_Diffusion4_g174796;
				Data3_g174786.Dummy = In_Dummy3_g174786;
				Data3_g174786.Albedo = In_Albedo3_g174786;
				Data3_g174786.AlbedoRaw = In_AlbedoRaw3_g174786;
				Data3_g174786.NormalTS = In_NormalTS3_g174786;
				Data3_g174786.NormalWS = In_NormalWS3_g174786;
				Data3_g174786.Shader = In_Shader3_g174786;
				Data3_g174786.Emissive= In_Emissive3_g174786;
				Data3_g174786.MultiMask = In_MultiMask3_g174786;
				Data3_g174786.Grayscale = In_Grayscale3_g174786;
				Data3_g174786.Luminosity = In_Luminosity3_g174786;
				Data3_g174786.AlphaClip = In_AlphaClip3_g174786;
				Data3_g174786.AlphaFade = In_AlphaFade3_g174786;
				Data3_g174786.Translucency = In_Translucency3_g174786;
				Data3_g174786.Transmission = In_Transmission3_g174786;
				Data3_g174786.Thickness = In_Thickness3_g174786;
				Data3_g174786.Diffusion = In_Diffusion3_g174786;
				TVEVisualData Data4_g174807 = Data3_g174786;
				float Out_Dummy4_g174807 = 0;
				float3 Out_Albedo4_g174807 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174807 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174807 = float2( 0,0 );
				float3 Out_NormalWS4_g174807 = float3( 0,0,0 );
				float4 Out_Shader4_g174807 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174807 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174807 = 0;
				float Out_Grayscale4_g174807 = 0;
				float Out_Luminosity4_g174807 = 0;
				float Out_AlphaClip4_g174807 = 0;
				float Out_AlphaFade4_g174807 = 0;
				float3 Out_Translucency4_g174807 = float3( 0,0,0 );
				float Out_Transmission4_g174807 = 0;
				float Out_Thickness4_g174807 = 0;
				float Out_Diffusion4_g174807 = 0;
				Out_Dummy4_g174807 = Data4_g174807.Dummy;
				Out_Albedo4_g174807 = Data4_g174807.Albedo;
				Out_AlbedoRaw4_g174807 = Data4_g174807.AlbedoRaw;
				Out_NormalTS4_g174807 = Data4_g174807.NormalTS;
				Out_NormalWS4_g174807 = Data4_g174807.NormalWS;
				Out_Shader4_g174807 = Data4_g174807.Shader;
				Out_Emissive4_g174807= Data4_g174807.Emissive;
				Out_MultiMask4_g174807 = Data4_g174807.MultiMask;
				Out_Grayscale4_g174807 = Data4_g174807.Grayscale;
				Out_Luminosity4_g174807= Data4_g174807.Luminosity;
				Out_AlphaClip4_g174807 = Data4_g174807.AlphaClip;
				Out_AlphaFade4_g174807 = Data4_g174807.AlphaFade;
				Out_Translucency4_g174807 = Data4_g174807.Translucency;
				Out_Transmission4_g174807 = Data4_g174807.Transmission;
				Out_Thickness4_g174807 = Data4_g174807.Thickness;
				Out_Diffusion4_g174807 = Data4_g174807.Diffusion;
				float3 In_Albedo3_g174808 = Out_Albedo4_g174807;
				float3 In_AlbedoRaw3_g174808 = Out_AlbedoRaw4_g174807;
				float2 In_NormalTS3_g174808 = Out_NormalTS4_g174807;
				float3 In_NormalWS3_g174808 = Out_NormalWS4_g174807;
				float4 In_Shader3_g174808 = Out_Shader4_g174807;
				float4 In_Emissive3_g174808 = Out_Emissive4_g174807;
				float In_Grayscale3_g174808 = Out_Grayscale4_g174807;
				float In_Luminosity3_g174808 = Out_Luminosity4_g174807;
				float temp_output_821_11_g174805 = Out_MultiMask4_g174807;
				float In_MultiMask3_g174808 = temp_output_821_11_g174805;
				half Visual_AlphaClip754_g174805 = Out_AlphaClip4_g174807;
				half Dither_Constant768_g174805 = _DitherConstantValue;
				float temp_output_7_0_g174815 = _DitherProximityMaxValue;
				float temp_output_10_0_g174815 = ( _DitherProximityMinValue - temp_output_7_0_g174815 );
				half Dither_Proximity767_g174805 = ( saturate( ( ( distance( ase_worldPos , _WorldSpaceCameraPos ) - temp_output_7_0_g174815 ) / ( temp_output_10_0_g174815 + 0.0001 ) ) ) * _DitherProximityValue );
				TVEModelData Data15_g174814 = Data16_g164566;
				float Out_Dummy15_g174814 = 0;
				float3 Out_PositionWS15_g174814 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174814 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174814 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174814 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174814 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174814 = float3( 0,0,0 );
				float4 Out_VertexData15_g174814 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174814 = float4( 0,0,0,0 );
				Out_Dummy15_g174814 = Data15_g174814.Dummy;
				Out_PositionWS15_g174814 = Data15_g174814.PositionWS;
				Out_PositionWO15_g174814 = Data15_g174814.PositionWO;
				Out_PivotWS15_g174814 = Data15_g174814.PivotWS;
				Out_PivotWO15_g174814 = Data15_g174814.PivotWO;
				Out_NormalWS15_g174814 = Data15_g174814.NormalWS;
				Out_ViewDirWS15_g174814 = Data15_g174814.ViewDirWS;
				Out_VertexData15_g174814 = Data15_g174814.VertexData;
				Out_BoundsData15_g174814 = Data15_g174814.BoundsData;
				half3 Model_PositionWS776_g174805 = Out_PositionWS15_g174814;
				float temp_output_7_0_g174813 = _DitherDistanceMinValue;
				float temp_output_10_0_g174813 = ( _DitherDistanceMaxValue - temp_output_7_0_g174813 );
				half Dither_Distance856_g174805 = ( saturate( ( ( distance( Model_PositionWS776_g174805 , _WorldSpaceCameraPos ) - temp_output_7_0_g174813 ) / ( temp_output_10_0_g174813 + 0.0001 ) ) ) * _DitherDistanceValue );
				half3 Model_ViewDirWS845_g174805 = Out_ViewDirWS15_g174814;
				float3 normalizeResult792_g174805 = normalize( cross( ddy( ase_worldPos ) , ddx( ase_worldPos ) ) );
				float dotResult778_g174805 = dot( Model_ViewDirWS845_g174805 , normalizeResult792_g174805 );
				half Dither_Glancing784_g174805 = ( saturate( ( ( 1.0 - abs( dotResult778_g174805 ) ) * _DitherGlancingAngleValue ) ) * _DitherGlancingValue );
				half Dither_Value429_g174805 = max( max( max( Dither_Constant768_g174805 , Dither_Proximity767_g174805 ) , Dither_Distance856_g174805 ) , Dither_Glancing784_g174805 );
				half3 Model_PositionWO602_g174805 = Out_PositionWO15_g174814;
				float4 tex3DNode60_g174811 = SAMPLE_TEXTURE3D( _NoiseTex3D, sampler_Linear_Repeat, ( ( Model_PositionWO602_g174805 * 20.0 ) * ( _DitherNoiseTillingValue * 0.01 ) ) );
				float temp_output_809_0_g174805 = tex3DNode60_g174811.r;
				half Local_MaskNoise678_g174805 = temp_output_809_0_g174805;
				half Visual_MultiMask671_g174805 = temp_output_821_11_g174805;
				float lerpResult683_g174805 = lerp( 1.0 , Visual_MultiMask671_g174805 , _DitherMultiValue);
				half Local_MaskMulti685_g174805 = lerpResult683_g174805;
				half Custom_Mask826_g174805 = 1.0;
				float lerpResult728_g174805 = lerp( Visual_AlphaClip754_g174805 , min( Visual_AlphaClip754_g174805 , ( -0.001 - ( Dither_Value429_g174805 - Local_MaskNoise678_g174805 ) ) ) , ( Local_MaskMulti685_g174805 * Custom_Mask826_g174805 ));
				half Local_AlphaClip834_g174805 = lerpResult728_g174805;
				#ifdef TVE_DITHER
				float staticSwitch577_g174805 = Local_AlphaClip834_g174805;
				#else
				float staticSwitch577_g174805 = Visual_AlphaClip754_g174805;
				#endif
				half Final_AlphaClip493_g174805 = staticSwitch577_g174805;
				float In_AlphaClip3_g174808 = Final_AlphaClip493_g174805;
				float In_AlphaFade3_g174808 = Out_AlphaFade4_g174807;
				float3 In_Translucency3_g174808 = Out_Translucency4_g174807;
				float In_Transmission3_g174808 = Out_Transmission4_g174807;
				float In_Thickness3_g174808 = Out_Thickness4_g174807;
				float In_Diffusion3_g174808 = Out_Diffusion4_g174807;
				Data3_g174808.Dummy = In_Dummy3_g174808;
				Data3_g174808.Albedo = In_Albedo3_g174808;
				Data3_g174808.AlbedoRaw = In_AlbedoRaw3_g174808;
				Data3_g174808.NormalTS = In_NormalTS3_g174808;
				Data3_g174808.NormalWS = In_NormalWS3_g174808;
				Data3_g174808.Shader = In_Shader3_g174808;
				Data3_g174808.Emissive= In_Emissive3_g174808;
				Data3_g174808.MultiMask = In_MultiMask3_g174808;
				Data3_g174808.Grayscale = In_Grayscale3_g174808;
				Data3_g174808.Luminosity = In_Luminosity3_g174808;
				Data3_g174808.AlphaClip = In_AlphaClip3_g174808;
				Data3_g174808.AlphaFade = In_AlphaFade3_g174808;
				Data3_g174808.Translucency = In_Translucency3_g174808;
				Data3_g174808.Transmission = In_Transmission3_g174808;
				Data3_g174808.Thickness = In_Thickness3_g174808;
				Data3_g174808.Diffusion = In_Diffusion3_g174808;
				TVEVisualData Data4_g174835 = Data3_g174808;
				float Out_Dummy4_g174835 = 0;
				float3 Out_Albedo4_g174835 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174835 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174835 = float2( 0,0 );
				float3 Out_NormalWS4_g174835 = float3( 0,0,0 );
				float4 Out_Shader4_g174835 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174835 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174835 = 0;
				float Out_Grayscale4_g174835 = 0;
				float Out_Luminosity4_g174835 = 0;
				float Out_AlphaClip4_g174835 = 0;
				float Out_AlphaFade4_g174835 = 0;
				float3 Out_Translucency4_g174835 = float3( 0,0,0 );
				float Out_Transmission4_g174835 = 0;
				float Out_Thickness4_g174835 = 0;
				float Out_Diffusion4_g174835 = 0;
				Out_Dummy4_g174835 = Data4_g174835.Dummy;
				Out_Albedo4_g174835 = Data4_g174835.Albedo;
				Out_AlbedoRaw4_g174835 = Data4_g174835.AlbedoRaw;
				Out_NormalTS4_g174835 = Data4_g174835.NormalTS;
				Out_NormalWS4_g174835 = Data4_g174835.NormalWS;
				Out_Shader4_g174835 = Data4_g174835.Shader;
				Out_Emissive4_g174835= Data4_g174835.Emissive;
				Out_MultiMask4_g174835 = Data4_g174835.MultiMask;
				Out_Grayscale4_g174835 = Data4_g174835.Grayscale;
				Out_Luminosity4_g174835= Data4_g174835.Luminosity;
				Out_AlphaClip4_g174835 = Data4_g174835.AlphaClip;
				Out_AlphaFade4_g174835 = Data4_g174835.AlphaFade;
				Out_Translucency4_g174835 = Data4_g174835.Translucency;
				Out_Transmission4_g174835 = Data4_g174835.Transmission;
				Out_Thickness4_g174835 = Data4_g174835.Thickness;
				Out_Diffusion4_g174835 = Data4_g174835.Diffusion;
				float3 temp_output_297_0_g174826 = Out_Albedo4_g174835;
				float3 In_Albedo3_g174836 = temp_output_297_0_g174826;
				float3 temp_output_297_23_g174826 = Out_AlbedoRaw4_g174835;
				float3 In_AlbedoRaw3_g174836 = temp_output_297_23_g174826;
				float2 In_NormalTS3_g174836 = Out_NormalTS4_g174835;
				float3 In_NormalWS3_g174836 = Out_NormalWS4_g174835;
				float4 In_Shader3_g174836 = Out_Shader4_g174835;
				float4 temp_cast_51 = (0.0).xxxx;
				TVEModelData Data15_g174839 = Data16_g164566;
				float Out_Dummy15_g174839 = 0;
				float3 Out_PositionWS15_g174839 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174839 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174839 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174839 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174839 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174839 = float3( 0,0,0 );
				float4 Out_VertexData15_g174839 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174839 = float4( 0,0,0,0 );
				Out_Dummy15_g174839 = Data15_g174839.Dummy;
				Out_PositionWS15_g174839 = Data15_g174839.PositionWS;
				Out_PositionWO15_g174839 = Data15_g174839.PositionWO;
				Out_PivotWS15_g174839 = Data15_g174839.PivotWS;
				Out_PivotWO15_g174839 = Data15_g174839.PivotWO;
				Out_NormalWS15_g174839 = Data15_g174839.NormalWS;
				Out_ViewDirWS15_g174839 = Data15_g174839.ViewDirWS;
				Out_VertexData15_g174839 = Data15_g174839.VertexData;
				Out_BoundsData15_g174839 = Data15_g174839.BoundsData;
				half4 Model_VertexMasks216_g174826 = Out_VertexData15_g174839;
				float4 break251_g174826 = Model_VertexMasks216_g174826;
				float4 break33_g174830 = _emissive_vert_mode;
				float temp_output_30_0_g174830 = ( break251_g174826.x * break33_g174830.x );
				float temp_output_29_0_g174830 = ( break251_g174826.y * break33_g174830.y );
				float temp_output_31_0_g174830 = ( break251_g174826.z * break33_g174830.z );
				float temp_output_28_0_g174830 = ( temp_output_30_0_g174830 + temp_output_29_0_g174830 + temp_output_31_0_g174830 + ( break251_g174826.w * break33_g174830.w ) );
				float clampResult17_g174829 = clamp( temp_output_28_0_g174830 , 0.0001 , 0.9999 );
				float temp_output_7_0_g174833 = _EmissiveMeshRemap.x;
				float temp_output_10_0_g174833 = ( _EmissiveMeshRemap.y - temp_output_7_0_g174833 );
				float lerpResult303_g174826 = lerp( 1.0 , saturate( ( ( clampResult17_g174829 - temp_output_7_0_g174833 ) / ( temp_output_10_0_g174833 + 0.0001 ) ) ) , _EmissiveMeshValue);
				float temp_output_6_0_g174838 = lerpResult303_g174826;
				#ifdef TVE_REGISTER
				float staticSwitch14_g174838 = ( temp_output_6_0_g174838 + ( _EmissiveMeshMode * 0.0 ) );
				#else
				float staticSwitch14_g174838 = temp_output_6_0_g174838;
				#endif
				float temp_output_263_0_g174826 = staticSwitch14_g174838;
				half Emissive_MeshMask221_g174826 = temp_output_263_0_g174826;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture276_g174828) = _EmissiveMaskTex;
				SamplerState Sampler276_g174828 = sampler_Linear_Repeat;
				float4 temp_output_6_0_g174834 = _emissive_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g174834 = ( temp_output_6_0_g174834 + ( ( _EmissiveSampleMode + _EmissiveCoordMode + _EmissiveCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g174834 = temp_output_6_0_g174834;
				#endif
				half4 Emissive_Coords167_g174826 = staticSwitch14_g174834;
				float4 temp_output_37_0_g174828 = Emissive_Coords167_g174826;
				half4 Coords276_g174828 = temp_output_37_0_g174828;
				half2 TexCoord276_g174828 = IN.ase_texcoord2.xy;
				half4 localSampleMain276_g174828 = SampleMain( Texture276_g174828 , Sampler276_g174828 , Coords276_g174828 , TexCoord276_g174828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture275_g174828) = _EmissiveMaskTex;
				SamplerState Sampler275_g174828 = sampler_Linear_Repeat;
				half4 Coords275_g174828 = temp_output_37_0_g174828;
				half2 TexCoord275_g174828 = IN.ase_texcoord3.xy;
				half4 localSampleExtra275_g174828 = SampleExtra( Texture275_g174828 , Sampler275_g174828 , Coords275_g174828 , TexCoord275_g174828 );
				#if defined( TVE_EMISSIVE_SAMPLE_MAIN_UV )
				float4 staticSwitch176_g174826 = localSampleMain276_g174828;
				#elif defined( TVE_EMISSIVE_SAMPLE_EXTRA_UV )
				float4 staticSwitch176_g174826 = localSampleExtra275_g174828;
				#else
				float4 staticSwitch176_g174826 = localSampleMain276_g174828;
				#endif
				half4 Emissive_MaskTex201_g174826 = staticSwitch176_g174826;
				float clampResult17_g174832 = clamp( (Emissive_MaskTex201_g174826).x , 0.0001 , 0.9999 );
				float temp_output_7_0_g174831 = _EmissiveMaskRemap.x;
				float temp_output_10_0_g174831 = ( _EmissiveMaskRemap.y - temp_output_7_0_g174831 );
				float lerpResult302_g174826 = lerp( 1.0 , saturate( ( ( clampResult17_g174832 - temp_output_7_0_g174831 ) / ( temp_output_10_0_g174831 + 0.0001 ) ) ) , _EmissiveMaskValue);
				half Emissive_Mask103_g174826 = lerpResult302_g174826;
				float temp_output_279_0_g174826 = ( Emissive_MeshMask221_g174826 * Emissive_Mask103_g174826 );
				float3 appendResult293_g174826 = (float3(temp_output_279_0_g174826 , temp_output_279_0_g174826 , temp_output_279_0_g174826));
				half3 Local_EmissiveColor278_g174826 = appendResult293_g174826;
				half4 Visual_Emissive255_g174826 = Out_Emissive4_g174835;
				float3 lerpResult285_g174826 = lerp( Local_EmissiveColor278_g174826 , (Visual_Emissive255_g174826).xyz , (Visual_Emissive255_g174826).w);
				float3 temp_cast_52 = (1.0).xxx;
				TVEGlobalData Data15_g174827 = Data204_g173897;
				float Out_Dummy15_g174827 = 0;
				float4 Out_CoatParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174827 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174827 = float4( 0,0,0,0 );
				Out_Dummy15_g174827 = Data15_g174827.Dummy;
				Out_CoatParams15_g174827 = Data15_g174827.CoatParams;
				Out_PaintParams15_g174827 = Data15_g174827.PaintParams;
				Out_GlowParams15_g174827 = Data15_g174827.GlowParams;
				Out_AtmoParams15_g174827= Data15_g174827.AtmoParams;
				Out_FadeParams15_g174827= Data15_g174827.FadeParams;
				Out_FormParams15_g174827 = Data15_g174827.FormParams;
				Out_LandParams15_g174827 = Data15_g174827.LandParams;
				Out_WindParams15_g174827 = Data15_g174827.WindParams;
				Out_PushParams15_g174827 = Data15_g174827.PushParams;
				half4 Global_GlowParams179_g174826 = Out_GlowParams15_g174827;
				float3 lerpResult299_g174826 = lerp( float3( 1,1,1 ) , (Global_GlowParams179_g174826).xyz , TVE_IsEnabled);
				#ifdef TVE_EMISSIVE_ELEMENT
				float3 staticSwitch228_g174826 = lerpResult299_g174826;
				#else
				float3 staticSwitch228_g174826 = temp_cast_52;
				#endif
				half3 Emissive_GlobalMask248_g174826 = staticSwitch228_g174826;
				half3 Visual_AlbedoRaw306_g174826 = temp_output_297_23_g174826;
				float3 lerpResult307_g174826 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g174826 , _EmissiveColorMode);
				half3 Local_EmissiveValue88_g174826 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g174826 * lerpResult307_g174826 );
				half3 Emissive_Blend260_g174826 = ( lerpResult285_g174826 * Local_EmissiveValue88_g174826 );
				float3 temp_output_3_0_g174840 = Emissive_Blend260_g174826;
				float temp_output_15_0_g174840 = _emissive_power_value;
				float3 temp_output_23_0_g174840 = ( temp_output_3_0_g174840 * temp_output_15_0_g174840 );
				half Local_EmissiveMask294_g174826 = temp_output_279_0_g174826;
				float4 appendResult295_g174826 = (float4(temp_output_23_0_g174840 , Local_EmissiveMask294_g174826));
				#ifdef TVE_EMISSIVE
				float4 staticSwitch129_g174826 = appendResult295_g174826;
				#else
				float4 staticSwitch129_g174826 = temp_cast_51;
				#endif
				half4 Final_Emissive184_g174826 = staticSwitch129_g174826;
				float4 In_Emissive3_g174836 = Final_Emissive184_g174826;
				float In_Grayscale3_g174836 = Out_Grayscale4_g174835;
				float In_Luminosity3_g174836 = Out_Luminosity4_g174835;
				float temp_output_297_11_g174826 = Out_MultiMask4_g174835;
				float In_MultiMask3_g174836 = temp_output_297_11_g174826;
				float In_AlphaClip3_g174836 = Out_AlphaClip4_g174835;
				float In_AlphaFade3_g174836 = Out_AlphaFade4_g174835;
				float3 In_Translucency3_g174836 = Out_Translucency4_g174835;
				float In_Transmission3_g174836 = Out_Transmission4_g174835;
				float In_Thickness3_g174836 = Out_Thickness4_g174835;
				float In_Diffusion3_g174836 = Out_Diffusion4_g174835;
				Data3_g174836.Dummy = In_Dummy3_g174836;
				Data3_g174836.Albedo = In_Albedo3_g174836;
				Data3_g174836.AlbedoRaw = In_AlbedoRaw3_g174836;
				Data3_g174836.NormalTS = In_NormalTS3_g174836;
				Data3_g174836.NormalWS = In_NormalWS3_g174836;
				Data3_g174836.Shader = In_Shader3_g174836;
				Data3_g174836.Emissive= In_Emissive3_g174836;
				Data3_g174836.MultiMask = In_MultiMask3_g174836;
				Data3_g174836.Grayscale = In_Grayscale3_g174836;
				Data3_g174836.Luminosity = In_Luminosity3_g174836;
				Data3_g174836.AlphaClip = In_AlphaClip3_g174836;
				Data3_g174836.AlphaFade = In_AlphaFade3_g174836;
				Data3_g174836.Translucency = In_Translucency3_g174836;
				Data3_g174836.Transmission = In_Transmission3_g174836;
				Data3_g174836.Thickness = In_Thickness3_g174836;
				Data3_g174836.Diffusion = In_Diffusion3_g174836;
				TVEVisualData Data4_g174858 = Data3_g174836;
				float Out_Dummy4_g174858 = 0;
				float3 Out_Albedo4_g174858 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174858 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174858 = float2( 0,0 );
				float3 Out_NormalWS4_g174858 = float3( 0,0,0 );
				float4 Out_Shader4_g174858 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174858 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174858 = 0;
				float Out_Grayscale4_g174858 = 0;
				float Out_Luminosity4_g174858 = 0;
				float Out_AlphaClip4_g174858 = 0;
				float Out_AlphaFade4_g174858 = 0;
				float3 Out_Translucency4_g174858 = float3( 0,0,0 );
				float Out_Transmission4_g174858 = 0;
				float Out_Thickness4_g174858 = 0;
				float Out_Diffusion4_g174858 = 0;
				Out_Dummy4_g174858 = Data4_g174858.Dummy;
				Out_Albedo4_g174858 = Data4_g174858.Albedo;
				Out_AlbedoRaw4_g174858 = Data4_g174858.AlbedoRaw;
				Out_NormalTS4_g174858 = Data4_g174858.NormalTS;
				Out_NormalWS4_g174858 = Data4_g174858.NormalWS;
				Out_Shader4_g174858 = Data4_g174858.Shader;
				Out_Emissive4_g174858= Data4_g174858.Emissive;
				Out_MultiMask4_g174858 = Data4_g174858.MultiMask;
				Out_Grayscale4_g174858 = Data4_g174858.Grayscale;
				Out_Luminosity4_g174858= Data4_g174858.Luminosity;
				Out_AlphaClip4_g174858 = Data4_g174858.AlphaClip;
				Out_AlphaFade4_g174858 = Data4_g174858.AlphaFade;
				Out_Translucency4_g174858 = Data4_g174858.Translucency;
				Out_Transmission4_g174858 = Data4_g174858.Transmission;
				Out_Thickness4_g174858 = Data4_g174858.Thickness;
				Out_Diffusion4_g174858 = Data4_g174858.Diffusion;
				half3 Visual_Albedo199_g174857 = Out_Albedo4_g174858;
				float3 temp_cast_53 = (0.0).xxx;
				half3 Subsurface_Color264_g174857 = ( (_SubsurfaceColor).rgb * Visual_Albedo199_g174857 );
				half Visual_Transmission138_g174857 = Out_Transmission4_g174858;
				half Subsurface_Value268_g174857 = _SubsurfaceIntensityValue;
				TVEGlobalData Data15_g174860 = Data204_g173897;
				float Out_Dummy15_g174860 = 0;
				float4 Out_CoatParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g174860 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g174860 = float4( 0,0,0,0 );
				Out_Dummy15_g174860 = Data15_g174860.Dummy;
				Out_CoatParams15_g174860 = Data15_g174860.CoatParams;
				Out_PaintParams15_g174860 = Data15_g174860.PaintParams;
				Out_GlowParams15_g174860 = Data15_g174860.GlowParams;
				Out_AtmoParams15_g174860= Data15_g174860.AtmoParams;
				Out_FadeParams15_g174860= Data15_g174860.FadeParams;
				Out_FormParams15_g174860 = Data15_g174860.FormParams;
				Out_LandParams15_g174860 = Data15_g174860.LandParams;
				Out_WindParams15_g174860 = Data15_g174860.WindParams;
				Out_PushParams15_g174860 = Data15_g174860.PushParams;
				half4 Global_GlowParams373_g174857 = Out_GlowParams15_g174860;
				float lerpResult403_g174857 = lerp( 1.0 , saturate( (Global_GlowParams373_g174857).w ) , TVE_IsEnabled);
				#ifdef TVE_SUBSURFACE_ELEMENT
				float staticSwitch367_g174857 = lerpResult403_g174857;
				#else
				float staticSwitch367_g174857 = 1.0;
				#endif
				half Subsurface_GlobalMask369_g174857 = staticSwitch367_g174857;
				float temp_output_301_11_g174857 = Out_MultiMask4_g174858;
				half Visual_MultiMask292_g174857 = temp_output_301_11_g174857;
				float lerpResult293_g174857 = lerp( 1.0 , Visual_MultiMask292_g174857 , _SubsurfaceMultiValue);
				half Subsurface_MultiMask296_g174857 = lerpResult293_g174857;
				half Custom_Mask363_g174857 = 1.0;
				#ifdef TVE_SUBSURFACE
				float staticSwitch345_g174857 = ( Visual_Transmission138_g174857 * Subsurface_Value268_g174857 * Subsurface_GlobalMask369_g174857 * Subsurface_MultiMask296_g174857 * Custom_Mask363_g174857 );
				#else
				float staticSwitch345_g174857 = 0.0;
				#endif
				half Final_Transmission269_g174857 = staticSwitch345_g174857;
				#ifdef TVE_SUBSURFACE
				float3 staticSwitch348_g174857 = ( Subsurface_Color264_g174857 * Final_Transmission269_g174857 * 10.0 );
				#else
				float3 staticSwitch348_g174857 = temp_cast_53;
				#endif
				half3 Final_Translucency254_g174857 = staticSwitch348_g174857;
				TVEModelData Data15_g174863 = Data16_g164566;
				float Out_Dummy15_g174863 = 0;
				float3 Out_PositionWS15_g174863 = float3( 0,0,0 );
				float3 Out_PositionWO15_g174863 = float3( 0,0,0 );
				float3 Out_PivotWS15_g174863 = float3( 0,0,0 );
				float3 Out_PivotWO15_g174863 = float3( 0,0,0 );
				float3 Out_NormalWS15_g174863 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g174863 = float3( 0,0,0 );
				float4 Out_VertexData15_g174863 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g174863 = float4( 0,0,0,0 );
				Out_Dummy15_g174863 = Data15_g174863.Dummy;
				Out_PositionWS15_g174863 = Data15_g174863.PositionWS;
				Out_PositionWO15_g174863 = Data15_g174863.PositionWO;
				Out_PivotWS15_g174863 = Data15_g174863.PivotWS;
				Out_PivotWO15_g174863 = Data15_g174863.PivotWO;
				Out_NormalWS15_g174863 = Data15_g174863.NormalWS;
				Out_ViewDirWS15_g174863 = Data15_g174863.ViewDirWS;
				Out_VertexData15_g174863 = Data15_g174863.VertexData;
				Out_BoundsData15_g174863 = Data15_g174863.BoundsData;
				half3 Model_ViewDirWS392_g174857 = Out_ViewDirWS15_g174863;
				float dotResult324_g174857 = dot( -TVE_MainLightDirection , Model_ViewDirWS392_g174857 );
				float saferPower323_g174857 = abs( saturate( dotResult324_g174857 ) );
				#ifdef UNITY_PASS_FORWARDADD
				float staticSwitch330_g174857 = 0.0;
				#else
				float staticSwitch330_g174857 = ( pow( saferPower323_g174857 , _SubsurfaceAngleValue ) * _SubsurfaceScatteringValue );
				#endif
				half Mask_Subsurface_View320_g174857 = staticSwitch330_g174857;
				float3 temp_output_6_0_g174861 = ( Final_Translucency254_g174857 * Mask_Subsurface_View320_g174857 );
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g174861 = ( temp_output_6_0_g174861 + ( _SubsurfaceAproxInfo * 0.0 ) );
				#else
				float3 staticSwitch14_g174861 = temp_output_6_0_g174861;
				#endif
				half3 Subsurface_Approximation333_g174857 = staticSwitch14_g174861;
				#ifdef TVE_SUBSURFACE
				float3 staticSwitch353_g174857 = ( Visual_Albedo199_g174857 + Subsurface_Approximation333_g174857 );
				#else
				float3 staticSwitch353_g174857 = Visual_Albedo199_g174857;
				#endif
				half3 Final_Albedo312_g174857 = staticSwitch353_g174857;
				float3 In_Albedo3_g174859 = Final_Albedo312_g174857;
				float3 In_AlbedoRaw3_g174859 = Out_AlbedoRaw4_g174858;
				float2 In_NormalTS3_g174859 = Out_NormalTS4_g174858;
				float3 In_NormalWS3_g174859 = Out_NormalWS4_g174858;
				float4 In_Shader3_g174859 = Out_Shader4_g174858;
				float4 In_Emissive3_g174859 = Out_Emissive4_g174858;
				float In_Grayscale3_g174859 = Out_Grayscale4_g174858;
				float In_Luminosity3_g174859 = Out_Luminosity4_g174858;
				float In_MultiMask3_g174859 = temp_output_301_11_g174857;
				float In_AlphaClip3_g174859 = Out_AlphaClip4_g174858;
				float In_AlphaFade3_g174859 = Out_AlphaFade4_g174858;
				float3 In_Translucency3_g174859 = Final_Translucency254_g174857;
				float In_Transmission3_g174859 = Final_Transmission269_g174857;
				#ifdef TVE_SUBSURFACE
				float staticSwitch351_g174857 = 0.0;
				#else
				float staticSwitch351_g174857 = 1.0;
				#endif
				half Final_Thickness275_g174857 = staticSwitch351_g174857;
				float In_Thickness3_g174859 = Final_Thickness275_g174857;
				float Final_Diffusion340_g174857 = _SubsurfaceDiffusion;
				float In_Diffusion3_g174859 = Final_Diffusion340_g174857;
				Data3_g174859.Dummy = In_Dummy3_g174859;
				Data3_g174859.Albedo = In_Albedo3_g174859;
				Data3_g174859.AlbedoRaw = In_AlbedoRaw3_g174859;
				Data3_g174859.NormalTS = In_NormalTS3_g174859;
				Data3_g174859.NormalWS = In_NormalWS3_g174859;
				Data3_g174859.Shader = In_Shader3_g174859;
				Data3_g174859.Emissive= In_Emissive3_g174859;
				Data3_g174859.MultiMask = In_MultiMask3_g174859;
				Data3_g174859.Grayscale = In_Grayscale3_g174859;
				Data3_g174859.Luminosity = In_Luminosity3_g174859;
				Data3_g174859.AlphaClip = In_AlphaClip3_g174859;
				Data3_g174859.AlphaFade = In_AlphaFade3_g174859;
				Data3_g174859.Translucency = In_Translucency3_g174859;
				Data3_g174859.Transmission = In_Transmission3_g174859;
				Data3_g174859.Thickness = In_Thickness3_g174859;
				Data3_g174859.Diffusion = In_Diffusion3_g174859;
				TVEVisualData Data4_g174874 = Data3_g174859;
				float Out_Dummy4_g174874 = 0;
				float3 Out_Albedo4_g174874 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g174874 = float3( 0,0,0 );
				float2 Out_NormalTS4_g174874 = float2( 0,0 );
				float3 Out_NormalWS4_g174874 = float3( 0,0,0 );
				float4 Out_Shader4_g174874 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g174874 = float4( 0,0,0,0 );
				float Out_MultiMask4_g174874 = 0;
				float Out_Grayscale4_g174874 = 0;
				float Out_Luminosity4_g174874 = 0;
				float Out_AlphaClip4_g174874 = 0;
				float Out_AlphaFade4_g174874 = 0;
				float3 Out_Translucency4_g174874 = float3( 0,0,0 );
				float Out_Transmission4_g174874 = 0;
				float Out_Thickness4_g174874 = 0;
				float Out_Diffusion4_g174874 = 0;
				Out_Dummy4_g174874 = Data4_g174874.Dummy;
				Out_Albedo4_g174874 = Data4_g174874.Albedo;
				Out_AlbedoRaw4_g174874 = Data4_g174874.AlbedoRaw;
				Out_NormalTS4_g174874 = Data4_g174874.NormalTS;
				Out_NormalWS4_g174874 = Data4_g174874.NormalWS;
				Out_Shader4_g174874 = Data4_g174874.Shader;
				Out_Emissive4_g174874= Data4_g174874.Emissive;
				Out_MultiMask4_g174874 = Data4_g174874.MultiMask;
				Out_Grayscale4_g174874 = Data4_g174874.Grayscale;
				Out_Luminosity4_g174874= Data4_g174874.Luminosity;
				Out_AlphaClip4_g174874 = Data4_g174874.AlphaClip;
				Out_AlphaFade4_g174874 = Data4_g174874.AlphaFade;
				Out_Translucency4_g174874 = Data4_g174874.Translucency;
				Out_Transmission4_g174874 = Data4_g174874.Transmission;
				Out_Thickness4_g174874 = Data4_g174874.Thickness;
				Out_Diffusion4_g174874 = Data4_g174874.Diffusion;
				float temp_output_3_0_g174875 = Out_AlphaClip4_g174874;
				float Alpha19_g174875 = temp_output_3_0_g174875;
				float temp_output_15_0_g174875 = 0.0;
				float Treshold19_g174875 = temp_output_15_0_g174875;
				#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_DITHER)
				#if defined ( TVE_PIPELINE_HD)
				#if !defined(SHADERPASS_FORWARD_BYPASS_ALPHA_TEST) && !defined(SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST)
				clip(Alpha19_g174875 - Treshold19_g174875);
				#endif
				#else
				clip(Alpha19_g174875 - Treshold19_g174875);
				#endif
				#endif
				
				o.Normal = fixed3( 0, 0, 1 );
				#if !defined(ASE_LIGHTING_SIMPLE)
					o.Occlusion = 1;
				#endif
				o.Alpha = saturate( ( Alpha19_g174875 * Out_AlphaFade4_g174874 ) );
				float AlphaClipThreshold = 0.5;
				float AlphaClipThresholdShadow = 0.5;

				#ifdef _ALPHATEST_SHADOW_ON
					if (unity_LightShadowBias.z != 0.0)
						clip(o.Alpha - AlphaClipThresholdShadow);
					#ifdef _ALPHATEST_ON
					else
						clip(o.Alpha - AlphaClipThreshold);
					#endif
				#else
					#ifdef _ALPHATEST_ON
						clip(o.Alpha - AlphaClipThreshold);
					#endif
				#endif

				#if defined( CAN_SKIP_VPOS )
				float2 vpos = IN.pos;
				#endif

				#ifdef UNITY_STANDARD_USE_DITHER_MASK
					half alphaRef = tex3D(_DitherMaskLOD, float3(vpos.xy*0.25,o.Alpha*0.9375)).a;
					clip(alphaRef - 0.01);
				#endif

				#ifdef _DEPTHOFFSET_ON
					outputDepth = IN.pos.z;
				#endif

				SHADOW_CASTER_FRAGMENT(IN)
			}
			ENDCG
		}
		
	}
	CustomEditor "TVEShaderGUICore"
	
	Fallback "Hidden/BOXOPHOBIC/The Visual Engine/Fallback"
}
/*ASEBEGIN
Version=19603
Node;AmplifyShaderEditor.FunctionNode;908;-15488,-384;Inherit;False;Block Model;46;;164551;7ad7765e793a6714babedee0033c36e9;14,289,1,240,1,290,1,291,1,181,0,183,0,185,0,188,0,190,0,184,0,192,0,189,0,300,0,193,0;10;102;FLOAT3;0,0,0;False;163;FLOAT3;0,0,0;False;186;FLOAT3;0,0,0;False;187;FLOAT3;0,0,0;False;166;FLOAT3;0,0,0;False;164;FLOAT3;0,0,0;False;301;FLOAT3;0,0,0;False;167;FLOAT4;0,0,0,0;False;172;FLOAT4;0,0,0,0;False;175;FLOAT4;0,0,0,0;False;2;OBJECT;128;OBJECT;314
Node;AmplifyShaderEditor.RegisterLocalVarNode;761;-15168,-320;Half;False;Model Frag;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;751;-14720,-384;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;994;-14464,-384;Inherit;False;Block Global;56;;173897;212e17d4006dc88449d56ce0340cb5ff;20,315,1,311,1,388,1,317,1,321,1,319,1,376,0,323,1,337,1,282,1,371,1,349,1,385,1,287,1,285,1,276,1,283,1,308,1,348,1,289,1;1;206;OBJECT;0,0,0,0;False;1;OBJECT;151
Node;AmplifyShaderEditor.RegisterLocalVarNode;748;-15168,-384;Half;False;Model Vert;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;762;-8960,-384;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.RegisterLocalVarNode;755;-14144,-384;Half;False;Global Data;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;749;-13696,-384;Inherit;False;748;Model Vert;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;763;-8704,-256;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;764;-8704,-192;Inherit;False;755;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;981;-8704,-384;Inherit;False;Block Main;105;;174142;b04cfed9a7b4c0841afdb49a38c282c5;5,65,1,136,1,41,1,133,1,40,1;1;225;OBJECT;0,0,0,0;False;1;OBJECT;106
Node;AmplifyShaderEditor.FunctionNode;900;-13440,-384;Inherit;False;Block Pivots Sub;-1;;174345;186f08b1bbe15894d9c677d50398679b;0;1;146;OBJECT;0,0,0,0;False;1;OBJECT;128
Node;AmplifyShaderEditor.GetLocalVarNode;766;-8320,-256;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;767;-8320,-192;Inherit;False;755;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;982;-8320,-384;Inherit;False;Block Layer;131;;174348;5f6a6b9e0b5515744bf8e48a9ccead1b;7,986,1,1008,0,709,1,726,1,748,1,747,1,746,1;3;585;OBJECT;0,0,0,0;False;633;OBJECT;0,0,0,0;False;974;OBJECT;0,0,0,0;False;1;OBJECT;552
Node;AmplifyShaderEditor.FunctionNode;905;-13056,-384;Inherit;False;Block Perspective;703;;174382;df5d9c54e8e4098459ebd6b9eabbd8ca;0;1;146;OBJECT;0,0,0,0;False;1;OBJECT;128
Node;AmplifyShaderEditor.GetLocalVarNode;757;-13056,-256;Inherit;False;755;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;818;-7936,-256;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;819;-7936,-192;Inherit;False;755;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;995;-7936,-384;Inherit;False;Block Detail;178;;174386;a5b52fdec7b855a4fba859a90e837892;7,1013,0,990,1,709,1,726,1,748,1,747,1,746,1;3;585;OBJECT;0,0,0,0;False;633;OBJECT;0,0,0,0;False;971;OBJECT;0,0,0,0;False;1;OBJECT;552
Node;AmplifyShaderEditor.FunctionNode;906;-12672,-384;Inherit;False;Block Size Fade;708;;174419;467c36a7402d0274b9ad844bbc95de33;0;2;146;OBJECT;0,0,0,0;False;186;OBJECT;0,0,0,0;False;1;OBJECT;128
Node;AmplifyShaderEditor.GetLocalVarNode;769;-7552,-256;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;991;-7552,-384;Inherit;False;Block Blanket Terrain;223;;174425;f786a155dcaafdd43a82f5635cc418c6;2,1040,1,1084,0;3;585;OBJECT;0,0,0,0;False;633;OBJECT;0,0,0,0;False;971;OBJECT;0,0,0,0;False;1;OBJECT;552
Node;AmplifyShaderEditor.FunctionNode;901;-12288,-384;Inherit;False;Block Motion;728;;174563;d9ac7ad4f0387004fb72c16019bf8392;0;2;146;OBJECT;0,0,0,0;False;212;OBJECT;0,0,0,0;False;2;OBJECT;128;FLOAT;1903
Node;AmplifyShaderEditor.GetLocalVarNode;771;-7168,-256;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;838;-7168,-384;Inherit;False;Block Occlusion;436;;174640;ec16733ec52362048954a75640fbe560;1,210,1;2;144;OBJECT;0,0,0,0;False;204;OBJECT;0,0,0,0;False;1;OBJECT;116
Node;AmplifyShaderEditor.RegisterLocalVarNode;1000;-11840,-256;Half;False;Wave Mask;-1;True;1;0;FLOAT;0;False;1;FLOAT;0
Node;AmplifyShaderEditor.GetLocalVarNode;773;-6784,-256;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;839;-6784,-384;Inherit;False;Block Gradient;448;;174650;1f0cb348753541648acbe7a6adce694e;1,228,1;2;144;OBJECT;0,0,0,0;False;222;OBJECT;0,0,0,0;False;1;OBJECT;116
Node;AmplifyShaderEditor.GetLocalVarNode;1001;-9984,-384;Inherit;False;1000;Wave Mask;1;0;OBJECT;;False;1;FLOAT;0
Node;AmplifyShaderEditor.GetLocalVarNode;775;-6400,-192;Inherit;False;755;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;776;-6400,-256;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;840;-6400,-384;Inherit;False;Block Variation;461;;174660;f25afe21028a28a4e8dee6f6da7bc1a5;0;2;144;OBJECT;0,0,0,0;False;222;OBJECT;0,0,0,0;False;1;OBJECT;116
Node;AmplifyShaderEditor.FunctionNode;1002;-9728,-384;Inherit;False;Block Interp;-1;;174669;e2b225f9519c0194eaa2c47b94bb1bbc;0;4;19;FLOAT;0;False;20;FLOAT;0;False;21;FLOAT;0;False;22;FLOAT;0;False;1;FLOAT4;0
Node;AmplifyShaderEditor.GetLocalVarNode;778;-6016,-192;Inherit;False;755;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;779;-6016,-256;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;997;-6016,-384;Inherit;False;Block Tinting;474;;174670;9f39e156ea8d89e4997ea2a1e194137e;7,352,1,400,0,334,1,336,1,339,1,355,0,344,0;4;198;OBJECT;0,0,0,0;False;223;OBJECT;0,0,0,0;False;207;OBJECT;0,0,0,0;False;346;FLOAT;1;False;1;OBJECT;204
Node;AmplifyShaderEditor.RegisterLocalVarNode;1003;-9408,-384;Half;False;Interp Data;-1;True;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0
Node;AmplifyShaderEditor.FunctionNode;998;-5632,-384;Inherit;False;Block Dryness;503;;174694;f05795de23f951c45bb73c8b4321e4b7;7,398,1,482,0,400,1,403,1,405,1,442,0,410,0;4;279;OBJECT;0,0,0,0;False;297;OBJECT;0,0,0,0;False;281;OBJECT;0,0,0,0;False;409;FLOAT;1;False;1;OBJECT;346
Node;AmplifyShaderEditor.GetLocalVarNode;781;-5632,-256;Inherit;False;1003;Interp Data;1;0;OBJECT;;False;1;FLOAT4;0
Node;AmplifyShaderEditor.GetLocalVarNode;783;-5248,-256;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;784;-5248,-192;Inherit;False;755;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;843;-5248,-384;Inherit;False;Block Highlight;0;;174717;20f1f2e205564b848b07c7637cbf0686;0;2;144;OBJECT;0,0,0,0;False;212;FLOAT4;0,0,0,0;False;1;OBJECT;116
Node;AmplifyShaderEditor.GetLocalVarNode;786;-4864,-192;Inherit;False;755;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;787;-4864,-256;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;985;-4864,-384;Inherit;False;Block Overlay;535;;174720;8ae9c8285a7817844a51243251284d21;9,821,1,819,1,813,1,910,1,826,1,823,1,828,1,844,0,447,0;4;572;OBJECT;0,0,0,0;False;596;OBJECT;0,0,0,0;False;600;OBJECT;0,0,0,0;False;445;FLOAT;1;False;1;OBJECT;566
Node;AmplifyShaderEditor.GetLocalVarNode;789;-4480,-192;Inherit;False;755;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;790;-4480,-256;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;814;-12288,-256;Inherit;False;755;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;986;-4480,-384;Inherit;False;Block Wetness;581;;174756;52c5a1f52507fc44e926833b126e7855;8,850,1,1075,1,857,1,945,1,930,1,1092,1,851,1,1107,1;3;572;OBJECT;0,0,0,0;False;596;OBJECT;0,0,0,0;False;600;OBJECT;0,0,0,0;False;1;OBJECT;566
Node;AmplifyShaderEditor.GetLocalVarNode;792;-4096,-256;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;846;-4096,-384;Inherit;False;Block Cutout;622;;174785;866b4a5fe67e7f34085520e1bb5be2b7;5,775,1,777,1,815,1,779,1,817,1;3;572;OBJECT;0,0,0,0;False;596;OBJECT;0,0,0,0;False;600;OBJECT;0,0,0,0;False;1;OBJECT;566
Node;AmplifyShaderEditor.FunctionNode;949;-11904,-384;Inherit;False;Block Blanket Conform;717;;174798;3ce1684c4351aeb42b79a955aa483301;0;2;146;OBJECT;0,0,0,0;False;186;OBJECT;0,0,0,0;False;1;OBJECT;128
Node;AmplifyShaderEditor.GetLocalVarNode;795;-3712,-192;Inherit;False;755;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;794;-3712,-256;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;851;-3712,-384;Inherit;False;Block Dithering;640;;174805;c7e02d28445e979479d493926695e6f3;6,843,1,859,1,844,1,827,1,879,0,825,0;4;572;OBJECT;0,0,0,0;False;596;OBJECT;0,0,0,0;False;600;OBJECT;0,0,0,0;False;824;FLOAT;1;False;1;OBJECT;566
Node;AmplifyShaderEditor.GetLocalVarNode;816;-11520,-256;Inherit;False;755;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;903;-11520,-384;Inherit;False;Block Transform;-1;;174818;5ac6202bdddd8b34a85c261af6b8de8b;0;1;146;OBJECT;0,0,0,0;False;1;OBJECT;128
Node;AmplifyShaderEditor.GetLocalVarNode;812;-3328,-256;Inherit;False;761;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;797;-3328,-192;Inherit;False;755;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;987;-3328,-384;Inherit;False;Block Emissive;660;;174826;64497f287b9096b43b688b52b4a0bf20;5,282,1,273,1,275,1,264,1,267,1;3;146;OBJECT;0,0,0,0;False;148;OBJECT;0,0,0,0;False;178;OBJECT;0,0,0,0;False;1;OBJECT;183
Node;AmplifyShaderEditor.FunctionNode;992;-11136,-384;Inherit;False;Block Normal;806;;174841;87f7defafe56dbf4b954caf5efc3f5ca;4,1713,1,1693,1,1638,1,1700,1;2;146;OBJECT;0,0,0,0;False;1631;OBJECT;0,0,0,0;False;1;OBJECT;128
Node;AmplifyShaderEditor.FunctionNode;848;-2944,-384;Inherit;False;Block Subsurface;684;;174857;d738d295ada6b1f409db6776b5efe789;3,315,1,359,1,362,0;4;146;OBJECT;0,0,0,0;False;385;OBJECT;0,0,0,0;False;371;OBJECT;0,0,0,0;False;361;FLOAT;1;False;1;OBJECT;183
Node;AmplifyShaderEditor.FunctionNode;907;-10752,-384;Inherit;False;Block Pivots Add;-1;;174864;016babe9e3e643242aa4d123a988150c;0;1;146;OBJECT;0,0,0,0;False;1;OBJECT;128
Node;AmplifyShaderEditor.RegisterLocalVarNode;800;-2624,-384;Half;False;Visual Data;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.RegisterLocalVarNode;999;-10432,-384;Half;False;Model Data;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;802;-1920,-384;Inherit;False;800;Visual Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;801;-1920,-320;Inherit;False;999;Model Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.RangedFloatNode;803;-1744,-768;Half;False;Property;_render_src;_render_src;826;1;[HideInInspector];Create;True;0;0;0;True;0;False;5;1;0;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.RangedFloatNode;804;-1920,-768;Half;False;Property;_render_cull;_render_cull;825;1;[HideInInspector];Create;True;0;3;Both;0;Back;1;Front;2;0;True;0;False;0;2;0;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.RangedFloatNode;805;-1568,-768;Half;False;Property;_render_dst;_render_dst;827;1;[HideInInspector];Create;True;0;2;Opaque;0;Transparent;1;0;True;0;False;10;0;0;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.RangedFloatNode;806;-1392,-768;Half;False;Property;_render_zw;_render_zw;828;1;[HideInInspector];Create;True;0;2;Opaque;0;Transparent;1;0;True;0;False;1;1;0;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.FunctionNode;808;-640,-768;Inherit;False;Base Compile;-1;;174867;e67c8238031dbf04ab79a5d4d63d1b4f;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.RangedFloatNode;807;-1152,-768;Half;False;Property;_render_coverage;_render_coverage;829;1;[HideInInspector];Create;True;0;2;Opaque;0;Transparent;1;0;True;0;False;0;0;0;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.RangedFloatNode;809;-1920,-896;Half;False;Property;_IsBlanketShader;_IsBlanketShader;830;1;[HideInInspector];Create;True;0;2;Opaque;0;Transparent;1;0;True;0;False;1;1;0;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.RangedFloatNode;810;-1696,-896;Half;False;Property;_IsSimpleShader;_IsSimpleShader;831;1;[HideInInspector];Create;True;0;2;Opaque;0;Transparent;1;0;True;0;False;1;1;0;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.FunctionNode;861;-1664,-384;Inherit;False;Block Render;2;;174868;a46c8f81ec84cc34b8c5bbba7c174e1d;0;2;17;OBJECT;;False;19;OBJECT;;False;20;FLOAT3;21;FLOAT3;22;FLOAT3;34;FLOAT3;77;FLOAT;26;FLOAT;27;FLOAT;108;FLOAT;109;FLOAT;72;FLOAT;28;FLOAT;71;FLOAT3;65;FLOAT;66;FLOAT;67;FLOAT;68;FLOAT;73;FLOAT3;37;FLOAT3;30;FLOAT3;32;FLOAT4;33
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;675;-1152,-384;Float;False;False;-1;2;ASEMaterialInspector;0;17;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;ExtraPrePass;0;0;ExtraPrePass;6;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;2;False;0;False;True;1;1;False;;0;False;;0;1;False;;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;True;True;0;False;;0;False;;True;1;LightMode=ForwardBase;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;677;-1152,-384;Float;False;False;-1;2;ASEMaterialInspector;0;17;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;ForwardAdd;0;2;ForwardAdd;0;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;2;False;0;False;True;4;1;False;;1;False;;0;1;False;;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;2;False;;False;False;True;1;LightMode=ForwardAdd;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;678;-1152,-384;Float;False;False;-1;2;ASEMaterialInspector;0;17;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;Deferred;0;3;Deferred;0;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;2;False;0;False;False;False;False;False;False;False;False;False;False;False;False;True;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;1;LightMode=Deferred;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;679;-1152,-384;Float;False;False;-1;2;ASEMaterialInspector;0;17;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;Meta;0;4;Meta;0;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;2;False;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;2;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;1;LightMode=Meta;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;680;-1152,-384;Float;False;False;-1;2;ASEMaterialInspector;0;17;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;ShadowCaster;0;5;ShadowCaster;0;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;2;False;0;False;False;False;False;False;False;False;False;False;False;False;False;True;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;True;1;False;;True;3;False;;False;True;1;LightMode=ShadowCaster;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;676;-1152,-384;Float;False;True;-1;2;TVEShaderGUICore;0;15;BOXOPHOBIC/The Visual Engine/Geometry/Blanket Simple Lit;28cd5599e02859647ae1798e4fcaef6c;True;ForwardBase;0;1;ForwardBase;20;True;True;1;0;True;_render_src;0;True;_render_dst;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;True;_render_coverage;False;True;2;False;_render_cull;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;True;True;1;True;_render_zw;True;0;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;5;False;0;True;True;1;1;True;_render_src;0;True;_render_dst;0;1;False;;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;1;LightMode=ForwardBase;False;False;0;Hidden/BOXOPHOBIC/The Visual Engine/Fallback;0;0;Standard;42;Category;0;0;Workflow;2;638539628949145643;Surface;0;0;  Blend;0;0;  Refraction Model;0;0;  Dither Shadows;1;0;Two Sided;0;638375491637613060;Deferred Pass;0;638541443886061801;Transmission;0;0;  Transmission Shadow;0.5,False,;0;Translucency;0;0;  Translucency Strength;1,False,;0;  Normal Distortion;0.5,False,;0;  Scattering;2,False,;0;  Direct;0.9,False,;0;  Ambient;0.1,False,;0;  Shadow;0.5,False,;0;Cast Shadows;1;0;  Use Shadow Threshold;0;0;Receive Shadows;1;0;Receive Specular;1;0;GPU Instancing;1;0;LOD CrossFade;1;0;Built-in Fog;1;0;Ambient Light;1;0;Meta Pass;1;0;Add Pass;1;0;Override Baked GI;0;0;Extra Pre Pass;0;0;Tessellation;0;0;  Phong;0;0;  Strength;0.5,False,;0;  Type;0;0;  Tess;16,False,;0;  Min;10,False,;0;  Max;25,False,;0;  Edge Length;16,False,;0;  Max Displacement;25,False,;0;Fwd Specular Highlights Toggle;0;0;Fwd Reflections Toggle;0;0;Disable Batching;0;0;Vertex Position,InvertActionOnDeselection;0;638375438096297548;0;6;False;True;True;False;True;True;False;;True;0
WireConnection;761;0;908;314
WireConnection;994;206;751;0
WireConnection;748;0;908;128
WireConnection;755;0;994;151
WireConnection;981;225;762;0
WireConnection;900;146;749;0
WireConnection;982;585;981;106
WireConnection;982;633;763;0
WireConnection;982;974;764;0
WireConnection;905;146;900;128
WireConnection;995;585;982;552
WireConnection;995;633;766;0
WireConnection;995;971;767;0
WireConnection;906;146;905;128
WireConnection;906;186;757;0
WireConnection;991;585;995;552
WireConnection;991;633;818;0
WireConnection;991;971;819;0
WireConnection;901;146;906;128
WireConnection;838;144;991;552
WireConnection;838;204;769;0
WireConnection;1000;0;901;1903
WireConnection;839;144;838;116
WireConnection;839;222;771;0
WireConnection;840;144;839;116
WireConnection;840;222;773;0
WireConnection;1002;22;1001;0
WireConnection;997;198;840;116
WireConnection;997;223;776;0
WireConnection;997;207;775;0
WireConnection;1003;0;1002;0
WireConnection;998;279;997;204
WireConnection;998;297;779;0
WireConnection;998;281;778;0
WireConnection;843;144;998;346
WireConnection;843;212;781;0
WireConnection;985;572;843;116
WireConnection;985;596;783;0
WireConnection;985;600;784;0
WireConnection;986;572;985;566
WireConnection;986;596;787;0
WireConnection;986;600;786;0
WireConnection;846;572;986;566
WireConnection;846;596;790;0
WireConnection;846;600;789;0
WireConnection;949;146;901;128
WireConnection;949;186;814;0
WireConnection;851;572;846;566
WireConnection;851;596;792;0
WireConnection;903;146;949;128
WireConnection;987;146;851;566
WireConnection;987;148;794;0
WireConnection;987;178;795;0
WireConnection;992;146;903;128
WireConnection;992;1631;816;0
WireConnection;848;146;987;183
WireConnection;848;385;812;0
WireConnection;848;371;797;0
WireConnection;907;146;992;128
WireConnection;800;0;848;183
WireConnection;999;0;907;128
WireConnection;861;17;802;0
WireConnection;861;19;801;0
WireConnection;676;0;861;21
WireConnection;676;1;861;22
WireConnection;676;2;861;34
WireConnection;676;20;861;108
WireConnection;676;21;861;109
WireConnection;676;7;861;28
WireConnection;676;15;861;30
WireConnection;676;16;861;32
WireConnection;676;17;861;33
ASEEND*/
//CHKSM=C438D7FDC4A959DDF17CA4E68147993646DCF15E
