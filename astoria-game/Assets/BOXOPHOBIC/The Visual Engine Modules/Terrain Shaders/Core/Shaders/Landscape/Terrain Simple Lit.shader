// Made with Amplify Shader Editor v1.9.6.3
// Available at the Unity Asset Store - http://u3d.as/y3X 
Shader "BOXOPHOBIC/The Visual Engine/Landscape/Terrain Simple Lit"
{
	Properties
	{
		[HideInInspector]_SpecColor("Specular Color", Color) = (1,1,1,1)
		[HideInInspector]_IsVersion("_IsVersion", Float) = 2040
		[HideInInspector]_IsTVEShader("_IsTVEShader", Float) = 1
		[HideInInspector]_IsShared("_IsShared", Float) = 0
		[HideInInspector]_IsIdentifier("_IsIdentifier", Float) = 0
		[HideInInspector]_IsCollected("_IsCollected", Float) = 0
		[HideInInspector]_IsConverted("_IsConverted", Float) = 0
		[HideInInspector]_IsCustomShader("_IsCustomShader", Float) = 0
		[HideInInspector]_HasDefaultTextures("_HasDefaultTextures", Float) = 0
		[StyledCategory(Render Settings, true, 0, 10)]_RenderCategory("[ Render Category ]", Float) = 1
		[Enum(Off,0,On,1)]_RenderSSR("Render SSR", Float) = 0
		[Enum(Off,0,On,1)]_RenderDecals("Render Decals", Float) = 0
		[Enum(Off,0,On,1)]_RenderSpecular("Render Specular", Float) = 1
		[Enum(Off,0,On,1)]_RenderShadow("Render Shadows", Float) = 1
		[Enum(Default,0,Point ,1,Low,2,Medium,3,High,4)]_RenderFilter("Render Filtering", Float) = 0
		[Enum(Off,0,On,1)]_RenderClip("Render Clipping", Float) = 0
		[StyledSpace(10)]_RenderEnd("[ Render End ]", Float) = 1
		[StyledCategory(Global Settings, true, 0, 10)]_GlobalCategory("[ Global Category ]", Float) = 1
		[StyledEnum(Paint Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalPaintLayerValue("Global Paint Layer", Float) = 0
		[StyledEnum(Atmo Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalAtmoLayerValue("Global Atmo Layer", Float) = 0
		[StyledEnum(Fade Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalFadeLayerValue("Global Fade Layer", Float) = 0
		[StyledEnum(Glow Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalGlowLayerValue("Global Glow Layer", Float) = 0
		[StyledEnum(Land Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalLandLayerValue("Global Land Layer", Float) = 0
		[StyledSpace(10)]_GlobalEnd("[ Global End ]", Float) = 1
		[StyledCategory(Terrain Settings, true, 0, 10)]_CategoryTerrain("[Category Terrain ]", Float) = 1
		[HideInInspector]_TerrainSize("Terrain Size", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainPosition("Terrain Position", Vector) = (0,0,0,0)
		[Enum(4 Layers,4,8 Layers,8,12 Layers,12,16 Layers,16)]_TerrainLayersMode("Terrain Layers", Float) = 4
		[Enum(Default,0,Packed,1)]_TerrainTextureMode("Terrain Maps", Float) = 0
		[HDR]_TerrainColor("Terrain Color", Color) = (1,1,1,1)
		_TerrainNormalValue("Terrain Normal", Range( -8 , 8)) = 1
		_TerrainMetallicValue("Terrain Metallic", Range( 0 , 1)) = 1
		_TerrainOcclusionValue("Terrain Occlusion", Range( 0 , 1)) = 1
		_TerrainSmoothnessValue("Terrain Smoothness", Range( 0 , 1)) = 1
		_TerrainHeightBlendValue("Terrain Height Blend", Range( 0 , 1)) = 1
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)][Space(10)]_TerrainSampleMode1("Terrain 01 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode2("Terrain 02 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode3("Terrain 03 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode4("Terrain 04 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode5("Terrain 05 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode6("Terrain 06 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode7("Terrain 07 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode8("Terrain 08 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode9("Terrain 09 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode10("Terrain 10 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode11("Terrain 11 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode12("Terrain 12 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode13("Terrain 13 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode14("Terrain 14 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode15("Terrain 15 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode16("Terrain 16 Sampling", Float) = 0
		[HideInInspector]_TerrainHolesTex("Terrain Holes", 2D) = "white" {}
		[HideInInspector]_TerrainControlTex1("Terrain Control 01", 2D) = "black" {}
		[HideInInspector]_TerrainControlTex2("Terrain Control 02", 2D) = "black" {}
		[HideInInspector]_TerrainControlTex3("Terrain Control 03", 2D) = "black" {}
		[HideInInspector]_TerrainControlTex4("Terrain Control 04", 2D) = "black" {}
		[HideInInspector]_TerrainColor1("Terrain Color 01", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor2("Terrain Color 02", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor3("Terrain Color 03", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor4("Terrain Color 04", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor5("Terrain Color 05", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor6("Terrain Color 06", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor7("Terrain Color 07", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor8("Terrain Color 08", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor9("Terrain Color 09", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor10("Terrain Color 10", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor11("Terrain Color 11", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor12("Terrain Color 12", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor13("Terrain Color 13", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor14("Terrain Color 14", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor15("Terrain Color 15", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor16("Terrain Color 16", Color) = (1,1,1,1)
		[HideInInspector]_TerrainAlbedoTex1("Terrain Albedo 01", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex2("Terrain Albedo 02", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex3("Terrain Albedo 03", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex4("Terrain Albedo 04", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex5("Terrain Albedo 05", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex6("Terrain Albedo 06", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex7("Terrain Albedo 07", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex8("Terrain Albedo 08", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex9("Terrain Albedo 09", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex10("Terrain Albedo 10", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex11("Terrain Albedo 11", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex12("Terrain Albedo 12", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex13("Terrain Albedo 13", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex14("Terrain Albedo 14", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex15("Terrain Albedo 15", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex16("Terrain Albedo 16", 2D) = "white" {}
		[HideInInspector]_TerrainNormalTex1("Terrain Normal 01", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex2("Terrain Normal 02", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex3("Terrain Normal 03", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex4("Terrain Normal 04", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex5("Terrain Normal 05", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex6("Terrain Normal 06", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex7("Terrain Normal 07", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex8("Terrain Normal 08", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex13("Terrain Normal 13", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex9("Terrain Normal 09", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex10("Terrain Normal 10", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex11("Terrain Normal 11", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex12("Terrain Normal 12", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex14("Terrain Normal 14", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex15("Terrain Normal 15", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex16("Terrain Normal 16", 2D) = "gray" {}
		[HideInInspector]_TerrainShaderTex1("Terrain Shader 01", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex2("Terrain Shader 02", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex3("Terrain Shader 03", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex4("Terrain Shader 04", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex5("Terrain Shader 05", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex6("Terrain Shader 06", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex7("Terrain Shader 07", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex8("Terrain Shader 08", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex9("Terrain Shader 09", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex10("Terrain Shader 10", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex11("Terrain Shader 11", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex12("Terrain Shader 12", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex13("Terrain Shader 13", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex14("Terrain Shader 14", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex15("Terrain Shader 15", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex16("Terrain Shader 16", 2D) = "white" {}
		[HideInInspector]_TerrainShaderMin1("Shader Min 01", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax1("Shader Max 01", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin2("Shader Min 02", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax2("Shader Max 02", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin3("Shader Min 03", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax3("Shader Max 03", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin4("Shader Min 04", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax4("Shader Max 04", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin5("Shader Min 05", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax5("Shader Max 05", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin6("Shader Min 06", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax6("Shader Max 06", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin7("Shader Min 07", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax7("Shader Max 07", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin8("Shader Min 08", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax8("Shader Max 08", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin9("Shader Min 09", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax9("Shader Max 09", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin10("Shader Min 10", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax10("Shader Max 10", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin11("Shader Min 11", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax11("Shader Max 11", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin12("Shader Min 12", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax12("Shader Max 12", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin13("Shader Min 13", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax13("Shader Max 13", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin14("Shader Min 14", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax14("Shader Max 14", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin15("Shader Min 15", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax15("Shader Max 15", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin16("Shader Min 16", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax16("Shader Max 16", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams1("Terrain Params 01", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams2("Terrain Params 02", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams3("Terrain Params 03", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams4("Terrain Params 04", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams5("Terrain Params 05", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams6("Terrain Params 06", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams7("Terrain Params 07", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams8("Terrain Params 08", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams9("Terrain Params 09", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams10("Terrain Params 10", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams11("Terrain Params 11", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams12("Terrain Params 12", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams13("Terrain Params 13", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams14("Terrain Params 14", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams15("Terrain Params 15", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams16("Terrain Params 16", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainCoord1("Terrain Coords 01", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord2("Terrain Coords 02", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord3("Terrain Coords 03", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord5("Terrain Coords 05", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord4("Terrain Coords 04", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord6("Terrain Coords 06", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord7("Terrain Coords 07", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord8("Terrain Coords 08", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord9("Terrain Coords 09", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord10("Terrain Coords 10", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord11("Terrain Coords 11", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord12("Terrain Coords 12", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord13("Terrain Coords 13", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord14("Terrain Coords 14", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord15("Terrain Coords 15", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord16("Terrain Coords 16", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainSpecular1("Terrain Specular 01", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular2("Terrain Specular 02", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular3("Terrain Specular 03", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular4("Terrain Specular 04", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular5("Terrain Specular 05", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular6("Terrain Specular 06", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular7("Terrain Specular 07", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular8("Terrain Specular 08", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular9("Terrain Specular 09", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular10("Terrain Specular 10", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular11("Terrain Specular 11", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular12("Terrain Specular 12", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular13("Terrain Specular 13", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular14("Terrain Specular 14", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular15("Terrain Specular 15", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular16("Terrain Specular 16", Color) = (0,0,0,0)
		[StyledSpace(10)]_EndTerrain("[End Terrain ]", Float) = 1
		[StyledCategory(Tinting Settings, true, 0, 10)]_TintingCategory("[ Tinting Category ]", Float) = 1
		[StyledMessage(Info, The current settings are pre baked to the impostor., 0, 10)]_TintingBakeInfo("Tinting Baking Info", Float) = 0
		_TintingIntensityValue("Tinting Intensity", Range( 0 , 1)) = 0
		_TintingGrayValue("Tinting Gray", Range( 0 , 1)) = 1
		[HDR][Gamma]_TintingColor("Tinting Color", Color) = (1,1,1,1)
		[StyledSpace(10)]_TintingSpace("[ Tinting Space ]", Float) = 1
		_TintingMultiValue("Tinting Multi Mask", Range( 0 , 1)) = 1
		_TintingLumaValue("Tinting Luma Mask", Range( 0 , 1)) = 1
		[StyledRemapSlider]_TintingLumaRemap("Tinting Luma Mask", Vector) = (0,1,0,0)
		[StyledRemapSlider]_TintingBlendRemap("Tinting Blend Mask", Vector) = (0.1,0.2,0,0)
		[Space(10)][StyledToggle]_TintingElementMode("Use Paint Globals / Elements", Float) = 1
		[StyledSpace(10)]_TintingEnd("[ Tinting End]", Float) = 1
		[StyledCategory(Dryness Settings, true, 0, 10)]_DrynessCategory("[ Dryness Category ]", Float) = 1
		[StyledMessage(Info, The current settings are pre baked to the impostor., 0, 10)]_DrynessBakeInfo("Dryness Baking Info", Float) = 0
		_DrynessIntensityValue("Dryness Intensity", Range( 0 , 1)) = 0
		_DrynessGrayValue("Dryness Gray", Range( 0 , 1)) = 1
		_DrynessShiftValue("Dryness Shift", Range( 0 , 1)) = 0
		[HDR][Gamma]_DrynessColor("Dryness Color", Color) = (1,0.7083712,0.495283,1)
		_DrynessSubsurfaceValue("Dryness Subsurface", Range( 0 , 1)) = 0.5
		_DrynessSmoothnessValue("Dryness Smoothness", Range( 0 , 1)) = 0.5
		[StyledSpace(10)]_DrynessSpace("[ Dryness Space ]", Float) = 1
		_DrynessMultiValue("Dryness Multi Mask", Range( 0 , 1)) = 1
		_DrynessLumaValue("Dryness Luma Mask", Range( 0 , 1)) = 1
		[StyledRemapSlider]_DrynessLumaRemap("Dryness Luma Mask", Vector) = (0,1,0,0)
		[StyledRemapSlider]_DrynessBlendRemap("Dryness Blend Mask", Vector) = (0.1,0.2,0,0)
		[Space(10)][StyledToggle]_DrynessElementMode("Use Atmo Globals / Elements", Float) = 1
		[StyledSpace(10)]_DrynessEnd("[ Dryness End ]", Float) = 1
		[StyledCategory(Overlay Settings, true, 0, 10)]_OverlayCategory("[ Overlay Category ]", Float) = 1
		[StyledMessage(Info, The current settings are pre baked to the impostor., 0, 10)]_OverlayBakeInfo("Overlay Baking Info", Float) = 0
		_OverlayIntensityValue("Overlay Intensity", Range( 0 , 1)) = 0
		[Enum(Off,0,On,1)]_OverlayTextureMode("Overlay Maps", Float) = 0
		[Space(10)][StyledTextureSingleLine]_OverlayAlbedoTex("Overlay Albedo", 2D) = "white" {}
		[StyledTextureSingleLine]_OverlayNormalTex("Overlay Normal", 2D) = "bump" {}
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochastic Triplanar,3)][Space(10)]_OverlaySampleMode("Overlay Sampling", Float) = 0
		[Enum(Tilling And Offset,0,Scale And Offset,1)]_OverlayCoordMode("Overlay UV Mode", Float) = 0
		[StyledVector(9)]_OverlayCoordValue("Overlay UV Value", Vector) = (1,1,0,0)
		[HDR]_OverlayColor("Overlay Color", Color) = (0.2815503,0.4009458,0.5377358,1)
		_OverlayNormalValue("Overlay Normal", Range( -8 , 8)) = 1
		_OverlaySubsurfaceValue("Overlay Subsurface", Range( 0 , 1)) = 0.5
		_OverlaySmoothnessValue("Overlay Smoothness", Range( 0 , 1)) = 0.5
		[Space(10)][StyledTextureSingleLine]_OverlayGlitterTexRT("Overlay Glitter RT", 2D) = "black" {}
		[Space(10)]_OverlayGlitterIntensityValue("Overlay Glitter Intensity", Range( 0 , 1)) = 0
		[HDR]_OverlayGlitterColor("Overlay Glitter Color", Color) = (0.7215686,1.913725,2.996078,1)
		_OverlayGlitterTillingValue("Overlay Glitter Tilling", Range( 0 , 8)) = 4
		_OverlayGlitterDistValue("Overlay Glitter Limit", Range( 0 , 200)) = 100
		[StyledSpace(10)]_OverlaySpace("[ Overlay Space ]", Float) = 1
		_OverlayLumaValue("Overlay Luma Mask", Range( 0 , 1)) = 1
		[StyledRemapSlider]_OverlayLumaRemap("Overlay Luma Mask", Vector) = (0,1,0,0)
		_OverlayProjValue("Overlay ProjY Mask", Range( 0 , 1)) = 0.5
		[StyledRemapSlider]_OverlayProjRemap("Overlay ProjY Mask", Vector) = (0,1,0,0)
		[StyledRemapSlider]_OverlayBlendRemap1("Overlay Blend Mask", Vector) = (0.1,0.2,0,0)
		[Space(10)][StyledToggle]_OverlayElementMode("Use Atmo Globals / Elements", Float) = 1
		[HideInInspector]_overlay_coord_value("_overlay_coord_value", Vector) = (1,1,0,0)
		[StyledSpace(10)]_OverlayEnd("[ Overlay End ]", Float) = 1
		[StyledCategory(Wetness Settings, true, 0, 10)]_WetnessCategory("[ Wetness Category ]", Float) = 1
		[StyledMessage(Info, The current settings are pre baked to the impostor., 0, 10)]_WetnessBakeInfo("Wetness Baking Info", Float) = 0
		_WetnessIntensityValue("Wetness Intensity", Range( 0 , 1)) = 0
		_WetnessContrastValue("Wetness Contrast", Range( 0 , 1)) = 0.2
		_WetnessSmoothnessValue("Wetness Smoothness", Range( 0 , 1)) = 0.8
		[Space(10)]_WetnessWaterIntensityValue("Wetness Water Intensity", Range( 0 , 1)) = 0
		[HDR]_WetnessWaterColor("Wetness Water Color", Color) = (0.5420078,0.7924528,0.6068289,1)
		_WetnessWaterBaseValue("Wetness Water Base Mask", Range( 0 , 1)) = 1
		[StyledRemapSlider]_WetnessWaterBlendRemap("Wetness Water Blend Mask", Vector) = (0.1,0.2,0,0)
		[Space(10)][StyledTextureSingleLine]_WetnessDropsTexRT("Wetness Drops RT", 2D) = "white" {}
		[Space(10)]_WetnessDropsIntensityValue("Wetness Drops Intensity", Range( 0 , 1)) = 1
		_WetnessDropsNormalValue("Wetness Drops Normal", Range( -8 , 8)) = 1
		_WetnessDropsTillingValue("Wetness Drops Tilling", Range( 0 , 8)) = 0.25
		_WetnessDropsDistValue("Wetness Drops Limit", Range( 0 , 200)) = 50
		[Space(10)][StyledToggle]_WetnessElementMode("Use Atmo Globals / Elements", Float) = 1
		[StyledSpace(10)]_WetnessEnd("[ Wetness End ]", Float) = 1
		[StyledCategory(Cutout Settings, true, 0, 10)]_CutoutCategory("[ Cutout Category ]", Float) = 1
		[StyledMessage(Info, The current settings are pre baked to the impostor., 0, 10)]_CutoutBakeInfo("Cutout Baking Info", Float) = 0
		_CutoutIntensityValue("Cutout Intensity", Range( 0 , 1)) = 0
		[Space(10)][StyledToggle]_CutoutElementMode("Use Fade Globals / Elements", Float) = 1
		[StyledSpace(10)]_CutoutEnd("[ Cutout End ]", Float) = 1
		[StyledCategory(Emissive Settings, true, 0, 10)]_EmissiveCategory("[ Emissive Category ]", Float) = 1
		_EmissiveIntensityValue("Emissive Intensity", Range( 0 , 1)) = 0
		[Enum(None,0,Any,1,Baked,2,Realtime,3)]_EmissiveFlagMode("Emissive GI Mode", Float) = 0
		[Enum(Constant,0,Multiply With Base Albedo,1)]_EmissiveColorMode("Emissive Color", Float) = 0
		[HDR]_EmissiveColor("Emissive Color", Color) = (1,1,1,1)
		[Enum(Nits,0,EV100,1)]_EmissivePowerMode("Emissive Power", Float) = 0
		_EmissivePowerValue("Emissive Power", Float) = 1
		[Space(10)][StyledToggle]_EmissiveElementMode("Use Glow Globals / Elements", Float) = 0
		[StyledSpace(10)]_EmissiveEnd("[ Emissive End ]", Float) = 1
		[HideInInspector]_emissive_power_value("_emissive_power_value", Float) = 1
		[StyledCategory(Landscape Settings, true, 0, 10)]_LandscapeCategory("[ Landscape Category ]", Float) = 1
		[StyledMessage(Info, The Landscape feature require elements to work. Use Land Height elements to offset the terrain height. Please note__ the height effect is only visual and it does not affect the actual terrain height., 0, 10)]_LandscapeInfo("# Landscape Info", Float) = 0
		_LandscapeHeightValue("Landscape Height", Range( 0 , 1)) = 0
		[StyledSpace(10)]_LandscapeEnd("[ Landscape End ]", Float) = 1
		[HideInInspector]_object_phase_mode("_object_phase_mode", Vector) = (0,0,0,0)
		[HideInInspector]_IsTerrainShader("_IsTerrainShader", Float) = 1
		[HideInInspector]_IsSimpleShader("_IsSimpleShader", Float) = 1

		//_TransmissionShadow( "Transmission Shadow", Range( 0, 1 ) ) = 0.5
		//_TransStrength( "Trans Strength", Range( 0, 50 ) ) = 1
		//_TransNormal( "Trans Normal Distortion", Range( 0, 1 ) ) = 0.5
		//_TransScattering( "Trans Scattering", Range( 1, 50 ) ) = 2
		//_TransDirect( "Trans Direct", Range( 0, 1 ) ) = 0.9
		//_TransAmbient( "Trans Ambient", Range( 0, 1 ) ) = 0.1
		//_TransShadow( "Trans Shadow", Range( 0, 1 ) ) = 0.5
		//_TessPhongStrength( "Tess Phong Strength", Range( 0, 1 ) ) = 0.5
		//_TessValue( "Tess Max Tessellation", Range( 1, 32 ) ) = 16
		//_TessMin( "Tess Min Distance", Float ) = 10
		//_TessMax( "Tess Max Distance", Float ) = 25
		//_TessEdgeLength ( "Tess Edge length", Range( 2, 50 ) ) = 16
		//_TessMaxDisp( "Tess Max Displacement", Float ) = 25
		//[ToggleOff] _SpecularHighlights("Specular Highlights", Float) = 1.0
		//[ToggleOff] _GlossyReflections("Reflections", Float) = 1.0
	}

	SubShader
	{
		
		Tags { "RenderType"="Opaque" "Queue"="Geometry" "DisableBatching"="True" "TerrainCompatible"="True" }
	LOD 0

		Cull Back
		AlphaToMask Off
		ZWrite On
		ZTest LEqual
		ColorMask RGBA
		
		Blend Off
		

		CGINCLUDE
		#pragma target 4.5

		float4 FixedTess( float tessValue )
		{
			return tessValue;
		}

		float CalcDistanceTessFactor (float4 vertex, float minDist, float maxDist, float tess, float4x4 o2w, float3 cameraPos )
		{
			float3 wpos = mul(o2w,vertex).xyz;
			float dist = distance (wpos, cameraPos);
			float f = clamp(1.0 - (dist - minDist) / (maxDist - minDist), 0.01, 1.0) * tess;
			return f;
		}

		float4 CalcTriEdgeTessFactors (float3 triVertexFactors)
		{
			float4 tess;
			tess.x = 0.5 * (triVertexFactors.y + triVertexFactors.z);
			tess.y = 0.5 * (triVertexFactors.x + triVertexFactors.z);
			tess.z = 0.5 * (triVertexFactors.x + triVertexFactors.y);
			tess.w = (triVertexFactors.x + triVertexFactors.y + triVertexFactors.z) / 3.0f;
			return tess;
		}

		float CalcEdgeTessFactor (float3 wpos0, float3 wpos1, float edgeLen, float3 cameraPos, float4 scParams )
		{
			float dist = distance (0.5 * (wpos0+wpos1), cameraPos);
			float len = distance(wpos0, wpos1);
			float f = max(len * scParams.y / (edgeLen * dist), 1.0);
			return f;
		}

		float DistanceFromPlane (float3 pos, float4 plane)
		{
			float d = dot (float4(pos,1.0f), plane);
			return d;
		}

		bool WorldViewFrustumCull (float3 wpos0, float3 wpos1, float3 wpos2, float cullEps, float4 planes[6] )
		{
			float4 planeTest;
			planeTest.x = (( DistanceFromPlane(wpos0, planes[0]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos1, planes[0]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos2, planes[0]) > -cullEps) ? 1.0f : 0.0f );
			planeTest.y = (( DistanceFromPlane(wpos0, planes[1]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos1, planes[1]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos2, planes[1]) > -cullEps) ? 1.0f : 0.0f );
			planeTest.z = (( DistanceFromPlane(wpos0, planes[2]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos1, planes[2]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos2, planes[2]) > -cullEps) ? 1.0f : 0.0f );
			planeTest.w = (( DistanceFromPlane(wpos0, planes[3]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos1, planes[3]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlane(wpos2, planes[3]) > -cullEps) ? 1.0f : 0.0f );
			return !all (planeTest);
		}

		float4 DistanceBasedTess( float4 v0, float4 v1, float4 v2, float tess, float minDist, float maxDist, float4x4 o2w, float3 cameraPos )
		{
			float3 f;
			f.x = CalcDistanceTessFactor (v0,minDist,maxDist,tess,o2w,cameraPos);
			f.y = CalcDistanceTessFactor (v1,minDist,maxDist,tess,o2w,cameraPos);
			f.z = CalcDistanceTessFactor (v2,minDist,maxDist,tess,o2w,cameraPos);

			return CalcTriEdgeTessFactors (f);
		}

		float4 EdgeLengthBasedTess( float4 v0, float4 v1, float4 v2, float edgeLength, float4x4 o2w, float3 cameraPos, float4 scParams )
		{
			float3 pos0 = mul(o2w,v0).xyz;
			float3 pos1 = mul(o2w,v1).xyz;
			float3 pos2 = mul(o2w,v2).xyz;
			float4 tess;
			tess.x = CalcEdgeTessFactor (pos1, pos2, edgeLength, cameraPos, scParams);
			tess.y = CalcEdgeTessFactor (pos2, pos0, edgeLength, cameraPos, scParams);
			tess.z = CalcEdgeTessFactor (pos0, pos1, edgeLength, cameraPos, scParams);
			tess.w = (tess.x + tess.y + tess.z) / 3.0f;
			return tess;
		}

		float4 EdgeLengthBasedTessCull( float4 v0, float4 v1, float4 v2, float edgeLength, float maxDisplacement, float4x4 o2w, float3 cameraPos, float4 scParams, float4 planes[6] )
		{
			float3 pos0 = mul(o2w,v0).xyz;
			float3 pos1 = mul(o2w,v1).xyz;
			float3 pos2 = mul(o2w,v2).xyz;
			float4 tess;

			if (WorldViewFrustumCull(pos0, pos1, pos2, maxDisplacement, planes))
			{
				tess = 0.0f;
			}
			else
			{
				tess.x = CalcEdgeTessFactor (pos1, pos2, edgeLength, cameraPos, scParams);
				tess.y = CalcEdgeTessFactor (pos2, pos0, edgeLength, cameraPos, scParams);
				tess.z = CalcEdgeTessFactor (pos0, pos1, edgeLength, cameraPos, scParams);
				tess.w = (tess.x + tess.y + tess.z) / 3.0f;
			}
			return tess;
		}
		ENDCG

		UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
	UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"

		Pass
		{
			
			Name "ForwardBase"
			Tags { "LightMode"="ForwardBase" }

			Blend One Zero

			CGPROGRAM
			#define ASE_NEEDS_FRAG_SHADOWCOORDS
			#pragma shader_feature_local_fragment _ _SPECULARHIGHLIGHTS_OFF
			#pragma multi_compile __ LOD_FADE_CROSSFADE
			#pragma multi_compile_fog
			#define ASE_FOG 1
			#define ASE_ABSOLUTE_VERTEX_POS 1
			#define ASE_TERRAIN 1
			#define _SPECULAR_SETUP 1
			#define ASE_LIGHTING_SIMPLE 1
			#define _ENVIRONMENTREFLECTIONS_OFF 1
			#define ASE_USING_SAMPLING_MACROS 1

			#pragma vertex vert
			#pragma fragment frag
			#pragma multi_compile_fwdbase
			#ifndef UNITY_PASS_FORWARDBASE
				#define UNITY_PASS_FORWARDBASE
			#endif
			#include "HLSLSupport.cginc"

			#ifdef ASE_GEOMETRY
				#ifndef UNITY_INSTANCED_LOD_FADE
					#define UNITY_INSTANCED_LOD_FADE
				#endif
				#ifndef UNITY_INSTANCED_SH
					#define UNITY_INSTANCED_SH
				#endif
				#ifndef UNITY_INSTANCED_LIGHTMAPSTS
					#define UNITY_INSTANCED_LIGHTMAPSTS
				#endif
			#endif

			#include "UnityShaderVariables.cginc"
			#include "UnityCG.cginc"
			#include "Lighting.cginc"
			#include "UnityPBSLighting.cginc"
			#include "AutoLight.cginc"

			#define ASE_NEEDS_VERT_POSITION
			#define ASE_NEEDS_VERT_NORMAL
			#define ASE_NEEDS_VERT_TANGENT
			#define ASE_NEEDS_FRAG_WORLD_POSITION
			#define ASE_NEEDS_FRAG_WORLD_NORMAL
			#define ASE_NEEDS_FRAG_WORLD_TANGENT
			#define ASE_NEEDS_FRAG_WORLD_BITANGENT
			#pragma shader_feature_local_fragment TVE_PIPELINE_STANDARD TVE_PIPELINE_UNIVERSAL TVE_PIPELINE_HD
			#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
			#pragma shader_feature_local_vertex TVE_LANDSCAPE
			#pragma shader_feature_local_fragment TVE_WETNESS
			#pragma shader_feature_local_fragment TVE_OVERLAY
			#pragma shader_feature_local_fragment TVE_DRYNESS
			#pragma shader_feature_local_fragment TVE_TINTING
			#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
			#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
			#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
			#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
			#pragma shader_feature_local_fragment TVE_DRYNESS_SHIFT
			#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
			#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
			#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_WATER
			#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
			#pragma shader_feature_local_fragment TVE_EMISSIVE
			#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
			#pragma shader_feature_local_fragment TVE_CUTOUT
			#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
			#pragma multi_compile_instancing
			#pragma instancing_options assumeuniformscaling nomatrices nolightprobe nolightmap forwardadd
			  
			struct TVEVisualData
			{  
				half Dummy;  
				half3 Albedo;
				half3 AlbedoRaw;
				half2 NormalTS;
				half3 NormalWS; 
				half4 Shader;
				half4 Emissive;
				half AlphaClip;
				half AlphaFade;
				half MultiMask;
				half Grayscale;
				half Luminosity;
				half3 Translucency;
				half Transmission;
				half Thickness;
				float Diffusion;
			};  
			    
			struct TVEModelData
			{    
				half Dummy;    
				half3 PositionOS;
				half3 PositionWS;
				half3 PositionWO;
				half3 PositionRawOS;
				half3 PositionAddOS;
				half3 PivotOS;
				half3 PivotWS;
				half3 PivotWO;
				half3 NormalOS;
				half3 NormalWS;
				half3 NormalRawOS;
				half3 NormalRawWS;
				half4 TangentOS;
				half3 ViewDirWS;
				half4 VertexData;
				half4 MotionData;
				half4 BoundsData;
				half4 RotationData;
			};    
			      
			struct TVEGlobalData
			{      
				half Dummy;      
				half4 CoatParams;
				half4 PaintParams;
				half4 GlowParams;
				half4 AtmoParams;
				half4 FadeParams;
				half4 FormParams;
				half4 LandParams;
				half4 WindParams;
				half4 PushParams;
			};      
			        
			//#pragma editor_sync_compilation
			#if defined(SHADER_API_D3D11) || defined(SHADER_API_XBOXONE) || defined(UNITY_COMPILER_HLSLCC) || defined(SHADER_API_PSSL) || (defined(SHADER_TARGET_SURFACE_ANALYSIS) && !defined(SHADER_TARGET_SURFACE_ANALYSIS_MOJOSHADER))//ASE Sampler Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex.SampleBias(samplerTex,coord,bias)
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex.SampleGrad(samplerTex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#else//ASE Sampling Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex2D(tex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex2Dlod(tex,float4(coord,0,lod))
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex2Dbias(tex,float4(coord,0,bias))
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex2Dgrad(tex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplertex,coord,lod) tex2DArraylod(tex, float4(coord,lod))
			#endif//ASE Sampling Macros
			

			struct appdata {
				float4 vertex : POSITION;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;
				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct v2f {
				#if UNITY_VERSION >= 201810
					UNITY_POSITION(pos);
				#else
					float4 pos : SV_POSITION;
				#endif
				#if defined(LIGHTMAP_ON) || (!defined(LIGHTMAP_ON) && SHADER_TARGET >= 30)
					float4 lmap : TEXCOORD0;
				#endif
				#if !defined(LIGHTMAP_ON) && UNITY_SHOULD_SAMPLE_SH
					half3 sh : TEXCOORD1;
				#endif
				#if defined(UNITY_HALF_PRECISION_FRAGMENT_SHADER_REGISTERS) && UNITY_VERSION >= 201810 && defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					UNITY_LIGHTING_COORDS(2,3)
				#elif defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					#if UNITY_VERSION >= 201710
						UNITY_SHADOW_COORDS(2)
					#else
						SHADOW_COORDS(2)
					#endif
				#endif
				#ifdef ASE_FOG
					UNITY_FOG_COORDS(4)
				#endif
				float4 tSpace0 : TEXCOORD5;
				float4 tSpace1 : TEXCOORD6;
				float4 tSpace2 : TEXCOORD7;
				#if defined(ASE_NEEDS_FRAG_SCREEN_POSITION)
				float4 screenPos : TEXCOORD8;
				#endif
				float4 ase_texcoord9 : TEXCOORD9;
				float4 ase_color : COLOR;
				float4 ase_texcoord10 : TEXCOORD10;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				UNITY_VERTEX_OUTPUT_STEREO
			};

			#ifdef ASE_TRANSMISSION
				float _TransmissionShadow;
			#endif
			#ifdef ASE_TRANSLUCENCY
				float _TransStrength;
				float _TransNormal;
				float _TransScattering;
				float _TransDirect;
				float _TransAmbient;
				float _TransShadow;
			#endif
			#ifdef ASE_TESSELLATION
				float _TessPhongStrength;
				float _TessValue;
				float _TessMin;
				float _TessMax;
				float _TessEdgeLength;
				float _TessMaxDisp;
			#endif
			uniform half _TerrainLayersMode;
			uniform half _TerrainSampleMode1;
			uniform half _TerrainSampleMode2;
			uniform half _TerrainSampleMode3;
			uniform half _TerrainSampleMode4;
			uniform half _TerrainSampleMode5;
			uniform half _TerrainSampleMode6;
			uniform half _TerrainSampleMode7;
			uniform half _TerrainSampleMode8;
			uniform half _TerrainSampleMode9;
			uniform half _TerrainSampleMode10;
			uniform half _TerrainSampleMode11;
			uniform half _TerrainSampleMode12;
			uniform half _TerrainSampleMode13;
			uniform half _TerrainSampleMode14;
			uniform half _TerrainSampleMode15;
			uniform half _TerrainSampleMode16;
			uniform half _TerrainTextureMode;
			uniform half _IsTerrainShader;
			uniform half _RenderCategory;
			uniform half _RenderEnd;
			uniform half _IsTVEShader;
			uniform half _IsCustomShader;
			uniform half _IsShared;
			uniform half _HasDefaultTextures;
			uniform half _IsCollected;
			uniform half _IsConverted;
			uniform half _IsIdentifier;
			uniform half _RenderDecals;
			uniform half _RenderSSR;
			uniform half _RenderClip;
			uniform half _IsVersion;
			uniform half _RenderShadow;
			uniform half _RenderFilter;
			uniform half _IsSimpleShader;
			uniform half _LandscapeCategory;
			uniform half _LandscapeEnd;
			uniform half _LandscapeInfo;
			uniform float3 TVE_WorldOrigin;
			uniform half4 _object_phase_mode;
			uniform half _GlobalCategory;
			uniform half _GlobalEnd;
			uniform half4 TVE_CoatParams;
			uniform half _GlobalPaintLayerValue;
			uniform float TVE_PaintLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintBaseTex);
			uniform half4 TVE_RenderBaseCoords;
			SamplerState sampler_Linear_Clamp;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintNearTex);
			uniform half4 TVE_RenderNearCoords;
			SamplerState sampler_Linear_Repeat;
			uniform float4 TVE_RenderNearPositionR;
			uniform half TVE_RenderNearFadeValue;
			uniform half4 TVE_PaintParams;
			uniform half _GlobalGlowLayerValue;
			uniform float TVE_GlowLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowNearTex);
			uniform half4 TVE_GlowParams;
			uniform half _GlobalAtmoLayerValue;
			uniform float TVE_AtmoLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoNearTex);
			uniform half4 TVE_AtmoParams;
			uniform half _GlobalFadeLayerValue;
			uniform float TVE_FadeLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeNearTex);
			uniform half4 TVE_FadeParams;
			uniform half4 TVE_FormParams;
			uniform half _GlobalLandLayerValue;
			uniform float TVE_LandLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_LandBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_LandNearTex);
			uniform half4 TVE_LandParams;
			uniform half4 TVE_WindParams;
			uniform half4 TVE_PushParams;
			uniform half _LandscapeHeightValue;
			uniform half TVE_IsEnabled;
			uniform half _CutoutCategory;
			uniform half _CutoutEnd;
			uniform half _CutoutElementMode;
			uniform half _CutoutBakeInfo;
			uniform half _EmissiveCategory;
			uniform half _EmissiveEnd;
			uniform half _EmissivePowerMode;
			uniform half _EmissivePowerValue;
			uniform half _EmissiveElementMode;
			uniform half _EmissiveFlagMode;
			uniform half _WetnessCategory;
			uniform half _WetnessEnd;
			uniform half _WetnessElementMode;
			uniform half _WetnessBakeInfo;
			uniform half _OverlayCategory;
			uniform half _OverlayEnd;
			uniform half _OverlaySpace;
			uniform half _OverlayElementMode;
			uniform half _OverlayBakeInfo;
			uniform half _DrynessCategory;
			uniform half _DrynessEnd;
			uniform half _DrynessSpace;
			uniform half _DrynessElementMode;
			uniform half _DrynessBakeInfo;
			uniform half _TintingCategory;
			uniform half _TintingEnd;
			uniform half _TintingSpace;
			uniform half _TintingBakeInfo;
			uniform half _CategoryTerrain;
			uniform half _EndTerrain;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex1);
			uniform half4 _TerrainPosition;
			uniform half4 _TerrainSize;
			float4 _TerrainControlTex1_TexelSize;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex1);
			SamplerState sampler_Point_Repeat;
			SamplerState sampler_Linear_Repeat_Aniso8;
			uniform half4 _TerrainCoord1;
			uniform half4 _TerrainShaderMin1;
			uniform half4 _TerrainShaderMax1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex2);
			uniform half4 _TerrainCoord2;
			uniform half4 _TerrainShaderMin2;
			uniform half4 _TerrainShaderMax2;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex3);
			uniform half4 _TerrainCoord3;
			uniform half4 _TerrainShaderMin3;
			uniform half4 _TerrainShaderMax3;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex4);
			uniform half4 _TerrainCoord4;
			uniform half4 _TerrainShaderMin4;
			uniform half4 _TerrainShaderMax4;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex5);
			uniform half4 _TerrainCoord5;
			uniform half4 _TerrainShaderMin5;
			uniform half4 _TerrainShaderMax5;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex6);
			uniform half4 _TerrainCoord6;
			uniform half4 _TerrainShaderMin6;
			uniform half4 _TerrainShaderMax6;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex7);
			uniform half4 _TerrainCoord7;
			uniform half4 _TerrainShaderMin7;
			uniform half4 _TerrainShaderMax7;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex8);
			uniform half4 _TerrainCoord8;
			uniform half4 _TerrainShaderMin8;
			uniform half4 _TerrainShaderMax8;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex9);
			uniform half4 _TerrainCoord9;
			uniform half4 _TerrainShaderMin9;
			uniform half4 _TerrainShaderMax9;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex10);
			uniform half4 _TerrainCoord10;
			uniform half4 _TerrainShaderMin10;
			uniform half4 _TerrainShaderMax10;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex11);
			uniform half4 _TerrainCoord11;
			uniform half4 _TerrainShaderMin11;
			uniform half4 _TerrainShaderMax11;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex12);
			uniform half4 _TerrainCoord12;
			uniform half4 _TerrainShaderMin12;
			uniform half4 _TerrainShaderMax12;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex13);
			uniform half4 _TerrainCoord13;
			uniform half4 _TerrainShaderMin13;
			uniform half4 _TerrainShaderMax13;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex14);
			uniform half4 _TerrainCoord14;
			uniform half4 _TerrainShaderMin14;
			uniform half4 _TerrainShaderMax14;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex15);
			uniform half4 _TerrainCoord15;
			uniform half4 _TerrainShaderMin15;
			uniform half4 _TerrainShaderMax15;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex16);
			uniform half4 _TerrainCoord16;
			uniform half4 _TerrainShaderMin16;
			uniform half4 _TerrainShaderMax16;
			uniform half _TerrainHeightBlendValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex16);
			uniform half4 _TerrainColor1;
			uniform half4 _TerrainColor2;
			uniform half4 _TerrainColor3;
			uniform half4 _TerrainColor4;
			uniform half4 _TerrainColor5;
			uniform half4 _TerrainColor6;
			uniform half4 _TerrainColor7;
			uniform half4 _TerrainColor8;
			uniform half4 _TerrainColor9;
			uniform half4 _TerrainColor10;
			uniform half4 _TerrainColor11;
			uniform half4 _TerrainColor12;
			uniform half4 _TerrainColor13;
			uniform half4 _TerrainColor14;
			uniform half4 _TerrainColor15;
			uniform half4 _TerrainColor16;
			uniform half4 _TerrainColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex16);
			uniform half4 _TerrainParams1;
			uniform half4 _TerrainParams2;
			uniform half4 _TerrainParams3;
			uniform half4 _TerrainParams4;
			uniform half4 _TerrainParams5;
			uniform half4 _TerrainParams6;
			uniform half4 _TerrainParams7;
			uniform half4 _TerrainParams8;
			uniform half4 _TerrainParams9;
			uniform half4 _TerrainParams10;
			uniform half4 _TerrainParams11;
			uniform half4 _TerrainParams12;
			uniform half4 _TerrainParams13;
			uniform half4 _TerrainParams14;
			uniform half4 _TerrainParams15;
			uniform half4 _TerrainParams16;
			uniform half _TerrainNormalValue;
			uniform half _TerrainMetallicValue;
			uniform half _TerrainOcclusionValue;
			uniform half _TerrainSmoothnessValue;
			uniform half4 _TerrainSpecular1;
			uniform half4 _TerrainSpecular2;
			uniform half4 _TerrainSpecular3;
			uniform half4 _TerrainSpecular4;
			uniform half4 _TerrainSpecular5;
			uniform half4 _TerrainSpecular6;
			uniform half4 _TerrainSpecular7;
			uniform half4 _TerrainSpecular8;
			uniform half4 _TerrainSpecular9;
			uniform half4 _TerrainSpecular10;
			uniform half4 _TerrainSpecular11;
			uniform half4 _TerrainSpecular12;
			uniform half4 _TerrainSpecular13;
			uniform half4 _TerrainSpecular14;
			uniform half4 _TerrainSpecular15;
			uniform half4 _TerrainSpecular16;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainHolesTex);
			uniform half _TintingElementMode;
			uniform half _TintingGrayValue;
			uniform float4 _TintingColor;
			uniform half _TintingIntensityValue;
			uniform half _TintingMultiValue;
			uniform half4 _TintingLumaRemap;
			uniform half _TintingLumaValue;
			uniform half4 _TintingBlendRemap;
			uniform half _DrynessGrayValue;
			uniform half _DrynessShiftValue;
			uniform float4 _DrynessColor;
			uniform half _DrynessIntensityValue;
			uniform half _DrynessMultiValue;
			uniform half4 _DrynessLumaRemap;
			uniform half _DrynessLumaValue;
			uniform half4 _DrynessBlendRemap;
			uniform half _DrynessSmoothnessValue;
			uniform half _DrynessSubsurfaceValue;
			uniform half4 _OverlayColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayAlbedoTex);
			uniform half4 _overlay_coord_value;
			uniform half _OverlaySampleMode;
			uniform half _OverlayCoordMode;
			uniform half4 _OverlayCoordValue;
			uniform half _OverlayTextureMode;
			uniform half _OverlayGlitterIntensityValue;
			uniform half4 _OverlayGlitterColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayGlitterTexRT);
			uniform half _OverlayGlitterTillingValue;
			uniform half _OverlayGlitterDistValue;
			uniform half _OverlayIntensityValue;
			uniform half4 _OverlayProjRemap;
			uniform half _OverlayProjValue;
			uniform half4 _OverlayLumaRemap;
			uniform half _OverlayLumaValue;
			uniform half4 _OverlayBlendRemap1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayNormalTex);
			uniform half _OverlayNormalValue;
			uniform half _OverlaySmoothnessValue;
			uniform half _OverlaySubsurfaceValue;
			uniform half4 _WetnessWaterColor;
			uniform half _WetnessWaterIntensityValue;
			uniform half _WetnessIntensityValue;
			uniform half _WetnessWaterBaseValue;
			uniform half4 _WetnessWaterBlendRemap;
			uniform half _WetnessContrastValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_WetnessDropsTexRT);
			uniform half _WetnessDropsTillingValue;
			uniform half _WetnessDropsIntensityValue;
			uniform half _WetnessDropsNormalValue;
			uniform half _WetnessDropsDistValue;
			uniform half _WetnessSmoothnessValue;
			uniform half _EmissiveIntensityValue;
			uniform half4 _EmissiveColor;
			uniform half _EmissiveColorMode;
			uniform float _emissive_power_value;
			uniform half _CutoutIntensityValue;
			uniform half _RenderSpecular;
			#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
				sampler2D _TerrainHeightmapTexture;//ASE Terrain Instancing
				sampler2D _TerrainNormalmapTexture;//ASE Terrain Instancing
			#endif//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_START( Terrain )//ASE Terrain Instancing
				UNITY_DEFINE_INSTANCED_PROP( float4, _TerrainPatchInstanceData )//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_END( Terrain)//ASE Terrain Instancing
			CBUFFER_START( UnityTerrain)//ASE Terrain Instancing
				#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
					float4 _TerrainHeightmapRecipSize;//ASE Terrain Instancing
					float4 _TerrainHeightmapScale;//ASE Terrain Instancing
				#endif//ASE Terrain Instancing
			CBUFFER_END//ASE Terrain Instancing


			void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
			{
				ZX = WorldPosition.xz * Coords.xx - Coords.zz;
				ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
				XY = WorldPosition.xy * Coords.xy - Coords.zw;
			}
			
			half4 SamplePlanar2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
			{
				half3 powNormal = abs( WorldNormal.xyz );
				half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
				weights /= ( weights.x + weights.y + weights.z ).xxx;
				T1 = weights.y;
				T2 = weights.x;
				T3 = weights.z;
			}
			
			half4 SamplePlanar3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
				half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
				half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
				return tex1 * T1 + tex2 * T2 + tex3 * T3;
			}
			
			void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
			{
				half2 vertex1, vertex2, vertex3;
				// Scaling of the input
				half2 uv = UV * 3.464; // 2 * sqrt (3)
				// Skew input space into simplex triangle grid
				const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
				half2 skewedCoord = mul( gridToSkewedGrid, uv );
				// Compute local triangle vertex IDs and local barycentric coordinates
				int2 baseId = int2( floor( skewedCoord ) );
				half3 temp = half3( frac( skewedCoord ), 0 );
				temp.z = 1.0 - temp.x - temp.y;
				if ( temp.z > 0.0 )
				{
					W1 = temp.z;
					W2 = temp.y;
					W3 = temp.x;
					vertex1 = baseId;
					vertex2 = baseId + int2( 0, 1 );
					vertex3 = baseId + int2( 1, 0 );
				}
				else
				{
					W1 = -temp.z;
					W2 = 1.0 - temp.y;
					W3 = 1.0 - temp.x;
					vertex1 = baseId + int2( 1, 1 );
					vertex2 = baseId + int2( 1, 0 );
					vertex3 = baseId + int2( 0, 1 );
				}
				UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
				UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
				UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
				return;
			}
			
			float4 SampleStochastic2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
				half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
				half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
				half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
				return tex1 * W1 + tex2 * W2 + tex3 * W3;
			}
			
			half4 SampleStochastic3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				half4 tex1, tex2, tex3;
				ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
				half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
				half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
				half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				return texZX * T1 + texZY * T2 + texXY * T3;
			}
			
			half3 HSVToRGB( half3 c )
			{
				half4 K = half4( 1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0 );
				half3 p = abs( frac( c.xxx + K.xyz ) * 6.0 - K.www );
				return c.z * lerp( K.xxx, saturate( p - K.xxx ), c.y );
			}
			
			half3 RGBToHSV(half3 c)
			{
				half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
				half4 p = lerp( half4( c.bg, K.wz ), half4( c.gb, K.xy ), step( c.b, c.g ) );
				half4 q = lerp( half4( p.xyw, c.r ), half4( c.r, p.yzx ), step( p.x, c.r ) );
				half d = q.x - min( q.w, q.y );
				half e = 1.0e-10;
				return half3( abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
			}
			half ShadowPassCheck33_g117048( half True, half False )
			{
				half result;
				#if defined(UNITY_PASS_DEFERRED)
					result = True;
				#else
					result = False;
				#endif
				return result;
			}
			
			half ShadowPassCheck33_g117049( half True, half False )
			{
				half result;
				#if defined(UNITY_PASS_DEFERRED)
					result = True;
				#else
					result = False;
				#endif
				return result;
			}
			
			appdata ApplyMeshModification( appdata v ){
			#ifdef UNITY_INSTANCING_ENABLED
				float2 patchVertex = v.vertex.xy;
				float4 instanceData = UNITY_ACCESS_INSTANCED_PROP( Terrain, _TerrainPatchInstanceData );
				float4 uvscale = instanceData.z * _TerrainHeightmapRecipSize;
				float4 uvoffset = instanceData.xyxy * uvscale;
				uvoffset.xy += 0.5f * _TerrainHeightmapRecipSize.xy;
				float2 sampleCoords = (patchVertex.xy * uvscale.xy + uvoffset.xy);
				v.ase_texcoord = float4(patchVertex.xy * uvscale.zw + uvoffset.zw, 0, 0);
				float height = UnpackHeightmap( tex2Dlod( _TerrainHeightmapTexture, float4(sampleCoords, 0, 0) ) );
				v.vertex.xz = (patchVertex.xy + instanceData.xy) * _TerrainHeightmapScale.xz * instanceData.z;
				v.vertex.y = height * _TerrainHeightmapScale.y;
				v.normal = tex2Dlod( _TerrainNormalmapTexture, v.ase_texcoord ).rgb * 2 - 1;
			#endif
			return v;
			}
			

			v2f VertexFunction (appdata v  ) {
				UNITY_SETUP_INSTANCE_ID(v);
				v2f o;
				UNITY_INITIALIZE_OUTPUT(v2f,o);
				UNITY_TRANSFER_INSTANCE_ID(v,o);
				UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);

				v = ApplyMeshModification(v);
				TVEModelData Data16_g117033 = (TVEModelData)0;
				half Dummy181_g117031 = ( _LandscapeCategory + _LandscapeEnd + _LandscapeInfo );
				float In_Dummy16_g117033 = Dummy181_g117031;
				TVEModelData Data16_g114320 = (TVEModelData)0;
				half Dummy207_g114306 = 0.0;
				float In_Dummy16_g114320 = Dummy207_g114306;
				half3 PositionOS131_g114306 = v.vertex.xyz;
				float3 In_PositionOS16_g114320 = PositionOS131_g114306;
				float3 ase_worldPos = mul(unity_ObjectToWorld, float4( (v.vertex).xyz, 1 )).xyz;
				float3 vertexToFrag73_g114306 = ase_worldPos;
				half3 PositionWS122_g114306 = vertexToFrag73_g114306;
				float3 In_PositionWS16_g114320 = PositionWS122_g114306;
				float4x4 break19_g114308 = unity_ObjectToWorld;
				float3 appendResult20_g114308 = (float3(break19_g114308[ 0 ][ 3 ] , break19_g114308[ 1 ][ 3 ] , break19_g114308[ 2 ][ 3 ]));
				half3 ObjectData20_g114310 = appendResult20_g114308;
				half3 WorldData19_g114310 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g114310 = WorldData19_g114310;
				#else
				float3 staticSwitch14_g114310 = ObjectData20_g114310;
				#endif
				float3 temp_output_124_0_g114308 = staticSwitch14_g114310;
				float3 temp_output_239_7_g114306 = temp_output_124_0_g114308;
				half3 PivotWS121_g114306 = temp_output_239_7_g114306;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
				#else
				float3 staticSwitch204_g114306 = PositionWS122_g114306;
				#endif
				half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
				float3 In_PositionWO16_g114320 = PositionWO132_g114306;
				float3 In_PositionRawOS16_g114320 = PositionOS131_g114306;
				float3 In_PositionAddOS16_g114320 = float3( 0,0,0 );
				float3 _Vector0 = float3(0,0,0);
				half3 PivotOS149_g114306 = _Vector0;
				float3 In_PivotOS16_g114320 = PivotOS149_g114306;
				float3 In_PivotWS16_g114320 = PivotWS121_g114306;
				half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
				float3 In_PivotWO16_g114320 = PivotWO133_g114306;
				half3 NormalOS134_g114306 = v.normal;
				float3 In_NormalOS16_g114320 = NormalOS134_g114306;
				float3 ase_worldNormal = UnityObjectToWorldNormal(v.normal);
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g114306 = normalizedWorldNormal;
				float3 In_NormalWS16_g114320 = Normal_WS95_g114306;
				float3 In_NormalRawOS16_g114320 = NormalOS134_g114306;
				float3 objToWorldDir298_g114306 = normalize( mul( unity_ObjectToWorld, float4( v.normal, 0 ) ).xyz );
				half3 Normal_RawWS136_g114306 = objToWorldDir298_g114306;
				float3 In_NormalRawWS16_g114320 = Normal_RawWS136_g114306;
				half4 TangentlOS153_g114306 = v.tangent;
				float4 In_TangentOS16_g114320 = TangentlOS153_g114306;
				float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
				half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
				float3 In_ViewDirWS16_g114320 = ViewDirWS169_g114306;
				half4 VertexMasks171_g114306 = v.ase_color;
				float4 In_VertexData16_g114320 = VertexMasks171_g114306;
				float4 break33_g114319 = _object_phase_mode;
				float temp_output_30_0_g114319 = ( v.ase_color.r * break33_g114319.x );
				float temp_output_29_0_g114319 = ( v.ase_color.g * break33_g114319.y );
				float temp_output_31_0_g114319 = ( v.ase_color.b * break33_g114319.z );
				float temp_output_28_0_g114319 = ( temp_output_30_0_g114319 + temp_output_29_0_g114319 + temp_output_31_0_g114319 + ( v.ase_color.a * break33_g114319.w ) );
				float3 break243_g114306 = PivotWO133_g114306;
				float temp_output_315_0_g114306 = (frac( ( temp_output_28_0_g114319 + ( break243_g114306.x + break243_g114306.z ) ) )*2.0 + -1.0);
				float4 appendResult177_g114306 = (float4(1.0 , 1.0 , temp_output_315_0_g114306 , 1.0));
				half4 MotionMasks176_g114306 = appendResult177_g114306;
				float4 In_MotionData16_g114320 = MotionMasks176_g114306;
				half4 BoundsData254_g114306 = float4( 0,0,0,0 );
				float4 In_BoundsData16_g114320 = BoundsData254_g114306;
				float4 In_RotationData16_g114320 = float4( 0,0,0,0 );
				Data16_g114320.Dummy = In_Dummy16_g114320;
				Data16_g114320.PositionOS = In_PositionOS16_g114320;
				Data16_g114320.PositionWS = In_PositionWS16_g114320;
				Data16_g114320.PositionWO = In_PositionWO16_g114320;
				Data16_g114320.PositionRawOS = In_PositionRawOS16_g114320;
				Data16_g114320.PositionAddOS = In_PositionAddOS16_g114320;
				Data16_g114320.PivotOS = In_PivotOS16_g114320;
				Data16_g114320.PivotWS = In_PivotWS16_g114320;
				Data16_g114320.PivotWO = In_PivotWO16_g114320;
				Data16_g114320.NormalOS = In_NormalOS16_g114320;
				Data16_g114320.NormalWS = In_NormalWS16_g114320;
				Data16_g114320.NormalRawOS = In_NormalRawOS16_g114320;
				Data16_g114320.NormalRawWS = In_NormalRawWS16_g114320;
				Data16_g114320.TangentOS = In_TangentOS16_g114320;
				Data16_g114320.ViewDirWS = In_ViewDirWS16_g114320;
				Data16_g114320.VertexData = In_VertexData16_g114320;
				Data16_g114320.MotionData = In_MotionData16_g114320;
				Data16_g114320.BoundsData = In_BoundsData16_g114320;
				Data16_g114320.RotationData = In_RotationData16_g114320;
				TVEModelData Data15_g117032 = Data16_g114320;
				float Out_Dummy15_g117032 = 0;
				float3 Out_PositionOS15_g117032 = float3( 0,0,0 );
				float3 Out_PositionWS15_g117032 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117032 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g117032 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g117032 = float3( 0,0,0 );
				float3 Out_PivotOS15_g117032 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117032 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117032 = float3( 0,0,0 );
				float3 Out_NormalOS15_g117032 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117032 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g117032 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g117032 = float3( 0,0,0 );
				float4 Out_TangentOS15_g117032 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g117032 = float3( 0,0,0 );
				float4 Out_VertexData15_g117032 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g117032 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117032 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g117032 = float4( 0,0,0,0 );
				Out_Dummy15_g117032 = Data15_g117032.Dummy;
				Out_PositionOS15_g117032 = Data15_g117032.PositionOS;
				Out_PositionWS15_g117032 = Data15_g117032.PositionWS;
				Out_PositionWO15_g117032 = Data15_g117032.PositionWO;
				Out_PositionRawOS15_g117032 = Data15_g117032.PositionRawOS;
				Out_PositionAddOS15_g117032 = Data15_g117032.PositionAddOS;
				Out_PivotOS15_g117032 = Data15_g117032.PivotOS;
				Out_PivotWS15_g117032 = Data15_g117032.PivotWS;
				Out_PivotWO15_g117032 = Data15_g117032.PivotWO;
				Out_NormalOS15_g117032 = Data15_g117032.NormalOS;
				Out_NormalWS15_g117032 = Data15_g117032.NormalWS;
				Out_NormalRawOS15_g117032 = Data15_g117032.NormalRawOS;
				Out_NormalRawWS15_g117032 = Data15_g117032.NormalRawWS;
				Out_TangentOS15_g117032 = Data15_g117032.TangentOS;
				Out_ViewDirWS15_g117032 = Data15_g117032.ViewDirWS;
				Out_VertexData15_g117032 = Data15_g117032.VertexData;
				Out_MotionData15_g117032 = Data15_g117032.MotionData;
				Out_BoundsData15_g117032 = Data15_g117032.BoundsData;
				Out_RotationData15_g117032 = Data15_g117032.RotationData;
				half3 Input_PositionOS147_g117031 = Out_PositionOS15_g117032;
				float3 break592_g117031 = Input_PositionOS147_g117031;
				float localBuildGlobalData204_g115912 = ( 0.0 );
				TVEGlobalData Data204_g115912 = (TVEGlobalData)0;
				half Dummy211_g115912 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g115912 = Dummy211_g115912;
				half4 Coat_Params302_g115912 = TVE_CoatParams;
				float4 In_CoatParams204_g115912 = Coat_Params302_g115912;
				float temp_output_82_0_g115913 = _GlobalPaintLayerValue;
				float temp_output_19_0_g115915 = TVE_PaintLayers[(int)temp_output_82_0_g115913];
				TVEModelData Data16_g114321 = (TVEModelData)0;
				float In_Dummy16_g114321 = 0.0;
				float3 In_PositionWS16_g114321 = PositionWS122_g114306;
				float3 In_PositionWO16_g114321 = PositionWO132_g114306;
				float3 In_PivotWS16_g114321 = PivotWS121_g114306;
				float3 In_PivotWO16_g114321 = PivotWO133_g114306;
				float3 In_NormalWS16_g114321 = Normal_WS95_g114306;
				float3 In_ViewDirWS16_g114321 = ViewDirWS169_g114306;
				float4 In_VertexData16_g114321 = VertexMasks171_g114306;
				float4 In_BoundsData16_g114321 = float4( 1,1,1,1 );
				Data16_g114321.Dummy = In_Dummy16_g114321;
				Data16_g114321.PositionWS = In_PositionWS16_g114321;
				Data16_g114321.PositionWO = In_PositionWO16_g114321;
				Data16_g114321.PivotWS = In_PivotWS16_g114321;
				Data16_g114321.PivotWO = In_PivotWO16_g114321;
				Data16_g114321.NormalWS = In_NormalWS16_g114321;
				Data16_g114321.ViewDirWS = In_ViewDirWS16_g114321;
				Data16_g114321.VertexData = In_VertexData16_g114321;
				Data16_g114321.BoundsData = In_BoundsData16_g114321;
				TVEModelData Data15_g115994 = Data16_g114321;
				float Out_Dummy15_g115994 = 0;
				float3 Out_PositionWS15_g115994 = float3( 0,0,0 );
				float3 Out_PositionWO15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWS15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWO15_g115994 = float3( 0,0,0 );
				float3 Out_NormalWS15_g115994 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g115994 = float3( 0,0,0 );
				float4 Out_VertexData15_g115994 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g115994 = float4( 0,0,0,0 );
				Out_Dummy15_g115994 = Data15_g115994.Dummy;
				Out_PositionWS15_g115994 = Data15_g115994.PositionWS;
				Out_PositionWO15_g115994 = Data15_g115994.PositionWO;
				Out_PivotWS15_g115994 = Data15_g115994.PivotWS;
				Out_PivotWO15_g115994 = Data15_g115994.PivotWO;
				Out_NormalWS15_g115994 = Data15_g115994.NormalWS;
				Out_ViewDirWS15_g115994 = Data15_g115994.ViewDirWS;
				Out_VertexData15_g115994 = Data15_g115994.VertexData;
				Out_BoundsData15_g115994 = Data15_g115994.BoundsData;
				half3 Model_PositionWS143_g115912 = Out_PositionWS15_g115994;
				half3 Input_Position180_g115916 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115916 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_82_0_g115916 = temp_output_82_0_g115913;
				float2 temp_output_119_0_g115916 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_7_0_g115921 = 1.0;
				float temp_output_10_0_g115921 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115921 );
				float4 lerpResult131_g115916 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115916,temp_output_82_0_g115916), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115916,temp_output_82_0_g115916), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115916 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115921 ) / temp_output_10_0_g115921 ) ));
				float4 temp_output_17_0_g115915 = lerpResult131_g115916;
				float4 temp_output_3_0_g115915 = TVE_PaintParams;
				float4 ifLocalVar18_g115915 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115915 >= 0.5 )
				ifLocalVar18_g115915 = temp_output_17_0_g115915;
				else
				ifLocalVar18_g115915 = temp_output_3_0_g115915;
				float4 lerpResult22_g115915 = lerp( temp_output_3_0_g115915 , temp_output_17_0_g115915 , temp_output_19_0_g115915);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115915 = lerpResult22_g115915;
				#else
				float4 staticSwitch24_g115915 = ifLocalVar18_g115915;
				#endif
				half4 Paint_Params71_g115912 = staticSwitch24_g115915;
				float4 In_PaintParams204_g115912 = Paint_Params71_g115912;
				float temp_output_82_0_g115931 = _GlobalGlowLayerValue;
				float temp_output_19_0_g115933 = TVE_GlowLayers[(int)temp_output_82_0_g115931];
				half3 Input_Position180_g115934 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115934 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_82_0_g115934 = temp_output_82_0_g115931;
				float2 temp_output_119_0_g115934 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_7_0_g115939 = 1.0;
				float temp_output_10_0_g115939 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115939 );
				float4 lerpResult131_g115934 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115934,temp_output_82_0_g115934), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115934,temp_output_82_0_g115934), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115934 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115939 ) / temp_output_10_0_g115939 ) ));
				float4 temp_output_17_0_g115933 = lerpResult131_g115934;
				float4 temp_output_3_0_g115933 = TVE_GlowParams;
				float4 ifLocalVar18_g115933 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115933 >= 0.5 )
				ifLocalVar18_g115933 = temp_output_17_0_g115933;
				else
				ifLocalVar18_g115933 = temp_output_3_0_g115933;
				float4 lerpResult22_g115933 = lerp( temp_output_3_0_g115933 , temp_output_17_0_g115933 , temp_output_19_0_g115933);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115933 = lerpResult22_g115933;
				#else
				float4 staticSwitch24_g115933 = ifLocalVar18_g115933;
				#endif
				half4 Glow_Params248_g115912 = staticSwitch24_g115933;
				float4 In_GlowParams204_g115912 = Glow_Params248_g115912;
				float temp_output_132_0_g115976 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g115978 = TVE_AtmoLayers[(int)temp_output_132_0_g115976];
				half3 Input_Position180_g115979 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115979 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_82_0_g115979 = temp_output_132_0_g115976;
				float2 temp_output_119_0_g115979 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_7_0_g115984 = 1.0;
				float temp_output_10_0_g115984 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115984 );
				float4 lerpResult131_g115979 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115979,temp_output_82_0_g115979), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115979,temp_output_82_0_g115979), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115979 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115984 ) / temp_output_10_0_g115984 ) ));
				float4 temp_output_17_0_g115978 = lerpResult131_g115979;
				float4 temp_output_3_0_g115978 = TVE_AtmoParams;
				float4 ifLocalVar18_g115978 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115978 >= 0.5 )
				ifLocalVar18_g115978 = temp_output_17_0_g115978;
				else
				ifLocalVar18_g115978 = temp_output_3_0_g115978;
				float4 lerpResult22_g115978 = lerp( temp_output_3_0_g115978 , temp_output_17_0_g115978 , temp_output_19_0_g115978);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115978 = lerpResult22_g115978;
				#else
				float4 staticSwitch24_g115978 = ifLocalVar18_g115978;
				#endif
				half4 Atmo_Params80_g115912 = staticSwitch24_g115978;
				float4 In_AtmoParams204_g115912 = Atmo_Params80_g115912;
				float temp_output_132_0_g115985 = _GlobalFadeLayerValue;
				float temp_output_19_0_g115987 = TVE_FadeLayers[(int)temp_output_132_0_g115985];
				half3 Input_Position180_g115988 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115988 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_82_0_g115988 = temp_output_132_0_g115985;
				float2 temp_output_119_0_g115988 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_7_0_g115993 = 1.0;
				float temp_output_10_0_g115993 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115993 );
				float4 lerpResult131_g115988 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115988,temp_output_82_0_g115988), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115988,temp_output_82_0_g115988), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115988 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115993 ) / temp_output_10_0_g115993 ) ));
				float4 temp_output_17_0_g115987 = lerpResult131_g115988;
				float4 temp_output_3_0_g115987 = TVE_FadeParams;
				float4 ifLocalVar18_g115987 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115987 >= 0.5 )
				ifLocalVar18_g115987 = temp_output_17_0_g115987;
				else
				ifLocalVar18_g115987 = temp_output_3_0_g115987;
				float4 lerpResult22_g115987 = lerp( temp_output_3_0_g115987 , temp_output_17_0_g115987 , temp_output_19_0_g115987);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115987 = lerpResult22_g115987;
				#else
				float4 staticSwitch24_g115987 = ifLocalVar18_g115987;
				#endif
				half4 Fade_Params387_g115912 = staticSwitch24_g115987;
				float4 In_FadeParams204_g115912 = Fade_Params387_g115912;
				half4 Form_Params112_g115912 = TVE_FormParams;
				float4 In_FormParams204_g115912 = Form_Params112_g115912;
				float temp_output_130_0_g115949 = _GlobalLandLayerValue;
				float temp_output_19_0_g115951 = TVE_LandLayers[(int)temp_output_130_0_g115949];
				half3 Input_Position180_g115952 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115952 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_82_0_g115952 = temp_output_130_0_g115949;
				float2 temp_output_119_0_g115952 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_7_0_g115957 = 1.0;
				float temp_output_10_0_g115957 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115957 );
				float4 lerpResult131_g115952 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115952,temp_output_82_0_g115952), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115952,temp_output_82_0_g115952), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115952 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115957 ) / temp_output_10_0_g115957 ) ));
				float4 temp_output_17_0_g115951 = lerpResult131_g115952;
				float4 temp_output_3_0_g115951 = TVE_LandParams;
				float4 ifLocalVar18_g115951 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115951 >= 0.5 )
				ifLocalVar18_g115951 = temp_output_17_0_g115951;
				else
				ifLocalVar18_g115951 = temp_output_3_0_g115951;
				float4 lerpResult22_g115951 = lerp( temp_output_3_0_g115951 , temp_output_17_0_g115951 , temp_output_19_0_g115951);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115951 = lerpResult22_g115951;
				#else
				float4 staticSwitch24_g115951 = ifLocalVar18_g115951;
				#endif
				half4 Land_Params375_g115912 = staticSwitch24_g115951;
				float4 In_LandParams204_g115912 = Land_Params375_g115912;
				half4 Wind_Params88_g115912 = TVE_WindParams;
				float4 In_WindParams204_g115912 = Wind_Params88_g115912;
				half4 Push_Params335_g115912 = TVE_PushParams;
				float4 In_PushParams204_g115912 = Push_Params335_g115912;
				Data204_g115912.Dummy = In_Dummy204_g115912;
				Data204_g115912.CoatParams = In_CoatParams204_g115912;
				Data204_g115912.PaintParams = In_PaintParams204_g115912;
				Data204_g115912.GlowParams = In_GlowParams204_g115912;
				Data204_g115912.AtmoParams = In_AtmoParams204_g115912;
				Data204_g115912.FadeParams = In_FadeParams204_g115912;
				Data204_g115912.FormParams= In_FormParams204_g115912;
				Data204_g115912.LandParams = In_LandParams204_g115912;
				Data204_g115912.WindParams = In_WindParams204_g115912;
				Data204_g115912.PushParams = In_PushParams204_g115912;
				TVEGlobalData Data15_g117034 = Data204_g115912;
				float Out_Dummy15_g117034 = 0;
				float4 Out_CoatParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g117034 = float4( 0,0,0,0 );
				Out_Dummy15_g117034 = Data15_g117034.Dummy;
				Out_CoatParams15_g117034 = Data15_g117034.CoatParams;
				Out_PaintParams15_g117034 = Data15_g117034.PaintParams;
				Out_GlowParams15_g117034 = Data15_g117034.GlowParams;
				Out_AtmoParams15_g117034= Data15_g117034.AtmoParams;
				Out_FadeParams15_g117034= Data15_g117034.FadeParams;
				Out_FormParams15_g117034 = Data15_g117034.FormParams;
				Out_LandParams15_g117034 = Data15_g117034.LandParams;
				Out_WindParams15_g117034 = Data15_g117034.WindParams;
				Out_PushParams15_g117034 = Data15_g117034.PushParams;
				half4 Input_FormParams214_g117031 = Out_LandParams15_g117034;
				float temp_output_572_0_g117031 = (Input_FormParams214_g117031).z;
				float temp_output_595_0_g117031 = ( break592_g117031.y + temp_output_572_0_g117031 );
				float lerpResult604_g117031 = lerp( break592_g117031.y , temp_output_595_0_g117031 , ( _LandscapeHeightValue * TVE_IsEnabled ));
				float3 appendResult593_g117031 = (float3(break592_g117031.x , lerpResult604_g117031 , break592_g117031.z));
				#ifdef TVE_LANDSCAPE
				float3 staticSwitch575_g117031 = appendResult593_g117031;
				#else
				float3 staticSwitch575_g117031 = Input_PositionOS147_g117031;
				#endif
				half3 Final_PositionOS580_g117031 = staticSwitch575_g117031;
				float3 In_PositionOS16_g117033 = Final_PositionOS580_g117031;
				float3 In_PositionWS16_g117033 = Out_PositionWS15_g117032;
				float3 In_PositionWO16_g117033 = Out_PositionWO15_g117032;
				float3 In_PositionRawOS16_g117033 = Out_PositionRawOS15_g117032;
				float3 In_PositionAddOS16_g117033 = Out_PositionAddOS15_g117032;
				float3 In_PivotOS16_g117033 = Out_PivotOS15_g117032;
				float3 In_PivotWS16_g117033 = Out_PivotWS15_g117032;
				float3 temp_output_481_19_g117031 = Out_PivotWO15_g117032;
				float3 In_PivotWO16_g117033 = temp_output_481_19_g117031;
				float3 temp_output_481_20_g117031 = Out_NormalOS15_g117032;
				float3 In_NormalOS16_g117033 = temp_output_481_20_g117031;
				float3 In_NormalWS16_g117033 = Out_NormalWS15_g117032;
				float3 In_NormalRawOS16_g117033 = Out_NormalRawOS15_g117032;
				float3 In_NormalRawWS16_g117033 = Out_NormalRawWS15_g117032;
				float4 In_TangentOS16_g117033 = Out_TangentOS15_g117032;
				float3 In_ViewDirWS16_g117033 = Out_ViewDirWS15_g117032;
				float4 In_VertexData16_g117033 = Out_VertexData15_g117032;
				float4 In_MotionData16_g117033 = Out_MotionData15_g117032;
				float4 In_BoundsData16_g117033 = Out_BoundsData15_g117032;
				float4 In_RotationData16_g117033 = Out_RotationData15_g117032;
				Data16_g117033.Dummy = In_Dummy16_g117033;
				Data16_g117033.PositionOS = In_PositionOS16_g117033;
				Data16_g117033.PositionWS = In_PositionWS16_g117033;
				Data16_g117033.PositionWO = In_PositionWO16_g117033;
				Data16_g117033.PositionRawOS = In_PositionRawOS16_g117033;
				Data16_g117033.PositionAddOS = In_PositionAddOS16_g117033;
				Data16_g117033.PivotOS = In_PivotOS16_g117033;
				Data16_g117033.PivotWS = In_PivotWS16_g117033;
				Data16_g117033.PivotWO = In_PivotWO16_g117033;
				Data16_g117033.NormalOS = In_NormalOS16_g117033;
				Data16_g117033.NormalWS = In_NormalWS16_g117033;
				Data16_g117033.NormalRawOS = In_NormalRawOS16_g117033;
				Data16_g117033.NormalRawWS = In_NormalRawWS16_g117033;
				Data16_g117033.TangentOS = In_TangentOS16_g117033;
				Data16_g117033.ViewDirWS = In_ViewDirWS16_g117033;
				Data16_g117033.VertexData = In_VertexData16_g117033;
				Data16_g117033.MotionData = In_MotionData16_g117033;
				Data16_g117033.BoundsData = In_BoundsData16_g117033;
				Data16_g117033.RotationData = In_RotationData16_g117033;
				TVEModelData Data15_g117040 = Data16_g117033;
				float Out_Dummy15_g117040 = 0;
				float3 Out_PositionOS15_g117040 = float3( 0,0,0 );
				float3 Out_PositionWS15_g117040 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117040 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g117040 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g117040 = float3( 0,0,0 );
				float3 Out_PivotOS15_g117040 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117040 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117040 = float3( 0,0,0 );
				float3 Out_NormalOS15_g117040 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117040 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g117040 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g117040 = float3( 0,0,0 );
				float4 Out_TangentOS15_g117040 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g117040 = float3( 0,0,0 );
				float4 Out_VertexData15_g117040 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g117040 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117040 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g117040 = float4( 0,0,0,0 );
				Out_Dummy15_g117040 = Data15_g117040.Dummy;
				Out_PositionOS15_g117040 = Data15_g117040.PositionOS;
				Out_PositionWS15_g117040 = Data15_g117040.PositionWS;
				Out_PositionWO15_g117040 = Data15_g117040.PositionWO;
				Out_PositionRawOS15_g117040 = Data15_g117040.PositionRawOS;
				Out_PositionAddOS15_g117040 = Data15_g117040.PositionAddOS;
				Out_PivotOS15_g117040 = Data15_g117040.PivotOS;
				Out_PivotWS15_g117040 = Data15_g117040.PivotWS;
				Out_PivotWO15_g117040 = Data15_g117040.PivotWO;
				Out_NormalOS15_g117040 = Data15_g117040.NormalOS;
				Out_NormalWS15_g117040 = Data15_g117040.NormalWS;
				Out_NormalRawOS15_g117040 = Data15_g117040.NormalRawOS;
				Out_NormalRawWS15_g117040 = Data15_g117040.NormalRawWS;
				Out_TangentOS15_g117040 = Data15_g117040.TangentOS;
				Out_ViewDirWS15_g117040 = Data15_g117040.ViewDirWS;
				Out_VertexData15_g117040 = Data15_g117040.VertexData;
				Out_MotionData15_g117040 = Data15_g117040.MotionData;
				Out_BoundsData15_g117040 = Data15_g117040.BoundsData;
				Out_RotationData15_g117040 = Data15_g117040.RotationData;
				float3 temp_output_31_0_g117038 = Out_PositionOS15_g117040;
				
				o.ase_texcoord9.xyz = vertexToFrag73_g114306;
				
				o.ase_color = v.ase_color;
				o.ase_texcoord10 = v.ase_texcoord;
				
				//setting value to unused interpolator channels and avoid initialization warnings
				o.ase_texcoord9.w = 0;
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					float3 defaultVertexValue = v.vertex.xyz;
				#else
					float3 defaultVertexValue = float3(0, 0, 0);
				#endif
				float3 vertexValue = temp_output_31_0_g117038;
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					v.vertex.xyz = vertexValue;
				#else
					v.vertex.xyz += vertexValue;
				#endif
				v.vertex.w = 1;
				v.normal = Out_NormalOS15_g117040;
				v.tangent = Out_TangentOS15_g117040;

				o.pos = UnityObjectToClipPos(v.vertex);
				float3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;
				fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);
				fixed3 worldTangent = UnityObjectToWorldDir(v.tangent.xyz);
				fixed tangentSign = v.tangent.w * unity_WorldTransformParams.w;
				fixed3 worldBinormal = cross(worldNormal, worldTangent) * tangentSign;
				o.tSpace0 = float4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);
				o.tSpace1 = float4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);
				o.tSpace2 = float4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);

				#ifdef DYNAMICLIGHTMAP_ON
				o.lmap.zw = v.texcoord2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
				#endif
				#ifdef LIGHTMAP_ON
				o.lmap.xy = v.texcoord1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
				#endif

				#ifndef LIGHTMAP_ON
					#if UNITY_SHOULD_SAMPLE_SH && !UNITY_SAMPLE_FULL_SH_PER_PIXEL
						o.sh = 0;
						#ifdef VERTEXLIGHT_ON
						o.sh += Shade4PointLights (
							unity_4LightPosX0, unity_4LightPosY0, unity_4LightPosZ0,
							unity_LightColor[0].rgb, unity_LightColor[1].rgb, unity_LightColor[2].rgb, unity_LightColor[3].rgb,
							unity_4LightAtten0, worldPos, worldNormal);
						#endif
						o.sh = ShadeSHPerVertex (worldNormal, o.sh);
					#endif
				#endif

				#if UNITY_VERSION >= 201810 && defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					UNITY_TRANSFER_LIGHTING(o, v.texcoord1.xy);
				#elif defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					#if UNITY_VERSION >= 201710
						UNITY_TRANSFER_SHADOW(o, v.texcoord1.xy);
					#else
						TRANSFER_SHADOW(o);
					#endif
				#endif

				#ifdef ASE_FOG
					UNITY_TRANSFER_FOG(o,o.pos);
				#endif
				#if defined(ASE_NEEDS_FRAG_SCREEN_POSITION)
					o.screenPos = ComputeScreenPos(o.pos);
				#endif
				return o;
			}

			#if defined(ASE_TESSELLATION)
			struct VertexControl
			{
				float4 vertex : INTERNALTESSPOS;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;

				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct TessellationFactors
			{
				float edge[3] : SV_TessFactor;
				float inside : SV_InsideTessFactor;
			};

			VertexControl vert ( appdata v )
			{
				VertexControl o;
				UNITY_SETUP_INSTANCE_ID(v);
				UNITY_TRANSFER_INSTANCE_ID(v, o);
				o.vertex = v.vertex;
				o.tangent = v.tangent;
				o.normal = v.normal;
				o.texcoord1 = v.texcoord1;
				o.texcoord2 = v.texcoord2;
				o.ase_color = v.ase_color;
				o.ase_texcoord = v.ase_texcoord;
				return o;
			}

			TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
			{
				TessellationFactors o;
				float4 tf = 1;
				float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
				float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
				#if defined(ASE_FIXED_TESSELLATION)
				tf = FixedTess( tessValue );
				#elif defined(ASE_DISTANCE_TESSELLATION)
				tf = DistanceBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, tessValue, tessMin, tessMax, UNITY_MATRIX_M, _WorldSpaceCameraPos );
				#elif defined(ASE_LENGTH_TESSELLATION)
				tf = EdgeLengthBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams );
				#elif defined(ASE_LENGTH_CULL_TESSELLATION)
				tf = EdgeLengthBasedTessCull(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, tessMaxDisp, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams, unity_CameraWorldClipPlanes );
				#endif
				o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
				return o;
			}

			[domain("tri")]
			[partitioning("fractional_odd")]
			[outputtopology("triangle_cw")]
			[patchconstantfunc("TessellationFunction")]
			[outputcontrolpoints(3)]
			VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
			{
			   return patch[id];
			}

			[domain("tri")]
			v2f DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
			{
				appdata o = (appdata) 0;
				o.vertex = patch[0].vertex * bary.x + patch[1].vertex * bary.y + patch[2].vertex * bary.z;
				o.tangent = patch[0].tangent * bary.x + patch[1].tangent * bary.y + patch[2].tangent * bary.z;
				o.normal = patch[0].normal * bary.x + patch[1].normal * bary.y + patch[2].normal * bary.z;
				o.texcoord1 = patch[0].texcoord1 * bary.x + patch[1].texcoord1 * bary.y + patch[2].texcoord1 * bary.z;
				o.texcoord2 = patch[0].texcoord2 * bary.x + patch[1].texcoord2 * bary.y + patch[2].texcoord2 * bary.z;
				o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
				o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
				#if defined(ASE_PHONG_TESSELLATION)
				float3 pp[3];
				for (int i = 0; i < 3; ++i)
					pp[i] = o.vertex.xyz - patch[i].normal * (dot(o.vertex.xyz, patch[i].normal) - dot(patch[i].vertex.xyz, patch[i].normal));
				float phongStrength = _TessPhongStrength;
				o.vertex.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.vertex.xyz;
				#endif
				UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
				return VertexFunction(o);
			}
			#else
			v2f vert ( appdata v )
			{
				return VertexFunction( v );
			}
			#endif

			fixed4 frag (v2f IN 
				#ifdef _DEPTHOFFSET_ON
				, out float outputDepth : SV_Depth
				#endif
				) : SV_Target
			{
				UNITY_SETUP_INSTANCE_ID(IN);

				#ifdef LOD_FADE_CROSSFADE
					UNITY_APPLY_DITHER_CROSSFADE(IN.pos.xy);
				#endif

				#if defined(ASE_LIGHTING_SIMPLE)
					SurfaceOutput o = (SurfaceOutput)0;
				#else
					#if defined(_SPECULAR_SETUP)
						SurfaceOutputStandardSpecular o = (SurfaceOutputStandardSpecular)0;
					#else
						SurfaceOutputStandard o = (SurfaceOutputStandard)0;
					#endif
				#endif

				float3 WorldTangent = float3(IN.tSpace0.x,IN.tSpace1.x,IN.tSpace2.x);
				float3 WorldBiTangent = float3(IN.tSpace0.y,IN.tSpace1.y,IN.tSpace2.y);
				float3 WorldNormal = float3(IN.tSpace0.z,IN.tSpace1.z,IN.tSpace2.z);
				float3 worldPos = float3(IN.tSpace0.w,IN.tSpace1.w,IN.tSpace2.w);
				float3 worldViewDir = normalize(UnityWorldSpaceViewDir(worldPos));
				#if defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					UNITY_LIGHT_ATTENUATION(atten, IN, worldPos)
				#else
					half atten = 1;
				#endif
				#if defined(ASE_NEEDS_FRAG_SCREEN_POSITION)
				float4 ScreenPos = IN.screenPos;
				#endif

				float localBreakData4_g117042 = ( 0.0 );
				float localCompData3_g117019 = ( 0.0 );
				TVEVisualData Data3_g117019 = (TVEVisualData)0;
				half Dummy594_g117018 = ( _CutoutCategory + _CutoutEnd + _CutoutElementMode + _CutoutBakeInfo );
				float In_Dummy3_g117019 = Dummy594_g117018;
				float localBreakData4_g117029 = ( 0.0 );
				float localCompData3_g117013 = ( 0.0 );
				TVEVisualData Data3_g117013 = (TVEVisualData)0;
				half Dummy145_g117003 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveElementMode + _EmissiveFlagMode );
				float In_Dummy3_g117013 = Dummy145_g117003;
				float localBreakData4_g117012 = ( 0.0 );
				float localCompData3_g116976 = ( 0.0 );
				TVEVisualData Data3_g116976 = (TVEVisualData)0;
				half Dummy594_g116974 = ( _WetnessCategory + _WetnessEnd + _WetnessElementMode + _WetnessBakeInfo );
				float In_Dummy3_g116976 = Dummy594_g116974;
				float localBreakData4_g116975 = ( 0.0 );
				float localCompData3_g116941 = ( 0.0 );
				TVEVisualData Data3_g116941 = (TVEVisualData)0;
				half Dummy594_g116938 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayElementMode + _OverlayBakeInfo );
				float In_Dummy3_g116941 = Dummy594_g116938;
				float localBreakData4_g116939 = ( 0.0 );
				float localCompData3_g116918 = ( 0.0 );
				TVEVisualData Data3_g116918 = (TVEVisualData)0;
				half Dummy205_g116915 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessElementMode + _DrynessBakeInfo );
				float In_Dummy3_g116918 = Dummy205_g116915;
				float localBreakData4_g116917 = ( 0.0 );
				float localCompData3_g116912 = ( 0.0 );
				TVEVisualData Data3_g116912 = (TVEVisualData)0;
				half Dummy205_g116891 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeInfo );
				float In_Dummy3_g116912 = Dummy205_g116891;
				float localBreakData4_g116913 = ( 0.0 );
				float localCompData3_g116778 = ( 0.0 );
				TVEVisualData Data3_g116778 = (TVEVisualData)0;
				half Dummy9163_g116777 = ( _CategoryTerrain + _EndTerrain );
				float In_Dummy3_g116778 = Dummy9163_g116777;
				float localHeightBasedBlending7362_g116779 = ( 0.0 );
				float4 appendResult9125_g116779 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
				float4 temp_output_35_0_g116887 = appendResult9125_g116779;
				float2 InputScale48_g116887 = (temp_output_35_0_g116887).zw;
				half2 FinalScale53_g116887 = ( 1.0 / InputScale48_g116887 );
				float2 InputPosition52_g116887 = (temp_output_35_0_g116887).xy;
				half2 FinalPosition58_g116887 = -( FinalScale53_g116887 * InputPosition52_g116887 );
				float2 temp_output_65_0_g116887 = ( ( (worldPos).xz * FinalScale53_g116887 ) + FinalPosition58_g116887 );
				float4 temp_output_70_0_g116887 = _TerrainControlTex1_TexelSize;
				float2 InputTexelSize68_g116887 = (temp_output_70_0_g116887).zw;
				float2 temp_cast_0 = (1.0).xx;
				float2 InputTexelRecip69_g116887 = (temp_output_70_0_g116887).xy;
				float2 Terrain_Control_UV7873_g116779 = ( ( ( temp_output_65_0_g116887 / ( 1.0 / ( InputTexelSize68_g116887 - temp_cast_0 ) ) ) + 0.5 ) * InputTexelRecip69_g116887 );
				half4 Terrain_Control_047365_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_047362_g116779 = Terrain_Control_047365_g116779;
				half4 Terrain_Control_087366_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_087362_g116779 = Terrain_Control_087366_g116779;
				half4 Terrain_Control_127712_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_127362_g116779 = Terrain_Control_127712_g116779;
				half4 Terrain_Control_167711_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_167362_g116779 = Terrain_Control_167711_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116824) = _TerrainShaderTex1;
				float localFilterTexture30_g116885 = ( 0.0 );
				SamplerState SamplerDefault30_g116885 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g116885 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g116885 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g116885 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g116885 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g116885 = SamplerDefault30_g116885;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g116885 = SamplerDefault30_g116885;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g116885 = SamplerPoint30_g116885;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g116885 = SamplerLow30_g116885;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g116885 = SamplerMedium30_g116885;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g116885 = SamplerHigh30_g116885;
				#endif
				SamplerState Sampler238_g116824 = SS30_g116885;
				half4 Input_Terrain_Coords_016785_g116779 = _TerrainCoord1;
				float4 temp_output_37_0_g116824 = Input_Terrain_Coords_016785_g116779;
				half4 Coords238_g116824 = temp_output_37_0_g116824;
				half3 Input_Position9197_g116779 = worldPos;
				float3 temp_output_279_0_g116824 = Input_Position9197_g116779;
				half3 WorldPosition238_g116824 = temp_output_279_0_g116824;
				half4 localSamplePlanar2D238_g116824 = SamplePlanar2D( Texture238_g116824 , Sampler238_g116824 , Coords238_g116824 , WorldPosition238_g116824 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116824) = _TerrainShaderTex1;
				SamplerState Sampler246_g116824 = SS30_g116885;
				half4 Coords246_g116824 = temp_output_37_0_g116824;
				half3 WorldPosition246_g116824 = temp_output_279_0_g116824;
				half3 Input_Normal9199_g116779 = WorldNormal;
				float3 temp_output_280_0_g116824 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116824 = temp_output_280_0_g116824;
				half4 localSamplePlanar3D246_g116824 = SamplePlanar3D( Texture246_g116824 , Sampler246_g116824 , Coords246_g116824 , WorldPosition246_g116824 , WorldNormal246_g116824 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116824) = _TerrainShaderTex1;
				SamplerState Sampler234_g116824 = SS30_g116885;
				float4 Coords234_g116824 = temp_output_37_0_g116824;
				float3 WorldPosition234_g116824 = temp_output_279_0_g116824;
				float4 localSampleStochastic2D234_g116824 = SampleStochastic2D( Texture234_g116824 , Sampler234_g116824 , Coords234_g116824 , WorldPosition234_g116824 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116824) = _TerrainShaderTex1;
				SamplerState Sampler263_g116824 = SS30_g116885;
				half4 Coords263_g116824 = temp_output_37_0_g116824;
				half3 WorldPosition263_g116824 = temp_output_279_0_g116824;
				half3 WorldNormal263_g116824 = temp_output_280_0_g116824;
				half4 localSampleStochastic3D263_g116824 = SampleStochastic3D( Texture263_g116824 , Sampler263_g116824 , Coords263_g116824 , WorldPosition263_g116824 , WorldNormal263_g116824 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8639_g116779 = localSamplePlanar2D238_g116824;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8639_g116779 = localSamplePlanar3D246_g116824;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8639_g116779 = localSampleStochastic2D234_g116824;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8639_g116779 = localSampleStochastic3D263_g116824;
				#else
				float4 staticSwitch8639_g116779 = localSamplePlanar2D238_g116824;
				#endif
				float4 temp_output_7_0_g116781 = _TerrainShaderMin1;
				float4 temp_output_10_0_g116781 = ( _TerrainShaderMax1 - temp_output_7_0_g116781 );
				float4 temp_output_6970_0_g116779 = saturate( ( ( staticSwitch8639_g116779 - temp_output_7_0_g116781 ) / ( temp_output_10_0_g116781 + 0.0001 ) ) );
				half4 Masks_015_g116785 = temp_output_6970_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116828) = _TerrainShaderTex2;
				SamplerState Sampler238_g116828 = SS30_g116885;
				half4 Input_Terrain_Coords_026787_g116779 = _TerrainCoord2;
				float4 temp_output_37_0_g116828 = Input_Terrain_Coords_026787_g116779;
				half4 Coords238_g116828 = temp_output_37_0_g116828;
				float3 temp_output_279_0_g116828 = Input_Position9197_g116779;
				half3 WorldPosition238_g116828 = temp_output_279_0_g116828;
				half4 localSamplePlanar2D238_g116828 = SamplePlanar2D( Texture238_g116828 , Sampler238_g116828 , Coords238_g116828 , WorldPosition238_g116828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116828) = _TerrainShaderTex2;
				SamplerState Sampler246_g116828 = SS30_g116885;
				half4 Coords246_g116828 = temp_output_37_0_g116828;
				half3 WorldPosition246_g116828 = temp_output_279_0_g116828;
				float3 temp_output_280_0_g116828 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116828 = temp_output_280_0_g116828;
				half4 localSamplePlanar3D246_g116828 = SamplePlanar3D( Texture246_g116828 , Sampler246_g116828 , Coords246_g116828 , WorldPosition246_g116828 , WorldNormal246_g116828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116828) = _TerrainShaderTex2;
				SamplerState Sampler234_g116828 = SS30_g116885;
				float4 Coords234_g116828 = temp_output_37_0_g116828;
				float3 WorldPosition234_g116828 = temp_output_279_0_g116828;
				float4 localSampleStochastic2D234_g116828 = SampleStochastic2D( Texture234_g116828 , Sampler234_g116828 , Coords234_g116828 , WorldPosition234_g116828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116828) = _TerrainShaderTex2;
				SamplerState Sampler263_g116828 = SS30_g116885;
				half4 Coords263_g116828 = temp_output_37_0_g116828;
				half3 WorldPosition263_g116828 = temp_output_279_0_g116828;
				half3 WorldNormal263_g116828 = temp_output_280_0_g116828;
				half4 localSampleStochastic3D263_g116828 = SampleStochastic3D( Texture263_g116828 , Sampler263_g116828 , Coords263_g116828 , WorldPosition263_g116828 , WorldNormal263_g116828 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8640_g116779 = localSamplePlanar2D238_g116828;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8640_g116779 = localSamplePlanar3D246_g116828;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8640_g116779 = localSampleStochastic2D234_g116828;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8640_g116779 = localSampleStochastic3D263_g116828;
				#else
				float4 staticSwitch8640_g116779 = localSamplePlanar2D238_g116828;
				#endif
				float4 temp_output_7_0_g116791 = _TerrainShaderMin2;
				float4 temp_output_10_0_g116791 = ( _TerrainShaderMax2 - temp_output_7_0_g116791 );
				float4 temp_output_6977_0_g116779 = saturate( ( ( staticSwitch8640_g116779 - temp_output_7_0_g116791 ) / ( temp_output_10_0_g116791 + 0.0001 ) ) );
				half4 Masks_0210_g116785 = temp_output_6977_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116833) = _TerrainShaderTex3;
				SamplerState Sampler238_g116833 = SS30_g116885;
				half4 Input_Terrain_Coords_036789_g116779 = _TerrainCoord3;
				float4 temp_output_37_0_g116833 = Input_Terrain_Coords_036789_g116779;
				half4 Coords238_g116833 = temp_output_37_0_g116833;
				float3 temp_output_279_0_g116833 = Input_Position9197_g116779;
				half3 WorldPosition238_g116833 = temp_output_279_0_g116833;
				half4 localSamplePlanar2D238_g116833 = SamplePlanar2D( Texture238_g116833 , Sampler238_g116833 , Coords238_g116833 , WorldPosition238_g116833 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116833) = _TerrainShaderTex3;
				SamplerState Sampler246_g116833 = SS30_g116885;
				half4 Coords246_g116833 = temp_output_37_0_g116833;
				half3 WorldPosition246_g116833 = temp_output_279_0_g116833;
				float3 temp_output_280_0_g116833 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116833 = temp_output_280_0_g116833;
				half4 localSamplePlanar3D246_g116833 = SamplePlanar3D( Texture246_g116833 , Sampler246_g116833 , Coords246_g116833 , WorldPosition246_g116833 , WorldNormal246_g116833 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116833) = _TerrainShaderTex3;
				SamplerState Sampler234_g116833 = SS30_g116885;
				float4 Coords234_g116833 = temp_output_37_0_g116833;
				float3 WorldPosition234_g116833 = temp_output_279_0_g116833;
				float4 localSampleStochastic2D234_g116833 = SampleStochastic2D( Texture234_g116833 , Sampler234_g116833 , Coords234_g116833 , WorldPosition234_g116833 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116833) = _TerrainShaderTex3;
				SamplerState Sampler263_g116833 = SS30_g116885;
				half4 Coords263_g116833 = temp_output_37_0_g116833;
				half3 WorldPosition263_g116833 = temp_output_279_0_g116833;
				half3 WorldNormal263_g116833 = temp_output_280_0_g116833;
				half4 localSampleStochastic3D263_g116833 = SampleStochastic3D( Texture263_g116833 , Sampler263_g116833 , Coords263_g116833 , WorldPosition263_g116833 , WorldNormal263_g116833 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8641_g116779 = localSamplePlanar2D238_g116833;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8641_g116779 = localSamplePlanar3D246_g116833;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8641_g116779 = localSampleStochastic2D234_g116833;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8641_g116779 = localSampleStochastic3D263_g116833;
				#else
				float4 staticSwitch8641_g116779 = localSamplePlanar2D238_g116833;
				#endif
				float4 temp_output_7_0_g116792 = _TerrainShaderMin3;
				float4 temp_output_10_0_g116792 = ( _TerrainShaderMax3 - temp_output_7_0_g116792 );
				float4 temp_output_6978_0_g116779 = saturate( ( ( staticSwitch8641_g116779 - temp_output_7_0_g116792 ) / ( temp_output_10_0_g116792 + 0.0001 ) ) );
				half4 Masks_0312_g116785 = temp_output_6978_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116834) = _TerrainShaderTex4;
				SamplerState Sampler238_g116834 = SS30_g116885;
				half4 Input_Terrain_Coords_046791_g116779 = _TerrainCoord4;
				float4 temp_output_37_0_g116834 = Input_Terrain_Coords_046791_g116779;
				half4 Coords238_g116834 = temp_output_37_0_g116834;
				float3 temp_output_279_0_g116834 = Input_Position9197_g116779;
				half3 WorldPosition238_g116834 = temp_output_279_0_g116834;
				half4 localSamplePlanar2D238_g116834 = SamplePlanar2D( Texture238_g116834 , Sampler238_g116834 , Coords238_g116834 , WorldPosition238_g116834 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116834) = _TerrainShaderTex4;
				SamplerState Sampler246_g116834 = SS30_g116885;
				half4 Coords246_g116834 = temp_output_37_0_g116834;
				half3 WorldPosition246_g116834 = temp_output_279_0_g116834;
				float3 temp_output_280_0_g116834 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116834 = temp_output_280_0_g116834;
				half4 localSamplePlanar3D246_g116834 = SamplePlanar3D( Texture246_g116834 , Sampler246_g116834 , Coords246_g116834 , WorldPosition246_g116834 , WorldNormal246_g116834 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116834) = _TerrainShaderTex4;
				SamplerState Sampler234_g116834 = SS30_g116885;
				float4 Coords234_g116834 = temp_output_37_0_g116834;
				float3 WorldPosition234_g116834 = temp_output_279_0_g116834;
				float4 localSampleStochastic2D234_g116834 = SampleStochastic2D( Texture234_g116834 , Sampler234_g116834 , Coords234_g116834 , WorldPosition234_g116834 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116834) = _TerrainShaderTex4;
				SamplerState Sampler263_g116834 = SS30_g116885;
				half4 Coords263_g116834 = temp_output_37_0_g116834;
				half3 WorldPosition263_g116834 = temp_output_279_0_g116834;
				half3 WorldNormal263_g116834 = temp_output_280_0_g116834;
				half4 localSampleStochastic3D263_g116834 = SampleStochastic3D( Texture263_g116834 , Sampler263_g116834 , Coords263_g116834 , WorldPosition263_g116834 , WorldNormal263_g116834 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8642_g116779 = localSamplePlanar2D238_g116834;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8642_g116779 = localSamplePlanar3D246_g116834;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8642_g116779 = localSampleStochastic2D234_g116834;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8642_g116779 = localSampleStochastic3D263_g116834;
				#else
				float4 staticSwitch8642_g116779 = localSamplePlanar2D238_g116834;
				#endif
				float4 temp_output_7_0_g116793 = _TerrainShaderMin4;
				float4 temp_output_10_0_g116793 = ( _TerrainShaderMax4 - temp_output_7_0_g116793 );
				float4 temp_output_6983_0_g116779 = saturate( ( ( staticSwitch8642_g116779 - temp_output_7_0_g116793 ) / ( temp_output_10_0_g116793 + 0.0001 ) ) );
				half4 Masks_0414_g116785 = temp_output_6983_0_g116779;
				float4 appendResult29_g116785 = (float4((Masks_015_g116785).z , (Masks_0210_g116785).z , (Masks_0312_g116785).z , (Masks_0414_g116785).z));
				half4 Control31_g116785 = Terrain_Control_047365_g116779;
				half4 Terrain_Height_047210_g116779 = ( appendResult29_g116785 * Control31_g116785 );
				float4 heights_047362_g116779 = Terrain_Height_047210_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116837) = _TerrainShaderTex5;
				SamplerState Sampler238_g116837 = SS30_g116885;
				half4 Input_Terrain_Coords_058750_g116779 = _TerrainCoord5;
				float4 temp_output_37_0_g116837 = Input_Terrain_Coords_058750_g116779;
				half4 Coords238_g116837 = temp_output_37_0_g116837;
				float3 temp_output_279_0_g116837 = Input_Position9197_g116779;
				half3 WorldPosition238_g116837 = temp_output_279_0_g116837;
				half4 localSamplePlanar2D238_g116837 = SamplePlanar2D( Texture238_g116837 , Sampler238_g116837 , Coords238_g116837 , WorldPosition238_g116837 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116837) = _TerrainShaderTex5;
				SamplerState Sampler246_g116837 = SS30_g116885;
				half4 Coords246_g116837 = temp_output_37_0_g116837;
				half3 WorldPosition246_g116837 = temp_output_279_0_g116837;
				float3 temp_output_280_0_g116837 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116837 = temp_output_280_0_g116837;
				half4 localSamplePlanar3D246_g116837 = SamplePlanar3D( Texture246_g116837 , Sampler246_g116837 , Coords246_g116837 , WorldPosition246_g116837 , WorldNormal246_g116837 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116837) = _TerrainShaderTex5;
				SamplerState Sampler234_g116837 = SS30_g116885;
				float4 Coords234_g116837 = temp_output_37_0_g116837;
				float3 WorldPosition234_g116837 = temp_output_279_0_g116837;
				float4 localSampleStochastic2D234_g116837 = SampleStochastic2D( Texture234_g116837 , Sampler234_g116837 , Coords234_g116837 , WorldPosition234_g116837 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116837) = _TerrainShaderTex5;
				SamplerState Sampler263_g116837 = SS30_g116885;
				half4 Coords263_g116837 = temp_output_37_0_g116837;
				half3 WorldPosition263_g116837 = temp_output_279_0_g116837;
				half3 WorldNormal263_g116837 = temp_output_280_0_g116837;
				half4 localSampleStochastic3D263_g116837 = SampleStochastic3D( Texture263_g116837 , Sampler263_g116837 , Coords263_g116837 , WorldPosition263_g116837 , WorldNormal263_g116837 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8710_g116779 = localSamplePlanar2D238_g116837;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8710_g116779 = localSamplePlanar3D246_g116837;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8710_g116779 = localSampleStochastic2D234_g116837;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8710_g116779 = localSampleStochastic3D263_g116837;
				#else
				float4 staticSwitch8710_g116779 = localSamplePlanar2D238_g116837;
				#endif
				float4 temp_output_7_0_g116796 = _TerrainShaderMin5;
				float4 temp_output_10_0_g116796 = ( _TerrainShaderMax5 - temp_output_7_0_g116796 );
				float4 temp_output_8714_0_g116779 = saturate( ( ( staticSwitch8710_g116779 - temp_output_7_0_g116796 ) / ( temp_output_10_0_g116796 + 0.0001 ) ) );
				half4 Masks_015_g116797 = temp_output_8714_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116868) = _TerrainShaderTex6;
				SamplerState Sampler238_g116868 = SS30_g116885;
				half4 Input_Terrain_Coords_068751_g116779 = _TerrainCoord6;
				float4 temp_output_37_0_g116868 = Input_Terrain_Coords_068751_g116779;
				half4 Coords238_g116868 = temp_output_37_0_g116868;
				float3 temp_output_279_0_g116868 = Input_Position9197_g116779;
				half3 WorldPosition238_g116868 = temp_output_279_0_g116868;
				half4 localSamplePlanar2D238_g116868 = SamplePlanar2D( Texture238_g116868 , Sampler238_g116868 , Coords238_g116868 , WorldPosition238_g116868 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116868) = _TerrainShaderTex6;
				SamplerState Sampler246_g116868 = SS30_g116885;
				half4 Coords246_g116868 = temp_output_37_0_g116868;
				half3 WorldPosition246_g116868 = temp_output_279_0_g116868;
				float3 temp_output_280_0_g116868 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116868 = temp_output_280_0_g116868;
				half4 localSamplePlanar3D246_g116868 = SamplePlanar3D( Texture246_g116868 , Sampler246_g116868 , Coords246_g116868 , WorldPosition246_g116868 , WorldNormal246_g116868 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116868) = _TerrainShaderTex6;
				SamplerState Sampler234_g116868 = SS30_g116885;
				float4 Coords234_g116868 = temp_output_37_0_g116868;
				float3 WorldPosition234_g116868 = temp_output_279_0_g116868;
				float4 localSampleStochastic2D234_g116868 = SampleStochastic2D( Texture234_g116868 , Sampler234_g116868 , Coords234_g116868 , WorldPosition234_g116868 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116868) = _TerrainShaderTex6;
				SamplerState Sampler263_g116868 = SS30_g116885;
				half4 Coords263_g116868 = temp_output_37_0_g116868;
				half3 WorldPosition263_g116868 = temp_output_279_0_g116868;
				half3 WorldNormal263_g116868 = temp_output_280_0_g116868;
				half4 localSampleStochastic3D263_g116868 = SampleStochastic3D( Texture263_g116868 , Sampler263_g116868 , Coords263_g116868 , WorldPosition263_g116868 , WorldNormal263_g116868 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8711_g116779 = localSamplePlanar2D238_g116868;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8711_g116779 = localSamplePlanar3D246_g116868;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8711_g116779 = localSampleStochastic2D234_g116868;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8711_g116779 = localSampleStochastic3D263_g116868;
				#else
				float4 staticSwitch8711_g116779 = localSamplePlanar2D238_g116868;
				#endif
				float4 temp_output_7_0_g116821 = _TerrainShaderMin6;
				float4 temp_output_10_0_g116821 = ( _TerrainShaderMax6 - temp_output_7_0_g116821 );
				float4 temp_output_8721_0_g116779 = saturate( ( ( staticSwitch8711_g116779 - temp_output_7_0_g116821 ) / ( temp_output_10_0_g116821 + 0.0001 ) ) );
				half4 Masks_0210_g116797 = temp_output_8721_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116869) = _TerrainShaderTex7;
				SamplerState Sampler238_g116869 = SS30_g116885;
				half4 Input_Terrain_Coords_078752_g116779 = _TerrainCoord7;
				float4 temp_output_37_0_g116869 = Input_Terrain_Coords_078752_g116779;
				half4 Coords238_g116869 = temp_output_37_0_g116869;
				float3 temp_output_279_0_g116869 = Input_Position9197_g116779;
				half3 WorldPosition238_g116869 = temp_output_279_0_g116869;
				half4 localSamplePlanar2D238_g116869 = SamplePlanar2D( Texture238_g116869 , Sampler238_g116869 , Coords238_g116869 , WorldPosition238_g116869 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116869) = _TerrainShaderTex7;
				SamplerState Sampler246_g116869 = SS30_g116885;
				half4 Coords246_g116869 = temp_output_37_0_g116869;
				half3 WorldPosition246_g116869 = temp_output_279_0_g116869;
				float3 temp_output_280_0_g116869 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116869 = temp_output_280_0_g116869;
				half4 localSamplePlanar3D246_g116869 = SamplePlanar3D( Texture246_g116869 , Sampler246_g116869 , Coords246_g116869 , WorldPosition246_g116869 , WorldNormal246_g116869 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116869) = _TerrainShaderTex7;
				SamplerState Sampler234_g116869 = SS30_g116885;
				float4 Coords234_g116869 = temp_output_37_0_g116869;
				float3 WorldPosition234_g116869 = temp_output_279_0_g116869;
				float4 localSampleStochastic2D234_g116869 = SampleStochastic2D( Texture234_g116869 , Sampler234_g116869 , Coords234_g116869 , WorldPosition234_g116869 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116869) = _TerrainShaderTex7;
				SamplerState Sampler263_g116869 = SS30_g116885;
				half4 Coords263_g116869 = temp_output_37_0_g116869;
				half3 WorldPosition263_g116869 = temp_output_279_0_g116869;
				half3 WorldNormal263_g116869 = temp_output_280_0_g116869;
				half4 localSampleStochastic3D263_g116869 = SampleStochastic3D( Texture263_g116869 , Sampler263_g116869 , Coords263_g116869 , WorldPosition263_g116869 , WorldNormal263_g116869 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8712_g116779 = localSamplePlanar2D238_g116869;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8712_g116779 = localSamplePlanar3D246_g116869;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8712_g116779 = localSampleStochastic2D234_g116869;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8712_g116779 = localSampleStochastic3D263_g116869;
				#else
				float4 staticSwitch8712_g116779 = localSamplePlanar2D238_g116869;
				#endif
				float4 temp_output_7_0_g116822 = _TerrainShaderMin7;
				float4 temp_output_10_0_g116822 = ( _TerrainShaderMax7 - temp_output_7_0_g116822 );
				float4 temp_output_8724_0_g116779 = saturate( ( ( staticSwitch8712_g116779 - temp_output_7_0_g116822 ) / ( temp_output_10_0_g116822 + 0.0001 ) ) );
				half4 Masks_0312_g116797 = temp_output_8724_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116870) = _TerrainShaderTex8;
				SamplerState Sampler238_g116870 = SS30_g116885;
				half4 Input_Terrain_Coords_088749_g116779 = _TerrainCoord8;
				float4 temp_output_37_0_g116870 = Input_Terrain_Coords_088749_g116779;
				half4 Coords238_g116870 = temp_output_37_0_g116870;
				float3 temp_output_279_0_g116870 = Input_Position9197_g116779;
				half3 WorldPosition238_g116870 = temp_output_279_0_g116870;
				half4 localSamplePlanar2D238_g116870 = SamplePlanar2D( Texture238_g116870 , Sampler238_g116870 , Coords238_g116870 , WorldPosition238_g116870 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116870) = _TerrainShaderTex8;
				SamplerState Sampler246_g116870 = SS30_g116885;
				half4 Coords246_g116870 = temp_output_37_0_g116870;
				half3 WorldPosition246_g116870 = temp_output_279_0_g116870;
				float3 temp_output_280_0_g116870 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116870 = temp_output_280_0_g116870;
				half4 localSamplePlanar3D246_g116870 = SamplePlanar3D( Texture246_g116870 , Sampler246_g116870 , Coords246_g116870 , WorldPosition246_g116870 , WorldNormal246_g116870 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116870) = _TerrainShaderTex8;
				SamplerState Sampler234_g116870 = SS30_g116885;
				float4 Coords234_g116870 = temp_output_37_0_g116870;
				float3 WorldPosition234_g116870 = temp_output_279_0_g116870;
				float4 localSampleStochastic2D234_g116870 = SampleStochastic2D( Texture234_g116870 , Sampler234_g116870 , Coords234_g116870 , WorldPosition234_g116870 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116870) = _TerrainShaderTex8;
				SamplerState Sampler263_g116870 = SS30_g116885;
				half4 Coords263_g116870 = temp_output_37_0_g116870;
				half3 WorldPosition263_g116870 = temp_output_279_0_g116870;
				half3 WorldNormal263_g116870 = temp_output_280_0_g116870;
				half4 localSampleStochastic3D263_g116870 = SampleStochastic3D( Texture263_g116870 , Sampler263_g116870 , Coords263_g116870 , WorldPosition263_g116870 , WorldNormal263_g116870 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8713_g116779 = localSamplePlanar2D238_g116870;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8713_g116779 = localSamplePlanar3D246_g116870;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8713_g116779 = localSampleStochastic2D234_g116870;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8713_g116779 = localSampleStochastic3D263_g116870;
				#else
				float4 staticSwitch8713_g116779 = localSamplePlanar2D238_g116870;
				#endif
				float4 temp_output_7_0_g116823 = _TerrainShaderMin8;
				float4 temp_output_10_0_g116823 = ( _TerrainShaderMax8 - temp_output_7_0_g116823 );
				float4 temp_output_8727_0_g116779 = saturate( ( ( staticSwitch8713_g116779 - temp_output_7_0_g116823 ) / ( temp_output_10_0_g116823 + 0.0001 ) ) );
				half4 Masks_0414_g116797 = temp_output_8727_0_g116779;
				float4 appendResult29_g116797 = (float4((Masks_015_g116797).z , (Masks_0210_g116797).z , (Masks_0312_g116797).z , (Masks_0414_g116797).z));
				half4 Control31_g116797 = Terrain_Control_087366_g116779;
				half4 Terrain_Height_088731_g116779 = ( appendResult29_g116797 * Control31_g116797 );
				float4 heights_087362_g116779 = Terrain_Height_088731_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116840) = _TerrainShaderTex9;
				SamplerState Sampler238_g116840 = SS30_g116885;
				half4 Input_Terrain_Coords_098833_g116779 = _TerrainCoord9;
				float4 temp_output_37_0_g116840 = Input_Terrain_Coords_098833_g116779;
				half4 Coords238_g116840 = temp_output_37_0_g116840;
				float3 temp_output_279_0_g116840 = Input_Position9197_g116779;
				half3 WorldPosition238_g116840 = temp_output_279_0_g116840;
				half4 localSamplePlanar2D238_g116840 = SamplePlanar2D( Texture238_g116840 , Sampler238_g116840 , Coords238_g116840 , WorldPosition238_g116840 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116840) = _TerrainShaderTex9;
				SamplerState Sampler246_g116840 = SS30_g116885;
				half4 Coords246_g116840 = temp_output_37_0_g116840;
				half3 WorldPosition246_g116840 = temp_output_279_0_g116840;
				float3 temp_output_280_0_g116840 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116840 = temp_output_280_0_g116840;
				half4 localSamplePlanar3D246_g116840 = SamplePlanar3D( Texture246_g116840 , Sampler246_g116840 , Coords246_g116840 , WorldPosition246_g116840 , WorldNormal246_g116840 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116840) = _TerrainShaderTex9;
				SamplerState Sampler234_g116840 = SS30_g116885;
				float4 Coords234_g116840 = temp_output_37_0_g116840;
				float3 WorldPosition234_g116840 = temp_output_279_0_g116840;
				float4 localSampleStochastic2D234_g116840 = SampleStochastic2D( Texture234_g116840 , Sampler234_g116840 , Coords234_g116840 , WorldPosition234_g116840 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116840) = _TerrainShaderTex9;
				SamplerState Sampler263_g116840 = SS30_g116885;
				half4 Coords263_g116840 = temp_output_37_0_g116840;
				half3 WorldPosition263_g116840 = temp_output_279_0_g116840;
				half3 WorldNormal263_g116840 = temp_output_280_0_g116840;
				half4 localSampleStochastic3D263_g116840 = SampleStochastic3D( Texture263_g116840 , Sampler263_g116840 , Coords263_g116840 , WorldPosition263_g116840 , WorldNormal263_g116840 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8878_g116779 = localSamplePlanar2D238_g116840;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8878_g116779 = localSamplePlanar3D246_g116840;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8878_g116779 = localSampleStochastic2D234_g116840;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8878_g116779 = localSampleStochastic3D263_g116840;
				#else
				float4 staticSwitch8878_g116779 = localSamplePlanar2D238_g116840;
				#endif
				float4 temp_output_7_0_g116803 = _TerrainShaderMin9;
				float4 temp_output_10_0_g116803 = ( _TerrainShaderMax9 - temp_output_7_0_g116803 );
				float4 temp_output_8815_0_g116779 = saturate( ( ( staticSwitch8878_g116779 - temp_output_7_0_g116803 ) / ( temp_output_10_0_g116803 + 0.0001 ) ) );
				half4 Masks_015_g116804 = temp_output_8815_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116850) = _TerrainShaderTex10;
				SamplerState Sampler238_g116850 = SS30_g116885;
				half4 Input_Terrain_Coords_108834_g116779 = _TerrainCoord10;
				float4 temp_output_37_0_g116850 = Input_Terrain_Coords_108834_g116779;
				half4 Coords238_g116850 = temp_output_37_0_g116850;
				float3 temp_output_279_0_g116850 = Input_Position9197_g116779;
				half3 WorldPosition238_g116850 = temp_output_279_0_g116850;
				half4 localSamplePlanar2D238_g116850 = SamplePlanar2D( Texture238_g116850 , Sampler238_g116850 , Coords238_g116850 , WorldPosition238_g116850 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116850) = _TerrainShaderTex10;
				SamplerState Sampler246_g116850 = SS30_g116885;
				half4 Coords246_g116850 = temp_output_37_0_g116850;
				half3 WorldPosition246_g116850 = temp_output_279_0_g116850;
				float3 temp_output_280_0_g116850 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116850 = temp_output_280_0_g116850;
				half4 localSamplePlanar3D246_g116850 = SamplePlanar3D( Texture246_g116850 , Sampler246_g116850 , Coords246_g116850 , WorldPosition246_g116850 , WorldNormal246_g116850 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116850) = _TerrainShaderTex10;
				SamplerState Sampler234_g116850 = SS30_g116885;
				float4 Coords234_g116850 = temp_output_37_0_g116850;
				float3 WorldPosition234_g116850 = temp_output_279_0_g116850;
				float4 localSampleStochastic2D234_g116850 = SampleStochastic2D( Texture234_g116850 , Sampler234_g116850 , Coords234_g116850 , WorldPosition234_g116850 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116850) = _TerrainShaderTex10;
				SamplerState Sampler263_g116850 = SS30_g116885;
				half4 Coords263_g116850 = temp_output_37_0_g116850;
				half3 WorldPosition263_g116850 = temp_output_279_0_g116850;
				half3 WorldNormal263_g116850 = temp_output_280_0_g116850;
				half4 localSampleStochastic3D263_g116850 = SampleStochastic3D( Texture263_g116850 , Sampler263_g116850 , Coords263_g116850 , WorldPosition263_g116850 , WorldNormal263_g116850 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8860_g116779 = localSamplePlanar2D238_g116850;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8860_g116779 = localSamplePlanar3D246_g116850;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8860_g116779 = localSampleStochastic2D234_g116850;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8860_g116779 = localSampleStochastic3D263_g116850;
				#else
				float4 staticSwitch8860_g116779 = localSamplePlanar2D238_g116850;
				#endif
				float4 temp_output_7_0_g116815 = _TerrainShaderMin10;
				float4 temp_output_10_0_g116815 = ( _TerrainShaderMax10 - temp_output_7_0_g116815 );
				float4 temp_output_8818_0_g116779 = saturate( ( ( staticSwitch8860_g116779 - temp_output_7_0_g116815 ) / ( temp_output_10_0_g116815 + 0.0001 ) ) );
				half4 Masks_0210_g116804 = temp_output_8818_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116851) = _TerrainShaderTex11;
				SamplerState Sampler238_g116851 = SS30_g116885;
				half4 Input_Terrain_Coords_118835_g116779 = _TerrainCoord11;
				float4 temp_output_37_0_g116851 = Input_Terrain_Coords_118835_g116779;
				half4 Coords238_g116851 = temp_output_37_0_g116851;
				float3 temp_output_279_0_g116851 = Input_Position9197_g116779;
				half3 WorldPosition238_g116851 = temp_output_279_0_g116851;
				half4 localSamplePlanar2D238_g116851 = SamplePlanar2D( Texture238_g116851 , Sampler238_g116851 , Coords238_g116851 , WorldPosition238_g116851 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116851) = _TerrainShaderTex11;
				SamplerState Sampler246_g116851 = SS30_g116885;
				half4 Coords246_g116851 = temp_output_37_0_g116851;
				half3 WorldPosition246_g116851 = temp_output_279_0_g116851;
				float3 temp_output_280_0_g116851 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116851 = temp_output_280_0_g116851;
				half4 localSamplePlanar3D246_g116851 = SamplePlanar3D( Texture246_g116851 , Sampler246_g116851 , Coords246_g116851 , WorldPosition246_g116851 , WorldNormal246_g116851 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116851) = _TerrainShaderTex11;
				SamplerState Sampler234_g116851 = SS30_g116885;
				float4 Coords234_g116851 = temp_output_37_0_g116851;
				float3 WorldPosition234_g116851 = temp_output_279_0_g116851;
				float4 localSampleStochastic2D234_g116851 = SampleStochastic2D( Texture234_g116851 , Sampler234_g116851 , Coords234_g116851 , WorldPosition234_g116851 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116851) = _TerrainShaderTex11;
				SamplerState Sampler263_g116851 = SS30_g116885;
				half4 Coords263_g116851 = temp_output_37_0_g116851;
				half3 WorldPosition263_g116851 = temp_output_279_0_g116851;
				half3 WorldNormal263_g116851 = temp_output_280_0_g116851;
				half4 localSampleStochastic3D263_g116851 = SampleStochastic3D( Texture263_g116851 , Sampler263_g116851 , Coords263_g116851 , WorldPosition263_g116851 , WorldNormal263_g116851 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8861_g116779 = localSamplePlanar2D238_g116851;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8861_g116779 = localSamplePlanar3D246_g116851;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8861_g116779 = localSampleStochastic2D234_g116851;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8861_g116779 = localSampleStochastic3D263_g116851;
				#else
				float4 staticSwitch8861_g116779 = localSamplePlanar2D238_g116851;
				#endif
				float4 temp_output_7_0_g116816 = _TerrainShaderMin11;
				float4 temp_output_10_0_g116816 = ( _TerrainShaderMax11 - temp_output_7_0_g116816 );
				float4 temp_output_8819_0_g116779 = saturate( ( ( staticSwitch8861_g116779 - temp_output_7_0_g116816 ) / ( temp_output_10_0_g116816 + 0.0001 ) ) );
				half4 Masks_0312_g116804 = temp_output_8819_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116852) = _TerrainShaderTex12;
				SamplerState Sampler238_g116852 = SS30_g116885;
				half4 Input_Terrain_Coords_128836_g116779 = _TerrainCoord12;
				float4 temp_output_37_0_g116852 = Input_Terrain_Coords_128836_g116779;
				half4 Coords238_g116852 = temp_output_37_0_g116852;
				float3 temp_output_279_0_g116852 = Input_Position9197_g116779;
				half3 WorldPosition238_g116852 = temp_output_279_0_g116852;
				half4 localSamplePlanar2D238_g116852 = SamplePlanar2D( Texture238_g116852 , Sampler238_g116852 , Coords238_g116852 , WorldPosition238_g116852 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116852) = _TerrainShaderTex12;
				SamplerState Sampler246_g116852 = SS30_g116885;
				half4 Coords246_g116852 = temp_output_37_0_g116852;
				half3 WorldPosition246_g116852 = temp_output_279_0_g116852;
				float3 temp_output_280_0_g116852 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116852 = temp_output_280_0_g116852;
				half4 localSamplePlanar3D246_g116852 = SamplePlanar3D( Texture246_g116852 , Sampler246_g116852 , Coords246_g116852 , WorldPosition246_g116852 , WorldNormal246_g116852 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116852) = _TerrainShaderTex12;
				SamplerState Sampler234_g116852 = SS30_g116885;
				float4 Coords234_g116852 = temp_output_37_0_g116852;
				float3 WorldPosition234_g116852 = temp_output_279_0_g116852;
				float4 localSampleStochastic2D234_g116852 = SampleStochastic2D( Texture234_g116852 , Sampler234_g116852 , Coords234_g116852 , WorldPosition234_g116852 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116852) = _TerrainShaderTex12;
				SamplerState Sampler263_g116852 = SS30_g116885;
				half4 Coords263_g116852 = temp_output_37_0_g116852;
				half3 WorldPosition263_g116852 = temp_output_279_0_g116852;
				half3 WorldNormal263_g116852 = temp_output_280_0_g116852;
				half4 localSampleStochastic3D263_g116852 = SampleStochastic3D( Texture263_g116852 , Sampler263_g116852 , Coords263_g116852 , WorldPosition263_g116852 , WorldNormal263_g116852 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8879_g116779 = localSamplePlanar2D238_g116852;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8879_g116779 = localSamplePlanar3D246_g116852;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8879_g116779 = localSampleStochastic2D234_g116852;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8879_g116779 = localSampleStochastic3D263_g116852;
				#else
				float4 staticSwitch8879_g116779 = localSamplePlanar2D238_g116852;
				#endif
				float4 temp_output_7_0_g116817 = _TerrainShaderMin12;
				float4 temp_output_10_0_g116817 = ( _TerrainShaderMax12 - temp_output_7_0_g116817 );
				float4 temp_output_8820_0_g116779 = saturate( ( ( staticSwitch8879_g116779 - temp_output_7_0_g116817 ) / ( temp_output_10_0_g116817 + 0.0001 ) ) );
				half4 Masks_0414_g116804 = temp_output_8820_0_g116779;
				float4 appendResult29_g116804 = (float4((Masks_015_g116804).z , (Masks_0210_g116804).z , (Masks_0312_g116804).z , (Masks_0414_g116804).z));
				half4 Control31_g116804 = Terrain_Control_127712_g116779;
				half4 Terrain_Height_128870_g116779 = ( appendResult29_g116804 * Control31_g116804 );
				float4 heights_127362_g116779 = Terrain_Height_128870_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116848) = _TerrainShaderTex13;
				SamplerState Sampler238_g116848 = SS30_g116885;
				half4 Input_Terrain_Coords_138960_g116779 = _TerrainCoord13;
				float4 temp_output_37_0_g116848 = Input_Terrain_Coords_138960_g116779;
				half4 Coords238_g116848 = temp_output_37_0_g116848;
				float3 temp_output_279_0_g116848 = Input_Position9197_g116779;
				half3 WorldPosition238_g116848 = temp_output_279_0_g116848;
				half4 localSamplePlanar2D238_g116848 = SamplePlanar2D( Texture238_g116848 , Sampler238_g116848 , Coords238_g116848 , WorldPosition238_g116848 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116848) = _TerrainShaderTex13;
				SamplerState Sampler246_g116848 = SS30_g116885;
				half4 Coords246_g116848 = temp_output_37_0_g116848;
				half3 WorldPosition246_g116848 = temp_output_279_0_g116848;
				float3 temp_output_280_0_g116848 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116848 = temp_output_280_0_g116848;
				half4 localSamplePlanar3D246_g116848 = SamplePlanar3D( Texture246_g116848 , Sampler246_g116848 , Coords246_g116848 , WorldPosition246_g116848 , WorldNormal246_g116848 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116848) = _TerrainShaderTex13;
				SamplerState Sampler234_g116848 = SS30_g116885;
				float4 Coords234_g116848 = temp_output_37_0_g116848;
				float3 WorldPosition234_g116848 = temp_output_279_0_g116848;
				float4 localSampleStochastic2D234_g116848 = SampleStochastic2D( Texture234_g116848 , Sampler234_g116848 , Coords234_g116848 , WorldPosition234_g116848 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116848) = _TerrainShaderTex13;
				SamplerState Sampler263_g116848 = SS30_g116885;
				half4 Coords263_g116848 = temp_output_37_0_g116848;
				half3 WorldPosition263_g116848 = temp_output_279_0_g116848;
				half3 WorldNormal263_g116848 = temp_output_280_0_g116848;
				half4 localSampleStochastic3D263_g116848 = SampleStochastic3D( Texture263_g116848 , Sampler263_g116848 , Coords263_g116848 , WorldPosition263_g116848 , WorldNormal263_g116848 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch9000_g116779 = localSamplePlanar2D238_g116848;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch9000_g116779 = localSamplePlanar3D246_g116848;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch9000_g116779 = localSampleStochastic2D234_g116848;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch9000_g116779 = localSampleStochastic3D263_g116848;
				#else
				float4 staticSwitch9000_g116779 = localSamplePlanar2D238_g116848;
				#endif
				float4 temp_output_7_0_g116810 = _TerrainShaderMin13;
				float4 temp_output_10_0_g116810 = ( _TerrainShaderMax13 - temp_output_7_0_g116810 );
				float4 temp_output_8931_0_g116779 = saturate( ( ( staticSwitch9000_g116779 - temp_output_7_0_g116810 ) / ( temp_output_10_0_g116810 + 0.0001 ) ) );
				half4 Masks_015_g116811 = temp_output_8931_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116859) = _TerrainShaderTex14;
				SamplerState Sampler238_g116859 = SS30_g116885;
				half4 Input_Terrain_Coords_148961_g116779 = _TerrainCoord14;
				float4 temp_output_37_0_g116859 = Input_Terrain_Coords_148961_g116779;
				half4 Coords238_g116859 = temp_output_37_0_g116859;
				float3 temp_output_279_0_g116859 = Input_Position9197_g116779;
				half3 WorldPosition238_g116859 = temp_output_279_0_g116859;
				half4 localSamplePlanar2D238_g116859 = SamplePlanar2D( Texture238_g116859 , Sampler238_g116859 , Coords238_g116859 , WorldPosition238_g116859 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116859) = _TerrainShaderTex14;
				SamplerState Sampler246_g116859 = SS30_g116885;
				half4 Coords246_g116859 = temp_output_37_0_g116859;
				half3 WorldPosition246_g116859 = temp_output_279_0_g116859;
				float3 temp_output_280_0_g116859 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116859 = temp_output_280_0_g116859;
				half4 localSamplePlanar3D246_g116859 = SamplePlanar3D( Texture246_g116859 , Sampler246_g116859 , Coords246_g116859 , WorldPosition246_g116859 , WorldNormal246_g116859 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116859) = _TerrainShaderTex14;
				SamplerState Sampler234_g116859 = SS30_g116885;
				float4 Coords234_g116859 = temp_output_37_0_g116859;
				float3 WorldPosition234_g116859 = temp_output_279_0_g116859;
				float4 localSampleStochastic2D234_g116859 = SampleStochastic2D( Texture234_g116859 , Sampler234_g116859 , Coords234_g116859 , WorldPosition234_g116859 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116859) = _TerrainShaderTex14;
				SamplerState Sampler263_g116859 = SS30_g116885;
				half4 Coords263_g116859 = temp_output_37_0_g116859;
				half3 WorldPosition263_g116859 = temp_output_279_0_g116859;
				half3 WorldNormal263_g116859 = temp_output_280_0_g116859;
				half4 localSampleStochastic3D263_g116859 = SampleStochastic3D( Texture263_g116859 , Sampler263_g116859 , Coords263_g116859 , WorldPosition263_g116859 , WorldNormal263_g116859 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch9001_g116779 = localSamplePlanar2D238_g116859;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch9001_g116779 = localSamplePlanar3D246_g116859;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch9001_g116779 = localSampleStochastic2D234_g116859;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch9001_g116779 = localSampleStochastic3D263_g116859;
				#else
				float4 staticSwitch9001_g116779 = localSamplePlanar2D238_g116859;
				#endif
				float4 temp_output_7_0_g116818 = _TerrainShaderMin14;
				float4 temp_output_10_0_g116818 = ( _TerrainShaderMax14 - temp_output_7_0_g116818 );
				float4 temp_output_8934_0_g116779 = saturate( ( ( staticSwitch9001_g116779 - temp_output_7_0_g116818 ) / ( temp_output_10_0_g116818 + 0.0001 ) ) );
				half4 Masks_0210_g116811 = temp_output_8934_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116860) = _TerrainShaderTex15;
				SamplerState Sampler238_g116860 = SS30_g116885;
				half4 Input_Terrain_Coords_158962_g116779 = _TerrainCoord15;
				float4 temp_output_37_0_g116860 = Input_Terrain_Coords_158962_g116779;
				half4 Coords238_g116860 = temp_output_37_0_g116860;
				float3 temp_output_279_0_g116860 = Input_Position9197_g116779;
				half3 WorldPosition238_g116860 = temp_output_279_0_g116860;
				half4 localSamplePlanar2D238_g116860 = SamplePlanar2D( Texture238_g116860 , Sampler238_g116860 , Coords238_g116860 , WorldPosition238_g116860 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116860) = _TerrainShaderTex15;
				SamplerState Sampler246_g116860 = SS30_g116885;
				half4 Coords246_g116860 = temp_output_37_0_g116860;
				half3 WorldPosition246_g116860 = temp_output_279_0_g116860;
				float3 temp_output_280_0_g116860 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116860 = temp_output_280_0_g116860;
				half4 localSamplePlanar3D246_g116860 = SamplePlanar3D( Texture246_g116860 , Sampler246_g116860 , Coords246_g116860 , WorldPosition246_g116860 , WorldNormal246_g116860 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116860) = _TerrainShaderTex15;
				SamplerState Sampler234_g116860 = SS30_g116885;
				float4 Coords234_g116860 = temp_output_37_0_g116860;
				float3 WorldPosition234_g116860 = temp_output_279_0_g116860;
				float4 localSampleStochastic2D234_g116860 = SampleStochastic2D( Texture234_g116860 , Sampler234_g116860 , Coords234_g116860 , WorldPosition234_g116860 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116860) = _TerrainShaderTex15;
				SamplerState Sampler263_g116860 = SS30_g116885;
				half4 Coords263_g116860 = temp_output_37_0_g116860;
				half3 WorldPosition263_g116860 = temp_output_279_0_g116860;
				half3 WorldNormal263_g116860 = temp_output_280_0_g116860;
				half4 localSampleStochastic3D263_g116860 = SampleStochastic3D( Texture263_g116860 , Sampler263_g116860 , Coords263_g116860 , WorldPosition263_g116860 , WorldNormal263_g116860 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch9002_g116779 = localSamplePlanar2D238_g116860;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch9002_g116779 = localSamplePlanar3D246_g116860;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch9002_g116779 = localSampleStochastic2D234_g116860;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch9002_g116779 = localSampleStochastic3D263_g116860;
				#else
				float4 staticSwitch9002_g116779 = localSamplePlanar2D238_g116860;
				#endif
				float4 temp_output_7_0_g116819 = _TerrainShaderMin15;
				float4 temp_output_10_0_g116819 = ( _TerrainShaderMax15 - temp_output_7_0_g116819 );
				float4 temp_output_8935_0_g116779 = saturate( ( ( staticSwitch9002_g116779 - temp_output_7_0_g116819 ) / ( temp_output_10_0_g116819 + 0.0001 ) ) );
				half4 Masks_0312_g116811 = temp_output_8935_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116861) = _TerrainShaderTex16;
				SamplerState Sampler238_g116861 = SS30_g116885;
				half4 Input_Terrain_Coords_168959_g116779 = _TerrainCoord16;
				float4 temp_output_37_0_g116861 = Input_Terrain_Coords_168959_g116779;
				half4 Coords238_g116861 = temp_output_37_0_g116861;
				float3 temp_output_279_0_g116861 = Input_Position9197_g116779;
				half3 WorldPosition238_g116861 = temp_output_279_0_g116861;
				half4 localSamplePlanar2D238_g116861 = SamplePlanar2D( Texture238_g116861 , Sampler238_g116861 , Coords238_g116861 , WorldPosition238_g116861 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116861) = _TerrainShaderTex16;
				SamplerState Sampler246_g116861 = SS30_g116885;
				half4 Coords246_g116861 = temp_output_37_0_g116861;
				half3 WorldPosition246_g116861 = temp_output_279_0_g116861;
				float3 temp_output_280_0_g116861 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116861 = temp_output_280_0_g116861;
				half4 localSamplePlanar3D246_g116861 = SamplePlanar3D( Texture246_g116861 , Sampler246_g116861 , Coords246_g116861 , WorldPosition246_g116861 , WorldNormal246_g116861 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116861) = _TerrainShaderTex16;
				SamplerState Sampler234_g116861 = SS30_g116885;
				float4 Coords234_g116861 = temp_output_37_0_g116861;
				float3 WorldPosition234_g116861 = temp_output_279_0_g116861;
				float4 localSampleStochastic2D234_g116861 = SampleStochastic2D( Texture234_g116861 , Sampler234_g116861 , Coords234_g116861 , WorldPosition234_g116861 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116861) = _TerrainShaderTex16;
				SamplerState Sampler263_g116861 = SS30_g116885;
				half4 Coords263_g116861 = temp_output_37_0_g116861;
				half3 WorldPosition263_g116861 = temp_output_279_0_g116861;
				half3 WorldNormal263_g116861 = temp_output_280_0_g116861;
				half4 localSampleStochastic3D263_g116861 = SampleStochastic3D( Texture263_g116861 , Sampler263_g116861 , Coords263_g116861 , WorldPosition263_g116861 , WorldNormal263_g116861 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch9003_g116779 = localSamplePlanar2D238_g116861;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch9003_g116779 = localSamplePlanar3D246_g116861;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch9003_g116779 = localSampleStochastic2D234_g116861;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch9003_g116779 = localSampleStochastic3D263_g116861;
				#else
				float4 staticSwitch9003_g116779 = localSamplePlanar2D238_g116861;
				#endif
				float4 temp_output_7_0_g116820 = _TerrainShaderMin16;
				float4 temp_output_10_0_g116820 = ( _TerrainShaderMax16 - temp_output_7_0_g116820 );
				float4 temp_output_8936_0_g116779 = saturate( ( ( staticSwitch9003_g116779 - temp_output_7_0_g116820 ) / ( temp_output_10_0_g116820 + 0.0001 ) ) );
				half4 Masks_0414_g116811 = temp_output_8936_0_g116779;
				float4 appendResult29_g116811 = (float4((Masks_015_g116811).z , (Masks_0210_g116811).z , (Masks_0312_g116811).z , (Masks_0414_g116811).z));
				half4 Control31_g116811 = Terrain_Control_167711_g116779;
				half4 Terrain_Height_169015_g116779 = ( appendResult29_g116811 * Control31_g116811 );
				float4 heights_167362_g116779 = Terrain_Height_169015_g116779;
				float heightTransition7362_g116779 = ( 1.0 - _TerrainHeightBlendValue );
				float4 weights_047362_g116779 = float4( 0,0,0,0 );
				float4 weights_087362_g116779 = float4( 0,0,0,0 );
				float4 weights_127362_g116779 = float4( 0,0,0,0 );
				float4 weights_167362_g116779 = float4( 0,0,0,0 );
				//Modified version of the HDRP terrain height based blending
				float maxHeight = 0;
				float4 weightedHeights_04 = float4( 0,0,0,0 );
				float4 weightedHeights_08 = float4( 0,0,0,0 );
				float4 weightedHeights_12 = float4( 0,0,0,0 );
				float4 weightedHeights_16 = float4( 0,0,0,0 );
				maxHeight = heights_047362_g116779.x;
				maxHeight = max(maxHeight, heights_047362_g116779.y);
				maxHeight = max(maxHeight, heights_047362_g116779.z);
				maxHeight = max(maxHeight, heights_047362_g116779.w);
				#ifdef TVE_TERRAIN_08
				maxHeight = max(maxHeight, heights_087362_g116779.x);
				maxHeight = max(maxHeight, heights_087362_g116779.y);
				maxHeight = max(maxHeight, heights_087362_g116779.z);
				maxHeight = max(maxHeight, heights_087362_g116779.w);
				#endif
				#ifdef TVE_TERRAIN_12
				maxHeight = max(maxHeight, heights_087362_g116779.x);
				maxHeight = max(maxHeight, heights_087362_g116779.y);
				maxHeight = max(maxHeight, heights_087362_g116779.z);
				maxHeight = max(maxHeight, heights_087362_g116779.w);
				maxHeight = max(maxHeight, heights_127362_g116779.x);
				maxHeight = max(maxHeight, heights_127362_g116779.y);
				maxHeight = max(maxHeight, heights_127362_g116779.z);
				maxHeight = max(maxHeight, heights_127362_g116779.w);
				#endif
				#ifdef TVE_TERRAIN_16
				maxHeight = max(maxHeight, heights_087362_g116779.x);
				maxHeight = max(maxHeight, heights_087362_g116779.y);
				maxHeight = max(maxHeight, heights_087362_g116779.z);
				maxHeight = max(maxHeight, heights_087362_g116779.w);
				maxHeight = max(maxHeight, heights_127362_g116779.x);
				maxHeight = max(maxHeight, heights_127362_g116779.y);
				maxHeight = max(maxHeight, heights_127362_g116779.z);
				maxHeight = max(maxHeight, heights_127362_g116779.w);
				maxHeight = max(maxHeight, heights_167362_g116779.x);
				maxHeight = max(maxHeight, heights_167362_g116779.y);
				maxHeight = max(maxHeight, heights_167362_g116779.z);
				maxHeight = max(maxHeight, heights_167362_g116779.w);
				#endif
				float transition = max(heightTransition7362_g116779, 0.01);
				weightedHeights_04 = float4 ( heights_047362_g116779.x, heights_047362_g116779.y, heights_047362_g116779.z, heights_047362_g116779.w );
				weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
				weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g116779;
				#ifdef TVE_TERRAIN_08
				weightedHeights_08 = float4 ( heights_087362_g116779.x, heights_087362_g116779.y, heights_087362_g116779.z, heights_087362_g116779.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g116779;
				#endif
				#ifdef TVE_TERRAIN_12
				weightedHeights_08 = float4 ( heights_087362_g116779.x, heights_087362_g116779.y, heights_087362_g116779.z, heights_087362_g116779.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g116779;
				weightedHeights_12 = float4 ( heights_127362_g116779.x, heights_127362_g116779.y, heights_127362_g116779.z, heights_127362_g116779.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g116779;
				#endif
				#ifdef TVE_TERRAIN_16
				weightedHeights_08 = float4 ( heights_087362_g116779.x, heights_087362_g116779.y, heights_087362_g116779.z, heights_087362_g116779.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g116779;
				weightedHeights_12 = float4 ( heights_127362_g116779.x, heights_127362_g116779.y, heights_127362_g116779.z, heights_127362_g116779.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g116779;
				weightedHeights_16 = float4 ( heights_167362_g116779.x, heights_167362_g116779.y, heights_167362_g116779.z, heights_167362_g116779.w );
				weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
				weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g116779;
				#endif
				float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
				float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
				float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
				float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
				float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
				weights_047362_g116779 = weightedHeights_04 / sumHeight.xxxx;
				#ifdef TVE_TERRAIN_08
				weights_087362_g116779 = weightedHeights_08 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_12
				weights_087362_g116779 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g116779 = weightedHeights_12 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_16
				weights_087362_g116779 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g116779 = weightedHeights_12 / sumHeight.xxxx;
				weights_167362_g116779 = weightedHeights_16 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8792_g116779 = weights_047362_g116779;
				#else
				float4 staticSwitch8792_g116779 = control_047362_g116779;
				#endif
				half4 Terrain_Weights_046781_g116779 = staticSwitch8792_g116779;
				half4 Weights52_g116784 = Terrain_Weights_046781_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116825) = _TerrainAlbedoTex1;
				float localFilterTexture19_g116882 = ( 0.0 );
				SamplerState SamplerDefault19_g116882 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g116882 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g116882 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g116882 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g116882 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g116882 = SamplerDefault19_g116882;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g116882 = SamplerDefault19_g116882;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g116882 = SamplerPoint19_g116882;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g116882 = SamplerLow19_g116882;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g116882 = SamplerMedium19_g116882;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g116882 = SamplerHigh19_g116882;
				#endif
				SamplerState Sampler238_g116825 = SS19_g116882;
				float4 temp_output_37_0_g116825 = Input_Terrain_Coords_016785_g116779;
				half4 Coords238_g116825 = temp_output_37_0_g116825;
				float3 temp_output_279_0_g116825 = Input_Position9197_g116779;
				half3 WorldPosition238_g116825 = temp_output_279_0_g116825;
				half4 localSamplePlanar2D238_g116825 = SamplePlanar2D( Texture238_g116825 , Sampler238_g116825 , Coords238_g116825 , WorldPosition238_g116825 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116825) = _TerrainAlbedoTex1;
				SamplerState Sampler246_g116825 = SS19_g116882;
				half4 Coords246_g116825 = temp_output_37_0_g116825;
				half3 WorldPosition246_g116825 = temp_output_279_0_g116825;
				float3 temp_output_280_0_g116825 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116825 = temp_output_280_0_g116825;
				half4 localSamplePlanar3D246_g116825 = SamplePlanar3D( Texture246_g116825 , Sampler246_g116825 , Coords246_g116825 , WorldPosition246_g116825 , WorldNormal246_g116825 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116825) = _TerrainAlbedoTex1;
				SamplerState Sampler234_g116825 = SS19_g116882;
				float4 Coords234_g116825 = temp_output_37_0_g116825;
				float3 WorldPosition234_g116825 = temp_output_279_0_g116825;
				float4 localSampleStochastic2D234_g116825 = SampleStochastic2D( Texture234_g116825 , Sampler234_g116825 , Coords234_g116825 , WorldPosition234_g116825 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116825) = _TerrainAlbedoTex1;
				SamplerState Sampler263_g116825 = SS19_g116882;
				half4 Coords263_g116825 = temp_output_37_0_g116825;
				half3 WorldPosition263_g116825 = temp_output_279_0_g116825;
				half3 WorldNormal263_g116825 = temp_output_280_0_g116825;
				half4 localSampleStochastic3D263_g116825 = SampleStochastic3D( Texture263_g116825 , Sampler263_g116825 , Coords263_g116825 , WorldPosition263_g116825 , WorldNormal263_g116825 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8614_g116779 = localSamplePlanar2D238_g116825;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8614_g116779 = localSamplePlanar3D246_g116825;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8614_g116779 = localSampleStochastic2D234_g116825;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8614_g116779 = localSampleStochastic3D263_g116825;
				#else
				float4 staticSwitch8614_g116779 = localSamplePlanar2D238_g116825;
				#endif
				half4 Layer133_g116784 = staticSwitch8614_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler238_g116826 = SS19_g116882;
				float4 temp_output_37_0_g116826 = Input_Terrain_Coords_026787_g116779;
				half4 Coords238_g116826 = temp_output_37_0_g116826;
				float3 temp_output_279_0_g116826 = Input_Position9197_g116779;
				half3 WorldPosition238_g116826 = temp_output_279_0_g116826;
				half4 localSamplePlanar2D238_g116826 = SamplePlanar2D( Texture238_g116826 , Sampler238_g116826 , Coords238_g116826 , WorldPosition238_g116826 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler246_g116826 = SS19_g116882;
				half4 Coords246_g116826 = temp_output_37_0_g116826;
				half3 WorldPosition246_g116826 = temp_output_279_0_g116826;
				float3 temp_output_280_0_g116826 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116826 = temp_output_280_0_g116826;
				half4 localSamplePlanar3D246_g116826 = SamplePlanar3D( Texture246_g116826 , Sampler246_g116826 , Coords246_g116826 , WorldPosition246_g116826 , WorldNormal246_g116826 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler234_g116826 = SS19_g116882;
				float4 Coords234_g116826 = temp_output_37_0_g116826;
				float3 WorldPosition234_g116826 = temp_output_279_0_g116826;
				float4 localSampleStochastic2D234_g116826 = SampleStochastic2D( Texture234_g116826 , Sampler234_g116826 , Coords234_g116826 , WorldPosition234_g116826 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler263_g116826 = SS19_g116882;
				half4 Coords263_g116826 = temp_output_37_0_g116826;
				half3 WorldPosition263_g116826 = temp_output_279_0_g116826;
				half3 WorldNormal263_g116826 = temp_output_280_0_g116826;
				half4 localSampleStochastic3D263_g116826 = SampleStochastic3D( Texture263_g116826 , Sampler263_g116826 , Coords263_g116826 , WorldPosition263_g116826 , WorldNormal263_g116826 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8629_g116779 = localSamplePlanar2D238_g116826;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8629_g116779 = localSamplePlanar3D246_g116826;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8629_g116779 = localSampleStochastic2D234_g116826;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8629_g116779 = localSampleStochastic3D263_g116826;
				#else
				float4 staticSwitch8629_g116779 = localSamplePlanar2D238_g116826;
				#endif
				half4 Layer237_g116784 = staticSwitch8629_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler238_g116829 = SS19_g116882;
				float4 temp_output_37_0_g116829 = Input_Terrain_Coords_036789_g116779;
				half4 Coords238_g116829 = temp_output_37_0_g116829;
				float3 temp_output_279_0_g116829 = Input_Position9197_g116779;
				half3 WorldPosition238_g116829 = temp_output_279_0_g116829;
				half4 localSamplePlanar2D238_g116829 = SamplePlanar2D( Texture238_g116829 , Sampler238_g116829 , Coords238_g116829 , WorldPosition238_g116829 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler246_g116829 = SS19_g116882;
				half4 Coords246_g116829 = temp_output_37_0_g116829;
				half3 WorldPosition246_g116829 = temp_output_279_0_g116829;
				float3 temp_output_280_0_g116829 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116829 = temp_output_280_0_g116829;
				half4 localSamplePlanar3D246_g116829 = SamplePlanar3D( Texture246_g116829 , Sampler246_g116829 , Coords246_g116829 , WorldPosition246_g116829 , WorldNormal246_g116829 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler234_g116829 = SS19_g116882;
				float4 Coords234_g116829 = temp_output_37_0_g116829;
				float3 WorldPosition234_g116829 = temp_output_279_0_g116829;
				float4 localSampleStochastic2D234_g116829 = SampleStochastic2D( Texture234_g116829 , Sampler234_g116829 , Coords234_g116829 , WorldPosition234_g116829 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler263_g116829 = SS19_g116882;
				half4 Coords263_g116829 = temp_output_37_0_g116829;
				half3 WorldPosition263_g116829 = temp_output_279_0_g116829;
				half3 WorldNormal263_g116829 = temp_output_280_0_g116829;
				half4 localSampleStochastic3D263_g116829 = SampleStochastic3D( Texture263_g116829 , Sampler263_g116829 , Coords263_g116829 , WorldPosition263_g116829 , WorldNormal263_g116829 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8630_g116779 = localSamplePlanar2D238_g116829;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8630_g116779 = localSamplePlanar3D246_g116829;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8630_g116779 = localSampleStochastic2D234_g116829;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8630_g116779 = localSampleStochastic3D263_g116829;
				#else
				float4 staticSwitch8630_g116779 = localSamplePlanar2D238_g116829;
				#endif
				half4 Layer338_g116784 = staticSwitch8630_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler238_g116831 = SS19_g116882;
				float4 temp_output_37_0_g116831 = Input_Terrain_Coords_046791_g116779;
				half4 Coords238_g116831 = temp_output_37_0_g116831;
				float3 temp_output_279_0_g116831 = Input_Position9197_g116779;
				half3 WorldPosition238_g116831 = temp_output_279_0_g116831;
				half4 localSamplePlanar2D238_g116831 = SamplePlanar2D( Texture238_g116831 , Sampler238_g116831 , Coords238_g116831 , WorldPosition238_g116831 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler246_g116831 = SS19_g116882;
				half4 Coords246_g116831 = temp_output_37_0_g116831;
				half3 WorldPosition246_g116831 = temp_output_279_0_g116831;
				float3 temp_output_280_0_g116831 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116831 = temp_output_280_0_g116831;
				half4 localSamplePlanar3D246_g116831 = SamplePlanar3D( Texture246_g116831 , Sampler246_g116831 , Coords246_g116831 , WorldPosition246_g116831 , WorldNormal246_g116831 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler234_g116831 = SS19_g116882;
				float4 Coords234_g116831 = temp_output_37_0_g116831;
				float3 WorldPosition234_g116831 = temp_output_279_0_g116831;
				float4 localSampleStochastic2D234_g116831 = SampleStochastic2D( Texture234_g116831 , Sampler234_g116831 , Coords234_g116831 , WorldPosition234_g116831 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler263_g116831 = SS19_g116882;
				half4 Coords263_g116831 = temp_output_37_0_g116831;
				half3 WorldPosition263_g116831 = temp_output_279_0_g116831;
				half3 WorldNormal263_g116831 = temp_output_280_0_g116831;
				half4 localSampleStochastic3D263_g116831 = SampleStochastic3D( Texture263_g116831 , Sampler263_g116831 , Coords263_g116831 , WorldPosition263_g116831 , WorldNormal263_g116831 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8631_g116779 = localSamplePlanar2D238_g116831;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8631_g116779 = localSamplePlanar3D246_g116831;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8631_g116779 = localSampleStochastic2D234_g116831;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8631_g116779 = localSampleStochastic3D263_g116831;
				#else
				float4 staticSwitch8631_g116779 = localSamplePlanar2D238_g116831;
				#endif
				half4 Layer439_g116784 = staticSwitch8631_g116779;
				float4 weightedBlendVar31_g116784 = Weights52_g116784;
				float4 weightedBlend31_g116784 = ( weightedBlendVar31_g116784.x*Layer133_g116784 + weightedBlendVar31_g116784.y*Layer237_g116784 + weightedBlendVar31_g116784.z*Layer338_g116784 + weightedBlendVar31_g116784.w*Layer439_g116784 );
				half4 Terrain_AAAA_047200_g116779 = weightedBlend31_g116784;
				half4 Layer_045_g116787 = Terrain_AAAA_047200_g116779;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8793_g116779 = weights_087362_g116779;
				#else
				float4 staticSwitch8793_g116779 = control_087362_g116779;
				#endif
				half4 Terrain_Weights_087340_g116779 = staticSwitch8793_g116779;
				half4 Weights52_g116794 = Terrain_Weights_087340_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler238_g116835 = SS19_g116882;
				float4 temp_output_37_0_g116835 = Input_Terrain_Coords_058750_g116779;
				half4 Coords238_g116835 = temp_output_37_0_g116835;
				float3 temp_output_279_0_g116835 = Input_Position9197_g116779;
				half3 WorldPosition238_g116835 = temp_output_279_0_g116835;
				half4 localSamplePlanar2D238_g116835 = SamplePlanar2D( Texture238_g116835 , Sampler238_g116835 , Coords238_g116835 , WorldPosition238_g116835 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler246_g116835 = SS19_g116882;
				half4 Coords246_g116835 = temp_output_37_0_g116835;
				half3 WorldPosition246_g116835 = temp_output_279_0_g116835;
				float3 temp_output_280_0_g116835 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116835 = temp_output_280_0_g116835;
				half4 localSamplePlanar3D246_g116835 = SamplePlanar3D( Texture246_g116835 , Sampler246_g116835 , Coords246_g116835 , WorldPosition246_g116835 , WorldNormal246_g116835 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler234_g116835 = SS19_g116882;
				float4 Coords234_g116835 = temp_output_37_0_g116835;
				float3 WorldPosition234_g116835 = temp_output_279_0_g116835;
				float4 localSampleStochastic2D234_g116835 = SampleStochastic2D( Texture234_g116835 , Sampler234_g116835 , Coords234_g116835 , WorldPosition234_g116835 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler263_g116835 = SS19_g116882;
				half4 Coords263_g116835 = temp_output_37_0_g116835;
				half3 WorldPosition263_g116835 = temp_output_279_0_g116835;
				half3 WorldNormal263_g116835 = temp_output_280_0_g116835;
				half4 localSampleStochastic3D263_g116835 = SampleStochastic3D( Texture263_g116835 , Sampler263_g116835 , Coords263_g116835 , WorldPosition263_g116835 , WorldNormal263_g116835 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8690_g116779 = localSamplePlanar2D238_g116835;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8690_g116779 = localSamplePlanar3D246_g116835;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8690_g116779 = localSampleStochastic2D234_g116835;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8690_g116779 = localSampleStochastic3D263_g116835;
				#else
				float4 staticSwitch8690_g116779 = localSamplePlanar2D238_g116835;
				#endif
				half4 Layer133_g116794 = staticSwitch8690_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler238_g116862 = SS19_g116882;
				float4 temp_output_37_0_g116862 = Input_Terrain_Coords_068751_g116779;
				half4 Coords238_g116862 = temp_output_37_0_g116862;
				float3 temp_output_279_0_g116862 = Input_Position9197_g116779;
				half3 WorldPosition238_g116862 = temp_output_279_0_g116862;
				half4 localSamplePlanar2D238_g116862 = SamplePlanar2D( Texture238_g116862 , Sampler238_g116862 , Coords238_g116862 , WorldPosition238_g116862 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler246_g116862 = SS19_g116882;
				half4 Coords246_g116862 = temp_output_37_0_g116862;
				half3 WorldPosition246_g116862 = temp_output_279_0_g116862;
				float3 temp_output_280_0_g116862 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116862 = temp_output_280_0_g116862;
				half4 localSamplePlanar3D246_g116862 = SamplePlanar3D( Texture246_g116862 , Sampler246_g116862 , Coords246_g116862 , WorldPosition246_g116862 , WorldNormal246_g116862 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler234_g116862 = SS19_g116882;
				float4 Coords234_g116862 = temp_output_37_0_g116862;
				float3 WorldPosition234_g116862 = temp_output_279_0_g116862;
				float4 localSampleStochastic2D234_g116862 = SampleStochastic2D( Texture234_g116862 , Sampler234_g116862 , Coords234_g116862 , WorldPosition234_g116862 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler263_g116862 = SS19_g116882;
				half4 Coords263_g116862 = temp_output_37_0_g116862;
				half3 WorldPosition263_g116862 = temp_output_279_0_g116862;
				half3 WorldNormal263_g116862 = temp_output_280_0_g116862;
				half4 localSampleStochastic3D263_g116862 = SampleStochastic3D( Texture263_g116862 , Sampler263_g116862 , Coords263_g116862 , WorldPosition263_g116862 , WorldNormal263_g116862 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8691_g116779 = localSamplePlanar2D238_g116862;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8691_g116779 = localSamplePlanar3D246_g116862;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8691_g116779 = localSampleStochastic2D234_g116862;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8691_g116779 = localSampleStochastic3D263_g116862;
				#else
				float4 staticSwitch8691_g116779 = localSamplePlanar2D238_g116862;
				#endif
				half4 Layer237_g116794 = staticSwitch8691_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler238_g116863 = SS19_g116882;
				float4 temp_output_37_0_g116863 = Input_Terrain_Coords_078752_g116779;
				half4 Coords238_g116863 = temp_output_37_0_g116863;
				float3 temp_output_279_0_g116863 = Input_Position9197_g116779;
				half3 WorldPosition238_g116863 = temp_output_279_0_g116863;
				half4 localSamplePlanar2D238_g116863 = SamplePlanar2D( Texture238_g116863 , Sampler238_g116863 , Coords238_g116863 , WorldPosition238_g116863 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler246_g116863 = SS19_g116882;
				half4 Coords246_g116863 = temp_output_37_0_g116863;
				half3 WorldPosition246_g116863 = temp_output_279_0_g116863;
				float3 temp_output_280_0_g116863 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116863 = temp_output_280_0_g116863;
				half4 localSamplePlanar3D246_g116863 = SamplePlanar3D( Texture246_g116863 , Sampler246_g116863 , Coords246_g116863 , WorldPosition246_g116863 , WorldNormal246_g116863 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler234_g116863 = SS19_g116882;
				float4 Coords234_g116863 = temp_output_37_0_g116863;
				float3 WorldPosition234_g116863 = temp_output_279_0_g116863;
				float4 localSampleStochastic2D234_g116863 = SampleStochastic2D( Texture234_g116863 , Sampler234_g116863 , Coords234_g116863 , WorldPosition234_g116863 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler263_g116863 = SS19_g116882;
				half4 Coords263_g116863 = temp_output_37_0_g116863;
				half3 WorldPosition263_g116863 = temp_output_279_0_g116863;
				half3 WorldNormal263_g116863 = temp_output_280_0_g116863;
				half4 localSampleStochastic3D263_g116863 = SampleStochastic3D( Texture263_g116863 , Sampler263_g116863 , Coords263_g116863 , WorldPosition263_g116863 , WorldNormal263_g116863 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8692_g116779 = localSamplePlanar2D238_g116863;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8692_g116779 = localSamplePlanar3D246_g116863;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8692_g116779 = localSampleStochastic2D234_g116863;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8692_g116779 = localSampleStochastic3D263_g116863;
				#else
				float4 staticSwitch8692_g116779 = localSamplePlanar2D238_g116863;
				#endif
				half4 Layer338_g116794 = staticSwitch8692_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler238_g116864 = SS19_g116882;
				float4 temp_output_37_0_g116864 = Input_Terrain_Coords_088749_g116779;
				half4 Coords238_g116864 = temp_output_37_0_g116864;
				float3 temp_output_279_0_g116864 = Input_Position9197_g116779;
				half3 WorldPosition238_g116864 = temp_output_279_0_g116864;
				half4 localSamplePlanar2D238_g116864 = SamplePlanar2D( Texture238_g116864 , Sampler238_g116864 , Coords238_g116864 , WorldPosition238_g116864 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler246_g116864 = SS19_g116882;
				half4 Coords246_g116864 = temp_output_37_0_g116864;
				half3 WorldPosition246_g116864 = temp_output_279_0_g116864;
				float3 temp_output_280_0_g116864 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116864 = temp_output_280_0_g116864;
				half4 localSamplePlanar3D246_g116864 = SamplePlanar3D( Texture246_g116864 , Sampler246_g116864 , Coords246_g116864 , WorldPosition246_g116864 , WorldNormal246_g116864 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler234_g116864 = SS19_g116882;
				float4 Coords234_g116864 = temp_output_37_0_g116864;
				float3 WorldPosition234_g116864 = temp_output_279_0_g116864;
				float4 localSampleStochastic2D234_g116864 = SampleStochastic2D( Texture234_g116864 , Sampler234_g116864 , Coords234_g116864 , WorldPosition234_g116864 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler263_g116864 = SS19_g116882;
				half4 Coords263_g116864 = temp_output_37_0_g116864;
				half3 WorldPosition263_g116864 = temp_output_279_0_g116864;
				half3 WorldNormal263_g116864 = temp_output_280_0_g116864;
				half4 localSampleStochastic3D263_g116864 = SampleStochastic3D( Texture263_g116864 , Sampler263_g116864 , Coords263_g116864 , WorldPosition263_g116864 , WorldNormal263_g116864 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8693_g116779 = localSamplePlanar2D238_g116864;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8693_g116779 = localSamplePlanar3D246_g116864;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8693_g116779 = localSampleStochastic2D234_g116864;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8693_g116779 = localSampleStochastic3D263_g116864;
				#else
				float4 staticSwitch8693_g116779 = localSamplePlanar2D238_g116864;
				#endif
				half4 Layer439_g116794 = staticSwitch8693_g116779;
				float4 weightedBlendVar31_g116794 = Weights52_g116794;
				float4 weightedBlend31_g116794 = ( weightedBlendVar31_g116794.x*Layer133_g116794 + weightedBlendVar31_g116794.y*Layer237_g116794 + weightedBlendVar31_g116794.z*Layer338_g116794 + weightedBlendVar31_g116794.w*Layer439_g116794 );
				half4 Terrain_AAAA_088665_g116779 = weightedBlend31_g116794;
				half4 Layer_0810_g116787 = Terrain_AAAA_088665_g116779;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8794_g116779 = weights_127362_g116779;
				#else
				float4 staticSwitch8794_g116779 = control_127362_g116779;
				#endif
				half4 Terrain_Weights_127710_g116779 = staticSwitch8794_g116779;
				half4 Weights52_g116801 = Terrain_Weights_127710_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler238_g116838 = SS19_g116882;
				float4 temp_output_37_0_g116838 = Input_Terrain_Coords_098833_g116779;
				half4 Coords238_g116838 = temp_output_37_0_g116838;
				float3 temp_output_279_0_g116838 = Input_Position9197_g116779;
				half3 WorldPosition238_g116838 = temp_output_279_0_g116838;
				half4 localSamplePlanar2D238_g116838 = SamplePlanar2D( Texture238_g116838 , Sampler238_g116838 , Coords238_g116838 , WorldPosition238_g116838 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler246_g116838 = SS19_g116882;
				half4 Coords246_g116838 = temp_output_37_0_g116838;
				half3 WorldPosition246_g116838 = temp_output_279_0_g116838;
				float3 temp_output_280_0_g116838 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116838 = temp_output_280_0_g116838;
				half4 localSamplePlanar3D246_g116838 = SamplePlanar3D( Texture246_g116838 , Sampler246_g116838 , Coords246_g116838 , WorldPosition246_g116838 , WorldNormal246_g116838 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler234_g116838 = SS19_g116882;
				float4 Coords234_g116838 = temp_output_37_0_g116838;
				float3 WorldPosition234_g116838 = temp_output_279_0_g116838;
				float4 localSampleStochastic2D234_g116838 = SampleStochastic2D( Texture234_g116838 , Sampler234_g116838 , Coords234_g116838 , WorldPosition234_g116838 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler263_g116838 = SS19_g116882;
				half4 Coords263_g116838 = temp_output_37_0_g116838;
				half3 WorldPosition263_g116838 = temp_output_279_0_g116838;
				half3 WorldNormal263_g116838 = temp_output_280_0_g116838;
				half4 localSampleStochastic3D263_g116838 = SampleStochastic3D( Texture263_g116838 , Sampler263_g116838 , Coords263_g116838 , WorldPosition263_g116838 , WorldNormal263_g116838 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8872_g116779 = localSamplePlanar2D238_g116838;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8872_g116779 = localSamplePlanar3D246_g116838;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8872_g116779 = localSampleStochastic2D234_g116838;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8872_g116779 = localSampleStochastic3D263_g116838;
				#else
				float4 staticSwitch8872_g116779 = localSamplePlanar2D238_g116838;
				#endif
				half4 Layer133_g116801 = staticSwitch8872_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler238_g116841 = SS19_g116882;
				float4 temp_output_37_0_g116841 = Input_Terrain_Coords_108834_g116779;
				half4 Coords238_g116841 = temp_output_37_0_g116841;
				float3 temp_output_279_0_g116841 = Input_Position9197_g116779;
				half3 WorldPosition238_g116841 = temp_output_279_0_g116841;
				half4 localSamplePlanar2D238_g116841 = SamplePlanar2D( Texture238_g116841 , Sampler238_g116841 , Coords238_g116841 , WorldPosition238_g116841 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler246_g116841 = SS19_g116882;
				half4 Coords246_g116841 = temp_output_37_0_g116841;
				half3 WorldPosition246_g116841 = temp_output_279_0_g116841;
				float3 temp_output_280_0_g116841 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116841 = temp_output_280_0_g116841;
				half4 localSamplePlanar3D246_g116841 = SamplePlanar3D( Texture246_g116841 , Sampler246_g116841 , Coords246_g116841 , WorldPosition246_g116841 , WorldNormal246_g116841 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler234_g116841 = SS19_g116882;
				float4 Coords234_g116841 = temp_output_37_0_g116841;
				float3 WorldPosition234_g116841 = temp_output_279_0_g116841;
				float4 localSampleStochastic2D234_g116841 = SampleStochastic2D( Texture234_g116841 , Sampler234_g116841 , Coords234_g116841 , WorldPosition234_g116841 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler263_g116841 = SS19_g116882;
				half4 Coords263_g116841 = temp_output_37_0_g116841;
				half3 WorldPosition263_g116841 = temp_output_279_0_g116841;
				half3 WorldNormal263_g116841 = temp_output_280_0_g116841;
				half4 localSampleStochastic3D263_g116841 = SampleStochastic3D( Texture263_g116841 , Sampler263_g116841 , Coords263_g116841 , WorldPosition263_g116841 , WorldNormal263_g116841 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8873_g116779 = localSamplePlanar2D238_g116841;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8873_g116779 = localSamplePlanar3D246_g116841;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8873_g116779 = localSampleStochastic2D234_g116841;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8873_g116779 = localSampleStochastic3D263_g116841;
				#else
				float4 staticSwitch8873_g116779 = localSamplePlanar2D238_g116841;
				#endif
				half4 Layer237_g116801 = staticSwitch8873_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler238_g116842 = SS19_g116882;
				float4 temp_output_37_0_g116842 = Input_Terrain_Coords_118835_g116779;
				half4 Coords238_g116842 = temp_output_37_0_g116842;
				float3 temp_output_279_0_g116842 = Input_Position9197_g116779;
				half3 WorldPosition238_g116842 = temp_output_279_0_g116842;
				half4 localSamplePlanar2D238_g116842 = SamplePlanar2D( Texture238_g116842 , Sampler238_g116842 , Coords238_g116842 , WorldPosition238_g116842 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler246_g116842 = SS19_g116882;
				half4 Coords246_g116842 = temp_output_37_0_g116842;
				half3 WorldPosition246_g116842 = temp_output_279_0_g116842;
				float3 temp_output_280_0_g116842 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116842 = temp_output_280_0_g116842;
				half4 localSamplePlanar3D246_g116842 = SamplePlanar3D( Texture246_g116842 , Sampler246_g116842 , Coords246_g116842 , WorldPosition246_g116842 , WorldNormal246_g116842 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler234_g116842 = SS19_g116882;
				float4 Coords234_g116842 = temp_output_37_0_g116842;
				float3 WorldPosition234_g116842 = temp_output_279_0_g116842;
				float4 localSampleStochastic2D234_g116842 = SampleStochastic2D( Texture234_g116842 , Sampler234_g116842 , Coords234_g116842 , WorldPosition234_g116842 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler263_g116842 = SS19_g116882;
				half4 Coords263_g116842 = temp_output_37_0_g116842;
				half3 WorldPosition263_g116842 = temp_output_279_0_g116842;
				half3 WorldNormal263_g116842 = temp_output_280_0_g116842;
				half4 localSampleStochastic3D263_g116842 = SampleStochastic3D( Texture263_g116842 , Sampler263_g116842 , Coords263_g116842 , WorldPosition263_g116842 , WorldNormal263_g116842 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8874_g116779 = localSamplePlanar2D238_g116842;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8874_g116779 = localSamplePlanar3D246_g116842;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8874_g116779 = localSampleStochastic2D234_g116842;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8874_g116779 = localSampleStochastic3D263_g116842;
				#else
				float4 staticSwitch8874_g116779 = localSamplePlanar2D238_g116842;
				#endif
				half4 Layer338_g116801 = staticSwitch8874_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler238_g116843 = SS19_g116882;
				float4 temp_output_37_0_g116843 = Input_Terrain_Coords_128836_g116779;
				half4 Coords238_g116843 = temp_output_37_0_g116843;
				float3 temp_output_279_0_g116843 = Input_Position9197_g116779;
				half3 WorldPosition238_g116843 = temp_output_279_0_g116843;
				half4 localSamplePlanar2D238_g116843 = SamplePlanar2D( Texture238_g116843 , Sampler238_g116843 , Coords238_g116843 , WorldPosition238_g116843 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler246_g116843 = SS19_g116882;
				half4 Coords246_g116843 = temp_output_37_0_g116843;
				half3 WorldPosition246_g116843 = temp_output_279_0_g116843;
				float3 temp_output_280_0_g116843 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116843 = temp_output_280_0_g116843;
				half4 localSamplePlanar3D246_g116843 = SamplePlanar3D( Texture246_g116843 , Sampler246_g116843 , Coords246_g116843 , WorldPosition246_g116843 , WorldNormal246_g116843 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler234_g116843 = SS19_g116882;
				float4 Coords234_g116843 = temp_output_37_0_g116843;
				float3 WorldPosition234_g116843 = temp_output_279_0_g116843;
				float4 localSampleStochastic2D234_g116843 = SampleStochastic2D( Texture234_g116843 , Sampler234_g116843 , Coords234_g116843 , WorldPosition234_g116843 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler263_g116843 = SS19_g116882;
				half4 Coords263_g116843 = temp_output_37_0_g116843;
				half3 WorldPosition263_g116843 = temp_output_279_0_g116843;
				half3 WorldNormal263_g116843 = temp_output_280_0_g116843;
				half4 localSampleStochastic3D263_g116843 = SampleStochastic3D( Texture263_g116843 , Sampler263_g116843 , Coords263_g116843 , WorldPosition263_g116843 , WorldNormal263_g116843 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8875_g116779 = localSamplePlanar2D238_g116843;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8875_g116779 = localSamplePlanar3D246_g116843;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8875_g116779 = localSampleStochastic2D234_g116843;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8875_g116779 = localSampleStochastic3D263_g116843;
				#else
				float4 staticSwitch8875_g116779 = localSamplePlanar2D238_g116843;
				#endif
				half4 Layer439_g116801 = staticSwitch8875_g116779;
				float4 weightedBlendVar31_g116801 = Weights52_g116801;
				float4 weightedBlend31_g116801 = ( weightedBlendVar31_g116801.x*Layer133_g116801 + weightedBlendVar31_g116801.y*Layer237_g116801 + weightedBlendVar31_g116801.z*Layer338_g116801 + weightedBlendVar31_g116801.w*Layer439_g116801 );
				half4 Terrain_AAAA_128851_g116779 = weightedBlend31_g116801;
				half4 Layer_1243_g116787 = Terrain_AAAA_128851_g116779;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8795_g116779 = weights_167362_g116779;
				#else
				float4 staticSwitch8795_g116779 = control_167362_g116779;
				#endif
				half4 Terrain_Weights_167709_g116779 = staticSwitch8795_g116779;
				half4 Weights52_g116808 = Terrain_Weights_167709_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler238_g116847 = SS19_g116882;
				float4 temp_output_37_0_g116847 = Input_Terrain_Coords_138960_g116779;
				half4 Coords238_g116847 = temp_output_37_0_g116847;
				float3 temp_output_279_0_g116847 = Input_Position9197_g116779;
				half3 WorldPosition238_g116847 = temp_output_279_0_g116847;
				half4 localSamplePlanar2D238_g116847 = SamplePlanar2D( Texture238_g116847 , Sampler238_g116847 , Coords238_g116847 , WorldPosition238_g116847 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler246_g116847 = SS19_g116882;
				half4 Coords246_g116847 = temp_output_37_0_g116847;
				half3 WorldPosition246_g116847 = temp_output_279_0_g116847;
				float3 temp_output_280_0_g116847 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116847 = temp_output_280_0_g116847;
				half4 localSamplePlanar3D246_g116847 = SamplePlanar3D( Texture246_g116847 , Sampler246_g116847 , Coords246_g116847 , WorldPosition246_g116847 , WorldNormal246_g116847 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler234_g116847 = SS19_g116882;
				float4 Coords234_g116847 = temp_output_37_0_g116847;
				float3 WorldPosition234_g116847 = temp_output_279_0_g116847;
				float4 localSampleStochastic2D234_g116847 = SampleStochastic2D( Texture234_g116847 , Sampler234_g116847 , Coords234_g116847 , WorldPosition234_g116847 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler263_g116847 = SS19_g116882;
				half4 Coords263_g116847 = temp_output_37_0_g116847;
				half3 WorldPosition263_g116847 = temp_output_279_0_g116847;
				half3 WorldNormal263_g116847 = temp_output_280_0_g116847;
				half4 localSampleStochastic3D263_g116847 = SampleStochastic3D( Texture263_g116847 , Sampler263_g116847 , Coords263_g116847 , WorldPosition263_g116847 , WorldNormal263_g116847 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8972_g116779 = localSamplePlanar2D238_g116847;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8972_g116779 = localSamplePlanar3D246_g116847;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8972_g116779 = localSampleStochastic2D234_g116847;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8972_g116779 = localSampleStochastic3D263_g116847;
				#else
				float4 staticSwitch8972_g116779 = localSamplePlanar2D238_g116847;
				#endif
				half4 Layer133_g116808 = staticSwitch8972_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler238_g116853 = SS19_g116882;
				float4 temp_output_37_0_g116853 = Input_Terrain_Coords_148961_g116779;
				half4 Coords238_g116853 = temp_output_37_0_g116853;
				float3 temp_output_279_0_g116853 = Input_Position9197_g116779;
				half3 WorldPosition238_g116853 = temp_output_279_0_g116853;
				half4 localSamplePlanar2D238_g116853 = SamplePlanar2D( Texture238_g116853 , Sampler238_g116853 , Coords238_g116853 , WorldPosition238_g116853 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler246_g116853 = SS19_g116882;
				half4 Coords246_g116853 = temp_output_37_0_g116853;
				half3 WorldPosition246_g116853 = temp_output_279_0_g116853;
				float3 temp_output_280_0_g116853 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116853 = temp_output_280_0_g116853;
				half4 localSamplePlanar3D246_g116853 = SamplePlanar3D( Texture246_g116853 , Sampler246_g116853 , Coords246_g116853 , WorldPosition246_g116853 , WorldNormal246_g116853 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler234_g116853 = SS19_g116882;
				float4 Coords234_g116853 = temp_output_37_0_g116853;
				float3 WorldPosition234_g116853 = temp_output_279_0_g116853;
				float4 localSampleStochastic2D234_g116853 = SampleStochastic2D( Texture234_g116853 , Sampler234_g116853 , Coords234_g116853 , WorldPosition234_g116853 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler263_g116853 = SS19_g116882;
				half4 Coords263_g116853 = temp_output_37_0_g116853;
				half3 WorldPosition263_g116853 = temp_output_279_0_g116853;
				half3 WorldNormal263_g116853 = temp_output_280_0_g116853;
				half4 localSampleStochastic3D263_g116853 = SampleStochastic3D( Texture263_g116853 , Sampler263_g116853 , Coords263_g116853 , WorldPosition263_g116853 , WorldNormal263_g116853 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8973_g116779 = localSamplePlanar2D238_g116853;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8973_g116779 = localSamplePlanar3D246_g116853;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8973_g116779 = localSampleStochastic2D234_g116853;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8973_g116779 = localSampleStochastic3D263_g116853;
				#else
				float4 staticSwitch8973_g116779 = localSamplePlanar2D238_g116853;
				#endif
				half4 Layer237_g116808 = staticSwitch8973_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler238_g116854 = SS19_g116882;
				float4 temp_output_37_0_g116854 = Input_Terrain_Coords_158962_g116779;
				half4 Coords238_g116854 = temp_output_37_0_g116854;
				float3 temp_output_279_0_g116854 = Input_Position9197_g116779;
				half3 WorldPosition238_g116854 = temp_output_279_0_g116854;
				half4 localSamplePlanar2D238_g116854 = SamplePlanar2D( Texture238_g116854 , Sampler238_g116854 , Coords238_g116854 , WorldPosition238_g116854 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler246_g116854 = SS19_g116882;
				half4 Coords246_g116854 = temp_output_37_0_g116854;
				half3 WorldPosition246_g116854 = temp_output_279_0_g116854;
				float3 temp_output_280_0_g116854 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116854 = temp_output_280_0_g116854;
				half4 localSamplePlanar3D246_g116854 = SamplePlanar3D( Texture246_g116854 , Sampler246_g116854 , Coords246_g116854 , WorldPosition246_g116854 , WorldNormal246_g116854 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler234_g116854 = SS19_g116882;
				float4 Coords234_g116854 = temp_output_37_0_g116854;
				float3 WorldPosition234_g116854 = temp_output_279_0_g116854;
				float4 localSampleStochastic2D234_g116854 = SampleStochastic2D( Texture234_g116854 , Sampler234_g116854 , Coords234_g116854 , WorldPosition234_g116854 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler263_g116854 = SS19_g116882;
				half4 Coords263_g116854 = temp_output_37_0_g116854;
				half3 WorldPosition263_g116854 = temp_output_279_0_g116854;
				half3 WorldNormal263_g116854 = temp_output_280_0_g116854;
				half4 localSampleStochastic3D263_g116854 = SampleStochastic3D( Texture263_g116854 , Sampler263_g116854 , Coords263_g116854 , WorldPosition263_g116854 , WorldNormal263_g116854 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8974_g116779 = localSamplePlanar2D238_g116854;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8974_g116779 = localSamplePlanar3D246_g116854;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8974_g116779 = localSampleStochastic2D234_g116854;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8974_g116779 = localSampleStochastic3D263_g116854;
				#else
				float4 staticSwitch8974_g116779 = localSamplePlanar2D238_g116854;
				#endif
				half4 Layer338_g116808 = staticSwitch8974_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler238_g116855 = SS19_g116882;
				float4 temp_output_37_0_g116855 = Input_Terrain_Coords_168959_g116779;
				half4 Coords238_g116855 = temp_output_37_0_g116855;
				float3 temp_output_279_0_g116855 = Input_Position9197_g116779;
				half3 WorldPosition238_g116855 = temp_output_279_0_g116855;
				half4 localSamplePlanar2D238_g116855 = SamplePlanar2D( Texture238_g116855 , Sampler238_g116855 , Coords238_g116855 , WorldPosition238_g116855 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler246_g116855 = SS19_g116882;
				half4 Coords246_g116855 = temp_output_37_0_g116855;
				half3 WorldPosition246_g116855 = temp_output_279_0_g116855;
				float3 temp_output_280_0_g116855 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116855 = temp_output_280_0_g116855;
				half4 localSamplePlanar3D246_g116855 = SamplePlanar3D( Texture246_g116855 , Sampler246_g116855 , Coords246_g116855 , WorldPosition246_g116855 , WorldNormal246_g116855 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler234_g116855 = SS19_g116882;
				float4 Coords234_g116855 = temp_output_37_0_g116855;
				float3 WorldPosition234_g116855 = temp_output_279_0_g116855;
				float4 localSampleStochastic2D234_g116855 = SampleStochastic2D( Texture234_g116855 , Sampler234_g116855 , Coords234_g116855 , WorldPosition234_g116855 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler263_g116855 = SS19_g116882;
				half4 Coords263_g116855 = temp_output_37_0_g116855;
				half3 WorldPosition263_g116855 = temp_output_279_0_g116855;
				half3 WorldNormal263_g116855 = temp_output_280_0_g116855;
				half4 localSampleStochastic3D263_g116855 = SampleStochastic3D( Texture263_g116855 , Sampler263_g116855 , Coords263_g116855 , WorldPosition263_g116855 , WorldNormal263_g116855 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8975_g116779 = localSamplePlanar2D238_g116855;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8975_g116779 = localSamplePlanar3D246_g116855;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8975_g116779 = localSampleStochastic2D234_g116855;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8975_g116779 = localSampleStochastic3D263_g116855;
				#else
				float4 staticSwitch8975_g116779 = localSamplePlanar2D238_g116855;
				#endif
				half4 Layer439_g116808 = staticSwitch8975_g116779;
				float4 weightedBlendVar31_g116808 = Weights52_g116808;
				float4 weightedBlend31_g116808 = ( weightedBlendVar31_g116808.x*Layer133_g116808 + weightedBlendVar31_g116808.y*Layer237_g116808 + weightedBlendVar31_g116808.z*Layer338_g116808 + weightedBlendVar31_g116808.w*Layer439_g116808 );
				half4 Terrain_AAAA_168986_g116779 = weightedBlend31_g116808;
				half4 Layer_1644_g116787 = Terrain_AAAA_168986_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116787 = Layer_045_g116787;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116787 = ( Layer_045_g116787 + Layer_0810_g116787 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116787 = ( Layer_045_g116787 + Layer_0810_g116787 + Layer_1243_g116787 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116787 = ( Layer_045_g116787 + Layer_0810_g116787 + Layer_1243_g116787 + Layer_1644_g116787 );
				#else
				float4 staticSwitch40_g116787 = Layer_045_g116787;
				#endif
				half4 Blend_Albedo7468_g116779 = staticSwitch40_g116787;
				half4 Weights52_g116873 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116873 = _TerrainColor1;
				half4 Layer237_g116873 = _TerrainColor2;
				half4 Layer338_g116873 = _TerrainColor3;
				half4 Layer439_g116873 = _TerrainColor4;
				float4 weightedBlendVar31_g116873 = Weights52_g116873;
				float4 weightedBlend31_g116873 = ( weightedBlendVar31_g116873.x*Layer133_g116873 + weightedBlendVar31_g116873.y*Layer237_g116873 + weightedBlendVar31_g116873.z*Layer338_g116873 + weightedBlendVar31_g116873.w*Layer439_g116873 );
				half4 Terrain_Color_049349_g116779 = weightedBlend31_g116873;
				half4 Layer_045_g116878 = Terrain_Color_049349_g116779;
				half4 Weights52_g116874 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116874 = _TerrainColor5;
				half4 Layer237_g116874 = _TerrainColor6;
				half4 Layer338_g116874 = _TerrainColor7;
				half4 Layer439_g116874 = _TerrainColor8;
				float4 weightedBlendVar31_g116874 = Weights52_g116874;
				float4 weightedBlend31_g116874 = ( weightedBlendVar31_g116874.x*Layer133_g116874 + weightedBlendVar31_g116874.y*Layer237_g116874 + weightedBlendVar31_g116874.z*Layer338_g116874 + weightedBlendVar31_g116874.w*Layer439_g116874 );
				half4 Terrain_Color_089361_g116779 = weightedBlend31_g116874;
				half4 Layer_0810_g116878 = Terrain_Color_089361_g116779;
				half4 Weights52_g116875 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116875 = _TerrainColor9;
				half4 Layer237_g116875 = _TerrainColor10;
				half4 Layer338_g116875 = _TerrainColor11;
				half4 Layer439_g116875 = _TerrainColor12;
				float4 weightedBlendVar31_g116875 = Weights52_g116875;
				float4 weightedBlend31_g116875 = ( weightedBlendVar31_g116875.x*Layer133_g116875 + weightedBlendVar31_g116875.y*Layer237_g116875 + weightedBlendVar31_g116875.z*Layer338_g116875 + weightedBlendVar31_g116875.w*Layer439_g116875 );
				half4 Terrain_Color_129373_g116779 = weightedBlend31_g116875;
				half4 Layer_1243_g116878 = Terrain_Color_129373_g116779;
				half4 Weights52_g116876 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116876 = _TerrainColor13;
				half4 Layer237_g116876 = _TerrainColor14;
				half4 Layer338_g116876 = _TerrainColor15;
				half4 Layer439_g116876 = _TerrainColor16;
				float4 weightedBlendVar31_g116876 = Weights52_g116876;
				float4 weightedBlend31_g116876 = ( weightedBlendVar31_g116876.x*Layer133_g116876 + weightedBlendVar31_g116876.y*Layer237_g116876 + weightedBlendVar31_g116876.z*Layer338_g116876 + weightedBlendVar31_g116876.w*Layer439_g116876 );
				half4 Terrain_Color_169381_g116779 = weightedBlend31_g116876;
				half4 Layer_1644_g116878 = Terrain_Color_169381_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116878 = Layer_045_g116878;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116878 = ( Layer_045_g116878 + Layer_0810_g116878 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116878 = ( Layer_045_g116878 + Layer_0810_g116878 + Layer_1243_g116878 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116878 = ( Layer_045_g116878 + Layer_0810_g116878 + Layer_1243_g116878 + Layer_1644_g116878 );
				#else
				float4 staticSwitch40_g116878 = Layer_045_g116878;
				#endif
				half4 Blend_TerrainColor9387_g116779 = staticSwitch40_g116878;
				half3 Final_Albedo9144_g116779 = ( (Blend_Albedo7468_g116779).xyz * (Blend_TerrainColor9387_g116779).rgb * (_TerrainColor).rgb );
				half3 Local_Albedo9199_g116777 = Final_Albedo9144_g116779;
				float3 In_Albedo3_g116778 = Local_Albedo9199_g116777;
				float3 In_AlbedoRaw3_g116778 = Local_Albedo9199_g116777;
				float3x3 ase_worldToTangent = float3x3(WorldTangent,WorldBiTangent,WorldNormal);
				half4 Weights52_g116780 = Terrain_Weights_046781_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116871) = _TerrainNormalTex1;
				float localFilterTexture29_g116886 = ( 0.0 );
				SamplerState SamplerDefault29_g116886 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g116886 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g116886 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g116886 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g116886 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g116886 = SamplerDefault29_g116886;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g116886 = SamplerDefault29_g116886;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g116886 = SamplerPoint29_g116886;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g116886 = SamplerLow29_g116886;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g116886 = SamplerMedium29_g116886;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g116886 = SamplerHigh29_g116886;
				#endif
				SamplerState Sampler238_g116871 = SS29_g116886;
				float4 temp_output_37_0_g116871 = Input_Terrain_Coords_016785_g116779;
				half4 Coords238_g116871 = temp_output_37_0_g116871;
				float3 temp_output_279_0_g116871 = Input_Position9197_g116779;
				half3 WorldPosition238_g116871 = temp_output_279_0_g116871;
				half4 localSamplePlanar2D238_g116871 = SamplePlanar2D( Texture238_g116871 , Sampler238_g116871 , Coords238_g116871 , WorldPosition238_g116871 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116871) = _TerrainNormalTex1;
				SamplerState Sampler246_g116871 = SS29_g116886;
				half4 Coords246_g116871 = temp_output_37_0_g116871;
				half3 WorldPosition246_g116871 = temp_output_279_0_g116871;
				float3 temp_output_280_0_g116871 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116871 = temp_output_280_0_g116871;
				half4 localSamplePlanar3D246_g116871 = SamplePlanar3D( Texture246_g116871 , Sampler246_g116871 , Coords246_g116871 , WorldPosition246_g116871 , WorldNormal246_g116871 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116871) = _TerrainNormalTex1;
				SamplerState Sampler234_g116871 = SS29_g116886;
				float4 Coords234_g116871 = temp_output_37_0_g116871;
				float3 WorldPosition234_g116871 = temp_output_279_0_g116871;
				float4 localSampleStochastic2D234_g116871 = SampleStochastic2D( Texture234_g116871 , Sampler234_g116871 , Coords234_g116871 , WorldPosition234_g116871 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116871) = _TerrainNormalTex1;
				SamplerState Sampler263_g116871 = SS29_g116886;
				half4 Coords263_g116871 = temp_output_37_0_g116871;
				half3 WorldPosition263_g116871 = temp_output_279_0_g116871;
				half3 WorldNormal263_g116871 = temp_output_280_0_g116871;
				half4 localSampleStochastic3D263_g116871 = SampleStochastic3D( Texture263_g116871 , Sampler263_g116871 , Coords263_g116871 , WorldPosition263_g116871 , WorldNormal263_g116871 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8635_g116779 = localSamplePlanar2D238_g116871;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8635_g116779 = localSamplePlanar3D246_g116871;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8635_g116779 = localSampleStochastic2D234_g116871;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8635_g116779 = localSampleStochastic3D263_g116871;
				#else
				float4 staticSwitch8635_g116779 = localSamplePlanar2D238_g116871;
				#endif
				half4 Layer133_g116780 = staticSwitch8635_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116827) = _TerrainNormalTex2;
				SamplerState Sampler238_g116827 = SS29_g116886;
				float4 temp_output_37_0_g116827 = Input_Terrain_Coords_026787_g116779;
				half4 Coords238_g116827 = temp_output_37_0_g116827;
				float3 temp_output_279_0_g116827 = Input_Position9197_g116779;
				half3 WorldPosition238_g116827 = temp_output_279_0_g116827;
				half4 localSamplePlanar2D238_g116827 = SamplePlanar2D( Texture238_g116827 , Sampler238_g116827 , Coords238_g116827 , WorldPosition238_g116827 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116827) = _TerrainNormalTex2;
				SamplerState Sampler246_g116827 = SS29_g116886;
				half4 Coords246_g116827 = temp_output_37_0_g116827;
				half3 WorldPosition246_g116827 = temp_output_279_0_g116827;
				float3 temp_output_280_0_g116827 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116827 = temp_output_280_0_g116827;
				half4 localSamplePlanar3D246_g116827 = SamplePlanar3D( Texture246_g116827 , Sampler246_g116827 , Coords246_g116827 , WorldPosition246_g116827 , WorldNormal246_g116827 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116827) = _TerrainNormalTex2;
				SamplerState Sampler234_g116827 = SS29_g116886;
				float4 Coords234_g116827 = temp_output_37_0_g116827;
				float3 WorldPosition234_g116827 = temp_output_279_0_g116827;
				float4 localSampleStochastic2D234_g116827 = SampleStochastic2D( Texture234_g116827 , Sampler234_g116827 , Coords234_g116827 , WorldPosition234_g116827 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116827) = _TerrainNormalTex2;
				SamplerState Sampler263_g116827 = SS29_g116886;
				half4 Coords263_g116827 = temp_output_37_0_g116827;
				half3 WorldPosition263_g116827 = temp_output_279_0_g116827;
				half3 WorldNormal263_g116827 = temp_output_280_0_g116827;
				half4 localSampleStochastic3D263_g116827 = SampleStochastic3D( Texture263_g116827 , Sampler263_g116827 , Coords263_g116827 , WorldPosition263_g116827 , WorldNormal263_g116827 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8636_g116779 = localSamplePlanar2D238_g116827;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8636_g116779 = localSamplePlanar3D246_g116827;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8636_g116779 = localSampleStochastic2D234_g116827;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8636_g116779 = localSampleStochastic3D263_g116827;
				#else
				float4 staticSwitch8636_g116779 = localSamplePlanar2D238_g116827;
				#endif
				half4 Layer237_g116780 = staticSwitch8636_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116830) = _TerrainNormalTex3;
				SamplerState Sampler238_g116830 = SS29_g116886;
				float4 temp_output_37_0_g116830 = Input_Terrain_Coords_036789_g116779;
				half4 Coords238_g116830 = temp_output_37_0_g116830;
				float3 temp_output_279_0_g116830 = Input_Position9197_g116779;
				half3 WorldPosition238_g116830 = temp_output_279_0_g116830;
				half4 localSamplePlanar2D238_g116830 = SamplePlanar2D( Texture238_g116830 , Sampler238_g116830 , Coords238_g116830 , WorldPosition238_g116830 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116830) = _TerrainNormalTex3;
				SamplerState Sampler246_g116830 = SS29_g116886;
				half4 Coords246_g116830 = temp_output_37_0_g116830;
				half3 WorldPosition246_g116830 = temp_output_279_0_g116830;
				float3 temp_output_280_0_g116830 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116830 = temp_output_280_0_g116830;
				half4 localSamplePlanar3D246_g116830 = SamplePlanar3D( Texture246_g116830 , Sampler246_g116830 , Coords246_g116830 , WorldPosition246_g116830 , WorldNormal246_g116830 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116830) = _TerrainNormalTex3;
				SamplerState Sampler234_g116830 = SS29_g116886;
				float4 Coords234_g116830 = temp_output_37_0_g116830;
				float3 WorldPosition234_g116830 = temp_output_279_0_g116830;
				float4 localSampleStochastic2D234_g116830 = SampleStochastic2D( Texture234_g116830 , Sampler234_g116830 , Coords234_g116830 , WorldPosition234_g116830 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116830) = _TerrainNormalTex3;
				SamplerState Sampler263_g116830 = SS29_g116886;
				half4 Coords263_g116830 = temp_output_37_0_g116830;
				half3 WorldPosition263_g116830 = temp_output_279_0_g116830;
				half3 WorldNormal263_g116830 = temp_output_280_0_g116830;
				half4 localSampleStochastic3D263_g116830 = SampleStochastic3D( Texture263_g116830 , Sampler263_g116830 , Coords263_g116830 , WorldPosition263_g116830 , WorldNormal263_g116830 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8637_g116779 = localSamplePlanar2D238_g116830;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8637_g116779 = localSamplePlanar3D246_g116830;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8637_g116779 = localSampleStochastic2D234_g116830;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8637_g116779 = localSampleStochastic3D263_g116830;
				#else
				float4 staticSwitch8637_g116779 = localSamplePlanar2D238_g116830;
				#endif
				half4 Layer338_g116780 = staticSwitch8637_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116832) = _TerrainNormalTex4;
				SamplerState Sampler238_g116832 = SS29_g116886;
				float4 temp_output_37_0_g116832 = Input_Terrain_Coords_046791_g116779;
				half4 Coords238_g116832 = temp_output_37_0_g116832;
				float3 temp_output_279_0_g116832 = Input_Position9197_g116779;
				half3 WorldPosition238_g116832 = temp_output_279_0_g116832;
				half4 localSamplePlanar2D238_g116832 = SamplePlanar2D( Texture238_g116832 , Sampler238_g116832 , Coords238_g116832 , WorldPosition238_g116832 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116832) = _TerrainNormalTex4;
				SamplerState Sampler246_g116832 = SS29_g116886;
				half4 Coords246_g116832 = temp_output_37_0_g116832;
				half3 WorldPosition246_g116832 = temp_output_279_0_g116832;
				float3 temp_output_280_0_g116832 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116832 = temp_output_280_0_g116832;
				half4 localSamplePlanar3D246_g116832 = SamplePlanar3D( Texture246_g116832 , Sampler246_g116832 , Coords246_g116832 , WorldPosition246_g116832 , WorldNormal246_g116832 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116832) = _TerrainNormalTex4;
				SamplerState Sampler234_g116832 = SS29_g116886;
				float4 Coords234_g116832 = temp_output_37_0_g116832;
				float3 WorldPosition234_g116832 = temp_output_279_0_g116832;
				float4 localSampleStochastic2D234_g116832 = SampleStochastic2D( Texture234_g116832 , Sampler234_g116832 , Coords234_g116832 , WorldPosition234_g116832 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116832) = _TerrainNormalTex4;
				SamplerState Sampler263_g116832 = SS29_g116886;
				half4 Coords263_g116832 = temp_output_37_0_g116832;
				half3 WorldPosition263_g116832 = temp_output_279_0_g116832;
				half3 WorldNormal263_g116832 = temp_output_280_0_g116832;
				half4 localSampleStochastic3D263_g116832 = SampleStochastic3D( Texture263_g116832 , Sampler263_g116832 , Coords263_g116832 , WorldPosition263_g116832 , WorldNormal263_g116832 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8638_g116779 = localSamplePlanar2D238_g116832;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8638_g116779 = localSamplePlanar3D246_g116832;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8638_g116779 = localSampleStochastic2D234_g116832;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8638_g116779 = localSampleStochastic3D263_g116832;
				#else
				float4 staticSwitch8638_g116779 = localSamplePlanar2D238_g116832;
				#endif
				half4 Layer439_g116780 = staticSwitch8638_g116779;
				float4 weightedBlendVar31_g116780 = Weights52_g116780;
				float4 weightedBlend31_g116780 = ( weightedBlendVar31_g116780.x*Layer133_g116780 + weightedBlendVar31_g116780.y*Layer237_g116780 + weightedBlendVar31_g116780.z*Layer338_g116780 + weightedBlendVar31_g116780.w*Layer439_g116780 );
				half4 Terrain_B_047202_g116779 = weightedBlend31_g116780;
				half4 Layer_045_g116786 = Terrain_B_047202_g116779;
				half4 Weights52_g116795 = Terrain_Weights_087340_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116836) = _TerrainNormalTex5;
				SamplerState Sampler238_g116836 = SS29_g116886;
				float4 temp_output_37_0_g116836 = Input_Terrain_Coords_058750_g116779;
				half4 Coords238_g116836 = temp_output_37_0_g116836;
				float3 temp_output_279_0_g116836 = Input_Position9197_g116779;
				half3 WorldPosition238_g116836 = temp_output_279_0_g116836;
				half4 localSamplePlanar2D238_g116836 = SamplePlanar2D( Texture238_g116836 , Sampler238_g116836 , Coords238_g116836 , WorldPosition238_g116836 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116836) = _TerrainNormalTex5;
				SamplerState Sampler246_g116836 = SS29_g116886;
				half4 Coords246_g116836 = temp_output_37_0_g116836;
				half3 WorldPosition246_g116836 = temp_output_279_0_g116836;
				float3 temp_output_280_0_g116836 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116836 = temp_output_280_0_g116836;
				half4 localSamplePlanar3D246_g116836 = SamplePlanar3D( Texture246_g116836 , Sampler246_g116836 , Coords246_g116836 , WorldPosition246_g116836 , WorldNormal246_g116836 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116836) = _TerrainNormalTex5;
				SamplerState Sampler234_g116836 = SS29_g116886;
				float4 Coords234_g116836 = temp_output_37_0_g116836;
				float3 WorldPosition234_g116836 = temp_output_279_0_g116836;
				float4 localSampleStochastic2D234_g116836 = SampleStochastic2D( Texture234_g116836 , Sampler234_g116836 , Coords234_g116836 , WorldPosition234_g116836 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116836) = _TerrainNormalTex5;
				SamplerState Sampler263_g116836 = SS29_g116886;
				half4 Coords263_g116836 = temp_output_37_0_g116836;
				half3 WorldPosition263_g116836 = temp_output_279_0_g116836;
				half3 WorldNormal263_g116836 = temp_output_280_0_g116836;
				half4 localSampleStochastic3D263_g116836 = SampleStochastic3D( Texture263_g116836 , Sampler263_g116836 , Coords263_g116836 , WorldPosition263_g116836 , WorldNormal263_g116836 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8686_g116779 = localSamplePlanar2D238_g116836;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8686_g116779 = localSamplePlanar3D246_g116836;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8686_g116779 = localSampleStochastic2D234_g116836;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8686_g116779 = localSampleStochastic3D263_g116836;
				#else
				float4 staticSwitch8686_g116779 = localSamplePlanar2D238_g116836;
				#endif
				half4 Layer133_g116795 = staticSwitch8686_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116865) = _TerrainNormalTex6;
				SamplerState Sampler238_g116865 = SS29_g116886;
				float4 temp_output_37_0_g116865 = Input_Terrain_Coords_068751_g116779;
				half4 Coords238_g116865 = temp_output_37_0_g116865;
				float3 temp_output_279_0_g116865 = Input_Position9197_g116779;
				half3 WorldPosition238_g116865 = temp_output_279_0_g116865;
				half4 localSamplePlanar2D238_g116865 = SamplePlanar2D( Texture238_g116865 , Sampler238_g116865 , Coords238_g116865 , WorldPosition238_g116865 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116865) = _TerrainNormalTex6;
				SamplerState Sampler246_g116865 = SS29_g116886;
				half4 Coords246_g116865 = temp_output_37_0_g116865;
				half3 WorldPosition246_g116865 = temp_output_279_0_g116865;
				float3 temp_output_280_0_g116865 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116865 = temp_output_280_0_g116865;
				half4 localSamplePlanar3D246_g116865 = SamplePlanar3D( Texture246_g116865 , Sampler246_g116865 , Coords246_g116865 , WorldPosition246_g116865 , WorldNormal246_g116865 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116865) = _TerrainNormalTex6;
				SamplerState Sampler234_g116865 = SS29_g116886;
				float4 Coords234_g116865 = temp_output_37_0_g116865;
				float3 WorldPosition234_g116865 = temp_output_279_0_g116865;
				float4 localSampleStochastic2D234_g116865 = SampleStochastic2D( Texture234_g116865 , Sampler234_g116865 , Coords234_g116865 , WorldPosition234_g116865 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116865) = _TerrainNormalTex6;
				SamplerState Sampler263_g116865 = SS29_g116886;
				half4 Coords263_g116865 = temp_output_37_0_g116865;
				half3 WorldPosition263_g116865 = temp_output_279_0_g116865;
				half3 WorldNormal263_g116865 = temp_output_280_0_g116865;
				half4 localSampleStochastic3D263_g116865 = SampleStochastic3D( Texture263_g116865 , Sampler263_g116865 , Coords263_g116865 , WorldPosition263_g116865 , WorldNormal263_g116865 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8687_g116779 = localSamplePlanar2D238_g116865;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8687_g116779 = localSamplePlanar3D246_g116865;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8687_g116779 = localSampleStochastic2D234_g116865;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8687_g116779 = localSampleStochastic3D263_g116865;
				#else
				float4 staticSwitch8687_g116779 = localSamplePlanar2D238_g116865;
				#endif
				half4 Layer237_g116795 = staticSwitch8687_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116866) = _TerrainNormalTex7;
				SamplerState Sampler238_g116866 = SS29_g116886;
				float4 temp_output_37_0_g116866 = Input_Terrain_Coords_078752_g116779;
				half4 Coords238_g116866 = temp_output_37_0_g116866;
				float3 temp_output_279_0_g116866 = Input_Position9197_g116779;
				half3 WorldPosition238_g116866 = temp_output_279_0_g116866;
				half4 localSamplePlanar2D238_g116866 = SamplePlanar2D( Texture238_g116866 , Sampler238_g116866 , Coords238_g116866 , WorldPosition238_g116866 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116866) = _TerrainNormalTex7;
				SamplerState Sampler246_g116866 = SS29_g116886;
				half4 Coords246_g116866 = temp_output_37_0_g116866;
				half3 WorldPosition246_g116866 = temp_output_279_0_g116866;
				float3 temp_output_280_0_g116866 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116866 = temp_output_280_0_g116866;
				half4 localSamplePlanar3D246_g116866 = SamplePlanar3D( Texture246_g116866 , Sampler246_g116866 , Coords246_g116866 , WorldPosition246_g116866 , WorldNormal246_g116866 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116866) = _TerrainNormalTex7;
				SamplerState Sampler234_g116866 = SS29_g116886;
				float4 Coords234_g116866 = temp_output_37_0_g116866;
				float3 WorldPosition234_g116866 = temp_output_279_0_g116866;
				float4 localSampleStochastic2D234_g116866 = SampleStochastic2D( Texture234_g116866 , Sampler234_g116866 , Coords234_g116866 , WorldPosition234_g116866 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116866) = _TerrainNormalTex7;
				SamplerState Sampler263_g116866 = SS29_g116886;
				half4 Coords263_g116866 = temp_output_37_0_g116866;
				half3 WorldPosition263_g116866 = temp_output_279_0_g116866;
				half3 WorldNormal263_g116866 = temp_output_280_0_g116866;
				half4 localSampleStochastic3D263_g116866 = SampleStochastic3D( Texture263_g116866 , Sampler263_g116866 , Coords263_g116866 , WorldPosition263_g116866 , WorldNormal263_g116866 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8688_g116779 = localSamplePlanar2D238_g116866;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8688_g116779 = localSamplePlanar3D246_g116866;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8688_g116779 = localSampleStochastic2D234_g116866;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8688_g116779 = localSampleStochastic3D263_g116866;
				#else
				float4 staticSwitch8688_g116779 = localSamplePlanar2D238_g116866;
				#endif
				half4 Layer338_g116795 = staticSwitch8688_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116867) = _TerrainNormalTex8;
				SamplerState Sampler238_g116867 = SS29_g116886;
				float4 temp_output_37_0_g116867 = Input_Terrain_Coords_088749_g116779;
				half4 Coords238_g116867 = temp_output_37_0_g116867;
				float3 temp_output_279_0_g116867 = Input_Position9197_g116779;
				half3 WorldPosition238_g116867 = temp_output_279_0_g116867;
				half4 localSamplePlanar2D238_g116867 = SamplePlanar2D( Texture238_g116867 , Sampler238_g116867 , Coords238_g116867 , WorldPosition238_g116867 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116867) = _TerrainNormalTex8;
				SamplerState Sampler246_g116867 = SS29_g116886;
				half4 Coords246_g116867 = temp_output_37_0_g116867;
				half3 WorldPosition246_g116867 = temp_output_279_0_g116867;
				float3 temp_output_280_0_g116867 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116867 = temp_output_280_0_g116867;
				half4 localSamplePlanar3D246_g116867 = SamplePlanar3D( Texture246_g116867 , Sampler246_g116867 , Coords246_g116867 , WorldPosition246_g116867 , WorldNormal246_g116867 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116867) = _TerrainNormalTex8;
				SamplerState Sampler234_g116867 = SS29_g116886;
				float4 Coords234_g116867 = temp_output_37_0_g116867;
				float3 WorldPosition234_g116867 = temp_output_279_0_g116867;
				float4 localSampleStochastic2D234_g116867 = SampleStochastic2D( Texture234_g116867 , Sampler234_g116867 , Coords234_g116867 , WorldPosition234_g116867 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116867) = _TerrainNormalTex8;
				SamplerState Sampler263_g116867 = SS29_g116886;
				half4 Coords263_g116867 = temp_output_37_0_g116867;
				half3 WorldPosition263_g116867 = temp_output_279_0_g116867;
				half3 WorldNormal263_g116867 = temp_output_280_0_g116867;
				half4 localSampleStochastic3D263_g116867 = SampleStochastic3D( Texture263_g116867 , Sampler263_g116867 , Coords263_g116867 , WorldPosition263_g116867 , WorldNormal263_g116867 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8689_g116779 = localSamplePlanar2D238_g116867;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8689_g116779 = localSamplePlanar3D246_g116867;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8689_g116779 = localSampleStochastic2D234_g116867;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8689_g116779 = localSampleStochastic3D263_g116867;
				#else
				float4 staticSwitch8689_g116779 = localSamplePlanar2D238_g116867;
				#endif
				half4 Layer439_g116795 = staticSwitch8689_g116779;
				float4 weightedBlendVar31_g116795 = Weights52_g116795;
				float4 weightedBlend31_g116795 = ( weightedBlendVar31_g116795.x*Layer133_g116795 + weightedBlendVar31_g116795.y*Layer237_g116795 + weightedBlendVar31_g116795.z*Layer338_g116795 + weightedBlendVar31_g116795.w*Layer439_g116795 );
				half4 Terrain_B_088684_g116779 = weightedBlend31_g116795;
				half4 Layer_0810_g116786 = Terrain_B_088684_g116779;
				half4 Weights52_g116802 = Terrain_Weights_127710_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116839) = _TerrainNormalTex9;
				SamplerState Sampler238_g116839 = SS29_g116886;
				float4 temp_output_37_0_g116839 = Input_Terrain_Coords_098833_g116779;
				half4 Coords238_g116839 = temp_output_37_0_g116839;
				float3 temp_output_279_0_g116839 = Input_Position9197_g116779;
				half3 WorldPosition238_g116839 = temp_output_279_0_g116839;
				half4 localSamplePlanar2D238_g116839 = SamplePlanar2D( Texture238_g116839 , Sampler238_g116839 , Coords238_g116839 , WorldPosition238_g116839 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116839) = _TerrainNormalTex9;
				SamplerState Sampler246_g116839 = SS29_g116886;
				half4 Coords246_g116839 = temp_output_37_0_g116839;
				half3 WorldPosition246_g116839 = temp_output_279_0_g116839;
				float3 temp_output_280_0_g116839 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116839 = temp_output_280_0_g116839;
				half4 localSamplePlanar3D246_g116839 = SamplePlanar3D( Texture246_g116839 , Sampler246_g116839 , Coords246_g116839 , WorldPosition246_g116839 , WorldNormal246_g116839 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116839) = _TerrainNormalTex9;
				SamplerState Sampler234_g116839 = SS29_g116886;
				float4 Coords234_g116839 = temp_output_37_0_g116839;
				float3 WorldPosition234_g116839 = temp_output_279_0_g116839;
				float4 localSampleStochastic2D234_g116839 = SampleStochastic2D( Texture234_g116839 , Sampler234_g116839 , Coords234_g116839 , WorldPosition234_g116839 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116839) = _TerrainNormalTex9;
				SamplerState Sampler263_g116839 = SS29_g116886;
				half4 Coords263_g116839 = temp_output_37_0_g116839;
				half3 WorldPosition263_g116839 = temp_output_279_0_g116839;
				half3 WorldNormal263_g116839 = temp_output_280_0_g116839;
				half4 localSampleStochastic3D263_g116839 = SampleStochastic3D( Texture263_g116839 , Sampler263_g116839 , Coords263_g116839 , WorldPosition263_g116839 , WorldNormal263_g116839 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8849_g116779 = localSamplePlanar2D238_g116839;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8849_g116779 = localSamplePlanar3D246_g116839;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8849_g116779 = localSampleStochastic2D234_g116839;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8849_g116779 = localSampleStochastic3D263_g116839;
				#else
				float4 staticSwitch8849_g116779 = localSamplePlanar2D238_g116839;
				#endif
				half4 Layer133_g116802 = staticSwitch8849_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116844) = _TerrainNormalTex10;
				SamplerState Sampler238_g116844 = SS29_g116886;
				float4 temp_output_37_0_g116844 = Input_Terrain_Coords_108834_g116779;
				half4 Coords238_g116844 = temp_output_37_0_g116844;
				float3 temp_output_279_0_g116844 = Input_Position9197_g116779;
				half3 WorldPosition238_g116844 = temp_output_279_0_g116844;
				half4 localSamplePlanar2D238_g116844 = SamplePlanar2D( Texture238_g116844 , Sampler238_g116844 , Coords238_g116844 , WorldPosition238_g116844 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116844) = _TerrainNormalTex10;
				SamplerState Sampler246_g116844 = SS29_g116886;
				half4 Coords246_g116844 = temp_output_37_0_g116844;
				half3 WorldPosition246_g116844 = temp_output_279_0_g116844;
				float3 temp_output_280_0_g116844 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116844 = temp_output_280_0_g116844;
				half4 localSamplePlanar3D246_g116844 = SamplePlanar3D( Texture246_g116844 , Sampler246_g116844 , Coords246_g116844 , WorldPosition246_g116844 , WorldNormal246_g116844 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116844) = _TerrainNormalTex10;
				SamplerState Sampler234_g116844 = SS29_g116886;
				float4 Coords234_g116844 = temp_output_37_0_g116844;
				float3 WorldPosition234_g116844 = temp_output_279_0_g116844;
				float4 localSampleStochastic2D234_g116844 = SampleStochastic2D( Texture234_g116844 , Sampler234_g116844 , Coords234_g116844 , WorldPosition234_g116844 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116844) = _TerrainNormalTex10;
				SamplerState Sampler263_g116844 = SS29_g116886;
				half4 Coords263_g116844 = temp_output_37_0_g116844;
				half3 WorldPosition263_g116844 = temp_output_279_0_g116844;
				half3 WorldNormal263_g116844 = temp_output_280_0_g116844;
				half4 localSampleStochastic3D263_g116844 = SampleStochastic3D( Texture263_g116844 , Sampler263_g116844 , Coords263_g116844 , WorldPosition263_g116844 , WorldNormal263_g116844 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8876_g116779 = localSamplePlanar2D238_g116844;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8876_g116779 = localSamplePlanar3D246_g116844;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8876_g116779 = localSampleStochastic2D234_g116844;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8876_g116779 = localSampleStochastic3D263_g116844;
				#else
				float4 staticSwitch8876_g116779 = localSamplePlanar2D238_g116844;
				#endif
				half4 Layer237_g116802 = staticSwitch8876_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116845) = _TerrainNormalTex11;
				SamplerState Sampler238_g116845 = SS29_g116886;
				float4 temp_output_37_0_g116845 = Input_Terrain_Coords_118835_g116779;
				half4 Coords238_g116845 = temp_output_37_0_g116845;
				float3 temp_output_279_0_g116845 = Input_Position9197_g116779;
				half3 WorldPosition238_g116845 = temp_output_279_0_g116845;
				half4 localSamplePlanar2D238_g116845 = SamplePlanar2D( Texture238_g116845 , Sampler238_g116845 , Coords238_g116845 , WorldPosition238_g116845 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116845) = _TerrainNormalTex11;
				SamplerState Sampler246_g116845 = SS29_g116886;
				half4 Coords246_g116845 = temp_output_37_0_g116845;
				half3 WorldPosition246_g116845 = temp_output_279_0_g116845;
				float3 temp_output_280_0_g116845 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116845 = temp_output_280_0_g116845;
				half4 localSamplePlanar3D246_g116845 = SamplePlanar3D( Texture246_g116845 , Sampler246_g116845 , Coords246_g116845 , WorldPosition246_g116845 , WorldNormal246_g116845 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116845) = _TerrainNormalTex11;
				SamplerState Sampler234_g116845 = SS29_g116886;
				float4 Coords234_g116845 = temp_output_37_0_g116845;
				float3 WorldPosition234_g116845 = temp_output_279_0_g116845;
				float4 localSampleStochastic2D234_g116845 = SampleStochastic2D( Texture234_g116845 , Sampler234_g116845 , Coords234_g116845 , WorldPosition234_g116845 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116845) = _TerrainNormalTex11;
				SamplerState Sampler263_g116845 = SS29_g116886;
				half4 Coords263_g116845 = temp_output_37_0_g116845;
				half3 WorldPosition263_g116845 = temp_output_279_0_g116845;
				half3 WorldNormal263_g116845 = temp_output_280_0_g116845;
				half4 localSampleStochastic3D263_g116845 = SampleStochastic3D( Texture263_g116845 , Sampler263_g116845 , Coords263_g116845 , WorldPosition263_g116845 , WorldNormal263_g116845 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8850_g116779 = localSamplePlanar2D238_g116845;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8850_g116779 = localSamplePlanar3D246_g116845;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8850_g116779 = localSampleStochastic2D234_g116845;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8850_g116779 = localSampleStochastic3D263_g116845;
				#else
				float4 staticSwitch8850_g116779 = localSamplePlanar2D238_g116845;
				#endif
				half4 Layer338_g116802 = staticSwitch8850_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116846) = _TerrainNormalTex12;
				SamplerState Sampler238_g116846 = SS29_g116886;
				float4 temp_output_37_0_g116846 = Input_Terrain_Coords_128836_g116779;
				half4 Coords238_g116846 = temp_output_37_0_g116846;
				float3 temp_output_279_0_g116846 = Input_Position9197_g116779;
				half3 WorldPosition238_g116846 = temp_output_279_0_g116846;
				half4 localSamplePlanar2D238_g116846 = SamplePlanar2D( Texture238_g116846 , Sampler238_g116846 , Coords238_g116846 , WorldPosition238_g116846 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116846) = _TerrainNormalTex12;
				SamplerState Sampler246_g116846 = SS29_g116886;
				half4 Coords246_g116846 = temp_output_37_0_g116846;
				half3 WorldPosition246_g116846 = temp_output_279_0_g116846;
				float3 temp_output_280_0_g116846 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116846 = temp_output_280_0_g116846;
				half4 localSamplePlanar3D246_g116846 = SamplePlanar3D( Texture246_g116846 , Sampler246_g116846 , Coords246_g116846 , WorldPosition246_g116846 , WorldNormal246_g116846 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116846) = _TerrainNormalTex12;
				SamplerState Sampler234_g116846 = SS29_g116886;
				float4 Coords234_g116846 = temp_output_37_0_g116846;
				float3 WorldPosition234_g116846 = temp_output_279_0_g116846;
				float4 localSampleStochastic2D234_g116846 = SampleStochastic2D( Texture234_g116846 , Sampler234_g116846 , Coords234_g116846 , WorldPosition234_g116846 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116846) = _TerrainNormalTex12;
				SamplerState Sampler263_g116846 = SS29_g116886;
				half4 Coords263_g116846 = temp_output_37_0_g116846;
				half3 WorldPosition263_g116846 = temp_output_279_0_g116846;
				half3 WorldNormal263_g116846 = temp_output_280_0_g116846;
				half4 localSampleStochastic3D263_g116846 = SampleStochastic3D( Texture263_g116846 , Sampler263_g116846 , Coords263_g116846 , WorldPosition263_g116846 , WorldNormal263_g116846 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8877_g116779 = localSamplePlanar2D238_g116846;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8877_g116779 = localSamplePlanar3D246_g116846;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8877_g116779 = localSampleStochastic2D234_g116846;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8877_g116779 = localSampleStochastic3D263_g116846;
				#else
				float4 staticSwitch8877_g116779 = localSamplePlanar2D238_g116846;
				#endif
				half4 Layer439_g116802 = staticSwitch8877_g116779;
				float4 weightedBlendVar31_g116802 = Weights52_g116802;
				float4 weightedBlend31_g116802 = ( weightedBlendVar31_g116802.x*Layer133_g116802 + weightedBlendVar31_g116802.y*Layer237_g116802 + weightedBlendVar31_g116802.z*Layer338_g116802 + weightedBlendVar31_g116802.w*Layer439_g116802 );
				half4 Terrain_B_128865_g116779 = weightedBlend31_g116802;
				half4 Layer_1243_g116786 = Terrain_B_128865_g116779;
				half4 Weights52_g116809 = Terrain_Weights_167709_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116849) = _TerrainNormalTex13;
				SamplerState Sampler238_g116849 = SS29_g116886;
				float4 temp_output_37_0_g116849 = Input_Terrain_Coords_138960_g116779;
				half4 Coords238_g116849 = temp_output_37_0_g116849;
				float3 temp_output_279_0_g116849 = Input_Position9197_g116779;
				half3 WorldPosition238_g116849 = temp_output_279_0_g116849;
				half4 localSamplePlanar2D238_g116849 = SamplePlanar2D( Texture238_g116849 , Sampler238_g116849 , Coords238_g116849 , WorldPosition238_g116849 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116849) = _TerrainNormalTex13;
				SamplerState Sampler246_g116849 = SS29_g116886;
				half4 Coords246_g116849 = temp_output_37_0_g116849;
				half3 WorldPosition246_g116849 = temp_output_279_0_g116849;
				float3 temp_output_280_0_g116849 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116849 = temp_output_280_0_g116849;
				half4 localSamplePlanar3D246_g116849 = SamplePlanar3D( Texture246_g116849 , Sampler246_g116849 , Coords246_g116849 , WorldPosition246_g116849 , WorldNormal246_g116849 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116849) = _TerrainNormalTex13;
				SamplerState Sampler234_g116849 = SS29_g116886;
				float4 Coords234_g116849 = temp_output_37_0_g116849;
				float3 WorldPosition234_g116849 = temp_output_279_0_g116849;
				float4 localSampleStochastic2D234_g116849 = SampleStochastic2D( Texture234_g116849 , Sampler234_g116849 , Coords234_g116849 , WorldPosition234_g116849 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116849) = _TerrainNormalTex13;
				SamplerState Sampler263_g116849 = SS29_g116886;
				half4 Coords263_g116849 = temp_output_37_0_g116849;
				half3 WorldPosition263_g116849 = temp_output_279_0_g116849;
				half3 WorldNormal263_g116849 = temp_output_280_0_g116849;
				half4 localSampleStochastic3D263_g116849 = SampleStochastic3D( Texture263_g116849 , Sampler263_g116849 , Coords263_g116849 , WorldPosition263_g116849 , WorldNormal263_g116849 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8991_g116779 = localSamplePlanar2D238_g116849;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8991_g116779 = localSamplePlanar3D246_g116849;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8991_g116779 = localSampleStochastic2D234_g116849;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8991_g116779 = localSampleStochastic3D263_g116849;
				#else
				float4 staticSwitch8991_g116779 = localSamplePlanar2D238_g116849;
				#endif
				half4 Layer133_g116809 = staticSwitch8991_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116856) = _TerrainNormalTex14;
				SamplerState Sampler238_g116856 = SS29_g116886;
				float4 temp_output_37_0_g116856 = Input_Terrain_Coords_148961_g116779;
				half4 Coords238_g116856 = temp_output_37_0_g116856;
				float3 temp_output_279_0_g116856 = Input_Position9197_g116779;
				half3 WorldPosition238_g116856 = temp_output_279_0_g116856;
				half4 localSamplePlanar2D238_g116856 = SamplePlanar2D( Texture238_g116856 , Sampler238_g116856 , Coords238_g116856 , WorldPosition238_g116856 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116856) = _TerrainNormalTex14;
				SamplerState Sampler246_g116856 = SS29_g116886;
				half4 Coords246_g116856 = temp_output_37_0_g116856;
				half3 WorldPosition246_g116856 = temp_output_279_0_g116856;
				float3 temp_output_280_0_g116856 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116856 = temp_output_280_0_g116856;
				half4 localSamplePlanar3D246_g116856 = SamplePlanar3D( Texture246_g116856 , Sampler246_g116856 , Coords246_g116856 , WorldPosition246_g116856 , WorldNormal246_g116856 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116856) = _TerrainNormalTex14;
				SamplerState Sampler234_g116856 = SS29_g116886;
				float4 Coords234_g116856 = temp_output_37_0_g116856;
				float3 WorldPosition234_g116856 = temp_output_279_0_g116856;
				float4 localSampleStochastic2D234_g116856 = SampleStochastic2D( Texture234_g116856 , Sampler234_g116856 , Coords234_g116856 , WorldPosition234_g116856 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116856) = _TerrainNormalTex14;
				SamplerState Sampler263_g116856 = SS29_g116886;
				half4 Coords263_g116856 = temp_output_37_0_g116856;
				half3 WorldPosition263_g116856 = temp_output_279_0_g116856;
				half3 WorldNormal263_g116856 = temp_output_280_0_g116856;
				half4 localSampleStochastic3D263_g116856 = SampleStochastic3D( Texture263_g116856 , Sampler263_g116856 , Coords263_g116856 , WorldPosition263_g116856 , WorldNormal263_g116856 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8990_g116779 = localSamplePlanar2D238_g116856;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8990_g116779 = localSamplePlanar3D246_g116856;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8990_g116779 = localSampleStochastic2D234_g116856;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8990_g116779 = localSampleStochastic3D263_g116856;
				#else
				float4 staticSwitch8990_g116779 = localSamplePlanar2D238_g116856;
				#endif
				half4 Layer237_g116809 = staticSwitch8990_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116857) = _TerrainNormalTex15;
				SamplerState Sampler238_g116857 = SS29_g116886;
				float4 temp_output_37_0_g116857 = Input_Terrain_Coords_158962_g116779;
				half4 Coords238_g116857 = temp_output_37_0_g116857;
				float3 temp_output_279_0_g116857 = Input_Position9197_g116779;
				half3 WorldPosition238_g116857 = temp_output_279_0_g116857;
				half4 localSamplePlanar2D238_g116857 = SamplePlanar2D( Texture238_g116857 , Sampler238_g116857 , Coords238_g116857 , WorldPosition238_g116857 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116857) = _TerrainNormalTex15;
				SamplerState Sampler246_g116857 = SS29_g116886;
				half4 Coords246_g116857 = temp_output_37_0_g116857;
				half3 WorldPosition246_g116857 = temp_output_279_0_g116857;
				float3 temp_output_280_0_g116857 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116857 = temp_output_280_0_g116857;
				half4 localSamplePlanar3D246_g116857 = SamplePlanar3D( Texture246_g116857 , Sampler246_g116857 , Coords246_g116857 , WorldPosition246_g116857 , WorldNormal246_g116857 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116857) = _TerrainNormalTex15;
				SamplerState Sampler234_g116857 = SS29_g116886;
				float4 Coords234_g116857 = temp_output_37_0_g116857;
				float3 WorldPosition234_g116857 = temp_output_279_0_g116857;
				float4 localSampleStochastic2D234_g116857 = SampleStochastic2D( Texture234_g116857 , Sampler234_g116857 , Coords234_g116857 , WorldPosition234_g116857 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116857) = _TerrainNormalTex15;
				SamplerState Sampler263_g116857 = SS29_g116886;
				half4 Coords263_g116857 = temp_output_37_0_g116857;
				half3 WorldPosition263_g116857 = temp_output_279_0_g116857;
				half3 WorldNormal263_g116857 = temp_output_280_0_g116857;
				half4 localSampleStochastic3D263_g116857 = SampleStochastic3D( Texture263_g116857 , Sampler263_g116857 , Coords263_g116857 , WorldPosition263_g116857 , WorldNormal263_g116857 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8989_g116779 = localSamplePlanar2D238_g116857;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8989_g116779 = localSamplePlanar3D246_g116857;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8989_g116779 = localSampleStochastic2D234_g116857;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8989_g116779 = localSampleStochastic3D263_g116857;
				#else
				float4 staticSwitch8989_g116779 = localSamplePlanar2D238_g116857;
				#endif
				half4 Layer338_g116809 = staticSwitch8989_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116858) = _TerrainNormalTex16;
				SamplerState Sampler238_g116858 = SS29_g116886;
				float4 temp_output_37_0_g116858 = Input_Terrain_Coords_168959_g116779;
				half4 Coords238_g116858 = temp_output_37_0_g116858;
				float3 temp_output_279_0_g116858 = Input_Position9197_g116779;
				half3 WorldPosition238_g116858 = temp_output_279_0_g116858;
				half4 localSamplePlanar2D238_g116858 = SamplePlanar2D( Texture238_g116858 , Sampler238_g116858 , Coords238_g116858 , WorldPosition238_g116858 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116858) = _TerrainNormalTex16;
				SamplerState Sampler246_g116858 = SS29_g116886;
				half4 Coords246_g116858 = temp_output_37_0_g116858;
				half3 WorldPosition246_g116858 = temp_output_279_0_g116858;
				float3 temp_output_280_0_g116858 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116858 = temp_output_280_0_g116858;
				half4 localSamplePlanar3D246_g116858 = SamplePlanar3D( Texture246_g116858 , Sampler246_g116858 , Coords246_g116858 , WorldPosition246_g116858 , WorldNormal246_g116858 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116858) = _TerrainNormalTex16;
				SamplerState Sampler234_g116858 = SS29_g116886;
				float4 Coords234_g116858 = temp_output_37_0_g116858;
				float3 WorldPosition234_g116858 = temp_output_279_0_g116858;
				float4 localSampleStochastic2D234_g116858 = SampleStochastic2D( Texture234_g116858 , Sampler234_g116858 , Coords234_g116858 , WorldPosition234_g116858 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116858) = _TerrainNormalTex16;
				SamplerState Sampler263_g116858 = SS29_g116886;
				half4 Coords263_g116858 = temp_output_37_0_g116858;
				half3 WorldPosition263_g116858 = temp_output_279_0_g116858;
				half3 WorldNormal263_g116858 = temp_output_280_0_g116858;
				half4 localSampleStochastic3D263_g116858 = SampleStochastic3D( Texture263_g116858 , Sampler263_g116858 , Coords263_g116858 , WorldPosition263_g116858 , WorldNormal263_g116858 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8988_g116779 = localSamplePlanar2D238_g116858;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8988_g116779 = localSamplePlanar3D246_g116858;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8988_g116779 = localSampleStochastic2D234_g116858;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8988_g116779 = localSampleStochastic3D263_g116858;
				#else
				float4 staticSwitch8988_g116779 = localSamplePlanar2D238_g116858;
				#endif
				half4 Layer439_g116809 = staticSwitch8988_g116779;
				float4 weightedBlendVar31_g116809 = Weights52_g116809;
				float4 weightedBlend31_g116809 = ( weightedBlendVar31_g116809.x*Layer133_g116809 + weightedBlendVar31_g116809.y*Layer237_g116809 + weightedBlendVar31_g116809.z*Layer338_g116809 + weightedBlendVar31_g116809.w*Layer439_g116809 );
				half4 Terrain_B_168987_g116779 = weightedBlend31_g116809;
				half4 Layer_1644_g116786 = Terrain_B_168987_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116786 = Layer_045_g116786;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116786 = ( Layer_045_g116786 + Layer_0810_g116786 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116786 = ( Layer_045_g116786 + Layer_0810_g116786 + Layer_1243_g116786 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116786 = ( Layer_045_g116786 + Layer_0810_g116786 + Layer_1243_g116786 + Layer_1644_g116786 );
				#else
				float4 staticSwitch40_g116786 = Layer_045_g116786;
				#endif
				half4 Blend_Normal7512_g116779 = staticSwitch40_g116786;
				half4 Normal_Packed45_g116880 = Blend_Normal7512_g116779;
				float2 appendResult58_g116880 = (float2(( (Normal_Packed45_g116880).x * (Normal_Packed45_g116880).w ) , (Normal_Packed45_g116880).y));
				half2 Normal_Default50_g116880 = appendResult58_g116880;
				half2 Normal_ASTC41_g116880 = (Normal_Packed45_g116880).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g116880 = Normal_ASTC41_g116880;
				#else
				float2 staticSwitch38_g116880 = Normal_Default50_g116880;
				#endif
				half2 Normal_NO_DTX544_g116880 = (Normal_Packed45_g116880).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g116880 = Normal_NO_DTX544_g116880;
				#else
				float2 staticSwitch37_g116880 = staticSwitch38_g116880;
				#endif
				half4 Weights52_g116782 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116782 = temp_output_6970_0_g116779;
				half4 Layer237_g116782 = temp_output_6977_0_g116779;
				half4 Layer338_g116782 = temp_output_6978_0_g116779;
				half4 Layer439_g116782 = temp_output_6983_0_g116779;
				float4 weightedBlendVar31_g116782 = Weights52_g116782;
				float4 weightedBlend31_g116782 = ( weightedBlendVar31_g116782.x*Layer133_g116782 + weightedBlendVar31_g116782.y*Layer237_g116782 + weightedBlendVar31_g116782.z*Layer338_g116782 + weightedBlendVar31_g116782.w*Layer439_g116782 );
				half4 Terrain_Shaders_047203_g116779 = weightedBlend31_g116782;
				half4 Layer_045_g116788 = Terrain_Shaders_047203_g116779;
				half4 Weights52_g116798 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116798 = temp_output_8714_0_g116779;
				half4 Layer237_g116798 = temp_output_8721_0_g116779;
				half4 Layer338_g116798 = temp_output_8724_0_g116779;
				half4 Layer439_g116798 = temp_output_8727_0_g116779;
				float4 weightedBlendVar31_g116798 = Weights52_g116798;
				float4 weightedBlend31_g116798 = ( weightedBlendVar31_g116798.x*Layer133_g116798 + weightedBlendVar31_g116798.y*Layer237_g116798 + weightedBlendVar31_g116798.z*Layer338_g116798 + weightedBlendVar31_g116798.w*Layer439_g116798 );
				half4 Terrain_Shaders_088730_g116779 = weightedBlend31_g116798;
				half4 Layer_0810_g116788 = Terrain_Shaders_088730_g116779;
				half4 Weights52_g116805 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116805 = temp_output_8815_0_g116779;
				half4 Layer237_g116805 = temp_output_8818_0_g116779;
				half4 Layer338_g116805 = temp_output_8819_0_g116779;
				half4 Layer439_g116805 = temp_output_8820_0_g116779;
				float4 weightedBlendVar31_g116805 = Weights52_g116805;
				float4 weightedBlend31_g116805 = ( weightedBlendVar31_g116805.x*Layer133_g116805 + weightedBlendVar31_g116805.y*Layer237_g116805 + weightedBlendVar31_g116805.z*Layer338_g116805 + weightedBlendVar31_g116805.w*Layer439_g116805 );
				half4 Terrain_Shaders_128871_g116779 = weightedBlend31_g116805;
				half4 Layer_1243_g116788 = Terrain_Shaders_128871_g116779;
				half4 Weights52_g116812 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116812 = temp_output_8931_0_g116779;
				half4 Layer237_g116812 = temp_output_8934_0_g116779;
				half4 Layer338_g116812 = temp_output_8935_0_g116779;
				half4 Layer439_g116812 = temp_output_8936_0_g116779;
				float4 weightedBlendVar31_g116812 = Weights52_g116812;
				float4 weightedBlend31_g116812 = ( weightedBlendVar31_g116812.x*Layer133_g116812 + weightedBlendVar31_g116812.y*Layer237_g116812 + weightedBlendVar31_g116812.z*Layer338_g116812 + weightedBlendVar31_g116812.w*Layer439_g116812 );
				half4 Terrain_Shaders_169014_g116779 = weightedBlend31_g116812;
				half4 Layer_1644_g116788 = Terrain_Shaders_169014_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116788 = Layer_045_g116788;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116788 = ( Layer_045_g116788 + Layer_0810_g116788 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116788 = ( Layer_045_g116788 + Layer_0810_g116788 + Layer_1243_g116788 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116788 = ( Layer_045_g116788 + Layer_0810_g116788 + Layer_1243_g116788 + Layer_1644_g116788 );
				#else
				float4 staticSwitch40_g116788 = Layer_045_g116788;
				#endif
				half4 Blend_Shaders7420_g116779 = staticSwitch40_g116788;
				half4 Normal_Packed45_g116879 = Blend_Shaders7420_g116779;
				half2 Normal_NO_DTX544_g116879 = (Normal_Packed45_g116879).wy;
				#ifdef TVE_TERRAIN_PACKED
				float2 staticSwitch9080_g116779 = (Normal_NO_DTX544_g116879*2.0 + -1.0);
				#else
				float2 staticSwitch9080_g116779 = (staticSwitch37_g116880*2.0 + -1.0);
				#endif
				half4 Weights52_g116783 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116783 = _TerrainParams1;
				half4 Layer237_g116783 = _TerrainParams2;
				half4 Layer338_g116783 = _TerrainParams3;
				half4 Layer439_g116783 = _TerrainParams4;
				float4 weightedBlendVar31_g116783 = Weights52_g116783;
				float4 weightedBlend31_g116783 = ( weightedBlendVar31_g116783.x*Layer133_g116783 + weightedBlendVar31_g116783.y*Layer237_g116783 + weightedBlendVar31_g116783.z*Layer338_g116783 + weightedBlendVar31_g116783.w*Layer439_g116783 );
				half4 Terrain_Params_047533_g116779 = weightedBlend31_g116783;
				half4 Layer_045_g116789 = Terrain_Params_047533_g116779;
				half4 Weights52_g116799 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116799 = _TerrainParams5;
				half4 Layer237_g116799 = _TerrainParams6;
				half4 Layer338_g116799 = _TerrainParams7;
				half4 Layer439_g116799 = _TerrainParams8;
				float4 weightedBlendVar31_g116799 = Weights52_g116799;
				float4 weightedBlend31_g116799 = ( weightedBlendVar31_g116799.x*Layer133_g116799 + weightedBlendVar31_g116799.y*Layer237_g116799 + weightedBlendVar31_g116799.z*Layer338_g116799 + weightedBlendVar31_g116799.w*Layer439_g116799 );
				half4 Terrain_Params_088739_g116779 = weightedBlend31_g116799;
				half4 Layer_0810_g116789 = Terrain_Params_088739_g116779;
				half4 Weights52_g116806 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116806 = _TerrainParams9;
				half4 Layer237_g116806 = _TerrainParams10;
				half4 Layer338_g116806 = _TerrainParams11;
				half4 Layer439_g116806 = _TerrainParams12;
				float4 weightedBlendVar31_g116806 = Weights52_g116806;
				float4 weightedBlend31_g116806 = ( weightedBlendVar31_g116806.x*Layer133_g116806 + weightedBlendVar31_g116806.y*Layer237_g116806 + weightedBlendVar31_g116806.z*Layer338_g116806 + weightedBlendVar31_g116806.w*Layer439_g116806 );
				half4 Terrain_Params_128867_g116779 = weightedBlend31_g116806;
				half4 Layer_1243_g116789 = Terrain_Params_128867_g116779;
				half4 Weights52_g116813 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116813 = _TerrainParams13;
				half4 Layer237_g116813 = _TerrainParams14;
				half4 Layer338_g116813 = _TerrainParams15;
				half4 Layer439_g116813 = _TerrainParams16;
				float4 weightedBlendVar31_g116813 = Weights52_g116813;
				float4 weightedBlend31_g116813 = ( weightedBlendVar31_g116813.x*Layer133_g116813 + weightedBlendVar31_g116813.y*Layer237_g116813 + weightedBlendVar31_g116813.z*Layer338_g116813 + weightedBlendVar31_g116813.w*Layer439_g116813 );
				half4 Terrain_Params_169017_g116779 = weightedBlend31_g116813;
				half4 Layer_1644_g116789 = Terrain_Params_169017_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116789 = Layer_045_g116789;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116789 = ( Layer_045_g116789 + Layer_0810_g116789 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116789 = ( Layer_045_g116789 + Layer_0810_g116789 + Layer_1243_g116789 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116789 = ( Layer_045_g116789 + Layer_0810_g116789 + Layer_1243_g116789 + Layer_1644_g116789 );
				#else
				float4 staticSwitch40_g116789 = Layer_045_g116789;
				#endif
				half4 Blend_Params7547_g116779 = staticSwitch40_g116789;
				half2 Normal_Planar45_g116881 = ( ( staticSwitch9080_g116779 * (Blend_Params7547_g116779).z ) * _TerrainNormalValue );
				float2 break71_g116881 = Normal_Planar45_g116881;
				float3 appendResult72_g116881 = (float3(break71_g116881.x , 0.0 , break71_g116881.y));
				half2 Final_NormalTS9145_g116779 = (mul( ase_worldToTangent, appendResult72_g116881 )).xy;
				half2 Local_Normal9200_g116777 = Final_NormalTS9145_g116779;
				float2 In_NormalTS3_g116778 = Local_Normal9200_g116777;
				float3 appendResult68_g116889 = (float3(Local_Normal9200_g116777 , 1.0));
				float3 tanToWorld0 = float3( WorldTangent.x, WorldBiTangent.x, WorldNormal.x );
				float3 tanToWorld1 = float3( WorldTangent.y, WorldBiTangent.y, WorldNormal.y );
				float3 tanToWorld2 = float3( WorldTangent.z, WorldBiTangent.z, WorldNormal.z );
				float3 tanNormal74_g116889 = appendResult68_g116889;
				float3 worldNormal74_g116889 = normalize( float3(dot(tanToWorld0,tanNormal74_g116889), dot(tanToWorld1,tanNormal74_g116889), dot(tanToWorld2,tanNormal74_g116889)) );
				float3 In_NormalWS3_g116778 = worldNormal74_g116889;
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9139_g116779 = 0.0;
				#else
				float staticSwitch9139_g116779 = ( (Blend_Shaders7420_g116779).x * (Blend_Params7547_g116779).x * _TerrainMetallicValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9097_g116779 = 1.0;
				#else
				float staticSwitch9097_g116779 = ( (Blend_Shaders7420_g116779).y * _TerrainOcclusionValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9105_g116779 = (Blend_Shaders7420_g116779).x;
				#else
				float staticSwitch9105_g116779 = (Blend_Shaders7420_g116779).w;
				#endif
				float4 appendResult9147_g116779 = (float4(staticSwitch9139_g116779 , staticSwitch9097_g116779 , (Blend_Shaders7420_g116779).z , ( staticSwitch9105_g116779 * (Blend_Params7547_g116779).w * _TerrainSmoothnessValue )));
				half4 Final_Shaders9146_g116779 = appendResult9147_g116779;
				half4 Local_Shader9201_g116777 = Final_Shaders9146_g116779;
				float4 In_Shader3_g116778 = Local_Shader9201_g116777;
				half4 Weights52_g116872 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116872 = _TerrainSpecular1;
				half4 Layer237_g116872 = _TerrainSpecular2;
				half4 Layer338_g116872 = _TerrainSpecular3;
				half4 Layer439_g116872 = _TerrainSpecular4;
				float4 weightedBlendVar31_g116872 = Weights52_g116872;
				float4 weightedBlend31_g116872 = ( weightedBlendVar31_g116872.x*Layer133_g116872 + weightedBlendVar31_g116872.y*Layer237_g116872 + weightedBlendVar31_g116872.z*Layer338_g116872 + weightedBlendVar31_g116872.w*Layer439_g116872 );
				half4 Terrain_Specular_047390_g116779 = weightedBlend31_g116872;
				half4 Layer_045_g116877 = Terrain_Specular_047390_g116779;
				half4 Weights52_g116800 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116800 = _TerrainSpecular5;
				half4 Layer237_g116800 = _TerrainSpecular6;
				half4 Layer338_g116800 = _TerrainSpecular7;
				half4 Layer439_g116800 = _TerrainSpecular8;
				float4 weightedBlendVar31_g116800 = Weights52_g116800;
				float4 weightedBlend31_g116800 = ( weightedBlendVar31_g116800.x*Layer133_g116800 + weightedBlendVar31_g116800.y*Layer237_g116800 + weightedBlendVar31_g116800.z*Layer338_g116800 + weightedBlendVar31_g116800.w*Layer439_g116800 );
				half4 Terrain_Specular_088745_g116779 = weightedBlend31_g116800;
				half4 Layer_0810_g116877 = Terrain_Specular_088745_g116779;
				half4 Weights52_g116807 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116807 = _TerrainSpecular9;
				half4 Layer237_g116807 = _TerrainSpecular10;
				half4 Layer338_g116807 = _TerrainSpecular11;
				half4 Layer439_g116807 = _TerrainSpecular12;
				float4 weightedBlendVar31_g116807 = Weights52_g116807;
				float4 weightedBlend31_g116807 = ( weightedBlendVar31_g116807.x*Layer133_g116807 + weightedBlendVar31_g116807.y*Layer237_g116807 + weightedBlendVar31_g116807.z*Layer338_g116807 + weightedBlendVar31_g116807.w*Layer439_g116807 );
				half4 Terrain_Specular_128869_g116779 = weightedBlend31_g116807;
				half4 Layer_1243_g116877 = Terrain_Specular_128869_g116779;
				half4 Weights52_g116814 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116814 = _TerrainSpecular13;
				half4 Layer237_g116814 = _TerrainSpecular14;
				half4 Layer338_g116814 = _TerrainSpecular15;
				half4 Layer439_g116814 = _TerrainSpecular16;
				float4 weightedBlendVar31_g116814 = Weights52_g116814;
				float4 weightedBlend31_g116814 = ( weightedBlendVar31_g116814.x*Layer133_g116814 + weightedBlendVar31_g116814.y*Layer237_g116814 + weightedBlendVar31_g116814.z*Layer338_g116814 + weightedBlendVar31_g116814.w*Layer439_g116814 );
				half4 Terrain_Specular_169019_g116779 = weightedBlend31_g116814;
				half4 Layer_1644_g116877 = Terrain_Specular_169019_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116877 = Layer_045_g116877;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116877 = ( Layer_045_g116877 + Layer_0810_g116877 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116877 = ( Layer_045_g116877 + Layer_0810_g116877 + Layer_1243_g116877 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116877 = ( Layer_045_g116877 + Layer_0810_g116877 + Layer_1243_g116877 + Layer_1644_g116877 );
				#else
				float4 staticSwitch40_g116877 = Layer_045_g116877;
				#endif
				half4 Blend_TerrainSpecular7446_g116779 = staticSwitch40_g116877;
				float3 temp_output_9088_0_g116779 = (Blend_TerrainSpecular7446_g116779).rgb;
				float4 appendResult9189_g116779 = (float4(temp_output_9088_0_g116779 , 1.0));
				half4 Final_Emissive9151_g116779 = appendResult9189_g116779;
				half4 Local_EmissiveLDR9202_g116777 = Final_Emissive9151_g116779;
				float4 In_Emissive3_g116778 = Local_EmissiveLDR9202_g116777;
				float3 temp_output_3_0_g116890 = Local_Albedo9199_g116777;
				float dotResult20_g116890 = dot( temp_output_3_0_g116890 , float3(0.2126,0.7152,0.0722) );
				float temp_output_9165_0_g116777 = dotResult20_g116890;
				float In_Grayscale3_g116778 = temp_output_9165_0_g116777;
				float clampResult9168_g116777 = clamp( saturate( ( temp_output_9165_0_g116777 * 5.0 ) ) , 0.2 , 1.0 );
				float In_Luminosity3_g116778 = clampResult9168_g116777;
				half Final_MultiShader9150_g116779 = ( (Blend_TerrainSpecular7446_g116779).a * (Blend_Albedo7468_g116779).w );
				half Local_MultiMask9203_g116777 = Final_MultiShader9150_g116779;
				float In_MultiMask3_g116778 = Local_MultiMask9203_g116777;
				float4 temp_output_35_0_g116888 = appendResult9125_g116779;
				float2 InputScale48_g116888 = (temp_output_35_0_g116888).zw;
				half2 FinalScale53_g116888 = ( 1.0 / InputScale48_g116888 );
				float2 InputPosition52_g116888 = (temp_output_35_0_g116888).xy;
				half2 FinalPosition58_g116888 = -( FinalScale53_g116888 * InputPosition52_g116888 );
				float2 temp_output_65_0_g116888 = ( ( (worldPos).xz * FinalScale53_g116888 ) + FinalPosition58_g116888 );
				float2 Terrain_Holes_UV9406_g116779 = temp_output_65_0_g116888;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch9188_g116779 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9406_g116779 ).r;
				#else
				float staticSwitch9188_g116779 = 1.0;
				#endif
				half Terrain_Holes7437_g116779 = staticSwitch9188_g116779;
				half Local_HoleMask9204_g116777 = Terrain_Holes7437_g116779;
				float In_AlphaClip3_g116778 = Local_HoleMask9204_g116777;
				float In_AlphaFade3_g116778 = 1.0;
				float3 temp_cast_9 = (1.0).xxx;
				float3 In_Translucency3_g116778 = temp_cast_9;
				float In_Transmission3_g116778 = 1.0;
				float In_Thickness3_g116778 = 0.0;
				float In_Diffusion3_g116778 = 0.0;
				Data3_g116778.Dummy = In_Dummy3_g116778;
				Data3_g116778.Albedo = In_Albedo3_g116778;
				Data3_g116778.AlbedoRaw = In_AlbedoRaw3_g116778;
				Data3_g116778.NormalTS = In_NormalTS3_g116778;
				Data3_g116778.NormalWS = In_NormalWS3_g116778;
				Data3_g116778.Shader = In_Shader3_g116778;
				Data3_g116778.Emissive= In_Emissive3_g116778;
				Data3_g116778.MultiMask = In_MultiMask3_g116778;
				Data3_g116778.Grayscale = In_Grayscale3_g116778;
				Data3_g116778.Luminosity = In_Luminosity3_g116778;
				Data3_g116778.AlphaClip = In_AlphaClip3_g116778;
				Data3_g116778.AlphaFade = In_AlphaFade3_g116778;
				Data3_g116778.Translucency = In_Translucency3_g116778;
				Data3_g116778.Transmission = In_Transmission3_g116778;
				Data3_g116778.Thickness = In_Thickness3_g116778;
				Data3_g116778.Diffusion = In_Diffusion3_g116778;
				TVEVisualData Data4_g116913 = Data3_g116778;
				float Out_Dummy4_g116913 = 0;
				float3 Out_Albedo4_g116913 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116913 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116913 = float2( 0,0 );
				float3 Out_NormalWS4_g116913 = float3( 0,0,0 );
				float4 Out_Shader4_g116913 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116913 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116913 = 0;
				float Out_Grayscale4_g116913 = 0;
				float Out_Luminosity4_g116913 = 0;
				float Out_AlphaClip4_g116913 = 0;
				float Out_AlphaFade4_g116913 = 0;
				float3 Out_Translucency4_g116913 = float3( 0,0,0 );
				float Out_Transmission4_g116913 = 0;
				float Out_Thickness4_g116913 = 0;
				float Out_Diffusion4_g116913 = 0;
				Out_Dummy4_g116913 = Data4_g116913.Dummy;
				Out_Albedo4_g116913 = Data4_g116913.Albedo;
				Out_AlbedoRaw4_g116913 = Data4_g116913.AlbedoRaw;
				Out_NormalTS4_g116913 = Data4_g116913.NormalTS;
				Out_NormalWS4_g116913 = Data4_g116913.NormalWS;
				Out_Shader4_g116913 = Data4_g116913.Shader;
				Out_Emissive4_g116913= Data4_g116913.Emissive;
				Out_MultiMask4_g116913 = Data4_g116913.MultiMask;
				Out_Grayscale4_g116913 = Data4_g116913.Grayscale;
				Out_Luminosity4_g116913= Data4_g116913.Luminosity;
				Out_AlphaClip4_g116913 = Data4_g116913.AlphaClip;
				Out_AlphaFade4_g116913 = Data4_g116913.AlphaFade;
				Out_Translucency4_g116913 = Data4_g116913.Translucency;
				Out_Transmission4_g116913 = Data4_g116913.Transmission;
				Out_Thickness4_g116913 = Data4_g116913.Thickness;
				Out_Diffusion4_g116913 = Data4_g116913.Diffusion;
				half3 Visual_Albedo139_g116891 = Out_Albedo4_g116913;
				float temp_output_200_12_g116891 = Out_Grayscale4_g116913;
				half Visual_Grayscale150_g116891 = temp_output_200_12_g116891;
				float3 temp_cast_10 = (Visual_Grayscale150_g116891).xxx;
				float localBuildGlobalData204_g115912 = ( 0.0 );
				TVEGlobalData Data204_g115912 = (TVEGlobalData)0;
				half Dummy211_g115912 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g115912 = Dummy211_g115912;
				half4 Coat_Params302_g115912 = TVE_CoatParams;
				float4 In_CoatParams204_g115912 = Coat_Params302_g115912;
				float temp_output_82_0_g115913 = _GlobalPaintLayerValue;
				float temp_output_19_0_g115915 = TVE_PaintLayers[(int)temp_output_82_0_g115913];
				TVEModelData Data16_g114321 = (TVEModelData)0;
				float In_Dummy16_g114321 = 0.0;
				float3 vertexToFrag73_g114306 = IN.ase_texcoord9.xyz;
				half3 PositionWS122_g114306 = vertexToFrag73_g114306;
				float3 In_PositionWS16_g114321 = PositionWS122_g114306;
				float4x4 break19_g114308 = unity_ObjectToWorld;
				float3 appendResult20_g114308 = (float3(break19_g114308[ 0 ][ 3 ] , break19_g114308[ 1 ][ 3 ] , break19_g114308[ 2 ][ 3 ]));
				half3 ObjectData20_g114310 = appendResult20_g114308;
				half3 WorldData19_g114310 = worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g114310 = WorldData19_g114310;
				#else
				float3 staticSwitch14_g114310 = ObjectData20_g114310;
				#endif
				float3 temp_output_124_0_g114308 = staticSwitch14_g114310;
				float3 temp_output_239_7_g114306 = temp_output_124_0_g114308;
				half3 PivotWS121_g114306 = temp_output_239_7_g114306;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
				#else
				float3 staticSwitch204_g114306 = PositionWS122_g114306;
				#endif
				half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
				float3 In_PositionWO16_g114321 = PositionWO132_g114306;
				float3 In_PivotWS16_g114321 = PivotWS121_g114306;
				half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
				float3 In_PivotWO16_g114321 = PivotWO133_g114306;
				float3 normalizedWorldNormal = normalize( WorldNormal );
				half3 Normal_WS95_g114306 = normalizedWorldNormal;
				float3 In_NormalWS16_g114321 = Normal_WS95_g114306;
				float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
				half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
				float3 In_ViewDirWS16_g114321 = ViewDirWS169_g114306;
				half4 VertexMasks171_g114306 = IN.ase_color;
				float4 In_VertexData16_g114321 = VertexMasks171_g114306;
				float4 In_BoundsData16_g114321 = float4( 1,1,1,1 );
				Data16_g114321.Dummy = In_Dummy16_g114321;
				Data16_g114321.PositionWS = In_PositionWS16_g114321;
				Data16_g114321.PositionWO = In_PositionWO16_g114321;
				Data16_g114321.PivotWS = In_PivotWS16_g114321;
				Data16_g114321.PivotWO = In_PivotWO16_g114321;
				Data16_g114321.NormalWS = In_NormalWS16_g114321;
				Data16_g114321.ViewDirWS = In_ViewDirWS16_g114321;
				Data16_g114321.VertexData = In_VertexData16_g114321;
				Data16_g114321.BoundsData = In_BoundsData16_g114321;
				TVEModelData Data15_g115994 = Data16_g114321;
				float Out_Dummy15_g115994 = 0;
				float3 Out_PositionWS15_g115994 = float3( 0,0,0 );
				float3 Out_PositionWO15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWS15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWO15_g115994 = float3( 0,0,0 );
				float3 Out_NormalWS15_g115994 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g115994 = float3( 0,0,0 );
				float4 Out_VertexData15_g115994 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g115994 = float4( 0,0,0,0 );
				Out_Dummy15_g115994 = Data15_g115994.Dummy;
				Out_PositionWS15_g115994 = Data15_g115994.PositionWS;
				Out_PositionWO15_g115994 = Data15_g115994.PositionWO;
				Out_PivotWS15_g115994 = Data15_g115994.PivotWS;
				Out_PivotWO15_g115994 = Data15_g115994.PivotWO;
				Out_NormalWS15_g115994 = Data15_g115994.NormalWS;
				Out_ViewDirWS15_g115994 = Data15_g115994.ViewDirWS;
				Out_VertexData15_g115994 = Data15_g115994.VertexData;
				Out_BoundsData15_g115994 = Data15_g115994.BoundsData;
				half3 Model_PositionWS143_g115912 = Out_PositionWS15_g115994;
				half3 Input_Position180_g115916 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115916 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_82_0_g115916 = temp_output_82_0_g115913;
				float2 temp_output_119_0_g115916 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_7_0_g115921 = 1.0;
				float temp_output_10_0_g115921 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115921 );
				float4 lerpResult131_g115916 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115916,temp_output_82_0_g115916), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115916,temp_output_82_0_g115916), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115916 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115921 ) / temp_output_10_0_g115921 ) ));
				float4 temp_output_17_0_g115915 = lerpResult131_g115916;
				float4 temp_output_3_0_g115915 = TVE_PaintParams;
				float4 ifLocalVar18_g115915 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115915 >= 0.5 )
				ifLocalVar18_g115915 = temp_output_17_0_g115915;
				else
				ifLocalVar18_g115915 = temp_output_3_0_g115915;
				float4 lerpResult22_g115915 = lerp( temp_output_3_0_g115915 , temp_output_17_0_g115915 , temp_output_19_0_g115915);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115915 = lerpResult22_g115915;
				#else
				float4 staticSwitch24_g115915 = ifLocalVar18_g115915;
				#endif
				half4 Paint_Params71_g115912 = staticSwitch24_g115915;
				float4 In_PaintParams204_g115912 = Paint_Params71_g115912;
				float temp_output_82_0_g115931 = _GlobalGlowLayerValue;
				float temp_output_19_0_g115933 = TVE_GlowLayers[(int)temp_output_82_0_g115931];
				half3 Input_Position180_g115934 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115934 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_82_0_g115934 = temp_output_82_0_g115931;
				float2 temp_output_119_0_g115934 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_7_0_g115939 = 1.0;
				float temp_output_10_0_g115939 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115939 );
				float4 lerpResult131_g115934 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115934,temp_output_82_0_g115934), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115934,temp_output_82_0_g115934), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115934 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115939 ) / temp_output_10_0_g115939 ) ));
				float4 temp_output_17_0_g115933 = lerpResult131_g115934;
				float4 temp_output_3_0_g115933 = TVE_GlowParams;
				float4 ifLocalVar18_g115933 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115933 >= 0.5 )
				ifLocalVar18_g115933 = temp_output_17_0_g115933;
				else
				ifLocalVar18_g115933 = temp_output_3_0_g115933;
				float4 lerpResult22_g115933 = lerp( temp_output_3_0_g115933 , temp_output_17_0_g115933 , temp_output_19_0_g115933);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115933 = lerpResult22_g115933;
				#else
				float4 staticSwitch24_g115933 = ifLocalVar18_g115933;
				#endif
				half4 Glow_Params248_g115912 = staticSwitch24_g115933;
				float4 In_GlowParams204_g115912 = Glow_Params248_g115912;
				float temp_output_132_0_g115976 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g115978 = TVE_AtmoLayers[(int)temp_output_132_0_g115976];
				half3 Input_Position180_g115979 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115979 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_82_0_g115979 = temp_output_132_0_g115976;
				float2 temp_output_119_0_g115979 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_7_0_g115984 = 1.0;
				float temp_output_10_0_g115984 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115984 );
				float4 lerpResult131_g115979 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115979,temp_output_82_0_g115979), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115979,temp_output_82_0_g115979), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115979 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115984 ) / temp_output_10_0_g115984 ) ));
				float4 temp_output_17_0_g115978 = lerpResult131_g115979;
				float4 temp_output_3_0_g115978 = TVE_AtmoParams;
				float4 ifLocalVar18_g115978 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115978 >= 0.5 )
				ifLocalVar18_g115978 = temp_output_17_0_g115978;
				else
				ifLocalVar18_g115978 = temp_output_3_0_g115978;
				float4 lerpResult22_g115978 = lerp( temp_output_3_0_g115978 , temp_output_17_0_g115978 , temp_output_19_0_g115978);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115978 = lerpResult22_g115978;
				#else
				float4 staticSwitch24_g115978 = ifLocalVar18_g115978;
				#endif
				half4 Atmo_Params80_g115912 = staticSwitch24_g115978;
				float4 In_AtmoParams204_g115912 = Atmo_Params80_g115912;
				float temp_output_132_0_g115985 = _GlobalFadeLayerValue;
				float temp_output_19_0_g115987 = TVE_FadeLayers[(int)temp_output_132_0_g115985];
				half3 Input_Position180_g115988 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115988 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_82_0_g115988 = temp_output_132_0_g115985;
				float2 temp_output_119_0_g115988 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_7_0_g115993 = 1.0;
				float temp_output_10_0_g115993 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115993 );
				float4 lerpResult131_g115988 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115988,temp_output_82_0_g115988), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115988,temp_output_82_0_g115988), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115988 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115993 ) / temp_output_10_0_g115993 ) ));
				float4 temp_output_17_0_g115987 = lerpResult131_g115988;
				float4 temp_output_3_0_g115987 = TVE_FadeParams;
				float4 ifLocalVar18_g115987 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115987 >= 0.5 )
				ifLocalVar18_g115987 = temp_output_17_0_g115987;
				else
				ifLocalVar18_g115987 = temp_output_3_0_g115987;
				float4 lerpResult22_g115987 = lerp( temp_output_3_0_g115987 , temp_output_17_0_g115987 , temp_output_19_0_g115987);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115987 = lerpResult22_g115987;
				#else
				float4 staticSwitch24_g115987 = ifLocalVar18_g115987;
				#endif
				half4 Fade_Params387_g115912 = staticSwitch24_g115987;
				float4 In_FadeParams204_g115912 = Fade_Params387_g115912;
				half4 Form_Params112_g115912 = TVE_FormParams;
				float4 In_FormParams204_g115912 = Form_Params112_g115912;
				float temp_output_130_0_g115949 = _GlobalLandLayerValue;
				float temp_output_19_0_g115951 = TVE_LandLayers[(int)temp_output_130_0_g115949];
				half3 Input_Position180_g115952 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115952 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_82_0_g115952 = temp_output_130_0_g115949;
				float2 temp_output_119_0_g115952 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_7_0_g115957 = 1.0;
				float temp_output_10_0_g115957 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115957 );
				float4 lerpResult131_g115952 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115952,temp_output_82_0_g115952), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115952,temp_output_82_0_g115952), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115952 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115957 ) / temp_output_10_0_g115957 ) ));
				float4 temp_output_17_0_g115951 = lerpResult131_g115952;
				float4 temp_output_3_0_g115951 = TVE_LandParams;
				float4 ifLocalVar18_g115951 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115951 >= 0.5 )
				ifLocalVar18_g115951 = temp_output_17_0_g115951;
				else
				ifLocalVar18_g115951 = temp_output_3_0_g115951;
				float4 lerpResult22_g115951 = lerp( temp_output_3_0_g115951 , temp_output_17_0_g115951 , temp_output_19_0_g115951);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115951 = lerpResult22_g115951;
				#else
				float4 staticSwitch24_g115951 = ifLocalVar18_g115951;
				#endif
				half4 Land_Params375_g115912 = staticSwitch24_g115951;
				float4 In_LandParams204_g115912 = Land_Params375_g115912;
				half4 Wind_Params88_g115912 = TVE_WindParams;
				float4 In_WindParams204_g115912 = Wind_Params88_g115912;
				half4 Push_Params335_g115912 = TVE_PushParams;
				float4 In_PushParams204_g115912 = Push_Params335_g115912;
				Data204_g115912.Dummy = In_Dummy204_g115912;
				Data204_g115912.CoatParams = In_CoatParams204_g115912;
				Data204_g115912.PaintParams = In_PaintParams204_g115912;
				Data204_g115912.GlowParams = In_GlowParams204_g115912;
				Data204_g115912.AtmoParams = In_AtmoParams204_g115912;
				Data204_g115912.FadeParams = In_FadeParams204_g115912;
				Data204_g115912.FormParams= In_FormParams204_g115912;
				Data204_g115912.LandParams = In_LandParams204_g115912;
				Data204_g115912.WindParams = In_WindParams204_g115912;
				Data204_g115912.PushParams = In_PushParams204_g115912;
				TVEGlobalData Data15_g116892 = Data204_g115912;
				float Out_Dummy15_g116892 = 0;
				float4 Out_CoatParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116892 = float4( 0,0,0,0 );
				Out_Dummy15_g116892 = Data15_g116892.Dummy;
				Out_CoatParams15_g116892 = Data15_g116892.CoatParams;
				Out_PaintParams15_g116892 = Data15_g116892.PaintParams;
				Out_GlowParams15_g116892 = Data15_g116892.GlowParams;
				Out_AtmoParams15_g116892= Data15_g116892.AtmoParams;
				Out_FadeParams15_g116892= Data15_g116892.FadeParams;
				Out_FormParams15_g116892 = Data15_g116892.FormParams;
				Out_LandParams15_g116892 = Data15_g116892.LandParams;
				Out_WindParams15_g116892 = Data15_g116892.WindParams;
				Out_PushParams15_g116892 = Data15_g116892.PushParams;
				half4 Global_PaintParams209_g116891 = Out_PaintParams15_g116892;
				float temp_output_6_0_g116893 = ( saturate( (Global_PaintParams209_g116891).w ) * TVE_IsEnabled );
				#ifdef TVE_REGISTER
				float staticSwitch14_g116893 = ( temp_output_6_0_g116893 + ( _TintingElementMode * 0.0 ) );
				#else
				float staticSwitch14_g116893 = temp_output_6_0_g116893;
				#endif
				#ifdef TVE_TINTING_ELEMENT
				float staticSwitch283_g116891 = staticSwitch14_g116893;
				#else
				float staticSwitch283_g116891 = 1.0;
				#endif
				half Tinting_GlobalValue285_g116891 = staticSwitch283_g116891;
				float3 lerpResult368_g116891 = lerp( Visual_Albedo139_g116891 , temp_cast_10 , ( Tinting_GlobalValue285_g116891 * _TintingGrayValue ));
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g116911 = 2.0;
				#else
				float staticSwitch1_g116911 = 4.594794;
				#endif
				float3 temp_cast_32 = (1.0).xxx;
				#ifdef TVE_TINTING_ELEMENT
				float3 staticSwitch288_g116891 = (Global_PaintParams209_g116891).xyz;
				#else
				float3 staticSwitch288_g116891 = temp_cast_32;
				#endif
				half3 Tinting_ColorGlobal290_g116891 = staticSwitch288_g116891;
				float temp_output_200_11_g116891 = Out_MultiMask4_g116913;
				half Visual_MultiMask181_g116891 = temp_output_200_11_g116891;
				float lerpResult147_g116891 = lerp( 1.0 , Visual_MultiMask181_g116891 , _TintingMultiValue);
				half Tinting_MutiMask121_g116891 = lerpResult147_g116891;
				half Tinting_TexMask385_g116891 = 1.0;
				float temp_output_200_15_g116891 = Out_Luminosity4_g116913;
				half Visual_Luminosity257_g116891 = temp_output_200_15_g116891;
				float clampResult17_g116905 = clamp( Visual_Luminosity257_g116891 , 0.0001 , 0.9999 );
				float temp_output_7_0_g116904 = _TintingLumaRemap.x;
				float temp_output_10_0_g116904 = ( _TintingLumaRemap.y - temp_output_7_0_g116904 );
				float lerpResult228_g116891 = lerp( 1.0 , saturate( ( ( clampResult17_g116905 - temp_output_7_0_g116904 ) / ( temp_output_10_0_g116904 + 0.0001 ) ) ) , _TintingLumaValue);
				half Tinting_LumaMask153_g116891 = lerpResult228_g116891;
				half Tinting_VertMask309_g116891 = 1.0;
				half Tinting_NoiseMask213_g116891 = 1.0;
				half Custom_Mask345_g116891 = 1.0;
				float temp_output_7_0_g116900 = _TintingBlendRemap.x;
				float temp_output_10_0_g116900 = ( _TintingBlendRemap.y - temp_output_7_0_g116900 );
				half Tinting_Mask242_g116891 = ( saturate( ( ( ( _TintingIntensityValue * Tinting_MutiMask121_g116891 * Tinting_TexMask385_g116891 * Tinting_LumaMask153_g116891 * Tinting_VertMask309_g116891 * Tinting_NoiseMask213_g116891 * Tinting_GlobalValue285_g116891 * Custom_Mask345_g116891 ) - temp_output_7_0_g116900 ) / ( temp_output_10_0_g116900 + 0.0001 ) ) ) * TVE_IsEnabled );
				float3 lerpResult90_g116891 = lerp( Visual_Albedo139_g116891 , ( lerpResult368_g116891 * staticSwitch1_g116911 * Tinting_ColorGlobal290_g116891 * (_TintingColor).rgb ) , Tinting_Mask242_g116891);
				#ifdef TVE_TINTING
				float3 staticSwitch286_g116891 = lerpResult90_g116891;
				#else
				float3 staticSwitch286_g116891 = Visual_Albedo139_g116891;
				#endif
				half3 Final_Albedo97_g116891 = staticSwitch286_g116891;
				float3 In_Albedo3_g116912 = Final_Albedo97_g116891;
				float3 In_AlbedoRaw3_g116912 = Out_AlbedoRaw4_g116913;
				float2 In_NormalTS3_g116912 = Out_NormalTS4_g116913;
				float3 In_NormalWS3_g116912 = Out_NormalWS4_g116913;
				float4 In_Shader3_g116912 = Out_Shader4_g116913;
				float4 In_Emissive3_g116912 = Out_Emissive4_g116913;
				float In_Grayscale3_g116912 = temp_output_200_12_g116891;
				float In_Luminosity3_g116912 = temp_output_200_15_g116891;
				float In_MultiMask3_g116912 = temp_output_200_11_g116891;
				float In_AlphaClip3_g116912 = Out_AlphaClip4_g116913;
				float In_AlphaFade3_g116912 = Out_AlphaFade4_g116913;
				float3 In_Translucency3_g116912 = Out_Translucency4_g116913;
				float In_Transmission3_g116912 = Out_Transmission4_g116913;
				float In_Thickness3_g116912 = Out_Thickness4_g116913;
				float In_Diffusion3_g116912 = Out_Diffusion4_g116913;
				Data3_g116912.Dummy = In_Dummy3_g116912;
				Data3_g116912.Albedo = In_Albedo3_g116912;
				Data3_g116912.AlbedoRaw = In_AlbedoRaw3_g116912;
				Data3_g116912.NormalTS = In_NormalTS3_g116912;
				Data3_g116912.NormalWS = In_NormalWS3_g116912;
				Data3_g116912.Shader = In_Shader3_g116912;
				Data3_g116912.Emissive= In_Emissive3_g116912;
				Data3_g116912.MultiMask = In_MultiMask3_g116912;
				Data3_g116912.Grayscale = In_Grayscale3_g116912;
				Data3_g116912.Luminosity = In_Luminosity3_g116912;
				Data3_g116912.AlphaClip = In_AlphaClip3_g116912;
				Data3_g116912.AlphaFade = In_AlphaFade3_g116912;
				Data3_g116912.Translucency = In_Translucency3_g116912;
				Data3_g116912.Transmission = In_Transmission3_g116912;
				Data3_g116912.Thickness = In_Thickness3_g116912;
				Data3_g116912.Diffusion = In_Diffusion3_g116912;
				TVEVisualData Data4_g116917 = Data3_g116912;
				float Out_Dummy4_g116917 = 0;
				float3 Out_Albedo4_g116917 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116917 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116917 = float2( 0,0 );
				float3 Out_NormalWS4_g116917 = float3( 0,0,0 );
				float4 Out_Shader4_g116917 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116917 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116917 = 0;
				float Out_Grayscale4_g116917 = 0;
				float Out_Luminosity4_g116917 = 0;
				float Out_AlphaClip4_g116917 = 0;
				float Out_AlphaFade4_g116917 = 0;
				float3 Out_Translucency4_g116917 = float3( 0,0,0 );
				float Out_Transmission4_g116917 = 0;
				float Out_Thickness4_g116917 = 0;
				float Out_Diffusion4_g116917 = 0;
				Out_Dummy4_g116917 = Data4_g116917.Dummy;
				Out_Albedo4_g116917 = Data4_g116917.Albedo;
				Out_AlbedoRaw4_g116917 = Data4_g116917.AlbedoRaw;
				Out_NormalTS4_g116917 = Data4_g116917.NormalTS;
				Out_NormalWS4_g116917 = Data4_g116917.NormalWS;
				Out_Shader4_g116917 = Data4_g116917.Shader;
				Out_Emissive4_g116917= Data4_g116917.Emissive;
				Out_MultiMask4_g116917 = Data4_g116917.MultiMask;
				Out_Grayscale4_g116917 = Data4_g116917.Grayscale;
				Out_Luminosity4_g116917= Data4_g116917.Luminosity;
				Out_AlphaClip4_g116917 = Data4_g116917.AlphaClip;
				Out_AlphaFade4_g116917 = Data4_g116917.AlphaFade;
				Out_Translucency4_g116917 = Data4_g116917.Translucency;
				Out_Transmission4_g116917 = Data4_g116917.Transmission;
				Out_Thickness4_g116917 = Data4_g116917.Thickness;
				Out_Diffusion4_g116917 = Data4_g116917.Diffusion;
				half3 Visual_Albedo292_g116915 = Out_Albedo4_g116917;
				float temp_output_280_12_g116915 = Out_Grayscale4_g116917;
				half Visual_Grayscale308_g116915 = temp_output_280_12_g116915;
				float3 temp_cast_33 = (Visual_Grayscale308_g116915).xxx;
				TVEGlobalData Data15_g116916 = Data204_g115912;
				float Out_Dummy15_g116916 = 0;
				float4 Out_CoatParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116916 = float4( 0,0,0,0 );
				Out_Dummy15_g116916 = Data15_g116916.Dummy;
				Out_CoatParams15_g116916 = Data15_g116916.CoatParams;
				Out_PaintParams15_g116916 = Data15_g116916.PaintParams;
				Out_GlowParams15_g116916 = Data15_g116916.GlowParams;
				Out_AtmoParams15_g116916= Data15_g116916.AtmoParams;
				Out_FadeParams15_g116916= Data15_g116916.FadeParams;
				Out_FormParams15_g116916 = Data15_g116916.FormParams;
				Out_LandParams15_g116916 = Data15_g116916.LandParams;
				Out_WindParams15_g116916 = Data15_g116916.WindParams;
				Out_PushParams15_g116916 = Data15_g116916.PushParams;
				half4 Global_AtmoParams314_g116915 = Out_AtmoParams15_g116916;
				#ifdef TVE_DRYNESS_ELEMENT
				float staticSwitch351_g116915 = ( (Global_AtmoParams314_g116915).x * TVE_IsEnabled );
				#else
				float staticSwitch351_g116915 = 1.0;
				#endif
				half Dryness_GlobalMask352_g116915 = staticSwitch351_g116915;
				float3 lerpResult485_g116915 = lerp( Visual_Albedo292_g116915 , temp_cast_33 , ( Dryness_GlobalMask352_g116915 * _DrynessGrayValue ));
				half3 hsvTorgb58_g116936 = RGBToHSV( lerpResult485_g116915 );
				half3 hsvTorgb61_g116936 = HSVToRGB( half3(( hsvTorgb58_g116936.x + _DrynessShiftValue ),hsvTorgb58_g116936.y,hsvTorgb58_g116936.z) );
				#ifdef TVE_DRYNESS_SHIFT
				float3 staticSwitch499_g116915 = hsvTorgb61_g116936;
				#else
				float3 staticSwitch499_g116915 = lerpResult485_g116915;
				#endif
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g116935 = 2.0;
				#else
				float staticSwitch1_g116935 = 4.594794;
				#endif
				half Dryness_TexMask478_g116915 = 1.0;
				float temp_output_280_11_g116915 = Out_MultiMask4_g116917;
				half Visual_MultiMask310_g116915 = temp_output_280_11_g116915;
				float lerpResult283_g116915 = lerp( 1.0 , Visual_MultiMask310_g116915 , _DrynessMultiValue);
				half Dryness_MultiMask302_g116915 = lerpResult283_g116915;
				float temp_output_280_15_g116915 = Out_Luminosity4_g116917;
				half Visual_Luminosity309_g116915 = temp_output_280_15_g116915;
				float clampResult17_g116931 = clamp( Visual_Luminosity309_g116915 , 0.0001 , 0.9999 );
				float temp_output_7_0_g116930 = _DrynessLumaRemap.x;
				float temp_output_10_0_g116930 = ( _DrynessLumaRemap.y - temp_output_7_0_g116930 );
				float lerpResult295_g116915 = lerp( 1.0 , saturate( ( ( clampResult17_g116931 - temp_output_7_0_g116930 ) / ( temp_output_10_0_g116930 + 0.0001 ) ) ) , _DrynessLumaValue);
				half Dryness_LumaMask301_g116915 = lerpResult295_g116915;
				half Dryness_VertMask378_g116915 = 1.0;
				half Dryness_MaskNoise291_g116915 = 1.0;
				half Custom_Mask411_g116915 = 1.0;
				float temp_output_7_0_g116929 = _DrynessBlendRemap.x;
				float temp_output_10_0_g116929 = ( _DrynessBlendRemap.y - temp_output_7_0_g116929 );
				half Dryness_Mask329_g116915 = saturate( ( ( ( _DrynessIntensityValue * Dryness_TexMask478_g116915 * Dryness_MultiMask302_g116915 * Dryness_LumaMask301_g116915 * Dryness_VertMask378_g116915 * Dryness_MaskNoise291_g116915 * Dryness_GlobalMask352_g116915 * Custom_Mask411_g116915 ) - temp_output_7_0_g116929 ) / ( temp_output_10_0_g116929 + 0.0001 ) ) );
				float3 lerpResult336_g116915 = lerp( Visual_Albedo292_g116915 , ( staticSwitch499_g116915 * staticSwitch1_g116935 * (_DrynessColor).rgb ) , Dryness_Mask329_g116915);
				#ifdef TVE_DRYNESS
				float3 staticSwitch356_g116915 = lerpResult336_g116915;
				#else
				float3 staticSwitch356_g116915 = Visual_Albedo292_g116915;
				#endif
				half3 Final_Albedo331_g116915 = staticSwitch356_g116915;
				float3 In_Albedo3_g116918 = Final_Albedo331_g116915;
				float3 In_AlbedoRaw3_g116918 = Out_AlbedoRaw4_g116917;
				float2 In_NormalTS3_g116918 = Out_NormalTS4_g116917;
				float3 In_NormalWS3_g116918 = Out_NormalWS4_g116917;
				half4 Visual_Shader415_g116915 = Out_Shader4_g116917;
				float4 break438_g116915 = Visual_Shader415_g116915;
				float4 appendResult439_g116915 = (float4(break438_g116915.x , break438_g116915.y , break438_g116915.z , ( break438_g116915.w * _DrynessSmoothnessValue )));
				float4 lerpResult427_g116915 = lerp( Visual_Shader415_g116915 , appendResult439_g116915 , Dryness_Mask329_g116915);
				#ifdef TVE_DRYNESS
				float4 staticSwitch426_g116915 = lerpResult427_g116915;
				#else
				float4 staticSwitch426_g116915 = Visual_Shader415_g116915;
				#endif
				half4 Final_Shader433_g116915 = staticSwitch426_g116915;
				float4 In_Shader3_g116918 = Final_Shader433_g116915;
				float4 In_Emissive3_g116918 = Out_Emissive4_g116917;
				float In_Grayscale3_g116918 = temp_output_280_12_g116915;
				float In_Luminosity3_g116918 = temp_output_280_15_g116915;
				float In_MultiMask3_g116918 = temp_output_280_11_g116915;
				float In_AlphaClip3_g116918 = Out_AlphaClip4_g116917;
				float In_AlphaFade3_g116918 = Out_AlphaFade4_g116917;
				float3 In_Translucency3_g116918 = Out_Translucency4_g116917;
				half Visual_Transmission416_g116915 = Out_Transmission4_g116917;
				float lerpResult421_g116915 = lerp( Visual_Transmission416_g116915 , ( Visual_Transmission416_g116915 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g116915);
				#ifdef TVE_DRYNESS
				float staticSwitch418_g116915 = lerpResult421_g116915;
				#else
				float staticSwitch418_g116915 = Visual_Transmission416_g116915;
				#endif
				half Final_Transmission425_g116915 = staticSwitch418_g116915;
				float In_Transmission3_g116918 = Final_Transmission425_g116915;
				float In_Thickness3_g116918 = Out_Thickness4_g116917;
				float In_Diffusion3_g116918 = Out_Diffusion4_g116917;
				Data3_g116918.Dummy = In_Dummy3_g116918;
				Data3_g116918.Albedo = In_Albedo3_g116918;
				Data3_g116918.AlbedoRaw = In_AlbedoRaw3_g116918;
				Data3_g116918.NormalTS = In_NormalTS3_g116918;
				Data3_g116918.NormalWS = In_NormalWS3_g116918;
				Data3_g116918.Shader = In_Shader3_g116918;
				Data3_g116918.Emissive= In_Emissive3_g116918;
				Data3_g116918.MultiMask = In_MultiMask3_g116918;
				Data3_g116918.Grayscale = In_Grayscale3_g116918;
				Data3_g116918.Luminosity = In_Luminosity3_g116918;
				Data3_g116918.AlphaClip = In_AlphaClip3_g116918;
				Data3_g116918.AlphaFade = In_AlphaFade3_g116918;
				Data3_g116918.Translucency = In_Translucency3_g116918;
				Data3_g116918.Transmission = In_Transmission3_g116918;
				Data3_g116918.Thickness = In_Thickness3_g116918;
				Data3_g116918.Diffusion = In_Diffusion3_g116918;
				TVEVisualData Data4_g116939 = Data3_g116918;
				float Out_Dummy4_g116939 = 0;
				float3 Out_Albedo4_g116939 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116939 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116939 = float2( 0,0 );
				float3 Out_NormalWS4_g116939 = float3( 0,0,0 );
				float4 Out_Shader4_g116939 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116939 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116939 = 0;
				float Out_Grayscale4_g116939 = 0;
				float Out_Luminosity4_g116939 = 0;
				float Out_AlphaClip4_g116939 = 0;
				float Out_AlphaFade4_g116939 = 0;
				float3 Out_Translucency4_g116939 = float3( 0,0,0 );
				float Out_Transmission4_g116939 = 0;
				float Out_Thickness4_g116939 = 0;
				float Out_Diffusion4_g116939 = 0;
				Out_Dummy4_g116939 = Data4_g116939.Dummy;
				Out_Albedo4_g116939 = Data4_g116939.Albedo;
				Out_AlbedoRaw4_g116939 = Data4_g116939.AlbedoRaw;
				Out_NormalTS4_g116939 = Data4_g116939.NormalTS;
				Out_NormalWS4_g116939 = Data4_g116939.NormalWS;
				Out_Shader4_g116939 = Data4_g116939.Shader;
				Out_Emissive4_g116939= Data4_g116939.Emissive;
				Out_MultiMask4_g116939 = Data4_g116939.MultiMask;
				Out_Grayscale4_g116939 = Data4_g116939.Grayscale;
				Out_Luminosity4_g116939= Data4_g116939.Luminosity;
				Out_AlphaClip4_g116939 = Data4_g116939.AlphaClip;
				Out_AlphaFade4_g116939 = Data4_g116939.AlphaFade;
				Out_Translucency4_g116939 = Data4_g116939.Translucency;
				Out_Transmission4_g116939 = Data4_g116939.Transmission;
				Out_Thickness4_g116939 = Data4_g116939.Thickness;
				Out_Diffusion4_g116939 = Data4_g116939.Diffusion;
				half3 Visual_Albedo127_g116938 = Out_Albedo4_g116939;
				float3 temp_output_622_0_g116938 = (_OverlayColor).rgb;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116942) = _OverlayAlbedoTex;
				float localFilterTexture19_g116971 = ( 0.0 );
				SamplerState SamplerDefault19_g116971 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g116971 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g116971 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g116971 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g116971 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g116971 = SamplerDefault19_g116971;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g116971 = SamplerDefault19_g116971;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g116971 = SamplerPoint19_g116971;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g116971 = SamplerLow19_g116971;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g116971 = SamplerMedium19_g116971;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g116971 = SamplerHigh19_g116971;
				#endif
				SamplerState Sampler238_g116942 = SS19_g116971;
				float4 temp_output_6_0_g116943 = _overlay_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g116943 = ( temp_output_6_0_g116943 + ( ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g116943 = temp_output_6_0_g116943;
				#endif
				half4 Overlay_Coords639_g116938 = staticSwitch14_g116943;
				float4 temp_output_37_0_g116942 = Overlay_Coords639_g116938;
				half4 Coords238_g116942 = temp_output_37_0_g116942;
				TVEModelData Data15_g116973 = Data16_g114321;
				float Out_Dummy15_g116973 = 0;
				float3 Out_PositionWS15_g116973 = float3( 0,0,0 );
				float3 Out_PositionWO15_g116973 = float3( 0,0,0 );
				float3 Out_PivotWS15_g116973 = float3( 0,0,0 );
				float3 Out_PivotWO15_g116973 = float3( 0,0,0 );
				float3 Out_NormalWS15_g116973 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g116973 = float3( 0,0,0 );
				float4 Out_VertexData15_g116973 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g116973 = float4( 0,0,0,0 );
				Out_Dummy15_g116973 = Data15_g116973.Dummy;
				Out_PositionWS15_g116973 = Data15_g116973.PositionWS;
				Out_PositionWO15_g116973 = Data15_g116973.PositionWO;
				Out_PivotWS15_g116973 = Data15_g116973.PivotWS;
				Out_PivotWO15_g116973 = Data15_g116973.PivotWO;
				Out_NormalWS15_g116973 = Data15_g116973.NormalWS;
				Out_ViewDirWS15_g116973 = Data15_g116973.ViewDirWS;
				Out_VertexData15_g116973 = Data15_g116973.VertexData;
				Out_BoundsData15_g116973 = Data15_g116973.BoundsData;
				half3 Model_PositionWO602_g116938 = Out_PositionWO15_g116973;
				float3 temp_output_279_0_g116942 = Model_PositionWO602_g116938;
				half3 WorldPosition238_g116942 = temp_output_279_0_g116942;
				half4 localSamplePlanar2D238_g116942 = SamplePlanar2D( Texture238_g116942 , Sampler238_g116942 , Coords238_g116942 , WorldPosition238_g116942 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116942) = _OverlayAlbedoTex;
				SamplerState Sampler246_g116942 = SS19_g116971;
				half4 Coords246_g116942 = temp_output_37_0_g116942;
				half3 WorldPosition246_g116942 = temp_output_279_0_g116942;
				half3 Model_NormalWS712_g116938 = Out_NormalWS15_g116973;
				float3 temp_output_280_0_g116942 = Model_NormalWS712_g116938;
				half3 WorldNormal246_g116942 = temp_output_280_0_g116942;
				half4 localSamplePlanar3D246_g116942 = SamplePlanar3D( Texture246_g116942 , Sampler246_g116942 , Coords246_g116942 , WorldPosition246_g116942 , WorldNormal246_g116942 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116942) = _OverlayAlbedoTex;
				SamplerState Sampler234_g116942 = SS19_g116971;
				float4 Coords234_g116942 = temp_output_37_0_g116942;
				float3 WorldPosition234_g116942 = temp_output_279_0_g116942;
				float4 localSampleStochastic2D234_g116942 = SampleStochastic2D( Texture234_g116942 , Sampler234_g116942 , Coords234_g116942 , WorldPosition234_g116942 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116942) = _OverlayAlbedoTex;
				SamplerState Sampler263_g116942 = SS19_g116971;
				half4 Coords263_g116942 = temp_output_37_0_g116942;
				half3 WorldPosition263_g116942 = temp_output_279_0_g116942;
				half3 WorldNormal263_g116942 = temp_output_280_0_g116942;
				half4 localSampleStochastic3D263_g116942 = SampleStochastic3D( Texture263_g116942 , Sampler263_g116942 , Coords263_g116942 , WorldPosition263_g116942 , WorldNormal263_g116942 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch676_g116938 = localSamplePlanar2D238_g116942;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch676_g116938 = localSamplePlanar3D246_g116942;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch676_g116938 = localSampleStochastic2D234_g116942;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch676_g116938 = localSampleStochastic3D263_g116942;
				#else
				float4 staticSwitch676_g116938 = localSamplePlanar2D238_g116942;
				#endif
				half3 Overlay_Albedo526_g116938 = (staticSwitch676_g116938).xyz;
				#ifdef TVE_OVERLAY_TEX
				float3 staticSwitch578_g116938 = ( temp_output_622_0_g116938 * Overlay_Albedo526_g116938 );
				#else
				float3 staticSwitch578_g116938 = temp_output_622_0_g116938;
				#endif
				float3 temp_output_6_0_g116949 = staticSwitch578_g116938;
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g116949 = ( temp_output_6_0_g116949 + ( _OverlayTextureMode * 0.0 ) );
				#else
				float3 staticSwitch14_g116949 = temp_output_6_0_g116949;
				#endif
				float3 temp_cast_34 = (0.0).xxx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116946) = _OverlayGlitterTexRT;
				SamplerState Sampler246_g116946 = sampler_Linear_Repeat;
				float4 appendResult863_g116938 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g116946 = appendResult863_g116938;
				half4 Coords246_g116946 = temp_output_37_0_g116946;
				float3 temp_output_279_0_g116946 = Model_PositionWO602_g116938;
				half3 WorldPosition246_g116946 = temp_output_279_0_g116946;
				float3 temp_output_280_0_g116946 = Model_NormalWS712_g116938;
				half3 WorldNormal246_g116946 = temp_output_280_0_g116946;
				half4 localSamplePlanar3D246_g116946 = SamplePlanar3D( Texture246_g116946 , Sampler246_g116946 , Coords246_g116946 , WorldPosition246_g116946 , WorldNormal246_g116946 );
				half Overlay_GlitterTex854_g116938 = (localSamplePlanar3D246_g116946).x;
				half3 Model_PositionWS879_g116938 = Out_PositionWS15_g116973;
				#ifdef TVE_OVERLAY_GLITTER
				float3 staticSwitch868_g116938 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g116938 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g116938 ) / _OverlayGlitterDistValue ) ) ) );
				#else
				float3 staticSwitch868_g116938 = temp_cast_34;
				#endif
				half3 Overlay_GlitterColor865_g116938 = staticSwitch868_g116938;
				half Overlay_TexMask908_g116938 = 1.0;
				float3 temp_output_739_21_g116938 = Out_NormalWS4_g116939;
				half3 Visual_NormalWS749_g116938 = temp_output_739_21_g116938;
				float clampResult17_g116959 = clamp( saturate( (Visual_NormalWS749_g116938).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g116958 = _OverlayProjRemap.x;
				float temp_output_10_0_g116958 = ( _OverlayProjRemap.y - temp_output_7_0_g116958 );
				float lerpResult842_g116938 = lerp( 1.0 , saturate( ( ( clampResult17_g116959 - temp_output_7_0_g116958 ) / ( temp_output_10_0_g116958 + 0.0001 ) ) ) , _OverlayProjValue);
				half Overlay_MaskProj457_g116938 = lerpResult842_g116938;
				float temp_output_739_15_g116938 = Out_Luminosity4_g116939;
				half Visual_Luminosity654_g116938 = temp_output_739_15_g116938;
				float clampResult17_g116961 = clamp( Visual_Luminosity654_g116938 , 0.0001 , 0.9999 );
				float temp_output_7_0_g116960 = _OverlayLumaRemap.x;
				float temp_output_10_0_g116960 = ( _OverlayLumaRemap.y - temp_output_7_0_g116960 );
				float lerpResult587_g116938 = lerp( 1.0 , saturate( ( ( clampResult17_g116961 - temp_output_7_0_g116960 ) / ( temp_output_10_0_g116960 + 0.0001 ) ) ) , _OverlayLumaValue);
				half Overlay_MaskLuma438_g116938 = lerpResult587_g116938;
				half Overlay_VertMask801_g116938 = 1.0;
				half Overlay_MaskNoise427_g116938 = 1.0;
				TVEGlobalData Data15_g116940 = Data204_g115912;
				float Out_Dummy15_g116940 = 0;
				float4 Out_CoatParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116940 = float4( 0,0,0,0 );
				Out_Dummy15_g116940 = Data15_g116940.Dummy;
				Out_CoatParams15_g116940 = Data15_g116940.CoatParams;
				Out_PaintParams15_g116940 = Data15_g116940.PaintParams;
				Out_GlowParams15_g116940 = Data15_g116940.GlowParams;
				Out_AtmoParams15_g116940= Data15_g116940.AtmoParams;
				Out_FadeParams15_g116940= Data15_g116940.FadeParams;
				Out_FormParams15_g116940 = Data15_g116940.FormParams;
				Out_LandParams15_g116940 = Data15_g116940.LandParams;
				Out_WindParams15_g116940 = Data15_g116940.WindParams;
				Out_PushParams15_g116940 = Data15_g116940.PushParams;
				half4 Global_AtmoParams516_g116938 = Out_AtmoParams15_g116940;
				#ifdef TVE_OVERLAY_ELEMENT
				float staticSwitch705_g116938 = ( (Global_AtmoParams516_g116938).z * TVE_IsEnabled );
				#else
				float staticSwitch705_g116938 = 1.0;
				#endif
				half Overlay_MaskGlobal429_g116938 = staticSwitch705_g116938;
				half Custom_Mask646_g116938 = 1.0;
				float temp_output_7_0_g116967 = _OverlayBlendRemap1.x;
				float temp_output_10_0_g116967 = ( _OverlayBlendRemap1.y - temp_output_7_0_g116967 );
				half Overlay_Mask494_g116938 = saturate( ( ( ( _OverlayIntensityValue * Overlay_TexMask908_g116938 * Overlay_MaskProj457_g116938 * Overlay_MaskLuma438_g116938 * Overlay_VertMask801_g116938 * Overlay_MaskNoise427_g116938 * Overlay_MaskGlobal429_g116938 * Custom_Mask646_g116938 ) - temp_output_7_0_g116967 ) / ( temp_output_10_0_g116967 + 0.0001 ) ) );
				float3 lerpResult467_g116938 = lerp( Visual_Albedo127_g116938 , ( staticSwitch14_g116949 + Overlay_GlitterColor865_g116938 ) , Overlay_Mask494_g116938);
				#ifdef TVE_OVERLAY
				float3 staticSwitch577_g116938 = lerpResult467_g116938;
				#else
				float3 staticSwitch577_g116938 = Visual_Albedo127_g116938;
				#endif
				half3 Final_Albedo493_g116938 = staticSwitch577_g116938;
				float3 In_Albedo3_g116941 = Final_Albedo493_g116938;
				float3 In_AlbedoRaw3_g116941 = Out_AlbedoRaw4_g116939;
				half2 Visual_NormalTS535_g116938 = Out_NormalTS4_g116939;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116944) = _OverlayNormalTex;
				float localFilterTexture29_g116972 = ( 0.0 );
				SamplerState SamplerDefault29_g116972 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g116972 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g116972 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g116972 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g116972 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g116972 = SamplerDefault29_g116972;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g116972 = SamplerDefault29_g116972;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g116972 = SamplerPoint29_g116972;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g116972 = SamplerLow29_g116972;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g116972 = SamplerMedium29_g116972;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g116972 = SamplerHigh29_g116972;
				#endif
				SamplerState Sampler238_g116944 = SS29_g116972;
				float4 temp_output_37_0_g116944 = Overlay_Coords639_g116938;
				half4 Coords238_g116944 = temp_output_37_0_g116944;
				float3 temp_output_279_0_g116944 = Model_PositionWO602_g116938;
				half3 WorldPosition238_g116944 = temp_output_279_0_g116944;
				half4 localSamplePlanar2D238_g116944 = SamplePlanar2D( Texture238_g116944 , Sampler238_g116944 , Coords238_g116944 , WorldPosition238_g116944 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116944) = _OverlayNormalTex;
				SamplerState Sampler246_g116944 = SS29_g116972;
				half4 Coords246_g116944 = temp_output_37_0_g116944;
				half3 WorldPosition246_g116944 = temp_output_279_0_g116944;
				float3 temp_output_280_0_g116944 = Model_NormalWS712_g116938;
				half3 WorldNormal246_g116944 = temp_output_280_0_g116944;
				half4 localSamplePlanar3D246_g116944 = SamplePlanar3D( Texture246_g116944 , Sampler246_g116944 , Coords246_g116944 , WorldPosition246_g116944 , WorldNormal246_g116944 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116944) = _OverlayNormalTex;
				SamplerState Sampler234_g116944 = SS29_g116972;
				float4 Coords234_g116944 = temp_output_37_0_g116944;
				float3 WorldPosition234_g116944 = temp_output_279_0_g116944;
				float4 localSampleStochastic2D234_g116944 = SampleStochastic2D( Texture234_g116944 , Sampler234_g116944 , Coords234_g116944 , WorldPosition234_g116944 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116944) = _OverlayNormalTex;
				SamplerState Sampler263_g116944 = SS29_g116972;
				half4 Coords263_g116944 = temp_output_37_0_g116944;
				half3 WorldPosition263_g116944 = temp_output_279_0_g116944;
				half3 WorldNormal263_g116944 = temp_output_280_0_g116944;
				half4 localSampleStochastic3D263_g116944 = SampleStochastic3D( Texture263_g116944 , Sampler263_g116944 , Coords263_g116944 , WorldPosition263_g116944 , WorldNormal263_g116944 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch686_g116938 = localSamplePlanar2D238_g116944;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch686_g116938 = localSamplePlanar3D246_g116944;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch686_g116938 = localSampleStochastic2D234_g116944;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch686_g116938 = localSampleStochastic3D263_g116944;
				#else
				float4 staticSwitch686_g116938 = localSamplePlanar2D238_g116944;
				#endif
				half4 Normal_Packed45_g116948 = staticSwitch686_g116938;
				float2 appendResult58_g116948 = (float2(( (Normal_Packed45_g116948).x * (Normal_Packed45_g116948).w ) , (Normal_Packed45_g116948).y));
				half2 Normal_Default50_g116948 = appendResult58_g116948;
				half2 Normal_ASTC41_g116948 = (Normal_Packed45_g116948).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g116948 = Normal_ASTC41_g116948;
				#else
				float2 staticSwitch38_g116948 = Normal_Default50_g116948;
				#endif
				half2 Normal_NO_DTX544_g116948 = (Normal_Packed45_g116948).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g116948 = Normal_NO_DTX544_g116948;
				#else
				float2 staticSwitch37_g116948 = staticSwitch38_g116948;
				#endif
				half2 Normal_Planar45_g116947 = (staticSwitch37_g116948*2.0 + -1.0);
				float2 break71_g116947 = Normal_Planar45_g116947;
				float3 appendResult72_g116947 = (float3(break71_g116947.x , 0.0 , break71_g116947.y));
				half2 Overlay_Normal528_g116938 = (mul( ase_worldToTangent, appendResult72_g116947 )).xy;
				#ifdef TVE_OVERLAY_TEX
				float2 staticSwitch579_g116938 = Overlay_Normal528_g116938;
				#else
				float2 staticSwitch579_g116938 = Visual_NormalTS535_g116938;
				#endif
				float2 lerpResult551_g116938 = lerp( Visual_NormalTS535_g116938 , ( staticSwitch579_g116938 * _OverlayNormalValue ) , Overlay_Mask494_g116938);
				#ifdef TVE_OVERLAY
				float2 staticSwitch583_g116938 = lerpResult551_g116938;
				#else
				float2 staticSwitch583_g116938 = Visual_NormalTS535_g116938;
				#endif
				half2 Final_NormalTS499_g116938 = staticSwitch583_g116938;
				float2 In_NormalTS3_g116941 = Final_NormalTS499_g116938;
				float3 In_NormalWS3_g116941 = temp_output_739_21_g116938;
				half4 Visual_Masks536_g116938 = Out_Shader4_g116939;
				float4 appendResult585_g116938 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
				float4 lerpResult584_g116938 = lerp( Visual_Masks536_g116938 , appendResult585_g116938 , Overlay_Mask494_g116938);
				#ifdef TVE_OVERLAY
				float4 staticSwitch586_g116938 = lerpResult584_g116938;
				#else
				float4 staticSwitch586_g116938 = Visual_Masks536_g116938;
				#endif
				half4 Final_Masks482_g116938 = staticSwitch586_g116938;
				float4 In_Shader3_g116941 = Final_Masks482_g116938;
				float4 In_Emissive3_g116941 = Out_Emissive4_g116939;
				float temp_output_739_12_g116938 = Out_Grayscale4_g116939;
				float In_Grayscale3_g116941 = temp_output_739_12_g116938;
				float In_Luminosity3_g116941 = temp_output_739_15_g116938;
				float In_MultiMask3_g116941 = Out_MultiMask4_g116939;
				float In_AlphaClip3_g116941 = Out_AlphaClip4_g116939;
				float In_AlphaFade3_g116941 = Out_AlphaFade4_g116939;
				float3 In_Translucency3_g116941 = Out_Translucency4_g116939;
				half Visual_Transmission699_g116938 = Out_Transmission4_g116939;
				float lerpResult746_g116938 = lerp( Visual_Transmission699_g116938 , ( Visual_Transmission699_g116938 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g116938 * Overlay_MaskNoise427_g116938 * Overlay_MaskGlobal429_g116938 ));
				#ifdef TVE_OVERLAY
				float staticSwitch703_g116938 = lerpResult746_g116938;
				#else
				float staticSwitch703_g116938 = Visual_Transmission699_g116938;
				#endif
				half Final_Transmission702_g116938 = staticSwitch703_g116938;
				float In_Transmission3_g116941 = Final_Transmission702_g116938;
				float In_Thickness3_g116941 = Out_Thickness4_g116939;
				float In_Diffusion3_g116941 = Out_Diffusion4_g116939;
				Data3_g116941.Dummy = In_Dummy3_g116941;
				Data3_g116941.Albedo = In_Albedo3_g116941;
				Data3_g116941.AlbedoRaw = In_AlbedoRaw3_g116941;
				Data3_g116941.NormalTS = In_NormalTS3_g116941;
				Data3_g116941.NormalWS = In_NormalWS3_g116941;
				Data3_g116941.Shader = In_Shader3_g116941;
				Data3_g116941.Emissive= In_Emissive3_g116941;
				Data3_g116941.MultiMask = In_MultiMask3_g116941;
				Data3_g116941.Grayscale = In_Grayscale3_g116941;
				Data3_g116941.Luminosity = In_Luminosity3_g116941;
				Data3_g116941.AlphaClip = In_AlphaClip3_g116941;
				Data3_g116941.AlphaFade = In_AlphaFade3_g116941;
				Data3_g116941.Translucency = In_Translucency3_g116941;
				Data3_g116941.Transmission = In_Transmission3_g116941;
				Data3_g116941.Thickness = In_Thickness3_g116941;
				Data3_g116941.Diffusion = In_Diffusion3_g116941;
				TVEVisualData Data4_g116975 = Data3_g116941;
				float Out_Dummy4_g116975 = 0;
				float3 Out_Albedo4_g116975 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116975 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116975 = float2( 0,0 );
				float3 Out_NormalWS4_g116975 = float3( 0,0,0 );
				float4 Out_Shader4_g116975 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116975 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116975 = 0;
				float Out_Grayscale4_g116975 = 0;
				float Out_Luminosity4_g116975 = 0;
				float Out_AlphaClip4_g116975 = 0;
				float Out_AlphaFade4_g116975 = 0;
				float3 Out_Translucency4_g116975 = float3( 0,0,0 );
				float Out_Transmission4_g116975 = 0;
				float Out_Thickness4_g116975 = 0;
				float Out_Diffusion4_g116975 = 0;
				Out_Dummy4_g116975 = Data4_g116975.Dummy;
				Out_Albedo4_g116975 = Data4_g116975.Albedo;
				Out_AlbedoRaw4_g116975 = Data4_g116975.AlbedoRaw;
				Out_NormalTS4_g116975 = Data4_g116975.NormalTS;
				Out_NormalWS4_g116975 = Data4_g116975.NormalWS;
				Out_Shader4_g116975 = Data4_g116975.Shader;
				Out_Emissive4_g116975= Data4_g116975.Emissive;
				Out_MultiMask4_g116975 = Data4_g116975.MultiMask;
				Out_Grayscale4_g116975 = Data4_g116975.Grayscale;
				Out_Luminosity4_g116975= Data4_g116975.Luminosity;
				Out_AlphaClip4_g116975 = Data4_g116975.AlphaClip;
				Out_AlphaFade4_g116975 = Data4_g116975.AlphaFade;
				Out_Translucency4_g116975 = Data4_g116975.Translucency;
				Out_Transmission4_g116975 = Data4_g116975.Transmission;
				Out_Thickness4_g116975 = Data4_g116975.Thickness;
				Out_Diffusion4_g116975 = Data4_g116975.Diffusion;
				half3 Visual_Albedo127_g116974 = Out_Albedo4_g116975;
				TVEGlobalData Data15_g116980 = Data204_g115912;
				float Out_Dummy15_g116980 = 0;
				float4 Out_CoatParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116980 = float4( 0,0,0,0 );
				Out_Dummy15_g116980 = Data15_g116980.Dummy;
				Out_CoatParams15_g116980 = Data15_g116980.CoatParams;
				Out_PaintParams15_g116980 = Data15_g116980.PaintParams;
				Out_GlowParams15_g116980 = Data15_g116980.GlowParams;
				Out_AtmoParams15_g116980= Data15_g116980.AtmoParams;
				Out_FadeParams15_g116980= Data15_g116980.FadeParams;
				Out_FormParams15_g116980 = Data15_g116980.FormParams;
				Out_LandParams15_g116980 = Data15_g116980.LandParams;
				Out_WindParams15_g116980 = Data15_g116980.WindParams;
				Out_PushParams15_g116980 = Data15_g116980.PushParams;
				half4 Global_AtmoParams516_g116974 = Out_AtmoParams15_g116980;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch663_g116974 = ( (Global_AtmoParams516_g116974).y * TVE_IsEnabled );
				#else
				float staticSwitch663_g116974 = 1.0;
				#endif
				half Global_Wetness429_g116974 = staticSwitch663_g116974;
				half Wetness_Value1042_g116974 = ( _WetnessIntensityValue * Global_Wetness429_g116974 );
				half Wetness_VertMask1024_g116974 = 1.0;
				float temp_output_1043_0_g116974 = ( Wetness_Value1042_g116974 * Wetness_VertMask1024_g116974 );
				half Wetness_Mask866_g116974 = temp_output_1043_0_g116974;
				half Water_VertMask1094_g116974 = 1.0;
				half4 Visual_Masks536_g116974 = Out_Shader4_g116975;
				float lerpResult1013_g116974 = lerp( 1.0 , (Visual_Masks536_g116974).z , _WetnessWaterBaseValue);
				half Water_HeightMask782_g116974 = lerpResult1013_g116974;
				float clampResult17_g116989 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g116974 * Water_VertMask1094_g116974 ) - Water_HeightMask782_g116974 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g116990 = _WetnessWaterBlendRemap.x;
				float temp_output_10_0_g116990 = ( _WetnessWaterBlendRemap.y - temp_output_7_0_g116990 );
				TVEModelData Data15_g116988 = Data16_g114321;
				float Out_Dummy15_g116988 = 0;
				float3 Out_PositionWS15_g116988 = float3( 0,0,0 );
				float3 Out_PositionWO15_g116988 = float3( 0,0,0 );
				float3 Out_PivotWS15_g116988 = float3( 0,0,0 );
				float3 Out_PivotWO15_g116988 = float3( 0,0,0 );
				float3 Out_NormalWS15_g116988 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g116988 = float3( 0,0,0 );
				float4 Out_VertexData15_g116988 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g116988 = float4( 0,0,0,0 );
				Out_Dummy15_g116988 = Data15_g116988.Dummy;
				Out_PositionWS15_g116988 = Data15_g116988.PositionWS;
				Out_PositionWO15_g116988 = Data15_g116988.PositionWO;
				Out_PivotWS15_g116988 = Data15_g116988.PivotWS;
				Out_PivotWO15_g116988 = Data15_g116988.PivotWO;
				Out_NormalWS15_g116988 = Data15_g116988.NormalWS;
				Out_ViewDirWS15_g116988 = Data15_g116988.ViewDirWS;
				Out_VertexData15_g116988 = Data15_g116988.VertexData;
				Out_BoundsData15_g116988 = Data15_g116988.BoundsData;
				half3 Model_NormalWS798_g116974 = Out_NormalWS15_g116988;
				float temp_output_786_0_g116974 = saturate( (Model_NormalWS798_g116974).y );
				half Wetness_ProjMask790_g116974 = temp_output_786_0_g116974;
				half Water_Mask760_g116974 = ( saturate( ( ( clampResult17_g116989 - temp_output_7_0_g116990 ) / ( temp_output_10_0_g116990 + 0.0001 ) ) ) * Wetness_ProjMask790_g116974 );
				float3 lerpResult918_g116974 = lerp( Visual_Albedo127_g116974 , ( Visual_Albedo127_g116974 * (_WetnessWaterColor).rgb ) , Water_Mask760_g116974);
				#ifdef TVE_WETNESS_WATER
				float3 staticSwitch946_g116974 = lerpResult918_g116974;
				#else
				float3 staticSwitch946_g116974 = Visual_Albedo127_g116974;
				#endif
				float3 lerpResult768_g116974 = lerp( staticSwitch946_g116974 , ( staticSwitch946_g116974 * staticSwitch946_g116974 ) , _WetnessContrastValue);
				float3 lerpResult651_g116974 = lerp( Visual_Albedo127_g116974 , lerpResult768_g116974 , Wetness_Mask866_g116974);
				#ifdef TVE_WETNESS
				float3 staticSwitch577_g116974 = lerpResult651_g116974;
				#else
				float3 staticSwitch577_g116974 = Visual_Albedo127_g116974;
				#endif
				half3 Final_Albedo493_g116974 = staticSwitch577_g116974;
				float3 In_Albedo3_g116976 = Final_Albedo493_g116974;
				float3 In_AlbedoRaw3_g116976 = Out_AlbedoRaw4_g116975;
				half2 Visual_Normal535_g116974 = Out_NormalTS4_g116975;
				float lerpResult877_g116974 = lerp( 1.0 , 0.0 , ( Water_Mask760_g116974 * Water_Mask760_g116974 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch957_g116974 = ( Visual_Normal535_g116974 * lerpResult877_g116974 );
				#else
				float2 staticSwitch957_g116974 = Visual_Normal535_g116974;
				#endif
				float2 temp_cast_35 = (0.0).xx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116986) = _WetnessDropsTexRT;
				SamplerState Sampler238_g116986 = sampler_Linear_Repeat_Aniso8;
				float4 appendResult924_g116974 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g116986 = appendResult924_g116974;
				half4 Coords238_g116986 = temp_output_37_0_g116986;
				half3 Model_PositionWO602_g116974 = Out_PositionWO15_g116988;
				float3 temp_output_279_0_g116986 = Model_PositionWO602_g116974;
				half3 WorldPosition238_g116986 = temp_output_279_0_g116986;
				half4 localSamplePlanar2D238_g116986 = SamplePlanar2D( Texture238_g116986 , Sampler238_g116986 , Coords238_g116986 , WorldPosition238_g116986 );
				float4 temp_output_1010_0_g116974 = localSamplePlanar2D238_g116986;
				half2 Rain_DropsNormal919_g116974 = (temp_output_1010_0_g116974).zw;
				float2 temp_output_903_0_g116974 = (Rain_DropsNormal919_g116974*2.0 + -1.0);
				half2 Rain_RingsNormal713_g116974 = (temp_output_1010_0_g116974).xy;
				float2 lerpResult904_g116974 = lerp( temp_output_903_0_g116974 , (Rain_RingsNormal713_g116974*2.0 + -1.0) , ( Water_Mask760_g116974 * Water_Mask760_g116974 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch960_g116974 = lerpResult904_g116974;
				#else
				float2 staticSwitch960_g116974 = temp_output_903_0_g116974;
				#endif
				half2 Rain_Drops1002_g116974 = ( staticSwitch960_g116974 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
				half3 Model_PositionWS823_g116974 = Out_PositionWS15_g116988;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch949_g116974 = ( (Global_AtmoParams516_g116974).w * TVE_IsEnabled );
				#else
				float staticSwitch949_g116974 = 1.0;
				#endif
				half Global_Rain955_g116974 = staticSwitch949_g116974;
				half Rain_Value1067_g116974 = Global_Rain955_g116974;
				half Rain_VertMask1108_g116974 = 1.0;
				half Rain_Mask999_g116974 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g116974 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g116974 * Rain_VertMask1108_g116974 );
				half2 Normal_Planar45_g116985 = ( Rain_Drops1002_g116974 * Rain_Mask999_g116974 * Wetness_ProjMask790_g116974 );
				float2 break71_g116985 = Normal_Planar45_g116985;
				float3 appendResult72_g116985 = (float3(break71_g116985.x , 0.0 , break71_g116985.y));
				half2 Wetness_Normal526_g116974 = (mul( ase_worldToTangent, appendResult72_g116985 )).xy;
				#ifdef TVE_WETNESS_DROPS
				float2 staticSwitch583_g116974 = Wetness_Normal526_g116974;
				#else
				float2 staticSwitch583_g116974 = temp_cast_35;
				#endif
				#ifdef TVE_WETNESS
				float2 staticSwitch774_g116974 = ( staticSwitch957_g116974 + staticSwitch583_g116974 );
				#else
				float2 staticSwitch774_g116974 = Visual_Normal535_g116974;
				#endif
				half2 Final_Normal499_g116974 = staticSwitch774_g116974;
				float2 In_NormalTS3_g116976 = Final_Normal499_g116974;
				float3 In_NormalWS3_g116976 = Out_NormalWS4_g116975;
				float4 break658_g116974 = Visual_Masks536_g116974;
				float temp_output_935_0_g116974 = ( Wetness_Mask866_g116974 * _WetnessSmoothnessValue );
				float lerpResult941_g116974 = lerp( temp_output_935_0_g116974 , 2.0 , Water_Mask760_g116974);
				#ifdef TVE_WETNESS_WATER
				float staticSwitch959_g116974 = lerpResult941_g116974;
				#else
				float staticSwitch959_g116974 = temp_output_935_0_g116974;
				#endif
				float4 appendResult661_g116974 = (float4(break658_g116974.x , break658_g116974.y , break658_g116974.z , saturate( ( break658_g116974.w + staticSwitch959_g116974 ) )));
				#ifdef TVE_WETNESS
				float4 staticSwitch586_g116974 = appendResult661_g116974;
				#else
				float4 staticSwitch586_g116974 = Visual_Masks536_g116974;
				#endif
				half4 Final_Masks482_g116974 = staticSwitch586_g116974;
				float4 In_Shader3_g116976 = Final_Masks482_g116974;
				float4 In_Emissive3_g116976 = Out_Emissive4_g116975;
				float In_Grayscale3_g116976 = Out_Grayscale4_g116975;
				float In_Luminosity3_g116976 = Out_Luminosity4_g116975;
				float In_MultiMask3_g116976 = Out_MultiMask4_g116975;
				float In_AlphaClip3_g116976 = Out_AlphaClip4_g116975;
				float In_AlphaFade3_g116976 = Out_AlphaFade4_g116975;
				float3 In_Translucency3_g116976 = Out_Translucency4_g116975;
				float In_Transmission3_g116976 = Out_Transmission4_g116975;
				float In_Thickness3_g116976 = Out_Thickness4_g116975;
				float In_Diffusion3_g116976 = Out_Diffusion4_g116975;
				Data3_g116976.Dummy = In_Dummy3_g116976;
				Data3_g116976.Albedo = In_Albedo3_g116976;
				Data3_g116976.AlbedoRaw = In_AlbedoRaw3_g116976;
				Data3_g116976.NormalTS = In_NormalTS3_g116976;
				Data3_g116976.NormalWS = In_NormalWS3_g116976;
				Data3_g116976.Shader = In_Shader3_g116976;
				Data3_g116976.Emissive= In_Emissive3_g116976;
				Data3_g116976.MultiMask = In_MultiMask3_g116976;
				Data3_g116976.Grayscale = In_Grayscale3_g116976;
				Data3_g116976.Luminosity = In_Luminosity3_g116976;
				Data3_g116976.AlphaClip = In_AlphaClip3_g116976;
				Data3_g116976.AlphaFade = In_AlphaFade3_g116976;
				Data3_g116976.Translucency = In_Translucency3_g116976;
				Data3_g116976.Transmission = In_Transmission3_g116976;
				Data3_g116976.Thickness = In_Thickness3_g116976;
				Data3_g116976.Diffusion = In_Diffusion3_g116976;
				TVEVisualData Data4_g117012 = Data3_g116976;
				float Out_Dummy4_g117012 = 0;
				float3 Out_Albedo4_g117012 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g117012 = float3( 0,0,0 );
				float2 Out_NormalTS4_g117012 = float2( 0,0 );
				float3 Out_NormalWS4_g117012 = float3( 0,0,0 );
				float4 Out_Shader4_g117012 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g117012 = float4( 0,0,0,0 );
				float Out_MultiMask4_g117012 = 0;
				float Out_Grayscale4_g117012 = 0;
				float Out_Luminosity4_g117012 = 0;
				float Out_AlphaClip4_g117012 = 0;
				float Out_AlphaFade4_g117012 = 0;
				float3 Out_Translucency4_g117012 = float3( 0,0,0 );
				float Out_Transmission4_g117012 = 0;
				float Out_Thickness4_g117012 = 0;
				float Out_Diffusion4_g117012 = 0;
				Out_Dummy4_g117012 = Data4_g117012.Dummy;
				Out_Albedo4_g117012 = Data4_g117012.Albedo;
				Out_AlbedoRaw4_g117012 = Data4_g117012.AlbedoRaw;
				Out_NormalTS4_g117012 = Data4_g117012.NormalTS;
				Out_NormalWS4_g117012 = Data4_g117012.NormalWS;
				Out_Shader4_g117012 = Data4_g117012.Shader;
				Out_Emissive4_g117012= Data4_g117012.Emissive;
				Out_MultiMask4_g117012 = Data4_g117012.MultiMask;
				Out_Grayscale4_g117012 = Data4_g117012.Grayscale;
				Out_Luminosity4_g117012= Data4_g117012.Luminosity;
				Out_AlphaClip4_g117012 = Data4_g117012.AlphaClip;
				Out_AlphaFade4_g117012 = Data4_g117012.AlphaFade;
				Out_Translucency4_g117012 = Data4_g117012.Translucency;
				Out_Transmission4_g117012 = Data4_g117012.Transmission;
				Out_Thickness4_g117012 = Data4_g117012.Thickness;
				Out_Diffusion4_g117012 = Data4_g117012.Diffusion;
				float3 temp_output_297_0_g117003 = Out_Albedo4_g117012;
				float3 In_Albedo3_g117013 = temp_output_297_0_g117003;
				float3 temp_output_297_23_g117003 = Out_AlbedoRaw4_g117012;
				float3 In_AlbedoRaw3_g117013 = temp_output_297_23_g117003;
				float2 In_NormalTS3_g117013 = Out_NormalTS4_g117012;
				float3 In_NormalWS3_g117013 = Out_NormalWS4_g117012;
				float4 In_Shader3_g117013 = Out_Shader4_g117012;
				float4 temp_cast_36 = (0.0).xxxx;
				half4 Visual_Emissive255_g117003 = Out_Emissive4_g117012;
				half Emissive_MeshMask221_g117003 = 1.0;
				half Emissive_Mask103_g117003 = 1.0;
				float temp_output_279_0_g117003 = ( Emissive_MeshMask221_g117003 * Emissive_Mask103_g117003 );
				float3 appendResult293_g117003 = (float3(temp_output_279_0_g117003 , temp_output_279_0_g117003 , temp_output_279_0_g117003));
				half3 Local_EmissiveColor278_g117003 = appendResult293_g117003;
				float3 temp_cast_37 = (1.0).xxx;
				TVEGlobalData Data15_g117004 = Data204_g115912;
				float Out_Dummy15_g117004 = 0;
				float4 Out_CoatParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g117004 = float4( 0,0,0,0 );
				Out_Dummy15_g117004 = Data15_g117004.Dummy;
				Out_CoatParams15_g117004 = Data15_g117004.CoatParams;
				Out_PaintParams15_g117004 = Data15_g117004.PaintParams;
				Out_GlowParams15_g117004 = Data15_g117004.GlowParams;
				Out_AtmoParams15_g117004= Data15_g117004.AtmoParams;
				Out_FadeParams15_g117004= Data15_g117004.FadeParams;
				Out_FormParams15_g117004 = Data15_g117004.FormParams;
				Out_LandParams15_g117004 = Data15_g117004.LandParams;
				Out_WindParams15_g117004 = Data15_g117004.WindParams;
				Out_PushParams15_g117004 = Data15_g117004.PushParams;
				half4 Global_GlowParams179_g117003 = Out_GlowParams15_g117004;
				float3 lerpResult299_g117003 = lerp( float3( 1,1,1 ) , (Global_GlowParams179_g117003).xyz , TVE_IsEnabled);
				#ifdef TVE_EMISSIVE_ELEMENT
				float3 staticSwitch228_g117003 = lerpResult299_g117003;
				#else
				float3 staticSwitch228_g117003 = temp_cast_37;
				#endif
				half3 Emissive_GlobalMask248_g117003 = staticSwitch228_g117003;
				half3 Visual_AlbedoRaw306_g117003 = temp_output_297_23_g117003;
				float3 lerpResult307_g117003 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g117003 , _EmissiveColorMode);
				half3 Local_EmissiveValue88_g117003 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g117003 * lerpResult307_g117003 );
				half3 Emissive_Blend260_g117003 = ( ( (Visual_Emissive255_g117003).xyz * Local_EmissiveColor278_g117003 ) * Local_EmissiveValue88_g117003 );
				float3 temp_output_3_0_g117017 = Emissive_Blend260_g117003;
				float temp_output_15_0_g117017 = _emissive_power_value;
				float3 temp_output_23_0_g117017 = ( temp_output_3_0_g117017 * temp_output_15_0_g117017 );
				half Local_EmissiveMask294_g117003 = temp_output_279_0_g117003;
				float4 appendResult295_g117003 = (float4(temp_output_23_0_g117017 , Local_EmissiveMask294_g117003));
				#ifdef TVE_EMISSIVE
				float4 staticSwitch129_g117003 = appendResult295_g117003;
				#else
				float4 staticSwitch129_g117003 = temp_cast_36;
				#endif
				half4 Final_Emissive184_g117003 = staticSwitch129_g117003;
				float4 In_Emissive3_g117013 = Final_Emissive184_g117003;
				float In_Grayscale3_g117013 = Out_Grayscale4_g117012;
				float In_Luminosity3_g117013 = Out_Luminosity4_g117012;
				float temp_output_297_11_g117003 = Out_MultiMask4_g117012;
				float In_MultiMask3_g117013 = temp_output_297_11_g117003;
				float In_AlphaClip3_g117013 = Out_AlphaClip4_g117012;
				float In_AlphaFade3_g117013 = Out_AlphaFade4_g117012;
				float3 In_Translucency3_g117013 = Out_Translucency4_g117012;
				float In_Transmission3_g117013 = Out_Transmission4_g117012;
				float In_Thickness3_g117013 = Out_Thickness4_g117012;
				float In_Diffusion3_g117013 = Out_Diffusion4_g117012;
				Data3_g117013.Dummy = In_Dummy3_g117013;
				Data3_g117013.Albedo = In_Albedo3_g117013;
				Data3_g117013.AlbedoRaw = In_AlbedoRaw3_g117013;
				Data3_g117013.NormalTS = In_NormalTS3_g117013;
				Data3_g117013.NormalWS = In_NormalWS3_g117013;
				Data3_g117013.Shader = In_Shader3_g117013;
				Data3_g117013.Emissive= In_Emissive3_g117013;
				Data3_g117013.MultiMask = In_MultiMask3_g117013;
				Data3_g117013.Grayscale = In_Grayscale3_g117013;
				Data3_g117013.Luminosity = In_Luminosity3_g117013;
				Data3_g117013.AlphaClip = In_AlphaClip3_g117013;
				Data3_g117013.AlphaFade = In_AlphaFade3_g117013;
				Data3_g117013.Translucency = In_Translucency3_g117013;
				Data3_g117013.Transmission = In_Transmission3_g117013;
				Data3_g117013.Thickness = In_Thickness3_g117013;
				Data3_g117013.Diffusion = In_Diffusion3_g117013;
				TVEVisualData Data4_g117029 = Data3_g117013;
				float Out_Dummy4_g117029 = 0;
				float3 Out_Albedo4_g117029 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g117029 = float3( 0,0,0 );
				float2 Out_NormalTS4_g117029 = float2( 0,0 );
				float3 Out_NormalWS4_g117029 = float3( 0,0,0 );
				float4 Out_Shader4_g117029 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g117029 = float4( 0,0,0,0 );
				float Out_MultiMask4_g117029 = 0;
				float Out_Grayscale4_g117029 = 0;
				float Out_Luminosity4_g117029 = 0;
				float Out_AlphaClip4_g117029 = 0;
				float Out_AlphaFade4_g117029 = 0;
				float3 Out_Translucency4_g117029 = float3( 0,0,0 );
				float Out_Transmission4_g117029 = 0;
				float Out_Thickness4_g117029 = 0;
				float Out_Diffusion4_g117029 = 0;
				Out_Dummy4_g117029 = Data4_g117029.Dummy;
				Out_Albedo4_g117029 = Data4_g117029.Albedo;
				Out_AlbedoRaw4_g117029 = Data4_g117029.AlbedoRaw;
				Out_NormalTS4_g117029 = Data4_g117029.NormalTS;
				Out_NormalWS4_g117029 = Data4_g117029.NormalWS;
				Out_Shader4_g117029 = Data4_g117029.Shader;
				Out_Emissive4_g117029= Data4_g117029.Emissive;
				Out_MultiMask4_g117029 = Data4_g117029.MultiMask;
				Out_Grayscale4_g117029 = Data4_g117029.Grayscale;
				Out_Luminosity4_g117029= Data4_g117029.Luminosity;
				Out_AlphaClip4_g117029 = Data4_g117029.AlphaClip;
				Out_AlphaFade4_g117029 = Data4_g117029.AlphaFade;
				Out_Translucency4_g117029 = Data4_g117029.Translucency;
				Out_Transmission4_g117029 = Data4_g117029.Transmission;
				Out_Thickness4_g117029 = Data4_g117029.Thickness;
				Out_Diffusion4_g117029 = Data4_g117029.Diffusion;
				float3 In_Albedo3_g117019 = Out_Albedo4_g117029;
				float3 In_AlbedoRaw3_g117019 = Out_AlbedoRaw4_g117029;
				float2 In_NormalTS3_g117019 = Out_NormalTS4_g117029;
				float3 In_NormalWS3_g117019 = Out_NormalWS4_g117029;
				float4 In_Shader3_g117019 = Out_Shader4_g117029;
				float4 In_Emissive3_g117019 = Out_Emissive4_g117029;
				float In_Grayscale3_g117019 = Out_Grayscale4_g117029;
				float In_Luminosity3_g117019 = Out_Luminosity4_g117029;
				float temp_output_836_11_g117018 = Out_MultiMask4_g117029;
				float In_MultiMask3_g117019 = temp_output_836_11_g117018;
				half Visual_AlphaClip667_g117018 = Out_AlphaClip4_g117029;
				TVEGlobalData Data15_g117028 = Data204_g115912;
				float Out_Dummy15_g117028 = 0;
				float4 Out_CoatParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g117028 = float4( 0,0,0,0 );
				Out_Dummy15_g117028 = Data15_g117028.Dummy;
				Out_CoatParams15_g117028 = Data15_g117028.CoatParams;
				Out_PaintParams15_g117028 = Data15_g117028.PaintParams;
				Out_GlowParams15_g117028 = Data15_g117028.GlowParams;
				Out_AtmoParams15_g117028= Data15_g117028.AtmoParams;
				Out_FadeParams15_g117028= Data15_g117028.FadeParams;
				Out_FormParams15_g117028 = Data15_g117028.FormParams;
				Out_LandParams15_g117028 = Data15_g117028.LandParams;
				Out_WindParams15_g117028 = Data15_g117028.WindParams;
				Out_PushParams15_g117028 = Data15_g117028.PushParams;
				half4 Global_FadeParams516_g117018 = Out_FadeParams15_g117028;
				#ifdef TVE_CUTOUT_ELEMENT
				float staticSwitch663_g117018 = saturate( (Global_FadeParams516_g117018).w );
				#else
				float staticSwitch663_g117018 = 1.0;
				#endif
				half Local_GlobalMask429_g117018 = staticSwitch663_g117018;
				half Local_AlphaMask814_g117018 = 1.0;
				half Local_NoiseMask678_g117018 = 1.0;
				half Local_VertMask766_g117018 = 1.0;
				half Local_MultiMask685_g117018 = 1.0;
				float lerpResult728_g117018 = lerp( Visual_AlphaClip667_g117018 , min( Visual_AlphaClip667_g117018 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g117018 ) - ( Local_AlphaMask814_g117018 * Local_NoiseMask678_g117018 * Local_VertMask766_g117018 ) ) ) ) , Local_MultiMask685_g117018);
				half Local_AlphaClip784_g117018 = lerpResult728_g117018;
				#ifdef TVE_CUTOUT
				float staticSwitch577_g117018 = Local_AlphaClip784_g117018;
				#else
				float staticSwitch577_g117018 = Visual_AlphaClip667_g117018;
				#endif
				half Final_AlphaClip795_g117018 = staticSwitch577_g117018;
				float In_AlphaClip3_g117019 = Final_AlphaClip795_g117018;
				float In_AlphaFade3_g117019 = Out_AlphaFade4_g117029;
				float3 In_Translucency3_g117019 = Out_Translucency4_g117029;
				float In_Transmission3_g117019 = Out_Transmission4_g117029;
				float In_Thickness3_g117019 = Out_Thickness4_g117029;
				float In_Diffusion3_g117019 = Out_Diffusion4_g117029;
				Data3_g117019.Dummy = In_Dummy3_g117019;
				Data3_g117019.Albedo = In_Albedo3_g117019;
				Data3_g117019.AlbedoRaw = In_AlbedoRaw3_g117019;
				Data3_g117019.NormalTS = In_NormalTS3_g117019;
				Data3_g117019.NormalWS = In_NormalWS3_g117019;
				Data3_g117019.Shader = In_Shader3_g117019;
				Data3_g117019.Emissive= In_Emissive3_g117019;
				Data3_g117019.MultiMask = In_MultiMask3_g117019;
				Data3_g117019.Grayscale = In_Grayscale3_g117019;
				Data3_g117019.Luminosity = In_Luminosity3_g117019;
				Data3_g117019.AlphaClip = In_AlphaClip3_g117019;
				Data3_g117019.AlphaFade = In_AlphaFade3_g117019;
				Data3_g117019.Translucency = In_Translucency3_g117019;
				Data3_g117019.Transmission = In_Transmission3_g117019;
				Data3_g117019.Thickness = In_Thickness3_g117019;
				Data3_g117019.Diffusion = In_Diffusion3_g117019;
				TVEVisualData Data4_g117042 = Data3_g117019;
				float Out_Dummy4_g117042 = 0;
				float3 Out_Albedo4_g117042 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g117042 = float3( 0,0,0 );
				float2 Out_NormalTS4_g117042 = float2( 0,0 );
				float3 Out_NormalWS4_g117042 = float3( 0,0,0 );
				float4 Out_Shader4_g117042 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g117042 = float4( 0,0,0,0 );
				float Out_MultiMask4_g117042 = 0;
				float Out_Grayscale4_g117042 = 0;
				float Out_Luminosity4_g117042 = 0;
				float Out_AlphaClip4_g117042 = 0;
				float Out_AlphaFade4_g117042 = 0;
				float3 Out_Translucency4_g117042 = float3( 0,0,0 );
				float Out_Transmission4_g117042 = 0;
				float Out_Thickness4_g117042 = 0;
				float Out_Diffusion4_g117042 = 0;
				Out_Dummy4_g117042 = Data4_g117042.Dummy;
				Out_Albedo4_g117042 = Data4_g117042.Albedo;
				Out_AlbedoRaw4_g117042 = Data4_g117042.AlbedoRaw;
				Out_NormalTS4_g117042 = Data4_g117042.NormalTS;
				Out_NormalWS4_g117042 = Data4_g117042.NormalWS;
				Out_Shader4_g117042 = Data4_g117042.Shader;
				Out_Emissive4_g117042= Data4_g117042.Emissive;
				Out_MultiMask4_g117042 = Data4_g117042.MultiMask;
				Out_Grayscale4_g117042 = Data4_g117042.Grayscale;
				Out_Luminosity4_g117042= Data4_g117042.Luminosity;
				Out_AlphaClip4_g117042 = Data4_g117042.AlphaClip;
				Out_AlphaFade4_g117042 = Data4_g117042.AlphaFade;
				Out_Translucency4_g117042 = Data4_g117042.Translucency;
				Out_Transmission4_g117042 = Data4_g117042.Transmission;
				Out_Thickness4_g117042 = Data4_g117042.Thickness;
				Out_Diffusion4_g117042 = Data4_g117042.Diffusion;
				half3 Input_Albedo24_g117041 = Out_Albedo4_g117042;
				#ifdef UNITY_COLORSPACE_GAMMA
				float4 staticSwitch22_g117041 = half4(0.2209163,0.2209163,0.2209163,0.7790837);
				#else
				float4 staticSwitch22_g117041 = half4(0.04,0.04,0.04,0.96);
				#endif
				half4 ColorSpaceDielectricSpec23_g117041 = staticSwitch22_g117041;
				float4 break24_g117038 = Out_Shader4_g117042;
				half Metallic95_g117038 = break24_g117038.x;
				half Input_Metallic25_g117041 = Metallic95_g117038;
				half OneMinusReflectivity31_g117041 = ( (ColorSpaceDielectricSpec23_g117041).w - ( (ColorSpaceDielectricSpec23_g117041).w * Input_Metallic25_g117041 ) );
				
				float3 appendResult23_g117038 = (float3(Out_NormalTS4_g117042 , 1.0));
				
				half Smoothness101_g117038 = break24_g117038.w;
				half Input_Smoothness43_g117046 = Smoothness101_g117038;
				half Input_True57_g117048 = Input_Smoothness43_g117046;
				half True33_g117048 = Input_True57_g117048;
				half Render_Specualr110_g117038 = _RenderSpecular;
				half Input_RenderSpec58_g117046 = Render_Specualr110_g117038;
				float temp_output_46_0_g117046 = max( ( Input_Smoothness43_g117046 * Input_RenderSpec58_g117046 ) , 0.001 );
				float temp_output_6_0_g117047 = temp_output_46_0_g117046;
				#ifdef TVE_REGISTER
				float staticSwitch14_g117047 = ( temp_output_6_0_g117047 + ( _SpecColor.r * 0.0 ) );
				#else
				float staticSwitch14_g117047 = temp_output_6_0_g117047;
				#endif
				float temp_output_61_0_g117046 = staticSwitch14_g117047;
				half Input_False58_g117048 = temp_output_61_0_g117046;
				half False33_g117048 = Input_False58_g117048;
				half localShadowPassCheck33_g117048 = ShadowPassCheck33_g117048( True33_g117048 , False33_g117048 );
				
				half Input_True57_g117049 = 0.04;
				half True33_g117049 = Input_True57_g117049;
				half Input_False58_g117049 = temp_output_46_0_g117046;
				half False33_g117049 = Input_False58_g117049;
				half localShadowPassCheck33_g117049 = ShadowPassCheck33_g117049( True33_g117049 , False33_g117049 );
				
				float localCustomAlphaClip19_g117044 = ( 0.0 );
				float temp_output_3_0_g117044 = Out_AlphaClip4_g117042;
				float Alpha19_g117044 = temp_output_3_0_g117044;
				float temp_output_15_0_g117044 = 0.5;
				float Treshold19_g117044 = temp_output_15_0_g117044;
				#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_DITHER)
				#if defined ( TVE_PIPELINE_HD)
				#if !defined(SHADERPASS_FORWARD_BYPASS_ALPHA_TEST) && !defined(SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST)
				clip(Alpha19_g117044 - Treshold19_g117044);
				#endif
				#else
				clip(Alpha19_g117044 - Treshold19_g117044);
				#endif
				#endif
				
				o.Albedo = ( Input_Albedo24_g117041 * OneMinusReflectivity31_g117041 );
				o.Normal = appendResult23_g117038;
				o.Emission = (Out_Emissive4_g117042).xyz;

				#if defined(ASE_LIGHTING_SIMPLE)
					o.Specular = localShadowPassCheck33_g117048;
					o.Gloss = localShadowPassCheck33_g117049;
				#else
					#if defined(_SPECULAR_SETUP)
						o.Specular = fixed3( 1, 1, 1 );
					#else
						o.Metallic = 0;
					#endif
					o.Occlusion = 1;
					o.Smoothness = 0;
				#endif

				o.Alpha = Alpha19_g117044;
				float AlphaClipThreshold = 0.5;
				float AlphaClipThresholdShadow = 0.5;
				float3 BakedGI = 0;
				float3 RefractionColor = 1;
				float RefractionIndex = 1;
				float3 Transmission = 1;
				float3 Translucency = 1;

				#ifdef _ALPHATEST_ON
					clip( o.Alpha - AlphaClipThreshold );
				#endif

				#ifdef _DEPTHOFFSET_ON
					outputDepth = IN.pos.z;
				#endif

				#ifndef USING_DIRECTIONAL_LIGHT
					fixed3 lightDir = normalize(UnityWorldSpaceLightDir(worldPos));
				#else
					fixed3 lightDir = _WorldSpaceLightPos0.xyz;
				#endif

				fixed4 c = 0;
				float3 worldN;
				worldN.x = dot(IN.tSpace0.xyz, o.Normal);
				worldN.y = dot(IN.tSpace1.xyz, o.Normal);
				worldN.z = dot(IN.tSpace2.xyz, o.Normal);
				worldN = normalize(worldN);
				o.Normal = worldN;

				UnityGI gi;
				UNITY_INITIALIZE_OUTPUT(UnityGI, gi);
				gi.indirect.diffuse = 0;
				gi.indirect.specular = 0;
				gi.light.color = _LightColor0.rgb;
				gi.light.dir = lightDir;

				UnityGIInput giInput;
				UNITY_INITIALIZE_OUTPUT(UnityGIInput, giInput);
				giInput.light = gi.light;
				giInput.worldPos = worldPos;
				giInput.worldViewDir = worldViewDir;
				giInput.atten = atten;
				#if defined(LIGHTMAP_ON) || defined(DYNAMICLIGHTMAP_ON)
					giInput.lightmapUV = IN.lmap;
				#else
					giInput.lightmapUV = 0.0;
				#endif
				#if UNITY_SHOULD_SAMPLE_SH && !UNITY_SAMPLE_FULL_SH_PER_PIXEL
					giInput.ambient = IN.sh;
				#else
					giInput.ambient.rgb = 0.0;
				#endif
				giInput.probeHDR[0] = unity_SpecCube0_HDR;
				giInput.probeHDR[1] = unity_SpecCube1_HDR;
				#if defined(UNITY_SPECCUBE_BLENDING) || defined(UNITY_SPECCUBE_BOX_PROJECTION)
					giInput.boxMin[0] = unity_SpecCube0_BoxMin;
				#endif
				#ifdef UNITY_SPECCUBE_BOX_PROJECTION
					giInput.boxMax[0] = unity_SpecCube0_BoxMax;
					giInput.probePosition[0] = unity_SpecCube0_ProbePosition;
					giInput.boxMax[1] = unity_SpecCube1_BoxMax;
					giInput.boxMin[1] = unity_SpecCube1_BoxMin;
					giInput.probePosition[1] = unity_SpecCube1_ProbePosition;
				#endif

				#if defined(ASE_LIGHTING_SIMPLE)
					#if defined(_SPECULAR_SETUP)
						LightingBlinnPhong_GI(o, giInput, gi);
					#else
						LightingLambert_GI(o, giInput, gi);
					#endif
				#else
					#if defined(_SPECULAR_SETUP)
						LightingStandardSpecular_GI(o, giInput, gi);
					#else
						LightingStandard_GI(o, giInput, gi);
					#endif
				#endif

				#ifdef ASE_BAKEDGI
					gi.indirect.diffuse = BakedGI;
				#endif

				#if UNITY_SHOULD_SAMPLE_SH && !defined(LIGHTMAP_ON) && defined(ASE_NO_AMBIENT)
					gi.indirect.diffuse = 0;
				#endif

				#if defined(ASE_LIGHTING_SIMPLE)
					#if defined(_SPECULAR_SETUP)
						c += LightingBlinnPhong (o, worldViewDir, gi);
					#else
						c += LightingLambert( o, gi );
					#endif
				#else
					#if defined(_SPECULAR_SETUP)
						c += LightingStandardSpecular (o, worldViewDir, gi);
					#else
						c += LightingStandard(o, worldViewDir, gi);
					#endif
				#endif

				#ifdef ASE_TRANSMISSION
				{
					float shadow = _TransmissionShadow;
					#ifdef DIRECTIONAL
						float3 lightAtten = lerp( _LightColor0.rgb, gi.light.color, shadow );
					#else
						float3 lightAtten = gi.light.color;
					#endif
					half3 transmission = max(0 , -dot(o.Normal, gi.light.dir)) * lightAtten * Transmission;
					c.rgb += o.Albedo * transmission;
				}
				#endif

				#ifdef ASE_TRANSLUCENCY
				{
					float shadow = _TransShadow;
					float normal = _TransNormal;
					float scattering = _TransScattering;
					float direct = _TransDirect;
					float ambient = _TransAmbient;
					float strength = _TransStrength;

					#ifdef DIRECTIONAL
						float3 lightAtten = lerp( _LightColor0.rgb, gi.light.color, shadow );
					#else
						float3 lightAtten = gi.light.color;
					#endif
					half3 lightDir = gi.light.dir + o.Normal * normal;
					half transVdotL = pow( saturate( dot( worldViewDir, -lightDir ) ), scattering );
					half3 translucency = lightAtten * (transVdotL * direct + gi.indirect.diffuse * ambient) * Translucency;
					c.rgb += o.Albedo * translucency * strength;
				}
				#endif

				//#ifdef ASE_REFRACTION
				//	float4 projScreenPos = ScreenPos / ScreenPos.w;
				//	float3 refractionOffset = ( RefractionIndex - 1.0 ) * mul( UNITY_MATRIX_V, WorldNormal ).xyz * ( 1.0 - dot( WorldNormal, WorldViewDirection ) );
				//	projScreenPos.xy += refractionOffset.xy;
				//	float3 refraction = UNITY_SAMPLE_SCREENSPACE_TEXTURE( _GrabTexture, projScreenPos ) * RefractionColor;
				//	color.rgb = lerp( refraction, color.rgb, color.a );
				//	color.a = 1;
				//#endif

				c.rgb += o.Emission;

				#ifdef ASE_FOG
					UNITY_APPLY_FOG(IN.fogCoord, c);
				#endif
				return c;
			}
			ENDCG
		}

		UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
	UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"

		Pass
		{
			
			Name "ForwardAdd"
			Tags { "LightMode"="ForwardAdd" }
			ZWrite Off
			Blend One One

			CGPROGRAM
			#define ASE_NEEDS_FRAG_SHADOWCOORDS
			#pragma shader_feature_local_fragment _ _SPECULARHIGHLIGHTS_OFF
			#pragma multi_compile __ LOD_FADE_CROSSFADE
			#pragma multi_compile_fog
			#define ASE_FOG 1
			#define ASE_ABSOLUTE_VERTEX_POS 1
			#define ASE_TERRAIN 1
			#define _SPECULAR_SETUP 1
			#define ASE_LIGHTING_SIMPLE 1
			#define _ENVIRONMENTREFLECTIONS_OFF 1
			#define ASE_USING_SAMPLING_MACROS 1

			#pragma vertex vert
			#pragma fragment frag
			#pragma skip_variants INSTANCING_ON
			#pragma multi_compile_fwdadd_fullshadows
			#ifndef UNITY_PASS_FORWARDADD
				#define UNITY_PASS_FORWARDADD
			#endif
			#include "HLSLSupport.cginc"

			#ifdef ASE_GEOMETRY
				#ifndef UNITY_INSTANCED_LOD_FADE
					#define UNITY_INSTANCED_LOD_FADE
				#endif
				#ifndef UNITY_INSTANCED_SH
					#define UNITY_INSTANCED_SH
				#endif
				#ifndef UNITY_INSTANCED_LIGHTMAPSTS
					#define UNITY_INSTANCED_LIGHTMAPSTS
				#endif
			#endif

			#include "UnityShaderVariables.cginc"
			#include "UnityCG.cginc"
			#include "Lighting.cginc"
			#include "UnityPBSLighting.cginc"
			#include "AutoLight.cginc"

			#define ASE_NEEDS_VERT_POSITION
			#define ASE_NEEDS_VERT_NORMAL
			#define ASE_NEEDS_VERT_TANGENT
			#define ASE_NEEDS_FRAG_WORLD_POSITION
			#define ASE_NEEDS_FRAG_WORLD_NORMAL
			#define ASE_NEEDS_FRAG_WORLD_TANGENT
			#define ASE_NEEDS_FRAG_WORLD_BITANGENT
			#pragma shader_feature_local_fragment TVE_PIPELINE_STANDARD TVE_PIPELINE_UNIVERSAL TVE_PIPELINE_HD
			#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
			#pragma shader_feature_local_vertex TVE_LANDSCAPE
			#pragma shader_feature_local_fragment TVE_WETNESS
			#pragma shader_feature_local_fragment TVE_OVERLAY
			#pragma shader_feature_local_fragment TVE_DRYNESS
			#pragma shader_feature_local_fragment TVE_TINTING
			#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
			#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
			#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
			#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
			#pragma shader_feature_local_fragment TVE_DRYNESS_SHIFT
			#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
			#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
			#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_WATER
			#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
			#pragma shader_feature_local_fragment TVE_EMISSIVE
			#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
			#pragma shader_feature_local_fragment TVE_CUTOUT
			#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
			#pragma multi_compile_instancing
			#pragma instancing_options assumeuniformscaling nomatrices nolightprobe nolightmap forwardadd
			  
			struct TVEVisualData
			{  
				half Dummy;  
				half3 Albedo;
				half3 AlbedoRaw;
				half2 NormalTS;
				half3 NormalWS; 
				half4 Shader;
				half4 Emissive;
				half AlphaClip;
				half AlphaFade;
				half MultiMask;
				half Grayscale;
				half Luminosity;
				half3 Translucency;
				half Transmission;
				half Thickness;
				float Diffusion;
			};  
			    
			struct TVEModelData
			{    
				half Dummy;    
				half3 PositionOS;
				half3 PositionWS;
				half3 PositionWO;
				half3 PositionRawOS;
				half3 PositionAddOS;
				half3 PivotOS;
				half3 PivotWS;
				half3 PivotWO;
				half3 NormalOS;
				half3 NormalWS;
				half3 NormalRawOS;
				half3 NormalRawWS;
				half4 TangentOS;
				half3 ViewDirWS;
				half4 VertexData;
				half4 MotionData;
				half4 BoundsData;
				half4 RotationData;
			};    
			      
			struct TVEGlobalData
			{      
				half Dummy;      
				half4 CoatParams;
				half4 PaintParams;
				half4 GlowParams;
				half4 AtmoParams;
				half4 FadeParams;
				half4 FormParams;
				half4 LandParams;
				half4 WindParams;
				half4 PushParams;
			};      
			        
			//#pragma editor_sync_compilation
			#if defined(SHADER_API_D3D11) || defined(SHADER_API_XBOXONE) || defined(UNITY_COMPILER_HLSLCC) || defined(SHADER_API_PSSL) || (defined(SHADER_TARGET_SURFACE_ANALYSIS) && !defined(SHADER_TARGET_SURFACE_ANALYSIS_MOJOSHADER))//ASE Sampler Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex.SampleBias(samplerTex,coord,bias)
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex.SampleGrad(samplerTex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#else//ASE Sampling Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex2D(tex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex2Dlod(tex,float4(coord,0,lod))
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex2Dbias(tex,float4(coord,0,bias))
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex2Dgrad(tex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplertex,coord,lod) tex2DArraylod(tex, float4(coord,lod))
			#endif//ASE Sampling Macros
			

			struct appdata {
				float4 vertex : POSITION;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;
				UNITY_VERTEX_INPUT_INSTANCE_ID
			};
			struct v2f {
				#if UNITY_VERSION >= 201810
					UNITY_POSITION(pos);
				#else
					float4 pos : SV_POSITION;
				#endif
				#if UNITY_VERSION >= 201810 && defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					UNITY_LIGHTING_COORDS(1,2)
				#elif defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					#if UNITY_VERSION >= 201710
						UNITY_SHADOW_COORDS(1)
					#else
						SHADOW_COORDS(1)
					#endif
				#endif
				#ifdef ASE_FOG
					UNITY_FOG_COORDS(3)
				#endif
				float4 tSpace0 : TEXCOORD5;
				float4 tSpace1 : TEXCOORD6;
				float4 tSpace2 : TEXCOORD7;
				#if defined(ASE_NEEDS_FRAG_SCREEN_POSITION)
				float4 screenPos : TEXCOORD8;
				#endif
				float4 ase_texcoord9 : TEXCOORD9;
				float4 ase_color : COLOR;
				float4 ase_texcoord10 : TEXCOORD10;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				UNITY_VERTEX_OUTPUT_STEREO
			};

			#ifdef ASE_TRANSMISSION
				float _TransmissionShadow;
			#endif
			#ifdef ASE_TRANSLUCENCY
				float _TransStrength;
				float _TransNormal;
				float _TransScattering;
				float _TransDirect;
				float _TransAmbient;
				float _TransShadow;
			#endif
			#ifdef ASE_TESSELLATION
				float _TessPhongStrength;
				float _TessValue;
				float _TessMin;
				float _TessMax;
				float _TessEdgeLength;
				float _TessMaxDisp;
			#endif
			uniform half _TerrainLayersMode;
			uniform half _TerrainSampleMode1;
			uniform half _TerrainSampleMode2;
			uniform half _TerrainSampleMode3;
			uniform half _TerrainSampleMode4;
			uniform half _TerrainSampleMode5;
			uniform half _TerrainSampleMode6;
			uniform half _TerrainSampleMode7;
			uniform half _TerrainSampleMode8;
			uniform half _TerrainSampleMode9;
			uniform half _TerrainSampleMode10;
			uniform half _TerrainSampleMode11;
			uniform half _TerrainSampleMode12;
			uniform half _TerrainSampleMode13;
			uniform half _TerrainSampleMode14;
			uniform half _TerrainSampleMode15;
			uniform half _TerrainSampleMode16;
			uniform half _TerrainTextureMode;
			uniform half _IsTerrainShader;
			uniform half _RenderCategory;
			uniform half _RenderEnd;
			uniform half _IsTVEShader;
			uniform half _IsCustomShader;
			uniform half _IsShared;
			uniform half _HasDefaultTextures;
			uniform half _IsCollected;
			uniform half _IsConverted;
			uniform half _IsIdentifier;
			uniform half _RenderDecals;
			uniform half _RenderSSR;
			uniform half _RenderClip;
			uniform half _IsVersion;
			uniform half _RenderShadow;
			uniform half _RenderFilter;
			uniform half _IsSimpleShader;
			uniform half _LandscapeCategory;
			uniform half _LandscapeEnd;
			uniform half _LandscapeInfo;
			uniform float3 TVE_WorldOrigin;
			uniform half4 _object_phase_mode;
			uniform half _GlobalCategory;
			uniform half _GlobalEnd;
			uniform half4 TVE_CoatParams;
			uniform half _GlobalPaintLayerValue;
			uniform float TVE_PaintLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintBaseTex);
			uniform half4 TVE_RenderBaseCoords;
			SamplerState sampler_Linear_Clamp;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintNearTex);
			uniform half4 TVE_RenderNearCoords;
			SamplerState sampler_Linear_Repeat;
			uniform float4 TVE_RenderNearPositionR;
			uniform half TVE_RenderNearFadeValue;
			uniform half4 TVE_PaintParams;
			uniform half _GlobalGlowLayerValue;
			uniform float TVE_GlowLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowNearTex);
			uniform half4 TVE_GlowParams;
			uniform half _GlobalAtmoLayerValue;
			uniform float TVE_AtmoLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoNearTex);
			uniform half4 TVE_AtmoParams;
			uniform half _GlobalFadeLayerValue;
			uniform float TVE_FadeLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeNearTex);
			uniform half4 TVE_FadeParams;
			uniform half4 TVE_FormParams;
			uniform half _GlobalLandLayerValue;
			uniform float TVE_LandLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_LandBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_LandNearTex);
			uniform half4 TVE_LandParams;
			uniform half4 TVE_WindParams;
			uniform half4 TVE_PushParams;
			uniform half _LandscapeHeightValue;
			uniform half TVE_IsEnabled;
			uniform half _CutoutCategory;
			uniform half _CutoutEnd;
			uniform half _CutoutElementMode;
			uniform half _CutoutBakeInfo;
			uniform half _EmissiveCategory;
			uniform half _EmissiveEnd;
			uniform half _EmissivePowerMode;
			uniform half _EmissivePowerValue;
			uniform half _EmissiveElementMode;
			uniform half _EmissiveFlagMode;
			uniform half _WetnessCategory;
			uniform half _WetnessEnd;
			uniform half _WetnessElementMode;
			uniform half _WetnessBakeInfo;
			uniform half _OverlayCategory;
			uniform half _OverlayEnd;
			uniform half _OverlaySpace;
			uniform half _OverlayElementMode;
			uniform half _OverlayBakeInfo;
			uniform half _DrynessCategory;
			uniform half _DrynessEnd;
			uniform half _DrynessSpace;
			uniform half _DrynessElementMode;
			uniform half _DrynessBakeInfo;
			uniform half _TintingCategory;
			uniform half _TintingEnd;
			uniform half _TintingSpace;
			uniform half _TintingBakeInfo;
			uniform half _CategoryTerrain;
			uniform half _EndTerrain;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex1);
			uniform half4 _TerrainPosition;
			uniform half4 _TerrainSize;
			float4 _TerrainControlTex1_TexelSize;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex1);
			SamplerState sampler_Point_Repeat;
			SamplerState sampler_Linear_Repeat_Aniso8;
			uniform half4 _TerrainCoord1;
			uniform half4 _TerrainShaderMin1;
			uniform half4 _TerrainShaderMax1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex2);
			uniform half4 _TerrainCoord2;
			uniform half4 _TerrainShaderMin2;
			uniform half4 _TerrainShaderMax2;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex3);
			uniform half4 _TerrainCoord3;
			uniform half4 _TerrainShaderMin3;
			uniform half4 _TerrainShaderMax3;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex4);
			uniform half4 _TerrainCoord4;
			uniform half4 _TerrainShaderMin4;
			uniform half4 _TerrainShaderMax4;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex5);
			uniform half4 _TerrainCoord5;
			uniform half4 _TerrainShaderMin5;
			uniform half4 _TerrainShaderMax5;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex6);
			uniform half4 _TerrainCoord6;
			uniform half4 _TerrainShaderMin6;
			uniform half4 _TerrainShaderMax6;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex7);
			uniform half4 _TerrainCoord7;
			uniform half4 _TerrainShaderMin7;
			uniform half4 _TerrainShaderMax7;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex8);
			uniform half4 _TerrainCoord8;
			uniform half4 _TerrainShaderMin8;
			uniform half4 _TerrainShaderMax8;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex9);
			uniform half4 _TerrainCoord9;
			uniform half4 _TerrainShaderMin9;
			uniform half4 _TerrainShaderMax9;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex10);
			uniform half4 _TerrainCoord10;
			uniform half4 _TerrainShaderMin10;
			uniform half4 _TerrainShaderMax10;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex11);
			uniform half4 _TerrainCoord11;
			uniform half4 _TerrainShaderMin11;
			uniform half4 _TerrainShaderMax11;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex12);
			uniform half4 _TerrainCoord12;
			uniform half4 _TerrainShaderMin12;
			uniform half4 _TerrainShaderMax12;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex13);
			uniform half4 _TerrainCoord13;
			uniform half4 _TerrainShaderMin13;
			uniform half4 _TerrainShaderMax13;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex14);
			uniform half4 _TerrainCoord14;
			uniform half4 _TerrainShaderMin14;
			uniform half4 _TerrainShaderMax14;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex15);
			uniform half4 _TerrainCoord15;
			uniform half4 _TerrainShaderMin15;
			uniform half4 _TerrainShaderMax15;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex16);
			uniform half4 _TerrainCoord16;
			uniform half4 _TerrainShaderMin16;
			uniform half4 _TerrainShaderMax16;
			uniform half _TerrainHeightBlendValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex16);
			uniform half4 _TerrainColor1;
			uniform half4 _TerrainColor2;
			uniform half4 _TerrainColor3;
			uniform half4 _TerrainColor4;
			uniform half4 _TerrainColor5;
			uniform half4 _TerrainColor6;
			uniform half4 _TerrainColor7;
			uniform half4 _TerrainColor8;
			uniform half4 _TerrainColor9;
			uniform half4 _TerrainColor10;
			uniform half4 _TerrainColor11;
			uniform half4 _TerrainColor12;
			uniform half4 _TerrainColor13;
			uniform half4 _TerrainColor14;
			uniform half4 _TerrainColor15;
			uniform half4 _TerrainColor16;
			uniform half4 _TerrainColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex16);
			uniform half4 _TerrainParams1;
			uniform half4 _TerrainParams2;
			uniform half4 _TerrainParams3;
			uniform half4 _TerrainParams4;
			uniform half4 _TerrainParams5;
			uniform half4 _TerrainParams6;
			uniform half4 _TerrainParams7;
			uniform half4 _TerrainParams8;
			uniform half4 _TerrainParams9;
			uniform half4 _TerrainParams10;
			uniform half4 _TerrainParams11;
			uniform half4 _TerrainParams12;
			uniform half4 _TerrainParams13;
			uniform half4 _TerrainParams14;
			uniform half4 _TerrainParams15;
			uniform half4 _TerrainParams16;
			uniform half _TerrainNormalValue;
			uniform half _TerrainMetallicValue;
			uniform half _TerrainOcclusionValue;
			uniform half _TerrainSmoothnessValue;
			uniform half4 _TerrainSpecular1;
			uniform half4 _TerrainSpecular2;
			uniform half4 _TerrainSpecular3;
			uniform half4 _TerrainSpecular4;
			uniform half4 _TerrainSpecular5;
			uniform half4 _TerrainSpecular6;
			uniform half4 _TerrainSpecular7;
			uniform half4 _TerrainSpecular8;
			uniform half4 _TerrainSpecular9;
			uniform half4 _TerrainSpecular10;
			uniform half4 _TerrainSpecular11;
			uniform half4 _TerrainSpecular12;
			uniform half4 _TerrainSpecular13;
			uniform half4 _TerrainSpecular14;
			uniform half4 _TerrainSpecular15;
			uniform half4 _TerrainSpecular16;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainHolesTex);
			uniform half _TintingElementMode;
			uniform half _TintingGrayValue;
			uniform float4 _TintingColor;
			uniform half _TintingIntensityValue;
			uniform half _TintingMultiValue;
			uniform half4 _TintingLumaRemap;
			uniform half _TintingLumaValue;
			uniform half4 _TintingBlendRemap;
			uniform half _DrynessGrayValue;
			uniform half _DrynessShiftValue;
			uniform float4 _DrynessColor;
			uniform half _DrynessIntensityValue;
			uniform half _DrynessMultiValue;
			uniform half4 _DrynessLumaRemap;
			uniform half _DrynessLumaValue;
			uniform half4 _DrynessBlendRemap;
			uniform half _DrynessSmoothnessValue;
			uniform half _DrynessSubsurfaceValue;
			uniform half4 _OverlayColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayAlbedoTex);
			uniform half4 _overlay_coord_value;
			uniform half _OverlaySampleMode;
			uniform half _OverlayCoordMode;
			uniform half4 _OverlayCoordValue;
			uniform half _OverlayTextureMode;
			uniform half _OverlayGlitterIntensityValue;
			uniform half4 _OverlayGlitterColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayGlitterTexRT);
			uniform half _OverlayGlitterTillingValue;
			uniform half _OverlayGlitterDistValue;
			uniform half _OverlayIntensityValue;
			uniform half4 _OverlayProjRemap;
			uniform half _OverlayProjValue;
			uniform half4 _OverlayLumaRemap;
			uniform half _OverlayLumaValue;
			uniform half4 _OverlayBlendRemap1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayNormalTex);
			uniform half _OverlayNormalValue;
			uniform half _OverlaySmoothnessValue;
			uniform half _OverlaySubsurfaceValue;
			uniform half4 _WetnessWaterColor;
			uniform half _WetnessWaterIntensityValue;
			uniform half _WetnessIntensityValue;
			uniform half _WetnessWaterBaseValue;
			uniform half4 _WetnessWaterBlendRemap;
			uniform half _WetnessContrastValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_WetnessDropsTexRT);
			uniform half _WetnessDropsTillingValue;
			uniform half _WetnessDropsIntensityValue;
			uniform half _WetnessDropsNormalValue;
			uniform half _WetnessDropsDistValue;
			uniform half _WetnessSmoothnessValue;
			uniform half _EmissiveIntensityValue;
			uniform half4 _EmissiveColor;
			uniform half _EmissiveColorMode;
			uniform float _emissive_power_value;
			uniform half _CutoutIntensityValue;
			uniform half _RenderSpecular;
			#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
				sampler2D _TerrainHeightmapTexture;//ASE Terrain Instancing
				sampler2D _TerrainNormalmapTexture;//ASE Terrain Instancing
			#endif//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_START( Terrain )//ASE Terrain Instancing
				UNITY_DEFINE_INSTANCED_PROP( float4, _TerrainPatchInstanceData )//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_END( Terrain)//ASE Terrain Instancing
			CBUFFER_START( UnityTerrain)//ASE Terrain Instancing
				#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
					float4 _TerrainHeightmapRecipSize;//ASE Terrain Instancing
					float4 _TerrainHeightmapScale;//ASE Terrain Instancing
				#endif//ASE Terrain Instancing
			CBUFFER_END//ASE Terrain Instancing


			void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
			{
				ZX = WorldPosition.xz * Coords.xx - Coords.zz;
				ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
				XY = WorldPosition.xy * Coords.xy - Coords.zw;
			}
			
			half4 SamplePlanar2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
			{
				half3 powNormal = abs( WorldNormal.xyz );
				half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
				weights /= ( weights.x + weights.y + weights.z ).xxx;
				T1 = weights.y;
				T2 = weights.x;
				T3 = weights.z;
			}
			
			half4 SamplePlanar3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
				half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
				half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
				return tex1 * T1 + tex2 * T2 + tex3 * T3;
			}
			
			void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
			{
				half2 vertex1, vertex2, vertex3;
				// Scaling of the input
				half2 uv = UV * 3.464; // 2 * sqrt (3)
				// Skew input space into simplex triangle grid
				const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
				half2 skewedCoord = mul( gridToSkewedGrid, uv );
				// Compute local triangle vertex IDs and local barycentric coordinates
				int2 baseId = int2( floor( skewedCoord ) );
				half3 temp = half3( frac( skewedCoord ), 0 );
				temp.z = 1.0 - temp.x - temp.y;
				if ( temp.z > 0.0 )
				{
					W1 = temp.z;
					W2 = temp.y;
					W3 = temp.x;
					vertex1 = baseId;
					vertex2 = baseId + int2( 0, 1 );
					vertex3 = baseId + int2( 1, 0 );
				}
				else
				{
					W1 = -temp.z;
					W2 = 1.0 - temp.y;
					W3 = 1.0 - temp.x;
					vertex1 = baseId + int2( 1, 1 );
					vertex2 = baseId + int2( 1, 0 );
					vertex3 = baseId + int2( 0, 1 );
				}
				UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
				UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
				UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
				return;
			}
			
			float4 SampleStochastic2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
				half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
				half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
				half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
				return tex1 * W1 + tex2 * W2 + tex3 * W3;
			}
			
			half4 SampleStochastic3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				half4 tex1, tex2, tex3;
				ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
				half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
				half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
				half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				return texZX * T1 + texZY * T2 + texXY * T3;
			}
			
			half3 HSVToRGB( half3 c )
			{
				half4 K = half4( 1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0 );
				half3 p = abs( frac( c.xxx + K.xyz ) * 6.0 - K.www );
				return c.z * lerp( K.xxx, saturate( p - K.xxx ), c.y );
			}
			
			half3 RGBToHSV(half3 c)
			{
				half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
				half4 p = lerp( half4( c.bg, K.wz ), half4( c.gb, K.xy ), step( c.b, c.g ) );
				half4 q = lerp( half4( p.xyw, c.r ), half4( c.r, p.yzx ), step( p.x, c.r ) );
				half d = q.x - min( q.w, q.y );
				half e = 1.0e-10;
				return half3( abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
			}
			half ShadowPassCheck33_g117048( half True, half False )
			{
				half result;
				#if defined(UNITY_PASS_DEFERRED)
					result = True;
				#else
					result = False;
				#endif
				return result;
			}
			
			half ShadowPassCheck33_g117049( half True, half False )
			{
				half result;
				#if defined(UNITY_PASS_DEFERRED)
					result = True;
				#else
					result = False;
				#endif
				return result;
			}
			
			appdata ApplyMeshModification( appdata v ){
			#ifdef UNITY_INSTANCING_ENABLED
				float2 patchVertex = v.vertex.xy;
				float4 instanceData = UNITY_ACCESS_INSTANCED_PROP( Terrain, _TerrainPatchInstanceData );
				float4 uvscale = instanceData.z * _TerrainHeightmapRecipSize;
				float4 uvoffset = instanceData.xyxy * uvscale;
				uvoffset.xy += 0.5f * _TerrainHeightmapRecipSize.xy;
				float2 sampleCoords = (patchVertex.xy * uvscale.xy + uvoffset.xy);
				v.ase_texcoord = float4(patchVertex.xy * uvscale.zw + uvoffset.zw, 0, 0);
				float height = UnpackHeightmap( tex2Dlod( _TerrainHeightmapTexture, float4(sampleCoords, 0, 0) ) );
				v.vertex.xz = (patchVertex.xy + instanceData.xy) * _TerrainHeightmapScale.xz * instanceData.z;
				v.vertex.y = height * _TerrainHeightmapScale.y;
				v.normal = tex2Dlod( _TerrainNormalmapTexture, v.ase_texcoord ).rgb * 2 - 1;
			#endif
			return v;
			}
			

			v2f VertexFunction (appdata v  ) {
				UNITY_SETUP_INSTANCE_ID(v);
				v2f o;
				UNITY_INITIALIZE_OUTPUT(v2f,o);
				UNITY_TRANSFER_INSTANCE_ID(v,o);
				UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);

				v = ApplyMeshModification(v);
				TVEModelData Data16_g117033 = (TVEModelData)0;
				half Dummy181_g117031 = ( _LandscapeCategory + _LandscapeEnd + _LandscapeInfo );
				float In_Dummy16_g117033 = Dummy181_g117031;
				TVEModelData Data16_g114320 = (TVEModelData)0;
				half Dummy207_g114306 = 0.0;
				float In_Dummy16_g114320 = Dummy207_g114306;
				half3 PositionOS131_g114306 = v.vertex.xyz;
				float3 In_PositionOS16_g114320 = PositionOS131_g114306;
				float3 ase_worldPos = mul(unity_ObjectToWorld, float4( (v.vertex).xyz, 1 )).xyz;
				float3 vertexToFrag73_g114306 = ase_worldPos;
				half3 PositionWS122_g114306 = vertexToFrag73_g114306;
				float3 In_PositionWS16_g114320 = PositionWS122_g114306;
				float4x4 break19_g114308 = unity_ObjectToWorld;
				float3 appendResult20_g114308 = (float3(break19_g114308[ 0 ][ 3 ] , break19_g114308[ 1 ][ 3 ] , break19_g114308[ 2 ][ 3 ]));
				half3 ObjectData20_g114310 = appendResult20_g114308;
				half3 WorldData19_g114310 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g114310 = WorldData19_g114310;
				#else
				float3 staticSwitch14_g114310 = ObjectData20_g114310;
				#endif
				float3 temp_output_124_0_g114308 = staticSwitch14_g114310;
				float3 temp_output_239_7_g114306 = temp_output_124_0_g114308;
				half3 PivotWS121_g114306 = temp_output_239_7_g114306;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
				#else
				float3 staticSwitch204_g114306 = PositionWS122_g114306;
				#endif
				half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
				float3 In_PositionWO16_g114320 = PositionWO132_g114306;
				float3 In_PositionRawOS16_g114320 = PositionOS131_g114306;
				float3 In_PositionAddOS16_g114320 = float3( 0,0,0 );
				float3 _Vector0 = float3(0,0,0);
				half3 PivotOS149_g114306 = _Vector0;
				float3 In_PivotOS16_g114320 = PivotOS149_g114306;
				float3 In_PivotWS16_g114320 = PivotWS121_g114306;
				half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
				float3 In_PivotWO16_g114320 = PivotWO133_g114306;
				half3 NormalOS134_g114306 = v.normal;
				float3 In_NormalOS16_g114320 = NormalOS134_g114306;
				float3 ase_worldNormal = UnityObjectToWorldNormal(v.normal);
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g114306 = normalizedWorldNormal;
				float3 In_NormalWS16_g114320 = Normal_WS95_g114306;
				float3 In_NormalRawOS16_g114320 = NormalOS134_g114306;
				float3 objToWorldDir298_g114306 = normalize( mul( unity_ObjectToWorld, float4( v.normal, 0 ) ).xyz );
				half3 Normal_RawWS136_g114306 = objToWorldDir298_g114306;
				float3 In_NormalRawWS16_g114320 = Normal_RawWS136_g114306;
				half4 TangentlOS153_g114306 = v.tangent;
				float4 In_TangentOS16_g114320 = TangentlOS153_g114306;
				float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
				half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
				float3 In_ViewDirWS16_g114320 = ViewDirWS169_g114306;
				half4 VertexMasks171_g114306 = v.ase_color;
				float4 In_VertexData16_g114320 = VertexMasks171_g114306;
				float4 break33_g114319 = _object_phase_mode;
				float temp_output_30_0_g114319 = ( v.ase_color.r * break33_g114319.x );
				float temp_output_29_0_g114319 = ( v.ase_color.g * break33_g114319.y );
				float temp_output_31_0_g114319 = ( v.ase_color.b * break33_g114319.z );
				float temp_output_28_0_g114319 = ( temp_output_30_0_g114319 + temp_output_29_0_g114319 + temp_output_31_0_g114319 + ( v.ase_color.a * break33_g114319.w ) );
				float3 break243_g114306 = PivotWO133_g114306;
				float temp_output_315_0_g114306 = (frac( ( temp_output_28_0_g114319 + ( break243_g114306.x + break243_g114306.z ) ) )*2.0 + -1.0);
				float4 appendResult177_g114306 = (float4(1.0 , 1.0 , temp_output_315_0_g114306 , 1.0));
				half4 MotionMasks176_g114306 = appendResult177_g114306;
				float4 In_MotionData16_g114320 = MotionMasks176_g114306;
				half4 BoundsData254_g114306 = float4( 0,0,0,0 );
				float4 In_BoundsData16_g114320 = BoundsData254_g114306;
				float4 In_RotationData16_g114320 = float4( 0,0,0,0 );
				Data16_g114320.Dummy = In_Dummy16_g114320;
				Data16_g114320.PositionOS = In_PositionOS16_g114320;
				Data16_g114320.PositionWS = In_PositionWS16_g114320;
				Data16_g114320.PositionWO = In_PositionWO16_g114320;
				Data16_g114320.PositionRawOS = In_PositionRawOS16_g114320;
				Data16_g114320.PositionAddOS = In_PositionAddOS16_g114320;
				Data16_g114320.PivotOS = In_PivotOS16_g114320;
				Data16_g114320.PivotWS = In_PivotWS16_g114320;
				Data16_g114320.PivotWO = In_PivotWO16_g114320;
				Data16_g114320.NormalOS = In_NormalOS16_g114320;
				Data16_g114320.NormalWS = In_NormalWS16_g114320;
				Data16_g114320.NormalRawOS = In_NormalRawOS16_g114320;
				Data16_g114320.NormalRawWS = In_NormalRawWS16_g114320;
				Data16_g114320.TangentOS = In_TangentOS16_g114320;
				Data16_g114320.ViewDirWS = In_ViewDirWS16_g114320;
				Data16_g114320.VertexData = In_VertexData16_g114320;
				Data16_g114320.MotionData = In_MotionData16_g114320;
				Data16_g114320.BoundsData = In_BoundsData16_g114320;
				Data16_g114320.RotationData = In_RotationData16_g114320;
				TVEModelData Data15_g117032 = Data16_g114320;
				float Out_Dummy15_g117032 = 0;
				float3 Out_PositionOS15_g117032 = float3( 0,0,0 );
				float3 Out_PositionWS15_g117032 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117032 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g117032 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g117032 = float3( 0,0,0 );
				float3 Out_PivotOS15_g117032 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117032 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117032 = float3( 0,0,0 );
				float3 Out_NormalOS15_g117032 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117032 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g117032 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g117032 = float3( 0,0,0 );
				float4 Out_TangentOS15_g117032 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g117032 = float3( 0,0,0 );
				float4 Out_VertexData15_g117032 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g117032 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117032 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g117032 = float4( 0,0,0,0 );
				Out_Dummy15_g117032 = Data15_g117032.Dummy;
				Out_PositionOS15_g117032 = Data15_g117032.PositionOS;
				Out_PositionWS15_g117032 = Data15_g117032.PositionWS;
				Out_PositionWO15_g117032 = Data15_g117032.PositionWO;
				Out_PositionRawOS15_g117032 = Data15_g117032.PositionRawOS;
				Out_PositionAddOS15_g117032 = Data15_g117032.PositionAddOS;
				Out_PivotOS15_g117032 = Data15_g117032.PivotOS;
				Out_PivotWS15_g117032 = Data15_g117032.PivotWS;
				Out_PivotWO15_g117032 = Data15_g117032.PivotWO;
				Out_NormalOS15_g117032 = Data15_g117032.NormalOS;
				Out_NormalWS15_g117032 = Data15_g117032.NormalWS;
				Out_NormalRawOS15_g117032 = Data15_g117032.NormalRawOS;
				Out_NormalRawWS15_g117032 = Data15_g117032.NormalRawWS;
				Out_TangentOS15_g117032 = Data15_g117032.TangentOS;
				Out_ViewDirWS15_g117032 = Data15_g117032.ViewDirWS;
				Out_VertexData15_g117032 = Data15_g117032.VertexData;
				Out_MotionData15_g117032 = Data15_g117032.MotionData;
				Out_BoundsData15_g117032 = Data15_g117032.BoundsData;
				Out_RotationData15_g117032 = Data15_g117032.RotationData;
				half3 Input_PositionOS147_g117031 = Out_PositionOS15_g117032;
				float3 break592_g117031 = Input_PositionOS147_g117031;
				float localBuildGlobalData204_g115912 = ( 0.0 );
				TVEGlobalData Data204_g115912 = (TVEGlobalData)0;
				half Dummy211_g115912 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g115912 = Dummy211_g115912;
				half4 Coat_Params302_g115912 = TVE_CoatParams;
				float4 In_CoatParams204_g115912 = Coat_Params302_g115912;
				float temp_output_82_0_g115913 = _GlobalPaintLayerValue;
				float temp_output_19_0_g115915 = TVE_PaintLayers[(int)temp_output_82_0_g115913];
				TVEModelData Data16_g114321 = (TVEModelData)0;
				float In_Dummy16_g114321 = 0.0;
				float3 In_PositionWS16_g114321 = PositionWS122_g114306;
				float3 In_PositionWO16_g114321 = PositionWO132_g114306;
				float3 In_PivotWS16_g114321 = PivotWS121_g114306;
				float3 In_PivotWO16_g114321 = PivotWO133_g114306;
				float3 In_NormalWS16_g114321 = Normal_WS95_g114306;
				float3 In_ViewDirWS16_g114321 = ViewDirWS169_g114306;
				float4 In_VertexData16_g114321 = VertexMasks171_g114306;
				float4 In_BoundsData16_g114321 = float4( 1,1,1,1 );
				Data16_g114321.Dummy = In_Dummy16_g114321;
				Data16_g114321.PositionWS = In_PositionWS16_g114321;
				Data16_g114321.PositionWO = In_PositionWO16_g114321;
				Data16_g114321.PivotWS = In_PivotWS16_g114321;
				Data16_g114321.PivotWO = In_PivotWO16_g114321;
				Data16_g114321.NormalWS = In_NormalWS16_g114321;
				Data16_g114321.ViewDirWS = In_ViewDirWS16_g114321;
				Data16_g114321.VertexData = In_VertexData16_g114321;
				Data16_g114321.BoundsData = In_BoundsData16_g114321;
				TVEModelData Data15_g115994 = Data16_g114321;
				float Out_Dummy15_g115994 = 0;
				float3 Out_PositionWS15_g115994 = float3( 0,0,0 );
				float3 Out_PositionWO15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWS15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWO15_g115994 = float3( 0,0,0 );
				float3 Out_NormalWS15_g115994 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g115994 = float3( 0,0,0 );
				float4 Out_VertexData15_g115994 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g115994 = float4( 0,0,0,0 );
				Out_Dummy15_g115994 = Data15_g115994.Dummy;
				Out_PositionWS15_g115994 = Data15_g115994.PositionWS;
				Out_PositionWO15_g115994 = Data15_g115994.PositionWO;
				Out_PivotWS15_g115994 = Data15_g115994.PivotWS;
				Out_PivotWO15_g115994 = Data15_g115994.PivotWO;
				Out_NormalWS15_g115994 = Data15_g115994.NormalWS;
				Out_ViewDirWS15_g115994 = Data15_g115994.ViewDirWS;
				Out_VertexData15_g115994 = Data15_g115994.VertexData;
				Out_BoundsData15_g115994 = Data15_g115994.BoundsData;
				half3 Model_PositionWS143_g115912 = Out_PositionWS15_g115994;
				half3 Input_Position180_g115916 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115916 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_82_0_g115916 = temp_output_82_0_g115913;
				float2 temp_output_119_0_g115916 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_7_0_g115921 = 1.0;
				float temp_output_10_0_g115921 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115921 );
				float4 lerpResult131_g115916 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115916,temp_output_82_0_g115916), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115916,temp_output_82_0_g115916), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115916 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115921 ) / temp_output_10_0_g115921 ) ));
				float4 temp_output_17_0_g115915 = lerpResult131_g115916;
				float4 temp_output_3_0_g115915 = TVE_PaintParams;
				float4 ifLocalVar18_g115915 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115915 >= 0.5 )
				ifLocalVar18_g115915 = temp_output_17_0_g115915;
				else
				ifLocalVar18_g115915 = temp_output_3_0_g115915;
				float4 lerpResult22_g115915 = lerp( temp_output_3_0_g115915 , temp_output_17_0_g115915 , temp_output_19_0_g115915);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115915 = lerpResult22_g115915;
				#else
				float4 staticSwitch24_g115915 = ifLocalVar18_g115915;
				#endif
				half4 Paint_Params71_g115912 = staticSwitch24_g115915;
				float4 In_PaintParams204_g115912 = Paint_Params71_g115912;
				float temp_output_82_0_g115931 = _GlobalGlowLayerValue;
				float temp_output_19_0_g115933 = TVE_GlowLayers[(int)temp_output_82_0_g115931];
				half3 Input_Position180_g115934 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115934 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_82_0_g115934 = temp_output_82_0_g115931;
				float2 temp_output_119_0_g115934 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_7_0_g115939 = 1.0;
				float temp_output_10_0_g115939 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115939 );
				float4 lerpResult131_g115934 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115934,temp_output_82_0_g115934), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115934,temp_output_82_0_g115934), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115934 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115939 ) / temp_output_10_0_g115939 ) ));
				float4 temp_output_17_0_g115933 = lerpResult131_g115934;
				float4 temp_output_3_0_g115933 = TVE_GlowParams;
				float4 ifLocalVar18_g115933 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115933 >= 0.5 )
				ifLocalVar18_g115933 = temp_output_17_0_g115933;
				else
				ifLocalVar18_g115933 = temp_output_3_0_g115933;
				float4 lerpResult22_g115933 = lerp( temp_output_3_0_g115933 , temp_output_17_0_g115933 , temp_output_19_0_g115933);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115933 = lerpResult22_g115933;
				#else
				float4 staticSwitch24_g115933 = ifLocalVar18_g115933;
				#endif
				half4 Glow_Params248_g115912 = staticSwitch24_g115933;
				float4 In_GlowParams204_g115912 = Glow_Params248_g115912;
				float temp_output_132_0_g115976 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g115978 = TVE_AtmoLayers[(int)temp_output_132_0_g115976];
				half3 Input_Position180_g115979 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115979 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_82_0_g115979 = temp_output_132_0_g115976;
				float2 temp_output_119_0_g115979 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_7_0_g115984 = 1.0;
				float temp_output_10_0_g115984 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115984 );
				float4 lerpResult131_g115979 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115979,temp_output_82_0_g115979), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115979,temp_output_82_0_g115979), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115979 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115984 ) / temp_output_10_0_g115984 ) ));
				float4 temp_output_17_0_g115978 = lerpResult131_g115979;
				float4 temp_output_3_0_g115978 = TVE_AtmoParams;
				float4 ifLocalVar18_g115978 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115978 >= 0.5 )
				ifLocalVar18_g115978 = temp_output_17_0_g115978;
				else
				ifLocalVar18_g115978 = temp_output_3_0_g115978;
				float4 lerpResult22_g115978 = lerp( temp_output_3_0_g115978 , temp_output_17_0_g115978 , temp_output_19_0_g115978);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115978 = lerpResult22_g115978;
				#else
				float4 staticSwitch24_g115978 = ifLocalVar18_g115978;
				#endif
				half4 Atmo_Params80_g115912 = staticSwitch24_g115978;
				float4 In_AtmoParams204_g115912 = Atmo_Params80_g115912;
				float temp_output_132_0_g115985 = _GlobalFadeLayerValue;
				float temp_output_19_0_g115987 = TVE_FadeLayers[(int)temp_output_132_0_g115985];
				half3 Input_Position180_g115988 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115988 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_82_0_g115988 = temp_output_132_0_g115985;
				float2 temp_output_119_0_g115988 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_7_0_g115993 = 1.0;
				float temp_output_10_0_g115993 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115993 );
				float4 lerpResult131_g115988 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115988,temp_output_82_0_g115988), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115988,temp_output_82_0_g115988), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115988 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115993 ) / temp_output_10_0_g115993 ) ));
				float4 temp_output_17_0_g115987 = lerpResult131_g115988;
				float4 temp_output_3_0_g115987 = TVE_FadeParams;
				float4 ifLocalVar18_g115987 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115987 >= 0.5 )
				ifLocalVar18_g115987 = temp_output_17_0_g115987;
				else
				ifLocalVar18_g115987 = temp_output_3_0_g115987;
				float4 lerpResult22_g115987 = lerp( temp_output_3_0_g115987 , temp_output_17_0_g115987 , temp_output_19_0_g115987);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115987 = lerpResult22_g115987;
				#else
				float4 staticSwitch24_g115987 = ifLocalVar18_g115987;
				#endif
				half4 Fade_Params387_g115912 = staticSwitch24_g115987;
				float4 In_FadeParams204_g115912 = Fade_Params387_g115912;
				half4 Form_Params112_g115912 = TVE_FormParams;
				float4 In_FormParams204_g115912 = Form_Params112_g115912;
				float temp_output_130_0_g115949 = _GlobalLandLayerValue;
				float temp_output_19_0_g115951 = TVE_LandLayers[(int)temp_output_130_0_g115949];
				half3 Input_Position180_g115952 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115952 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_82_0_g115952 = temp_output_130_0_g115949;
				float2 temp_output_119_0_g115952 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_7_0_g115957 = 1.0;
				float temp_output_10_0_g115957 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115957 );
				float4 lerpResult131_g115952 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115952,temp_output_82_0_g115952), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115952,temp_output_82_0_g115952), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115952 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115957 ) / temp_output_10_0_g115957 ) ));
				float4 temp_output_17_0_g115951 = lerpResult131_g115952;
				float4 temp_output_3_0_g115951 = TVE_LandParams;
				float4 ifLocalVar18_g115951 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115951 >= 0.5 )
				ifLocalVar18_g115951 = temp_output_17_0_g115951;
				else
				ifLocalVar18_g115951 = temp_output_3_0_g115951;
				float4 lerpResult22_g115951 = lerp( temp_output_3_0_g115951 , temp_output_17_0_g115951 , temp_output_19_0_g115951);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115951 = lerpResult22_g115951;
				#else
				float4 staticSwitch24_g115951 = ifLocalVar18_g115951;
				#endif
				half4 Land_Params375_g115912 = staticSwitch24_g115951;
				float4 In_LandParams204_g115912 = Land_Params375_g115912;
				half4 Wind_Params88_g115912 = TVE_WindParams;
				float4 In_WindParams204_g115912 = Wind_Params88_g115912;
				half4 Push_Params335_g115912 = TVE_PushParams;
				float4 In_PushParams204_g115912 = Push_Params335_g115912;
				Data204_g115912.Dummy = In_Dummy204_g115912;
				Data204_g115912.CoatParams = In_CoatParams204_g115912;
				Data204_g115912.PaintParams = In_PaintParams204_g115912;
				Data204_g115912.GlowParams = In_GlowParams204_g115912;
				Data204_g115912.AtmoParams = In_AtmoParams204_g115912;
				Data204_g115912.FadeParams = In_FadeParams204_g115912;
				Data204_g115912.FormParams= In_FormParams204_g115912;
				Data204_g115912.LandParams = In_LandParams204_g115912;
				Data204_g115912.WindParams = In_WindParams204_g115912;
				Data204_g115912.PushParams = In_PushParams204_g115912;
				TVEGlobalData Data15_g117034 = Data204_g115912;
				float Out_Dummy15_g117034 = 0;
				float4 Out_CoatParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g117034 = float4( 0,0,0,0 );
				Out_Dummy15_g117034 = Data15_g117034.Dummy;
				Out_CoatParams15_g117034 = Data15_g117034.CoatParams;
				Out_PaintParams15_g117034 = Data15_g117034.PaintParams;
				Out_GlowParams15_g117034 = Data15_g117034.GlowParams;
				Out_AtmoParams15_g117034= Data15_g117034.AtmoParams;
				Out_FadeParams15_g117034= Data15_g117034.FadeParams;
				Out_FormParams15_g117034 = Data15_g117034.FormParams;
				Out_LandParams15_g117034 = Data15_g117034.LandParams;
				Out_WindParams15_g117034 = Data15_g117034.WindParams;
				Out_PushParams15_g117034 = Data15_g117034.PushParams;
				half4 Input_FormParams214_g117031 = Out_LandParams15_g117034;
				float temp_output_572_0_g117031 = (Input_FormParams214_g117031).z;
				float temp_output_595_0_g117031 = ( break592_g117031.y + temp_output_572_0_g117031 );
				float lerpResult604_g117031 = lerp( break592_g117031.y , temp_output_595_0_g117031 , ( _LandscapeHeightValue * TVE_IsEnabled ));
				float3 appendResult593_g117031 = (float3(break592_g117031.x , lerpResult604_g117031 , break592_g117031.z));
				#ifdef TVE_LANDSCAPE
				float3 staticSwitch575_g117031 = appendResult593_g117031;
				#else
				float3 staticSwitch575_g117031 = Input_PositionOS147_g117031;
				#endif
				half3 Final_PositionOS580_g117031 = staticSwitch575_g117031;
				float3 In_PositionOS16_g117033 = Final_PositionOS580_g117031;
				float3 In_PositionWS16_g117033 = Out_PositionWS15_g117032;
				float3 In_PositionWO16_g117033 = Out_PositionWO15_g117032;
				float3 In_PositionRawOS16_g117033 = Out_PositionRawOS15_g117032;
				float3 In_PositionAddOS16_g117033 = Out_PositionAddOS15_g117032;
				float3 In_PivotOS16_g117033 = Out_PivotOS15_g117032;
				float3 In_PivotWS16_g117033 = Out_PivotWS15_g117032;
				float3 temp_output_481_19_g117031 = Out_PivotWO15_g117032;
				float3 In_PivotWO16_g117033 = temp_output_481_19_g117031;
				float3 temp_output_481_20_g117031 = Out_NormalOS15_g117032;
				float3 In_NormalOS16_g117033 = temp_output_481_20_g117031;
				float3 In_NormalWS16_g117033 = Out_NormalWS15_g117032;
				float3 In_NormalRawOS16_g117033 = Out_NormalRawOS15_g117032;
				float3 In_NormalRawWS16_g117033 = Out_NormalRawWS15_g117032;
				float4 In_TangentOS16_g117033 = Out_TangentOS15_g117032;
				float3 In_ViewDirWS16_g117033 = Out_ViewDirWS15_g117032;
				float4 In_VertexData16_g117033 = Out_VertexData15_g117032;
				float4 In_MotionData16_g117033 = Out_MotionData15_g117032;
				float4 In_BoundsData16_g117033 = Out_BoundsData15_g117032;
				float4 In_RotationData16_g117033 = Out_RotationData15_g117032;
				Data16_g117033.Dummy = In_Dummy16_g117033;
				Data16_g117033.PositionOS = In_PositionOS16_g117033;
				Data16_g117033.PositionWS = In_PositionWS16_g117033;
				Data16_g117033.PositionWO = In_PositionWO16_g117033;
				Data16_g117033.PositionRawOS = In_PositionRawOS16_g117033;
				Data16_g117033.PositionAddOS = In_PositionAddOS16_g117033;
				Data16_g117033.PivotOS = In_PivotOS16_g117033;
				Data16_g117033.PivotWS = In_PivotWS16_g117033;
				Data16_g117033.PivotWO = In_PivotWO16_g117033;
				Data16_g117033.NormalOS = In_NormalOS16_g117033;
				Data16_g117033.NormalWS = In_NormalWS16_g117033;
				Data16_g117033.NormalRawOS = In_NormalRawOS16_g117033;
				Data16_g117033.NormalRawWS = In_NormalRawWS16_g117033;
				Data16_g117033.TangentOS = In_TangentOS16_g117033;
				Data16_g117033.ViewDirWS = In_ViewDirWS16_g117033;
				Data16_g117033.VertexData = In_VertexData16_g117033;
				Data16_g117033.MotionData = In_MotionData16_g117033;
				Data16_g117033.BoundsData = In_BoundsData16_g117033;
				Data16_g117033.RotationData = In_RotationData16_g117033;
				TVEModelData Data15_g117040 = Data16_g117033;
				float Out_Dummy15_g117040 = 0;
				float3 Out_PositionOS15_g117040 = float3( 0,0,0 );
				float3 Out_PositionWS15_g117040 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117040 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g117040 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g117040 = float3( 0,0,0 );
				float3 Out_PivotOS15_g117040 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117040 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117040 = float3( 0,0,0 );
				float3 Out_NormalOS15_g117040 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117040 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g117040 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g117040 = float3( 0,0,0 );
				float4 Out_TangentOS15_g117040 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g117040 = float3( 0,0,0 );
				float4 Out_VertexData15_g117040 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g117040 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117040 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g117040 = float4( 0,0,0,0 );
				Out_Dummy15_g117040 = Data15_g117040.Dummy;
				Out_PositionOS15_g117040 = Data15_g117040.PositionOS;
				Out_PositionWS15_g117040 = Data15_g117040.PositionWS;
				Out_PositionWO15_g117040 = Data15_g117040.PositionWO;
				Out_PositionRawOS15_g117040 = Data15_g117040.PositionRawOS;
				Out_PositionAddOS15_g117040 = Data15_g117040.PositionAddOS;
				Out_PivotOS15_g117040 = Data15_g117040.PivotOS;
				Out_PivotWS15_g117040 = Data15_g117040.PivotWS;
				Out_PivotWO15_g117040 = Data15_g117040.PivotWO;
				Out_NormalOS15_g117040 = Data15_g117040.NormalOS;
				Out_NormalWS15_g117040 = Data15_g117040.NormalWS;
				Out_NormalRawOS15_g117040 = Data15_g117040.NormalRawOS;
				Out_NormalRawWS15_g117040 = Data15_g117040.NormalRawWS;
				Out_TangentOS15_g117040 = Data15_g117040.TangentOS;
				Out_ViewDirWS15_g117040 = Data15_g117040.ViewDirWS;
				Out_VertexData15_g117040 = Data15_g117040.VertexData;
				Out_MotionData15_g117040 = Data15_g117040.MotionData;
				Out_BoundsData15_g117040 = Data15_g117040.BoundsData;
				Out_RotationData15_g117040 = Data15_g117040.RotationData;
				float3 temp_output_31_0_g117038 = Out_PositionOS15_g117040;
				
				o.ase_texcoord9.xyz = vertexToFrag73_g114306;
				
				o.ase_color = v.ase_color;
				o.ase_texcoord10 = v.ase_texcoord;
				
				//setting value to unused interpolator channels and avoid initialization warnings
				o.ase_texcoord9.w = 0;
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					float3 defaultVertexValue = v.vertex.xyz;
				#else
					float3 defaultVertexValue = float3(0, 0, 0);
				#endif
				float3 vertexValue = temp_output_31_0_g117038;
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					v.vertex.xyz = vertexValue;
				#else
					v.vertex.xyz += vertexValue;
				#endif
				v.vertex.w = 1;
				v.normal = Out_NormalOS15_g117040;
				v.tangent = Out_TangentOS15_g117040;

				o.pos = UnityObjectToClipPos(v.vertex);
				float3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;
				fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);
				fixed3 worldTangent = UnityObjectToWorldDir(v.tangent.xyz);
				fixed tangentSign = v.tangent.w * unity_WorldTransformParams.w;
				fixed3 worldBinormal = cross(worldNormal, worldTangent) * tangentSign;
				o.tSpace0 = float4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);
				o.tSpace1 = float4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);
				o.tSpace2 = float4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);

				#if UNITY_VERSION >= 201810 && defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					UNITY_TRANSFER_LIGHTING(o, v.texcoord1.xy);
				#elif defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					#if UNITY_VERSION >= 201710
						UNITY_TRANSFER_SHADOW(o, v.texcoord1.xy);
					#else
						TRANSFER_SHADOW(o);
					#endif
				#endif

				#ifdef ASE_FOG
					UNITY_TRANSFER_FOG(o,o.pos);
				#endif
				#if defined(ASE_NEEDS_FRAG_SCREEN_POSITION)
					o.screenPos = ComputeScreenPos(o.pos);
				#endif
				return o;
			}

			#if defined(ASE_TESSELLATION)
			struct VertexControl
			{
				float4 vertex : INTERNALTESSPOS;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;

				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct TessellationFactors
			{
				float edge[3] : SV_TessFactor;
				float inside : SV_InsideTessFactor;
			};

			VertexControl vert ( appdata v )
			{
				VertexControl o;
				UNITY_SETUP_INSTANCE_ID(v);
				UNITY_TRANSFER_INSTANCE_ID(v, o);
				o.vertex = v.vertex;
				o.tangent = v.tangent;
				o.normal = v.normal;
				o.texcoord1 = v.texcoord1;
				o.texcoord2 = v.texcoord2;
				o.ase_color = v.ase_color;
				o.ase_texcoord = v.ase_texcoord;
				return o;
			}

			TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
			{
				TessellationFactors o;
				float4 tf = 1;
				float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
				float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
				#if defined(ASE_FIXED_TESSELLATION)
				tf = FixedTess( tessValue );
				#elif defined(ASE_DISTANCE_TESSELLATION)
				tf = DistanceBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, tessValue, tessMin, tessMax, UNITY_MATRIX_M, _WorldSpaceCameraPos );
				#elif defined(ASE_LENGTH_TESSELLATION)
				tf = EdgeLengthBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams );
				#elif defined(ASE_LENGTH_CULL_TESSELLATION)
				tf = EdgeLengthBasedTessCull(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, tessMaxDisp, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams, unity_CameraWorldClipPlanes );
				#endif
				o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
				return o;
			}

			[domain("tri")]
			[partitioning("fractional_odd")]
			[outputtopology("triangle_cw")]
			[patchconstantfunc("TessellationFunction")]
			[outputcontrolpoints(3)]
			VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
			{
			   return patch[id];
			}

			[domain("tri")]
			v2f DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
			{
				appdata o = (appdata) 0;
				o.vertex = patch[0].vertex * bary.x + patch[1].vertex * bary.y + patch[2].vertex * bary.z;
				o.tangent = patch[0].tangent * bary.x + patch[1].tangent * bary.y + patch[2].tangent * bary.z;
				o.normal = patch[0].normal * bary.x + patch[1].normal * bary.y + patch[2].normal * bary.z;
				o.texcoord1 = patch[0].texcoord1 * bary.x + patch[1].texcoord1 * bary.y + patch[2].texcoord1 * bary.z;
				o.texcoord2 = patch[0].texcoord2 * bary.x + patch[1].texcoord2 * bary.y + patch[2].texcoord2 * bary.z;
				o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
				o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
				#if defined(ASE_PHONG_TESSELLATION)
				float3 pp[3];
				for (int i = 0; i < 3; ++i)
					pp[i] = o.vertex.xyz - patch[i].normal * (dot(o.vertex.xyz, patch[i].normal) - dot(patch[i].vertex.xyz, patch[i].normal));
				float phongStrength = _TessPhongStrength;
				o.vertex.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.vertex.xyz;
				#endif
				UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
				return VertexFunction(o);
			}
			#else
			v2f vert ( appdata v )
			{
				return VertexFunction( v );
			}
			#endif

			fixed4 frag ( v2f IN 
				#ifdef _DEPTHOFFSET_ON
				, out float outputDepth : SV_Depth
				#endif
				) : SV_Target
			{
				UNITY_SETUP_INSTANCE_ID(IN);

				#ifdef LOD_FADE_CROSSFADE
					UNITY_APPLY_DITHER_CROSSFADE(IN.pos.xy);
				#endif

				#if defined(ASE_LIGHTING_SIMPLE)
					SurfaceOutput o = (SurfaceOutput)0;
				#else
					#if defined(_SPECULAR_SETUP)
						SurfaceOutputStandardSpecular o = (SurfaceOutputStandardSpecular)0;
					#else
						SurfaceOutputStandard o = (SurfaceOutputStandard)0;
					#endif
				#endif

				float3 WorldTangent = float3(IN.tSpace0.x,IN.tSpace1.x,IN.tSpace2.x);
				float3 WorldBiTangent = float3(IN.tSpace0.y,IN.tSpace1.y,IN.tSpace2.y);
				float3 WorldNormal = float3(IN.tSpace0.z,IN.tSpace1.z,IN.tSpace2.z);
				float3 worldPos = float3(IN.tSpace0.w,IN.tSpace1.w,IN.tSpace2.w);
				float3 worldViewDir = normalize(UnityWorldSpaceViewDir(worldPos));
				#if defined(ASE_NEEDS_FRAG_SHADOWCOORDS)
					UNITY_LIGHT_ATTENUATION(atten, IN, worldPos)
				#else
					half atten = 1;
				#endif
				#if defined(ASE_NEEDS_FRAG_SCREEN_POSITION)
				float4 ScreenPos = IN.screenPos;
				#endif


				float localBreakData4_g117042 = ( 0.0 );
				float localCompData3_g117019 = ( 0.0 );
				TVEVisualData Data3_g117019 = (TVEVisualData)0;
				half Dummy594_g117018 = ( _CutoutCategory + _CutoutEnd + _CutoutElementMode + _CutoutBakeInfo );
				float In_Dummy3_g117019 = Dummy594_g117018;
				float localBreakData4_g117029 = ( 0.0 );
				float localCompData3_g117013 = ( 0.0 );
				TVEVisualData Data3_g117013 = (TVEVisualData)0;
				half Dummy145_g117003 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveElementMode + _EmissiveFlagMode );
				float In_Dummy3_g117013 = Dummy145_g117003;
				float localBreakData4_g117012 = ( 0.0 );
				float localCompData3_g116976 = ( 0.0 );
				TVEVisualData Data3_g116976 = (TVEVisualData)0;
				half Dummy594_g116974 = ( _WetnessCategory + _WetnessEnd + _WetnessElementMode + _WetnessBakeInfo );
				float In_Dummy3_g116976 = Dummy594_g116974;
				float localBreakData4_g116975 = ( 0.0 );
				float localCompData3_g116941 = ( 0.0 );
				TVEVisualData Data3_g116941 = (TVEVisualData)0;
				half Dummy594_g116938 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayElementMode + _OverlayBakeInfo );
				float In_Dummy3_g116941 = Dummy594_g116938;
				float localBreakData4_g116939 = ( 0.0 );
				float localCompData3_g116918 = ( 0.0 );
				TVEVisualData Data3_g116918 = (TVEVisualData)0;
				half Dummy205_g116915 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessElementMode + _DrynessBakeInfo );
				float In_Dummy3_g116918 = Dummy205_g116915;
				float localBreakData4_g116917 = ( 0.0 );
				float localCompData3_g116912 = ( 0.0 );
				TVEVisualData Data3_g116912 = (TVEVisualData)0;
				half Dummy205_g116891 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeInfo );
				float In_Dummy3_g116912 = Dummy205_g116891;
				float localBreakData4_g116913 = ( 0.0 );
				float localCompData3_g116778 = ( 0.0 );
				TVEVisualData Data3_g116778 = (TVEVisualData)0;
				half Dummy9163_g116777 = ( _CategoryTerrain + _EndTerrain );
				float In_Dummy3_g116778 = Dummy9163_g116777;
				float localHeightBasedBlending7362_g116779 = ( 0.0 );
				float4 appendResult9125_g116779 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
				float4 temp_output_35_0_g116887 = appendResult9125_g116779;
				float2 InputScale48_g116887 = (temp_output_35_0_g116887).zw;
				half2 FinalScale53_g116887 = ( 1.0 / InputScale48_g116887 );
				float2 InputPosition52_g116887 = (temp_output_35_0_g116887).xy;
				half2 FinalPosition58_g116887 = -( FinalScale53_g116887 * InputPosition52_g116887 );
				float2 temp_output_65_0_g116887 = ( ( (worldPos).xz * FinalScale53_g116887 ) + FinalPosition58_g116887 );
				float4 temp_output_70_0_g116887 = _TerrainControlTex1_TexelSize;
				float2 InputTexelSize68_g116887 = (temp_output_70_0_g116887).zw;
				float2 temp_cast_0 = (1.0).xx;
				float2 InputTexelRecip69_g116887 = (temp_output_70_0_g116887).xy;
				float2 Terrain_Control_UV7873_g116779 = ( ( ( temp_output_65_0_g116887 / ( 1.0 / ( InputTexelSize68_g116887 - temp_cast_0 ) ) ) + 0.5 ) * InputTexelRecip69_g116887 );
				half4 Terrain_Control_047365_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_047362_g116779 = Terrain_Control_047365_g116779;
				half4 Terrain_Control_087366_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_087362_g116779 = Terrain_Control_087366_g116779;
				half4 Terrain_Control_127712_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_127362_g116779 = Terrain_Control_127712_g116779;
				half4 Terrain_Control_167711_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_167362_g116779 = Terrain_Control_167711_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116824) = _TerrainShaderTex1;
				float localFilterTexture30_g116885 = ( 0.0 );
				SamplerState SamplerDefault30_g116885 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g116885 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g116885 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g116885 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g116885 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g116885 = SamplerDefault30_g116885;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g116885 = SamplerDefault30_g116885;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g116885 = SamplerPoint30_g116885;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g116885 = SamplerLow30_g116885;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g116885 = SamplerMedium30_g116885;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g116885 = SamplerHigh30_g116885;
				#endif
				SamplerState Sampler238_g116824 = SS30_g116885;
				half4 Input_Terrain_Coords_016785_g116779 = _TerrainCoord1;
				float4 temp_output_37_0_g116824 = Input_Terrain_Coords_016785_g116779;
				half4 Coords238_g116824 = temp_output_37_0_g116824;
				half3 Input_Position9197_g116779 = worldPos;
				float3 temp_output_279_0_g116824 = Input_Position9197_g116779;
				half3 WorldPosition238_g116824 = temp_output_279_0_g116824;
				half4 localSamplePlanar2D238_g116824 = SamplePlanar2D( Texture238_g116824 , Sampler238_g116824 , Coords238_g116824 , WorldPosition238_g116824 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116824) = _TerrainShaderTex1;
				SamplerState Sampler246_g116824 = SS30_g116885;
				half4 Coords246_g116824 = temp_output_37_0_g116824;
				half3 WorldPosition246_g116824 = temp_output_279_0_g116824;
				half3 Input_Normal9199_g116779 = WorldNormal;
				float3 temp_output_280_0_g116824 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116824 = temp_output_280_0_g116824;
				half4 localSamplePlanar3D246_g116824 = SamplePlanar3D( Texture246_g116824 , Sampler246_g116824 , Coords246_g116824 , WorldPosition246_g116824 , WorldNormal246_g116824 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116824) = _TerrainShaderTex1;
				SamplerState Sampler234_g116824 = SS30_g116885;
				float4 Coords234_g116824 = temp_output_37_0_g116824;
				float3 WorldPosition234_g116824 = temp_output_279_0_g116824;
				float4 localSampleStochastic2D234_g116824 = SampleStochastic2D( Texture234_g116824 , Sampler234_g116824 , Coords234_g116824 , WorldPosition234_g116824 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116824) = _TerrainShaderTex1;
				SamplerState Sampler263_g116824 = SS30_g116885;
				half4 Coords263_g116824 = temp_output_37_0_g116824;
				half3 WorldPosition263_g116824 = temp_output_279_0_g116824;
				half3 WorldNormal263_g116824 = temp_output_280_0_g116824;
				half4 localSampleStochastic3D263_g116824 = SampleStochastic3D( Texture263_g116824 , Sampler263_g116824 , Coords263_g116824 , WorldPosition263_g116824 , WorldNormal263_g116824 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8639_g116779 = localSamplePlanar2D238_g116824;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8639_g116779 = localSamplePlanar3D246_g116824;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8639_g116779 = localSampleStochastic2D234_g116824;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8639_g116779 = localSampleStochastic3D263_g116824;
				#else
				float4 staticSwitch8639_g116779 = localSamplePlanar2D238_g116824;
				#endif
				float4 temp_output_7_0_g116781 = _TerrainShaderMin1;
				float4 temp_output_10_0_g116781 = ( _TerrainShaderMax1 - temp_output_7_0_g116781 );
				float4 temp_output_6970_0_g116779 = saturate( ( ( staticSwitch8639_g116779 - temp_output_7_0_g116781 ) / ( temp_output_10_0_g116781 + 0.0001 ) ) );
				half4 Masks_015_g116785 = temp_output_6970_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116828) = _TerrainShaderTex2;
				SamplerState Sampler238_g116828 = SS30_g116885;
				half4 Input_Terrain_Coords_026787_g116779 = _TerrainCoord2;
				float4 temp_output_37_0_g116828 = Input_Terrain_Coords_026787_g116779;
				half4 Coords238_g116828 = temp_output_37_0_g116828;
				float3 temp_output_279_0_g116828 = Input_Position9197_g116779;
				half3 WorldPosition238_g116828 = temp_output_279_0_g116828;
				half4 localSamplePlanar2D238_g116828 = SamplePlanar2D( Texture238_g116828 , Sampler238_g116828 , Coords238_g116828 , WorldPosition238_g116828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116828) = _TerrainShaderTex2;
				SamplerState Sampler246_g116828 = SS30_g116885;
				half4 Coords246_g116828 = temp_output_37_0_g116828;
				half3 WorldPosition246_g116828 = temp_output_279_0_g116828;
				float3 temp_output_280_0_g116828 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116828 = temp_output_280_0_g116828;
				half4 localSamplePlanar3D246_g116828 = SamplePlanar3D( Texture246_g116828 , Sampler246_g116828 , Coords246_g116828 , WorldPosition246_g116828 , WorldNormal246_g116828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116828) = _TerrainShaderTex2;
				SamplerState Sampler234_g116828 = SS30_g116885;
				float4 Coords234_g116828 = temp_output_37_0_g116828;
				float3 WorldPosition234_g116828 = temp_output_279_0_g116828;
				float4 localSampleStochastic2D234_g116828 = SampleStochastic2D( Texture234_g116828 , Sampler234_g116828 , Coords234_g116828 , WorldPosition234_g116828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116828) = _TerrainShaderTex2;
				SamplerState Sampler263_g116828 = SS30_g116885;
				half4 Coords263_g116828 = temp_output_37_0_g116828;
				half3 WorldPosition263_g116828 = temp_output_279_0_g116828;
				half3 WorldNormal263_g116828 = temp_output_280_0_g116828;
				half4 localSampleStochastic3D263_g116828 = SampleStochastic3D( Texture263_g116828 , Sampler263_g116828 , Coords263_g116828 , WorldPosition263_g116828 , WorldNormal263_g116828 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8640_g116779 = localSamplePlanar2D238_g116828;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8640_g116779 = localSamplePlanar3D246_g116828;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8640_g116779 = localSampleStochastic2D234_g116828;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8640_g116779 = localSampleStochastic3D263_g116828;
				#else
				float4 staticSwitch8640_g116779 = localSamplePlanar2D238_g116828;
				#endif
				float4 temp_output_7_0_g116791 = _TerrainShaderMin2;
				float4 temp_output_10_0_g116791 = ( _TerrainShaderMax2 - temp_output_7_0_g116791 );
				float4 temp_output_6977_0_g116779 = saturate( ( ( staticSwitch8640_g116779 - temp_output_7_0_g116791 ) / ( temp_output_10_0_g116791 + 0.0001 ) ) );
				half4 Masks_0210_g116785 = temp_output_6977_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116833) = _TerrainShaderTex3;
				SamplerState Sampler238_g116833 = SS30_g116885;
				half4 Input_Terrain_Coords_036789_g116779 = _TerrainCoord3;
				float4 temp_output_37_0_g116833 = Input_Terrain_Coords_036789_g116779;
				half4 Coords238_g116833 = temp_output_37_0_g116833;
				float3 temp_output_279_0_g116833 = Input_Position9197_g116779;
				half3 WorldPosition238_g116833 = temp_output_279_0_g116833;
				half4 localSamplePlanar2D238_g116833 = SamplePlanar2D( Texture238_g116833 , Sampler238_g116833 , Coords238_g116833 , WorldPosition238_g116833 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116833) = _TerrainShaderTex3;
				SamplerState Sampler246_g116833 = SS30_g116885;
				half4 Coords246_g116833 = temp_output_37_0_g116833;
				half3 WorldPosition246_g116833 = temp_output_279_0_g116833;
				float3 temp_output_280_0_g116833 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116833 = temp_output_280_0_g116833;
				half4 localSamplePlanar3D246_g116833 = SamplePlanar3D( Texture246_g116833 , Sampler246_g116833 , Coords246_g116833 , WorldPosition246_g116833 , WorldNormal246_g116833 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116833) = _TerrainShaderTex3;
				SamplerState Sampler234_g116833 = SS30_g116885;
				float4 Coords234_g116833 = temp_output_37_0_g116833;
				float3 WorldPosition234_g116833 = temp_output_279_0_g116833;
				float4 localSampleStochastic2D234_g116833 = SampleStochastic2D( Texture234_g116833 , Sampler234_g116833 , Coords234_g116833 , WorldPosition234_g116833 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116833) = _TerrainShaderTex3;
				SamplerState Sampler263_g116833 = SS30_g116885;
				half4 Coords263_g116833 = temp_output_37_0_g116833;
				half3 WorldPosition263_g116833 = temp_output_279_0_g116833;
				half3 WorldNormal263_g116833 = temp_output_280_0_g116833;
				half4 localSampleStochastic3D263_g116833 = SampleStochastic3D( Texture263_g116833 , Sampler263_g116833 , Coords263_g116833 , WorldPosition263_g116833 , WorldNormal263_g116833 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8641_g116779 = localSamplePlanar2D238_g116833;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8641_g116779 = localSamplePlanar3D246_g116833;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8641_g116779 = localSampleStochastic2D234_g116833;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8641_g116779 = localSampleStochastic3D263_g116833;
				#else
				float4 staticSwitch8641_g116779 = localSamplePlanar2D238_g116833;
				#endif
				float4 temp_output_7_0_g116792 = _TerrainShaderMin3;
				float4 temp_output_10_0_g116792 = ( _TerrainShaderMax3 - temp_output_7_0_g116792 );
				float4 temp_output_6978_0_g116779 = saturate( ( ( staticSwitch8641_g116779 - temp_output_7_0_g116792 ) / ( temp_output_10_0_g116792 + 0.0001 ) ) );
				half4 Masks_0312_g116785 = temp_output_6978_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116834) = _TerrainShaderTex4;
				SamplerState Sampler238_g116834 = SS30_g116885;
				half4 Input_Terrain_Coords_046791_g116779 = _TerrainCoord4;
				float4 temp_output_37_0_g116834 = Input_Terrain_Coords_046791_g116779;
				half4 Coords238_g116834 = temp_output_37_0_g116834;
				float3 temp_output_279_0_g116834 = Input_Position9197_g116779;
				half3 WorldPosition238_g116834 = temp_output_279_0_g116834;
				half4 localSamplePlanar2D238_g116834 = SamplePlanar2D( Texture238_g116834 , Sampler238_g116834 , Coords238_g116834 , WorldPosition238_g116834 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116834) = _TerrainShaderTex4;
				SamplerState Sampler246_g116834 = SS30_g116885;
				half4 Coords246_g116834 = temp_output_37_0_g116834;
				half3 WorldPosition246_g116834 = temp_output_279_0_g116834;
				float3 temp_output_280_0_g116834 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116834 = temp_output_280_0_g116834;
				half4 localSamplePlanar3D246_g116834 = SamplePlanar3D( Texture246_g116834 , Sampler246_g116834 , Coords246_g116834 , WorldPosition246_g116834 , WorldNormal246_g116834 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116834) = _TerrainShaderTex4;
				SamplerState Sampler234_g116834 = SS30_g116885;
				float4 Coords234_g116834 = temp_output_37_0_g116834;
				float3 WorldPosition234_g116834 = temp_output_279_0_g116834;
				float4 localSampleStochastic2D234_g116834 = SampleStochastic2D( Texture234_g116834 , Sampler234_g116834 , Coords234_g116834 , WorldPosition234_g116834 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116834) = _TerrainShaderTex4;
				SamplerState Sampler263_g116834 = SS30_g116885;
				half4 Coords263_g116834 = temp_output_37_0_g116834;
				half3 WorldPosition263_g116834 = temp_output_279_0_g116834;
				half3 WorldNormal263_g116834 = temp_output_280_0_g116834;
				half4 localSampleStochastic3D263_g116834 = SampleStochastic3D( Texture263_g116834 , Sampler263_g116834 , Coords263_g116834 , WorldPosition263_g116834 , WorldNormal263_g116834 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8642_g116779 = localSamplePlanar2D238_g116834;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8642_g116779 = localSamplePlanar3D246_g116834;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8642_g116779 = localSampleStochastic2D234_g116834;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8642_g116779 = localSampleStochastic3D263_g116834;
				#else
				float4 staticSwitch8642_g116779 = localSamplePlanar2D238_g116834;
				#endif
				float4 temp_output_7_0_g116793 = _TerrainShaderMin4;
				float4 temp_output_10_0_g116793 = ( _TerrainShaderMax4 - temp_output_7_0_g116793 );
				float4 temp_output_6983_0_g116779 = saturate( ( ( staticSwitch8642_g116779 - temp_output_7_0_g116793 ) / ( temp_output_10_0_g116793 + 0.0001 ) ) );
				half4 Masks_0414_g116785 = temp_output_6983_0_g116779;
				float4 appendResult29_g116785 = (float4((Masks_015_g116785).z , (Masks_0210_g116785).z , (Masks_0312_g116785).z , (Masks_0414_g116785).z));
				half4 Control31_g116785 = Terrain_Control_047365_g116779;
				half4 Terrain_Height_047210_g116779 = ( appendResult29_g116785 * Control31_g116785 );
				float4 heights_047362_g116779 = Terrain_Height_047210_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116837) = _TerrainShaderTex5;
				SamplerState Sampler238_g116837 = SS30_g116885;
				half4 Input_Terrain_Coords_058750_g116779 = _TerrainCoord5;
				float4 temp_output_37_0_g116837 = Input_Terrain_Coords_058750_g116779;
				half4 Coords238_g116837 = temp_output_37_0_g116837;
				float3 temp_output_279_0_g116837 = Input_Position9197_g116779;
				half3 WorldPosition238_g116837 = temp_output_279_0_g116837;
				half4 localSamplePlanar2D238_g116837 = SamplePlanar2D( Texture238_g116837 , Sampler238_g116837 , Coords238_g116837 , WorldPosition238_g116837 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116837) = _TerrainShaderTex5;
				SamplerState Sampler246_g116837 = SS30_g116885;
				half4 Coords246_g116837 = temp_output_37_0_g116837;
				half3 WorldPosition246_g116837 = temp_output_279_0_g116837;
				float3 temp_output_280_0_g116837 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116837 = temp_output_280_0_g116837;
				half4 localSamplePlanar3D246_g116837 = SamplePlanar3D( Texture246_g116837 , Sampler246_g116837 , Coords246_g116837 , WorldPosition246_g116837 , WorldNormal246_g116837 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116837) = _TerrainShaderTex5;
				SamplerState Sampler234_g116837 = SS30_g116885;
				float4 Coords234_g116837 = temp_output_37_0_g116837;
				float3 WorldPosition234_g116837 = temp_output_279_0_g116837;
				float4 localSampleStochastic2D234_g116837 = SampleStochastic2D( Texture234_g116837 , Sampler234_g116837 , Coords234_g116837 , WorldPosition234_g116837 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116837) = _TerrainShaderTex5;
				SamplerState Sampler263_g116837 = SS30_g116885;
				half4 Coords263_g116837 = temp_output_37_0_g116837;
				half3 WorldPosition263_g116837 = temp_output_279_0_g116837;
				half3 WorldNormal263_g116837 = temp_output_280_0_g116837;
				half4 localSampleStochastic3D263_g116837 = SampleStochastic3D( Texture263_g116837 , Sampler263_g116837 , Coords263_g116837 , WorldPosition263_g116837 , WorldNormal263_g116837 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8710_g116779 = localSamplePlanar2D238_g116837;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8710_g116779 = localSamplePlanar3D246_g116837;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8710_g116779 = localSampleStochastic2D234_g116837;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8710_g116779 = localSampleStochastic3D263_g116837;
				#else
				float4 staticSwitch8710_g116779 = localSamplePlanar2D238_g116837;
				#endif
				float4 temp_output_7_0_g116796 = _TerrainShaderMin5;
				float4 temp_output_10_0_g116796 = ( _TerrainShaderMax5 - temp_output_7_0_g116796 );
				float4 temp_output_8714_0_g116779 = saturate( ( ( staticSwitch8710_g116779 - temp_output_7_0_g116796 ) / ( temp_output_10_0_g116796 + 0.0001 ) ) );
				half4 Masks_015_g116797 = temp_output_8714_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116868) = _TerrainShaderTex6;
				SamplerState Sampler238_g116868 = SS30_g116885;
				half4 Input_Terrain_Coords_068751_g116779 = _TerrainCoord6;
				float4 temp_output_37_0_g116868 = Input_Terrain_Coords_068751_g116779;
				half4 Coords238_g116868 = temp_output_37_0_g116868;
				float3 temp_output_279_0_g116868 = Input_Position9197_g116779;
				half3 WorldPosition238_g116868 = temp_output_279_0_g116868;
				half4 localSamplePlanar2D238_g116868 = SamplePlanar2D( Texture238_g116868 , Sampler238_g116868 , Coords238_g116868 , WorldPosition238_g116868 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116868) = _TerrainShaderTex6;
				SamplerState Sampler246_g116868 = SS30_g116885;
				half4 Coords246_g116868 = temp_output_37_0_g116868;
				half3 WorldPosition246_g116868 = temp_output_279_0_g116868;
				float3 temp_output_280_0_g116868 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116868 = temp_output_280_0_g116868;
				half4 localSamplePlanar3D246_g116868 = SamplePlanar3D( Texture246_g116868 , Sampler246_g116868 , Coords246_g116868 , WorldPosition246_g116868 , WorldNormal246_g116868 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116868) = _TerrainShaderTex6;
				SamplerState Sampler234_g116868 = SS30_g116885;
				float4 Coords234_g116868 = temp_output_37_0_g116868;
				float3 WorldPosition234_g116868 = temp_output_279_0_g116868;
				float4 localSampleStochastic2D234_g116868 = SampleStochastic2D( Texture234_g116868 , Sampler234_g116868 , Coords234_g116868 , WorldPosition234_g116868 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116868) = _TerrainShaderTex6;
				SamplerState Sampler263_g116868 = SS30_g116885;
				half4 Coords263_g116868 = temp_output_37_0_g116868;
				half3 WorldPosition263_g116868 = temp_output_279_0_g116868;
				half3 WorldNormal263_g116868 = temp_output_280_0_g116868;
				half4 localSampleStochastic3D263_g116868 = SampleStochastic3D( Texture263_g116868 , Sampler263_g116868 , Coords263_g116868 , WorldPosition263_g116868 , WorldNormal263_g116868 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8711_g116779 = localSamplePlanar2D238_g116868;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8711_g116779 = localSamplePlanar3D246_g116868;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8711_g116779 = localSampleStochastic2D234_g116868;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8711_g116779 = localSampleStochastic3D263_g116868;
				#else
				float4 staticSwitch8711_g116779 = localSamplePlanar2D238_g116868;
				#endif
				float4 temp_output_7_0_g116821 = _TerrainShaderMin6;
				float4 temp_output_10_0_g116821 = ( _TerrainShaderMax6 - temp_output_7_0_g116821 );
				float4 temp_output_8721_0_g116779 = saturate( ( ( staticSwitch8711_g116779 - temp_output_7_0_g116821 ) / ( temp_output_10_0_g116821 + 0.0001 ) ) );
				half4 Masks_0210_g116797 = temp_output_8721_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116869) = _TerrainShaderTex7;
				SamplerState Sampler238_g116869 = SS30_g116885;
				half4 Input_Terrain_Coords_078752_g116779 = _TerrainCoord7;
				float4 temp_output_37_0_g116869 = Input_Terrain_Coords_078752_g116779;
				half4 Coords238_g116869 = temp_output_37_0_g116869;
				float3 temp_output_279_0_g116869 = Input_Position9197_g116779;
				half3 WorldPosition238_g116869 = temp_output_279_0_g116869;
				half4 localSamplePlanar2D238_g116869 = SamplePlanar2D( Texture238_g116869 , Sampler238_g116869 , Coords238_g116869 , WorldPosition238_g116869 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116869) = _TerrainShaderTex7;
				SamplerState Sampler246_g116869 = SS30_g116885;
				half4 Coords246_g116869 = temp_output_37_0_g116869;
				half3 WorldPosition246_g116869 = temp_output_279_0_g116869;
				float3 temp_output_280_0_g116869 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116869 = temp_output_280_0_g116869;
				half4 localSamplePlanar3D246_g116869 = SamplePlanar3D( Texture246_g116869 , Sampler246_g116869 , Coords246_g116869 , WorldPosition246_g116869 , WorldNormal246_g116869 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116869) = _TerrainShaderTex7;
				SamplerState Sampler234_g116869 = SS30_g116885;
				float4 Coords234_g116869 = temp_output_37_0_g116869;
				float3 WorldPosition234_g116869 = temp_output_279_0_g116869;
				float4 localSampleStochastic2D234_g116869 = SampleStochastic2D( Texture234_g116869 , Sampler234_g116869 , Coords234_g116869 , WorldPosition234_g116869 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116869) = _TerrainShaderTex7;
				SamplerState Sampler263_g116869 = SS30_g116885;
				half4 Coords263_g116869 = temp_output_37_0_g116869;
				half3 WorldPosition263_g116869 = temp_output_279_0_g116869;
				half3 WorldNormal263_g116869 = temp_output_280_0_g116869;
				half4 localSampleStochastic3D263_g116869 = SampleStochastic3D( Texture263_g116869 , Sampler263_g116869 , Coords263_g116869 , WorldPosition263_g116869 , WorldNormal263_g116869 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8712_g116779 = localSamplePlanar2D238_g116869;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8712_g116779 = localSamplePlanar3D246_g116869;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8712_g116779 = localSampleStochastic2D234_g116869;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8712_g116779 = localSampleStochastic3D263_g116869;
				#else
				float4 staticSwitch8712_g116779 = localSamplePlanar2D238_g116869;
				#endif
				float4 temp_output_7_0_g116822 = _TerrainShaderMin7;
				float4 temp_output_10_0_g116822 = ( _TerrainShaderMax7 - temp_output_7_0_g116822 );
				float4 temp_output_8724_0_g116779 = saturate( ( ( staticSwitch8712_g116779 - temp_output_7_0_g116822 ) / ( temp_output_10_0_g116822 + 0.0001 ) ) );
				half4 Masks_0312_g116797 = temp_output_8724_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116870) = _TerrainShaderTex8;
				SamplerState Sampler238_g116870 = SS30_g116885;
				half4 Input_Terrain_Coords_088749_g116779 = _TerrainCoord8;
				float4 temp_output_37_0_g116870 = Input_Terrain_Coords_088749_g116779;
				half4 Coords238_g116870 = temp_output_37_0_g116870;
				float3 temp_output_279_0_g116870 = Input_Position9197_g116779;
				half3 WorldPosition238_g116870 = temp_output_279_0_g116870;
				half4 localSamplePlanar2D238_g116870 = SamplePlanar2D( Texture238_g116870 , Sampler238_g116870 , Coords238_g116870 , WorldPosition238_g116870 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116870) = _TerrainShaderTex8;
				SamplerState Sampler246_g116870 = SS30_g116885;
				half4 Coords246_g116870 = temp_output_37_0_g116870;
				half3 WorldPosition246_g116870 = temp_output_279_0_g116870;
				float3 temp_output_280_0_g116870 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116870 = temp_output_280_0_g116870;
				half4 localSamplePlanar3D246_g116870 = SamplePlanar3D( Texture246_g116870 , Sampler246_g116870 , Coords246_g116870 , WorldPosition246_g116870 , WorldNormal246_g116870 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116870) = _TerrainShaderTex8;
				SamplerState Sampler234_g116870 = SS30_g116885;
				float4 Coords234_g116870 = temp_output_37_0_g116870;
				float3 WorldPosition234_g116870 = temp_output_279_0_g116870;
				float4 localSampleStochastic2D234_g116870 = SampleStochastic2D( Texture234_g116870 , Sampler234_g116870 , Coords234_g116870 , WorldPosition234_g116870 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116870) = _TerrainShaderTex8;
				SamplerState Sampler263_g116870 = SS30_g116885;
				half4 Coords263_g116870 = temp_output_37_0_g116870;
				half3 WorldPosition263_g116870 = temp_output_279_0_g116870;
				half3 WorldNormal263_g116870 = temp_output_280_0_g116870;
				half4 localSampleStochastic3D263_g116870 = SampleStochastic3D( Texture263_g116870 , Sampler263_g116870 , Coords263_g116870 , WorldPosition263_g116870 , WorldNormal263_g116870 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8713_g116779 = localSamplePlanar2D238_g116870;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8713_g116779 = localSamplePlanar3D246_g116870;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8713_g116779 = localSampleStochastic2D234_g116870;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8713_g116779 = localSampleStochastic3D263_g116870;
				#else
				float4 staticSwitch8713_g116779 = localSamplePlanar2D238_g116870;
				#endif
				float4 temp_output_7_0_g116823 = _TerrainShaderMin8;
				float4 temp_output_10_0_g116823 = ( _TerrainShaderMax8 - temp_output_7_0_g116823 );
				float4 temp_output_8727_0_g116779 = saturate( ( ( staticSwitch8713_g116779 - temp_output_7_0_g116823 ) / ( temp_output_10_0_g116823 + 0.0001 ) ) );
				half4 Masks_0414_g116797 = temp_output_8727_0_g116779;
				float4 appendResult29_g116797 = (float4((Masks_015_g116797).z , (Masks_0210_g116797).z , (Masks_0312_g116797).z , (Masks_0414_g116797).z));
				half4 Control31_g116797 = Terrain_Control_087366_g116779;
				half4 Terrain_Height_088731_g116779 = ( appendResult29_g116797 * Control31_g116797 );
				float4 heights_087362_g116779 = Terrain_Height_088731_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116840) = _TerrainShaderTex9;
				SamplerState Sampler238_g116840 = SS30_g116885;
				half4 Input_Terrain_Coords_098833_g116779 = _TerrainCoord9;
				float4 temp_output_37_0_g116840 = Input_Terrain_Coords_098833_g116779;
				half4 Coords238_g116840 = temp_output_37_0_g116840;
				float3 temp_output_279_0_g116840 = Input_Position9197_g116779;
				half3 WorldPosition238_g116840 = temp_output_279_0_g116840;
				half4 localSamplePlanar2D238_g116840 = SamplePlanar2D( Texture238_g116840 , Sampler238_g116840 , Coords238_g116840 , WorldPosition238_g116840 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116840) = _TerrainShaderTex9;
				SamplerState Sampler246_g116840 = SS30_g116885;
				half4 Coords246_g116840 = temp_output_37_0_g116840;
				half3 WorldPosition246_g116840 = temp_output_279_0_g116840;
				float3 temp_output_280_0_g116840 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116840 = temp_output_280_0_g116840;
				half4 localSamplePlanar3D246_g116840 = SamplePlanar3D( Texture246_g116840 , Sampler246_g116840 , Coords246_g116840 , WorldPosition246_g116840 , WorldNormal246_g116840 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116840) = _TerrainShaderTex9;
				SamplerState Sampler234_g116840 = SS30_g116885;
				float4 Coords234_g116840 = temp_output_37_0_g116840;
				float3 WorldPosition234_g116840 = temp_output_279_0_g116840;
				float4 localSampleStochastic2D234_g116840 = SampleStochastic2D( Texture234_g116840 , Sampler234_g116840 , Coords234_g116840 , WorldPosition234_g116840 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116840) = _TerrainShaderTex9;
				SamplerState Sampler263_g116840 = SS30_g116885;
				half4 Coords263_g116840 = temp_output_37_0_g116840;
				half3 WorldPosition263_g116840 = temp_output_279_0_g116840;
				half3 WorldNormal263_g116840 = temp_output_280_0_g116840;
				half4 localSampleStochastic3D263_g116840 = SampleStochastic3D( Texture263_g116840 , Sampler263_g116840 , Coords263_g116840 , WorldPosition263_g116840 , WorldNormal263_g116840 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8878_g116779 = localSamplePlanar2D238_g116840;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8878_g116779 = localSamplePlanar3D246_g116840;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8878_g116779 = localSampleStochastic2D234_g116840;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8878_g116779 = localSampleStochastic3D263_g116840;
				#else
				float4 staticSwitch8878_g116779 = localSamplePlanar2D238_g116840;
				#endif
				float4 temp_output_7_0_g116803 = _TerrainShaderMin9;
				float4 temp_output_10_0_g116803 = ( _TerrainShaderMax9 - temp_output_7_0_g116803 );
				float4 temp_output_8815_0_g116779 = saturate( ( ( staticSwitch8878_g116779 - temp_output_7_0_g116803 ) / ( temp_output_10_0_g116803 + 0.0001 ) ) );
				half4 Masks_015_g116804 = temp_output_8815_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116850) = _TerrainShaderTex10;
				SamplerState Sampler238_g116850 = SS30_g116885;
				half4 Input_Terrain_Coords_108834_g116779 = _TerrainCoord10;
				float4 temp_output_37_0_g116850 = Input_Terrain_Coords_108834_g116779;
				half4 Coords238_g116850 = temp_output_37_0_g116850;
				float3 temp_output_279_0_g116850 = Input_Position9197_g116779;
				half3 WorldPosition238_g116850 = temp_output_279_0_g116850;
				half4 localSamplePlanar2D238_g116850 = SamplePlanar2D( Texture238_g116850 , Sampler238_g116850 , Coords238_g116850 , WorldPosition238_g116850 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116850) = _TerrainShaderTex10;
				SamplerState Sampler246_g116850 = SS30_g116885;
				half4 Coords246_g116850 = temp_output_37_0_g116850;
				half3 WorldPosition246_g116850 = temp_output_279_0_g116850;
				float3 temp_output_280_0_g116850 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116850 = temp_output_280_0_g116850;
				half4 localSamplePlanar3D246_g116850 = SamplePlanar3D( Texture246_g116850 , Sampler246_g116850 , Coords246_g116850 , WorldPosition246_g116850 , WorldNormal246_g116850 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116850) = _TerrainShaderTex10;
				SamplerState Sampler234_g116850 = SS30_g116885;
				float4 Coords234_g116850 = temp_output_37_0_g116850;
				float3 WorldPosition234_g116850 = temp_output_279_0_g116850;
				float4 localSampleStochastic2D234_g116850 = SampleStochastic2D( Texture234_g116850 , Sampler234_g116850 , Coords234_g116850 , WorldPosition234_g116850 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116850) = _TerrainShaderTex10;
				SamplerState Sampler263_g116850 = SS30_g116885;
				half4 Coords263_g116850 = temp_output_37_0_g116850;
				half3 WorldPosition263_g116850 = temp_output_279_0_g116850;
				half3 WorldNormal263_g116850 = temp_output_280_0_g116850;
				half4 localSampleStochastic3D263_g116850 = SampleStochastic3D( Texture263_g116850 , Sampler263_g116850 , Coords263_g116850 , WorldPosition263_g116850 , WorldNormal263_g116850 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8860_g116779 = localSamplePlanar2D238_g116850;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8860_g116779 = localSamplePlanar3D246_g116850;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8860_g116779 = localSampleStochastic2D234_g116850;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8860_g116779 = localSampleStochastic3D263_g116850;
				#else
				float4 staticSwitch8860_g116779 = localSamplePlanar2D238_g116850;
				#endif
				float4 temp_output_7_0_g116815 = _TerrainShaderMin10;
				float4 temp_output_10_0_g116815 = ( _TerrainShaderMax10 - temp_output_7_0_g116815 );
				float4 temp_output_8818_0_g116779 = saturate( ( ( staticSwitch8860_g116779 - temp_output_7_0_g116815 ) / ( temp_output_10_0_g116815 + 0.0001 ) ) );
				half4 Masks_0210_g116804 = temp_output_8818_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116851) = _TerrainShaderTex11;
				SamplerState Sampler238_g116851 = SS30_g116885;
				half4 Input_Terrain_Coords_118835_g116779 = _TerrainCoord11;
				float4 temp_output_37_0_g116851 = Input_Terrain_Coords_118835_g116779;
				half4 Coords238_g116851 = temp_output_37_0_g116851;
				float3 temp_output_279_0_g116851 = Input_Position9197_g116779;
				half3 WorldPosition238_g116851 = temp_output_279_0_g116851;
				half4 localSamplePlanar2D238_g116851 = SamplePlanar2D( Texture238_g116851 , Sampler238_g116851 , Coords238_g116851 , WorldPosition238_g116851 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116851) = _TerrainShaderTex11;
				SamplerState Sampler246_g116851 = SS30_g116885;
				half4 Coords246_g116851 = temp_output_37_0_g116851;
				half3 WorldPosition246_g116851 = temp_output_279_0_g116851;
				float3 temp_output_280_0_g116851 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116851 = temp_output_280_0_g116851;
				half4 localSamplePlanar3D246_g116851 = SamplePlanar3D( Texture246_g116851 , Sampler246_g116851 , Coords246_g116851 , WorldPosition246_g116851 , WorldNormal246_g116851 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116851) = _TerrainShaderTex11;
				SamplerState Sampler234_g116851 = SS30_g116885;
				float4 Coords234_g116851 = temp_output_37_0_g116851;
				float3 WorldPosition234_g116851 = temp_output_279_0_g116851;
				float4 localSampleStochastic2D234_g116851 = SampleStochastic2D( Texture234_g116851 , Sampler234_g116851 , Coords234_g116851 , WorldPosition234_g116851 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116851) = _TerrainShaderTex11;
				SamplerState Sampler263_g116851 = SS30_g116885;
				half4 Coords263_g116851 = temp_output_37_0_g116851;
				half3 WorldPosition263_g116851 = temp_output_279_0_g116851;
				half3 WorldNormal263_g116851 = temp_output_280_0_g116851;
				half4 localSampleStochastic3D263_g116851 = SampleStochastic3D( Texture263_g116851 , Sampler263_g116851 , Coords263_g116851 , WorldPosition263_g116851 , WorldNormal263_g116851 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8861_g116779 = localSamplePlanar2D238_g116851;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8861_g116779 = localSamplePlanar3D246_g116851;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8861_g116779 = localSampleStochastic2D234_g116851;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8861_g116779 = localSampleStochastic3D263_g116851;
				#else
				float4 staticSwitch8861_g116779 = localSamplePlanar2D238_g116851;
				#endif
				float4 temp_output_7_0_g116816 = _TerrainShaderMin11;
				float4 temp_output_10_0_g116816 = ( _TerrainShaderMax11 - temp_output_7_0_g116816 );
				float4 temp_output_8819_0_g116779 = saturate( ( ( staticSwitch8861_g116779 - temp_output_7_0_g116816 ) / ( temp_output_10_0_g116816 + 0.0001 ) ) );
				half4 Masks_0312_g116804 = temp_output_8819_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116852) = _TerrainShaderTex12;
				SamplerState Sampler238_g116852 = SS30_g116885;
				half4 Input_Terrain_Coords_128836_g116779 = _TerrainCoord12;
				float4 temp_output_37_0_g116852 = Input_Terrain_Coords_128836_g116779;
				half4 Coords238_g116852 = temp_output_37_0_g116852;
				float3 temp_output_279_0_g116852 = Input_Position9197_g116779;
				half3 WorldPosition238_g116852 = temp_output_279_0_g116852;
				half4 localSamplePlanar2D238_g116852 = SamplePlanar2D( Texture238_g116852 , Sampler238_g116852 , Coords238_g116852 , WorldPosition238_g116852 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116852) = _TerrainShaderTex12;
				SamplerState Sampler246_g116852 = SS30_g116885;
				half4 Coords246_g116852 = temp_output_37_0_g116852;
				half3 WorldPosition246_g116852 = temp_output_279_0_g116852;
				float3 temp_output_280_0_g116852 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116852 = temp_output_280_0_g116852;
				half4 localSamplePlanar3D246_g116852 = SamplePlanar3D( Texture246_g116852 , Sampler246_g116852 , Coords246_g116852 , WorldPosition246_g116852 , WorldNormal246_g116852 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116852) = _TerrainShaderTex12;
				SamplerState Sampler234_g116852 = SS30_g116885;
				float4 Coords234_g116852 = temp_output_37_0_g116852;
				float3 WorldPosition234_g116852 = temp_output_279_0_g116852;
				float4 localSampleStochastic2D234_g116852 = SampleStochastic2D( Texture234_g116852 , Sampler234_g116852 , Coords234_g116852 , WorldPosition234_g116852 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116852) = _TerrainShaderTex12;
				SamplerState Sampler263_g116852 = SS30_g116885;
				half4 Coords263_g116852 = temp_output_37_0_g116852;
				half3 WorldPosition263_g116852 = temp_output_279_0_g116852;
				half3 WorldNormal263_g116852 = temp_output_280_0_g116852;
				half4 localSampleStochastic3D263_g116852 = SampleStochastic3D( Texture263_g116852 , Sampler263_g116852 , Coords263_g116852 , WorldPosition263_g116852 , WorldNormal263_g116852 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8879_g116779 = localSamplePlanar2D238_g116852;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8879_g116779 = localSamplePlanar3D246_g116852;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8879_g116779 = localSampleStochastic2D234_g116852;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8879_g116779 = localSampleStochastic3D263_g116852;
				#else
				float4 staticSwitch8879_g116779 = localSamplePlanar2D238_g116852;
				#endif
				float4 temp_output_7_0_g116817 = _TerrainShaderMin12;
				float4 temp_output_10_0_g116817 = ( _TerrainShaderMax12 - temp_output_7_0_g116817 );
				float4 temp_output_8820_0_g116779 = saturate( ( ( staticSwitch8879_g116779 - temp_output_7_0_g116817 ) / ( temp_output_10_0_g116817 + 0.0001 ) ) );
				half4 Masks_0414_g116804 = temp_output_8820_0_g116779;
				float4 appendResult29_g116804 = (float4((Masks_015_g116804).z , (Masks_0210_g116804).z , (Masks_0312_g116804).z , (Masks_0414_g116804).z));
				half4 Control31_g116804 = Terrain_Control_127712_g116779;
				half4 Terrain_Height_128870_g116779 = ( appendResult29_g116804 * Control31_g116804 );
				float4 heights_127362_g116779 = Terrain_Height_128870_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116848) = _TerrainShaderTex13;
				SamplerState Sampler238_g116848 = SS30_g116885;
				half4 Input_Terrain_Coords_138960_g116779 = _TerrainCoord13;
				float4 temp_output_37_0_g116848 = Input_Terrain_Coords_138960_g116779;
				half4 Coords238_g116848 = temp_output_37_0_g116848;
				float3 temp_output_279_0_g116848 = Input_Position9197_g116779;
				half3 WorldPosition238_g116848 = temp_output_279_0_g116848;
				half4 localSamplePlanar2D238_g116848 = SamplePlanar2D( Texture238_g116848 , Sampler238_g116848 , Coords238_g116848 , WorldPosition238_g116848 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116848) = _TerrainShaderTex13;
				SamplerState Sampler246_g116848 = SS30_g116885;
				half4 Coords246_g116848 = temp_output_37_0_g116848;
				half3 WorldPosition246_g116848 = temp_output_279_0_g116848;
				float3 temp_output_280_0_g116848 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116848 = temp_output_280_0_g116848;
				half4 localSamplePlanar3D246_g116848 = SamplePlanar3D( Texture246_g116848 , Sampler246_g116848 , Coords246_g116848 , WorldPosition246_g116848 , WorldNormal246_g116848 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116848) = _TerrainShaderTex13;
				SamplerState Sampler234_g116848 = SS30_g116885;
				float4 Coords234_g116848 = temp_output_37_0_g116848;
				float3 WorldPosition234_g116848 = temp_output_279_0_g116848;
				float4 localSampleStochastic2D234_g116848 = SampleStochastic2D( Texture234_g116848 , Sampler234_g116848 , Coords234_g116848 , WorldPosition234_g116848 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116848) = _TerrainShaderTex13;
				SamplerState Sampler263_g116848 = SS30_g116885;
				half4 Coords263_g116848 = temp_output_37_0_g116848;
				half3 WorldPosition263_g116848 = temp_output_279_0_g116848;
				half3 WorldNormal263_g116848 = temp_output_280_0_g116848;
				half4 localSampleStochastic3D263_g116848 = SampleStochastic3D( Texture263_g116848 , Sampler263_g116848 , Coords263_g116848 , WorldPosition263_g116848 , WorldNormal263_g116848 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch9000_g116779 = localSamplePlanar2D238_g116848;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch9000_g116779 = localSamplePlanar3D246_g116848;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch9000_g116779 = localSampleStochastic2D234_g116848;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch9000_g116779 = localSampleStochastic3D263_g116848;
				#else
				float4 staticSwitch9000_g116779 = localSamplePlanar2D238_g116848;
				#endif
				float4 temp_output_7_0_g116810 = _TerrainShaderMin13;
				float4 temp_output_10_0_g116810 = ( _TerrainShaderMax13 - temp_output_7_0_g116810 );
				float4 temp_output_8931_0_g116779 = saturate( ( ( staticSwitch9000_g116779 - temp_output_7_0_g116810 ) / ( temp_output_10_0_g116810 + 0.0001 ) ) );
				half4 Masks_015_g116811 = temp_output_8931_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116859) = _TerrainShaderTex14;
				SamplerState Sampler238_g116859 = SS30_g116885;
				half4 Input_Terrain_Coords_148961_g116779 = _TerrainCoord14;
				float4 temp_output_37_0_g116859 = Input_Terrain_Coords_148961_g116779;
				half4 Coords238_g116859 = temp_output_37_0_g116859;
				float3 temp_output_279_0_g116859 = Input_Position9197_g116779;
				half3 WorldPosition238_g116859 = temp_output_279_0_g116859;
				half4 localSamplePlanar2D238_g116859 = SamplePlanar2D( Texture238_g116859 , Sampler238_g116859 , Coords238_g116859 , WorldPosition238_g116859 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116859) = _TerrainShaderTex14;
				SamplerState Sampler246_g116859 = SS30_g116885;
				half4 Coords246_g116859 = temp_output_37_0_g116859;
				half3 WorldPosition246_g116859 = temp_output_279_0_g116859;
				float3 temp_output_280_0_g116859 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116859 = temp_output_280_0_g116859;
				half4 localSamplePlanar3D246_g116859 = SamplePlanar3D( Texture246_g116859 , Sampler246_g116859 , Coords246_g116859 , WorldPosition246_g116859 , WorldNormal246_g116859 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116859) = _TerrainShaderTex14;
				SamplerState Sampler234_g116859 = SS30_g116885;
				float4 Coords234_g116859 = temp_output_37_0_g116859;
				float3 WorldPosition234_g116859 = temp_output_279_0_g116859;
				float4 localSampleStochastic2D234_g116859 = SampleStochastic2D( Texture234_g116859 , Sampler234_g116859 , Coords234_g116859 , WorldPosition234_g116859 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116859) = _TerrainShaderTex14;
				SamplerState Sampler263_g116859 = SS30_g116885;
				half4 Coords263_g116859 = temp_output_37_0_g116859;
				half3 WorldPosition263_g116859 = temp_output_279_0_g116859;
				half3 WorldNormal263_g116859 = temp_output_280_0_g116859;
				half4 localSampleStochastic3D263_g116859 = SampleStochastic3D( Texture263_g116859 , Sampler263_g116859 , Coords263_g116859 , WorldPosition263_g116859 , WorldNormal263_g116859 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch9001_g116779 = localSamplePlanar2D238_g116859;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch9001_g116779 = localSamplePlanar3D246_g116859;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch9001_g116779 = localSampleStochastic2D234_g116859;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch9001_g116779 = localSampleStochastic3D263_g116859;
				#else
				float4 staticSwitch9001_g116779 = localSamplePlanar2D238_g116859;
				#endif
				float4 temp_output_7_0_g116818 = _TerrainShaderMin14;
				float4 temp_output_10_0_g116818 = ( _TerrainShaderMax14 - temp_output_7_0_g116818 );
				float4 temp_output_8934_0_g116779 = saturate( ( ( staticSwitch9001_g116779 - temp_output_7_0_g116818 ) / ( temp_output_10_0_g116818 + 0.0001 ) ) );
				half4 Masks_0210_g116811 = temp_output_8934_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116860) = _TerrainShaderTex15;
				SamplerState Sampler238_g116860 = SS30_g116885;
				half4 Input_Terrain_Coords_158962_g116779 = _TerrainCoord15;
				float4 temp_output_37_0_g116860 = Input_Terrain_Coords_158962_g116779;
				half4 Coords238_g116860 = temp_output_37_0_g116860;
				float3 temp_output_279_0_g116860 = Input_Position9197_g116779;
				half3 WorldPosition238_g116860 = temp_output_279_0_g116860;
				half4 localSamplePlanar2D238_g116860 = SamplePlanar2D( Texture238_g116860 , Sampler238_g116860 , Coords238_g116860 , WorldPosition238_g116860 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116860) = _TerrainShaderTex15;
				SamplerState Sampler246_g116860 = SS30_g116885;
				half4 Coords246_g116860 = temp_output_37_0_g116860;
				half3 WorldPosition246_g116860 = temp_output_279_0_g116860;
				float3 temp_output_280_0_g116860 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116860 = temp_output_280_0_g116860;
				half4 localSamplePlanar3D246_g116860 = SamplePlanar3D( Texture246_g116860 , Sampler246_g116860 , Coords246_g116860 , WorldPosition246_g116860 , WorldNormal246_g116860 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116860) = _TerrainShaderTex15;
				SamplerState Sampler234_g116860 = SS30_g116885;
				float4 Coords234_g116860 = temp_output_37_0_g116860;
				float3 WorldPosition234_g116860 = temp_output_279_0_g116860;
				float4 localSampleStochastic2D234_g116860 = SampleStochastic2D( Texture234_g116860 , Sampler234_g116860 , Coords234_g116860 , WorldPosition234_g116860 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116860) = _TerrainShaderTex15;
				SamplerState Sampler263_g116860 = SS30_g116885;
				half4 Coords263_g116860 = temp_output_37_0_g116860;
				half3 WorldPosition263_g116860 = temp_output_279_0_g116860;
				half3 WorldNormal263_g116860 = temp_output_280_0_g116860;
				half4 localSampleStochastic3D263_g116860 = SampleStochastic3D( Texture263_g116860 , Sampler263_g116860 , Coords263_g116860 , WorldPosition263_g116860 , WorldNormal263_g116860 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch9002_g116779 = localSamplePlanar2D238_g116860;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch9002_g116779 = localSamplePlanar3D246_g116860;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch9002_g116779 = localSampleStochastic2D234_g116860;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch9002_g116779 = localSampleStochastic3D263_g116860;
				#else
				float4 staticSwitch9002_g116779 = localSamplePlanar2D238_g116860;
				#endif
				float4 temp_output_7_0_g116819 = _TerrainShaderMin15;
				float4 temp_output_10_0_g116819 = ( _TerrainShaderMax15 - temp_output_7_0_g116819 );
				float4 temp_output_8935_0_g116779 = saturate( ( ( staticSwitch9002_g116779 - temp_output_7_0_g116819 ) / ( temp_output_10_0_g116819 + 0.0001 ) ) );
				half4 Masks_0312_g116811 = temp_output_8935_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116861) = _TerrainShaderTex16;
				SamplerState Sampler238_g116861 = SS30_g116885;
				half4 Input_Terrain_Coords_168959_g116779 = _TerrainCoord16;
				float4 temp_output_37_0_g116861 = Input_Terrain_Coords_168959_g116779;
				half4 Coords238_g116861 = temp_output_37_0_g116861;
				float3 temp_output_279_0_g116861 = Input_Position9197_g116779;
				half3 WorldPosition238_g116861 = temp_output_279_0_g116861;
				half4 localSamplePlanar2D238_g116861 = SamplePlanar2D( Texture238_g116861 , Sampler238_g116861 , Coords238_g116861 , WorldPosition238_g116861 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116861) = _TerrainShaderTex16;
				SamplerState Sampler246_g116861 = SS30_g116885;
				half4 Coords246_g116861 = temp_output_37_0_g116861;
				half3 WorldPosition246_g116861 = temp_output_279_0_g116861;
				float3 temp_output_280_0_g116861 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116861 = temp_output_280_0_g116861;
				half4 localSamplePlanar3D246_g116861 = SamplePlanar3D( Texture246_g116861 , Sampler246_g116861 , Coords246_g116861 , WorldPosition246_g116861 , WorldNormal246_g116861 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116861) = _TerrainShaderTex16;
				SamplerState Sampler234_g116861 = SS30_g116885;
				float4 Coords234_g116861 = temp_output_37_0_g116861;
				float3 WorldPosition234_g116861 = temp_output_279_0_g116861;
				float4 localSampleStochastic2D234_g116861 = SampleStochastic2D( Texture234_g116861 , Sampler234_g116861 , Coords234_g116861 , WorldPosition234_g116861 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116861) = _TerrainShaderTex16;
				SamplerState Sampler263_g116861 = SS30_g116885;
				half4 Coords263_g116861 = temp_output_37_0_g116861;
				half3 WorldPosition263_g116861 = temp_output_279_0_g116861;
				half3 WorldNormal263_g116861 = temp_output_280_0_g116861;
				half4 localSampleStochastic3D263_g116861 = SampleStochastic3D( Texture263_g116861 , Sampler263_g116861 , Coords263_g116861 , WorldPosition263_g116861 , WorldNormal263_g116861 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch9003_g116779 = localSamplePlanar2D238_g116861;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch9003_g116779 = localSamplePlanar3D246_g116861;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch9003_g116779 = localSampleStochastic2D234_g116861;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch9003_g116779 = localSampleStochastic3D263_g116861;
				#else
				float4 staticSwitch9003_g116779 = localSamplePlanar2D238_g116861;
				#endif
				float4 temp_output_7_0_g116820 = _TerrainShaderMin16;
				float4 temp_output_10_0_g116820 = ( _TerrainShaderMax16 - temp_output_7_0_g116820 );
				float4 temp_output_8936_0_g116779 = saturate( ( ( staticSwitch9003_g116779 - temp_output_7_0_g116820 ) / ( temp_output_10_0_g116820 + 0.0001 ) ) );
				half4 Masks_0414_g116811 = temp_output_8936_0_g116779;
				float4 appendResult29_g116811 = (float4((Masks_015_g116811).z , (Masks_0210_g116811).z , (Masks_0312_g116811).z , (Masks_0414_g116811).z));
				half4 Control31_g116811 = Terrain_Control_167711_g116779;
				half4 Terrain_Height_169015_g116779 = ( appendResult29_g116811 * Control31_g116811 );
				float4 heights_167362_g116779 = Terrain_Height_169015_g116779;
				float heightTransition7362_g116779 = ( 1.0 - _TerrainHeightBlendValue );
				float4 weights_047362_g116779 = float4( 0,0,0,0 );
				float4 weights_087362_g116779 = float4( 0,0,0,0 );
				float4 weights_127362_g116779 = float4( 0,0,0,0 );
				float4 weights_167362_g116779 = float4( 0,0,0,0 );
				//Modified version of the HDRP terrain height based blending
				float maxHeight = 0;
				float4 weightedHeights_04 = float4( 0,0,0,0 );
				float4 weightedHeights_08 = float4( 0,0,0,0 );
				float4 weightedHeights_12 = float4( 0,0,0,0 );
				float4 weightedHeights_16 = float4( 0,0,0,0 );
				maxHeight = heights_047362_g116779.x;
				maxHeight = max(maxHeight, heights_047362_g116779.y);
				maxHeight = max(maxHeight, heights_047362_g116779.z);
				maxHeight = max(maxHeight, heights_047362_g116779.w);
				#ifdef TVE_TERRAIN_08
				maxHeight = max(maxHeight, heights_087362_g116779.x);
				maxHeight = max(maxHeight, heights_087362_g116779.y);
				maxHeight = max(maxHeight, heights_087362_g116779.z);
				maxHeight = max(maxHeight, heights_087362_g116779.w);
				#endif
				#ifdef TVE_TERRAIN_12
				maxHeight = max(maxHeight, heights_087362_g116779.x);
				maxHeight = max(maxHeight, heights_087362_g116779.y);
				maxHeight = max(maxHeight, heights_087362_g116779.z);
				maxHeight = max(maxHeight, heights_087362_g116779.w);
				maxHeight = max(maxHeight, heights_127362_g116779.x);
				maxHeight = max(maxHeight, heights_127362_g116779.y);
				maxHeight = max(maxHeight, heights_127362_g116779.z);
				maxHeight = max(maxHeight, heights_127362_g116779.w);
				#endif
				#ifdef TVE_TERRAIN_16
				maxHeight = max(maxHeight, heights_087362_g116779.x);
				maxHeight = max(maxHeight, heights_087362_g116779.y);
				maxHeight = max(maxHeight, heights_087362_g116779.z);
				maxHeight = max(maxHeight, heights_087362_g116779.w);
				maxHeight = max(maxHeight, heights_127362_g116779.x);
				maxHeight = max(maxHeight, heights_127362_g116779.y);
				maxHeight = max(maxHeight, heights_127362_g116779.z);
				maxHeight = max(maxHeight, heights_127362_g116779.w);
				maxHeight = max(maxHeight, heights_167362_g116779.x);
				maxHeight = max(maxHeight, heights_167362_g116779.y);
				maxHeight = max(maxHeight, heights_167362_g116779.z);
				maxHeight = max(maxHeight, heights_167362_g116779.w);
				#endif
				float transition = max(heightTransition7362_g116779, 0.01);
				weightedHeights_04 = float4 ( heights_047362_g116779.x, heights_047362_g116779.y, heights_047362_g116779.z, heights_047362_g116779.w );
				weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
				weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g116779;
				#ifdef TVE_TERRAIN_08
				weightedHeights_08 = float4 ( heights_087362_g116779.x, heights_087362_g116779.y, heights_087362_g116779.z, heights_087362_g116779.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g116779;
				#endif
				#ifdef TVE_TERRAIN_12
				weightedHeights_08 = float4 ( heights_087362_g116779.x, heights_087362_g116779.y, heights_087362_g116779.z, heights_087362_g116779.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g116779;
				weightedHeights_12 = float4 ( heights_127362_g116779.x, heights_127362_g116779.y, heights_127362_g116779.z, heights_127362_g116779.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g116779;
				#endif
				#ifdef TVE_TERRAIN_16
				weightedHeights_08 = float4 ( heights_087362_g116779.x, heights_087362_g116779.y, heights_087362_g116779.z, heights_087362_g116779.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g116779;
				weightedHeights_12 = float4 ( heights_127362_g116779.x, heights_127362_g116779.y, heights_127362_g116779.z, heights_127362_g116779.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g116779;
				weightedHeights_16 = float4 ( heights_167362_g116779.x, heights_167362_g116779.y, heights_167362_g116779.z, heights_167362_g116779.w );
				weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
				weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g116779;
				#endif
				float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
				float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
				float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
				float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
				float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
				weights_047362_g116779 = weightedHeights_04 / sumHeight.xxxx;
				#ifdef TVE_TERRAIN_08
				weights_087362_g116779 = weightedHeights_08 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_12
				weights_087362_g116779 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g116779 = weightedHeights_12 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_16
				weights_087362_g116779 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g116779 = weightedHeights_12 / sumHeight.xxxx;
				weights_167362_g116779 = weightedHeights_16 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8792_g116779 = weights_047362_g116779;
				#else
				float4 staticSwitch8792_g116779 = control_047362_g116779;
				#endif
				half4 Terrain_Weights_046781_g116779 = staticSwitch8792_g116779;
				half4 Weights52_g116784 = Terrain_Weights_046781_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116825) = _TerrainAlbedoTex1;
				float localFilterTexture19_g116882 = ( 0.0 );
				SamplerState SamplerDefault19_g116882 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g116882 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g116882 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g116882 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g116882 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g116882 = SamplerDefault19_g116882;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g116882 = SamplerDefault19_g116882;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g116882 = SamplerPoint19_g116882;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g116882 = SamplerLow19_g116882;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g116882 = SamplerMedium19_g116882;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g116882 = SamplerHigh19_g116882;
				#endif
				SamplerState Sampler238_g116825 = SS19_g116882;
				float4 temp_output_37_0_g116825 = Input_Terrain_Coords_016785_g116779;
				half4 Coords238_g116825 = temp_output_37_0_g116825;
				float3 temp_output_279_0_g116825 = Input_Position9197_g116779;
				half3 WorldPosition238_g116825 = temp_output_279_0_g116825;
				half4 localSamplePlanar2D238_g116825 = SamplePlanar2D( Texture238_g116825 , Sampler238_g116825 , Coords238_g116825 , WorldPosition238_g116825 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116825) = _TerrainAlbedoTex1;
				SamplerState Sampler246_g116825 = SS19_g116882;
				half4 Coords246_g116825 = temp_output_37_0_g116825;
				half3 WorldPosition246_g116825 = temp_output_279_0_g116825;
				float3 temp_output_280_0_g116825 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116825 = temp_output_280_0_g116825;
				half4 localSamplePlanar3D246_g116825 = SamplePlanar3D( Texture246_g116825 , Sampler246_g116825 , Coords246_g116825 , WorldPosition246_g116825 , WorldNormal246_g116825 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116825) = _TerrainAlbedoTex1;
				SamplerState Sampler234_g116825 = SS19_g116882;
				float4 Coords234_g116825 = temp_output_37_0_g116825;
				float3 WorldPosition234_g116825 = temp_output_279_0_g116825;
				float4 localSampleStochastic2D234_g116825 = SampleStochastic2D( Texture234_g116825 , Sampler234_g116825 , Coords234_g116825 , WorldPosition234_g116825 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116825) = _TerrainAlbedoTex1;
				SamplerState Sampler263_g116825 = SS19_g116882;
				half4 Coords263_g116825 = temp_output_37_0_g116825;
				half3 WorldPosition263_g116825 = temp_output_279_0_g116825;
				half3 WorldNormal263_g116825 = temp_output_280_0_g116825;
				half4 localSampleStochastic3D263_g116825 = SampleStochastic3D( Texture263_g116825 , Sampler263_g116825 , Coords263_g116825 , WorldPosition263_g116825 , WorldNormal263_g116825 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8614_g116779 = localSamplePlanar2D238_g116825;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8614_g116779 = localSamplePlanar3D246_g116825;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8614_g116779 = localSampleStochastic2D234_g116825;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8614_g116779 = localSampleStochastic3D263_g116825;
				#else
				float4 staticSwitch8614_g116779 = localSamplePlanar2D238_g116825;
				#endif
				half4 Layer133_g116784 = staticSwitch8614_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler238_g116826 = SS19_g116882;
				float4 temp_output_37_0_g116826 = Input_Terrain_Coords_026787_g116779;
				half4 Coords238_g116826 = temp_output_37_0_g116826;
				float3 temp_output_279_0_g116826 = Input_Position9197_g116779;
				half3 WorldPosition238_g116826 = temp_output_279_0_g116826;
				half4 localSamplePlanar2D238_g116826 = SamplePlanar2D( Texture238_g116826 , Sampler238_g116826 , Coords238_g116826 , WorldPosition238_g116826 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler246_g116826 = SS19_g116882;
				half4 Coords246_g116826 = temp_output_37_0_g116826;
				half3 WorldPosition246_g116826 = temp_output_279_0_g116826;
				float3 temp_output_280_0_g116826 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116826 = temp_output_280_0_g116826;
				half4 localSamplePlanar3D246_g116826 = SamplePlanar3D( Texture246_g116826 , Sampler246_g116826 , Coords246_g116826 , WorldPosition246_g116826 , WorldNormal246_g116826 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler234_g116826 = SS19_g116882;
				float4 Coords234_g116826 = temp_output_37_0_g116826;
				float3 WorldPosition234_g116826 = temp_output_279_0_g116826;
				float4 localSampleStochastic2D234_g116826 = SampleStochastic2D( Texture234_g116826 , Sampler234_g116826 , Coords234_g116826 , WorldPosition234_g116826 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler263_g116826 = SS19_g116882;
				half4 Coords263_g116826 = temp_output_37_0_g116826;
				half3 WorldPosition263_g116826 = temp_output_279_0_g116826;
				half3 WorldNormal263_g116826 = temp_output_280_0_g116826;
				half4 localSampleStochastic3D263_g116826 = SampleStochastic3D( Texture263_g116826 , Sampler263_g116826 , Coords263_g116826 , WorldPosition263_g116826 , WorldNormal263_g116826 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8629_g116779 = localSamplePlanar2D238_g116826;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8629_g116779 = localSamplePlanar3D246_g116826;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8629_g116779 = localSampleStochastic2D234_g116826;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8629_g116779 = localSampleStochastic3D263_g116826;
				#else
				float4 staticSwitch8629_g116779 = localSamplePlanar2D238_g116826;
				#endif
				half4 Layer237_g116784 = staticSwitch8629_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler238_g116829 = SS19_g116882;
				float4 temp_output_37_0_g116829 = Input_Terrain_Coords_036789_g116779;
				half4 Coords238_g116829 = temp_output_37_0_g116829;
				float3 temp_output_279_0_g116829 = Input_Position9197_g116779;
				half3 WorldPosition238_g116829 = temp_output_279_0_g116829;
				half4 localSamplePlanar2D238_g116829 = SamplePlanar2D( Texture238_g116829 , Sampler238_g116829 , Coords238_g116829 , WorldPosition238_g116829 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler246_g116829 = SS19_g116882;
				half4 Coords246_g116829 = temp_output_37_0_g116829;
				half3 WorldPosition246_g116829 = temp_output_279_0_g116829;
				float3 temp_output_280_0_g116829 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116829 = temp_output_280_0_g116829;
				half4 localSamplePlanar3D246_g116829 = SamplePlanar3D( Texture246_g116829 , Sampler246_g116829 , Coords246_g116829 , WorldPosition246_g116829 , WorldNormal246_g116829 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler234_g116829 = SS19_g116882;
				float4 Coords234_g116829 = temp_output_37_0_g116829;
				float3 WorldPosition234_g116829 = temp_output_279_0_g116829;
				float4 localSampleStochastic2D234_g116829 = SampleStochastic2D( Texture234_g116829 , Sampler234_g116829 , Coords234_g116829 , WorldPosition234_g116829 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler263_g116829 = SS19_g116882;
				half4 Coords263_g116829 = temp_output_37_0_g116829;
				half3 WorldPosition263_g116829 = temp_output_279_0_g116829;
				half3 WorldNormal263_g116829 = temp_output_280_0_g116829;
				half4 localSampleStochastic3D263_g116829 = SampleStochastic3D( Texture263_g116829 , Sampler263_g116829 , Coords263_g116829 , WorldPosition263_g116829 , WorldNormal263_g116829 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8630_g116779 = localSamplePlanar2D238_g116829;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8630_g116779 = localSamplePlanar3D246_g116829;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8630_g116779 = localSampleStochastic2D234_g116829;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8630_g116779 = localSampleStochastic3D263_g116829;
				#else
				float4 staticSwitch8630_g116779 = localSamplePlanar2D238_g116829;
				#endif
				half4 Layer338_g116784 = staticSwitch8630_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler238_g116831 = SS19_g116882;
				float4 temp_output_37_0_g116831 = Input_Terrain_Coords_046791_g116779;
				half4 Coords238_g116831 = temp_output_37_0_g116831;
				float3 temp_output_279_0_g116831 = Input_Position9197_g116779;
				half3 WorldPosition238_g116831 = temp_output_279_0_g116831;
				half4 localSamplePlanar2D238_g116831 = SamplePlanar2D( Texture238_g116831 , Sampler238_g116831 , Coords238_g116831 , WorldPosition238_g116831 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler246_g116831 = SS19_g116882;
				half4 Coords246_g116831 = temp_output_37_0_g116831;
				half3 WorldPosition246_g116831 = temp_output_279_0_g116831;
				float3 temp_output_280_0_g116831 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116831 = temp_output_280_0_g116831;
				half4 localSamplePlanar3D246_g116831 = SamplePlanar3D( Texture246_g116831 , Sampler246_g116831 , Coords246_g116831 , WorldPosition246_g116831 , WorldNormal246_g116831 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler234_g116831 = SS19_g116882;
				float4 Coords234_g116831 = temp_output_37_0_g116831;
				float3 WorldPosition234_g116831 = temp_output_279_0_g116831;
				float4 localSampleStochastic2D234_g116831 = SampleStochastic2D( Texture234_g116831 , Sampler234_g116831 , Coords234_g116831 , WorldPosition234_g116831 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler263_g116831 = SS19_g116882;
				half4 Coords263_g116831 = temp_output_37_0_g116831;
				half3 WorldPosition263_g116831 = temp_output_279_0_g116831;
				half3 WorldNormal263_g116831 = temp_output_280_0_g116831;
				half4 localSampleStochastic3D263_g116831 = SampleStochastic3D( Texture263_g116831 , Sampler263_g116831 , Coords263_g116831 , WorldPosition263_g116831 , WorldNormal263_g116831 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8631_g116779 = localSamplePlanar2D238_g116831;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8631_g116779 = localSamplePlanar3D246_g116831;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8631_g116779 = localSampleStochastic2D234_g116831;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8631_g116779 = localSampleStochastic3D263_g116831;
				#else
				float4 staticSwitch8631_g116779 = localSamplePlanar2D238_g116831;
				#endif
				half4 Layer439_g116784 = staticSwitch8631_g116779;
				float4 weightedBlendVar31_g116784 = Weights52_g116784;
				float4 weightedBlend31_g116784 = ( weightedBlendVar31_g116784.x*Layer133_g116784 + weightedBlendVar31_g116784.y*Layer237_g116784 + weightedBlendVar31_g116784.z*Layer338_g116784 + weightedBlendVar31_g116784.w*Layer439_g116784 );
				half4 Terrain_AAAA_047200_g116779 = weightedBlend31_g116784;
				half4 Layer_045_g116787 = Terrain_AAAA_047200_g116779;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8793_g116779 = weights_087362_g116779;
				#else
				float4 staticSwitch8793_g116779 = control_087362_g116779;
				#endif
				half4 Terrain_Weights_087340_g116779 = staticSwitch8793_g116779;
				half4 Weights52_g116794 = Terrain_Weights_087340_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler238_g116835 = SS19_g116882;
				float4 temp_output_37_0_g116835 = Input_Terrain_Coords_058750_g116779;
				half4 Coords238_g116835 = temp_output_37_0_g116835;
				float3 temp_output_279_0_g116835 = Input_Position9197_g116779;
				half3 WorldPosition238_g116835 = temp_output_279_0_g116835;
				half4 localSamplePlanar2D238_g116835 = SamplePlanar2D( Texture238_g116835 , Sampler238_g116835 , Coords238_g116835 , WorldPosition238_g116835 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler246_g116835 = SS19_g116882;
				half4 Coords246_g116835 = temp_output_37_0_g116835;
				half3 WorldPosition246_g116835 = temp_output_279_0_g116835;
				float3 temp_output_280_0_g116835 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116835 = temp_output_280_0_g116835;
				half4 localSamplePlanar3D246_g116835 = SamplePlanar3D( Texture246_g116835 , Sampler246_g116835 , Coords246_g116835 , WorldPosition246_g116835 , WorldNormal246_g116835 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler234_g116835 = SS19_g116882;
				float4 Coords234_g116835 = temp_output_37_0_g116835;
				float3 WorldPosition234_g116835 = temp_output_279_0_g116835;
				float4 localSampleStochastic2D234_g116835 = SampleStochastic2D( Texture234_g116835 , Sampler234_g116835 , Coords234_g116835 , WorldPosition234_g116835 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler263_g116835 = SS19_g116882;
				half4 Coords263_g116835 = temp_output_37_0_g116835;
				half3 WorldPosition263_g116835 = temp_output_279_0_g116835;
				half3 WorldNormal263_g116835 = temp_output_280_0_g116835;
				half4 localSampleStochastic3D263_g116835 = SampleStochastic3D( Texture263_g116835 , Sampler263_g116835 , Coords263_g116835 , WorldPosition263_g116835 , WorldNormal263_g116835 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8690_g116779 = localSamplePlanar2D238_g116835;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8690_g116779 = localSamplePlanar3D246_g116835;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8690_g116779 = localSampleStochastic2D234_g116835;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8690_g116779 = localSampleStochastic3D263_g116835;
				#else
				float4 staticSwitch8690_g116779 = localSamplePlanar2D238_g116835;
				#endif
				half4 Layer133_g116794 = staticSwitch8690_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler238_g116862 = SS19_g116882;
				float4 temp_output_37_0_g116862 = Input_Terrain_Coords_068751_g116779;
				half4 Coords238_g116862 = temp_output_37_0_g116862;
				float3 temp_output_279_0_g116862 = Input_Position9197_g116779;
				half3 WorldPosition238_g116862 = temp_output_279_0_g116862;
				half4 localSamplePlanar2D238_g116862 = SamplePlanar2D( Texture238_g116862 , Sampler238_g116862 , Coords238_g116862 , WorldPosition238_g116862 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler246_g116862 = SS19_g116882;
				half4 Coords246_g116862 = temp_output_37_0_g116862;
				half3 WorldPosition246_g116862 = temp_output_279_0_g116862;
				float3 temp_output_280_0_g116862 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116862 = temp_output_280_0_g116862;
				half4 localSamplePlanar3D246_g116862 = SamplePlanar3D( Texture246_g116862 , Sampler246_g116862 , Coords246_g116862 , WorldPosition246_g116862 , WorldNormal246_g116862 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler234_g116862 = SS19_g116882;
				float4 Coords234_g116862 = temp_output_37_0_g116862;
				float3 WorldPosition234_g116862 = temp_output_279_0_g116862;
				float4 localSampleStochastic2D234_g116862 = SampleStochastic2D( Texture234_g116862 , Sampler234_g116862 , Coords234_g116862 , WorldPosition234_g116862 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler263_g116862 = SS19_g116882;
				half4 Coords263_g116862 = temp_output_37_0_g116862;
				half3 WorldPosition263_g116862 = temp_output_279_0_g116862;
				half3 WorldNormal263_g116862 = temp_output_280_0_g116862;
				half4 localSampleStochastic3D263_g116862 = SampleStochastic3D( Texture263_g116862 , Sampler263_g116862 , Coords263_g116862 , WorldPosition263_g116862 , WorldNormal263_g116862 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8691_g116779 = localSamplePlanar2D238_g116862;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8691_g116779 = localSamplePlanar3D246_g116862;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8691_g116779 = localSampleStochastic2D234_g116862;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8691_g116779 = localSampleStochastic3D263_g116862;
				#else
				float4 staticSwitch8691_g116779 = localSamplePlanar2D238_g116862;
				#endif
				half4 Layer237_g116794 = staticSwitch8691_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler238_g116863 = SS19_g116882;
				float4 temp_output_37_0_g116863 = Input_Terrain_Coords_078752_g116779;
				half4 Coords238_g116863 = temp_output_37_0_g116863;
				float3 temp_output_279_0_g116863 = Input_Position9197_g116779;
				half3 WorldPosition238_g116863 = temp_output_279_0_g116863;
				half4 localSamplePlanar2D238_g116863 = SamplePlanar2D( Texture238_g116863 , Sampler238_g116863 , Coords238_g116863 , WorldPosition238_g116863 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler246_g116863 = SS19_g116882;
				half4 Coords246_g116863 = temp_output_37_0_g116863;
				half3 WorldPosition246_g116863 = temp_output_279_0_g116863;
				float3 temp_output_280_0_g116863 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116863 = temp_output_280_0_g116863;
				half4 localSamplePlanar3D246_g116863 = SamplePlanar3D( Texture246_g116863 , Sampler246_g116863 , Coords246_g116863 , WorldPosition246_g116863 , WorldNormal246_g116863 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler234_g116863 = SS19_g116882;
				float4 Coords234_g116863 = temp_output_37_0_g116863;
				float3 WorldPosition234_g116863 = temp_output_279_0_g116863;
				float4 localSampleStochastic2D234_g116863 = SampleStochastic2D( Texture234_g116863 , Sampler234_g116863 , Coords234_g116863 , WorldPosition234_g116863 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler263_g116863 = SS19_g116882;
				half4 Coords263_g116863 = temp_output_37_0_g116863;
				half3 WorldPosition263_g116863 = temp_output_279_0_g116863;
				half3 WorldNormal263_g116863 = temp_output_280_0_g116863;
				half4 localSampleStochastic3D263_g116863 = SampleStochastic3D( Texture263_g116863 , Sampler263_g116863 , Coords263_g116863 , WorldPosition263_g116863 , WorldNormal263_g116863 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8692_g116779 = localSamplePlanar2D238_g116863;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8692_g116779 = localSamplePlanar3D246_g116863;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8692_g116779 = localSampleStochastic2D234_g116863;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8692_g116779 = localSampleStochastic3D263_g116863;
				#else
				float4 staticSwitch8692_g116779 = localSamplePlanar2D238_g116863;
				#endif
				half4 Layer338_g116794 = staticSwitch8692_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler238_g116864 = SS19_g116882;
				float4 temp_output_37_0_g116864 = Input_Terrain_Coords_088749_g116779;
				half4 Coords238_g116864 = temp_output_37_0_g116864;
				float3 temp_output_279_0_g116864 = Input_Position9197_g116779;
				half3 WorldPosition238_g116864 = temp_output_279_0_g116864;
				half4 localSamplePlanar2D238_g116864 = SamplePlanar2D( Texture238_g116864 , Sampler238_g116864 , Coords238_g116864 , WorldPosition238_g116864 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler246_g116864 = SS19_g116882;
				half4 Coords246_g116864 = temp_output_37_0_g116864;
				half3 WorldPosition246_g116864 = temp_output_279_0_g116864;
				float3 temp_output_280_0_g116864 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116864 = temp_output_280_0_g116864;
				half4 localSamplePlanar3D246_g116864 = SamplePlanar3D( Texture246_g116864 , Sampler246_g116864 , Coords246_g116864 , WorldPosition246_g116864 , WorldNormal246_g116864 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler234_g116864 = SS19_g116882;
				float4 Coords234_g116864 = temp_output_37_0_g116864;
				float3 WorldPosition234_g116864 = temp_output_279_0_g116864;
				float4 localSampleStochastic2D234_g116864 = SampleStochastic2D( Texture234_g116864 , Sampler234_g116864 , Coords234_g116864 , WorldPosition234_g116864 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler263_g116864 = SS19_g116882;
				half4 Coords263_g116864 = temp_output_37_0_g116864;
				half3 WorldPosition263_g116864 = temp_output_279_0_g116864;
				half3 WorldNormal263_g116864 = temp_output_280_0_g116864;
				half4 localSampleStochastic3D263_g116864 = SampleStochastic3D( Texture263_g116864 , Sampler263_g116864 , Coords263_g116864 , WorldPosition263_g116864 , WorldNormal263_g116864 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8693_g116779 = localSamplePlanar2D238_g116864;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8693_g116779 = localSamplePlanar3D246_g116864;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8693_g116779 = localSampleStochastic2D234_g116864;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8693_g116779 = localSampleStochastic3D263_g116864;
				#else
				float4 staticSwitch8693_g116779 = localSamplePlanar2D238_g116864;
				#endif
				half4 Layer439_g116794 = staticSwitch8693_g116779;
				float4 weightedBlendVar31_g116794 = Weights52_g116794;
				float4 weightedBlend31_g116794 = ( weightedBlendVar31_g116794.x*Layer133_g116794 + weightedBlendVar31_g116794.y*Layer237_g116794 + weightedBlendVar31_g116794.z*Layer338_g116794 + weightedBlendVar31_g116794.w*Layer439_g116794 );
				half4 Terrain_AAAA_088665_g116779 = weightedBlend31_g116794;
				half4 Layer_0810_g116787 = Terrain_AAAA_088665_g116779;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8794_g116779 = weights_127362_g116779;
				#else
				float4 staticSwitch8794_g116779 = control_127362_g116779;
				#endif
				half4 Terrain_Weights_127710_g116779 = staticSwitch8794_g116779;
				half4 Weights52_g116801 = Terrain_Weights_127710_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler238_g116838 = SS19_g116882;
				float4 temp_output_37_0_g116838 = Input_Terrain_Coords_098833_g116779;
				half4 Coords238_g116838 = temp_output_37_0_g116838;
				float3 temp_output_279_0_g116838 = Input_Position9197_g116779;
				half3 WorldPosition238_g116838 = temp_output_279_0_g116838;
				half4 localSamplePlanar2D238_g116838 = SamplePlanar2D( Texture238_g116838 , Sampler238_g116838 , Coords238_g116838 , WorldPosition238_g116838 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler246_g116838 = SS19_g116882;
				half4 Coords246_g116838 = temp_output_37_0_g116838;
				half3 WorldPosition246_g116838 = temp_output_279_0_g116838;
				float3 temp_output_280_0_g116838 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116838 = temp_output_280_0_g116838;
				half4 localSamplePlanar3D246_g116838 = SamplePlanar3D( Texture246_g116838 , Sampler246_g116838 , Coords246_g116838 , WorldPosition246_g116838 , WorldNormal246_g116838 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler234_g116838 = SS19_g116882;
				float4 Coords234_g116838 = temp_output_37_0_g116838;
				float3 WorldPosition234_g116838 = temp_output_279_0_g116838;
				float4 localSampleStochastic2D234_g116838 = SampleStochastic2D( Texture234_g116838 , Sampler234_g116838 , Coords234_g116838 , WorldPosition234_g116838 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler263_g116838 = SS19_g116882;
				half4 Coords263_g116838 = temp_output_37_0_g116838;
				half3 WorldPosition263_g116838 = temp_output_279_0_g116838;
				half3 WorldNormal263_g116838 = temp_output_280_0_g116838;
				half4 localSampleStochastic3D263_g116838 = SampleStochastic3D( Texture263_g116838 , Sampler263_g116838 , Coords263_g116838 , WorldPosition263_g116838 , WorldNormal263_g116838 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8872_g116779 = localSamplePlanar2D238_g116838;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8872_g116779 = localSamplePlanar3D246_g116838;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8872_g116779 = localSampleStochastic2D234_g116838;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8872_g116779 = localSampleStochastic3D263_g116838;
				#else
				float4 staticSwitch8872_g116779 = localSamplePlanar2D238_g116838;
				#endif
				half4 Layer133_g116801 = staticSwitch8872_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler238_g116841 = SS19_g116882;
				float4 temp_output_37_0_g116841 = Input_Terrain_Coords_108834_g116779;
				half4 Coords238_g116841 = temp_output_37_0_g116841;
				float3 temp_output_279_0_g116841 = Input_Position9197_g116779;
				half3 WorldPosition238_g116841 = temp_output_279_0_g116841;
				half4 localSamplePlanar2D238_g116841 = SamplePlanar2D( Texture238_g116841 , Sampler238_g116841 , Coords238_g116841 , WorldPosition238_g116841 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler246_g116841 = SS19_g116882;
				half4 Coords246_g116841 = temp_output_37_0_g116841;
				half3 WorldPosition246_g116841 = temp_output_279_0_g116841;
				float3 temp_output_280_0_g116841 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116841 = temp_output_280_0_g116841;
				half4 localSamplePlanar3D246_g116841 = SamplePlanar3D( Texture246_g116841 , Sampler246_g116841 , Coords246_g116841 , WorldPosition246_g116841 , WorldNormal246_g116841 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler234_g116841 = SS19_g116882;
				float4 Coords234_g116841 = temp_output_37_0_g116841;
				float3 WorldPosition234_g116841 = temp_output_279_0_g116841;
				float4 localSampleStochastic2D234_g116841 = SampleStochastic2D( Texture234_g116841 , Sampler234_g116841 , Coords234_g116841 , WorldPosition234_g116841 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler263_g116841 = SS19_g116882;
				half4 Coords263_g116841 = temp_output_37_0_g116841;
				half3 WorldPosition263_g116841 = temp_output_279_0_g116841;
				half3 WorldNormal263_g116841 = temp_output_280_0_g116841;
				half4 localSampleStochastic3D263_g116841 = SampleStochastic3D( Texture263_g116841 , Sampler263_g116841 , Coords263_g116841 , WorldPosition263_g116841 , WorldNormal263_g116841 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8873_g116779 = localSamplePlanar2D238_g116841;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8873_g116779 = localSamplePlanar3D246_g116841;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8873_g116779 = localSampleStochastic2D234_g116841;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8873_g116779 = localSampleStochastic3D263_g116841;
				#else
				float4 staticSwitch8873_g116779 = localSamplePlanar2D238_g116841;
				#endif
				half4 Layer237_g116801 = staticSwitch8873_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler238_g116842 = SS19_g116882;
				float4 temp_output_37_0_g116842 = Input_Terrain_Coords_118835_g116779;
				half4 Coords238_g116842 = temp_output_37_0_g116842;
				float3 temp_output_279_0_g116842 = Input_Position9197_g116779;
				half3 WorldPosition238_g116842 = temp_output_279_0_g116842;
				half4 localSamplePlanar2D238_g116842 = SamplePlanar2D( Texture238_g116842 , Sampler238_g116842 , Coords238_g116842 , WorldPosition238_g116842 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler246_g116842 = SS19_g116882;
				half4 Coords246_g116842 = temp_output_37_0_g116842;
				half3 WorldPosition246_g116842 = temp_output_279_0_g116842;
				float3 temp_output_280_0_g116842 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116842 = temp_output_280_0_g116842;
				half4 localSamplePlanar3D246_g116842 = SamplePlanar3D( Texture246_g116842 , Sampler246_g116842 , Coords246_g116842 , WorldPosition246_g116842 , WorldNormal246_g116842 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler234_g116842 = SS19_g116882;
				float4 Coords234_g116842 = temp_output_37_0_g116842;
				float3 WorldPosition234_g116842 = temp_output_279_0_g116842;
				float4 localSampleStochastic2D234_g116842 = SampleStochastic2D( Texture234_g116842 , Sampler234_g116842 , Coords234_g116842 , WorldPosition234_g116842 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler263_g116842 = SS19_g116882;
				half4 Coords263_g116842 = temp_output_37_0_g116842;
				half3 WorldPosition263_g116842 = temp_output_279_0_g116842;
				half3 WorldNormal263_g116842 = temp_output_280_0_g116842;
				half4 localSampleStochastic3D263_g116842 = SampleStochastic3D( Texture263_g116842 , Sampler263_g116842 , Coords263_g116842 , WorldPosition263_g116842 , WorldNormal263_g116842 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8874_g116779 = localSamplePlanar2D238_g116842;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8874_g116779 = localSamplePlanar3D246_g116842;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8874_g116779 = localSampleStochastic2D234_g116842;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8874_g116779 = localSampleStochastic3D263_g116842;
				#else
				float4 staticSwitch8874_g116779 = localSamplePlanar2D238_g116842;
				#endif
				half4 Layer338_g116801 = staticSwitch8874_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler238_g116843 = SS19_g116882;
				float4 temp_output_37_0_g116843 = Input_Terrain_Coords_128836_g116779;
				half4 Coords238_g116843 = temp_output_37_0_g116843;
				float3 temp_output_279_0_g116843 = Input_Position9197_g116779;
				half3 WorldPosition238_g116843 = temp_output_279_0_g116843;
				half4 localSamplePlanar2D238_g116843 = SamplePlanar2D( Texture238_g116843 , Sampler238_g116843 , Coords238_g116843 , WorldPosition238_g116843 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler246_g116843 = SS19_g116882;
				half4 Coords246_g116843 = temp_output_37_0_g116843;
				half3 WorldPosition246_g116843 = temp_output_279_0_g116843;
				float3 temp_output_280_0_g116843 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116843 = temp_output_280_0_g116843;
				half4 localSamplePlanar3D246_g116843 = SamplePlanar3D( Texture246_g116843 , Sampler246_g116843 , Coords246_g116843 , WorldPosition246_g116843 , WorldNormal246_g116843 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler234_g116843 = SS19_g116882;
				float4 Coords234_g116843 = temp_output_37_0_g116843;
				float3 WorldPosition234_g116843 = temp_output_279_0_g116843;
				float4 localSampleStochastic2D234_g116843 = SampleStochastic2D( Texture234_g116843 , Sampler234_g116843 , Coords234_g116843 , WorldPosition234_g116843 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler263_g116843 = SS19_g116882;
				half4 Coords263_g116843 = temp_output_37_0_g116843;
				half3 WorldPosition263_g116843 = temp_output_279_0_g116843;
				half3 WorldNormal263_g116843 = temp_output_280_0_g116843;
				half4 localSampleStochastic3D263_g116843 = SampleStochastic3D( Texture263_g116843 , Sampler263_g116843 , Coords263_g116843 , WorldPosition263_g116843 , WorldNormal263_g116843 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8875_g116779 = localSamplePlanar2D238_g116843;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8875_g116779 = localSamplePlanar3D246_g116843;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8875_g116779 = localSampleStochastic2D234_g116843;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8875_g116779 = localSampleStochastic3D263_g116843;
				#else
				float4 staticSwitch8875_g116779 = localSamplePlanar2D238_g116843;
				#endif
				half4 Layer439_g116801 = staticSwitch8875_g116779;
				float4 weightedBlendVar31_g116801 = Weights52_g116801;
				float4 weightedBlend31_g116801 = ( weightedBlendVar31_g116801.x*Layer133_g116801 + weightedBlendVar31_g116801.y*Layer237_g116801 + weightedBlendVar31_g116801.z*Layer338_g116801 + weightedBlendVar31_g116801.w*Layer439_g116801 );
				half4 Terrain_AAAA_128851_g116779 = weightedBlend31_g116801;
				half4 Layer_1243_g116787 = Terrain_AAAA_128851_g116779;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8795_g116779 = weights_167362_g116779;
				#else
				float4 staticSwitch8795_g116779 = control_167362_g116779;
				#endif
				half4 Terrain_Weights_167709_g116779 = staticSwitch8795_g116779;
				half4 Weights52_g116808 = Terrain_Weights_167709_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler238_g116847 = SS19_g116882;
				float4 temp_output_37_0_g116847 = Input_Terrain_Coords_138960_g116779;
				half4 Coords238_g116847 = temp_output_37_0_g116847;
				float3 temp_output_279_0_g116847 = Input_Position9197_g116779;
				half3 WorldPosition238_g116847 = temp_output_279_0_g116847;
				half4 localSamplePlanar2D238_g116847 = SamplePlanar2D( Texture238_g116847 , Sampler238_g116847 , Coords238_g116847 , WorldPosition238_g116847 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler246_g116847 = SS19_g116882;
				half4 Coords246_g116847 = temp_output_37_0_g116847;
				half3 WorldPosition246_g116847 = temp_output_279_0_g116847;
				float3 temp_output_280_0_g116847 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116847 = temp_output_280_0_g116847;
				half4 localSamplePlanar3D246_g116847 = SamplePlanar3D( Texture246_g116847 , Sampler246_g116847 , Coords246_g116847 , WorldPosition246_g116847 , WorldNormal246_g116847 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler234_g116847 = SS19_g116882;
				float4 Coords234_g116847 = temp_output_37_0_g116847;
				float3 WorldPosition234_g116847 = temp_output_279_0_g116847;
				float4 localSampleStochastic2D234_g116847 = SampleStochastic2D( Texture234_g116847 , Sampler234_g116847 , Coords234_g116847 , WorldPosition234_g116847 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler263_g116847 = SS19_g116882;
				half4 Coords263_g116847 = temp_output_37_0_g116847;
				half3 WorldPosition263_g116847 = temp_output_279_0_g116847;
				half3 WorldNormal263_g116847 = temp_output_280_0_g116847;
				half4 localSampleStochastic3D263_g116847 = SampleStochastic3D( Texture263_g116847 , Sampler263_g116847 , Coords263_g116847 , WorldPosition263_g116847 , WorldNormal263_g116847 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8972_g116779 = localSamplePlanar2D238_g116847;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8972_g116779 = localSamplePlanar3D246_g116847;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8972_g116779 = localSampleStochastic2D234_g116847;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8972_g116779 = localSampleStochastic3D263_g116847;
				#else
				float4 staticSwitch8972_g116779 = localSamplePlanar2D238_g116847;
				#endif
				half4 Layer133_g116808 = staticSwitch8972_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler238_g116853 = SS19_g116882;
				float4 temp_output_37_0_g116853 = Input_Terrain_Coords_148961_g116779;
				half4 Coords238_g116853 = temp_output_37_0_g116853;
				float3 temp_output_279_0_g116853 = Input_Position9197_g116779;
				half3 WorldPosition238_g116853 = temp_output_279_0_g116853;
				half4 localSamplePlanar2D238_g116853 = SamplePlanar2D( Texture238_g116853 , Sampler238_g116853 , Coords238_g116853 , WorldPosition238_g116853 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler246_g116853 = SS19_g116882;
				half4 Coords246_g116853 = temp_output_37_0_g116853;
				half3 WorldPosition246_g116853 = temp_output_279_0_g116853;
				float3 temp_output_280_0_g116853 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116853 = temp_output_280_0_g116853;
				half4 localSamplePlanar3D246_g116853 = SamplePlanar3D( Texture246_g116853 , Sampler246_g116853 , Coords246_g116853 , WorldPosition246_g116853 , WorldNormal246_g116853 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler234_g116853 = SS19_g116882;
				float4 Coords234_g116853 = temp_output_37_0_g116853;
				float3 WorldPosition234_g116853 = temp_output_279_0_g116853;
				float4 localSampleStochastic2D234_g116853 = SampleStochastic2D( Texture234_g116853 , Sampler234_g116853 , Coords234_g116853 , WorldPosition234_g116853 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler263_g116853 = SS19_g116882;
				half4 Coords263_g116853 = temp_output_37_0_g116853;
				half3 WorldPosition263_g116853 = temp_output_279_0_g116853;
				half3 WorldNormal263_g116853 = temp_output_280_0_g116853;
				half4 localSampleStochastic3D263_g116853 = SampleStochastic3D( Texture263_g116853 , Sampler263_g116853 , Coords263_g116853 , WorldPosition263_g116853 , WorldNormal263_g116853 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8973_g116779 = localSamplePlanar2D238_g116853;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8973_g116779 = localSamplePlanar3D246_g116853;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8973_g116779 = localSampleStochastic2D234_g116853;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8973_g116779 = localSampleStochastic3D263_g116853;
				#else
				float4 staticSwitch8973_g116779 = localSamplePlanar2D238_g116853;
				#endif
				half4 Layer237_g116808 = staticSwitch8973_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler238_g116854 = SS19_g116882;
				float4 temp_output_37_0_g116854 = Input_Terrain_Coords_158962_g116779;
				half4 Coords238_g116854 = temp_output_37_0_g116854;
				float3 temp_output_279_0_g116854 = Input_Position9197_g116779;
				half3 WorldPosition238_g116854 = temp_output_279_0_g116854;
				half4 localSamplePlanar2D238_g116854 = SamplePlanar2D( Texture238_g116854 , Sampler238_g116854 , Coords238_g116854 , WorldPosition238_g116854 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler246_g116854 = SS19_g116882;
				half4 Coords246_g116854 = temp_output_37_0_g116854;
				half3 WorldPosition246_g116854 = temp_output_279_0_g116854;
				float3 temp_output_280_0_g116854 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116854 = temp_output_280_0_g116854;
				half4 localSamplePlanar3D246_g116854 = SamplePlanar3D( Texture246_g116854 , Sampler246_g116854 , Coords246_g116854 , WorldPosition246_g116854 , WorldNormal246_g116854 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler234_g116854 = SS19_g116882;
				float4 Coords234_g116854 = temp_output_37_0_g116854;
				float3 WorldPosition234_g116854 = temp_output_279_0_g116854;
				float4 localSampleStochastic2D234_g116854 = SampleStochastic2D( Texture234_g116854 , Sampler234_g116854 , Coords234_g116854 , WorldPosition234_g116854 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler263_g116854 = SS19_g116882;
				half4 Coords263_g116854 = temp_output_37_0_g116854;
				half3 WorldPosition263_g116854 = temp_output_279_0_g116854;
				half3 WorldNormal263_g116854 = temp_output_280_0_g116854;
				half4 localSampleStochastic3D263_g116854 = SampleStochastic3D( Texture263_g116854 , Sampler263_g116854 , Coords263_g116854 , WorldPosition263_g116854 , WorldNormal263_g116854 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8974_g116779 = localSamplePlanar2D238_g116854;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8974_g116779 = localSamplePlanar3D246_g116854;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8974_g116779 = localSampleStochastic2D234_g116854;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8974_g116779 = localSampleStochastic3D263_g116854;
				#else
				float4 staticSwitch8974_g116779 = localSamplePlanar2D238_g116854;
				#endif
				half4 Layer338_g116808 = staticSwitch8974_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler238_g116855 = SS19_g116882;
				float4 temp_output_37_0_g116855 = Input_Terrain_Coords_168959_g116779;
				half4 Coords238_g116855 = temp_output_37_0_g116855;
				float3 temp_output_279_0_g116855 = Input_Position9197_g116779;
				half3 WorldPosition238_g116855 = temp_output_279_0_g116855;
				half4 localSamplePlanar2D238_g116855 = SamplePlanar2D( Texture238_g116855 , Sampler238_g116855 , Coords238_g116855 , WorldPosition238_g116855 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler246_g116855 = SS19_g116882;
				half4 Coords246_g116855 = temp_output_37_0_g116855;
				half3 WorldPosition246_g116855 = temp_output_279_0_g116855;
				float3 temp_output_280_0_g116855 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116855 = temp_output_280_0_g116855;
				half4 localSamplePlanar3D246_g116855 = SamplePlanar3D( Texture246_g116855 , Sampler246_g116855 , Coords246_g116855 , WorldPosition246_g116855 , WorldNormal246_g116855 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler234_g116855 = SS19_g116882;
				float4 Coords234_g116855 = temp_output_37_0_g116855;
				float3 WorldPosition234_g116855 = temp_output_279_0_g116855;
				float4 localSampleStochastic2D234_g116855 = SampleStochastic2D( Texture234_g116855 , Sampler234_g116855 , Coords234_g116855 , WorldPosition234_g116855 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler263_g116855 = SS19_g116882;
				half4 Coords263_g116855 = temp_output_37_0_g116855;
				half3 WorldPosition263_g116855 = temp_output_279_0_g116855;
				half3 WorldNormal263_g116855 = temp_output_280_0_g116855;
				half4 localSampleStochastic3D263_g116855 = SampleStochastic3D( Texture263_g116855 , Sampler263_g116855 , Coords263_g116855 , WorldPosition263_g116855 , WorldNormal263_g116855 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8975_g116779 = localSamplePlanar2D238_g116855;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8975_g116779 = localSamplePlanar3D246_g116855;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8975_g116779 = localSampleStochastic2D234_g116855;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8975_g116779 = localSampleStochastic3D263_g116855;
				#else
				float4 staticSwitch8975_g116779 = localSamplePlanar2D238_g116855;
				#endif
				half4 Layer439_g116808 = staticSwitch8975_g116779;
				float4 weightedBlendVar31_g116808 = Weights52_g116808;
				float4 weightedBlend31_g116808 = ( weightedBlendVar31_g116808.x*Layer133_g116808 + weightedBlendVar31_g116808.y*Layer237_g116808 + weightedBlendVar31_g116808.z*Layer338_g116808 + weightedBlendVar31_g116808.w*Layer439_g116808 );
				half4 Terrain_AAAA_168986_g116779 = weightedBlend31_g116808;
				half4 Layer_1644_g116787 = Terrain_AAAA_168986_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116787 = Layer_045_g116787;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116787 = ( Layer_045_g116787 + Layer_0810_g116787 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116787 = ( Layer_045_g116787 + Layer_0810_g116787 + Layer_1243_g116787 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116787 = ( Layer_045_g116787 + Layer_0810_g116787 + Layer_1243_g116787 + Layer_1644_g116787 );
				#else
				float4 staticSwitch40_g116787 = Layer_045_g116787;
				#endif
				half4 Blend_Albedo7468_g116779 = staticSwitch40_g116787;
				half4 Weights52_g116873 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116873 = _TerrainColor1;
				half4 Layer237_g116873 = _TerrainColor2;
				half4 Layer338_g116873 = _TerrainColor3;
				half4 Layer439_g116873 = _TerrainColor4;
				float4 weightedBlendVar31_g116873 = Weights52_g116873;
				float4 weightedBlend31_g116873 = ( weightedBlendVar31_g116873.x*Layer133_g116873 + weightedBlendVar31_g116873.y*Layer237_g116873 + weightedBlendVar31_g116873.z*Layer338_g116873 + weightedBlendVar31_g116873.w*Layer439_g116873 );
				half4 Terrain_Color_049349_g116779 = weightedBlend31_g116873;
				half4 Layer_045_g116878 = Terrain_Color_049349_g116779;
				half4 Weights52_g116874 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116874 = _TerrainColor5;
				half4 Layer237_g116874 = _TerrainColor6;
				half4 Layer338_g116874 = _TerrainColor7;
				half4 Layer439_g116874 = _TerrainColor8;
				float4 weightedBlendVar31_g116874 = Weights52_g116874;
				float4 weightedBlend31_g116874 = ( weightedBlendVar31_g116874.x*Layer133_g116874 + weightedBlendVar31_g116874.y*Layer237_g116874 + weightedBlendVar31_g116874.z*Layer338_g116874 + weightedBlendVar31_g116874.w*Layer439_g116874 );
				half4 Terrain_Color_089361_g116779 = weightedBlend31_g116874;
				half4 Layer_0810_g116878 = Terrain_Color_089361_g116779;
				half4 Weights52_g116875 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116875 = _TerrainColor9;
				half4 Layer237_g116875 = _TerrainColor10;
				half4 Layer338_g116875 = _TerrainColor11;
				half4 Layer439_g116875 = _TerrainColor12;
				float4 weightedBlendVar31_g116875 = Weights52_g116875;
				float4 weightedBlend31_g116875 = ( weightedBlendVar31_g116875.x*Layer133_g116875 + weightedBlendVar31_g116875.y*Layer237_g116875 + weightedBlendVar31_g116875.z*Layer338_g116875 + weightedBlendVar31_g116875.w*Layer439_g116875 );
				half4 Terrain_Color_129373_g116779 = weightedBlend31_g116875;
				half4 Layer_1243_g116878 = Terrain_Color_129373_g116779;
				half4 Weights52_g116876 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116876 = _TerrainColor13;
				half4 Layer237_g116876 = _TerrainColor14;
				half4 Layer338_g116876 = _TerrainColor15;
				half4 Layer439_g116876 = _TerrainColor16;
				float4 weightedBlendVar31_g116876 = Weights52_g116876;
				float4 weightedBlend31_g116876 = ( weightedBlendVar31_g116876.x*Layer133_g116876 + weightedBlendVar31_g116876.y*Layer237_g116876 + weightedBlendVar31_g116876.z*Layer338_g116876 + weightedBlendVar31_g116876.w*Layer439_g116876 );
				half4 Terrain_Color_169381_g116779 = weightedBlend31_g116876;
				half4 Layer_1644_g116878 = Terrain_Color_169381_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116878 = Layer_045_g116878;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116878 = ( Layer_045_g116878 + Layer_0810_g116878 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116878 = ( Layer_045_g116878 + Layer_0810_g116878 + Layer_1243_g116878 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116878 = ( Layer_045_g116878 + Layer_0810_g116878 + Layer_1243_g116878 + Layer_1644_g116878 );
				#else
				float4 staticSwitch40_g116878 = Layer_045_g116878;
				#endif
				half4 Blend_TerrainColor9387_g116779 = staticSwitch40_g116878;
				half3 Final_Albedo9144_g116779 = ( (Blend_Albedo7468_g116779).xyz * (Blend_TerrainColor9387_g116779).rgb * (_TerrainColor).rgb );
				half3 Local_Albedo9199_g116777 = Final_Albedo9144_g116779;
				float3 In_Albedo3_g116778 = Local_Albedo9199_g116777;
				float3 In_AlbedoRaw3_g116778 = Local_Albedo9199_g116777;
				float3x3 ase_worldToTangent = float3x3(WorldTangent,WorldBiTangent,WorldNormal);
				half4 Weights52_g116780 = Terrain_Weights_046781_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116871) = _TerrainNormalTex1;
				float localFilterTexture29_g116886 = ( 0.0 );
				SamplerState SamplerDefault29_g116886 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g116886 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g116886 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g116886 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g116886 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g116886 = SamplerDefault29_g116886;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g116886 = SamplerDefault29_g116886;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g116886 = SamplerPoint29_g116886;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g116886 = SamplerLow29_g116886;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g116886 = SamplerMedium29_g116886;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g116886 = SamplerHigh29_g116886;
				#endif
				SamplerState Sampler238_g116871 = SS29_g116886;
				float4 temp_output_37_0_g116871 = Input_Terrain_Coords_016785_g116779;
				half4 Coords238_g116871 = temp_output_37_0_g116871;
				float3 temp_output_279_0_g116871 = Input_Position9197_g116779;
				half3 WorldPosition238_g116871 = temp_output_279_0_g116871;
				half4 localSamplePlanar2D238_g116871 = SamplePlanar2D( Texture238_g116871 , Sampler238_g116871 , Coords238_g116871 , WorldPosition238_g116871 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116871) = _TerrainNormalTex1;
				SamplerState Sampler246_g116871 = SS29_g116886;
				half4 Coords246_g116871 = temp_output_37_0_g116871;
				half3 WorldPosition246_g116871 = temp_output_279_0_g116871;
				float3 temp_output_280_0_g116871 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116871 = temp_output_280_0_g116871;
				half4 localSamplePlanar3D246_g116871 = SamplePlanar3D( Texture246_g116871 , Sampler246_g116871 , Coords246_g116871 , WorldPosition246_g116871 , WorldNormal246_g116871 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116871) = _TerrainNormalTex1;
				SamplerState Sampler234_g116871 = SS29_g116886;
				float4 Coords234_g116871 = temp_output_37_0_g116871;
				float3 WorldPosition234_g116871 = temp_output_279_0_g116871;
				float4 localSampleStochastic2D234_g116871 = SampleStochastic2D( Texture234_g116871 , Sampler234_g116871 , Coords234_g116871 , WorldPosition234_g116871 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116871) = _TerrainNormalTex1;
				SamplerState Sampler263_g116871 = SS29_g116886;
				half4 Coords263_g116871 = temp_output_37_0_g116871;
				half3 WorldPosition263_g116871 = temp_output_279_0_g116871;
				half3 WorldNormal263_g116871 = temp_output_280_0_g116871;
				half4 localSampleStochastic3D263_g116871 = SampleStochastic3D( Texture263_g116871 , Sampler263_g116871 , Coords263_g116871 , WorldPosition263_g116871 , WorldNormal263_g116871 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8635_g116779 = localSamplePlanar2D238_g116871;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8635_g116779 = localSamplePlanar3D246_g116871;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8635_g116779 = localSampleStochastic2D234_g116871;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8635_g116779 = localSampleStochastic3D263_g116871;
				#else
				float4 staticSwitch8635_g116779 = localSamplePlanar2D238_g116871;
				#endif
				half4 Layer133_g116780 = staticSwitch8635_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116827) = _TerrainNormalTex2;
				SamplerState Sampler238_g116827 = SS29_g116886;
				float4 temp_output_37_0_g116827 = Input_Terrain_Coords_026787_g116779;
				half4 Coords238_g116827 = temp_output_37_0_g116827;
				float3 temp_output_279_0_g116827 = Input_Position9197_g116779;
				half3 WorldPosition238_g116827 = temp_output_279_0_g116827;
				half4 localSamplePlanar2D238_g116827 = SamplePlanar2D( Texture238_g116827 , Sampler238_g116827 , Coords238_g116827 , WorldPosition238_g116827 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116827) = _TerrainNormalTex2;
				SamplerState Sampler246_g116827 = SS29_g116886;
				half4 Coords246_g116827 = temp_output_37_0_g116827;
				half3 WorldPosition246_g116827 = temp_output_279_0_g116827;
				float3 temp_output_280_0_g116827 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116827 = temp_output_280_0_g116827;
				half4 localSamplePlanar3D246_g116827 = SamplePlanar3D( Texture246_g116827 , Sampler246_g116827 , Coords246_g116827 , WorldPosition246_g116827 , WorldNormal246_g116827 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116827) = _TerrainNormalTex2;
				SamplerState Sampler234_g116827 = SS29_g116886;
				float4 Coords234_g116827 = temp_output_37_0_g116827;
				float3 WorldPosition234_g116827 = temp_output_279_0_g116827;
				float4 localSampleStochastic2D234_g116827 = SampleStochastic2D( Texture234_g116827 , Sampler234_g116827 , Coords234_g116827 , WorldPosition234_g116827 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116827) = _TerrainNormalTex2;
				SamplerState Sampler263_g116827 = SS29_g116886;
				half4 Coords263_g116827 = temp_output_37_0_g116827;
				half3 WorldPosition263_g116827 = temp_output_279_0_g116827;
				half3 WorldNormal263_g116827 = temp_output_280_0_g116827;
				half4 localSampleStochastic3D263_g116827 = SampleStochastic3D( Texture263_g116827 , Sampler263_g116827 , Coords263_g116827 , WorldPosition263_g116827 , WorldNormal263_g116827 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8636_g116779 = localSamplePlanar2D238_g116827;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8636_g116779 = localSamplePlanar3D246_g116827;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8636_g116779 = localSampleStochastic2D234_g116827;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8636_g116779 = localSampleStochastic3D263_g116827;
				#else
				float4 staticSwitch8636_g116779 = localSamplePlanar2D238_g116827;
				#endif
				half4 Layer237_g116780 = staticSwitch8636_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116830) = _TerrainNormalTex3;
				SamplerState Sampler238_g116830 = SS29_g116886;
				float4 temp_output_37_0_g116830 = Input_Terrain_Coords_036789_g116779;
				half4 Coords238_g116830 = temp_output_37_0_g116830;
				float3 temp_output_279_0_g116830 = Input_Position9197_g116779;
				half3 WorldPosition238_g116830 = temp_output_279_0_g116830;
				half4 localSamplePlanar2D238_g116830 = SamplePlanar2D( Texture238_g116830 , Sampler238_g116830 , Coords238_g116830 , WorldPosition238_g116830 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116830) = _TerrainNormalTex3;
				SamplerState Sampler246_g116830 = SS29_g116886;
				half4 Coords246_g116830 = temp_output_37_0_g116830;
				half3 WorldPosition246_g116830 = temp_output_279_0_g116830;
				float3 temp_output_280_0_g116830 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116830 = temp_output_280_0_g116830;
				half4 localSamplePlanar3D246_g116830 = SamplePlanar3D( Texture246_g116830 , Sampler246_g116830 , Coords246_g116830 , WorldPosition246_g116830 , WorldNormal246_g116830 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116830) = _TerrainNormalTex3;
				SamplerState Sampler234_g116830 = SS29_g116886;
				float4 Coords234_g116830 = temp_output_37_0_g116830;
				float3 WorldPosition234_g116830 = temp_output_279_0_g116830;
				float4 localSampleStochastic2D234_g116830 = SampleStochastic2D( Texture234_g116830 , Sampler234_g116830 , Coords234_g116830 , WorldPosition234_g116830 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116830) = _TerrainNormalTex3;
				SamplerState Sampler263_g116830 = SS29_g116886;
				half4 Coords263_g116830 = temp_output_37_0_g116830;
				half3 WorldPosition263_g116830 = temp_output_279_0_g116830;
				half3 WorldNormal263_g116830 = temp_output_280_0_g116830;
				half4 localSampleStochastic3D263_g116830 = SampleStochastic3D( Texture263_g116830 , Sampler263_g116830 , Coords263_g116830 , WorldPosition263_g116830 , WorldNormal263_g116830 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8637_g116779 = localSamplePlanar2D238_g116830;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8637_g116779 = localSamplePlanar3D246_g116830;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8637_g116779 = localSampleStochastic2D234_g116830;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8637_g116779 = localSampleStochastic3D263_g116830;
				#else
				float4 staticSwitch8637_g116779 = localSamplePlanar2D238_g116830;
				#endif
				half4 Layer338_g116780 = staticSwitch8637_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116832) = _TerrainNormalTex4;
				SamplerState Sampler238_g116832 = SS29_g116886;
				float4 temp_output_37_0_g116832 = Input_Terrain_Coords_046791_g116779;
				half4 Coords238_g116832 = temp_output_37_0_g116832;
				float3 temp_output_279_0_g116832 = Input_Position9197_g116779;
				half3 WorldPosition238_g116832 = temp_output_279_0_g116832;
				half4 localSamplePlanar2D238_g116832 = SamplePlanar2D( Texture238_g116832 , Sampler238_g116832 , Coords238_g116832 , WorldPosition238_g116832 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116832) = _TerrainNormalTex4;
				SamplerState Sampler246_g116832 = SS29_g116886;
				half4 Coords246_g116832 = temp_output_37_0_g116832;
				half3 WorldPosition246_g116832 = temp_output_279_0_g116832;
				float3 temp_output_280_0_g116832 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116832 = temp_output_280_0_g116832;
				half4 localSamplePlanar3D246_g116832 = SamplePlanar3D( Texture246_g116832 , Sampler246_g116832 , Coords246_g116832 , WorldPosition246_g116832 , WorldNormal246_g116832 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116832) = _TerrainNormalTex4;
				SamplerState Sampler234_g116832 = SS29_g116886;
				float4 Coords234_g116832 = temp_output_37_0_g116832;
				float3 WorldPosition234_g116832 = temp_output_279_0_g116832;
				float4 localSampleStochastic2D234_g116832 = SampleStochastic2D( Texture234_g116832 , Sampler234_g116832 , Coords234_g116832 , WorldPosition234_g116832 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116832) = _TerrainNormalTex4;
				SamplerState Sampler263_g116832 = SS29_g116886;
				half4 Coords263_g116832 = temp_output_37_0_g116832;
				half3 WorldPosition263_g116832 = temp_output_279_0_g116832;
				half3 WorldNormal263_g116832 = temp_output_280_0_g116832;
				half4 localSampleStochastic3D263_g116832 = SampleStochastic3D( Texture263_g116832 , Sampler263_g116832 , Coords263_g116832 , WorldPosition263_g116832 , WorldNormal263_g116832 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8638_g116779 = localSamplePlanar2D238_g116832;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8638_g116779 = localSamplePlanar3D246_g116832;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8638_g116779 = localSampleStochastic2D234_g116832;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8638_g116779 = localSampleStochastic3D263_g116832;
				#else
				float4 staticSwitch8638_g116779 = localSamplePlanar2D238_g116832;
				#endif
				half4 Layer439_g116780 = staticSwitch8638_g116779;
				float4 weightedBlendVar31_g116780 = Weights52_g116780;
				float4 weightedBlend31_g116780 = ( weightedBlendVar31_g116780.x*Layer133_g116780 + weightedBlendVar31_g116780.y*Layer237_g116780 + weightedBlendVar31_g116780.z*Layer338_g116780 + weightedBlendVar31_g116780.w*Layer439_g116780 );
				half4 Terrain_B_047202_g116779 = weightedBlend31_g116780;
				half4 Layer_045_g116786 = Terrain_B_047202_g116779;
				half4 Weights52_g116795 = Terrain_Weights_087340_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116836) = _TerrainNormalTex5;
				SamplerState Sampler238_g116836 = SS29_g116886;
				float4 temp_output_37_0_g116836 = Input_Terrain_Coords_058750_g116779;
				half4 Coords238_g116836 = temp_output_37_0_g116836;
				float3 temp_output_279_0_g116836 = Input_Position9197_g116779;
				half3 WorldPosition238_g116836 = temp_output_279_0_g116836;
				half4 localSamplePlanar2D238_g116836 = SamplePlanar2D( Texture238_g116836 , Sampler238_g116836 , Coords238_g116836 , WorldPosition238_g116836 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116836) = _TerrainNormalTex5;
				SamplerState Sampler246_g116836 = SS29_g116886;
				half4 Coords246_g116836 = temp_output_37_0_g116836;
				half3 WorldPosition246_g116836 = temp_output_279_0_g116836;
				float3 temp_output_280_0_g116836 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116836 = temp_output_280_0_g116836;
				half4 localSamplePlanar3D246_g116836 = SamplePlanar3D( Texture246_g116836 , Sampler246_g116836 , Coords246_g116836 , WorldPosition246_g116836 , WorldNormal246_g116836 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116836) = _TerrainNormalTex5;
				SamplerState Sampler234_g116836 = SS29_g116886;
				float4 Coords234_g116836 = temp_output_37_0_g116836;
				float3 WorldPosition234_g116836 = temp_output_279_0_g116836;
				float4 localSampleStochastic2D234_g116836 = SampleStochastic2D( Texture234_g116836 , Sampler234_g116836 , Coords234_g116836 , WorldPosition234_g116836 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116836) = _TerrainNormalTex5;
				SamplerState Sampler263_g116836 = SS29_g116886;
				half4 Coords263_g116836 = temp_output_37_0_g116836;
				half3 WorldPosition263_g116836 = temp_output_279_0_g116836;
				half3 WorldNormal263_g116836 = temp_output_280_0_g116836;
				half4 localSampleStochastic3D263_g116836 = SampleStochastic3D( Texture263_g116836 , Sampler263_g116836 , Coords263_g116836 , WorldPosition263_g116836 , WorldNormal263_g116836 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8686_g116779 = localSamplePlanar2D238_g116836;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8686_g116779 = localSamplePlanar3D246_g116836;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8686_g116779 = localSampleStochastic2D234_g116836;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8686_g116779 = localSampleStochastic3D263_g116836;
				#else
				float4 staticSwitch8686_g116779 = localSamplePlanar2D238_g116836;
				#endif
				half4 Layer133_g116795 = staticSwitch8686_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116865) = _TerrainNormalTex6;
				SamplerState Sampler238_g116865 = SS29_g116886;
				float4 temp_output_37_0_g116865 = Input_Terrain_Coords_068751_g116779;
				half4 Coords238_g116865 = temp_output_37_0_g116865;
				float3 temp_output_279_0_g116865 = Input_Position9197_g116779;
				half3 WorldPosition238_g116865 = temp_output_279_0_g116865;
				half4 localSamplePlanar2D238_g116865 = SamplePlanar2D( Texture238_g116865 , Sampler238_g116865 , Coords238_g116865 , WorldPosition238_g116865 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116865) = _TerrainNormalTex6;
				SamplerState Sampler246_g116865 = SS29_g116886;
				half4 Coords246_g116865 = temp_output_37_0_g116865;
				half3 WorldPosition246_g116865 = temp_output_279_0_g116865;
				float3 temp_output_280_0_g116865 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116865 = temp_output_280_0_g116865;
				half4 localSamplePlanar3D246_g116865 = SamplePlanar3D( Texture246_g116865 , Sampler246_g116865 , Coords246_g116865 , WorldPosition246_g116865 , WorldNormal246_g116865 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116865) = _TerrainNormalTex6;
				SamplerState Sampler234_g116865 = SS29_g116886;
				float4 Coords234_g116865 = temp_output_37_0_g116865;
				float3 WorldPosition234_g116865 = temp_output_279_0_g116865;
				float4 localSampleStochastic2D234_g116865 = SampleStochastic2D( Texture234_g116865 , Sampler234_g116865 , Coords234_g116865 , WorldPosition234_g116865 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116865) = _TerrainNormalTex6;
				SamplerState Sampler263_g116865 = SS29_g116886;
				half4 Coords263_g116865 = temp_output_37_0_g116865;
				half3 WorldPosition263_g116865 = temp_output_279_0_g116865;
				half3 WorldNormal263_g116865 = temp_output_280_0_g116865;
				half4 localSampleStochastic3D263_g116865 = SampleStochastic3D( Texture263_g116865 , Sampler263_g116865 , Coords263_g116865 , WorldPosition263_g116865 , WorldNormal263_g116865 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8687_g116779 = localSamplePlanar2D238_g116865;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8687_g116779 = localSamplePlanar3D246_g116865;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8687_g116779 = localSampleStochastic2D234_g116865;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8687_g116779 = localSampleStochastic3D263_g116865;
				#else
				float4 staticSwitch8687_g116779 = localSamplePlanar2D238_g116865;
				#endif
				half4 Layer237_g116795 = staticSwitch8687_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116866) = _TerrainNormalTex7;
				SamplerState Sampler238_g116866 = SS29_g116886;
				float4 temp_output_37_0_g116866 = Input_Terrain_Coords_078752_g116779;
				half4 Coords238_g116866 = temp_output_37_0_g116866;
				float3 temp_output_279_0_g116866 = Input_Position9197_g116779;
				half3 WorldPosition238_g116866 = temp_output_279_0_g116866;
				half4 localSamplePlanar2D238_g116866 = SamplePlanar2D( Texture238_g116866 , Sampler238_g116866 , Coords238_g116866 , WorldPosition238_g116866 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116866) = _TerrainNormalTex7;
				SamplerState Sampler246_g116866 = SS29_g116886;
				half4 Coords246_g116866 = temp_output_37_0_g116866;
				half3 WorldPosition246_g116866 = temp_output_279_0_g116866;
				float3 temp_output_280_0_g116866 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116866 = temp_output_280_0_g116866;
				half4 localSamplePlanar3D246_g116866 = SamplePlanar3D( Texture246_g116866 , Sampler246_g116866 , Coords246_g116866 , WorldPosition246_g116866 , WorldNormal246_g116866 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116866) = _TerrainNormalTex7;
				SamplerState Sampler234_g116866 = SS29_g116886;
				float4 Coords234_g116866 = temp_output_37_0_g116866;
				float3 WorldPosition234_g116866 = temp_output_279_0_g116866;
				float4 localSampleStochastic2D234_g116866 = SampleStochastic2D( Texture234_g116866 , Sampler234_g116866 , Coords234_g116866 , WorldPosition234_g116866 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116866) = _TerrainNormalTex7;
				SamplerState Sampler263_g116866 = SS29_g116886;
				half4 Coords263_g116866 = temp_output_37_0_g116866;
				half3 WorldPosition263_g116866 = temp_output_279_0_g116866;
				half3 WorldNormal263_g116866 = temp_output_280_0_g116866;
				half4 localSampleStochastic3D263_g116866 = SampleStochastic3D( Texture263_g116866 , Sampler263_g116866 , Coords263_g116866 , WorldPosition263_g116866 , WorldNormal263_g116866 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8688_g116779 = localSamplePlanar2D238_g116866;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8688_g116779 = localSamplePlanar3D246_g116866;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8688_g116779 = localSampleStochastic2D234_g116866;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8688_g116779 = localSampleStochastic3D263_g116866;
				#else
				float4 staticSwitch8688_g116779 = localSamplePlanar2D238_g116866;
				#endif
				half4 Layer338_g116795 = staticSwitch8688_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116867) = _TerrainNormalTex8;
				SamplerState Sampler238_g116867 = SS29_g116886;
				float4 temp_output_37_0_g116867 = Input_Terrain_Coords_088749_g116779;
				half4 Coords238_g116867 = temp_output_37_0_g116867;
				float3 temp_output_279_0_g116867 = Input_Position9197_g116779;
				half3 WorldPosition238_g116867 = temp_output_279_0_g116867;
				half4 localSamplePlanar2D238_g116867 = SamplePlanar2D( Texture238_g116867 , Sampler238_g116867 , Coords238_g116867 , WorldPosition238_g116867 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116867) = _TerrainNormalTex8;
				SamplerState Sampler246_g116867 = SS29_g116886;
				half4 Coords246_g116867 = temp_output_37_0_g116867;
				half3 WorldPosition246_g116867 = temp_output_279_0_g116867;
				float3 temp_output_280_0_g116867 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116867 = temp_output_280_0_g116867;
				half4 localSamplePlanar3D246_g116867 = SamplePlanar3D( Texture246_g116867 , Sampler246_g116867 , Coords246_g116867 , WorldPosition246_g116867 , WorldNormal246_g116867 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116867) = _TerrainNormalTex8;
				SamplerState Sampler234_g116867 = SS29_g116886;
				float4 Coords234_g116867 = temp_output_37_0_g116867;
				float3 WorldPosition234_g116867 = temp_output_279_0_g116867;
				float4 localSampleStochastic2D234_g116867 = SampleStochastic2D( Texture234_g116867 , Sampler234_g116867 , Coords234_g116867 , WorldPosition234_g116867 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116867) = _TerrainNormalTex8;
				SamplerState Sampler263_g116867 = SS29_g116886;
				half4 Coords263_g116867 = temp_output_37_0_g116867;
				half3 WorldPosition263_g116867 = temp_output_279_0_g116867;
				half3 WorldNormal263_g116867 = temp_output_280_0_g116867;
				half4 localSampleStochastic3D263_g116867 = SampleStochastic3D( Texture263_g116867 , Sampler263_g116867 , Coords263_g116867 , WorldPosition263_g116867 , WorldNormal263_g116867 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8689_g116779 = localSamplePlanar2D238_g116867;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8689_g116779 = localSamplePlanar3D246_g116867;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8689_g116779 = localSampleStochastic2D234_g116867;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8689_g116779 = localSampleStochastic3D263_g116867;
				#else
				float4 staticSwitch8689_g116779 = localSamplePlanar2D238_g116867;
				#endif
				half4 Layer439_g116795 = staticSwitch8689_g116779;
				float4 weightedBlendVar31_g116795 = Weights52_g116795;
				float4 weightedBlend31_g116795 = ( weightedBlendVar31_g116795.x*Layer133_g116795 + weightedBlendVar31_g116795.y*Layer237_g116795 + weightedBlendVar31_g116795.z*Layer338_g116795 + weightedBlendVar31_g116795.w*Layer439_g116795 );
				half4 Terrain_B_088684_g116779 = weightedBlend31_g116795;
				half4 Layer_0810_g116786 = Terrain_B_088684_g116779;
				half4 Weights52_g116802 = Terrain_Weights_127710_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116839) = _TerrainNormalTex9;
				SamplerState Sampler238_g116839 = SS29_g116886;
				float4 temp_output_37_0_g116839 = Input_Terrain_Coords_098833_g116779;
				half4 Coords238_g116839 = temp_output_37_0_g116839;
				float3 temp_output_279_0_g116839 = Input_Position9197_g116779;
				half3 WorldPosition238_g116839 = temp_output_279_0_g116839;
				half4 localSamplePlanar2D238_g116839 = SamplePlanar2D( Texture238_g116839 , Sampler238_g116839 , Coords238_g116839 , WorldPosition238_g116839 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116839) = _TerrainNormalTex9;
				SamplerState Sampler246_g116839 = SS29_g116886;
				half4 Coords246_g116839 = temp_output_37_0_g116839;
				half3 WorldPosition246_g116839 = temp_output_279_0_g116839;
				float3 temp_output_280_0_g116839 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116839 = temp_output_280_0_g116839;
				half4 localSamplePlanar3D246_g116839 = SamplePlanar3D( Texture246_g116839 , Sampler246_g116839 , Coords246_g116839 , WorldPosition246_g116839 , WorldNormal246_g116839 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116839) = _TerrainNormalTex9;
				SamplerState Sampler234_g116839 = SS29_g116886;
				float4 Coords234_g116839 = temp_output_37_0_g116839;
				float3 WorldPosition234_g116839 = temp_output_279_0_g116839;
				float4 localSampleStochastic2D234_g116839 = SampleStochastic2D( Texture234_g116839 , Sampler234_g116839 , Coords234_g116839 , WorldPosition234_g116839 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116839) = _TerrainNormalTex9;
				SamplerState Sampler263_g116839 = SS29_g116886;
				half4 Coords263_g116839 = temp_output_37_0_g116839;
				half3 WorldPosition263_g116839 = temp_output_279_0_g116839;
				half3 WorldNormal263_g116839 = temp_output_280_0_g116839;
				half4 localSampleStochastic3D263_g116839 = SampleStochastic3D( Texture263_g116839 , Sampler263_g116839 , Coords263_g116839 , WorldPosition263_g116839 , WorldNormal263_g116839 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8849_g116779 = localSamplePlanar2D238_g116839;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8849_g116779 = localSamplePlanar3D246_g116839;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8849_g116779 = localSampleStochastic2D234_g116839;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8849_g116779 = localSampleStochastic3D263_g116839;
				#else
				float4 staticSwitch8849_g116779 = localSamplePlanar2D238_g116839;
				#endif
				half4 Layer133_g116802 = staticSwitch8849_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116844) = _TerrainNormalTex10;
				SamplerState Sampler238_g116844 = SS29_g116886;
				float4 temp_output_37_0_g116844 = Input_Terrain_Coords_108834_g116779;
				half4 Coords238_g116844 = temp_output_37_0_g116844;
				float3 temp_output_279_0_g116844 = Input_Position9197_g116779;
				half3 WorldPosition238_g116844 = temp_output_279_0_g116844;
				half4 localSamplePlanar2D238_g116844 = SamplePlanar2D( Texture238_g116844 , Sampler238_g116844 , Coords238_g116844 , WorldPosition238_g116844 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116844) = _TerrainNormalTex10;
				SamplerState Sampler246_g116844 = SS29_g116886;
				half4 Coords246_g116844 = temp_output_37_0_g116844;
				half3 WorldPosition246_g116844 = temp_output_279_0_g116844;
				float3 temp_output_280_0_g116844 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116844 = temp_output_280_0_g116844;
				half4 localSamplePlanar3D246_g116844 = SamplePlanar3D( Texture246_g116844 , Sampler246_g116844 , Coords246_g116844 , WorldPosition246_g116844 , WorldNormal246_g116844 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116844) = _TerrainNormalTex10;
				SamplerState Sampler234_g116844 = SS29_g116886;
				float4 Coords234_g116844 = temp_output_37_0_g116844;
				float3 WorldPosition234_g116844 = temp_output_279_0_g116844;
				float4 localSampleStochastic2D234_g116844 = SampleStochastic2D( Texture234_g116844 , Sampler234_g116844 , Coords234_g116844 , WorldPosition234_g116844 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116844) = _TerrainNormalTex10;
				SamplerState Sampler263_g116844 = SS29_g116886;
				half4 Coords263_g116844 = temp_output_37_0_g116844;
				half3 WorldPosition263_g116844 = temp_output_279_0_g116844;
				half3 WorldNormal263_g116844 = temp_output_280_0_g116844;
				half4 localSampleStochastic3D263_g116844 = SampleStochastic3D( Texture263_g116844 , Sampler263_g116844 , Coords263_g116844 , WorldPosition263_g116844 , WorldNormal263_g116844 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8876_g116779 = localSamplePlanar2D238_g116844;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8876_g116779 = localSamplePlanar3D246_g116844;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8876_g116779 = localSampleStochastic2D234_g116844;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8876_g116779 = localSampleStochastic3D263_g116844;
				#else
				float4 staticSwitch8876_g116779 = localSamplePlanar2D238_g116844;
				#endif
				half4 Layer237_g116802 = staticSwitch8876_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116845) = _TerrainNormalTex11;
				SamplerState Sampler238_g116845 = SS29_g116886;
				float4 temp_output_37_0_g116845 = Input_Terrain_Coords_118835_g116779;
				half4 Coords238_g116845 = temp_output_37_0_g116845;
				float3 temp_output_279_0_g116845 = Input_Position9197_g116779;
				half3 WorldPosition238_g116845 = temp_output_279_0_g116845;
				half4 localSamplePlanar2D238_g116845 = SamplePlanar2D( Texture238_g116845 , Sampler238_g116845 , Coords238_g116845 , WorldPosition238_g116845 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116845) = _TerrainNormalTex11;
				SamplerState Sampler246_g116845 = SS29_g116886;
				half4 Coords246_g116845 = temp_output_37_0_g116845;
				half3 WorldPosition246_g116845 = temp_output_279_0_g116845;
				float3 temp_output_280_0_g116845 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116845 = temp_output_280_0_g116845;
				half4 localSamplePlanar3D246_g116845 = SamplePlanar3D( Texture246_g116845 , Sampler246_g116845 , Coords246_g116845 , WorldPosition246_g116845 , WorldNormal246_g116845 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116845) = _TerrainNormalTex11;
				SamplerState Sampler234_g116845 = SS29_g116886;
				float4 Coords234_g116845 = temp_output_37_0_g116845;
				float3 WorldPosition234_g116845 = temp_output_279_0_g116845;
				float4 localSampleStochastic2D234_g116845 = SampleStochastic2D( Texture234_g116845 , Sampler234_g116845 , Coords234_g116845 , WorldPosition234_g116845 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116845) = _TerrainNormalTex11;
				SamplerState Sampler263_g116845 = SS29_g116886;
				half4 Coords263_g116845 = temp_output_37_0_g116845;
				half3 WorldPosition263_g116845 = temp_output_279_0_g116845;
				half3 WorldNormal263_g116845 = temp_output_280_0_g116845;
				half4 localSampleStochastic3D263_g116845 = SampleStochastic3D( Texture263_g116845 , Sampler263_g116845 , Coords263_g116845 , WorldPosition263_g116845 , WorldNormal263_g116845 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8850_g116779 = localSamplePlanar2D238_g116845;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8850_g116779 = localSamplePlanar3D246_g116845;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8850_g116779 = localSampleStochastic2D234_g116845;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8850_g116779 = localSampleStochastic3D263_g116845;
				#else
				float4 staticSwitch8850_g116779 = localSamplePlanar2D238_g116845;
				#endif
				half4 Layer338_g116802 = staticSwitch8850_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116846) = _TerrainNormalTex12;
				SamplerState Sampler238_g116846 = SS29_g116886;
				float4 temp_output_37_0_g116846 = Input_Terrain_Coords_128836_g116779;
				half4 Coords238_g116846 = temp_output_37_0_g116846;
				float3 temp_output_279_0_g116846 = Input_Position9197_g116779;
				half3 WorldPosition238_g116846 = temp_output_279_0_g116846;
				half4 localSamplePlanar2D238_g116846 = SamplePlanar2D( Texture238_g116846 , Sampler238_g116846 , Coords238_g116846 , WorldPosition238_g116846 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116846) = _TerrainNormalTex12;
				SamplerState Sampler246_g116846 = SS29_g116886;
				half4 Coords246_g116846 = temp_output_37_0_g116846;
				half3 WorldPosition246_g116846 = temp_output_279_0_g116846;
				float3 temp_output_280_0_g116846 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116846 = temp_output_280_0_g116846;
				half4 localSamplePlanar3D246_g116846 = SamplePlanar3D( Texture246_g116846 , Sampler246_g116846 , Coords246_g116846 , WorldPosition246_g116846 , WorldNormal246_g116846 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116846) = _TerrainNormalTex12;
				SamplerState Sampler234_g116846 = SS29_g116886;
				float4 Coords234_g116846 = temp_output_37_0_g116846;
				float3 WorldPosition234_g116846 = temp_output_279_0_g116846;
				float4 localSampleStochastic2D234_g116846 = SampleStochastic2D( Texture234_g116846 , Sampler234_g116846 , Coords234_g116846 , WorldPosition234_g116846 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116846) = _TerrainNormalTex12;
				SamplerState Sampler263_g116846 = SS29_g116886;
				half4 Coords263_g116846 = temp_output_37_0_g116846;
				half3 WorldPosition263_g116846 = temp_output_279_0_g116846;
				half3 WorldNormal263_g116846 = temp_output_280_0_g116846;
				half4 localSampleStochastic3D263_g116846 = SampleStochastic3D( Texture263_g116846 , Sampler263_g116846 , Coords263_g116846 , WorldPosition263_g116846 , WorldNormal263_g116846 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8877_g116779 = localSamplePlanar2D238_g116846;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8877_g116779 = localSamplePlanar3D246_g116846;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8877_g116779 = localSampleStochastic2D234_g116846;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8877_g116779 = localSampleStochastic3D263_g116846;
				#else
				float4 staticSwitch8877_g116779 = localSamplePlanar2D238_g116846;
				#endif
				half4 Layer439_g116802 = staticSwitch8877_g116779;
				float4 weightedBlendVar31_g116802 = Weights52_g116802;
				float4 weightedBlend31_g116802 = ( weightedBlendVar31_g116802.x*Layer133_g116802 + weightedBlendVar31_g116802.y*Layer237_g116802 + weightedBlendVar31_g116802.z*Layer338_g116802 + weightedBlendVar31_g116802.w*Layer439_g116802 );
				half4 Terrain_B_128865_g116779 = weightedBlend31_g116802;
				half4 Layer_1243_g116786 = Terrain_B_128865_g116779;
				half4 Weights52_g116809 = Terrain_Weights_167709_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116849) = _TerrainNormalTex13;
				SamplerState Sampler238_g116849 = SS29_g116886;
				float4 temp_output_37_0_g116849 = Input_Terrain_Coords_138960_g116779;
				half4 Coords238_g116849 = temp_output_37_0_g116849;
				float3 temp_output_279_0_g116849 = Input_Position9197_g116779;
				half3 WorldPosition238_g116849 = temp_output_279_0_g116849;
				half4 localSamplePlanar2D238_g116849 = SamplePlanar2D( Texture238_g116849 , Sampler238_g116849 , Coords238_g116849 , WorldPosition238_g116849 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116849) = _TerrainNormalTex13;
				SamplerState Sampler246_g116849 = SS29_g116886;
				half4 Coords246_g116849 = temp_output_37_0_g116849;
				half3 WorldPosition246_g116849 = temp_output_279_0_g116849;
				float3 temp_output_280_0_g116849 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116849 = temp_output_280_0_g116849;
				half4 localSamplePlanar3D246_g116849 = SamplePlanar3D( Texture246_g116849 , Sampler246_g116849 , Coords246_g116849 , WorldPosition246_g116849 , WorldNormal246_g116849 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116849) = _TerrainNormalTex13;
				SamplerState Sampler234_g116849 = SS29_g116886;
				float4 Coords234_g116849 = temp_output_37_0_g116849;
				float3 WorldPosition234_g116849 = temp_output_279_0_g116849;
				float4 localSampleStochastic2D234_g116849 = SampleStochastic2D( Texture234_g116849 , Sampler234_g116849 , Coords234_g116849 , WorldPosition234_g116849 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116849) = _TerrainNormalTex13;
				SamplerState Sampler263_g116849 = SS29_g116886;
				half4 Coords263_g116849 = temp_output_37_0_g116849;
				half3 WorldPosition263_g116849 = temp_output_279_0_g116849;
				half3 WorldNormal263_g116849 = temp_output_280_0_g116849;
				half4 localSampleStochastic3D263_g116849 = SampleStochastic3D( Texture263_g116849 , Sampler263_g116849 , Coords263_g116849 , WorldPosition263_g116849 , WorldNormal263_g116849 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8991_g116779 = localSamplePlanar2D238_g116849;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8991_g116779 = localSamplePlanar3D246_g116849;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8991_g116779 = localSampleStochastic2D234_g116849;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8991_g116779 = localSampleStochastic3D263_g116849;
				#else
				float4 staticSwitch8991_g116779 = localSamplePlanar2D238_g116849;
				#endif
				half4 Layer133_g116809 = staticSwitch8991_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116856) = _TerrainNormalTex14;
				SamplerState Sampler238_g116856 = SS29_g116886;
				float4 temp_output_37_0_g116856 = Input_Terrain_Coords_148961_g116779;
				half4 Coords238_g116856 = temp_output_37_0_g116856;
				float3 temp_output_279_0_g116856 = Input_Position9197_g116779;
				half3 WorldPosition238_g116856 = temp_output_279_0_g116856;
				half4 localSamplePlanar2D238_g116856 = SamplePlanar2D( Texture238_g116856 , Sampler238_g116856 , Coords238_g116856 , WorldPosition238_g116856 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116856) = _TerrainNormalTex14;
				SamplerState Sampler246_g116856 = SS29_g116886;
				half4 Coords246_g116856 = temp_output_37_0_g116856;
				half3 WorldPosition246_g116856 = temp_output_279_0_g116856;
				float3 temp_output_280_0_g116856 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116856 = temp_output_280_0_g116856;
				half4 localSamplePlanar3D246_g116856 = SamplePlanar3D( Texture246_g116856 , Sampler246_g116856 , Coords246_g116856 , WorldPosition246_g116856 , WorldNormal246_g116856 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116856) = _TerrainNormalTex14;
				SamplerState Sampler234_g116856 = SS29_g116886;
				float4 Coords234_g116856 = temp_output_37_0_g116856;
				float3 WorldPosition234_g116856 = temp_output_279_0_g116856;
				float4 localSampleStochastic2D234_g116856 = SampleStochastic2D( Texture234_g116856 , Sampler234_g116856 , Coords234_g116856 , WorldPosition234_g116856 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116856) = _TerrainNormalTex14;
				SamplerState Sampler263_g116856 = SS29_g116886;
				half4 Coords263_g116856 = temp_output_37_0_g116856;
				half3 WorldPosition263_g116856 = temp_output_279_0_g116856;
				half3 WorldNormal263_g116856 = temp_output_280_0_g116856;
				half4 localSampleStochastic3D263_g116856 = SampleStochastic3D( Texture263_g116856 , Sampler263_g116856 , Coords263_g116856 , WorldPosition263_g116856 , WorldNormal263_g116856 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8990_g116779 = localSamplePlanar2D238_g116856;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8990_g116779 = localSamplePlanar3D246_g116856;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8990_g116779 = localSampleStochastic2D234_g116856;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8990_g116779 = localSampleStochastic3D263_g116856;
				#else
				float4 staticSwitch8990_g116779 = localSamplePlanar2D238_g116856;
				#endif
				half4 Layer237_g116809 = staticSwitch8990_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116857) = _TerrainNormalTex15;
				SamplerState Sampler238_g116857 = SS29_g116886;
				float4 temp_output_37_0_g116857 = Input_Terrain_Coords_158962_g116779;
				half4 Coords238_g116857 = temp_output_37_0_g116857;
				float3 temp_output_279_0_g116857 = Input_Position9197_g116779;
				half3 WorldPosition238_g116857 = temp_output_279_0_g116857;
				half4 localSamplePlanar2D238_g116857 = SamplePlanar2D( Texture238_g116857 , Sampler238_g116857 , Coords238_g116857 , WorldPosition238_g116857 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116857) = _TerrainNormalTex15;
				SamplerState Sampler246_g116857 = SS29_g116886;
				half4 Coords246_g116857 = temp_output_37_0_g116857;
				half3 WorldPosition246_g116857 = temp_output_279_0_g116857;
				float3 temp_output_280_0_g116857 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116857 = temp_output_280_0_g116857;
				half4 localSamplePlanar3D246_g116857 = SamplePlanar3D( Texture246_g116857 , Sampler246_g116857 , Coords246_g116857 , WorldPosition246_g116857 , WorldNormal246_g116857 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116857) = _TerrainNormalTex15;
				SamplerState Sampler234_g116857 = SS29_g116886;
				float4 Coords234_g116857 = temp_output_37_0_g116857;
				float3 WorldPosition234_g116857 = temp_output_279_0_g116857;
				float4 localSampleStochastic2D234_g116857 = SampleStochastic2D( Texture234_g116857 , Sampler234_g116857 , Coords234_g116857 , WorldPosition234_g116857 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116857) = _TerrainNormalTex15;
				SamplerState Sampler263_g116857 = SS29_g116886;
				half4 Coords263_g116857 = temp_output_37_0_g116857;
				half3 WorldPosition263_g116857 = temp_output_279_0_g116857;
				half3 WorldNormal263_g116857 = temp_output_280_0_g116857;
				half4 localSampleStochastic3D263_g116857 = SampleStochastic3D( Texture263_g116857 , Sampler263_g116857 , Coords263_g116857 , WorldPosition263_g116857 , WorldNormal263_g116857 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8989_g116779 = localSamplePlanar2D238_g116857;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8989_g116779 = localSamplePlanar3D246_g116857;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8989_g116779 = localSampleStochastic2D234_g116857;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8989_g116779 = localSampleStochastic3D263_g116857;
				#else
				float4 staticSwitch8989_g116779 = localSamplePlanar2D238_g116857;
				#endif
				half4 Layer338_g116809 = staticSwitch8989_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116858) = _TerrainNormalTex16;
				SamplerState Sampler238_g116858 = SS29_g116886;
				float4 temp_output_37_0_g116858 = Input_Terrain_Coords_168959_g116779;
				half4 Coords238_g116858 = temp_output_37_0_g116858;
				float3 temp_output_279_0_g116858 = Input_Position9197_g116779;
				half3 WorldPosition238_g116858 = temp_output_279_0_g116858;
				half4 localSamplePlanar2D238_g116858 = SamplePlanar2D( Texture238_g116858 , Sampler238_g116858 , Coords238_g116858 , WorldPosition238_g116858 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116858) = _TerrainNormalTex16;
				SamplerState Sampler246_g116858 = SS29_g116886;
				half4 Coords246_g116858 = temp_output_37_0_g116858;
				half3 WorldPosition246_g116858 = temp_output_279_0_g116858;
				float3 temp_output_280_0_g116858 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116858 = temp_output_280_0_g116858;
				half4 localSamplePlanar3D246_g116858 = SamplePlanar3D( Texture246_g116858 , Sampler246_g116858 , Coords246_g116858 , WorldPosition246_g116858 , WorldNormal246_g116858 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116858) = _TerrainNormalTex16;
				SamplerState Sampler234_g116858 = SS29_g116886;
				float4 Coords234_g116858 = temp_output_37_0_g116858;
				float3 WorldPosition234_g116858 = temp_output_279_0_g116858;
				float4 localSampleStochastic2D234_g116858 = SampleStochastic2D( Texture234_g116858 , Sampler234_g116858 , Coords234_g116858 , WorldPosition234_g116858 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116858) = _TerrainNormalTex16;
				SamplerState Sampler263_g116858 = SS29_g116886;
				half4 Coords263_g116858 = temp_output_37_0_g116858;
				half3 WorldPosition263_g116858 = temp_output_279_0_g116858;
				half3 WorldNormal263_g116858 = temp_output_280_0_g116858;
				half4 localSampleStochastic3D263_g116858 = SampleStochastic3D( Texture263_g116858 , Sampler263_g116858 , Coords263_g116858 , WorldPosition263_g116858 , WorldNormal263_g116858 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8988_g116779 = localSamplePlanar2D238_g116858;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8988_g116779 = localSamplePlanar3D246_g116858;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8988_g116779 = localSampleStochastic2D234_g116858;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8988_g116779 = localSampleStochastic3D263_g116858;
				#else
				float4 staticSwitch8988_g116779 = localSamplePlanar2D238_g116858;
				#endif
				half4 Layer439_g116809 = staticSwitch8988_g116779;
				float4 weightedBlendVar31_g116809 = Weights52_g116809;
				float4 weightedBlend31_g116809 = ( weightedBlendVar31_g116809.x*Layer133_g116809 + weightedBlendVar31_g116809.y*Layer237_g116809 + weightedBlendVar31_g116809.z*Layer338_g116809 + weightedBlendVar31_g116809.w*Layer439_g116809 );
				half4 Terrain_B_168987_g116779 = weightedBlend31_g116809;
				half4 Layer_1644_g116786 = Terrain_B_168987_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116786 = Layer_045_g116786;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116786 = ( Layer_045_g116786 + Layer_0810_g116786 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116786 = ( Layer_045_g116786 + Layer_0810_g116786 + Layer_1243_g116786 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116786 = ( Layer_045_g116786 + Layer_0810_g116786 + Layer_1243_g116786 + Layer_1644_g116786 );
				#else
				float4 staticSwitch40_g116786 = Layer_045_g116786;
				#endif
				half4 Blend_Normal7512_g116779 = staticSwitch40_g116786;
				half4 Normal_Packed45_g116880 = Blend_Normal7512_g116779;
				float2 appendResult58_g116880 = (float2(( (Normal_Packed45_g116880).x * (Normal_Packed45_g116880).w ) , (Normal_Packed45_g116880).y));
				half2 Normal_Default50_g116880 = appendResult58_g116880;
				half2 Normal_ASTC41_g116880 = (Normal_Packed45_g116880).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g116880 = Normal_ASTC41_g116880;
				#else
				float2 staticSwitch38_g116880 = Normal_Default50_g116880;
				#endif
				half2 Normal_NO_DTX544_g116880 = (Normal_Packed45_g116880).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g116880 = Normal_NO_DTX544_g116880;
				#else
				float2 staticSwitch37_g116880 = staticSwitch38_g116880;
				#endif
				half4 Weights52_g116782 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116782 = temp_output_6970_0_g116779;
				half4 Layer237_g116782 = temp_output_6977_0_g116779;
				half4 Layer338_g116782 = temp_output_6978_0_g116779;
				half4 Layer439_g116782 = temp_output_6983_0_g116779;
				float4 weightedBlendVar31_g116782 = Weights52_g116782;
				float4 weightedBlend31_g116782 = ( weightedBlendVar31_g116782.x*Layer133_g116782 + weightedBlendVar31_g116782.y*Layer237_g116782 + weightedBlendVar31_g116782.z*Layer338_g116782 + weightedBlendVar31_g116782.w*Layer439_g116782 );
				half4 Terrain_Shaders_047203_g116779 = weightedBlend31_g116782;
				half4 Layer_045_g116788 = Terrain_Shaders_047203_g116779;
				half4 Weights52_g116798 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116798 = temp_output_8714_0_g116779;
				half4 Layer237_g116798 = temp_output_8721_0_g116779;
				half4 Layer338_g116798 = temp_output_8724_0_g116779;
				half4 Layer439_g116798 = temp_output_8727_0_g116779;
				float4 weightedBlendVar31_g116798 = Weights52_g116798;
				float4 weightedBlend31_g116798 = ( weightedBlendVar31_g116798.x*Layer133_g116798 + weightedBlendVar31_g116798.y*Layer237_g116798 + weightedBlendVar31_g116798.z*Layer338_g116798 + weightedBlendVar31_g116798.w*Layer439_g116798 );
				half4 Terrain_Shaders_088730_g116779 = weightedBlend31_g116798;
				half4 Layer_0810_g116788 = Terrain_Shaders_088730_g116779;
				half4 Weights52_g116805 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116805 = temp_output_8815_0_g116779;
				half4 Layer237_g116805 = temp_output_8818_0_g116779;
				half4 Layer338_g116805 = temp_output_8819_0_g116779;
				half4 Layer439_g116805 = temp_output_8820_0_g116779;
				float4 weightedBlendVar31_g116805 = Weights52_g116805;
				float4 weightedBlend31_g116805 = ( weightedBlendVar31_g116805.x*Layer133_g116805 + weightedBlendVar31_g116805.y*Layer237_g116805 + weightedBlendVar31_g116805.z*Layer338_g116805 + weightedBlendVar31_g116805.w*Layer439_g116805 );
				half4 Terrain_Shaders_128871_g116779 = weightedBlend31_g116805;
				half4 Layer_1243_g116788 = Terrain_Shaders_128871_g116779;
				half4 Weights52_g116812 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116812 = temp_output_8931_0_g116779;
				half4 Layer237_g116812 = temp_output_8934_0_g116779;
				half4 Layer338_g116812 = temp_output_8935_0_g116779;
				half4 Layer439_g116812 = temp_output_8936_0_g116779;
				float4 weightedBlendVar31_g116812 = Weights52_g116812;
				float4 weightedBlend31_g116812 = ( weightedBlendVar31_g116812.x*Layer133_g116812 + weightedBlendVar31_g116812.y*Layer237_g116812 + weightedBlendVar31_g116812.z*Layer338_g116812 + weightedBlendVar31_g116812.w*Layer439_g116812 );
				half4 Terrain_Shaders_169014_g116779 = weightedBlend31_g116812;
				half4 Layer_1644_g116788 = Terrain_Shaders_169014_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116788 = Layer_045_g116788;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116788 = ( Layer_045_g116788 + Layer_0810_g116788 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116788 = ( Layer_045_g116788 + Layer_0810_g116788 + Layer_1243_g116788 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116788 = ( Layer_045_g116788 + Layer_0810_g116788 + Layer_1243_g116788 + Layer_1644_g116788 );
				#else
				float4 staticSwitch40_g116788 = Layer_045_g116788;
				#endif
				half4 Blend_Shaders7420_g116779 = staticSwitch40_g116788;
				half4 Normal_Packed45_g116879 = Blend_Shaders7420_g116779;
				half2 Normal_NO_DTX544_g116879 = (Normal_Packed45_g116879).wy;
				#ifdef TVE_TERRAIN_PACKED
				float2 staticSwitch9080_g116779 = (Normal_NO_DTX544_g116879*2.0 + -1.0);
				#else
				float2 staticSwitch9080_g116779 = (staticSwitch37_g116880*2.0 + -1.0);
				#endif
				half4 Weights52_g116783 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116783 = _TerrainParams1;
				half4 Layer237_g116783 = _TerrainParams2;
				half4 Layer338_g116783 = _TerrainParams3;
				half4 Layer439_g116783 = _TerrainParams4;
				float4 weightedBlendVar31_g116783 = Weights52_g116783;
				float4 weightedBlend31_g116783 = ( weightedBlendVar31_g116783.x*Layer133_g116783 + weightedBlendVar31_g116783.y*Layer237_g116783 + weightedBlendVar31_g116783.z*Layer338_g116783 + weightedBlendVar31_g116783.w*Layer439_g116783 );
				half4 Terrain_Params_047533_g116779 = weightedBlend31_g116783;
				half4 Layer_045_g116789 = Terrain_Params_047533_g116779;
				half4 Weights52_g116799 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116799 = _TerrainParams5;
				half4 Layer237_g116799 = _TerrainParams6;
				half4 Layer338_g116799 = _TerrainParams7;
				half4 Layer439_g116799 = _TerrainParams8;
				float4 weightedBlendVar31_g116799 = Weights52_g116799;
				float4 weightedBlend31_g116799 = ( weightedBlendVar31_g116799.x*Layer133_g116799 + weightedBlendVar31_g116799.y*Layer237_g116799 + weightedBlendVar31_g116799.z*Layer338_g116799 + weightedBlendVar31_g116799.w*Layer439_g116799 );
				half4 Terrain_Params_088739_g116779 = weightedBlend31_g116799;
				half4 Layer_0810_g116789 = Terrain_Params_088739_g116779;
				half4 Weights52_g116806 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116806 = _TerrainParams9;
				half4 Layer237_g116806 = _TerrainParams10;
				half4 Layer338_g116806 = _TerrainParams11;
				half4 Layer439_g116806 = _TerrainParams12;
				float4 weightedBlendVar31_g116806 = Weights52_g116806;
				float4 weightedBlend31_g116806 = ( weightedBlendVar31_g116806.x*Layer133_g116806 + weightedBlendVar31_g116806.y*Layer237_g116806 + weightedBlendVar31_g116806.z*Layer338_g116806 + weightedBlendVar31_g116806.w*Layer439_g116806 );
				half4 Terrain_Params_128867_g116779 = weightedBlend31_g116806;
				half4 Layer_1243_g116789 = Terrain_Params_128867_g116779;
				half4 Weights52_g116813 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116813 = _TerrainParams13;
				half4 Layer237_g116813 = _TerrainParams14;
				half4 Layer338_g116813 = _TerrainParams15;
				half4 Layer439_g116813 = _TerrainParams16;
				float4 weightedBlendVar31_g116813 = Weights52_g116813;
				float4 weightedBlend31_g116813 = ( weightedBlendVar31_g116813.x*Layer133_g116813 + weightedBlendVar31_g116813.y*Layer237_g116813 + weightedBlendVar31_g116813.z*Layer338_g116813 + weightedBlendVar31_g116813.w*Layer439_g116813 );
				half4 Terrain_Params_169017_g116779 = weightedBlend31_g116813;
				half4 Layer_1644_g116789 = Terrain_Params_169017_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116789 = Layer_045_g116789;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116789 = ( Layer_045_g116789 + Layer_0810_g116789 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116789 = ( Layer_045_g116789 + Layer_0810_g116789 + Layer_1243_g116789 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116789 = ( Layer_045_g116789 + Layer_0810_g116789 + Layer_1243_g116789 + Layer_1644_g116789 );
				#else
				float4 staticSwitch40_g116789 = Layer_045_g116789;
				#endif
				half4 Blend_Params7547_g116779 = staticSwitch40_g116789;
				half2 Normal_Planar45_g116881 = ( ( staticSwitch9080_g116779 * (Blend_Params7547_g116779).z ) * _TerrainNormalValue );
				float2 break71_g116881 = Normal_Planar45_g116881;
				float3 appendResult72_g116881 = (float3(break71_g116881.x , 0.0 , break71_g116881.y));
				half2 Final_NormalTS9145_g116779 = (mul( ase_worldToTangent, appendResult72_g116881 )).xy;
				half2 Local_Normal9200_g116777 = Final_NormalTS9145_g116779;
				float2 In_NormalTS3_g116778 = Local_Normal9200_g116777;
				float3 appendResult68_g116889 = (float3(Local_Normal9200_g116777 , 1.0));
				float3 tanToWorld0 = float3( WorldTangent.x, WorldBiTangent.x, WorldNormal.x );
				float3 tanToWorld1 = float3( WorldTangent.y, WorldBiTangent.y, WorldNormal.y );
				float3 tanToWorld2 = float3( WorldTangent.z, WorldBiTangent.z, WorldNormal.z );
				float3 tanNormal74_g116889 = appendResult68_g116889;
				float3 worldNormal74_g116889 = normalize( float3(dot(tanToWorld0,tanNormal74_g116889), dot(tanToWorld1,tanNormal74_g116889), dot(tanToWorld2,tanNormal74_g116889)) );
				float3 In_NormalWS3_g116778 = worldNormal74_g116889;
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9139_g116779 = 0.0;
				#else
				float staticSwitch9139_g116779 = ( (Blend_Shaders7420_g116779).x * (Blend_Params7547_g116779).x * _TerrainMetallicValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9097_g116779 = 1.0;
				#else
				float staticSwitch9097_g116779 = ( (Blend_Shaders7420_g116779).y * _TerrainOcclusionValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9105_g116779 = (Blend_Shaders7420_g116779).x;
				#else
				float staticSwitch9105_g116779 = (Blend_Shaders7420_g116779).w;
				#endif
				float4 appendResult9147_g116779 = (float4(staticSwitch9139_g116779 , staticSwitch9097_g116779 , (Blend_Shaders7420_g116779).z , ( staticSwitch9105_g116779 * (Blend_Params7547_g116779).w * _TerrainSmoothnessValue )));
				half4 Final_Shaders9146_g116779 = appendResult9147_g116779;
				half4 Local_Shader9201_g116777 = Final_Shaders9146_g116779;
				float4 In_Shader3_g116778 = Local_Shader9201_g116777;
				half4 Weights52_g116872 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116872 = _TerrainSpecular1;
				half4 Layer237_g116872 = _TerrainSpecular2;
				half4 Layer338_g116872 = _TerrainSpecular3;
				half4 Layer439_g116872 = _TerrainSpecular4;
				float4 weightedBlendVar31_g116872 = Weights52_g116872;
				float4 weightedBlend31_g116872 = ( weightedBlendVar31_g116872.x*Layer133_g116872 + weightedBlendVar31_g116872.y*Layer237_g116872 + weightedBlendVar31_g116872.z*Layer338_g116872 + weightedBlendVar31_g116872.w*Layer439_g116872 );
				half4 Terrain_Specular_047390_g116779 = weightedBlend31_g116872;
				half4 Layer_045_g116877 = Terrain_Specular_047390_g116779;
				half4 Weights52_g116800 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116800 = _TerrainSpecular5;
				half4 Layer237_g116800 = _TerrainSpecular6;
				half4 Layer338_g116800 = _TerrainSpecular7;
				half4 Layer439_g116800 = _TerrainSpecular8;
				float4 weightedBlendVar31_g116800 = Weights52_g116800;
				float4 weightedBlend31_g116800 = ( weightedBlendVar31_g116800.x*Layer133_g116800 + weightedBlendVar31_g116800.y*Layer237_g116800 + weightedBlendVar31_g116800.z*Layer338_g116800 + weightedBlendVar31_g116800.w*Layer439_g116800 );
				half4 Terrain_Specular_088745_g116779 = weightedBlend31_g116800;
				half4 Layer_0810_g116877 = Terrain_Specular_088745_g116779;
				half4 Weights52_g116807 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116807 = _TerrainSpecular9;
				half4 Layer237_g116807 = _TerrainSpecular10;
				half4 Layer338_g116807 = _TerrainSpecular11;
				half4 Layer439_g116807 = _TerrainSpecular12;
				float4 weightedBlendVar31_g116807 = Weights52_g116807;
				float4 weightedBlend31_g116807 = ( weightedBlendVar31_g116807.x*Layer133_g116807 + weightedBlendVar31_g116807.y*Layer237_g116807 + weightedBlendVar31_g116807.z*Layer338_g116807 + weightedBlendVar31_g116807.w*Layer439_g116807 );
				half4 Terrain_Specular_128869_g116779 = weightedBlend31_g116807;
				half4 Layer_1243_g116877 = Terrain_Specular_128869_g116779;
				half4 Weights52_g116814 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116814 = _TerrainSpecular13;
				half4 Layer237_g116814 = _TerrainSpecular14;
				half4 Layer338_g116814 = _TerrainSpecular15;
				half4 Layer439_g116814 = _TerrainSpecular16;
				float4 weightedBlendVar31_g116814 = Weights52_g116814;
				float4 weightedBlend31_g116814 = ( weightedBlendVar31_g116814.x*Layer133_g116814 + weightedBlendVar31_g116814.y*Layer237_g116814 + weightedBlendVar31_g116814.z*Layer338_g116814 + weightedBlendVar31_g116814.w*Layer439_g116814 );
				half4 Terrain_Specular_169019_g116779 = weightedBlend31_g116814;
				half4 Layer_1644_g116877 = Terrain_Specular_169019_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116877 = Layer_045_g116877;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116877 = ( Layer_045_g116877 + Layer_0810_g116877 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116877 = ( Layer_045_g116877 + Layer_0810_g116877 + Layer_1243_g116877 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116877 = ( Layer_045_g116877 + Layer_0810_g116877 + Layer_1243_g116877 + Layer_1644_g116877 );
				#else
				float4 staticSwitch40_g116877 = Layer_045_g116877;
				#endif
				half4 Blend_TerrainSpecular7446_g116779 = staticSwitch40_g116877;
				float3 temp_output_9088_0_g116779 = (Blend_TerrainSpecular7446_g116779).rgb;
				float4 appendResult9189_g116779 = (float4(temp_output_9088_0_g116779 , 1.0));
				half4 Final_Emissive9151_g116779 = appendResult9189_g116779;
				half4 Local_EmissiveLDR9202_g116777 = Final_Emissive9151_g116779;
				float4 In_Emissive3_g116778 = Local_EmissiveLDR9202_g116777;
				float3 temp_output_3_0_g116890 = Local_Albedo9199_g116777;
				float dotResult20_g116890 = dot( temp_output_3_0_g116890 , float3(0.2126,0.7152,0.0722) );
				float temp_output_9165_0_g116777 = dotResult20_g116890;
				float In_Grayscale3_g116778 = temp_output_9165_0_g116777;
				float clampResult9168_g116777 = clamp( saturate( ( temp_output_9165_0_g116777 * 5.0 ) ) , 0.2 , 1.0 );
				float In_Luminosity3_g116778 = clampResult9168_g116777;
				half Final_MultiShader9150_g116779 = ( (Blend_TerrainSpecular7446_g116779).a * (Blend_Albedo7468_g116779).w );
				half Local_MultiMask9203_g116777 = Final_MultiShader9150_g116779;
				float In_MultiMask3_g116778 = Local_MultiMask9203_g116777;
				float4 temp_output_35_0_g116888 = appendResult9125_g116779;
				float2 InputScale48_g116888 = (temp_output_35_0_g116888).zw;
				half2 FinalScale53_g116888 = ( 1.0 / InputScale48_g116888 );
				float2 InputPosition52_g116888 = (temp_output_35_0_g116888).xy;
				half2 FinalPosition58_g116888 = -( FinalScale53_g116888 * InputPosition52_g116888 );
				float2 temp_output_65_0_g116888 = ( ( (worldPos).xz * FinalScale53_g116888 ) + FinalPosition58_g116888 );
				float2 Terrain_Holes_UV9406_g116779 = temp_output_65_0_g116888;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch9188_g116779 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9406_g116779 ).r;
				#else
				float staticSwitch9188_g116779 = 1.0;
				#endif
				half Terrain_Holes7437_g116779 = staticSwitch9188_g116779;
				half Local_HoleMask9204_g116777 = Terrain_Holes7437_g116779;
				float In_AlphaClip3_g116778 = Local_HoleMask9204_g116777;
				float In_AlphaFade3_g116778 = 1.0;
				float3 temp_cast_9 = (1.0).xxx;
				float3 In_Translucency3_g116778 = temp_cast_9;
				float In_Transmission3_g116778 = 1.0;
				float In_Thickness3_g116778 = 0.0;
				float In_Diffusion3_g116778 = 0.0;
				Data3_g116778.Dummy = In_Dummy3_g116778;
				Data3_g116778.Albedo = In_Albedo3_g116778;
				Data3_g116778.AlbedoRaw = In_AlbedoRaw3_g116778;
				Data3_g116778.NormalTS = In_NormalTS3_g116778;
				Data3_g116778.NormalWS = In_NormalWS3_g116778;
				Data3_g116778.Shader = In_Shader3_g116778;
				Data3_g116778.Emissive= In_Emissive3_g116778;
				Data3_g116778.MultiMask = In_MultiMask3_g116778;
				Data3_g116778.Grayscale = In_Grayscale3_g116778;
				Data3_g116778.Luminosity = In_Luminosity3_g116778;
				Data3_g116778.AlphaClip = In_AlphaClip3_g116778;
				Data3_g116778.AlphaFade = In_AlphaFade3_g116778;
				Data3_g116778.Translucency = In_Translucency3_g116778;
				Data3_g116778.Transmission = In_Transmission3_g116778;
				Data3_g116778.Thickness = In_Thickness3_g116778;
				Data3_g116778.Diffusion = In_Diffusion3_g116778;
				TVEVisualData Data4_g116913 = Data3_g116778;
				float Out_Dummy4_g116913 = 0;
				float3 Out_Albedo4_g116913 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116913 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116913 = float2( 0,0 );
				float3 Out_NormalWS4_g116913 = float3( 0,0,0 );
				float4 Out_Shader4_g116913 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116913 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116913 = 0;
				float Out_Grayscale4_g116913 = 0;
				float Out_Luminosity4_g116913 = 0;
				float Out_AlphaClip4_g116913 = 0;
				float Out_AlphaFade4_g116913 = 0;
				float3 Out_Translucency4_g116913 = float3( 0,0,0 );
				float Out_Transmission4_g116913 = 0;
				float Out_Thickness4_g116913 = 0;
				float Out_Diffusion4_g116913 = 0;
				Out_Dummy4_g116913 = Data4_g116913.Dummy;
				Out_Albedo4_g116913 = Data4_g116913.Albedo;
				Out_AlbedoRaw4_g116913 = Data4_g116913.AlbedoRaw;
				Out_NormalTS4_g116913 = Data4_g116913.NormalTS;
				Out_NormalWS4_g116913 = Data4_g116913.NormalWS;
				Out_Shader4_g116913 = Data4_g116913.Shader;
				Out_Emissive4_g116913= Data4_g116913.Emissive;
				Out_MultiMask4_g116913 = Data4_g116913.MultiMask;
				Out_Grayscale4_g116913 = Data4_g116913.Grayscale;
				Out_Luminosity4_g116913= Data4_g116913.Luminosity;
				Out_AlphaClip4_g116913 = Data4_g116913.AlphaClip;
				Out_AlphaFade4_g116913 = Data4_g116913.AlphaFade;
				Out_Translucency4_g116913 = Data4_g116913.Translucency;
				Out_Transmission4_g116913 = Data4_g116913.Transmission;
				Out_Thickness4_g116913 = Data4_g116913.Thickness;
				Out_Diffusion4_g116913 = Data4_g116913.Diffusion;
				half3 Visual_Albedo139_g116891 = Out_Albedo4_g116913;
				float temp_output_200_12_g116891 = Out_Grayscale4_g116913;
				half Visual_Grayscale150_g116891 = temp_output_200_12_g116891;
				float3 temp_cast_10 = (Visual_Grayscale150_g116891).xxx;
				float localBuildGlobalData204_g115912 = ( 0.0 );
				TVEGlobalData Data204_g115912 = (TVEGlobalData)0;
				half Dummy211_g115912 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g115912 = Dummy211_g115912;
				half4 Coat_Params302_g115912 = TVE_CoatParams;
				float4 In_CoatParams204_g115912 = Coat_Params302_g115912;
				float temp_output_82_0_g115913 = _GlobalPaintLayerValue;
				float temp_output_19_0_g115915 = TVE_PaintLayers[(int)temp_output_82_0_g115913];
				TVEModelData Data16_g114321 = (TVEModelData)0;
				float In_Dummy16_g114321 = 0.0;
				float3 vertexToFrag73_g114306 = IN.ase_texcoord9.xyz;
				half3 PositionWS122_g114306 = vertexToFrag73_g114306;
				float3 In_PositionWS16_g114321 = PositionWS122_g114306;
				float4x4 break19_g114308 = unity_ObjectToWorld;
				float3 appendResult20_g114308 = (float3(break19_g114308[ 0 ][ 3 ] , break19_g114308[ 1 ][ 3 ] , break19_g114308[ 2 ][ 3 ]));
				half3 ObjectData20_g114310 = appendResult20_g114308;
				half3 WorldData19_g114310 = worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g114310 = WorldData19_g114310;
				#else
				float3 staticSwitch14_g114310 = ObjectData20_g114310;
				#endif
				float3 temp_output_124_0_g114308 = staticSwitch14_g114310;
				float3 temp_output_239_7_g114306 = temp_output_124_0_g114308;
				half3 PivotWS121_g114306 = temp_output_239_7_g114306;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
				#else
				float3 staticSwitch204_g114306 = PositionWS122_g114306;
				#endif
				half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
				float3 In_PositionWO16_g114321 = PositionWO132_g114306;
				float3 In_PivotWS16_g114321 = PivotWS121_g114306;
				half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
				float3 In_PivotWO16_g114321 = PivotWO133_g114306;
				float3 normalizedWorldNormal = normalize( WorldNormal );
				half3 Normal_WS95_g114306 = normalizedWorldNormal;
				float3 In_NormalWS16_g114321 = Normal_WS95_g114306;
				float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
				half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
				float3 In_ViewDirWS16_g114321 = ViewDirWS169_g114306;
				half4 VertexMasks171_g114306 = IN.ase_color;
				float4 In_VertexData16_g114321 = VertexMasks171_g114306;
				float4 In_BoundsData16_g114321 = float4( 1,1,1,1 );
				Data16_g114321.Dummy = In_Dummy16_g114321;
				Data16_g114321.PositionWS = In_PositionWS16_g114321;
				Data16_g114321.PositionWO = In_PositionWO16_g114321;
				Data16_g114321.PivotWS = In_PivotWS16_g114321;
				Data16_g114321.PivotWO = In_PivotWO16_g114321;
				Data16_g114321.NormalWS = In_NormalWS16_g114321;
				Data16_g114321.ViewDirWS = In_ViewDirWS16_g114321;
				Data16_g114321.VertexData = In_VertexData16_g114321;
				Data16_g114321.BoundsData = In_BoundsData16_g114321;
				TVEModelData Data15_g115994 = Data16_g114321;
				float Out_Dummy15_g115994 = 0;
				float3 Out_PositionWS15_g115994 = float3( 0,0,0 );
				float3 Out_PositionWO15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWS15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWO15_g115994 = float3( 0,0,0 );
				float3 Out_NormalWS15_g115994 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g115994 = float3( 0,0,0 );
				float4 Out_VertexData15_g115994 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g115994 = float4( 0,0,0,0 );
				Out_Dummy15_g115994 = Data15_g115994.Dummy;
				Out_PositionWS15_g115994 = Data15_g115994.PositionWS;
				Out_PositionWO15_g115994 = Data15_g115994.PositionWO;
				Out_PivotWS15_g115994 = Data15_g115994.PivotWS;
				Out_PivotWO15_g115994 = Data15_g115994.PivotWO;
				Out_NormalWS15_g115994 = Data15_g115994.NormalWS;
				Out_ViewDirWS15_g115994 = Data15_g115994.ViewDirWS;
				Out_VertexData15_g115994 = Data15_g115994.VertexData;
				Out_BoundsData15_g115994 = Data15_g115994.BoundsData;
				half3 Model_PositionWS143_g115912 = Out_PositionWS15_g115994;
				half3 Input_Position180_g115916 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115916 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_82_0_g115916 = temp_output_82_0_g115913;
				float2 temp_output_119_0_g115916 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_7_0_g115921 = 1.0;
				float temp_output_10_0_g115921 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115921 );
				float4 lerpResult131_g115916 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115916,temp_output_82_0_g115916), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115916,temp_output_82_0_g115916), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115916 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115921 ) / temp_output_10_0_g115921 ) ));
				float4 temp_output_17_0_g115915 = lerpResult131_g115916;
				float4 temp_output_3_0_g115915 = TVE_PaintParams;
				float4 ifLocalVar18_g115915 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115915 >= 0.5 )
				ifLocalVar18_g115915 = temp_output_17_0_g115915;
				else
				ifLocalVar18_g115915 = temp_output_3_0_g115915;
				float4 lerpResult22_g115915 = lerp( temp_output_3_0_g115915 , temp_output_17_0_g115915 , temp_output_19_0_g115915);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115915 = lerpResult22_g115915;
				#else
				float4 staticSwitch24_g115915 = ifLocalVar18_g115915;
				#endif
				half4 Paint_Params71_g115912 = staticSwitch24_g115915;
				float4 In_PaintParams204_g115912 = Paint_Params71_g115912;
				float temp_output_82_0_g115931 = _GlobalGlowLayerValue;
				float temp_output_19_0_g115933 = TVE_GlowLayers[(int)temp_output_82_0_g115931];
				half3 Input_Position180_g115934 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115934 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_82_0_g115934 = temp_output_82_0_g115931;
				float2 temp_output_119_0_g115934 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_7_0_g115939 = 1.0;
				float temp_output_10_0_g115939 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115939 );
				float4 lerpResult131_g115934 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115934,temp_output_82_0_g115934), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115934,temp_output_82_0_g115934), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115934 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115939 ) / temp_output_10_0_g115939 ) ));
				float4 temp_output_17_0_g115933 = lerpResult131_g115934;
				float4 temp_output_3_0_g115933 = TVE_GlowParams;
				float4 ifLocalVar18_g115933 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115933 >= 0.5 )
				ifLocalVar18_g115933 = temp_output_17_0_g115933;
				else
				ifLocalVar18_g115933 = temp_output_3_0_g115933;
				float4 lerpResult22_g115933 = lerp( temp_output_3_0_g115933 , temp_output_17_0_g115933 , temp_output_19_0_g115933);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115933 = lerpResult22_g115933;
				#else
				float4 staticSwitch24_g115933 = ifLocalVar18_g115933;
				#endif
				half4 Glow_Params248_g115912 = staticSwitch24_g115933;
				float4 In_GlowParams204_g115912 = Glow_Params248_g115912;
				float temp_output_132_0_g115976 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g115978 = TVE_AtmoLayers[(int)temp_output_132_0_g115976];
				half3 Input_Position180_g115979 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115979 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_82_0_g115979 = temp_output_132_0_g115976;
				float2 temp_output_119_0_g115979 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_7_0_g115984 = 1.0;
				float temp_output_10_0_g115984 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115984 );
				float4 lerpResult131_g115979 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115979,temp_output_82_0_g115979), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115979,temp_output_82_0_g115979), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115979 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115984 ) / temp_output_10_0_g115984 ) ));
				float4 temp_output_17_0_g115978 = lerpResult131_g115979;
				float4 temp_output_3_0_g115978 = TVE_AtmoParams;
				float4 ifLocalVar18_g115978 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115978 >= 0.5 )
				ifLocalVar18_g115978 = temp_output_17_0_g115978;
				else
				ifLocalVar18_g115978 = temp_output_3_0_g115978;
				float4 lerpResult22_g115978 = lerp( temp_output_3_0_g115978 , temp_output_17_0_g115978 , temp_output_19_0_g115978);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115978 = lerpResult22_g115978;
				#else
				float4 staticSwitch24_g115978 = ifLocalVar18_g115978;
				#endif
				half4 Atmo_Params80_g115912 = staticSwitch24_g115978;
				float4 In_AtmoParams204_g115912 = Atmo_Params80_g115912;
				float temp_output_132_0_g115985 = _GlobalFadeLayerValue;
				float temp_output_19_0_g115987 = TVE_FadeLayers[(int)temp_output_132_0_g115985];
				half3 Input_Position180_g115988 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115988 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_82_0_g115988 = temp_output_132_0_g115985;
				float2 temp_output_119_0_g115988 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_7_0_g115993 = 1.0;
				float temp_output_10_0_g115993 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115993 );
				float4 lerpResult131_g115988 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115988,temp_output_82_0_g115988), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115988,temp_output_82_0_g115988), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115988 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115993 ) / temp_output_10_0_g115993 ) ));
				float4 temp_output_17_0_g115987 = lerpResult131_g115988;
				float4 temp_output_3_0_g115987 = TVE_FadeParams;
				float4 ifLocalVar18_g115987 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115987 >= 0.5 )
				ifLocalVar18_g115987 = temp_output_17_0_g115987;
				else
				ifLocalVar18_g115987 = temp_output_3_0_g115987;
				float4 lerpResult22_g115987 = lerp( temp_output_3_0_g115987 , temp_output_17_0_g115987 , temp_output_19_0_g115987);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115987 = lerpResult22_g115987;
				#else
				float4 staticSwitch24_g115987 = ifLocalVar18_g115987;
				#endif
				half4 Fade_Params387_g115912 = staticSwitch24_g115987;
				float4 In_FadeParams204_g115912 = Fade_Params387_g115912;
				half4 Form_Params112_g115912 = TVE_FormParams;
				float4 In_FormParams204_g115912 = Form_Params112_g115912;
				float temp_output_130_0_g115949 = _GlobalLandLayerValue;
				float temp_output_19_0_g115951 = TVE_LandLayers[(int)temp_output_130_0_g115949];
				half3 Input_Position180_g115952 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115952 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_82_0_g115952 = temp_output_130_0_g115949;
				float2 temp_output_119_0_g115952 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_7_0_g115957 = 1.0;
				float temp_output_10_0_g115957 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115957 );
				float4 lerpResult131_g115952 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115952,temp_output_82_0_g115952), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115952,temp_output_82_0_g115952), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115952 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115957 ) / temp_output_10_0_g115957 ) ));
				float4 temp_output_17_0_g115951 = lerpResult131_g115952;
				float4 temp_output_3_0_g115951 = TVE_LandParams;
				float4 ifLocalVar18_g115951 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115951 >= 0.5 )
				ifLocalVar18_g115951 = temp_output_17_0_g115951;
				else
				ifLocalVar18_g115951 = temp_output_3_0_g115951;
				float4 lerpResult22_g115951 = lerp( temp_output_3_0_g115951 , temp_output_17_0_g115951 , temp_output_19_0_g115951);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115951 = lerpResult22_g115951;
				#else
				float4 staticSwitch24_g115951 = ifLocalVar18_g115951;
				#endif
				half4 Land_Params375_g115912 = staticSwitch24_g115951;
				float4 In_LandParams204_g115912 = Land_Params375_g115912;
				half4 Wind_Params88_g115912 = TVE_WindParams;
				float4 In_WindParams204_g115912 = Wind_Params88_g115912;
				half4 Push_Params335_g115912 = TVE_PushParams;
				float4 In_PushParams204_g115912 = Push_Params335_g115912;
				Data204_g115912.Dummy = In_Dummy204_g115912;
				Data204_g115912.CoatParams = In_CoatParams204_g115912;
				Data204_g115912.PaintParams = In_PaintParams204_g115912;
				Data204_g115912.GlowParams = In_GlowParams204_g115912;
				Data204_g115912.AtmoParams = In_AtmoParams204_g115912;
				Data204_g115912.FadeParams = In_FadeParams204_g115912;
				Data204_g115912.FormParams= In_FormParams204_g115912;
				Data204_g115912.LandParams = In_LandParams204_g115912;
				Data204_g115912.WindParams = In_WindParams204_g115912;
				Data204_g115912.PushParams = In_PushParams204_g115912;
				TVEGlobalData Data15_g116892 = Data204_g115912;
				float Out_Dummy15_g116892 = 0;
				float4 Out_CoatParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116892 = float4( 0,0,0,0 );
				Out_Dummy15_g116892 = Data15_g116892.Dummy;
				Out_CoatParams15_g116892 = Data15_g116892.CoatParams;
				Out_PaintParams15_g116892 = Data15_g116892.PaintParams;
				Out_GlowParams15_g116892 = Data15_g116892.GlowParams;
				Out_AtmoParams15_g116892= Data15_g116892.AtmoParams;
				Out_FadeParams15_g116892= Data15_g116892.FadeParams;
				Out_FormParams15_g116892 = Data15_g116892.FormParams;
				Out_LandParams15_g116892 = Data15_g116892.LandParams;
				Out_WindParams15_g116892 = Data15_g116892.WindParams;
				Out_PushParams15_g116892 = Data15_g116892.PushParams;
				half4 Global_PaintParams209_g116891 = Out_PaintParams15_g116892;
				float temp_output_6_0_g116893 = ( saturate( (Global_PaintParams209_g116891).w ) * TVE_IsEnabled );
				#ifdef TVE_REGISTER
				float staticSwitch14_g116893 = ( temp_output_6_0_g116893 + ( _TintingElementMode * 0.0 ) );
				#else
				float staticSwitch14_g116893 = temp_output_6_0_g116893;
				#endif
				#ifdef TVE_TINTING_ELEMENT
				float staticSwitch283_g116891 = staticSwitch14_g116893;
				#else
				float staticSwitch283_g116891 = 1.0;
				#endif
				half Tinting_GlobalValue285_g116891 = staticSwitch283_g116891;
				float3 lerpResult368_g116891 = lerp( Visual_Albedo139_g116891 , temp_cast_10 , ( Tinting_GlobalValue285_g116891 * _TintingGrayValue ));
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g116911 = 2.0;
				#else
				float staticSwitch1_g116911 = 4.594794;
				#endif
				float3 temp_cast_32 = (1.0).xxx;
				#ifdef TVE_TINTING_ELEMENT
				float3 staticSwitch288_g116891 = (Global_PaintParams209_g116891).xyz;
				#else
				float3 staticSwitch288_g116891 = temp_cast_32;
				#endif
				half3 Tinting_ColorGlobal290_g116891 = staticSwitch288_g116891;
				float temp_output_200_11_g116891 = Out_MultiMask4_g116913;
				half Visual_MultiMask181_g116891 = temp_output_200_11_g116891;
				float lerpResult147_g116891 = lerp( 1.0 , Visual_MultiMask181_g116891 , _TintingMultiValue);
				half Tinting_MutiMask121_g116891 = lerpResult147_g116891;
				half Tinting_TexMask385_g116891 = 1.0;
				float temp_output_200_15_g116891 = Out_Luminosity4_g116913;
				half Visual_Luminosity257_g116891 = temp_output_200_15_g116891;
				float clampResult17_g116905 = clamp( Visual_Luminosity257_g116891 , 0.0001 , 0.9999 );
				float temp_output_7_0_g116904 = _TintingLumaRemap.x;
				float temp_output_10_0_g116904 = ( _TintingLumaRemap.y - temp_output_7_0_g116904 );
				float lerpResult228_g116891 = lerp( 1.0 , saturate( ( ( clampResult17_g116905 - temp_output_7_0_g116904 ) / ( temp_output_10_0_g116904 + 0.0001 ) ) ) , _TintingLumaValue);
				half Tinting_LumaMask153_g116891 = lerpResult228_g116891;
				half Tinting_VertMask309_g116891 = 1.0;
				half Tinting_NoiseMask213_g116891 = 1.0;
				half Custom_Mask345_g116891 = 1.0;
				float temp_output_7_0_g116900 = _TintingBlendRemap.x;
				float temp_output_10_0_g116900 = ( _TintingBlendRemap.y - temp_output_7_0_g116900 );
				half Tinting_Mask242_g116891 = ( saturate( ( ( ( _TintingIntensityValue * Tinting_MutiMask121_g116891 * Tinting_TexMask385_g116891 * Tinting_LumaMask153_g116891 * Tinting_VertMask309_g116891 * Tinting_NoiseMask213_g116891 * Tinting_GlobalValue285_g116891 * Custom_Mask345_g116891 ) - temp_output_7_0_g116900 ) / ( temp_output_10_0_g116900 + 0.0001 ) ) ) * TVE_IsEnabled );
				float3 lerpResult90_g116891 = lerp( Visual_Albedo139_g116891 , ( lerpResult368_g116891 * staticSwitch1_g116911 * Tinting_ColorGlobal290_g116891 * (_TintingColor).rgb ) , Tinting_Mask242_g116891);
				#ifdef TVE_TINTING
				float3 staticSwitch286_g116891 = lerpResult90_g116891;
				#else
				float3 staticSwitch286_g116891 = Visual_Albedo139_g116891;
				#endif
				half3 Final_Albedo97_g116891 = staticSwitch286_g116891;
				float3 In_Albedo3_g116912 = Final_Albedo97_g116891;
				float3 In_AlbedoRaw3_g116912 = Out_AlbedoRaw4_g116913;
				float2 In_NormalTS3_g116912 = Out_NormalTS4_g116913;
				float3 In_NormalWS3_g116912 = Out_NormalWS4_g116913;
				float4 In_Shader3_g116912 = Out_Shader4_g116913;
				float4 In_Emissive3_g116912 = Out_Emissive4_g116913;
				float In_Grayscale3_g116912 = temp_output_200_12_g116891;
				float In_Luminosity3_g116912 = temp_output_200_15_g116891;
				float In_MultiMask3_g116912 = temp_output_200_11_g116891;
				float In_AlphaClip3_g116912 = Out_AlphaClip4_g116913;
				float In_AlphaFade3_g116912 = Out_AlphaFade4_g116913;
				float3 In_Translucency3_g116912 = Out_Translucency4_g116913;
				float In_Transmission3_g116912 = Out_Transmission4_g116913;
				float In_Thickness3_g116912 = Out_Thickness4_g116913;
				float In_Diffusion3_g116912 = Out_Diffusion4_g116913;
				Data3_g116912.Dummy = In_Dummy3_g116912;
				Data3_g116912.Albedo = In_Albedo3_g116912;
				Data3_g116912.AlbedoRaw = In_AlbedoRaw3_g116912;
				Data3_g116912.NormalTS = In_NormalTS3_g116912;
				Data3_g116912.NormalWS = In_NormalWS3_g116912;
				Data3_g116912.Shader = In_Shader3_g116912;
				Data3_g116912.Emissive= In_Emissive3_g116912;
				Data3_g116912.MultiMask = In_MultiMask3_g116912;
				Data3_g116912.Grayscale = In_Grayscale3_g116912;
				Data3_g116912.Luminosity = In_Luminosity3_g116912;
				Data3_g116912.AlphaClip = In_AlphaClip3_g116912;
				Data3_g116912.AlphaFade = In_AlphaFade3_g116912;
				Data3_g116912.Translucency = In_Translucency3_g116912;
				Data3_g116912.Transmission = In_Transmission3_g116912;
				Data3_g116912.Thickness = In_Thickness3_g116912;
				Data3_g116912.Diffusion = In_Diffusion3_g116912;
				TVEVisualData Data4_g116917 = Data3_g116912;
				float Out_Dummy4_g116917 = 0;
				float3 Out_Albedo4_g116917 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116917 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116917 = float2( 0,0 );
				float3 Out_NormalWS4_g116917 = float3( 0,0,0 );
				float4 Out_Shader4_g116917 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116917 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116917 = 0;
				float Out_Grayscale4_g116917 = 0;
				float Out_Luminosity4_g116917 = 0;
				float Out_AlphaClip4_g116917 = 0;
				float Out_AlphaFade4_g116917 = 0;
				float3 Out_Translucency4_g116917 = float3( 0,0,0 );
				float Out_Transmission4_g116917 = 0;
				float Out_Thickness4_g116917 = 0;
				float Out_Diffusion4_g116917 = 0;
				Out_Dummy4_g116917 = Data4_g116917.Dummy;
				Out_Albedo4_g116917 = Data4_g116917.Albedo;
				Out_AlbedoRaw4_g116917 = Data4_g116917.AlbedoRaw;
				Out_NormalTS4_g116917 = Data4_g116917.NormalTS;
				Out_NormalWS4_g116917 = Data4_g116917.NormalWS;
				Out_Shader4_g116917 = Data4_g116917.Shader;
				Out_Emissive4_g116917= Data4_g116917.Emissive;
				Out_MultiMask4_g116917 = Data4_g116917.MultiMask;
				Out_Grayscale4_g116917 = Data4_g116917.Grayscale;
				Out_Luminosity4_g116917= Data4_g116917.Luminosity;
				Out_AlphaClip4_g116917 = Data4_g116917.AlphaClip;
				Out_AlphaFade4_g116917 = Data4_g116917.AlphaFade;
				Out_Translucency4_g116917 = Data4_g116917.Translucency;
				Out_Transmission4_g116917 = Data4_g116917.Transmission;
				Out_Thickness4_g116917 = Data4_g116917.Thickness;
				Out_Diffusion4_g116917 = Data4_g116917.Diffusion;
				half3 Visual_Albedo292_g116915 = Out_Albedo4_g116917;
				float temp_output_280_12_g116915 = Out_Grayscale4_g116917;
				half Visual_Grayscale308_g116915 = temp_output_280_12_g116915;
				float3 temp_cast_33 = (Visual_Grayscale308_g116915).xxx;
				TVEGlobalData Data15_g116916 = Data204_g115912;
				float Out_Dummy15_g116916 = 0;
				float4 Out_CoatParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116916 = float4( 0,0,0,0 );
				Out_Dummy15_g116916 = Data15_g116916.Dummy;
				Out_CoatParams15_g116916 = Data15_g116916.CoatParams;
				Out_PaintParams15_g116916 = Data15_g116916.PaintParams;
				Out_GlowParams15_g116916 = Data15_g116916.GlowParams;
				Out_AtmoParams15_g116916= Data15_g116916.AtmoParams;
				Out_FadeParams15_g116916= Data15_g116916.FadeParams;
				Out_FormParams15_g116916 = Data15_g116916.FormParams;
				Out_LandParams15_g116916 = Data15_g116916.LandParams;
				Out_WindParams15_g116916 = Data15_g116916.WindParams;
				Out_PushParams15_g116916 = Data15_g116916.PushParams;
				half4 Global_AtmoParams314_g116915 = Out_AtmoParams15_g116916;
				#ifdef TVE_DRYNESS_ELEMENT
				float staticSwitch351_g116915 = ( (Global_AtmoParams314_g116915).x * TVE_IsEnabled );
				#else
				float staticSwitch351_g116915 = 1.0;
				#endif
				half Dryness_GlobalMask352_g116915 = staticSwitch351_g116915;
				float3 lerpResult485_g116915 = lerp( Visual_Albedo292_g116915 , temp_cast_33 , ( Dryness_GlobalMask352_g116915 * _DrynessGrayValue ));
				half3 hsvTorgb58_g116936 = RGBToHSV( lerpResult485_g116915 );
				half3 hsvTorgb61_g116936 = HSVToRGB( half3(( hsvTorgb58_g116936.x + _DrynessShiftValue ),hsvTorgb58_g116936.y,hsvTorgb58_g116936.z) );
				#ifdef TVE_DRYNESS_SHIFT
				float3 staticSwitch499_g116915 = hsvTorgb61_g116936;
				#else
				float3 staticSwitch499_g116915 = lerpResult485_g116915;
				#endif
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g116935 = 2.0;
				#else
				float staticSwitch1_g116935 = 4.594794;
				#endif
				half Dryness_TexMask478_g116915 = 1.0;
				float temp_output_280_11_g116915 = Out_MultiMask4_g116917;
				half Visual_MultiMask310_g116915 = temp_output_280_11_g116915;
				float lerpResult283_g116915 = lerp( 1.0 , Visual_MultiMask310_g116915 , _DrynessMultiValue);
				half Dryness_MultiMask302_g116915 = lerpResult283_g116915;
				float temp_output_280_15_g116915 = Out_Luminosity4_g116917;
				half Visual_Luminosity309_g116915 = temp_output_280_15_g116915;
				float clampResult17_g116931 = clamp( Visual_Luminosity309_g116915 , 0.0001 , 0.9999 );
				float temp_output_7_0_g116930 = _DrynessLumaRemap.x;
				float temp_output_10_0_g116930 = ( _DrynessLumaRemap.y - temp_output_7_0_g116930 );
				float lerpResult295_g116915 = lerp( 1.0 , saturate( ( ( clampResult17_g116931 - temp_output_7_0_g116930 ) / ( temp_output_10_0_g116930 + 0.0001 ) ) ) , _DrynessLumaValue);
				half Dryness_LumaMask301_g116915 = lerpResult295_g116915;
				half Dryness_VertMask378_g116915 = 1.0;
				half Dryness_MaskNoise291_g116915 = 1.0;
				half Custom_Mask411_g116915 = 1.0;
				float temp_output_7_0_g116929 = _DrynessBlendRemap.x;
				float temp_output_10_0_g116929 = ( _DrynessBlendRemap.y - temp_output_7_0_g116929 );
				half Dryness_Mask329_g116915 = saturate( ( ( ( _DrynessIntensityValue * Dryness_TexMask478_g116915 * Dryness_MultiMask302_g116915 * Dryness_LumaMask301_g116915 * Dryness_VertMask378_g116915 * Dryness_MaskNoise291_g116915 * Dryness_GlobalMask352_g116915 * Custom_Mask411_g116915 ) - temp_output_7_0_g116929 ) / ( temp_output_10_0_g116929 + 0.0001 ) ) );
				float3 lerpResult336_g116915 = lerp( Visual_Albedo292_g116915 , ( staticSwitch499_g116915 * staticSwitch1_g116935 * (_DrynessColor).rgb ) , Dryness_Mask329_g116915);
				#ifdef TVE_DRYNESS
				float3 staticSwitch356_g116915 = lerpResult336_g116915;
				#else
				float3 staticSwitch356_g116915 = Visual_Albedo292_g116915;
				#endif
				half3 Final_Albedo331_g116915 = staticSwitch356_g116915;
				float3 In_Albedo3_g116918 = Final_Albedo331_g116915;
				float3 In_AlbedoRaw3_g116918 = Out_AlbedoRaw4_g116917;
				float2 In_NormalTS3_g116918 = Out_NormalTS4_g116917;
				float3 In_NormalWS3_g116918 = Out_NormalWS4_g116917;
				half4 Visual_Shader415_g116915 = Out_Shader4_g116917;
				float4 break438_g116915 = Visual_Shader415_g116915;
				float4 appendResult439_g116915 = (float4(break438_g116915.x , break438_g116915.y , break438_g116915.z , ( break438_g116915.w * _DrynessSmoothnessValue )));
				float4 lerpResult427_g116915 = lerp( Visual_Shader415_g116915 , appendResult439_g116915 , Dryness_Mask329_g116915);
				#ifdef TVE_DRYNESS
				float4 staticSwitch426_g116915 = lerpResult427_g116915;
				#else
				float4 staticSwitch426_g116915 = Visual_Shader415_g116915;
				#endif
				half4 Final_Shader433_g116915 = staticSwitch426_g116915;
				float4 In_Shader3_g116918 = Final_Shader433_g116915;
				float4 In_Emissive3_g116918 = Out_Emissive4_g116917;
				float In_Grayscale3_g116918 = temp_output_280_12_g116915;
				float In_Luminosity3_g116918 = temp_output_280_15_g116915;
				float In_MultiMask3_g116918 = temp_output_280_11_g116915;
				float In_AlphaClip3_g116918 = Out_AlphaClip4_g116917;
				float In_AlphaFade3_g116918 = Out_AlphaFade4_g116917;
				float3 In_Translucency3_g116918 = Out_Translucency4_g116917;
				half Visual_Transmission416_g116915 = Out_Transmission4_g116917;
				float lerpResult421_g116915 = lerp( Visual_Transmission416_g116915 , ( Visual_Transmission416_g116915 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g116915);
				#ifdef TVE_DRYNESS
				float staticSwitch418_g116915 = lerpResult421_g116915;
				#else
				float staticSwitch418_g116915 = Visual_Transmission416_g116915;
				#endif
				half Final_Transmission425_g116915 = staticSwitch418_g116915;
				float In_Transmission3_g116918 = Final_Transmission425_g116915;
				float In_Thickness3_g116918 = Out_Thickness4_g116917;
				float In_Diffusion3_g116918 = Out_Diffusion4_g116917;
				Data3_g116918.Dummy = In_Dummy3_g116918;
				Data3_g116918.Albedo = In_Albedo3_g116918;
				Data3_g116918.AlbedoRaw = In_AlbedoRaw3_g116918;
				Data3_g116918.NormalTS = In_NormalTS3_g116918;
				Data3_g116918.NormalWS = In_NormalWS3_g116918;
				Data3_g116918.Shader = In_Shader3_g116918;
				Data3_g116918.Emissive= In_Emissive3_g116918;
				Data3_g116918.MultiMask = In_MultiMask3_g116918;
				Data3_g116918.Grayscale = In_Grayscale3_g116918;
				Data3_g116918.Luminosity = In_Luminosity3_g116918;
				Data3_g116918.AlphaClip = In_AlphaClip3_g116918;
				Data3_g116918.AlphaFade = In_AlphaFade3_g116918;
				Data3_g116918.Translucency = In_Translucency3_g116918;
				Data3_g116918.Transmission = In_Transmission3_g116918;
				Data3_g116918.Thickness = In_Thickness3_g116918;
				Data3_g116918.Diffusion = In_Diffusion3_g116918;
				TVEVisualData Data4_g116939 = Data3_g116918;
				float Out_Dummy4_g116939 = 0;
				float3 Out_Albedo4_g116939 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116939 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116939 = float2( 0,0 );
				float3 Out_NormalWS4_g116939 = float3( 0,0,0 );
				float4 Out_Shader4_g116939 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116939 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116939 = 0;
				float Out_Grayscale4_g116939 = 0;
				float Out_Luminosity4_g116939 = 0;
				float Out_AlphaClip4_g116939 = 0;
				float Out_AlphaFade4_g116939 = 0;
				float3 Out_Translucency4_g116939 = float3( 0,0,0 );
				float Out_Transmission4_g116939 = 0;
				float Out_Thickness4_g116939 = 0;
				float Out_Diffusion4_g116939 = 0;
				Out_Dummy4_g116939 = Data4_g116939.Dummy;
				Out_Albedo4_g116939 = Data4_g116939.Albedo;
				Out_AlbedoRaw4_g116939 = Data4_g116939.AlbedoRaw;
				Out_NormalTS4_g116939 = Data4_g116939.NormalTS;
				Out_NormalWS4_g116939 = Data4_g116939.NormalWS;
				Out_Shader4_g116939 = Data4_g116939.Shader;
				Out_Emissive4_g116939= Data4_g116939.Emissive;
				Out_MultiMask4_g116939 = Data4_g116939.MultiMask;
				Out_Grayscale4_g116939 = Data4_g116939.Grayscale;
				Out_Luminosity4_g116939= Data4_g116939.Luminosity;
				Out_AlphaClip4_g116939 = Data4_g116939.AlphaClip;
				Out_AlphaFade4_g116939 = Data4_g116939.AlphaFade;
				Out_Translucency4_g116939 = Data4_g116939.Translucency;
				Out_Transmission4_g116939 = Data4_g116939.Transmission;
				Out_Thickness4_g116939 = Data4_g116939.Thickness;
				Out_Diffusion4_g116939 = Data4_g116939.Diffusion;
				half3 Visual_Albedo127_g116938 = Out_Albedo4_g116939;
				float3 temp_output_622_0_g116938 = (_OverlayColor).rgb;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116942) = _OverlayAlbedoTex;
				float localFilterTexture19_g116971 = ( 0.0 );
				SamplerState SamplerDefault19_g116971 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g116971 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g116971 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g116971 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g116971 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g116971 = SamplerDefault19_g116971;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g116971 = SamplerDefault19_g116971;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g116971 = SamplerPoint19_g116971;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g116971 = SamplerLow19_g116971;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g116971 = SamplerMedium19_g116971;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g116971 = SamplerHigh19_g116971;
				#endif
				SamplerState Sampler238_g116942 = SS19_g116971;
				float4 temp_output_6_0_g116943 = _overlay_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g116943 = ( temp_output_6_0_g116943 + ( ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g116943 = temp_output_6_0_g116943;
				#endif
				half4 Overlay_Coords639_g116938 = staticSwitch14_g116943;
				float4 temp_output_37_0_g116942 = Overlay_Coords639_g116938;
				half4 Coords238_g116942 = temp_output_37_0_g116942;
				TVEModelData Data15_g116973 = Data16_g114321;
				float Out_Dummy15_g116973 = 0;
				float3 Out_PositionWS15_g116973 = float3( 0,0,0 );
				float3 Out_PositionWO15_g116973 = float3( 0,0,0 );
				float3 Out_PivotWS15_g116973 = float3( 0,0,0 );
				float3 Out_PivotWO15_g116973 = float3( 0,0,0 );
				float3 Out_NormalWS15_g116973 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g116973 = float3( 0,0,0 );
				float4 Out_VertexData15_g116973 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g116973 = float4( 0,0,0,0 );
				Out_Dummy15_g116973 = Data15_g116973.Dummy;
				Out_PositionWS15_g116973 = Data15_g116973.PositionWS;
				Out_PositionWO15_g116973 = Data15_g116973.PositionWO;
				Out_PivotWS15_g116973 = Data15_g116973.PivotWS;
				Out_PivotWO15_g116973 = Data15_g116973.PivotWO;
				Out_NormalWS15_g116973 = Data15_g116973.NormalWS;
				Out_ViewDirWS15_g116973 = Data15_g116973.ViewDirWS;
				Out_VertexData15_g116973 = Data15_g116973.VertexData;
				Out_BoundsData15_g116973 = Data15_g116973.BoundsData;
				half3 Model_PositionWO602_g116938 = Out_PositionWO15_g116973;
				float3 temp_output_279_0_g116942 = Model_PositionWO602_g116938;
				half3 WorldPosition238_g116942 = temp_output_279_0_g116942;
				half4 localSamplePlanar2D238_g116942 = SamplePlanar2D( Texture238_g116942 , Sampler238_g116942 , Coords238_g116942 , WorldPosition238_g116942 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116942) = _OverlayAlbedoTex;
				SamplerState Sampler246_g116942 = SS19_g116971;
				half4 Coords246_g116942 = temp_output_37_0_g116942;
				half3 WorldPosition246_g116942 = temp_output_279_0_g116942;
				half3 Model_NormalWS712_g116938 = Out_NormalWS15_g116973;
				float3 temp_output_280_0_g116942 = Model_NormalWS712_g116938;
				half3 WorldNormal246_g116942 = temp_output_280_0_g116942;
				half4 localSamplePlanar3D246_g116942 = SamplePlanar3D( Texture246_g116942 , Sampler246_g116942 , Coords246_g116942 , WorldPosition246_g116942 , WorldNormal246_g116942 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116942) = _OverlayAlbedoTex;
				SamplerState Sampler234_g116942 = SS19_g116971;
				float4 Coords234_g116942 = temp_output_37_0_g116942;
				float3 WorldPosition234_g116942 = temp_output_279_0_g116942;
				float4 localSampleStochastic2D234_g116942 = SampleStochastic2D( Texture234_g116942 , Sampler234_g116942 , Coords234_g116942 , WorldPosition234_g116942 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116942) = _OverlayAlbedoTex;
				SamplerState Sampler263_g116942 = SS19_g116971;
				half4 Coords263_g116942 = temp_output_37_0_g116942;
				half3 WorldPosition263_g116942 = temp_output_279_0_g116942;
				half3 WorldNormal263_g116942 = temp_output_280_0_g116942;
				half4 localSampleStochastic3D263_g116942 = SampleStochastic3D( Texture263_g116942 , Sampler263_g116942 , Coords263_g116942 , WorldPosition263_g116942 , WorldNormal263_g116942 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch676_g116938 = localSamplePlanar2D238_g116942;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch676_g116938 = localSamplePlanar3D246_g116942;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch676_g116938 = localSampleStochastic2D234_g116942;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch676_g116938 = localSampleStochastic3D263_g116942;
				#else
				float4 staticSwitch676_g116938 = localSamplePlanar2D238_g116942;
				#endif
				half3 Overlay_Albedo526_g116938 = (staticSwitch676_g116938).xyz;
				#ifdef TVE_OVERLAY_TEX
				float3 staticSwitch578_g116938 = ( temp_output_622_0_g116938 * Overlay_Albedo526_g116938 );
				#else
				float3 staticSwitch578_g116938 = temp_output_622_0_g116938;
				#endif
				float3 temp_output_6_0_g116949 = staticSwitch578_g116938;
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g116949 = ( temp_output_6_0_g116949 + ( _OverlayTextureMode * 0.0 ) );
				#else
				float3 staticSwitch14_g116949 = temp_output_6_0_g116949;
				#endif
				float3 temp_cast_34 = (0.0).xxx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116946) = _OverlayGlitterTexRT;
				SamplerState Sampler246_g116946 = sampler_Linear_Repeat;
				float4 appendResult863_g116938 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g116946 = appendResult863_g116938;
				half4 Coords246_g116946 = temp_output_37_0_g116946;
				float3 temp_output_279_0_g116946 = Model_PositionWO602_g116938;
				half3 WorldPosition246_g116946 = temp_output_279_0_g116946;
				float3 temp_output_280_0_g116946 = Model_NormalWS712_g116938;
				half3 WorldNormal246_g116946 = temp_output_280_0_g116946;
				half4 localSamplePlanar3D246_g116946 = SamplePlanar3D( Texture246_g116946 , Sampler246_g116946 , Coords246_g116946 , WorldPosition246_g116946 , WorldNormal246_g116946 );
				half Overlay_GlitterTex854_g116938 = (localSamplePlanar3D246_g116946).x;
				half3 Model_PositionWS879_g116938 = Out_PositionWS15_g116973;
				#ifdef TVE_OVERLAY_GLITTER
				float3 staticSwitch868_g116938 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g116938 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g116938 ) / _OverlayGlitterDistValue ) ) ) );
				#else
				float3 staticSwitch868_g116938 = temp_cast_34;
				#endif
				half3 Overlay_GlitterColor865_g116938 = staticSwitch868_g116938;
				half Overlay_TexMask908_g116938 = 1.0;
				float3 temp_output_739_21_g116938 = Out_NormalWS4_g116939;
				half3 Visual_NormalWS749_g116938 = temp_output_739_21_g116938;
				float clampResult17_g116959 = clamp( saturate( (Visual_NormalWS749_g116938).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g116958 = _OverlayProjRemap.x;
				float temp_output_10_0_g116958 = ( _OverlayProjRemap.y - temp_output_7_0_g116958 );
				float lerpResult842_g116938 = lerp( 1.0 , saturate( ( ( clampResult17_g116959 - temp_output_7_0_g116958 ) / ( temp_output_10_0_g116958 + 0.0001 ) ) ) , _OverlayProjValue);
				half Overlay_MaskProj457_g116938 = lerpResult842_g116938;
				float temp_output_739_15_g116938 = Out_Luminosity4_g116939;
				half Visual_Luminosity654_g116938 = temp_output_739_15_g116938;
				float clampResult17_g116961 = clamp( Visual_Luminosity654_g116938 , 0.0001 , 0.9999 );
				float temp_output_7_0_g116960 = _OverlayLumaRemap.x;
				float temp_output_10_0_g116960 = ( _OverlayLumaRemap.y - temp_output_7_0_g116960 );
				float lerpResult587_g116938 = lerp( 1.0 , saturate( ( ( clampResult17_g116961 - temp_output_7_0_g116960 ) / ( temp_output_10_0_g116960 + 0.0001 ) ) ) , _OverlayLumaValue);
				half Overlay_MaskLuma438_g116938 = lerpResult587_g116938;
				half Overlay_VertMask801_g116938 = 1.0;
				half Overlay_MaskNoise427_g116938 = 1.0;
				TVEGlobalData Data15_g116940 = Data204_g115912;
				float Out_Dummy15_g116940 = 0;
				float4 Out_CoatParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116940 = float4( 0,0,0,0 );
				Out_Dummy15_g116940 = Data15_g116940.Dummy;
				Out_CoatParams15_g116940 = Data15_g116940.CoatParams;
				Out_PaintParams15_g116940 = Data15_g116940.PaintParams;
				Out_GlowParams15_g116940 = Data15_g116940.GlowParams;
				Out_AtmoParams15_g116940= Data15_g116940.AtmoParams;
				Out_FadeParams15_g116940= Data15_g116940.FadeParams;
				Out_FormParams15_g116940 = Data15_g116940.FormParams;
				Out_LandParams15_g116940 = Data15_g116940.LandParams;
				Out_WindParams15_g116940 = Data15_g116940.WindParams;
				Out_PushParams15_g116940 = Data15_g116940.PushParams;
				half4 Global_AtmoParams516_g116938 = Out_AtmoParams15_g116940;
				#ifdef TVE_OVERLAY_ELEMENT
				float staticSwitch705_g116938 = ( (Global_AtmoParams516_g116938).z * TVE_IsEnabled );
				#else
				float staticSwitch705_g116938 = 1.0;
				#endif
				half Overlay_MaskGlobal429_g116938 = staticSwitch705_g116938;
				half Custom_Mask646_g116938 = 1.0;
				float temp_output_7_0_g116967 = _OverlayBlendRemap1.x;
				float temp_output_10_0_g116967 = ( _OverlayBlendRemap1.y - temp_output_7_0_g116967 );
				half Overlay_Mask494_g116938 = saturate( ( ( ( _OverlayIntensityValue * Overlay_TexMask908_g116938 * Overlay_MaskProj457_g116938 * Overlay_MaskLuma438_g116938 * Overlay_VertMask801_g116938 * Overlay_MaskNoise427_g116938 * Overlay_MaskGlobal429_g116938 * Custom_Mask646_g116938 ) - temp_output_7_0_g116967 ) / ( temp_output_10_0_g116967 + 0.0001 ) ) );
				float3 lerpResult467_g116938 = lerp( Visual_Albedo127_g116938 , ( staticSwitch14_g116949 + Overlay_GlitterColor865_g116938 ) , Overlay_Mask494_g116938);
				#ifdef TVE_OVERLAY
				float3 staticSwitch577_g116938 = lerpResult467_g116938;
				#else
				float3 staticSwitch577_g116938 = Visual_Albedo127_g116938;
				#endif
				half3 Final_Albedo493_g116938 = staticSwitch577_g116938;
				float3 In_Albedo3_g116941 = Final_Albedo493_g116938;
				float3 In_AlbedoRaw3_g116941 = Out_AlbedoRaw4_g116939;
				half2 Visual_NormalTS535_g116938 = Out_NormalTS4_g116939;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116944) = _OverlayNormalTex;
				float localFilterTexture29_g116972 = ( 0.0 );
				SamplerState SamplerDefault29_g116972 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g116972 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g116972 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g116972 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g116972 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g116972 = SamplerDefault29_g116972;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g116972 = SamplerDefault29_g116972;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g116972 = SamplerPoint29_g116972;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g116972 = SamplerLow29_g116972;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g116972 = SamplerMedium29_g116972;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g116972 = SamplerHigh29_g116972;
				#endif
				SamplerState Sampler238_g116944 = SS29_g116972;
				float4 temp_output_37_0_g116944 = Overlay_Coords639_g116938;
				half4 Coords238_g116944 = temp_output_37_0_g116944;
				float3 temp_output_279_0_g116944 = Model_PositionWO602_g116938;
				half3 WorldPosition238_g116944 = temp_output_279_0_g116944;
				half4 localSamplePlanar2D238_g116944 = SamplePlanar2D( Texture238_g116944 , Sampler238_g116944 , Coords238_g116944 , WorldPosition238_g116944 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116944) = _OverlayNormalTex;
				SamplerState Sampler246_g116944 = SS29_g116972;
				half4 Coords246_g116944 = temp_output_37_0_g116944;
				half3 WorldPosition246_g116944 = temp_output_279_0_g116944;
				float3 temp_output_280_0_g116944 = Model_NormalWS712_g116938;
				half3 WorldNormal246_g116944 = temp_output_280_0_g116944;
				half4 localSamplePlanar3D246_g116944 = SamplePlanar3D( Texture246_g116944 , Sampler246_g116944 , Coords246_g116944 , WorldPosition246_g116944 , WorldNormal246_g116944 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116944) = _OverlayNormalTex;
				SamplerState Sampler234_g116944 = SS29_g116972;
				float4 Coords234_g116944 = temp_output_37_0_g116944;
				float3 WorldPosition234_g116944 = temp_output_279_0_g116944;
				float4 localSampleStochastic2D234_g116944 = SampleStochastic2D( Texture234_g116944 , Sampler234_g116944 , Coords234_g116944 , WorldPosition234_g116944 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116944) = _OverlayNormalTex;
				SamplerState Sampler263_g116944 = SS29_g116972;
				half4 Coords263_g116944 = temp_output_37_0_g116944;
				half3 WorldPosition263_g116944 = temp_output_279_0_g116944;
				half3 WorldNormal263_g116944 = temp_output_280_0_g116944;
				half4 localSampleStochastic3D263_g116944 = SampleStochastic3D( Texture263_g116944 , Sampler263_g116944 , Coords263_g116944 , WorldPosition263_g116944 , WorldNormal263_g116944 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch686_g116938 = localSamplePlanar2D238_g116944;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch686_g116938 = localSamplePlanar3D246_g116944;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch686_g116938 = localSampleStochastic2D234_g116944;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch686_g116938 = localSampleStochastic3D263_g116944;
				#else
				float4 staticSwitch686_g116938 = localSamplePlanar2D238_g116944;
				#endif
				half4 Normal_Packed45_g116948 = staticSwitch686_g116938;
				float2 appendResult58_g116948 = (float2(( (Normal_Packed45_g116948).x * (Normal_Packed45_g116948).w ) , (Normal_Packed45_g116948).y));
				half2 Normal_Default50_g116948 = appendResult58_g116948;
				half2 Normal_ASTC41_g116948 = (Normal_Packed45_g116948).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g116948 = Normal_ASTC41_g116948;
				#else
				float2 staticSwitch38_g116948 = Normal_Default50_g116948;
				#endif
				half2 Normal_NO_DTX544_g116948 = (Normal_Packed45_g116948).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g116948 = Normal_NO_DTX544_g116948;
				#else
				float2 staticSwitch37_g116948 = staticSwitch38_g116948;
				#endif
				half2 Normal_Planar45_g116947 = (staticSwitch37_g116948*2.0 + -1.0);
				float2 break71_g116947 = Normal_Planar45_g116947;
				float3 appendResult72_g116947 = (float3(break71_g116947.x , 0.0 , break71_g116947.y));
				half2 Overlay_Normal528_g116938 = (mul( ase_worldToTangent, appendResult72_g116947 )).xy;
				#ifdef TVE_OVERLAY_TEX
				float2 staticSwitch579_g116938 = Overlay_Normal528_g116938;
				#else
				float2 staticSwitch579_g116938 = Visual_NormalTS535_g116938;
				#endif
				float2 lerpResult551_g116938 = lerp( Visual_NormalTS535_g116938 , ( staticSwitch579_g116938 * _OverlayNormalValue ) , Overlay_Mask494_g116938);
				#ifdef TVE_OVERLAY
				float2 staticSwitch583_g116938 = lerpResult551_g116938;
				#else
				float2 staticSwitch583_g116938 = Visual_NormalTS535_g116938;
				#endif
				half2 Final_NormalTS499_g116938 = staticSwitch583_g116938;
				float2 In_NormalTS3_g116941 = Final_NormalTS499_g116938;
				float3 In_NormalWS3_g116941 = temp_output_739_21_g116938;
				half4 Visual_Masks536_g116938 = Out_Shader4_g116939;
				float4 appendResult585_g116938 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
				float4 lerpResult584_g116938 = lerp( Visual_Masks536_g116938 , appendResult585_g116938 , Overlay_Mask494_g116938);
				#ifdef TVE_OVERLAY
				float4 staticSwitch586_g116938 = lerpResult584_g116938;
				#else
				float4 staticSwitch586_g116938 = Visual_Masks536_g116938;
				#endif
				half4 Final_Masks482_g116938 = staticSwitch586_g116938;
				float4 In_Shader3_g116941 = Final_Masks482_g116938;
				float4 In_Emissive3_g116941 = Out_Emissive4_g116939;
				float temp_output_739_12_g116938 = Out_Grayscale4_g116939;
				float In_Grayscale3_g116941 = temp_output_739_12_g116938;
				float In_Luminosity3_g116941 = temp_output_739_15_g116938;
				float In_MultiMask3_g116941 = Out_MultiMask4_g116939;
				float In_AlphaClip3_g116941 = Out_AlphaClip4_g116939;
				float In_AlphaFade3_g116941 = Out_AlphaFade4_g116939;
				float3 In_Translucency3_g116941 = Out_Translucency4_g116939;
				half Visual_Transmission699_g116938 = Out_Transmission4_g116939;
				float lerpResult746_g116938 = lerp( Visual_Transmission699_g116938 , ( Visual_Transmission699_g116938 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g116938 * Overlay_MaskNoise427_g116938 * Overlay_MaskGlobal429_g116938 ));
				#ifdef TVE_OVERLAY
				float staticSwitch703_g116938 = lerpResult746_g116938;
				#else
				float staticSwitch703_g116938 = Visual_Transmission699_g116938;
				#endif
				half Final_Transmission702_g116938 = staticSwitch703_g116938;
				float In_Transmission3_g116941 = Final_Transmission702_g116938;
				float In_Thickness3_g116941 = Out_Thickness4_g116939;
				float In_Diffusion3_g116941 = Out_Diffusion4_g116939;
				Data3_g116941.Dummy = In_Dummy3_g116941;
				Data3_g116941.Albedo = In_Albedo3_g116941;
				Data3_g116941.AlbedoRaw = In_AlbedoRaw3_g116941;
				Data3_g116941.NormalTS = In_NormalTS3_g116941;
				Data3_g116941.NormalWS = In_NormalWS3_g116941;
				Data3_g116941.Shader = In_Shader3_g116941;
				Data3_g116941.Emissive= In_Emissive3_g116941;
				Data3_g116941.MultiMask = In_MultiMask3_g116941;
				Data3_g116941.Grayscale = In_Grayscale3_g116941;
				Data3_g116941.Luminosity = In_Luminosity3_g116941;
				Data3_g116941.AlphaClip = In_AlphaClip3_g116941;
				Data3_g116941.AlphaFade = In_AlphaFade3_g116941;
				Data3_g116941.Translucency = In_Translucency3_g116941;
				Data3_g116941.Transmission = In_Transmission3_g116941;
				Data3_g116941.Thickness = In_Thickness3_g116941;
				Data3_g116941.Diffusion = In_Diffusion3_g116941;
				TVEVisualData Data4_g116975 = Data3_g116941;
				float Out_Dummy4_g116975 = 0;
				float3 Out_Albedo4_g116975 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116975 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116975 = float2( 0,0 );
				float3 Out_NormalWS4_g116975 = float3( 0,0,0 );
				float4 Out_Shader4_g116975 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116975 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116975 = 0;
				float Out_Grayscale4_g116975 = 0;
				float Out_Luminosity4_g116975 = 0;
				float Out_AlphaClip4_g116975 = 0;
				float Out_AlphaFade4_g116975 = 0;
				float3 Out_Translucency4_g116975 = float3( 0,0,0 );
				float Out_Transmission4_g116975 = 0;
				float Out_Thickness4_g116975 = 0;
				float Out_Diffusion4_g116975 = 0;
				Out_Dummy4_g116975 = Data4_g116975.Dummy;
				Out_Albedo4_g116975 = Data4_g116975.Albedo;
				Out_AlbedoRaw4_g116975 = Data4_g116975.AlbedoRaw;
				Out_NormalTS4_g116975 = Data4_g116975.NormalTS;
				Out_NormalWS4_g116975 = Data4_g116975.NormalWS;
				Out_Shader4_g116975 = Data4_g116975.Shader;
				Out_Emissive4_g116975= Data4_g116975.Emissive;
				Out_MultiMask4_g116975 = Data4_g116975.MultiMask;
				Out_Grayscale4_g116975 = Data4_g116975.Grayscale;
				Out_Luminosity4_g116975= Data4_g116975.Luminosity;
				Out_AlphaClip4_g116975 = Data4_g116975.AlphaClip;
				Out_AlphaFade4_g116975 = Data4_g116975.AlphaFade;
				Out_Translucency4_g116975 = Data4_g116975.Translucency;
				Out_Transmission4_g116975 = Data4_g116975.Transmission;
				Out_Thickness4_g116975 = Data4_g116975.Thickness;
				Out_Diffusion4_g116975 = Data4_g116975.Diffusion;
				half3 Visual_Albedo127_g116974 = Out_Albedo4_g116975;
				TVEGlobalData Data15_g116980 = Data204_g115912;
				float Out_Dummy15_g116980 = 0;
				float4 Out_CoatParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116980 = float4( 0,0,0,0 );
				Out_Dummy15_g116980 = Data15_g116980.Dummy;
				Out_CoatParams15_g116980 = Data15_g116980.CoatParams;
				Out_PaintParams15_g116980 = Data15_g116980.PaintParams;
				Out_GlowParams15_g116980 = Data15_g116980.GlowParams;
				Out_AtmoParams15_g116980= Data15_g116980.AtmoParams;
				Out_FadeParams15_g116980= Data15_g116980.FadeParams;
				Out_FormParams15_g116980 = Data15_g116980.FormParams;
				Out_LandParams15_g116980 = Data15_g116980.LandParams;
				Out_WindParams15_g116980 = Data15_g116980.WindParams;
				Out_PushParams15_g116980 = Data15_g116980.PushParams;
				half4 Global_AtmoParams516_g116974 = Out_AtmoParams15_g116980;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch663_g116974 = ( (Global_AtmoParams516_g116974).y * TVE_IsEnabled );
				#else
				float staticSwitch663_g116974 = 1.0;
				#endif
				half Global_Wetness429_g116974 = staticSwitch663_g116974;
				half Wetness_Value1042_g116974 = ( _WetnessIntensityValue * Global_Wetness429_g116974 );
				half Wetness_VertMask1024_g116974 = 1.0;
				float temp_output_1043_0_g116974 = ( Wetness_Value1042_g116974 * Wetness_VertMask1024_g116974 );
				half Wetness_Mask866_g116974 = temp_output_1043_0_g116974;
				half Water_VertMask1094_g116974 = 1.0;
				half4 Visual_Masks536_g116974 = Out_Shader4_g116975;
				float lerpResult1013_g116974 = lerp( 1.0 , (Visual_Masks536_g116974).z , _WetnessWaterBaseValue);
				half Water_HeightMask782_g116974 = lerpResult1013_g116974;
				float clampResult17_g116989 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g116974 * Water_VertMask1094_g116974 ) - Water_HeightMask782_g116974 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g116990 = _WetnessWaterBlendRemap.x;
				float temp_output_10_0_g116990 = ( _WetnessWaterBlendRemap.y - temp_output_7_0_g116990 );
				TVEModelData Data15_g116988 = Data16_g114321;
				float Out_Dummy15_g116988 = 0;
				float3 Out_PositionWS15_g116988 = float3( 0,0,0 );
				float3 Out_PositionWO15_g116988 = float3( 0,0,0 );
				float3 Out_PivotWS15_g116988 = float3( 0,0,0 );
				float3 Out_PivotWO15_g116988 = float3( 0,0,0 );
				float3 Out_NormalWS15_g116988 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g116988 = float3( 0,0,0 );
				float4 Out_VertexData15_g116988 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g116988 = float4( 0,0,0,0 );
				Out_Dummy15_g116988 = Data15_g116988.Dummy;
				Out_PositionWS15_g116988 = Data15_g116988.PositionWS;
				Out_PositionWO15_g116988 = Data15_g116988.PositionWO;
				Out_PivotWS15_g116988 = Data15_g116988.PivotWS;
				Out_PivotWO15_g116988 = Data15_g116988.PivotWO;
				Out_NormalWS15_g116988 = Data15_g116988.NormalWS;
				Out_ViewDirWS15_g116988 = Data15_g116988.ViewDirWS;
				Out_VertexData15_g116988 = Data15_g116988.VertexData;
				Out_BoundsData15_g116988 = Data15_g116988.BoundsData;
				half3 Model_NormalWS798_g116974 = Out_NormalWS15_g116988;
				float temp_output_786_0_g116974 = saturate( (Model_NormalWS798_g116974).y );
				half Wetness_ProjMask790_g116974 = temp_output_786_0_g116974;
				half Water_Mask760_g116974 = ( saturate( ( ( clampResult17_g116989 - temp_output_7_0_g116990 ) / ( temp_output_10_0_g116990 + 0.0001 ) ) ) * Wetness_ProjMask790_g116974 );
				float3 lerpResult918_g116974 = lerp( Visual_Albedo127_g116974 , ( Visual_Albedo127_g116974 * (_WetnessWaterColor).rgb ) , Water_Mask760_g116974);
				#ifdef TVE_WETNESS_WATER
				float3 staticSwitch946_g116974 = lerpResult918_g116974;
				#else
				float3 staticSwitch946_g116974 = Visual_Albedo127_g116974;
				#endif
				float3 lerpResult768_g116974 = lerp( staticSwitch946_g116974 , ( staticSwitch946_g116974 * staticSwitch946_g116974 ) , _WetnessContrastValue);
				float3 lerpResult651_g116974 = lerp( Visual_Albedo127_g116974 , lerpResult768_g116974 , Wetness_Mask866_g116974);
				#ifdef TVE_WETNESS
				float3 staticSwitch577_g116974 = lerpResult651_g116974;
				#else
				float3 staticSwitch577_g116974 = Visual_Albedo127_g116974;
				#endif
				half3 Final_Albedo493_g116974 = staticSwitch577_g116974;
				float3 In_Albedo3_g116976 = Final_Albedo493_g116974;
				float3 In_AlbedoRaw3_g116976 = Out_AlbedoRaw4_g116975;
				half2 Visual_Normal535_g116974 = Out_NormalTS4_g116975;
				float lerpResult877_g116974 = lerp( 1.0 , 0.0 , ( Water_Mask760_g116974 * Water_Mask760_g116974 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch957_g116974 = ( Visual_Normal535_g116974 * lerpResult877_g116974 );
				#else
				float2 staticSwitch957_g116974 = Visual_Normal535_g116974;
				#endif
				float2 temp_cast_35 = (0.0).xx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116986) = _WetnessDropsTexRT;
				SamplerState Sampler238_g116986 = sampler_Linear_Repeat_Aniso8;
				float4 appendResult924_g116974 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g116986 = appendResult924_g116974;
				half4 Coords238_g116986 = temp_output_37_0_g116986;
				half3 Model_PositionWO602_g116974 = Out_PositionWO15_g116988;
				float3 temp_output_279_0_g116986 = Model_PositionWO602_g116974;
				half3 WorldPosition238_g116986 = temp_output_279_0_g116986;
				half4 localSamplePlanar2D238_g116986 = SamplePlanar2D( Texture238_g116986 , Sampler238_g116986 , Coords238_g116986 , WorldPosition238_g116986 );
				float4 temp_output_1010_0_g116974 = localSamplePlanar2D238_g116986;
				half2 Rain_DropsNormal919_g116974 = (temp_output_1010_0_g116974).zw;
				float2 temp_output_903_0_g116974 = (Rain_DropsNormal919_g116974*2.0 + -1.0);
				half2 Rain_RingsNormal713_g116974 = (temp_output_1010_0_g116974).xy;
				float2 lerpResult904_g116974 = lerp( temp_output_903_0_g116974 , (Rain_RingsNormal713_g116974*2.0 + -1.0) , ( Water_Mask760_g116974 * Water_Mask760_g116974 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch960_g116974 = lerpResult904_g116974;
				#else
				float2 staticSwitch960_g116974 = temp_output_903_0_g116974;
				#endif
				half2 Rain_Drops1002_g116974 = ( staticSwitch960_g116974 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
				half3 Model_PositionWS823_g116974 = Out_PositionWS15_g116988;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch949_g116974 = ( (Global_AtmoParams516_g116974).w * TVE_IsEnabled );
				#else
				float staticSwitch949_g116974 = 1.0;
				#endif
				half Global_Rain955_g116974 = staticSwitch949_g116974;
				half Rain_Value1067_g116974 = Global_Rain955_g116974;
				half Rain_VertMask1108_g116974 = 1.0;
				half Rain_Mask999_g116974 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g116974 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g116974 * Rain_VertMask1108_g116974 );
				half2 Normal_Planar45_g116985 = ( Rain_Drops1002_g116974 * Rain_Mask999_g116974 * Wetness_ProjMask790_g116974 );
				float2 break71_g116985 = Normal_Planar45_g116985;
				float3 appendResult72_g116985 = (float3(break71_g116985.x , 0.0 , break71_g116985.y));
				half2 Wetness_Normal526_g116974 = (mul( ase_worldToTangent, appendResult72_g116985 )).xy;
				#ifdef TVE_WETNESS_DROPS
				float2 staticSwitch583_g116974 = Wetness_Normal526_g116974;
				#else
				float2 staticSwitch583_g116974 = temp_cast_35;
				#endif
				#ifdef TVE_WETNESS
				float2 staticSwitch774_g116974 = ( staticSwitch957_g116974 + staticSwitch583_g116974 );
				#else
				float2 staticSwitch774_g116974 = Visual_Normal535_g116974;
				#endif
				half2 Final_Normal499_g116974 = staticSwitch774_g116974;
				float2 In_NormalTS3_g116976 = Final_Normal499_g116974;
				float3 In_NormalWS3_g116976 = Out_NormalWS4_g116975;
				float4 break658_g116974 = Visual_Masks536_g116974;
				float temp_output_935_0_g116974 = ( Wetness_Mask866_g116974 * _WetnessSmoothnessValue );
				float lerpResult941_g116974 = lerp( temp_output_935_0_g116974 , 2.0 , Water_Mask760_g116974);
				#ifdef TVE_WETNESS_WATER
				float staticSwitch959_g116974 = lerpResult941_g116974;
				#else
				float staticSwitch959_g116974 = temp_output_935_0_g116974;
				#endif
				float4 appendResult661_g116974 = (float4(break658_g116974.x , break658_g116974.y , break658_g116974.z , saturate( ( break658_g116974.w + staticSwitch959_g116974 ) )));
				#ifdef TVE_WETNESS
				float4 staticSwitch586_g116974 = appendResult661_g116974;
				#else
				float4 staticSwitch586_g116974 = Visual_Masks536_g116974;
				#endif
				half4 Final_Masks482_g116974 = staticSwitch586_g116974;
				float4 In_Shader3_g116976 = Final_Masks482_g116974;
				float4 In_Emissive3_g116976 = Out_Emissive4_g116975;
				float In_Grayscale3_g116976 = Out_Grayscale4_g116975;
				float In_Luminosity3_g116976 = Out_Luminosity4_g116975;
				float In_MultiMask3_g116976 = Out_MultiMask4_g116975;
				float In_AlphaClip3_g116976 = Out_AlphaClip4_g116975;
				float In_AlphaFade3_g116976 = Out_AlphaFade4_g116975;
				float3 In_Translucency3_g116976 = Out_Translucency4_g116975;
				float In_Transmission3_g116976 = Out_Transmission4_g116975;
				float In_Thickness3_g116976 = Out_Thickness4_g116975;
				float In_Diffusion3_g116976 = Out_Diffusion4_g116975;
				Data3_g116976.Dummy = In_Dummy3_g116976;
				Data3_g116976.Albedo = In_Albedo3_g116976;
				Data3_g116976.AlbedoRaw = In_AlbedoRaw3_g116976;
				Data3_g116976.NormalTS = In_NormalTS3_g116976;
				Data3_g116976.NormalWS = In_NormalWS3_g116976;
				Data3_g116976.Shader = In_Shader3_g116976;
				Data3_g116976.Emissive= In_Emissive3_g116976;
				Data3_g116976.MultiMask = In_MultiMask3_g116976;
				Data3_g116976.Grayscale = In_Grayscale3_g116976;
				Data3_g116976.Luminosity = In_Luminosity3_g116976;
				Data3_g116976.AlphaClip = In_AlphaClip3_g116976;
				Data3_g116976.AlphaFade = In_AlphaFade3_g116976;
				Data3_g116976.Translucency = In_Translucency3_g116976;
				Data3_g116976.Transmission = In_Transmission3_g116976;
				Data3_g116976.Thickness = In_Thickness3_g116976;
				Data3_g116976.Diffusion = In_Diffusion3_g116976;
				TVEVisualData Data4_g117012 = Data3_g116976;
				float Out_Dummy4_g117012 = 0;
				float3 Out_Albedo4_g117012 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g117012 = float3( 0,0,0 );
				float2 Out_NormalTS4_g117012 = float2( 0,0 );
				float3 Out_NormalWS4_g117012 = float3( 0,0,0 );
				float4 Out_Shader4_g117012 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g117012 = float4( 0,0,0,0 );
				float Out_MultiMask4_g117012 = 0;
				float Out_Grayscale4_g117012 = 0;
				float Out_Luminosity4_g117012 = 0;
				float Out_AlphaClip4_g117012 = 0;
				float Out_AlphaFade4_g117012 = 0;
				float3 Out_Translucency4_g117012 = float3( 0,0,0 );
				float Out_Transmission4_g117012 = 0;
				float Out_Thickness4_g117012 = 0;
				float Out_Diffusion4_g117012 = 0;
				Out_Dummy4_g117012 = Data4_g117012.Dummy;
				Out_Albedo4_g117012 = Data4_g117012.Albedo;
				Out_AlbedoRaw4_g117012 = Data4_g117012.AlbedoRaw;
				Out_NormalTS4_g117012 = Data4_g117012.NormalTS;
				Out_NormalWS4_g117012 = Data4_g117012.NormalWS;
				Out_Shader4_g117012 = Data4_g117012.Shader;
				Out_Emissive4_g117012= Data4_g117012.Emissive;
				Out_MultiMask4_g117012 = Data4_g117012.MultiMask;
				Out_Grayscale4_g117012 = Data4_g117012.Grayscale;
				Out_Luminosity4_g117012= Data4_g117012.Luminosity;
				Out_AlphaClip4_g117012 = Data4_g117012.AlphaClip;
				Out_AlphaFade4_g117012 = Data4_g117012.AlphaFade;
				Out_Translucency4_g117012 = Data4_g117012.Translucency;
				Out_Transmission4_g117012 = Data4_g117012.Transmission;
				Out_Thickness4_g117012 = Data4_g117012.Thickness;
				Out_Diffusion4_g117012 = Data4_g117012.Diffusion;
				float3 temp_output_297_0_g117003 = Out_Albedo4_g117012;
				float3 In_Albedo3_g117013 = temp_output_297_0_g117003;
				float3 temp_output_297_23_g117003 = Out_AlbedoRaw4_g117012;
				float3 In_AlbedoRaw3_g117013 = temp_output_297_23_g117003;
				float2 In_NormalTS3_g117013 = Out_NormalTS4_g117012;
				float3 In_NormalWS3_g117013 = Out_NormalWS4_g117012;
				float4 In_Shader3_g117013 = Out_Shader4_g117012;
				float4 temp_cast_36 = (0.0).xxxx;
				half4 Visual_Emissive255_g117003 = Out_Emissive4_g117012;
				half Emissive_MeshMask221_g117003 = 1.0;
				half Emissive_Mask103_g117003 = 1.0;
				float temp_output_279_0_g117003 = ( Emissive_MeshMask221_g117003 * Emissive_Mask103_g117003 );
				float3 appendResult293_g117003 = (float3(temp_output_279_0_g117003 , temp_output_279_0_g117003 , temp_output_279_0_g117003));
				half3 Local_EmissiveColor278_g117003 = appendResult293_g117003;
				float3 temp_cast_37 = (1.0).xxx;
				TVEGlobalData Data15_g117004 = Data204_g115912;
				float Out_Dummy15_g117004 = 0;
				float4 Out_CoatParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g117004 = float4( 0,0,0,0 );
				Out_Dummy15_g117004 = Data15_g117004.Dummy;
				Out_CoatParams15_g117004 = Data15_g117004.CoatParams;
				Out_PaintParams15_g117004 = Data15_g117004.PaintParams;
				Out_GlowParams15_g117004 = Data15_g117004.GlowParams;
				Out_AtmoParams15_g117004= Data15_g117004.AtmoParams;
				Out_FadeParams15_g117004= Data15_g117004.FadeParams;
				Out_FormParams15_g117004 = Data15_g117004.FormParams;
				Out_LandParams15_g117004 = Data15_g117004.LandParams;
				Out_WindParams15_g117004 = Data15_g117004.WindParams;
				Out_PushParams15_g117004 = Data15_g117004.PushParams;
				half4 Global_GlowParams179_g117003 = Out_GlowParams15_g117004;
				float3 lerpResult299_g117003 = lerp( float3( 1,1,1 ) , (Global_GlowParams179_g117003).xyz , TVE_IsEnabled);
				#ifdef TVE_EMISSIVE_ELEMENT
				float3 staticSwitch228_g117003 = lerpResult299_g117003;
				#else
				float3 staticSwitch228_g117003 = temp_cast_37;
				#endif
				half3 Emissive_GlobalMask248_g117003 = staticSwitch228_g117003;
				half3 Visual_AlbedoRaw306_g117003 = temp_output_297_23_g117003;
				float3 lerpResult307_g117003 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g117003 , _EmissiveColorMode);
				half3 Local_EmissiveValue88_g117003 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g117003 * lerpResult307_g117003 );
				half3 Emissive_Blend260_g117003 = ( ( (Visual_Emissive255_g117003).xyz * Local_EmissiveColor278_g117003 ) * Local_EmissiveValue88_g117003 );
				float3 temp_output_3_0_g117017 = Emissive_Blend260_g117003;
				float temp_output_15_0_g117017 = _emissive_power_value;
				float3 temp_output_23_0_g117017 = ( temp_output_3_0_g117017 * temp_output_15_0_g117017 );
				half Local_EmissiveMask294_g117003 = temp_output_279_0_g117003;
				float4 appendResult295_g117003 = (float4(temp_output_23_0_g117017 , Local_EmissiveMask294_g117003));
				#ifdef TVE_EMISSIVE
				float4 staticSwitch129_g117003 = appendResult295_g117003;
				#else
				float4 staticSwitch129_g117003 = temp_cast_36;
				#endif
				half4 Final_Emissive184_g117003 = staticSwitch129_g117003;
				float4 In_Emissive3_g117013 = Final_Emissive184_g117003;
				float In_Grayscale3_g117013 = Out_Grayscale4_g117012;
				float In_Luminosity3_g117013 = Out_Luminosity4_g117012;
				float temp_output_297_11_g117003 = Out_MultiMask4_g117012;
				float In_MultiMask3_g117013 = temp_output_297_11_g117003;
				float In_AlphaClip3_g117013 = Out_AlphaClip4_g117012;
				float In_AlphaFade3_g117013 = Out_AlphaFade4_g117012;
				float3 In_Translucency3_g117013 = Out_Translucency4_g117012;
				float In_Transmission3_g117013 = Out_Transmission4_g117012;
				float In_Thickness3_g117013 = Out_Thickness4_g117012;
				float In_Diffusion3_g117013 = Out_Diffusion4_g117012;
				Data3_g117013.Dummy = In_Dummy3_g117013;
				Data3_g117013.Albedo = In_Albedo3_g117013;
				Data3_g117013.AlbedoRaw = In_AlbedoRaw3_g117013;
				Data3_g117013.NormalTS = In_NormalTS3_g117013;
				Data3_g117013.NormalWS = In_NormalWS3_g117013;
				Data3_g117013.Shader = In_Shader3_g117013;
				Data3_g117013.Emissive= In_Emissive3_g117013;
				Data3_g117013.MultiMask = In_MultiMask3_g117013;
				Data3_g117013.Grayscale = In_Grayscale3_g117013;
				Data3_g117013.Luminosity = In_Luminosity3_g117013;
				Data3_g117013.AlphaClip = In_AlphaClip3_g117013;
				Data3_g117013.AlphaFade = In_AlphaFade3_g117013;
				Data3_g117013.Translucency = In_Translucency3_g117013;
				Data3_g117013.Transmission = In_Transmission3_g117013;
				Data3_g117013.Thickness = In_Thickness3_g117013;
				Data3_g117013.Diffusion = In_Diffusion3_g117013;
				TVEVisualData Data4_g117029 = Data3_g117013;
				float Out_Dummy4_g117029 = 0;
				float3 Out_Albedo4_g117029 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g117029 = float3( 0,0,0 );
				float2 Out_NormalTS4_g117029 = float2( 0,0 );
				float3 Out_NormalWS4_g117029 = float3( 0,0,0 );
				float4 Out_Shader4_g117029 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g117029 = float4( 0,0,0,0 );
				float Out_MultiMask4_g117029 = 0;
				float Out_Grayscale4_g117029 = 0;
				float Out_Luminosity4_g117029 = 0;
				float Out_AlphaClip4_g117029 = 0;
				float Out_AlphaFade4_g117029 = 0;
				float3 Out_Translucency4_g117029 = float3( 0,0,0 );
				float Out_Transmission4_g117029 = 0;
				float Out_Thickness4_g117029 = 0;
				float Out_Diffusion4_g117029 = 0;
				Out_Dummy4_g117029 = Data4_g117029.Dummy;
				Out_Albedo4_g117029 = Data4_g117029.Albedo;
				Out_AlbedoRaw4_g117029 = Data4_g117029.AlbedoRaw;
				Out_NormalTS4_g117029 = Data4_g117029.NormalTS;
				Out_NormalWS4_g117029 = Data4_g117029.NormalWS;
				Out_Shader4_g117029 = Data4_g117029.Shader;
				Out_Emissive4_g117029= Data4_g117029.Emissive;
				Out_MultiMask4_g117029 = Data4_g117029.MultiMask;
				Out_Grayscale4_g117029 = Data4_g117029.Grayscale;
				Out_Luminosity4_g117029= Data4_g117029.Luminosity;
				Out_AlphaClip4_g117029 = Data4_g117029.AlphaClip;
				Out_AlphaFade4_g117029 = Data4_g117029.AlphaFade;
				Out_Translucency4_g117029 = Data4_g117029.Translucency;
				Out_Transmission4_g117029 = Data4_g117029.Transmission;
				Out_Thickness4_g117029 = Data4_g117029.Thickness;
				Out_Diffusion4_g117029 = Data4_g117029.Diffusion;
				float3 In_Albedo3_g117019 = Out_Albedo4_g117029;
				float3 In_AlbedoRaw3_g117019 = Out_AlbedoRaw4_g117029;
				float2 In_NormalTS3_g117019 = Out_NormalTS4_g117029;
				float3 In_NormalWS3_g117019 = Out_NormalWS4_g117029;
				float4 In_Shader3_g117019 = Out_Shader4_g117029;
				float4 In_Emissive3_g117019 = Out_Emissive4_g117029;
				float In_Grayscale3_g117019 = Out_Grayscale4_g117029;
				float In_Luminosity3_g117019 = Out_Luminosity4_g117029;
				float temp_output_836_11_g117018 = Out_MultiMask4_g117029;
				float In_MultiMask3_g117019 = temp_output_836_11_g117018;
				half Visual_AlphaClip667_g117018 = Out_AlphaClip4_g117029;
				TVEGlobalData Data15_g117028 = Data204_g115912;
				float Out_Dummy15_g117028 = 0;
				float4 Out_CoatParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g117028 = float4( 0,0,0,0 );
				Out_Dummy15_g117028 = Data15_g117028.Dummy;
				Out_CoatParams15_g117028 = Data15_g117028.CoatParams;
				Out_PaintParams15_g117028 = Data15_g117028.PaintParams;
				Out_GlowParams15_g117028 = Data15_g117028.GlowParams;
				Out_AtmoParams15_g117028= Data15_g117028.AtmoParams;
				Out_FadeParams15_g117028= Data15_g117028.FadeParams;
				Out_FormParams15_g117028 = Data15_g117028.FormParams;
				Out_LandParams15_g117028 = Data15_g117028.LandParams;
				Out_WindParams15_g117028 = Data15_g117028.WindParams;
				Out_PushParams15_g117028 = Data15_g117028.PushParams;
				half4 Global_FadeParams516_g117018 = Out_FadeParams15_g117028;
				#ifdef TVE_CUTOUT_ELEMENT
				float staticSwitch663_g117018 = saturate( (Global_FadeParams516_g117018).w );
				#else
				float staticSwitch663_g117018 = 1.0;
				#endif
				half Local_GlobalMask429_g117018 = staticSwitch663_g117018;
				half Local_AlphaMask814_g117018 = 1.0;
				half Local_NoiseMask678_g117018 = 1.0;
				half Local_VertMask766_g117018 = 1.0;
				half Local_MultiMask685_g117018 = 1.0;
				float lerpResult728_g117018 = lerp( Visual_AlphaClip667_g117018 , min( Visual_AlphaClip667_g117018 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g117018 ) - ( Local_AlphaMask814_g117018 * Local_NoiseMask678_g117018 * Local_VertMask766_g117018 ) ) ) ) , Local_MultiMask685_g117018);
				half Local_AlphaClip784_g117018 = lerpResult728_g117018;
				#ifdef TVE_CUTOUT
				float staticSwitch577_g117018 = Local_AlphaClip784_g117018;
				#else
				float staticSwitch577_g117018 = Visual_AlphaClip667_g117018;
				#endif
				half Final_AlphaClip795_g117018 = staticSwitch577_g117018;
				float In_AlphaClip3_g117019 = Final_AlphaClip795_g117018;
				float In_AlphaFade3_g117019 = Out_AlphaFade4_g117029;
				float3 In_Translucency3_g117019 = Out_Translucency4_g117029;
				float In_Transmission3_g117019 = Out_Transmission4_g117029;
				float In_Thickness3_g117019 = Out_Thickness4_g117029;
				float In_Diffusion3_g117019 = Out_Diffusion4_g117029;
				Data3_g117019.Dummy = In_Dummy3_g117019;
				Data3_g117019.Albedo = In_Albedo3_g117019;
				Data3_g117019.AlbedoRaw = In_AlbedoRaw3_g117019;
				Data3_g117019.NormalTS = In_NormalTS3_g117019;
				Data3_g117019.NormalWS = In_NormalWS3_g117019;
				Data3_g117019.Shader = In_Shader3_g117019;
				Data3_g117019.Emissive= In_Emissive3_g117019;
				Data3_g117019.MultiMask = In_MultiMask3_g117019;
				Data3_g117019.Grayscale = In_Grayscale3_g117019;
				Data3_g117019.Luminosity = In_Luminosity3_g117019;
				Data3_g117019.AlphaClip = In_AlphaClip3_g117019;
				Data3_g117019.AlphaFade = In_AlphaFade3_g117019;
				Data3_g117019.Translucency = In_Translucency3_g117019;
				Data3_g117019.Transmission = In_Transmission3_g117019;
				Data3_g117019.Thickness = In_Thickness3_g117019;
				Data3_g117019.Diffusion = In_Diffusion3_g117019;
				TVEVisualData Data4_g117042 = Data3_g117019;
				float Out_Dummy4_g117042 = 0;
				float3 Out_Albedo4_g117042 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g117042 = float3( 0,0,0 );
				float2 Out_NormalTS4_g117042 = float2( 0,0 );
				float3 Out_NormalWS4_g117042 = float3( 0,0,0 );
				float4 Out_Shader4_g117042 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g117042 = float4( 0,0,0,0 );
				float Out_MultiMask4_g117042 = 0;
				float Out_Grayscale4_g117042 = 0;
				float Out_Luminosity4_g117042 = 0;
				float Out_AlphaClip4_g117042 = 0;
				float Out_AlphaFade4_g117042 = 0;
				float3 Out_Translucency4_g117042 = float3( 0,0,0 );
				float Out_Transmission4_g117042 = 0;
				float Out_Thickness4_g117042 = 0;
				float Out_Diffusion4_g117042 = 0;
				Out_Dummy4_g117042 = Data4_g117042.Dummy;
				Out_Albedo4_g117042 = Data4_g117042.Albedo;
				Out_AlbedoRaw4_g117042 = Data4_g117042.AlbedoRaw;
				Out_NormalTS4_g117042 = Data4_g117042.NormalTS;
				Out_NormalWS4_g117042 = Data4_g117042.NormalWS;
				Out_Shader4_g117042 = Data4_g117042.Shader;
				Out_Emissive4_g117042= Data4_g117042.Emissive;
				Out_MultiMask4_g117042 = Data4_g117042.MultiMask;
				Out_Grayscale4_g117042 = Data4_g117042.Grayscale;
				Out_Luminosity4_g117042= Data4_g117042.Luminosity;
				Out_AlphaClip4_g117042 = Data4_g117042.AlphaClip;
				Out_AlphaFade4_g117042 = Data4_g117042.AlphaFade;
				Out_Translucency4_g117042 = Data4_g117042.Translucency;
				Out_Transmission4_g117042 = Data4_g117042.Transmission;
				Out_Thickness4_g117042 = Data4_g117042.Thickness;
				Out_Diffusion4_g117042 = Data4_g117042.Diffusion;
				half3 Input_Albedo24_g117041 = Out_Albedo4_g117042;
				#ifdef UNITY_COLORSPACE_GAMMA
				float4 staticSwitch22_g117041 = half4(0.2209163,0.2209163,0.2209163,0.7790837);
				#else
				float4 staticSwitch22_g117041 = half4(0.04,0.04,0.04,0.96);
				#endif
				half4 ColorSpaceDielectricSpec23_g117041 = staticSwitch22_g117041;
				float4 break24_g117038 = Out_Shader4_g117042;
				half Metallic95_g117038 = break24_g117038.x;
				half Input_Metallic25_g117041 = Metallic95_g117038;
				half OneMinusReflectivity31_g117041 = ( (ColorSpaceDielectricSpec23_g117041).w - ( (ColorSpaceDielectricSpec23_g117041).w * Input_Metallic25_g117041 ) );
				
				float3 appendResult23_g117038 = (float3(Out_NormalTS4_g117042 , 1.0));
				
				half Smoothness101_g117038 = break24_g117038.w;
				half Input_Smoothness43_g117046 = Smoothness101_g117038;
				half Input_True57_g117048 = Input_Smoothness43_g117046;
				half True33_g117048 = Input_True57_g117048;
				half Render_Specualr110_g117038 = _RenderSpecular;
				half Input_RenderSpec58_g117046 = Render_Specualr110_g117038;
				float temp_output_46_0_g117046 = max( ( Input_Smoothness43_g117046 * Input_RenderSpec58_g117046 ) , 0.001 );
				float temp_output_6_0_g117047 = temp_output_46_0_g117046;
				#ifdef TVE_REGISTER
				float staticSwitch14_g117047 = ( temp_output_6_0_g117047 + ( _SpecColor.r * 0.0 ) );
				#else
				float staticSwitch14_g117047 = temp_output_6_0_g117047;
				#endif
				float temp_output_61_0_g117046 = staticSwitch14_g117047;
				half Input_False58_g117048 = temp_output_61_0_g117046;
				half False33_g117048 = Input_False58_g117048;
				half localShadowPassCheck33_g117048 = ShadowPassCheck33_g117048( True33_g117048 , False33_g117048 );
				
				half Input_True57_g117049 = 0.04;
				half True33_g117049 = Input_True57_g117049;
				half Input_False58_g117049 = temp_output_46_0_g117046;
				half False33_g117049 = Input_False58_g117049;
				half localShadowPassCheck33_g117049 = ShadowPassCheck33_g117049( True33_g117049 , False33_g117049 );
				
				float localCustomAlphaClip19_g117044 = ( 0.0 );
				float temp_output_3_0_g117044 = Out_AlphaClip4_g117042;
				float Alpha19_g117044 = temp_output_3_0_g117044;
				float temp_output_15_0_g117044 = 0.5;
				float Treshold19_g117044 = temp_output_15_0_g117044;
				#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_DITHER)
				#if defined ( TVE_PIPELINE_HD)
				#if !defined(SHADERPASS_FORWARD_BYPASS_ALPHA_TEST) && !defined(SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST)
				clip(Alpha19_g117044 - Treshold19_g117044);
				#endif
				#else
				clip(Alpha19_g117044 - Treshold19_g117044);
				#endif
				#endif
				
				o.Albedo = ( Input_Albedo24_g117041 * OneMinusReflectivity31_g117041 );
				o.Normal = appendResult23_g117038;
				o.Emission = (Out_Emissive4_g117042).xyz;

				#if defined(ASE_LIGHTING_SIMPLE)
					o.Specular = localShadowPassCheck33_g117048;
					o.Gloss = localShadowPassCheck33_g117049;
				#else
					#if defined(_SPECULAR_SETUP)
						o.Specular = fixed3( 0, 0, 0 );
					#else
						o.Metallic = 0;
					#endif
					o.Occlusion = 1;
					o.Smoothness = 0;
				#endif

				o.Alpha = Alpha19_g117044;
				float AlphaClipThreshold = 0.5;
				float3 Transmission = 1;
				float3 Translucency = 1;

				#ifdef _ALPHATEST_ON
					clip( o.Alpha - AlphaClipThreshold );
				#endif

				#ifdef _DEPTHOFFSET_ON
					outputDepth = IN.pos.z;
				#endif

				#ifndef USING_DIRECTIONAL_LIGHT
					fixed3 lightDir = normalize(UnityWorldSpaceLightDir(worldPos));
				#else
					fixed3 lightDir = _WorldSpaceLightPos0.xyz;
				#endif

				fixed4 c = 0;
				float3 worldN;
				worldN.x = dot(IN.tSpace0.xyz, o.Normal);
				worldN.y = dot(IN.tSpace1.xyz, o.Normal);
				worldN.z = dot(IN.tSpace2.xyz, o.Normal);
				worldN = normalize(worldN);
				o.Normal = worldN;

				UnityGI gi;
				UNITY_INITIALIZE_OUTPUT(UnityGI, gi);
				gi.indirect.diffuse = 0;
				gi.indirect.specular = 0;
				gi.light.color = _LightColor0.rgb;
				gi.light.dir = lightDir;
				gi.light.color *= atten;

				#if defined(ASE_LIGHTING_SIMPLE)
					#if defined(_SPECULAR_SETUP)
						c += LightingBlinnPhong (o, worldViewDir, gi);
					#else
						c += LightingLambert( o, gi );
					#endif
				#else
					#if defined(_SPECULAR_SETUP)
						c += LightingStandardSpecular (o, worldViewDir, gi);
					#else
						c += LightingStandard( o, worldViewDir, gi );
					#endif
				#endif

				#ifdef ASE_TRANSMISSION
				{
					float shadow = _TransmissionShadow;
					#ifdef DIRECTIONAL
						float3 lightAtten = lerp( _LightColor0.rgb, gi.light.color, shadow );
					#else
						float3 lightAtten = gi.light.color;
					#endif
					half3 transmission = max(0 , -dot(o.Normal, gi.light.dir)) * lightAtten * Transmission;
					c.rgb += o.Albedo * transmission;
				}
				#endif

				#ifdef ASE_TRANSLUCENCY
				{
					float shadow = _TransShadow;
					float normal = _TransNormal;
					float scattering = _TransScattering;
					float direct = _TransDirect;
					float ambient = _TransAmbient;
					float strength = _TransStrength;

					#ifdef DIRECTIONAL
						float3 lightAtten = lerp( _LightColor0.rgb, gi.light.color, shadow );
					#else
						float3 lightAtten = gi.light.color;
					#endif
					half3 lightDir = gi.light.dir + o.Normal * normal;
					half transVdotL = pow( saturate( dot( worldViewDir, -lightDir ) ), scattering );
					half3 translucency = lightAtten * (transVdotL * direct + gi.indirect.diffuse * ambient) * Translucency;
					c.rgb += o.Albedo * translucency * strength;
				}
				#endif

				//#ifdef ASE_REFRACTION
				//	float4 projScreenPos = ScreenPos / ScreenPos.w;
				//	float3 refractionOffset = ( RefractionIndex - 1.0 ) * mul( UNITY_MATRIX_V, WorldNormal ).xyz * ( 1.0 - dot( WorldNormal, WorldViewDirection ) );
				//	projScreenPos.xy += refractionOffset.xy;
				//	float3 refraction = UNITY_SAMPLE_SCREENSPACE_TEXTURE( _GrabTexture, projScreenPos ) * RefractionColor;
				//	color.rgb = lerp( refraction, color.rgb, color.a );
				//	color.a = 1;
				//#endif

				#ifdef ASE_FOG
					UNITY_APPLY_FOG(IN.fogCoord, c);
				#endif
				return c;
			}
			ENDCG
		}

		UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
	UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"

		Pass
		{
			
			Name "Meta"
			Tags { "LightMode"="Meta" }
			Cull Off

			CGPROGRAM
			#define ASE_NEEDS_FRAG_SHADOWCOORDS
			#pragma multi_compile __ LOD_FADE_CROSSFADE
			#pragma multi_compile_fog
			#define ASE_FOG 1
			#define ASE_ABSOLUTE_VERTEX_POS 1
			#define ASE_TERRAIN 1
			#define _SPECULAR_SETUP 1
			#define ASE_LIGHTING_SIMPLE 1
			#define _ENVIRONMENTREFLECTIONS_OFF 1
			#define ASE_USING_SAMPLING_MACROS 1

			#pragma vertex vert
			#pragma fragment frag
			#pragma skip_variants FOG_LINEAR FOG_EXP FOG_EXP2
			#pragma shader_feature EDITOR_VISUALIZATION
			#ifndef UNITY_PASS_META
				#define UNITY_PASS_META
			#endif
			#include "HLSLSupport.cginc"

			#ifdef ASE_GEOMETRY
				#ifndef UNITY_INSTANCED_LOD_FADE
					#define UNITY_INSTANCED_LOD_FADE
				#endif
				#ifndef UNITY_INSTANCED_SH
					#define UNITY_INSTANCED_SH
				#endif
				#ifndef UNITY_INSTANCED_LIGHTMAPSTS
					#define UNITY_INSTANCED_LIGHTMAPSTS
				#endif
			#endif

			#include "UnityShaderVariables.cginc"
			#include "UnityCG.cginc"
			#include "Lighting.cginc"
			#include "UnityPBSLighting.cginc"
			#include "UnityMetaPass.cginc"

			#define ASE_NEEDS_VERT_POSITION
			#define ASE_NEEDS_VERT_NORMAL
			#define ASE_NEEDS_VERT_TANGENT
			#pragma shader_feature_local_fragment TVE_PIPELINE_STANDARD TVE_PIPELINE_UNIVERSAL TVE_PIPELINE_HD
			#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
			#pragma shader_feature_local_vertex TVE_LANDSCAPE
			#pragma shader_feature_local_fragment TVE_WETNESS
			#pragma shader_feature_local_fragment TVE_OVERLAY
			#pragma shader_feature_local_fragment TVE_DRYNESS
			#pragma shader_feature_local_fragment TVE_TINTING
			#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
			#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
			#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
			#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
			#pragma shader_feature_local_fragment TVE_DRYNESS_SHIFT
			#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
			#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
			#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_WATER
			#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
			#pragma shader_feature_local_fragment TVE_EMISSIVE
			#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
			#pragma shader_feature_local_fragment TVE_CUTOUT
			#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
			#pragma multi_compile_instancing
			#pragma instancing_options assumeuniformscaling nomatrices nolightprobe nolightmap forwardadd
			  
			struct TVEVisualData
			{  
				half Dummy;  
				half3 Albedo;
				half3 AlbedoRaw;
				half2 NormalTS;
				half3 NormalWS; 
				half4 Shader;
				half4 Emissive;
				half AlphaClip;
				half AlphaFade;
				half MultiMask;
				half Grayscale;
				half Luminosity;
				half3 Translucency;
				half Transmission;
				half Thickness;
				float Diffusion;
			};  
			    
			struct TVEModelData
			{    
				half Dummy;    
				half3 PositionOS;
				half3 PositionWS;
				half3 PositionWO;
				half3 PositionRawOS;
				half3 PositionAddOS;
				half3 PivotOS;
				half3 PivotWS;
				half3 PivotWO;
				half3 NormalOS;
				half3 NormalWS;
				half3 NormalRawOS;
				half3 NormalRawWS;
				half4 TangentOS;
				half3 ViewDirWS;
				half4 VertexData;
				half4 MotionData;
				half4 BoundsData;
				half4 RotationData;
			};    
			      
			struct TVEGlobalData
			{      
				half Dummy;      
				half4 CoatParams;
				half4 PaintParams;
				half4 GlowParams;
				half4 AtmoParams;
				half4 FadeParams;
				half4 FormParams;
				half4 LandParams;
				half4 WindParams;
				half4 PushParams;
			};      
			        
			//#pragma editor_sync_compilation
			#if defined(SHADER_API_D3D11) || defined(SHADER_API_XBOXONE) || defined(UNITY_COMPILER_HLSLCC) || defined(SHADER_API_PSSL) || (defined(SHADER_TARGET_SURFACE_ANALYSIS) && !defined(SHADER_TARGET_SURFACE_ANALYSIS_MOJOSHADER))//ASE Sampler Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex.SampleBias(samplerTex,coord,bias)
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex.SampleGrad(samplerTex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#else//ASE Sampling Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex2D(tex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex2Dlod(tex,float4(coord,0,lod))
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex2Dbias(tex,float4(coord,0,bias))
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex2Dgrad(tex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplertex,coord,lod) tex2DArraylod(tex, float4(coord,lod))
			#endif//ASE Sampling Macros
			

			struct appdata {
				float4 vertex : POSITION;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;
				UNITY_VERTEX_INPUT_INSTANCE_ID
			};
			struct v2f {
				#if UNITY_VERSION >= 201810
					UNITY_POSITION(pos);
				#else
					float4 pos : SV_POSITION;
				#endif
				#ifdef EDITOR_VISUALIZATION
					float2 vizUV : TEXCOORD1;
					float4 lightCoord : TEXCOORD2;
				#endif
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_texcoord4 : TEXCOORD4;
				float4 ase_texcoord5 : TEXCOORD5;
				float4 ase_texcoord6 : TEXCOORD6;
				float4 ase_texcoord7 : TEXCOORD7;
				float4 ase_color : COLOR;
				float4 ase_texcoord8 : TEXCOORD8;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				UNITY_VERTEX_OUTPUT_STEREO
			};

			#ifdef ASE_TESSELLATION
				float _TessPhongStrength;
				float _TessValue;
				float _TessMin;
				float _TessMax;
				float _TessEdgeLength;
				float _TessMaxDisp;
			#endif
			uniform half _TerrainLayersMode;
			uniform half _TerrainSampleMode1;
			uniform half _TerrainSampleMode2;
			uniform half _TerrainSampleMode3;
			uniform half _TerrainSampleMode4;
			uniform half _TerrainSampleMode5;
			uniform half _TerrainSampleMode6;
			uniform half _TerrainSampleMode7;
			uniform half _TerrainSampleMode8;
			uniform half _TerrainSampleMode9;
			uniform half _TerrainSampleMode10;
			uniform half _TerrainSampleMode11;
			uniform half _TerrainSampleMode12;
			uniform half _TerrainSampleMode13;
			uniform half _TerrainSampleMode14;
			uniform half _TerrainSampleMode15;
			uniform half _TerrainSampleMode16;
			uniform half _TerrainTextureMode;
			uniform half _IsTerrainShader;
			uniform half _RenderCategory;
			uniform half _RenderEnd;
			uniform half _IsTVEShader;
			uniform half _IsCustomShader;
			uniform half _IsShared;
			uniform half _HasDefaultTextures;
			uniform half _IsCollected;
			uniform half _IsConverted;
			uniform half _IsIdentifier;
			uniform half _RenderDecals;
			uniform half _RenderSSR;
			uniform half _RenderClip;
			uniform half _IsVersion;
			uniform half _RenderShadow;
			uniform half _RenderFilter;
			uniform half _IsSimpleShader;
			uniform half _LandscapeCategory;
			uniform half _LandscapeEnd;
			uniform half _LandscapeInfo;
			uniform float3 TVE_WorldOrigin;
			uniform half4 _object_phase_mode;
			uniform half _GlobalCategory;
			uniform half _GlobalEnd;
			uniform half4 TVE_CoatParams;
			uniform half _GlobalPaintLayerValue;
			uniform float TVE_PaintLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintBaseTex);
			uniform half4 TVE_RenderBaseCoords;
			SamplerState sampler_Linear_Clamp;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintNearTex);
			uniform half4 TVE_RenderNearCoords;
			SamplerState sampler_Linear_Repeat;
			uniform float4 TVE_RenderNearPositionR;
			uniform half TVE_RenderNearFadeValue;
			uniform half4 TVE_PaintParams;
			uniform half _GlobalGlowLayerValue;
			uniform float TVE_GlowLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowNearTex);
			uniform half4 TVE_GlowParams;
			uniform half _GlobalAtmoLayerValue;
			uniform float TVE_AtmoLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoNearTex);
			uniform half4 TVE_AtmoParams;
			uniform half _GlobalFadeLayerValue;
			uniform float TVE_FadeLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeNearTex);
			uniform half4 TVE_FadeParams;
			uniform half4 TVE_FormParams;
			uniform half _GlobalLandLayerValue;
			uniform float TVE_LandLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_LandBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_LandNearTex);
			uniform half4 TVE_LandParams;
			uniform half4 TVE_WindParams;
			uniform half4 TVE_PushParams;
			uniform half _LandscapeHeightValue;
			uniform half TVE_IsEnabled;
			uniform half _CutoutCategory;
			uniform half _CutoutEnd;
			uniform half _CutoutElementMode;
			uniform half _CutoutBakeInfo;
			uniform half _EmissiveCategory;
			uniform half _EmissiveEnd;
			uniform half _EmissivePowerMode;
			uniform half _EmissivePowerValue;
			uniform half _EmissiveElementMode;
			uniform half _EmissiveFlagMode;
			uniform half _WetnessCategory;
			uniform half _WetnessEnd;
			uniform half _WetnessElementMode;
			uniform half _WetnessBakeInfo;
			uniform half _OverlayCategory;
			uniform half _OverlayEnd;
			uniform half _OverlaySpace;
			uniform half _OverlayElementMode;
			uniform half _OverlayBakeInfo;
			uniform half _DrynessCategory;
			uniform half _DrynessEnd;
			uniform half _DrynessSpace;
			uniform half _DrynessElementMode;
			uniform half _DrynessBakeInfo;
			uniform half _TintingCategory;
			uniform half _TintingEnd;
			uniform half _TintingSpace;
			uniform half _TintingBakeInfo;
			uniform half _CategoryTerrain;
			uniform half _EndTerrain;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex1);
			uniform half4 _TerrainPosition;
			uniform half4 _TerrainSize;
			float4 _TerrainControlTex1_TexelSize;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex1);
			SamplerState sampler_Point_Repeat;
			SamplerState sampler_Linear_Repeat_Aniso8;
			uniform half4 _TerrainCoord1;
			uniform half4 _TerrainShaderMin1;
			uniform half4 _TerrainShaderMax1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex2);
			uniform half4 _TerrainCoord2;
			uniform half4 _TerrainShaderMin2;
			uniform half4 _TerrainShaderMax2;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex3);
			uniform half4 _TerrainCoord3;
			uniform half4 _TerrainShaderMin3;
			uniform half4 _TerrainShaderMax3;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex4);
			uniform half4 _TerrainCoord4;
			uniform half4 _TerrainShaderMin4;
			uniform half4 _TerrainShaderMax4;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex5);
			uniform half4 _TerrainCoord5;
			uniform half4 _TerrainShaderMin5;
			uniform half4 _TerrainShaderMax5;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex6);
			uniform half4 _TerrainCoord6;
			uniform half4 _TerrainShaderMin6;
			uniform half4 _TerrainShaderMax6;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex7);
			uniform half4 _TerrainCoord7;
			uniform half4 _TerrainShaderMin7;
			uniform half4 _TerrainShaderMax7;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex8);
			uniform half4 _TerrainCoord8;
			uniform half4 _TerrainShaderMin8;
			uniform half4 _TerrainShaderMax8;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex9);
			uniform half4 _TerrainCoord9;
			uniform half4 _TerrainShaderMin9;
			uniform half4 _TerrainShaderMax9;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex10);
			uniform half4 _TerrainCoord10;
			uniform half4 _TerrainShaderMin10;
			uniform half4 _TerrainShaderMax10;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex11);
			uniform half4 _TerrainCoord11;
			uniform half4 _TerrainShaderMin11;
			uniform half4 _TerrainShaderMax11;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex12);
			uniform half4 _TerrainCoord12;
			uniform half4 _TerrainShaderMin12;
			uniform half4 _TerrainShaderMax12;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex13);
			uniform half4 _TerrainCoord13;
			uniform half4 _TerrainShaderMin13;
			uniform half4 _TerrainShaderMax13;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex14);
			uniform half4 _TerrainCoord14;
			uniform half4 _TerrainShaderMin14;
			uniform half4 _TerrainShaderMax14;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex15);
			uniform half4 _TerrainCoord15;
			uniform half4 _TerrainShaderMin15;
			uniform half4 _TerrainShaderMax15;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex16);
			uniform half4 _TerrainCoord16;
			uniform half4 _TerrainShaderMin16;
			uniform half4 _TerrainShaderMax16;
			uniform half _TerrainHeightBlendValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex16);
			uniform half4 _TerrainColor1;
			uniform half4 _TerrainColor2;
			uniform half4 _TerrainColor3;
			uniform half4 _TerrainColor4;
			uniform half4 _TerrainColor5;
			uniform half4 _TerrainColor6;
			uniform half4 _TerrainColor7;
			uniform half4 _TerrainColor8;
			uniform half4 _TerrainColor9;
			uniform half4 _TerrainColor10;
			uniform half4 _TerrainColor11;
			uniform half4 _TerrainColor12;
			uniform half4 _TerrainColor13;
			uniform half4 _TerrainColor14;
			uniform half4 _TerrainColor15;
			uniform half4 _TerrainColor16;
			uniform half4 _TerrainColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex16);
			uniform half4 _TerrainParams1;
			uniform half4 _TerrainParams2;
			uniform half4 _TerrainParams3;
			uniform half4 _TerrainParams4;
			uniform half4 _TerrainParams5;
			uniform half4 _TerrainParams6;
			uniform half4 _TerrainParams7;
			uniform half4 _TerrainParams8;
			uniform half4 _TerrainParams9;
			uniform half4 _TerrainParams10;
			uniform half4 _TerrainParams11;
			uniform half4 _TerrainParams12;
			uniform half4 _TerrainParams13;
			uniform half4 _TerrainParams14;
			uniform half4 _TerrainParams15;
			uniform half4 _TerrainParams16;
			uniform half _TerrainNormalValue;
			uniform half _TerrainMetallicValue;
			uniform half _TerrainOcclusionValue;
			uniform half _TerrainSmoothnessValue;
			uniform half4 _TerrainSpecular1;
			uniform half4 _TerrainSpecular2;
			uniform half4 _TerrainSpecular3;
			uniform half4 _TerrainSpecular4;
			uniform half4 _TerrainSpecular5;
			uniform half4 _TerrainSpecular6;
			uniform half4 _TerrainSpecular7;
			uniform half4 _TerrainSpecular8;
			uniform half4 _TerrainSpecular9;
			uniform half4 _TerrainSpecular10;
			uniform half4 _TerrainSpecular11;
			uniform half4 _TerrainSpecular12;
			uniform half4 _TerrainSpecular13;
			uniform half4 _TerrainSpecular14;
			uniform half4 _TerrainSpecular15;
			uniform half4 _TerrainSpecular16;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainHolesTex);
			uniform half _TintingElementMode;
			uniform half _TintingGrayValue;
			uniform float4 _TintingColor;
			uniform half _TintingIntensityValue;
			uniform half _TintingMultiValue;
			uniform half4 _TintingLumaRemap;
			uniform half _TintingLumaValue;
			uniform half4 _TintingBlendRemap;
			uniform half _DrynessGrayValue;
			uniform half _DrynessShiftValue;
			uniform float4 _DrynessColor;
			uniform half _DrynessIntensityValue;
			uniform half _DrynessMultiValue;
			uniform half4 _DrynessLumaRemap;
			uniform half _DrynessLumaValue;
			uniform half4 _DrynessBlendRemap;
			uniform half _DrynessSmoothnessValue;
			uniform half _DrynessSubsurfaceValue;
			uniform half4 _OverlayColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayAlbedoTex);
			uniform half4 _overlay_coord_value;
			uniform half _OverlaySampleMode;
			uniform half _OverlayCoordMode;
			uniform half4 _OverlayCoordValue;
			uniform half _OverlayTextureMode;
			uniform half _OverlayGlitterIntensityValue;
			uniform half4 _OverlayGlitterColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayGlitterTexRT);
			uniform half _OverlayGlitterTillingValue;
			uniform half _OverlayGlitterDistValue;
			uniform half _OverlayIntensityValue;
			uniform half4 _OverlayProjRemap;
			uniform half _OverlayProjValue;
			uniform half4 _OverlayLumaRemap;
			uniform half _OverlayLumaValue;
			uniform half4 _OverlayBlendRemap1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayNormalTex);
			uniform half _OverlayNormalValue;
			uniform half _OverlaySmoothnessValue;
			uniform half _OverlaySubsurfaceValue;
			uniform half4 _WetnessWaterColor;
			uniform half _WetnessWaterIntensityValue;
			uniform half _WetnessIntensityValue;
			uniform half _WetnessWaterBaseValue;
			uniform half4 _WetnessWaterBlendRemap;
			uniform half _WetnessContrastValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_WetnessDropsTexRT);
			uniform half _WetnessDropsTillingValue;
			uniform half _WetnessDropsIntensityValue;
			uniform half _WetnessDropsNormalValue;
			uniform half _WetnessDropsDistValue;
			uniform half _WetnessSmoothnessValue;
			uniform half _EmissiveIntensityValue;
			uniform half4 _EmissiveColor;
			uniform half _EmissiveColorMode;
			uniform float _emissive_power_value;
			uniform half _CutoutIntensityValue;
			#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
				sampler2D _TerrainHeightmapTexture;//ASE Terrain Instancing
				sampler2D _TerrainNormalmapTexture;//ASE Terrain Instancing
			#endif//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_START( Terrain )//ASE Terrain Instancing
				UNITY_DEFINE_INSTANCED_PROP( float4, _TerrainPatchInstanceData )//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_END( Terrain)//ASE Terrain Instancing
			CBUFFER_START( UnityTerrain)//ASE Terrain Instancing
				#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
					float4 _TerrainHeightmapRecipSize;//ASE Terrain Instancing
					float4 _TerrainHeightmapScale;//ASE Terrain Instancing
				#endif//ASE Terrain Instancing
			CBUFFER_END//ASE Terrain Instancing


			void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
			{
				ZX = WorldPosition.xz * Coords.xx - Coords.zz;
				ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
				XY = WorldPosition.xy * Coords.xy - Coords.zw;
			}
			
			half4 SamplePlanar2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
			{
				half3 powNormal = abs( WorldNormal.xyz );
				half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
				weights /= ( weights.x + weights.y + weights.z ).xxx;
				T1 = weights.y;
				T2 = weights.x;
				T3 = weights.z;
			}
			
			half4 SamplePlanar3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
				half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
				half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
				return tex1 * T1 + tex2 * T2 + tex3 * T3;
			}
			
			void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
			{
				half2 vertex1, vertex2, vertex3;
				// Scaling of the input
				half2 uv = UV * 3.464; // 2 * sqrt (3)
				// Skew input space into simplex triangle grid
				const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
				half2 skewedCoord = mul( gridToSkewedGrid, uv );
				// Compute local triangle vertex IDs and local barycentric coordinates
				int2 baseId = int2( floor( skewedCoord ) );
				half3 temp = half3( frac( skewedCoord ), 0 );
				temp.z = 1.0 - temp.x - temp.y;
				if ( temp.z > 0.0 )
				{
					W1 = temp.z;
					W2 = temp.y;
					W3 = temp.x;
					vertex1 = baseId;
					vertex2 = baseId + int2( 0, 1 );
					vertex3 = baseId + int2( 1, 0 );
				}
				else
				{
					W1 = -temp.z;
					W2 = 1.0 - temp.y;
					W3 = 1.0 - temp.x;
					vertex1 = baseId + int2( 1, 1 );
					vertex2 = baseId + int2( 1, 0 );
					vertex3 = baseId + int2( 0, 1 );
				}
				UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
				UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
				UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
				return;
			}
			
			float4 SampleStochastic2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
				half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
				half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
				half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
				return tex1 * W1 + tex2 * W2 + tex3 * W3;
			}
			
			half4 SampleStochastic3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				half4 tex1, tex2, tex3;
				ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
				half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
				half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
				half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				return texZX * T1 + texZY * T2 + texXY * T3;
			}
			
			half3 HSVToRGB( half3 c )
			{
				half4 K = half4( 1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0 );
				half3 p = abs( frac( c.xxx + K.xyz ) * 6.0 - K.www );
				return c.z * lerp( K.xxx, saturate( p - K.xxx ), c.y );
			}
			
			half3 RGBToHSV(half3 c)
			{
				half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
				half4 p = lerp( half4( c.bg, K.wz ), half4( c.gb, K.xy ), step( c.b, c.g ) );
				half4 q = lerp( half4( p.xyw, c.r ), half4( c.r, p.yzx ), step( p.x, c.r ) );
				half d = q.x - min( q.w, q.y );
				half e = 1.0e-10;
				return half3( abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
			}
			appdata ApplyMeshModification( appdata v ){
			#ifdef UNITY_INSTANCING_ENABLED
				float2 patchVertex = v.vertex.xy;
				float4 instanceData = UNITY_ACCESS_INSTANCED_PROP( Terrain, _TerrainPatchInstanceData );
				float4 uvscale = instanceData.z * _TerrainHeightmapRecipSize;
				float4 uvoffset = instanceData.xyxy * uvscale;
				uvoffset.xy += 0.5f * _TerrainHeightmapRecipSize.xy;
				float2 sampleCoords = (patchVertex.xy * uvscale.xy + uvoffset.xy);
				v.ase_texcoord = float4(patchVertex.xy * uvscale.zw + uvoffset.zw, 0, 0);
				float height = UnpackHeightmap( tex2Dlod( _TerrainHeightmapTexture, float4(sampleCoords, 0, 0) ) );
				v.vertex.xz = (patchVertex.xy + instanceData.xy) * _TerrainHeightmapScale.xz * instanceData.z;
				v.vertex.y = height * _TerrainHeightmapScale.y;
				v.normal = tex2Dlod( _TerrainNormalmapTexture, v.ase_texcoord ).rgb * 2 - 1;
			#endif
			return v;
			}
			

			v2f VertexFunction (appdata v  ) {
				UNITY_SETUP_INSTANCE_ID(v);
				v2f o;
				UNITY_INITIALIZE_OUTPUT(v2f,o);
				UNITY_TRANSFER_INSTANCE_ID(v,o);
				UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);

				v = ApplyMeshModification(v);
				TVEModelData Data16_g117033 = (TVEModelData)0;
				half Dummy181_g117031 = ( _LandscapeCategory + _LandscapeEnd + _LandscapeInfo );
				float In_Dummy16_g117033 = Dummy181_g117031;
				TVEModelData Data16_g114320 = (TVEModelData)0;
				half Dummy207_g114306 = 0.0;
				float In_Dummy16_g114320 = Dummy207_g114306;
				half3 PositionOS131_g114306 = v.vertex.xyz;
				float3 In_PositionOS16_g114320 = PositionOS131_g114306;
				float3 ase_worldPos = mul(unity_ObjectToWorld, float4( (v.vertex).xyz, 1 )).xyz;
				float3 vertexToFrag73_g114306 = ase_worldPos;
				half3 PositionWS122_g114306 = vertexToFrag73_g114306;
				float3 In_PositionWS16_g114320 = PositionWS122_g114306;
				float4x4 break19_g114308 = unity_ObjectToWorld;
				float3 appendResult20_g114308 = (float3(break19_g114308[ 0 ][ 3 ] , break19_g114308[ 1 ][ 3 ] , break19_g114308[ 2 ][ 3 ]));
				half3 ObjectData20_g114310 = appendResult20_g114308;
				half3 WorldData19_g114310 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g114310 = WorldData19_g114310;
				#else
				float3 staticSwitch14_g114310 = ObjectData20_g114310;
				#endif
				float3 temp_output_124_0_g114308 = staticSwitch14_g114310;
				float3 temp_output_239_7_g114306 = temp_output_124_0_g114308;
				half3 PivotWS121_g114306 = temp_output_239_7_g114306;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
				#else
				float3 staticSwitch204_g114306 = PositionWS122_g114306;
				#endif
				half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
				float3 In_PositionWO16_g114320 = PositionWO132_g114306;
				float3 In_PositionRawOS16_g114320 = PositionOS131_g114306;
				float3 In_PositionAddOS16_g114320 = float3( 0,0,0 );
				float3 _Vector0 = float3(0,0,0);
				half3 PivotOS149_g114306 = _Vector0;
				float3 In_PivotOS16_g114320 = PivotOS149_g114306;
				float3 In_PivotWS16_g114320 = PivotWS121_g114306;
				half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
				float3 In_PivotWO16_g114320 = PivotWO133_g114306;
				half3 NormalOS134_g114306 = v.normal;
				float3 In_NormalOS16_g114320 = NormalOS134_g114306;
				float3 ase_worldNormal = UnityObjectToWorldNormal(v.normal);
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g114306 = normalizedWorldNormal;
				float3 In_NormalWS16_g114320 = Normal_WS95_g114306;
				float3 In_NormalRawOS16_g114320 = NormalOS134_g114306;
				float3 objToWorldDir298_g114306 = normalize( mul( unity_ObjectToWorld, float4( v.normal, 0 ) ).xyz );
				half3 Normal_RawWS136_g114306 = objToWorldDir298_g114306;
				float3 In_NormalRawWS16_g114320 = Normal_RawWS136_g114306;
				half4 TangentlOS153_g114306 = v.tangent;
				float4 In_TangentOS16_g114320 = TangentlOS153_g114306;
				float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
				half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
				float3 In_ViewDirWS16_g114320 = ViewDirWS169_g114306;
				half4 VertexMasks171_g114306 = v.ase_color;
				float4 In_VertexData16_g114320 = VertexMasks171_g114306;
				float4 break33_g114319 = _object_phase_mode;
				float temp_output_30_0_g114319 = ( v.ase_color.r * break33_g114319.x );
				float temp_output_29_0_g114319 = ( v.ase_color.g * break33_g114319.y );
				float temp_output_31_0_g114319 = ( v.ase_color.b * break33_g114319.z );
				float temp_output_28_0_g114319 = ( temp_output_30_0_g114319 + temp_output_29_0_g114319 + temp_output_31_0_g114319 + ( v.ase_color.a * break33_g114319.w ) );
				float3 break243_g114306 = PivotWO133_g114306;
				float temp_output_315_0_g114306 = (frac( ( temp_output_28_0_g114319 + ( break243_g114306.x + break243_g114306.z ) ) )*2.0 + -1.0);
				float4 appendResult177_g114306 = (float4(1.0 , 1.0 , temp_output_315_0_g114306 , 1.0));
				half4 MotionMasks176_g114306 = appendResult177_g114306;
				float4 In_MotionData16_g114320 = MotionMasks176_g114306;
				half4 BoundsData254_g114306 = float4( 0,0,0,0 );
				float4 In_BoundsData16_g114320 = BoundsData254_g114306;
				float4 In_RotationData16_g114320 = float4( 0,0,0,0 );
				Data16_g114320.Dummy = In_Dummy16_g114320;
				Data16_g114320.PositionOS = In_PositionOS16_g114320;
				Data16_g114320.PositionWS = In_PositionWS16_g114320;
				Data16_g114320.PositionWO = In_PositionWO16_g114320;
				Data16_g114320.PositionRawOS = In_PositionRawOS16_g114320;
				Data16_g114320.PositionAddOS = In_PositionAddOS16_g114320;
				Data16_g114320.PivotOS = In_PivotOS16_g114320;
				Data16_g114320.PivotWS = In_PivotWS16_g114320;
				Data16_g114320.PivotWO = In_PivotWO16_g114320;
				Data16_g114320.NormalOS = In_NormalOS16_g114320;
				Data16_g114320.NormalWS = In_NormalWS16_g114320;
				Data16_g114320.NormalRawOS = In_NormalRawOS16_g114320;
				Data16_g114320.NormalRawWS = In_NormalRawWS16_g114320;
				Data16_g114320.TangentOS = In_TangentOS16_g114320;
				Data16_g114320.ViewDirWS = In_ViewDirWS16_g114320;
				Data16_g114320.VertexData = In_VertexData16_g114320;
				Data16_g114320.MotionData = In_MotionData16_g114320;
				Data16_g114320.BoundsData = In_BoundsData16_g114320;
				Data16_g114320.RotationData = In_RotationData16_g114320;
				TVEModelData Data15_g117032 = Data16_g114320;
				float Out_Dummy15_g117032 = 0;
				float3 Out_PositionOS15_g117032 = float3( 0,0,0 );
				float3 Out_PositionWS15_g117032 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117032 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g117032 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g117032 = float3( 0,0,0 );
				float3 Out_PivotOS15_g117032 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117032 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117032 = float3( 0,0,0 );
				float3 Out_NormalOS15_g117032 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117032 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g117032 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g117032 = float3( 0,0,0 );
				float4 Out_TangentOS15_g117032 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g117032 = float3( 0,0,0 );
				float4 Out_VertexData15_g117032 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g117032 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117032 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g117032 = float4( 0,0,0,0 );
				Out_Dummy15_g117032 = Data15_g117032.Dummy;
				Out_PositionOS15_g117032 = Data15_g117032.PositionOS;
				Out_PositionWS15_g117032 = Data15_g117032.PositionWS;
				Out_PositionWO15_g117032 = Data15_g117032.PositionWO;
				Out_PositionRawOS15_g117032 = Data15_g117032.PositionRawOS;
				Out_PositionAddOS15_g117032 = Data15_g117032.PositionAddOS;
				Out_PivotOS15_g117032 = Data15_g117032.PivotOS;
				Out_PivotWS15_g117032 = Data15_g117032.PivotWS;
				Out_PivotWO15_g117032 = Data15_g117032.PivotWO;
				Out_NormalOS15_g117032 = Data15_g117032.NormalOS;
				Out_NormalWS15_g117032 = Data15_g117032.NormalWS;
				Out_NormalRawOS15_g117032 = Data15_g117032.NormalRawOS;
				Out_NormalRawWS15_g117032 = Data15_g117032.NormalRawWS;
				Out_TangentOS15_g117032 = Data15_g117032.TangentOS;
				Out_ViewDirWS15_g117032 = Data15_g117032.ViewDirWS;
				Out_VertexData15_g117032 = Data15_g117032.VertexData;
				Out_MotionData15_g117032 = Data15_g117032.MotionData;
				Out_BoundsData15_g117032 = Data15_g117032.BoundsData;
				Out_RotationData15_g117032 = Data15_g117032.RotationData;
				half3 Input_PositionOS147_g117031 = Out_PositionOS15_g117032;
				float3 break592_g117031 = Input_PositionOS147_g117031;
				float localBuildGlobalData204_g115912 = ( 0.0 );
				TVEGlobalData Data204_g115912 = (TVEGlobalData)0;
				half Dummy211_g115912 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g115912 = Dummy211_g115912;
				half4 Coat_Params302_g115912 = TVE_CoatParams;
				float4 In_CoatParams204_g115912 = Coat_Params302_g115912;
				float temp_output_82_0_g115913 = _GlobalPaintLayerValue;
				float temp_output_19_0_g115915 = TVE_PaintLayers[(int)temp_output_82_0_g115913];
				TVEModelData Data16_g114321 = (TVEModelData)0;
				float In_Dummy16_g114321 = 0.0;
				float3 In_PositionWS16_g114321 = PositionWS122_g114306;
				float3 In_PositionWO16_g114321 = PositionWO132_g114306;
				float3 In_PivotWS16_g114321 = PivotWS121_g114306;
				float3 In_PivotWO16_g114321 = PivotWO133_g114306;
				float3 In_NormalWS16_g114321 = Normal_WS95_g114306;
				float3 In_ViewDirWS16_g114321 = ViewDirWS169_g114306;
				float4 In_VertexData16_g114321 = VertexMasks171_g114306;
				float4 In_BoundsData16_g114321 = float4( 1,1,1,1 );
				Data16_g114321.Dummy = In_Dummy16_g114321;
				Data16_g114321.PositionWS = In_PositionWS16_g114321;
				Data16_g114321.PositionWO = In_PositionWO16_g114321;
				Data16_g114321.PivotWS = In_PivotWS16_g114321;
				Data16_g114321.PivotWO = In_PivotWO16_g114321;
				Data16_g114321.NormalWS = In_NormalWS16_g114321;
				Data16_g114321.ViewDirWS = In_ViewDirWS16_g114321;
				Data16_g114321.VertexData = In_VertexData16_g114321;
				Data16_g114321.BoundsData = In_BoundsData16_g114321;
				TVEModelData Data15_g115994 = Data16_g114321;
				float Out_Dummy15_g115994 = 0;
				float3 Out_PositionWS15_g115994 = float3( 0,0,0 );
				float3 Out_PositionWO15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWS15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWO15_g115994 = float3( 0,0,0 );
				float3 Out_NormalWS15_g115994 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g115994 = float3( 0,0,0 );
				float4 Out_VertexData15_g115994 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g115994 = float4( 0,0,0,0 );
				Out_Dummy15_g115994 = Data15_g115994.Dummy;
				Out_PositionWS15_g115994 = Data15_g115994.PositionWS;
				Out_PositionWO15_g115994 = Data15_g115994.PositionWO;
				Out_PivotWS15_g115994 = Data15_g115994.PivotWS;
				Out_PivotWO15_g115994 = Data15_g115994.PivotWO;
				Out_NormalWS15_g115994 = Data15_g115994.NormalWS;
				Out_ViewDirWS15_g115994 = Data15_g115994.ViewDirWS;
				Out_VertexData15_g115994 = Data15_g115994.VertexData;
				Out_BoundsData15_g115994 = Data15_g115994.BoundsData;
				half3 Model_PositionWS143_g115912 = Out_PositionWS15_g115994;
				half3 Input_Position180_g115916 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115916 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_82_0_g115916 = temp_output_82_0_g115913;
				float2 temp_output_119_0_g115916 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_7_0_g115921 = 1.0;
				float temp_output_10_0_g115921 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115921 );
				float4 lerpResult131_g115916 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115916,temp_output_82_0_g115916), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115916,temp_output_82_0_g115916), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115916 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115921 ) / temp_output_10_0_g115921 ) ));
				float4 temp_output_17_0_g115915 = lerpResult131_g115916;
				float4 temp_output_3_0_g115915 = TVE_PaintParams;
				float4 ifLocalVar18_g115915 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115915 >= 0.5 )
				ifLocalVar18_g115915 = temp_output_17_0_g115915;
				else
				ifLocalVar18_g115915 = temp_output_3_0_g115915;
				float4 lerpResult22_g115915 = lerp( temp_output_3_0_g115915 , temp_output_17_0_g115915 , temp_output_19_0_g115915);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115915 = lerpResult22_g115915;
				#else
				float4 staticSwitch24_g115915 = ifLocalVar18_g115915;
				#endif
				half4 Paint_Params71_g115912 = staticSwitch24_g115915;
				float4 In_PaintParams204_g115912 = Paint_Params71_g115912;
				float temp_output_82_0_g115931 = _GlobalGlowLayerValue;
				float temp_output_19_0_g115933 = TVE_GlowLayers[(int)temp_output_82_0_g115931];
				half3 Input_Position180_g115934 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115934 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_82_0_g115934 = temp_output_82_0_g115931;
				float2 temp_output_119_0_g115934 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_7_0_g115939 = 1.0;
				float temp_output_10_0_g115939 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115939 );
				float4 lerpResult131_g115934 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115934,temp_output_82_0_g115934), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115934,temp_output_82_0_g115934), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115934 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115939 ) / temp_output_10_0_g115939 ) ));
				float4 temp_output_17_0_g115933 = lerpResult131_g115934;
				float4 temp_output_3_0_g115933 = TVE_GlowParams;
				float4 ifLocalVar18_g115933 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115933 >= 0.5 )
				ifLocalVar18_g115933 = temp_output_17_0_g115933;
				else
				ifLocalVar18_g115933 = temp_output_3_0_g115933;
				float4 lerpResult22_g115933 = lerp( temp_output_3_0_g115933 , temp_output_17_0_g115933 , temp_output_19_0_g115933);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115933 = lerpResult22_g115933;
				#else
				float4 staticSwitch24_g115933 = ifLocalVar18_g115933;
				#endif
				half4 Glow_Params248_g115912 = staticSwitch24_g115933;
				float4 In_GlowParams204_g115912 = Glow_Params248_g115912;
				float temp_output_132_0_g115976 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g115978 = TVE_AtmoLayers[(int)temp_output_132_0_g115976];
				half3 Input_Position180_g115979 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115979 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_82_0_g115979 = temp_output_132_0_g115976;
				float2 temp_output_119_0_g115979 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_7_0_g115984 = 1.0;
				float temp_output_10_0_g115984 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115984 );
				float4 lerpResult131_g115979 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115979,temp_output_82_0_g115979), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115979,temp_output_82_0_g115979), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115979 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115984 ) / temp_output_10_0_g115984 ) ));
				float4 temp_output_17_0_g115978 = lerpResult131_g115979;
				float4 temp_output_3_0_g115978 = TVE_AtmoParams;
				float4 ifLocalVar18_g115978 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115978 >= 0.5 )
				ifLocalVar18_g115978 = temp_output_17_0_g115978;
				else
				ifLocalVar18_g115978 = temp_output_3_0_g115978;
				float4 lerpResult22_g115978 = lerp( temp_output_3_0_g115978 , temp_output_17_0_g115978 , temp_output_19_0_g115978);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115978 = lerpResult22_g115978;
				#else
				float4 staticSwitch24_g115978 = ifLocalVar18_g115978;
				#endif
				half4 Atmo_Params80_g115912 = staticSwitch24_g115978;
				float4 In_AtmoParams204_g115912 = Atmo_Params80_g115912;
				float temp_output_132_0_g115985 = _GlobalFadeLayerValue;
				float temp_output_19_0_g115987 = TVE_FadeLayers[(int)temp_output_132_0_g115985];
				half3 Input_Position180_g115988 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115988 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_82_0_g115988 = temp_output_132_0_g115985;
				float2 temp_output_119_0_g115988 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_7_0_g115993 = 1.0;
				float temp_output_10_0_g115993 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115993 );
				float4 lerpResult131_g115988 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115988,temp_output_82_0_g115988), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115988,temp_output_82_0_g115988), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115988 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115993 ) / temp_output_10_0_g115993 ) ));
				float4 temp_output_17_0_g115987 = lerpResult131_g115988;
				float4 temp_output_3_0_g115987 = TVE_FadeParams;
				float4 ifLocalVar18_g115987 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115987 >= 0.5 )
				ifLocalVar18_g115987 = temp_output_17_0_g115987;
				else
				ifLocalVar18_g115987 = temp_output_3_0_g115987;
				float4 lerpResult22_g115987 = lerp( temp_output_3_0_g115987 , temp_output_17_0_g115987 , temp_output_19_0_g115987);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115987 = lerpResult22_g115987;
				#else
				float4 staticSwitch24_g115987 = ifLocalVar18_g115987;
				#endif
				half4 Fade_Params387_g115912 = staticSwitch24_g115987;
				float4 In_FadeParams204_g115912 = Fade_Params387_g115912;
				half4 Form_Params112_g115912 = TVE_FormParams;
				float4 In_FormParams204_g115912 = Form_Params112_g115912;
				float temp_output_130_0_g115949 = _GlobalLandLayerValue;
				float temp_output_19_0_g115951 = TVE_LandLayers[(int)temp_output_130_0_g115949];
				half3 Input_Position180_g115952 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115952 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_82_0_g115952 = temp_output_130_0_g115949;
				float2 temp_output_119_0_g115952 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_7_0_g115957 = 1.0;
				float temp_output_10_0_g115957 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115957 );
				float4 lerpResult131_g115952 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115952,temp_output_82_0_g115952), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115952,temp_output_82_0_g115952), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115952 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115957 ) / temp_output_10_0_g115957 ) ));
				float4 temp_output_17_0_g115951 = lerpResult131_g115952;
				float4 temp_output_3_0_g115951 = TVE_LandParams;
				float4 ifLocalVar18_g115951 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115951 >= 0.5 )
				ifLocalVar18_g115951 = temp_output_17_0_g115951;
				else
				ifLocalVar18_g115951 = temp_output_3_0_g115951;
				float4 lerpResult22_g115951 = lerp( temp_output_3_0_g115951 , temp_output_17_0_g115951 , temp_output_19_0_g115951);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115951 = lerpResult22_g115951;
				#else
				float4 staticSwitch24_g115951 = ifLocalVar18_g115951;
				#endif
				half4 Land_Params375_g115912 = staticSwitch24_g115951;
				float4 In_LandParams204_g115912 = Land_Params375_g115912;
				half4 Wind_Params88_g115912 = TVE_WindParams;
				float4 In_WindParams204_g115912 = Wind_Params88_g115912;
				half4 Push_Params335_g115912 = TVE_PushParams;
				float4 In_PushParams204_g115912 = Push_Params335_g115912;
				Data204_g115912.Dummy = In_Dummy204_g115912;
				Data204_g115912.CoatParams = In_CoatParams204_g115912;
				Data204_g115912.PaintParams = In_PaintParams204_g115912;
				Data204_g115912.GlowParams = In_GlowParams204_g115912;
				Data204_g115912.AtmoParams = In_AtmoParams204_g115912;
				Data204_g115912.FadeParams = In_FadeParams204_g115912;
				Data204_g115912.FormParams= In_FormParams204_g115912;
				Data204_g115912.LandParams = In_LandParams204_g115912;
				Data204_g115912.WindParams = In_WindParams204_g115912;
				Data204_g115912.PushParams = In_PushParams204_g115912;
				TVEGlobalData Data15_g117034 = Data204_g115912;
				float Out_Dummy15_g117034 = 0;
				float4 Out_CoatParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g117034 = float4( 0,0,0,0 );
				Out_Dummy15_g117034 = Data15_g117034.Dummy;
				Out_CoatParams15_g117034 = Data15_g117034.CoatParams;
				Out_PaintParams15_g117034 = Data15_g117034.PaintParams;
				Out_GlowParams15_g117034 = Data15_g117034.GlowParams;
				Out_AtmoParams15_g117034= Data15_g117034.AtmoParams;
				Out_FadeParams15_g117034= Data15_g117034.FadeParams;
				Out_FormParams15_g117034 = Data15_g117034.FormParams;
				Out_LandParams15_g117034 = Data15_g117034.LandParams;
				Out_WindParams15_g117034 = Data15_g117034.WindParams;
				Out_PushParams15_g117034 = Data15_g117034.PushParams;
				half4 Input_FormParams214_g117031 = Out_LandParams15_g117034;
				float temp_output_572_0_g117031 = (Input_FormParams214_g117031).z;
				float temp_output_595_0_g117031 = ( break592_g117031.y + temp_output_572_0_g117031 );
				float lerpResult604_g117031 = lerp( break592_g117031.y , temp_output_595_0_g117031 , ( _LandscapeHeightValue * TVE_IsEnabled ));
				float3 appendResult593_g117031 = (float3(break592_g117031.x , lerpResult604_g117031 , break592_g117031.z));
				#ifdef TVE_LANDSCAPE
				float3 staticSwitch575_g117031 = appendResult593_g117031;
				#else
				float3 staticSwitch575_g117031 = Input_PositionOS147_g117031;
				#endif
				half3 Final_PositionOS580_g117031 = staticSwitch575_g117031;
				float3 In_PositionOS16_g117033 = Final_PositionOS580_g117031;
				float3 In_PositionWS16_g117033 = Out_PositionWS15_g117032;
				float3 In_PositionWO16_g117033 = Out_PositionWO15_g117032;
				float3 In_PositionRawOS16_g117033 = Out_PositionRawOS15_g117032;
				float3 In_PositionAddOS16_g117033 = Out_PositionAddOS15_g117032;
				float3 In_PivotOS16_g117033 = Out_PivotOS15_g117032;
				float3 In_PivotWS16_g117033 = Out_PivotWS15_g117032;
				float3 temp_output_481_19_g117031 = Out_PivotWO15_g117032;
				float3 In_PivotWO16_g117033 = temp_output_481_19_g117031;
				float3 temp_output_481_20_g117031 = Out_NormalOS15_g117032;
				float3 In_NormalOS16_g117033 = temp_output_481_20_g117031;
				float3 In_NormalWS16_g117033 = Out_NormalWS15_g117032;
				float3 In_NormalRawOS16_g117033 = Out_NormalRawOS15_g117032;
				float3 In_NormalRawWS16_g117033 = Out_NormalRawWS15_g117032;
				float4 In_TangentOS16_g117033 = Out_TangentOS15_g117032;
				float3 In_ViewDirWS16_g117033 = Out_ViewDirWS15_g117032;
				float4 In_VertexData16_g117033 = Out_VertexData15_g117032;
				float4 In_MotionData16_g117033 = Out_MotionData15_g117032;
				float4 In_BoundsData16_g117033 = Out_BoundsData15_g117032;
				float4 In_RotationData16_g117033 = Out_RotationData15_g117032;
				Data16_g117033.Dummy = In_Dummy16_g117033;
				Data16_g117033.PositionOS = In_PositionOS16_g117033;
				Data16_g117033.PositionWS = In_PositionWS16_g117033;
				Data16_g117033.PositionWO = In_PositionWO16_g117033;
				Data16_g117033.PositionRawOS = In_PositionRawOS16_g117033;
				Data16_g117033.PositionAddOS = In_PositionAddOS16_g117033;
				Data16_g117033.PivotOS = In_PivotOS16_g117033;
				Data16_g117033.PivotWS = In_PivotWS16_g117033;
				Data16_g117033.PivotWO = In_PivotWO16_g117033;
				Data16_g117033.NormalOS = In_NormalOS16_g117033;
				Data16_g117033.NormalWS = In_NormalWS16_g117033;
				Data16_g117033.NormalRawOS = In_NormalRawOS16_g117033;
				Data16_g117033.NormalRawWS = In_NormalRawWS16_g117033;
				Data16_g117033.TangentOS = In_TangentOS16_g117033;
				Data16_g117033.ViewDirWS = In_ViewDirWS16_g117033;
				Data16_g117033.VertexData = In_VertexData16_g117033;
				Data16_g117033.MotionData = In_MotionData16_g117033;
				Data16_g117033.BoundsData = In_BoundsData16_g117033;
				Data16_g117033.RotationData = In_RotationData16_g117033;
				TVEModelData Data15_g117040 = Data16_g117033;
				float Out_Dummy15_g117040 = 0;
				float3 Out_PositionOS15_g117040 = float3( 0,0,0 );
				float3 Out_PositionWS15_g117040 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117040 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g117040 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g117040 = float3( 0,0,0 );
				float3 Out_PivotOS15_g117040 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117040 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117040 = float3( 0,0,0 );
				float3 Out_NormalOS15_g117040 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117040 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g117040 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g117040 = float3( 0,0,0 );
				float4 Out_TangentOS15_g117040 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g117040 = float3( 0,0,0 );
				float4 Out_VertexData15_g117040 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g117040 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117040 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g117040 = float4( 0,0,0,0 );
				Out_Dummy15_g117040 = Data15_g117040.Dummy;
				Out_PositionOS15_g117040 = Data15_g117040.PositionOS;
				Out_PositionWS15_g117040 = Data15_g117040.PositionWS;
				Out_PositionWO15_g117040 = Data15_g117040.PositionWO;
				Out_PositionRawOS15_g117040 = Data15_g117040.PositionRawOS;
				Out_PositionAddOS15_g117040 = Data15_g117040.PositionAddOS;
				Out_PivotOS15_g117040 = Data15_g117040.PivotOS;
				Out_PivotWS15_g117040 = Data15_g117040.PivotWS;
				Out_PivotWO15_g117040 = Data15_g117040.PivotWO;
				Out_NormalOS15_g117040 = Data15_g117040.NormalOS;
				Out_NormalWS15_g117040 = Data15_g117040.NormalWS;
				Out_NormalRawOS15_g117040 = Data15_g117040.NormalRawOS;
				Out_NormalRawWS15_g117040 = Data15_g117040.NormalRawWS;
				Out_TangentOS15_g117040 = Data15_g117040.TangentOS;
				Out_ViewDirWS15_g117040 = Data15_g117040.ViewDirWS;
				Out_VertexData15_g117040 = Data15_g117040.VertexData;
				Out_MotionData15_g117040 = Data15_g117040.MotionData;
				Out_BoundsData15_g117040 = Data15_g117040.BoundsData;
				Out_RotationData15_g117040 = Data15_g117040.RotationData;
				float3 temp_output_31_0_g117038 = Out_PositionOS15_g117040;
				
				o.ase_texcoord3.xyz = ase_worldPos;
				o.ase_texcoord4.xyz = ase_worldNormal;
				float3 ase_worldTangent = UnityObjectToWorldDir(v.tangent);
				o.ase_texcoord5.xyz = ase_worldTangent;
				float ase_vertexTangentSign = v.tangent.w * ( unity_WorldTransformParams.w >= 0.0 ? 1.0 : -1.0 );
				float3 ase_worldBitangent = cross( ase_worldNormal, ase_worldTangent ) * ase_vertexTangentSign;
				o.ase_texcoord6.xyz = ase_worldBitangent;
				o.ase_texcoord7.xyz = vertexToFrag73_g114306;
				
				o.ase_color = v.ase_color;
				o.ase_texcoord8 = v.ase_texcoord;
				
				//setting value to unused interpolator channels and avoid initialization warnings
				o.ase_texcoord3.w = 0;
				o.ase_texcoord4.w = 0;
				o.ase_texcoord5.w = 0;
				o.ase_texcoord6.w = 0;
				o.ase_texcoord7.w = 0;
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					float3 defaultVertexValue = v.vertex.xyz;
				#else
					float3 defaultVertexValue = float3(0, 0, 0);
				#endif
				float3 vertexValue = temp_output_31_0_g117038;
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					v.vertex.xyz = vertexValue;
				#else
					v.vertex.xyz += vertexValue;
				#endif
				v.vertex.w = 1;
				v.normal = Out_NormalOS15_g117040;
				v.tangent = Out_TangentOS15_g117040;

				#ifdef EDITOR_VISUALIZATION
					o.vizUV = 0;
					o.lightCoord = 0;
					if (unity_VisualizationMode == EDITORVIZ_TEXTURE)
						o.vizUV = UnityMetaVizUV(unity_EditorViz_UVIndex, v.texcoord.xy, v.texcoord1.xy, v.texcoord2.xy, unity_EditorViz_Texture_ST);
					else if (unity_VisualizationMode == EDITORVIZ_SHOWLIGHTMASK)
					{
						o.vizUV = v.texcoord1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
						o.lightCoord = mul(unity_EditorViz_WorldToLight, mul(unity_ObjectToWorld, float4(v.vertex.xyz, 1)));
					}
				#endif

				o.pos = UnityMetaVertexPosition(v.vertex, v.texcoord1.xy, v.texcoord2.xy, unity_LightmapST, unity_DynamicLightmapST);

				return o;
			}

			#if defined(ASE_TESSELLATION)
			struct VertexControl
			{
				float4 vertex : INTERNALTESSPOS;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;

				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct TessellationFactors
			{
				float edge[3] : SV_TessFactor;
				float inside : SV_InsideTessFactor;
			};

			VertexControl vert ( appdata v )
			{
				VertexControl o;
				UNITY_SETUP_INSTANCE_ID(v);
				UNITY_TRANSFER_INSTANCE_ID(v, o);
				o.vertex = v.vertex;
				o.tangent = v.tangent;
				o.normal = v.normal;
				o.texcoord1 = v.texcoord1;
				o.texcoord2 = v.texcoord2;
				o.ase_color = v.ase_color;
				o.ase_texcoord = v.ase_texcoord;
				return o;
			}

			TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
			{
				TessellationFactors o;
				float4 tf = 1;
				float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
				float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
				#if defined(ASE_FIXED_TESSELLATION)
				tf = FixedTess( tessValue );
				#elif defined(ASE_DISTANCE_TESSELLATION)
				tf = DistanceBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, tessValue, tessMin, tessMax, UNITY_MATRIX_M, _WorldSpaceCameraPos );
				#elif defined(ASE_LENGTH_TESSELLATION)
				tf = EdgeLengthBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams );
				#elif defined(ASE_LENGTH_CULL_TESSELLATION)
				tf = EdgeLengthBasedTessCull(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, tessMaxDisp, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams, unity_CameraWorldClipPlanes );
				#endif
				o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
				return o;
			}

			[domain("tri")]
			[partitioning("fractional_odd")]
			[outputtopology("triangle_cw")]
			[patchconstantfunc("TessellationFunction")]
			[outputcontrolpoints(3)]
			VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
			{
			   return patch[id];
			}

			[domain("tri")]
			v2f DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
			{
				appdata o = (appdata) 0;
				o.vertex = patch[0].vertex * bary.x + patch[1].vertex * bary.y + patch[2].vertex * bary.z;
				o.tangent = patch[0].tangent * bary.x + patch[1].tangent * bary.y + patch[2].tangent * bary.z;
				o.normal = patch[0].normal * bary.x + patch[1].normal * bary.y + patch[2].normal * bary.z;
				o.texcoord1 = patch[0].texcoord1 * bary.x + patch[1].texcoord1 * bary.y + patch[2].texcoord1 * bary.z;
				o.texcoord2 = patch[0].texcoord2 * bary.x + patch[1].texcoord2 * bary.y + patch[2].texcoord2 * bary.z;
				o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
				o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
				#if defined(ASE_PHONG_TESSELLATION)
				float3 pp[3];
				for (int i = 0; i < 3; ++i)
					pp[i] = o.vertex.xyz - patch[i].normal * (dot(o.vertex.xyz, patch[i].normal) - dot(patch[i].vertex.xyz, patch[i].normal));
				float phongStrength = _TessPhongStrength;
				o.vertex.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.vertex.xyz;
				#endif
				UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
				return VertexFunction(o);
			}
			#else
			v2f vert ( appdata v )
			{
				return VertexFunction( v );
			}
			#endif

			fixed4 frag (v2f IN 
				#ifdef _DEPTHOFFSET_ON
				, out float outputDepth : SV_Depth
				#endif
				) : SV_Target
			{
				UNITY_SETUP_INSTANCE_ID(IN);

				#ifdef LOD_FADE_CROSSFADE
					UNITY_APPLY_DITHER_CROSSFADE(IN.pos.xy);
				#endif

				#if defined(ASE_LIGHTING_SIMPLE)
					SurfaceOutput o = (SurfaceOutput)0;
				#else
					#if defined(_SPECULAR_SETUP)
						SurfaceOutputStandardSpecular o = (SurfaceOutputStandardSpecular)0;
					#else
						SurfaceOutputStandard o = (SurfaceOutputStandard)0;
					#endif
				#endif

				float localBreakData4_g117042 = ( 0.0 );
				float localCompData3_g117019 = ( 0.0 );
				TVEVisualData Data3_g117019 = (TVEVisualData)0;
				half Dummy594_g117018 = ( _CutoutCategory + _CutoutEnd + _CutoutElementMode + _CutoutBakeInfo );
				float In_Dummy3_g117019 = Dummy594_g117018;
				float localBreakData4_g117029 = ( 0.0 );
				float localCompData3_g117013 = ( 0.0 );
				TVEVisualData Data3_g117013 = (TVEVisualData)0;
				half Dummy145_g117003 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveElementMode + _EmissiveFlagMode );
				float In_Dummy3_g117013 = Dummy145_g117003;
				float localBreakData4_g117012 = ( 0.0 );
				float localCompData3_g116976 = ( 0.0 );
				TVEVisualData Data3_g116976 = (TVEVisualData)0;
				half Dummy594_g116974 = ( _WetnessCategory + _WetnessEnd + _WetnessElementMode + _WetnessBakeInfo );
				float In_Dummy3_g116976 = Dummy594_g116974;
				float localBreakData4_g116975 = ( 0.0 );
				float localCompData3_g116941 = ( 0.0 );
				TVEVisualData Data3_g116941 = (TVEVisualData)0;
				half Dummy594_g116938 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayElementMode + _OverlayBakeInfo );
				float In_Dummy3_g116941 = Dummy594_g116938;
				float localBreakData4_g116939 = ( 0.0 );
				float localCompData3_g116918 = ( 0.0 );
				TVEVisualData Data3_g116918 = (TVEVisualData)0;
				half Dummy205_g116915 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessElementMode + _DrynessBakeInfo );
				float In_Dummy3_g116918 = Dummy205_g116915;
				float localBreakData4_g116917 = ( 0.0 );
				float localCompData3_g116912 = ( 0.0 );
				TVEVisualData Data3_g116912 = (TVEVisualData)0;
				half Dummy205_g116891 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeInfo );
				float In_Dummy3_g116912 = Dummy205_g116891;
				float localBreakData4_g116913 = ( 0.0 );
				float localCompData3_g116778 = ( 0.0 );
				TVEVisualData Data3_g116778 = (TVEVisualData)0;
				half Dummy9163_g116777 = ( _CategoryTerrain + _EndTerrain );
				float In_Dummy3_g116778 = Dummy9163_g116777;
				float localHeightBasedBlending7362_g116779 = ( 0.0 );
				float3 ase_worldPos = IN.ase_texcoord3.xyz;
				float4 appendResult9125_g116779 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
				float4 temp_output_35_0_g116887 = appendResult9125_g116779;
				float2 InputScale48_g116887 = (temp_output_35_0_g116887).zw;
				half2 FinalScale53_g116887 = ( 1.0 / InputScale48_g116887 );
				float2 InputPosition52_g116887 = (temp_output_35_0_g116887).xy;
				half2 FinalPosition58_g116887 = -( FinalScale53_g116887 * InputPosition52_g116887 );
				float2 temp_output_65_0_g116887 = ( ( (ase_worldPos).xz * FinalScale53_g116887 ) + FinalPosition58_g116887 );
				float4 temp_output_70_0_g116887 = _TerrainControlTex1_TexelSize;
				float2 InputTexelSize68_g116887 = (temp_output_70_0_g116887).zw;
				float2 temp_cast_0 = (1.0).xx;
				float2 InputTexelRecip69_g116887 = (temp_output_70_0_g116887).xy;
				float2 Terrain_Control_UV7873_g116779 = ( ( ( temp_output_65_0_g116887 / ( 1.0 / ( InputTexelSize68_g116887 - temp_cast_0 ) ) ) + 0.5 ) * InputTexelRecip69_g116887 );
				half4 Terrain_Control_047365_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_047362_g116779 = Terrain_Control_047365_g116779;
				half4 Terrain_Control_087366_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_087362_g116779 = Terrain_Control_087366_g116779;
				half4 Terrain_Control_127712_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_127362_g116779 = Terrain_Control_127712_g116779;
				half4 Terrain_Control_167711_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_167362_g116779 = Terrain_Control_167711_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116824) = _TerrainShaderTex1;
				float localFilterTexture30_g116885 = ( 0.0 );
				SamplerState SamplerDefault30_g116885 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g116885 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g116885 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g116885 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g116885 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g116885 = SamplerDefault30_g116885;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g116885 = SamplerDefault30_g116885;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g116885 = SamplerPoint30_g116885;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g116885 = SamplerLow30_g116885;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g116885 = SamplerMedium30_g116885;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g116885 = SamplerHigh30_g116885;
				#endif
				SamplerState Sampler238_g116824 = SS30_g116885;
				half4 Input_Terrain_Coords_016785_g116779 = _TerrainCoord1;
				float4 temp_output_37_0_g116824 = Input_Terrain_Coords_016785_g116779;
				half4 Coords238_g116824 = temp_output_37_0_g116824;
				half3 Input_Position9197_g116779 = ase_worldPos;
				float3 temp_output_279_0_g116824 = Input_Position9197_g116779;
				half3 WorldPosition238_g116824 = temp_output_279_0_g116824;
				half4 localSamplePlanar2D238_g116824 = SamplePlanar2D( Texture238_g116824 , Sampler238_g116824 , Coords238_g116824 , WorldPosition238_g116824 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116824) = _TerrainShaderTex1;
				SamplerState Sampler246_g116824 = SS30_g116885;
				half4 Coords246_g116824 = temp_output_37_0_g116824;
				half3 WorldPosition246_g116824 = temp_output_279_0_g116824;
				float3 ase_worldNormal = IN.ase_texcoord4.xyz;
				half3 Input_Normal9199_g116779 = ase_worldNormal;
				float3 temp_output_280_0_g116824 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116824 = temp_output_280_0_g116824;
				half4 localSamplePlanar3D246_g116824 = SamplePlanar3D( Texture246_g116824 , Sampler246_g116824 , Coords246_g116824 , WorldPosition246_g116824 , WorldNormal246_g116824 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116824) = _TerrainShaderTex1;
				SamplerState Sampler234_g116824 = SS30_g116885;
				float4 Coords234_g116824 = temp_output_37_0_g116824;
				float3 WorldPosition234_g116824 = temp_output_279_0_g116824;
				float4 localSampleStochastic2D234_g116824 = SampleStochastic2D( Texture234_g116824 , Sampler234_g116824 , Coords234_g116824 , WorldPosition234_g116824 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116824) = _TerrainShaderTex1;
				SamplerState Sampler263_g116824 = SS30_g116885;
				half4 Coords263_g116824 = temp_output_37_0_g116824;
				half3 WorldPosition263_g116824 = temp_output_279_0_g116824;
				half3 WorldNormal263_g116824 = temp_output_280_0_g116824;
				half4 localSampleStochastic3D263_g116824 = SampleStochastic3D( Texture263_g116824 , Sampler263_g116824 , Coords263_g116824 , WorldPosition263_g116824 , WorldNormal263_g116824 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8639_g116779 = localSamplePlanar2D238_g116824;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8639_g116779 = localSamplePlanar3D246_g116824;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8639_g116779 = localSampleStochastic2D234_g116824;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8639_g116779 = localSampleStochastic3D263_g116824;
				#else
				float4 staticSwitch8639_g116779 = localSamplePlanar2D238_g116824;
				#endif
				float4 temp_output_7_0_g116781 = _TerrainShaderMin1;
				float4 temp_output_10_0_g116781 = ( _TerrainShaderMax1 - temp_output_7_0_g116781 );
				float4 temp_output_6970_0_g116779 = saturate( ( ( staticSwitch8639_g116779 - temp_output_7_0_g116781 ) / ( temp_output_10_0_g116781 + 0.0001 ) ) );
				half4 Masks_015_g116785 = temp_output_6970_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116828) = _TerrainShaderTex2;
				SamplerState Sampler238_g116828 = SS30_g116885;
				half4 Input_Terrain_Coords_026787_g116779 = _TerrainCoord2;
				float4 temp_output_37_0_g116828 = Input_Terrain_Coords_026787_g116779;
				half4 Coords238_g116828 = temp_output_37_0_g116828;
				float3 temp_output_279_0_g116828 = Input_Position9197_g116779;
				half3 WorldPosition238_g116828 = temp_output_279_0_g116828;
				half4 localSamplePlanar2D238_g116828 = SamplePlanar2D( Texture238_g116828 , Sampler238_g116828 , Coords238_g116828 , WorldPosition238_g116828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116828) = _TerrainShaderTex2;
				SamplerState Sampler246_g116828 = SS30_g116885;
				half4 Coords246_g116828 = temp_output_37_0_g116828;
				half3 WorldPosition246_g116828 = temp_output_279_0_g116828;
				float3 temp_output_280_0_g116828 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116828 = temp_output_280_0_g116828;
				half4 localSamplePlanar3D246_g116828 = SamplePlanar3D( Texture246_g116828 , Sampler246_g116828 , Coords246_g116828 , WorldPosition246_g116828 , WorldNormal246_g116828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116828) = _TerrainShaderTex2;
				SamplerState Sampler234_g116828 = SS30_g116885;
				float4 Coords234_g116828 = temp_output_37_0_g116828;
				float3 WorldPosition234_g116828 = temp_output_279_0_g116828;
				float4 localSampleStochastic2D234_g116828 = SampleStochastic2D( Texture234_g116828 , Sampler234_g116828 , Coords234_g116828 , WorldPosition234_g116828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116828) = _TerrainShaderTex2;
				SamplerState Sampler263_g116828 = SS30_g116885;
				half4 Coords263_g116828 = temp_output_37_0_g116828;
				half3 WorldPosition263_g116828 = temp_output_279_0_g116828;
				half3 WorldNormal263_g116828 = temp_output_280_0_g116828;
				half4 localSampleStochastic3D263_g116828 = SampleStochastic3D( Texture263_g116828 , Sampler263_g116828 , Coords263_g116828 , WorldPosition263_g116828 , WorldNormal263_g116828 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8640_g116779 = localSamplePlanar2D238_g116828;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8640_g116779 = localSamplePlanar3D246_g116828;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8640_g116779 = localSampleStochastic2D234_g116828;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8640_g116779 = localSampleStochastic3D263_g116828;
				#else
				float4 staticSwitch8640_g116779 = localSamplePlanar2D238_g116828;
				#endif
				float4 temp_output_7_0_g116791 = _TerrainShaderMin2;
				float4 temp_output_10_0_g116791 = ( _TerrainShaderMax2 - temp_output_7_0_g116791 );
				float4 temp_output_6977_0_g116779 = saturate( ( ( staticSwitch8640_g116779 - temp_output_7_0_g116791 ) / ( temp_output_10_0_g116791 + 0.0001 ) ) );
				half4 Masks_0210_g116785 = temp_output_6977_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116833) = _TerrainShaderTex3;
				SamplerState Sampler238_g116833 = SS30_g116885;
				half4 Input_Terrain_Coords_036789_g116779 = _TerrainCoord3;
				float4 temp_output_37_0_g116833 = Input_Terrain_Coords_036789_g116779;
				half4 Coords238_g116833 = temp_output_37_0_g116833;
				float3 temp_output_279_0_g116833 = Input_Position9197_g116779;
				half3 WorldPosition238_g116833 = temp_output_279_0_g116833;
				half4 localSamplePlanar2D238_g116833 = SamplePlanar2D( Texture238_g116833 , Sampler238_g116833 , Coords238_g116833 , WorldPosition238_g116833 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116833) = _TerrainShaderTex3;
				SamplerState Sampler246_g116833 = SS30_g116885;
				half4 Coords246_g116833 = temp_output_37_0_g116833;
				half3 WorldPosition246_g116833 = temp_output_279_0_g116833;
				float3 temp_output_280_0_g116833 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116833 = temp_output_280_0_g116833;
				half4 localSamplePlanar3D246_g116833 = SamplePlanar3D( Texture246_g116833 , Sampler246_g116833 , Coords246_g116833 , WorldPosition246_g116833 , WorldNormal246_g116833 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116833) = _TerrainShaderTex3;
				SamplerState Sampler234_g116833 = SS30_g116885;
				float4 Coords234_g116833 = temp_output_37_0_g116833;
				float3 WorldPosition234_g116833 = temp_output_279_0_g116833;
				float4 localSampleStochastic2D234_g116833 = SampleStochastic2D( Texture234_g116833 , Sampler234_g116833 , Coords234_g116833 , WorldPosition234_g116833 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116833) = _TerrainShaderTex3;
				SamplerState Sampler263_g116833 = SS30_g116885;
				half4 Coords263_g116833 = temp_output_37_0_g116833;
				half3 WorldPosition263_g116833 = temp_output_279_0_g116833;
				half3 WorldNormal263_g116833 = temp_output_280_0_g116833;
				half4 localSampleStochastic3D263_g116833 = SampleStochastic3D( Texture263_g116833 , Sampler263_g116833 , Coords263_g116833 , WorldPosition263_g116833 , WorldNormal263_g116833 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8641_g116779 = localSamplePlanar2D238_g116833;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8641_g116779 = localSamplePlanar3D246_g116833;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8641_g116779 = localSampleStochastic2D234_g116833;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8641_g116779 = localSampleStochastic3D263_g116833;
				#else
				float4 staticSwitch8641_g116779 = localSamplePlanar2D238_g116833;
				#endif
				float4 temp_output_7_0_g116792 = _TerrainShaderMin3;
				float4 temp_output_10_0_g116792 = ( _TerrainShaderMax3 - temp_output_7_0_g116792 );
				float4 temp_output_6978_0_g116779 = saturate( ( ( staticSwitch8641_g116779 - temp_output_7_0_g116792 ) / ( temp_output_10_0_g116792 + 0.0001 ) ) );
				half4 Masks_0312_g116785 = temp_output_6978_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116834) = _TerrainShaderTex4;
				SamplerState Sampler238_g116834 = SS30_g116885;
				half4 Input_Terrain_Coords_046791_g116779 = _TerrainCoord4;
				float4 temp_output_37_0_g116834 = Input_Terrain_Coords_046791_g116779;
				half4 Coords238_g116834 = temp_output_37_0_g116834;
				float3 temp_output_279_0_g116834 = Input_Position9197_g116779;
				half3 WorldPosition238_g116834 = temp_output_279_0_g116834;
				half4 localSamplePlanar2D238_g116834 = SamplePlanar2D( Texture238_g116834 , Sampler238_g116834 , Coords238_g116834 , WorldPosition238_g116834 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116834) = _TerrainShaderTex4;
				SamplerState Sampler246_g116834 = SS30_g116885;
				half4 Coords246_g116834 = temp_output_37_0_g116834;
				half3 WorldPosition246_g116834 = temp_output_279_0_g116834;
				float3 temp_output_280_0_g116834 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116834 = temp_output_280_0_g116834;
				half4 localSamplePlanar3D246_g116834 = SamplePlanar3D( Texture246_g116834 , Sampler246_g116834 , Coords246_g116834 , WorldPosition246_g116834 , WorldNormal246_g116834 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116834) = _TerrainShaderTex4;
				SamplerState Sampler234_g116834 = SS30_g116885;
				float4 Coords234_g116834 = temp_output_37_0_g116834;
				float3 WorldPosition234_g116834 = temp_output_279_0_g116834;
				float4 localSampleStochastic2D234_g116834 = SampleStochastic2D( Texture234_g116834 , Sampler234_g116834 , Coords234_g116834 , WorldPosition234_g116834 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116834) = _TerrainShaderTex4;
				SamplerState Sampler263_g116834 = SS30_g116885;
				half4 Coords263_g116834 = temp_output_37_0_g116834;
				half3 WorldPosition263_g116834 = temp_output_279_0_g116834;
				half3 WorldNormal263_g116834 = temp_output_280_0_g116834;
				half4 localSampleStochastic3D263_g116834 = SampleStochastic3D( Texture263_g116834 , Sampler263_g116834 , Coords263_g116834 , WorldPosition263_g116834 , WorldNormal263_g116834 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8642_g116779 = localSamplePlanar2D238_g116834;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8642_g116779 = localSamplePlanar3D246_g116834;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8642_g116779 = localSampleStochastic2D234_g116834;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8642_g116779 = localSampleStochastic3D263_g116834;
				#else
				float4 staticSwitch8642_g116779 = localSamplePlanar2D238_g116834;
				#endif
				float4 temp_output_7_0_g116793 = _TerrainShaderMin4;
				float4 temp_output_10_0_g116793 = ( _TerrainShaderMax4 - temp_output_7_0_g116793 );
				float4 temp_output_6983_0_g116779 = saturate( ( ( staticSwitch8642_g116779 - temp_output_7_0_g116793 ) / ( temp_output_10_0_g116793 + 0.0001 ) ) );
				half4 Masks_0414_g116785 = temp_output_6983_0_g116779;
				float4 appendResult29_g116785 = (float4((Masks_015_g116785).z , (Masks_0210_g116785).z , (Masks_0312_g116785).z , (Masks_0414_g116785).z));
				half4 Control31_g116785 = Terrain_Control_047365_g116779;
				half4 Terrain_Height_047210_g116779 = ( appendResult29_g116785 * Control31_g116785 );
				float4 heights_047362_g116779 = Terrain_Height_047210_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116837) = _TerrainShaderTex5;
				SamplerState Sampler238_g116837 = SS30_g116885;
				half4 Input_Terrain_Coords_058750_g116779 = _TerrainCoord5;
				float4 temp_output_37_0_g116837 = Input_Terrain_Coords_058750_g116779;
				half4 Coords238_g116837 = temp_output_37_0_g116837;
				float3 temp_output_279_0_g116837 = Input_Position9197_g116779;
				half3 WorldPosition238_g116837 = temp_output_279_0_g116837;
				half4 localSamplePlanar2D238_g116837 = SamplePlanar2D( Texture238_g116837 , Sampler238_g116837 , Coords238_g116837 , WorldPosition238_g116837 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116837) = _TerrainShaderTex5;
				SamplerState Sampler246_g116837 = SS30_g116885;
				half4 Coords246_g116837 = temp_output_37_0_g116837;
				half3 WorldPosition246_g116837 = temp_output_279_0_g116837;
				float3 temp_output_280_0_g116837 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116837 = temp_output_280_0_g116837;
				half4 localSamplePlanar3D246_g116837 = SamplePlanar3D( Texture246_g116837 , Sampler246_g116837 , Coords246_g116837 , WorldPosition246_g116837 , WorldNormal246_g116837 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116837) = _TerrainShaderTex5;
				SamplerState Sampler234_g116837 = SS30_g116885;
				float4 Coords234_g116837 = temp_output_37_0_g116837;
				float3 WorldPosition234_g116837 = temp_output_279_0_g116837;
				float4 localSampleStochastic2D234_g116837 = SampleStochastic2D( Texture234_g116837 , Sampler234_g116837 , Coords234_g116837 , WorldPosition234_g116837 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116837) = _TerrainShaderTex5;
				SamplerState Sampler263_g116837 = SS30_g116885;
				half4 Coords263_g116837 = temp_output_37_0_g116837;
				half3 WorldPosition263_g116837 = temp_output_279_0_g116837;
				half3 WorldNormal263_g116837 = temp_output_280_0_g116837;
				half4 localSampleStochastic3D263_g116837 = SampleStochastic3D( Texture263_g116837 , Sampler263_g116837 , Coords263_g116837 , WorldPosition263_g116837 , WorldNormal263_g116837 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8710_g116779 = localSamplePlanar2D238_g116837;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8710_g116779 = localSamplePlanar3D246_g116837;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8710_g116779 = localSampleStochastic2D234_g116837;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8710_g116779 = localSampleStochastic3D263_g116837;
				#else
				float4 staticSwitch8710_g116779 = localSamplePlanar2D238_g116837;
				#endif
				float4 temp_output_7_0_g116796 = _TerrainShaderMin5;
				float4 temp_output_10_0_g116796 = ( _TerrainShaderMax5 - temp_output_7_0_g116796 );
				float4 temp_output_8714_0_g116779 = saturate( ( ( staticSwitch8710_g116779 - temp_output_7_0_g116796 ) / ( temp_output_10_0_g116796 + 0.0001 ) ) );
				half4 Masks_015_g116797 = temp_output_8714_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116868) = _TerrainShaderTex6;
				SamplerState Sampler238_g116868 = SS30_g116885;
				half4 Input_Terrain_Coords_068751_g116779 = _TerrainCoord6;
				float4 temp_output_37_0_g116868 = Input_Terrain_Coords_068751_g116779;
				half4 Coords238_g116868 = temp_output_37_0_g116868;
				float3 temp_output_279_0_g116868 = Input_Position9197_g116779;
				half3 WorldPosition238_g116868 = temp_output_279_0_g116868;
				half4 localSamplePlanar2D238_g116868 = SamplePlanar2D( Texture238_g116868 , Sampler238_g116868 , Coords238_g116868 , WorldPosition238_g116868 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116868) = _TerrainShaderTex6;
				SamplerState Sampler246_g116868 = SS30_g116885;
				half4 Coords246_g116868 = temp_output_37_0_g116868;
				half3 WorldPosition246_g116868 = temp_output_279_0_g116868;
				float3 temp_output_280_0_g116868 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116868 = temp_output_280_0_g116868;
				half4 localSamplePlanar3D246_g116868 = SamplePlanar3D( Texture246_g116868 , Sampler246_g116868 , Coords246_g116868 , WorldPosition246_g116868 , WorldNormal246_g116868 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116868) = _TerrainShaderTex6;
				SamplerState Sampler234_g116868 = SS30_g116885;
				float4 Coords234_g116868 = temp_output_37_0_g116868;
				float3 WorldPosition234_g116868 = temp_output_279_0_g116868;
				float4 localSampleStochastic2D234_g116868 = SampleStochastic2D( Texture234_g116868 , Sampler234_g116868 , Coords234_g116868 , WorldPosition234_g116868 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116868) = _TerrainShaderTex6;
				SamplerState Sampler263_g116868 = SS30_g116885;
				half4 Coords263_g116868 = temp_output_37_0_g116868;
				half3 WorldPosition263_g116868 = temp_output_279_0_g116868;
				half3 WorldNormal263_g116868 = temp_output_280_0_g116868;
				half4 localSampleStochastic3D263_g116868 = SampleStochastic3D( Texture263_g116868 , Sampler263_g116868 , Coords263_g116868 , WorldPosition263_g116868 , WorldNormal263_g116868 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8711_g116779 = localSamplePlanar2D238_g116868;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8711_g116779 = localSamplePlanar3D246_g116868;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8711_g116779 = localSampleStochastic2D234_g116868;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8711_g116779 = localSampleStochastic3D263_g116868;
				#else
				float4 staticSwitch8711_g116779 = localSamplePlanar2D238_g116868;
				#endif
				float4 temp_output_7_0_g116821 = _TerrainShaderMin6;
				float4 temp_output_10_0_g116821 = ( _TerrainShaderMax6 - temp_output_7_0_g116821 );
				float4 temp_output_8721_0_g116779 = saturate( ( ( staticSwitch8711_g116779 - temp_output_7_0_g116821 ) / ( temp_output_10_0_g116821 + 0.0001 ) ) );
				half4 Masks_0210_g116797 = temp_output_8721_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116869) = _TerrainShaderTex7;
				SamplerState Sampler238_g116869 = SS30_g116885;
				half4 Input_Terrain_Coords_078752_g116779 = _TerrainCoord7;
				float4 temp_output_37_0_g116869 = Input_Terrain_Coords_078752_g116779;
				half4 Coords238_g116869 = temp_output_37_0_g116869;
				float3 temp_output_279_0_g116869 = Input_Position9197_g116779;
				half3 WorldPosition238_g116869 = temp_output_279_0_g116869;
				half4 localSamplePlanar2D238_g116869 = SamplePlanar2D( Texture238_g116869 , Sampler238_g116869 , Coords238_g116869 , WorldPosition238_g116869 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116869) = _TerrainShaderTex7;
				SamplerState Sampler246_g116869 = SS30_g116885;
				half4 Coords246_g116869 = temp_output_37_0_g116869;
				half3 WorldPosition246_g116869 = temp_output_279_0_g116869;
				float3 temp_output_280_0_g116869 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116869 = temp_output_280_0_g116869;
				half4 localSamplePlanar3D246_g116869 = SamplePlanar3D( Texture246_g116869 , Sampler246_g116869 , Coords246_g116869 , WorldPosition246_g116869 , WorldNormal246_g116869 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116869) = _TerrainShaderTex7;
				SamplerState Sampler234_g116869 = SS30_g116885;
				float4 Coords234_g116869 = temp_output_37_0_g116869;
				float3 WorldPosition234_g116869 = temp_output_279_0_g116869;
				float4 localSampleStochastic2D234_g116869 = SampleStochastic2D( Texture234_g116869 , Sampler234_g116869 , Coords234_g116869 , WorldPosition234_g116869 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116869) = _TerrainShaderTex7;
				SamplerState Sampler263_g116869 = SS30_g116885;
				half4 Coords263_g116869 = temp_output_37_0_g116869;
				half3 WorldPosition263_g116869 = temp_output_279_0_g116869;
				half3 WorldNormal263_g116869 = temp_output_280_0_g116869;
				half4 localSampleStochastic3D263_g116869 = SampleStochastic3D( Texture263_g116869 , Sampler263_g116869 , Coords263_g116869 , WorldPosition263_g116869 , WorldNormal263_g116869 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8712_g116779 = localSamplePlanar2D238_g116869;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8712_g116779 = localSamplePlanar3D246_g116869;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8712_g116779 = localSampleStochastic2D234_g116869;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8712_g116779 = localSampleStochastic3D263_g116869;
				#else
				float4 staticSwitch8712_g116779 = localSamplePlanar2D238_g116869;
				#endif
				float4 temp_output_7_0_g116822 = _TerrainShaderMin7;
				float4 temp_output_10_0_g116822 = ( _TerrainShaderMax7 - temp_output_7_0_g116822 );
				float4 temp_output_8724_0_g116779 = saturate( ( ( staticSwitch8712_g116779 - temp_output_7_0_g116822 ) / ( temp_output_10_0_g116822 + 0.0001 ) ) );
				half4 Masks_0312_g116797 = temp_output_8724_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116870) = _TerrainShaderTex8;
				SamplerState Sampler238_g116870 = SS30_g116885;
				half4 Input_Terrain_Coords_088749_g116779 = _TerrainCoord8;
				float4 temp_output_37_0_g116870 = Input_Terrain_Coords_088749_g116779;
				half4 Coords238_g116870 = temp_output_37_0_g116870;
				float3 temp_output_279_0_g116870 = Input_Position9197_g116779;
				half3 WorldPosition238_g116870 = temp_output_279_0_g116870;
				half4 localSamplePlanar2D238_g116870 = SamplePlanar2D( Texture238_g116870 , Sampler238_g116870 , Coords238_g116870 , WorldPosition238_g116870 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116870) = _TerrainShaderTex8;
				SamplerState Sampler246_g116870 = SS30_g116885;
				half4 Coords246_g116870 = temp_output_37_0_g116870;
				half3 WorldPosition246_g116870 = temp_output_279_0_g116870;
				float3 temp_output_280_0_g116870 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116870 = temp_output_280_0_g116870;
				half4 localSamplePlanar3D246_g116870 = SamplePlanar3D( Texture246_g116870 , Sampler246_g116870 , Coords246_g116870 , WorldPosition246_g116870 , WorldNormal246_g116870 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116870) = _TerrainShaderTex8;
				SamplerState Sampler234_g116870 = SS30_g116885;
				float4 Coords234_g116870 = temp_output_37_0_g116870;
				float3 WorldPosition234_g116870 = temp_output_279_0_g116870;
				float4 localSampleStochastic2D234_g116870 = SampleStochastic2D( Texture234_g116870 , Sampler234_g116870 , Coords234_g116870 , WorldPosition234_g116870 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116870) = _TerrainShaderTex8;
				SamplerState Sampler263_g116870 = SS30_g116885;
				half4 Coords263_g116870 = temp_output_37_0_g116870;
				half3 WorldPosition263_g116870 = temp_output_279_0_g116870;
				half3 WorldNormal263_g116870 = temp_output_280_0_g116870;
				half4 localSampleStochastic3D263_g116870 = SampleStochastic3D( Texture263_g116870 , Sampler263_g116870 , Coords263_g116870 , WorldPosition263_g116870 , WorldNormal263_g116870 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8713_g116779 = localSamplePlanar2D238_g116870;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8713_g116779 = localSamplePlanar3D246_g116870;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8713_g116779 = localSampleStochastic2D234_g116870;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8713_g116779 = localSampleStochastic3D263_g116870;
				#else
				float4 staticSwitch8713_g116779 = localSamplePlanar2D238_g116870;
				#endif
				float4 temp_output_7_0_g116823 = _TerrainShaderMin8;
				float4 temp_output_10_0_g116823 = ( _TerrainShaderMax8 - temp_output_7_0_g116823 );
				float4 temp_output_8727_0_g116779 = saturate( ( ( staticSwitch8713_g116779 - temp_output_7_0_g116823 ) / ( temp_output_10_0_g116823 + 0.0001 ) ) );
				half4 Masks_0414_g116797 = temp_output_8727_0_g116779;
				float4 appendResult29_g116797 = (float4((Masks_015_g116797).z , (Masks_0210_g116797).z , (Masks_0312_g116797).z , (Masks_0414_g116797).z));
				half4 Control31_g116797 = Terrain_Control_087366_g116779;
				half4 Terrain_Height_088731_g116779 = ( appendResult29_g116797 * Control31_g116797 );
				float4 heights_087362_g116779 = Terrain_Height_088731_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116840) = _TerrainShaderTex9;
				SamplerState Sampler238_g116840 = SS30_g116885;
				half4 Input_Terrain_Coords_098833_g116779 = _TerrainCoord9;
				float4 temp_output_37_0_g116840 = Input_Terrain_Coords_098833_g116779;
				half4 Coords238_g116840 = temp_output_37_0_g116840;
				float3 temp_output_279_0_g116840 = Input_Position9197_g116779;
				half3 WorldPosition238_g116840 = temp_output_279_0_g116840;
				half4 localSamplePlanar2D238_g116840 = SamplePlanar2D( Texture238_g116840 , Sampler238_g116840 , Coords238_g116840 , WorldPosition238_g116840 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116840) = _TerrainShaderTex9;
				SamplerState Sampler246_g116840 = SS30_g116885;
				half4 Coords246_g116840 = temp_output_37_0_g116840;
				half3 WorldPosition246_g116840 = temp_output_279_0_g116840;
				float3 temp_output_280_0_g116840 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116840 = temp_output_280_0_g116840;
				half4 localSamplePlanar3D246_g116840 = SamplePlanar3D( Texture246_g116840 , Sampler246_g116840 , Coords246_g116840 , WorldPosition246_g116840 , WorldNormal246_g116840 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116840) = _TerrainShaderTex9;
				SamplerState Sampler234_g116840 = SS30_g116885;
				float4 Coords234_g116840 = temp_output_37_0_g116840;
				float3 WorldPosition234_g116840 = temp_output_279_0_g116840;
				float4 localSampleStochastic2D234_g116840 = SampleStochastic2D( Texture234_g116840 , Sampler234_g116840 , Coords234_g116840 , WorldPosition234_g116840 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116840) = _TerrainShaderTex9;
				SamplerState Sampler263_g116840 = SS30_g116885;
				half4 Coords263_g116840 = temp_output_37_0_g116840;
				half3 WorldPosition263_g116840 = temp_output_279_0_g116840;
				half3 WorldNormal263_g116840 = temp_output_280_0_g116840;
				half4 localSampleStochastic3D263_g116840 = SampleStochastic3D( Texture263_g116840 , Sampler263_g116840 , Coords263_g116840 , WorldPosition263_g116840 , WorldNormal263_g116840 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8878_g116779 = localSamplePlanar2D238_g116840;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8878_g116779 = localSamplePlanar3D246_g116840;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8878_g116779 = localSampleStochastic2D234_g116840;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8878_g116779 = localSampleStochastic3D263_g116840;
				#else
				float4 staticSwitch8878_g116779 = localSamplePlanar2D238_g116840;
				#endif
				float4 temp_output_7_0_g116803 = _TerrainShaderMin9;
				float4 temp_output_10_0_g116803 = ( _TerrainShaderMax9 - temp_output_7_0_g116803 );
				float4 temp_output_8815_0_g116779 = saturate( ( ( staticSwitch8878_g116779 - temp_output_7_0_g116803 ) / ( temp_output_10_0_g116803 + 0.0001 ) ) );
				half4 Masks_015_g116804 = temp_output_8815_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116850) = _TerrainShaderTex10;
				SamplerState Sampler238_g116850 = SS30_g116885;
				half4 Input_Terrain_Coords_108834_g116779 = _TerrainCoord10;
				float4 temp_output_37_0_g116850 = Input_Terrain_Coords_108834_g116779;
				half4 Coords238_g116850 = temp_output_37_0_g116850;
				float3 temp_output_279_0_g116850 = Input_Position9197_g116779;
				half3 WorldPosition238_g116850 = temp_output_279_0_g116850;
				half4 localSamplePlanar2D238_g116850 = SamplePlanar2D( Texture238_g116850 , Sampler238_g116850 , Coords238_g116850 , WorldPosition238_g116850 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116850) = _TerrainShaderTex10;
				SamplerState Sampler246_g116850 = SS30_g116885;
				half4 Coords246_g116850 = temp_output_37_0_g116850;
				half3 WorldPosition246_g116850 = temp_output_279_0_g116850;
				float3 temp_output_280_0_g116850 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116850 = temp_output_280_0_g116850;
				half4 localSamplePlanar3D246_g116850 = SamplePlanar3D( Texture246_g116850 , Sampler246_g116850 , Coords246_g116850 , WorldPosition246_g116850 , WorldNormal246_g116850 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116850) = _TerrainShaderTex10;
				SamplerState Sampler234_g116850 = SS30_g116885;
				float4 Coords234_g116850 = temp_output_37_0_g116850;
				float3 WorldPosition234_g116850 = temp_output_279_0_g116850;
				float4 localSampleStochastic2D234_g116850 = SampleStochastic2D( Texture234_g116850 , Sampler234_g116850 , Coords234_g116850 , WorldPosition234_g116850 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116850) = _TerrainShaderTex10;
				SamplerState Sampler263_g116850 = SS30_g116885;
				half4 Coords263_g116850 = temp_output_37_0_g116850;
				half3 WorldPosition263_g116850 = temp_output_279_0_g116850;
				half3 WorldNormal263_g116850 = temp_output_280_0_g116850;
				half4 localSampleStochastic3D263_g116850 = SampleStochastic3D( Texture263_g116850 , Sampler263_g116850 , Coords263_g116850 , WorldPosition263_g116850 , WorldNormal263_g116850 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8860_g116779 = localSamplePlanar2D238_g116850;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8860_g116779 = localSamplePlanar3D246_g116850;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8860_g116779 = localSampleStochastic2D234_g116850;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8860_g116779 = localSampleStochastic3D263_g116850;
				#else
				float4 staticSwitch8860_g116779 = localSamplePlanar2D238_g116850;
				#endif
				float4 temp_output_7_0_g116815 = _TerrainShaderMin10;
				float4 temp_output_10_0_g116815 = ( _TerrainShaderMax10 - temp_output_7_0_g116815 );
				float4 temp_output_8818_0_g116779 = saturate( ( ( staticSwitch8860_g116779 - temp_output_7_0_g116815 ) / ( temp_output_10_0_g116815 + 0.0001 ) ) );
				half4 Masks_0210_g116804 = temp_output_8818_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116851) = _TerrainShaderTex11;
				SamplerState Sampler238_g116851 = SS30_g116885;
				half4 Input_Terrain_Coords_118835_g116779 = _TerrainCoord11;
				float4 temp_output_37_0_g116851 = Input_Terrain_Coords_118835_g116779;
				half4 Coords238_g116851 = temp_output_37_0_g116851;
				float3 temp_output_279_0_g116851 = Input_Position9197_g116779;
				half3 WorldPosition238_g116851 = temp_output_279_0_g116851;
				half4 localSamplePlanar2D238_g116851 = SamplePlanar2D( Texture238_g116851 , Sampler238_g116851 , Coords238_g116851 , WorldPosition238_g116851 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116851) = _TerrainShaderTex11;
				SamplerState Sampler246_g116851 = SS30_g116885;
				half4 Coords246_g116851 = temp_output_37_0_g116851;
				half3 WorldPosition246_g116851 = temp_output_279_0_g116851;
				float3 temp_output_280_0_g116851 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116851 = temp_output_280_0_g116851;
				half4 localSamplePlanar3D246_g116851 = SamplePlanar3D( Texture246_g116851 , Sampler246_g116851 , Coords246_g116851 , WorldPosition246_g116851 , WorldNormal246_g116851 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116851) = _TerrainShaderTex11;
				SamplerState Sampler234_g116851 = SS30_g116885;
				float4 Coords234_g116851 = temp_output_37_0_g116851;
				float3 WorldPosition234_g116851 = temp_output_279_0_g116851;
				float4 localSampleStochastic2D234_g116851 = SampleStochastic2D( Texture234_g116851 , Sampler234_g116851 , Coords234_g116851 , WorldPosition234_g116851 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116851) = _TerrainShaderTex11;
				SamplerState Sampler263_g116851 = SS30_g116885;
				half4 Coords263_g116851 = temp_output_37_0_g116851;
				half3 WorldPosition263_g116851 = temp_output_279_0_g116851;
				half3 WorldNormal263_g116851 = temp_output_280_0_g116851;
				half4 localSampleStochastic3D263_g116851 = SampleStochastic3D( Texture263_g116851 , Sampler263_g116851 , Coords263_g116851 , WorldPosition263_g116851 , WorldNormal263_g116851 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8861_g116779 = localSamplePlanar2D238_g116851;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8861_g116779 = localSamplePlanar3D246_g116851;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8861_g116779 = localSampleStochastic2D234_g116851;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8861_g116779 = localSampleStochastic3D263_g116851;
				#else
				float4 staticSwitch8861_g116779 = localSamplePlanar2D238_g116851;
				#endif
				float4 temp_output_7_0_g116816 = _TerrainShaderMin11;
				float4 temp_output_10_0_g116816 = ( _TerrainShaderMax11 - temp_output_7_0_g116816 );
				float4 temp_output_8819_0_g116779 = saturate( ( ( staticSwitch8861_g116779 - temp_output_7_0_g116816 ) / ( temp_output_10_0_g116816 + 0.0001 ) ) );
				half4 Masks_0312_g116804 = temp_output_8819_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116852) = _TerrainShaderTex12;
				SamplerState Sampler238_g116852 = SS30_g116885;
				half4 Input_Terrain_Coords_128836_g116779 = _TerrainCoord12;
				float4 temp_output_37_0_g116852 = Input_Terrain_Coords_128836_g116779;
				half4 Coords238_g116852 = temp_output_37_0_g116852;
				float3 temp_output_279_0_g116852 = Input_Position9197_g116779;
				half3 WorldPosition238_g116852 = temp_output_279_0_g116852;
				half4 localSamplePlanar2D238_g116852 = SamplePlanar2D( Texture238_g116852 , Sampler238_g116852 , Coords238_g116852 , WorldPosition238_g116852 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116852) = _TerrainShaderTex12;
				SamplerState Sampler246_g116852 = SS30_g116885;
				half4 Coords246_g116852 = temp_output_37_0_g116852;
				half3 WorldPosition246_g116852 = temp_output_279_0_g116852;
				float3 temp_output_280_0_g116852 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116852 = temp_output_280_0_g116852;
				half4 localSamplePlanar3D246_g116852 = SamplePlanar3D( Texture246_g116852 , Sampler246_g116852 , Coords246_g116852 , WorldPosition246_g116852 , WorldNormal246_g116852 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116852) = _TerrainShaderTex12;
				SamplerState Sampler234_g116852 = SS30_g116885;
				float4 Coords234_g116852 = temp_output_37_0_g116852;
				float3 WorldPosition234_g116852 = temp_output_279_0_g116852;
				float4 localSampleStochastic2D234_g116852 = SampleStochastic2D( Texture234_g116852 , Sampler234_g116852 , Coords234_g116852 , WorldPosition234_g116852 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116852) = _TerrainShaderTex12;
				SamplerState Sampler263_g116852 = SS30_g116885;
				half4 Coords263_g116852 = temp_output_37_0_g116852;
				half3 WorldPosition263_g116852 = temp_output_279_0_g116852;
				half3 WorldNormal263_g116852 = temp_output_280_0_g116852;
				half4 localSampleStochastic3D263_g116852 = SampleStochastic3D( Texture263_g116852 , Sampler263_g116852 , Coords263_g116852 , WorldPosition263_g116852 , WorldNormal263_g116852 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8879_g116779 = localSamplePlanar2D238_g116852;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8879_g116779 = localSamplePlanar3D246_g116852;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8879_g116779 = localSampleStochastic2D234_g116852;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8879_g116779 = localSampleStochastic3D263_g116852;
				#else
				float4 staticSwitch8879_g116779 = localSamplePlanar2D238_g116852;
				#endif
				float4 temp_output_7_0_g116817 = _TerrainShaderMin12;
				float4 temp_output_10_0_g116817 = ( _TerrainShaderMax12 - temp_output_7_0_g116817 );
				float4 temp_output_8820_0_g116779 = saturate( ( ( staticSwitch8879_g116779 - temp_output_7_0_g116817 ) / ( temp_output_10_0_g116817 + 0.0001 ) ) );
				half4 Masks_0414_g116804 = temp_output_8820_0_g116779;
				float4 appendResult29_g116804 = (float4((Masks_015_g116804).z , (Masks_0210_g116804).z , (Masks_0312_g116804).z , (Masks_0414_g116804).z));
				half4 Control31_g116804 = Terrain_Control_127712_g116779;
				half4 Terrain_Height_128870_g116779 = ( appendResult29_g116804 * Control31_g116804 );
				float4 heights_127362_g116779 = Terrain_Height_128870_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116848) = _TerrainShaderTex13;
				SamplerState Sampler238_g116848 = SS30_g116885;
				half4 Input_Terrain_Coords_138960_g116779 = _TerrainCoord13;
				float4 temp_output_37_0_g116848 = Input_Terrain_Coords_138960_g116779;
				half4 Coords238_g116848 = temp_output_37_0_g116848;
				float3 temp_output_279_0_g116848 = Input_Position9197_g116779;
				half3 WorldPosition238_g116848 = temp_output_279_0_g116848;
				half4 localSamplePlanar2D238_g116848 = SamplePlanar2D( Texture238_g116848 , Sampler238_g116848 , Coords238_g116848 , WorldPosition238_g116848 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116848) = _TerrainShaderTex13;
				SamplerState Sampler246_g116848 = SS30_g116885;
				half4 Coords246_g116848 = temp_output_37_0_g116848;
				half3 WorldPosition246_g116848 = temp_output_279_0_g116848;
				float3 temp_output_280_0_g116848 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116848 = temp_output_280_0_g116848;
				half4 localSamplePlanar3D246_g116848 = SamplePlanar3D( Texture246_g116848 , Sampler246_g116848 , Coords246_g116848 , WorldPosition246_g116848 , WorldNormal246_g116848 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116848) = _TerrainShaderTex13;
				SamplerState Sampler234_g116848 = SS30_g116885;
				float4 Coords234_g116848 = temp_output_37_0_g116848;
				float3 WorldPosition234_g116848 = temp_output_279_0_g116848;
				float4 localSampleStochastic2D234_g116848 = SampleStochastic2D( Texture234_g116848 , Sampler234_g116848 , Coords234_g116848 , WorldPosition234_g116848 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116848) = _TerrainShaderTex13;
				SamplerState Sampler263_g116848 = SS30_g116885;
				half4 Coords263_g116848 = temp_output_37_0_g116848;
				half3 WorldPosition263_g116848 = temp_output_279_0_g116848;
				half3 WorldNormal263_g116848 = temp_output_280_0_g116848;
				half4 localSampleStochastic3D263_g116848 = SampleStochastic3D( Texture263_g116848 , Sampler263_g116848 , Coords263_g116848 , WorldPosition263_g116848 , WorldNormal263_g116848 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch9000_g116779 = localSamplePlanar2D238_g116848;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch9000_g116779 = localSamplePlanar3D246_g116848;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch9000_g116779 = localSampleStochastic2D234_g116848;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch9000_g116779 = localSampleStochastic3D263_g116848;
				#else
				float4 staticSwitch9000_g116779 = localSamplePlanar2D238_g116848;
				#endif
				float4 temp_output_7_0_g116810 = _TerrainShaderMin13;
				float4 temp_output_10_0_g116810 = ( _TerrainShaderMax13 - temp_output_7_0_g116810 );
				float4 temp_output_8931_0_g116779 = saturate( ( ( staticSwitch9000_g116779 - temp_output_7_0_g116810 ) / ( temp_output_10_0_g116810 + 0.0001 ) ) );
				half4 Masks_015_g116811 = temp_output_8931_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116859) = _TerrainShaderTex14;
				SamplerState Sampler238_g116859 = SS30_g116885;
				half4 Input_Terrain_Coords_148961_g116779 = _TerrainCoord14;
				float4 temp_output_37_0_g116859 = Input_Terrain_Coords_148961_g116779;
				half4 Coords238_g116859 = temp_output_37_0_g116859;
				float3 temp_output_279_0_g116859 = Input_Position9197_g116779;
				half3 WorldPosition238_g116859 = temp_output_279_0_g116859;
				half4 localSamplePlanar2D238_g116859 = SamplePlanar2D( Texture238_g116859 , Sampler238_g116859 , Coords238_g116859 , WorldPosition238_g116859 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116859) = _TerrainShaderTex14;
				SamplerState Sampler246_g116859 = SS30_g116885;
				half4 Coords246_g116859 = temp_output_37_0_g116859;
				half3 WorldPosition246_g116859 = temp_output_279_0_g116859;
				float3 temp_output_280_0_g116859 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116859 = temp_output_280_0_g116859;
				half4 localSamplePlanar3D246_g116859 = SamplePlanar3D( Texture246_g116859 , Sampler246_g116859 , Coords246_g116859 , WorldPosition246_g116859 , WorldNormal246_g116859 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116859) = _TerrainShaderTex14;
				SamplerState Sampler234_g116859 = SS30_g116885;
				float4 Coords234_g116859 = temp_output_37_0_g116859;
				float3 WorldPosition234_g116859 = temp_output_279_0_g116859;
				float4 localSampleStochastic2D234_g116859 = SampleStochastic2D( Texture234_g116859 , Sampler234_g116859 , Coords234_g116859 , WorldPosition234_g116859 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116859) = _TerrainShaderTex14;
				SamplerState Sampler263_g116859 = SS30_g116885;
				half4 Coords263_g116859 = temp_output_37_0_g116859;
				half3 WorldPosition263_g116859 = temp_output_279_0_g116859;
				half3 WorldNormal263_g116859 = temp_output_280_0_g116859;
				half4 localSampleStochastic3D263_g116859 = SampleStochastic3D( Texture263_g116859 , Sampler263_g116859 , Coords263_g116859 , WorldPosition263_g116859 , WorldNormal263_g116859 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch9001_g116779 = localSamplePlanar2D238_g116859;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch9001_g116779 = localSamplePlanar3D246_g116859;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch9001_g116779 = localSampleStochastic2D234_g116859;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch9001_g116779 = localSampleStochastic3D263_g116859;
				#else
				float4 staticSwitch9001_g116779 = localSamplePlanar2D238_g116859;
				#endif
				float4 temp_output_7_0_g116818 = _TerrainShaderMin14;
				float4 temp_output_10_0_g116818 = ( _TerrainShaderMax14 - temp_output_7_0_g116818 );
				float4 temp_output_8934_0_g116779 = saturate( ( ( staticSwitch9001_g116779 - temp_output_7_0_g116818 ) / ( temp_output_10_0_g116818 + 0.0001 ) ) );
				half4 Masks_0210_g116811 = temp_output_8934_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116860) = _TerrainShaderTex15;
				SamplerState Sampler238_g116860 = SS30_g116885;
				half4 Input_Terrain_Coords_158962_g116779 = _TerrainCoord15;
				float4 temp_output_37_0_g116860 = Input_Terrain_Coords_158962_g116779;
				half4 Coords238_g116860 = temp_output_37_0_g116860;
				float3 temp_output_279_0_g116860 = Input_Position9197_g116779;
				half3 WorldPosition238_g116860 = temp_output_279_0_g116860;
				half4 localSamplePlanar2D238_g116860 = SamplePlanar2D( Texture238_g116860 , Sampler238_g116860 , Coords238_g116860 , WorldPosition238_g116860 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116860) = _TerrainShaderTex15;
				SamplerState Sampler246_g116860 = SS30_g116885;
				half4 Coords246_g116860 = temp_output_37_0_g116860;
				half3 WorldPosition246_g116860 = temp_output_279_0_g116860;
				float3 temp_output_280_0_g116860 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116860 = temp_output_280_0_g116860;
				half4 localSamplePlanar3D246_g116860 = SamplePlanar3D( Texture246_g116860 , Sampler246_g116860 , Coords246_g116860 , WorldPosition246_g116860 , WorldNormal246_g116860 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116860) = _TerrainShaderTex15;
				SamplerState Sampler234_g116860 = SS30_g116885;
				float4 Coords234_g116860 = temp_output_37_0_g116860;
				float3 WorldPosition234_g116860 = temp_output_279_0_g116860;
				float4 localSampleStochastic2D234_g116860 = SampleStochastic2D( Texture234_g116860 , Sampler234_g116860 , Coords234_g116860 , WorldPosition234_g116860 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116860) = _TerrainShaderTex15;
				SamplerState Sampler263_g116860 = SS30_g116885;
				half4 Coords263_g116860 = temp_output_37_0_g116860;
				half3 WorldPosition263_g116860 = temp_output_279_0_g116860;
				half3 WorldNormal263_g116860 = temp_output_280_0_g116860;
				half4 localSampleStochastic3D263_g116860 = SampleStochastic3D( Texture263_g116860 , Sampler263_g116860 , Coords263_g116860 , WorldPosition263_g116860 , WorldNormal263_g116860 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch9002_g116779 = localSamplePlanar2D238_g116860;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch9002_g116779 = localSamplePlanar3D246_g116860;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch9002_g116779 = localSampleStochastic2D234_g116860;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch9002_g116779 = localSampleStochastic3D263_g116860;
				#else
				float4 staticSwitch9002_g116779 = localSamplePlanar2D238_g116860;
				#endif
				float4 temp_output_7_0_g116819 = _TerrainShaderMin15;
				float4 temp_output_10_0_g116819 = ( _TerrainShaderMax15 - temp_output_7_0_g116819 );
				float4 temp_output_8935_0_g116779 = saturate( ( ( staticSwitch9002_g116779 - temp_output_7_0_g116819 ) / ( temp_output_10_0_g116819 + 0.0001 ) ) );
				half4 Masks_0312_g116811 = temp_output_8935_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116861) = _TerrainShaderTex16;
				SamplerState Sampler238_g116861 = SS30_g116885;
				half4 Input_Terrain_Coords_168959_g116779 = _TerrainCoord16;
				float4 temp_output_37_0_g116861 = Input_Terrain_Coords_168959_g116779;
				half4 Coords238_g116861 = temp_output_37_0_g116861;
				float3 temp_output_279_0_g116861 = Input_Position9197_g116779;
				half3 WorldPosition238_g116861 = temp_output_279_0_g116861;
				half4 localSamplePlanar2D238_g116861 = SamplePlanar2D( Texture238_g116861 , Sampler238_g116861 , Coords238_g116861 , WorldPosition238_g116861 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116861) = _TerrainShaderTex16;
				SamplerState Sampler246_g116861 = SS30_g116885;
				half4 Coords246_g116861 = temp_output_37_0_g116861;
				half3 WorldPosition246_g116861 = temp_output_279_0_g116861;
				float3 temp_output_280_0_g116861 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116861 = temp_output_280_0_g116861;
				half4 localSamplePlanar3D246_g116861 = SamplePlanar3D( Texture246_g116861 , Sampler246_g116861 , Coords246_g116861 , WorldPosition246_g116861 , WorldNormal246_g116861 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116861) = _TerrainShaderTex16;
				SamplerState Sampler234_g116861 = SS30_g116885;
				float4 Coords234_g116861 = temp_output_37_0_g116861;
				float3 WorldPosition234_g116861 = temp_output_279_0_g116861;
				float4 localSampleStochastic2D234_g116861 = SampleStochastic2D( Texture234_g116861 , Sampler234_g116861 , Coords234_g116861 , WorldPosition234_g116861 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116861) = _TerrainShaderTex16;
				SamplerState Sampler263_g116861 = SS30_g116885;
				half4 Coords263_g116861 = temp_output_37_0_g116861;
				half3 WorldPosition263_g116861 = temp_output_279_0_g116861;
				half3 WorldNormal263_g116861 = temp_output_280_0_g116861;
				half4 localSampleStochastic3D263_g116861 = SampleStochastic3D( Texture263_g116861 , Sampler263_g116861 , Coords263_g116861 , WorldPosition263_g116861 , WorldNormal263_g116861 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch9003_g116779 = localSamplePlanar2D238_g116861;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch9003_g116779 = localSamplePlanar3D246_g116861;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch9003_g116779 = localSampleStochastic2D234_g116861;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch9003_g116779 = localSampleStochastic3D263_g116861;
				#else
				float4 staticSwitch9003_g116779 = localSamplePlanar2D238_g116861;
				#endif
				float4 temp_output_7_0_g116820 = _TerrainShaderMin16;
				float4 temp_output_10_0_g116820 = ( _TerrainShaderMax16 - temp_output_7_0_g116820 );
				float4 temp_output_8936_0_g116779 = saturate( ( ( staticSwitch9003_g116779 - temp_output_7_0_g116820 ) / ( temp_output_10_0_g116820 + 0.0001 ) ) );
				half4 Masks_0414_g116811 = temp_output_8936_0_g116779;
				float4 appendResult29_g116811 = (float4((Masks_015_g116811).z , (Masks_0210_g116811).z , (Masks_0312_g116811).z , (Masks_0414_g116811).z));
				half4 Control31_g116811 = Terrain_Control_167711_g116779;
				half4 Terrain_Height_169015_g116779 = ( appendResult29_g116811 * Control31_g116811 );
				float4 heights_167362_g116779 = Terrain_Height_169015_g116779;
				float heightTransition7362_g116779 = ( 1.0 - _TerrainHeightBlendValue );
				float4 weights_047362_g116779 = float4( 0,0,0,0 );
				float4 weights_087362_g116779 = float4( 0,0,0,0 );
				float4 weights_127362_g116779 = float4( 0,0,0,0 );
				float4 weights_167362_g116779 = float4( 0,0,0,0 );
				//Modified version of the HDRP terrain height based blending
				float maxHeight = 0;
				float4 weightedHeights_04 = float4( 0,0,0,0 );
				float4 weightedHeights_08 = float4( 0,0,0,0 );
				float4 weightedHeights_12 = float4( 0,0,0,0 );
				float4 weightedHeights_16 = float4( 0,0,0,0 );
				maxHeight = heights_047362_g116779.x;
				maxHeight = max(maxHeight, heights_047362_g116779.y);
				maxHeight = max(maxHeight, heights_047362_g116779.z);
				maxHeight = max(maxHeight, heights_047362_g116779.w);
				#ifdef TVE_TERRAIN_08
				maxHeight = max(maxHeight, heights_087362_g116779.x);
				maxHeight = max(maxHeight, heights_087362_g116779.y);
				maxHeight = max(maxHeight, heights_087362_g116779.z);
				maxHeight = max(maxHeight, heights_087362_g116779.w);
				#endif
				#ifdef TVE_TERRAIN_12
				maxHeight = max(maxHeight, heights_087362_g116779.x);
				maxHeight = max(maxHeight, heights_087362_g116779.y);
				maxHeight = max(maxHeight, heights_087362_g116779.z);
				maxHeight = max(maxHeight, heights_087362_g116779.w);
				maxHeight = max(maxHeight, heights_127362_g116779.x);
				maxHeight = max(maxHeight, heights_127362_g116779.y);
				maxHeight = max(maxHeight, heights_127362_g116779.z);
				maxHeight = max(maxHeight, heights_127362_g116779.w);
				#endif
				#ifdef TVE_TERRAIN_16
				maxHeight = max(maxHeight, heights_087362_g116779.x);
				maxHeight = max(maxHeight, heights_087362_g116779.y);
				maxHeight = max(maxHeight, heights_087362_g116779.z);
				maxHeight = max(maxHeight, heights_087362_g116779.w);
				maxHeight = max(maxHeight, heights_127362_g116779.x);
				maxHeight = max(maxHeight, heights_127362_g116779.y);
				maxHeight = max(maxHeight, heights_127362_g116779.z);
				maxHeight = max(maxHeight, heights_127362_g116779.w);
				maxHeight = max(maxHeight, heights_167362_g116779.x);
				maxHeight = max(maxHeight, heights_167362_g116779.y);
				maxHeight = max(maxHeight, heights_167362_g116779.z);
				maxHeight = max(maxHeight, heights_167362_g116779.w);
				#endif
				float transition = max(heightTransition7362_g116779, 0.01);
				weightedHeights_04 = float4 ( heights_047362_g116779.x, heights_047362_g116779.y, heights_047362_g116779.z, heights_047362_g116779.w );
				weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
				weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g116779;
				#ifdef TVE_TERRAIN_08
				weightedHeights_08 = float4 ( heights_087362_g116779.x, heights_087362_g116779.y, heights_087362_g116779.z, heights_087362_g116779.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g116779;
				#endif
				#ifdef TVE_TERRAIN_12
				weightedHeights_08 = float4 ( heights_087362_g116779.x, heights_087362_g116779.y, heights_087362_g116779.z, heights_087362_g116779.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g116779;
				weightedHeights_12 = float4 ( heights_127362_g116779.x, heights_127362_g116779.y, heights_127362_g116779.z, heights_127362_g116779.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g116779;
				#endif
				#ifdef TVE_TERRAIN_16
				weightedHeights_08 = float4 ( heights_087362_g116779.x, heights_087362_g116779.y, heights_087362_g116779.z, heights_087362_g116779.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g116779;
				weightedHeights_12 = float4 ( heights_127362_g116779.x, heights_127362_g116779.y, heights_127362_g116779.z, heights_127362_g116779.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g116779;
				weightedHeights_16 = float4 ( heights_167362_g116779.x, heights_167362_g116779.y, heights_167362_g116779.z, heights_167362_g116779.w );
				weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
				weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g116779;
				#endif
				float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
				float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
				float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
				float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
				float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
				weights_047362_g116779 = weightedHeights_04 / sumHeight.xxxx;
				#ifdef TVE_TERRAIN_08
				weights_087362_g116779 = weightedHeights_08 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_12
				weights_087362_g116779 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g116779 = weightedHeights_12 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_16
				weights_087362_g116779 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g116779 = weightedHeights_12 / sumHeight.xxxx;
				weights_167362_g116779 = weightedHeights_16 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8792_g116779 = weights_047362_g116779;
				#else
				float4 staticSwitch8792_g116779 = control_047362_g116779;
				#endif
				half4 Terrain_Weights_046781_g116779 = staticSwitch8792_g116779;
				half4 Weights52_g116784 = Terrain_Weights_046781_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116825) = _TerrainAlbedoTex1;
				float localFilterTexture19_g116882 = ( 0.0 );
				SamplerState SamplerDefault19_g116882 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g116882 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g116882 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g116882 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g116882 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g116882 = SamplerDefault19_g116882;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g116882 = SamplerDefault19_g116882;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g116882 = SamplerPoint19_g116882;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g116882 = SamplerLow19_g116882;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g116882 = SamplerMedium19_g116882;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g116882 = SamplerHigh19_g116882;
				#endif
				SamplerState Sampler238_g116825 = SS19_g116882;
				float4 temp_output_37_0_g116825 = Input_Terrain_Coords_016785_g116779;
				half4 Coords238_g116825 = temp_output_37_0_g116825;
				float3 temp_output_279_0_g116825 = Input_Position9197_g116779;
				half3 WorldPosition238_g116825 = temp_output_279_0_g116825;
				half4 localSamplePlanar2D238_g116825 = SamplePlanar2D( Texture238_g116825 , Sampler238_g116825 , Coords238_g116825 , WorldPosition238_g116825 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116825) = _TerrainAlbedoTex1;
				SamplerState Sampler246_g116825 = SS19_g116882;
				half4 Coords246_g116825 = temp_output_37_0_g116825;
				half3 WorldPosition246_g116825 = temp_output_279_0_g116825;
				float3 temp_output_280_0_g116825 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116825 = temp_output_280_0_g116825;
				half4 localSamplePlanar3D246_g116825 = SamplePlanar3D( Texture246_g116825 , Sampler246_g116825 , Coords246_g116825 , WorldPosition246_g116825 , WorldNormal246_g116825 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116825) = _TerrainAlbedoTex1;
				SamplerState Sampler234_g116825 = SS19_g116882;
				float4 Coords234_g116825 = temp_output_37_0_g116825;
				float3 WorldPosition234_g116825 = temp_output_279_0_g116825;
				float4 localSampleStochastic2D234_g116825 = SampleStochastic2D( Texture234_g116825 , Sampler234_g116825 , Coords234_g116825 , WorldPosition234_g116825 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116825) = _TerrainAlbedoTex1;
				SamplerState Sampler263_g116825 = SS19_g116882;
				half4 Coords263_g116825 = temp_output_37_0_g116825;
				half3 WorldPosition263_g116825 = temp_output_279_0_g116825;
				half3 WorldNormal263_g116825 = temp_output_280_0_g116825;
				half4 localSampleStochastic3D263_g116825 = SampleStochastic3D( Texture263_g116825 , Sampler263_g116825 , Coords263_g116825 , WorldPosition263_g116825 , WorldNormal263_g116825 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8614_g116779 = localSamplePlanar2D238_g116825;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8614_g116779 = localSamplePlanar3D246_g116825;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8614_g116779 = localSampleStochastic2D234_g116825;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8614_g116779 = localSampleStochastic3D263_g116825;
				#else
				float4 staticSwitch8614_g116779 = localSamplePlanar2D238_g116825;
				#endif
				half4 Layer133_g116784 = staticSwitch8614_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler238_g116826 = SS19_g116882;
				float4 temp_output_37_0_g116826 = Input_Terrain_Coords_026787_g116779;
				half4 Coords238_g116826 = temp_output_37_0_g116826;
				float3 temp_output_279_0_g116826 = Input_Position9197_g116779;
				half3 WorldPosition238_g116826 = temp_output_279_0_g116826;
				half4 localSamplePlanar2D238_g116826 = SamplePlanar2D( Texture238_g116826 , Sampler238_g116826 , Coords238_g116826 , WorldPosition238_g116826 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler246_g116826 = SS19_g116882;
				half4 Coords246_g116826 = temp_output_37_0_g116826;
				half3 WorldPosition246_g116826 = temp_output_279_0_g116826;
				float3 temp_output_280_0_g116826 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116826 = temp_output_280_0_g116826;
				half4 localSamplePlanar3D246_g116826 = SamplePlanar3D( Texture246_g116826 , Sampler246_g116826 , Coords246_g116826 , WorldPosition246_g116826 , WorldNormal246_g116826 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler234_g116826 = SS19_g116882;
				float4 Coords234_g116826 = temp_output_37_0_g116826;
				float3 WorldPosition234_g116826 = temp_output_279_0_g116826;
				float4 localSampleStochastic2D234_g116826 = SampleStochastic2D( Texture234_g116826 , Sampler234_g116826 , Coords234_g116826 , WorldPosition234_g116826 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler263_g116826 = SS19_g116882;
				half4 Coords263_g116826 = temp_output_37_0_g116826;
				half3 WorldPosition263_g116826 = temp_output_279_0_g116826;
				half3 WorldNormal263_g116826 = temp_output_280_0_g116826;
				half4 localSampleStochastic3D263_g116826 = SampleStochastic3D( Texture263_g116826 , Sampler263_g116826 , Coords263_g116826 , WorldPosition263_g116826 , WorldNormal263_g116826 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8629_g116779 = localSamplePlanar2D238_g116826;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8629_g116779 = localSamplePlanar3D246_g116826;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8629_g116779 = localSampleStochastic2D234_g116826;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8629_g116779 = localSampleStochastic3D263_g116826;
				#else
				float4 staticSwitch8629_g116779 = localSamplePlanar2D238_g116826;
				#endif
				half4 Layer237_g116784 = staticSwitch8629_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler238_g116829 = SS19_g116882;
				float4 temp_output_37_0_g116829 = Input_Terrain_Coords_036789_g116779;
				half4 Coords238_g116829 = temp_output_37_0_g116829;
				float3 temp_output_279_0_g116829 = Input_Position9197_g116779;
				half3 WorldPosition238_g116829 = temp_output_279_0_g116829;
				half4 localSamplePlanar2D238_g116829 = SamplePlanar2D( Texture238_g116829 , Sampler238_g116829 , Coords238_g116829 , WorldPosition238_g116829 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler246_g116829 = SS19_g116882;
				half4 Coords246_g116829 = temp_output_37_0_g116829;
				half3 WorldPosition246_g116829 = temp_output_279_0_g116829;
				float3 temp_output_280_0_g116829 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116829 = temp_output_280_0_g116829;
				half4 localSamplePlanar3D246_g116829 = SamplePlanar3D( Texture246_g116829 , Sampler246_g116829 , Coords246_g116829 , WorldPosition246_g116829 , WorldNormal246_g116829 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler234_g116829 = SS19_g116882;
				float4 Coords234_g116829 = temp_output_37_0_g116829;
				float3 WorldPosition234_g116829 = temp_output_279_0_g116829;
				float4 localSampleStochastic2D234_g116829 = SampleStochastic2D( Texture234_g116829 , Sampler234_g116829 , Coords234_g116829 , WorldPosition234_g116829 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler263_g116829 = SS19_g116882;
				half4 Coords263_g116829 = temp_output_37_0_g116829;
				half3 WorldPosition263_g116829 = temp_output_279_0_g116829;
				half3 WorldNormal263_g116829 = temp_output_280_0_g116829;
				half4 localSampleStochastic3D263_g116829 = SampleStochastic3D( Texture263_g116829 , Sampler263_g116829 , Coords263_g116829 , WorldPosition263_g116829 , WorldNormal263_g116829 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8630_g116779 = localSamplePlanar2D238_g116829;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8630_g116779 = localSamplePlanar3D246_g116829;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8630_g116779 = localSampleStochastic2D234_g116829;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8630_g116779 = localSampleStochastic3D263_g116829;
				#else
				float4 staticSwitch8630_g116779 = localSamplePlanar2D238_g116829;
				#endif
				half4 Layer338_g116784 = staticSwitch8630_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler238_g116831 = SS19_g116882;
				float4 temp_output_37_0_g116831 = Input_Terrain_Coords_046791_g116779;
				half4 Coords238_g116831 = temp_output_37_0_g116831;
				float3 temp_output_279_0_g116831 = Input_Position9197_g116779;
				half3 WorldPosition238_g116831 = temp_output_279_0_g116831;
				half4 localSamplePlanar2D238_g116831 = SamplePlanar2D( Texture238_g116831 , Sampler238_g116831 , Coords238_g116831 , WorldPosition238_g116831 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler246_g116831 = SS19_g116882;
				half4 Coords246_g116831 = temp_output_37_0_g116831;
				half3 WorldPosition246_g116831 = temp_output_279_0_g116831;
				float3 temp_output_280_0_g116831 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116831 = temp_output_280_0_g116831;
				half4 localSamplePlanar3D246_g116831 = SamplePlanar3D( Texture246_g116831 , Sampler246_g116831 , Coords246_g116831 , WorldPosition246_g116831 , WorldNormal246_g116831 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler234_g116831 = SS19_g116882;
				float4 Coords234_g116831 = temp_output_37_0_g116831;
				float3 WorldPosition234_g116831 = temp_output_279_0_g116831;
				float4 localSampleStochastic2D234_g116831 = SampleStochastic2D( Texture234_g116831 , Sampler234_g116831 , Coords234_g116831 , WorldPosition234_g116831 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler263_g116831 = SS19_g116882;
				half4 Coords263_g116831 = temp_output_37_0_g116831;
				half3 WorldPosition263_g116831 = temp_output_279_0_g116831;
				half3 WorldNormal263_g116831 = temp_output_280_0_g116831;
				half4 localSampleStochastic3D263_g116831 = SampleStochastic3D( Texture263_g116831 , Sampler263_g116831 , Coords263_g116831 , WorldPosition263_g116831 , WorldNormal263_g116831 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8631_g116779 = localSamplePlanar2D238_g116831;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8631_g116779 = localSamplePlanar3D246_g116831;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8631_g116779 = localSampleStochastic2D234_g116831;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8631_g116779 = localSampleStochastic3D263_g116831;
				#else
				float4 staticSwitch8631_g116779 = localSamplePlanar2D238_g116831;
				#endif
				half4 Layer439_g116784 = staticSwitch8631_g116779;
				float4 weightedBlendVar31_g116784 = Weights52_g116784;
				float4 weightedBlend31_g116784 = ( weightedBlendVar31_g116784.x*Layer133_g116784 + weightedBlendVar31_g116784.y*Layer237_g116784 + weightedBlendVar31_g116784.z*Layer338_g116784 + weightedBlendVar31_g116784.w*Layer439_g116784 );
				half4 Terrain_AAAA_047200_g116779 = weightedBlend31_g116784;
				half4 Layer_045_g116787 = Terrain_AAAA_047200_g116779;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8793_g116779 = weights_087362_g116779;
				#else
				float4 staticSwitch8793_g116779 = control_087362_g116779;
				#endif
				half4 Terrain_Weights_087340_g116779 = staticSwitch8793_g116779;
				half4 Weights52_g116794 = Terrain_Weights_087340_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler238_g116835 = SS19_g116882;
				float4 temp_output_37_0_g116835 = Input_Terrain_Coords_058750_g116779;
				half4 Coords238_g116835 = temp_output_37_0_g116835;
				float3 temp_output_279_0_g116835 = Input_Position9197_g116779;
				half3 WorldPosition238_g116835 = temp_output_279_0_g116835;
				half4 localSamplePlanar2D238_g116835 = SamplePlanar2D( Texture238_g116835 , Sampler238_g116835 , Coords238_g116835 , WorldPosition238_g116835 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler246_g116835 = SS19_g116882;
				half4 Coords246_g116835 = temp_output_37_0_g116835;
				half3 WorldPosition246_g116835 = temp_output_279_0_g116835;
				float3 temp_output_280_0_g116835 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116835 = temp_output_280_0_g116835;
				half4 localSamplePlanar3D246_g116835 = SamplePlanar3D( Texture246_g116835 , Sampler246_g116835 , Coords246_g116835 , WorldPosition246_g116835 , WorldNormal246_g116835 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler234_g116835 = SS19_g116882;
				float4 Coords234_g116835 = temp_output_37_0_g116835;
				float3 WorldPosition234_g116835 = temp_output_279_0_g116835;
				float4 localSampleStochastic2D234_g116835 = SampleStochastic2D( Texture234_g116835 , Sampler234_g116835 , Coords234_g116835 , WorldPosition234_g116835 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler263_g116835 = SS19_g116882;
				half4 Coords263_g116835 = temp_output_37_0_g116835;
				half3 WorldPosition263_g116835 = temp_output_279_0_g116835;
				half3 WorldNormal263_g116835 = temp_output_280_0_g116835;
				half4 localSampleStochastic3D263_g116835 = SampleStochastic3D( Texture263_g116835 , Sampler263_g116835 , Coords263_g116835 , WorldPosition263_g116835 , WorldNormal263_g116835 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8690_g116779 = localSamplePlanar2D238_g116835;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8690_g116779 = localSamplePlanar3D246_g116835;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8690_g116779 = localSampleStochastic2D234_g116835;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8690_g116779 = localSampleStochastic3D263_g116835;
				#else
				float4 staticSwitch8690_g116779 = localSamplePlanar2D238_g116835;
				#endif
				half4 Layer133_g116794 = staticSwitch8690_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler238_g116862 = SS19_g116882;
				float4 temp_output_37_0_g116862 = Input_Terrain_Coords_068751_g116779;
				half4 Coords238_g116862 = temp_output_37_0_g116862;
				float3 temp_output_279_0_g116862 = Input_Position9197_g116779;
				half3 WorldPosition238_g116862 = temp_output_279_0_g116862;
				half4 localSamplePlanar2D238_g116862 = SamplePlanar2D( Texture238_g116862 , Sampler238_g116862 , Coords238_g116862 , WorldPosition238_g116862 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler246_g116862 = SS19_g116882;
				half4 Coords246_g116862 = temp_output_37_0_g116862;
				half3 WorldPosition246_g116862 = temp_output_279_0_g116862;
				float3 temp_output_280_0_g116862 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116862 = temp_output_280_0_g116862;
				half4 localSamplePlanar3D246_g116862 = SamplePlanar3D( Texture246_g116862 , Sampler246_g116862 , Coords246_g116862 , WorldPosition246_g116862 , WorldNormal246_g116862 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler234_g116862 = SS19_g116882;
				float4 Coords234_g116862 = temp_output_37_0_g116862;
				float3 WorldPosition234_g116862 = temp_output_279_0_g116862;
				float4 localSampleStochastic2D234_g116862 = SampleStochastic2D( Texture234_g116862 , Sampler234_g116862 , Coords234_g116862 , WorldPosition234_g116862 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler263_g116862 = SS19_g116882;
				half4 Coords263_g116862 = temp_output_37_0_g116862;
				half3 WorldPosition263_g116862 = temp_output_279_0_g116862;
				half3 WorldNormal263_g116862 = temp_output_280_0_g116862;
				half4 localSampleStochastic3D263_g116862 = SampleStochastic3D( Texture263_g116862 , Sampler263_g116862 , Coords263_g116862 , WorldPosition263_g116862 , WorldNormal263_g116862 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8691_g116779 = localSamplePlanar2D238_g116862;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8691_g116779 = localSamplePlanar3D246_g116862;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8691_g116779 = localSampleStochastic2D234_g116862;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8691_g116779 = localSampleStochastic3D263_g116862;
				#else
				float4 staticSwitch8691_g116779 = localSamplePlanar2D238_g116862;
				#endif
				half4 Layer237_g116794 = staticSwitch8691_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler238_g116863 = SS19_g116882;
				float4 temp_output_37_0_g116863 = Input_Terrain_Coords_078752_g116779;
				half4 Coords238_g116863 = temp_output_37_0_g116863;
				float3 temp_output_279_0_g116863 = Input_Position9197_g116779;
				half3 WorldPosition238_g116863 = temp_output_279_0_g116863;
				half4 localSamplePlanar2D238_g116863 = SamplePlanar2D( Texture238_g116863 , Sampler238_g116863 , Coords238_g116863 , WorldPosition238_g116863 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler246_g116863 = SS19_g116882;
				half4 Coords246_g116863 = temp_output_37_0_g116863;
				half3 WorldPosition246_g116863 = temp_output_279_0_g116863;
				float3 temp_output_280_0_g116863 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116863 = temp_output_280_0_g116863;
				half4 localSamplePlanar3D246_g116863 = SamplePlanar3D( Texture246_g116863 , Sampler246_g116863 , Coords246_g116863 , WorldPosition246_g116863 , WorldNormal246_g116863 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler234_g116863 = SS19_g116882;
				float4 Coords234_g116863 = temp_output_37_0_g116863;
				float3 WorldPosition234_g116863 = temp_output_279_0_g116863;
				float4 localSampleStochastic2D234_g116863 = SampleStochastic2D( Texture234_g116863 , Sampler234_g116863 , Coords234_g116863 , WorldPosition234_g116863 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler263_g116863 = SS19_g116882;
				half4 Coords263_g116863 = temp_output_37_0_g116863;
				half3 WorldPosition263_g116863 = temp_output_279_0_g116863;
				half3 WorldNormal263_g116863 = temp_output_280_0_g116863;
				half4 localSampleStochastic3D263_g116863 = SampleStochastic3D( Texture263_g116863 , Sampler263_g116863 , Coords263_g116863 , WorldPosition263_g116863 , WorldNormal263_g116863 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8692_g116779 = localSamplePlanar2D238_g116863;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8692_g116779 = localSamplePlanar3D246_g116863;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8692_g116779 = localSampleStochastic2D234_g116863;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8692_g116779 = localSampleStochastic3D263_g116863;
				#else
				float4 staticSwitch8692_g116779 = localSamplePlanar2D238_g116863;
				#endif
				half4 Layer338_g116794 = staticSwitch8692_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler238_g116864 = SS19_g116882;
				float4 temp_output_37_0_g116864 = Input_Terrain_Coords_088749_g116779;
				half4 Coords238_g116864 = temp_output_37_0_g116864;
				float3 temp_output_279_0_g116864 = Input_Position9197_g116779;
				half3 WorldPosition238_g116864 = temp_output_279_0_g116864;
				half4 localSamplePlanar2D238_g116864 = SamplePlanar2D( Texture238_g116864 , Sampler238_g116864 , Coords238_g116864 , WorldPosition238_g116864 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler246_g116864 = SS19_g116882;
				half4 Coords246_g116864 = temp_output_37_0_g116864;
				half3 WorldPosition246_g116864 = temp_output_279_0_g116864;
				float3 temp_output_280_0_g116864 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116864 = temp_output_280_0_g116864;
				half4 localSamplePlanar3D246_g116864 = SamplePlanar3D( Texture246_g116864 , Sampler246_g116864 , Coords246_g116864 , WorldPosition246_g116864 , WorldNormal246_g116864 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler234_g116864 = SS19_g116882;
				float4 Coords234_g116864 = temp_output_37_0_g116864;
				float3 WorldPosition234_g116864 = temp_output_279_0_g116864;
				float4 localSampleStochastic2D234_g116864 = SampleStochastic2D( Texture234_g116864 , Sampler234_g116864 , Coords234_g116864 , WorldPosition234_g116864 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler263_g116864 = SS19_g116882;
				half4 Coords263_g116864 = temp_output_37_0_g116864;
				half3 WorldPosition263_g116864 = temp_output_279_0_g116864;
				half3 WorldNormal263_g116864 = temp_output_280_0_g116864;
				half4 localSampleStochastic3D263_g116864 = SampleStochastic3D( Texture263_g116864 , Sampler263_g116864 , Coords263_g116864 , WorldPosition263_g116864 , WorldNormal263_g116864 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8693_g116779 = localSamplePlanar2D238_g116864;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8693_g116779 = localSamplePlanar3D246_g116864;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8693_g116779 = localSampleStochastic2D234_g116864;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8693_g116779 = localSampleStochastic3D263_g116864;
				#else
				float4 staticSwitch8693_g116779 = localSamplePlanar2D238_g116864;
				#endif
				half4 Layer439_g116794 = staticSwitch8693_g116779;
				float4 weightedBlendVar31_g116794 = Weights52_g116794;
				float4 weightedBlend31_g116794 = ( weightedBlendVar31_g116794.x*Layer133_g116794 + weightedBlendVar31_g116794.y*Layer237_g116794 + weightedBlendVar31_g116794.z*Layer338_g116794 + weightedBlendVar31_g116794.w*Layer439_g116794 );
				half4 Terrain_AAAA_088665_g116779 = weightedBlend31_g116794;
				half4 Layer_0810_g116787 = Terrain_AAAA_088665_g116779;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8794_g116779 = weights_127362_g116779;
				#else
				float4 staticSwitch8794_g116779 = control_127362_g116779;
				#endif
				half4 Terrain_Weights_127710_g116779 = staticSwitch8794_g116779;
				half4 Weights52_g116801 = Terrain_Weights_127710_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler238_g116838 = SS19_g116882;
				float4 temp_output_37_0_g116838 = Input_Terrain_Coords_098833_g116779;
				half4 Coords238_g116838 = temp_output_37_0_g116838;
				float3 temp_output_279_0_g116838 = Input_Position9197_g116779;
				half3 WorldPosition238_g116838 = temp_output_279_0_g116838;
				half4 localSamplePlanar2D238_g116838 = SamplePlanar2D( Texture238_g116838 , Sampler238_g116838 , Coords238_g116838 , WorldPosition238_g116838 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler246_g116838 = SS19_g116882;
				half4 Coords246_g116838 = temp_output_37_0_g116838;
				half3 WorldPosition246_g116838 = temp_output_279_0_g116838;
				float3 temp_output_280_0_g116838 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116838 = temp_output_280_0_g116838;
				half4 localSamplePlanar3D246_g116838 = SamplePlanar3D( Texture246_g116838 , Sampler246_g116838 , Coords246_g116838 , WorldPosition246_g116838 , WorldNormal246_g116838 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler234_g116838 = SS19_g116882;
				float4 Coords234_g116838 = temp_output_37_0_g116838;
				float3 WorldPosition234_g116838 = temp_output_279_0_g116838;
				float4 localSampleStochastic2D234_g116838 = SampleStochastic2D( Texture234_g116838 , Sampler234_g116838 , Coords234_g116838 , WorldPosition234_g116838 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler263_g116838 = SS19_g116882;
				half4 Coords263_g116838 = temp_output_37_0_g116838;
				half3 WorldPosition263_g116838 = temp_output_279_0_g116838;
				half3 WorldNormal263_g116838 = temp_output_280_0_g116838;
				half4 localSampleStochastic3D263_g116838 = SampleStochastic3D( Texture263_g116838 , Sampler263_g116838 , Coords263_g116838 , WorldPosition263_g116838 , WorldNormal263_g116838 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8872_g116779 = localSamplePlanar2D238_g116838;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8872_g116779 = localSamplePlanar3D246_g116838;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8872_g116779 = localSampleStochastic2D234_g116838;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8872_g116779 = localSampleStochastic3D263_g116838;
				#else
				float4 staticSwitch8872_g116779 = localSamplePlanar2D238_g116838;
				#endif
				half4 Layer133_g116801 = staticSwitch8872_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler238_g116841 = SS19_g116882;
				float4 temp_output_37_0_g116841 = Input_Terrain_Coords_108834_g116779;
				half4 Coords238_g116841 = temp_output_37_0_g116841;
				float3 temp_output_279_0_g116841 = Input_Position9197_g116779;
				half3 WorldPosition238_g116841 = temp_output_279_0_g116841;
				half4 localSamplePlanar2D238_g116841 = SamplePlanar2D( Texture238_g116841 , Sampler238_g116841 , Coords238_g116841 , WorldPosition238_g116841 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler246_g116841 = SS19_g116882;
				half4 Coords246_g116841 = temp_output_37_0_g116841;
				half3 WorldPosition246_g116841 = temp_output_279_0_g116841;
				float3 temp_output_280_0_g116841 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116841 = temp_output_280_0_g116841;
				half4 localSamplePlanar3D246_g116841 = SamplePlanar3D( Texture246_g116841 , Sampler246_g116841 , Coords246_g116841 , WorldPosition246_g116841 , WorldNormal246_g116841 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler234_g116841 = SS19_g116882;
				float4 Coords234_g116841 = temp_output_37_0_g116841;
				float3 WorldPosition234_g116841 = temp_output_279_0_g116841;
				float4 localSampleStochastic2D234_g116841 = SampleStochastic2D( Texture234_g116841 , Sampler234_g116841 , Coords234_g116841 , WorldPosition234_g116841 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler263_g116841 = SS19_g116882;
				half4 Coords263_g116841 = temp_output_37_0_g116841;
				half3 WorldPosition263_g116841 = temp_output_279_0_g116841;
				half3 WorldNormal263_g116841 = temp_output_280_0_g116841;
				half4 localSampleStochastic3D263_g116841 = SampleStochastic3D( Texture263_g116841 , Sampler263_g116841 , Coords263_g116841 , WorldPosition263_g116841 , WorldNormal263_g116841 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8873_g116779 = localSamplePlanar2D238_g116841;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8873_g116779 = localSamplePlanar3D246_g116841;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8873_g116779 = localSampleStochastic2D234_g116841;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8873_g116779 = localSampleStochastic3D263_g116841;
				#else
				float4 staticSwitch8873_g116779 = localSamplePlanar2D238_g116841;
				#endif
				half4 Layer237_g116801 = staticSwitch8873_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler238_g116842 = SS19_g116882;
				float4 temp_output_37_0_g116842 = Input_Terrain_Coords_118835_g116779;
				half4 Coords238_g116842 = temp_output_37_0_g116842;
				float3 temp_output_279_0_g116842 = Input_Position9197_g116779;
				half3 WorldPosition238_g116842 = temp_output_279_0_g116842;
				half4 localSamplePlanar2D238_g116842 = SamplePlanar2D( Texture238_g116842 , Sampler238_g116842 , Coords238_g116842 , WorldPosition238_g116842 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler246_g116842 = SS19_g116882;
				half4 Coords246_g116842 = temp_output_37_0_g116842;
				half3 WorldPosition246_g116842 = temp_output_279_0_g116842;
				float3 temp_output_280_0_g116842 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116842 = temp_output_280_0_g116842;
				half4 localSamplePlanar3D246_g116842 = SamplePlanar3D( Texture246_g116842 , Sampler246_g116842 , Coords246_g116842 , WorldPosition246_g116842 , WorldNormal246_g116842 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler234_g116842 = SS19_g116882;
				float4 Coords234_g116842 = temp_output_37_0_g116842;
				float3 WorldPosition234_g116842 = temp_output_279_0_g116842;
				float4 localSampleStochastic2D234_g116842 = SampleStochastic2D( Texture234_g116842 , Sampler234_g116842 , Coords234_g116842 , WorldPosition234_g116842 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler263_g116842 = SS19_g116882;
				half4 Coords263_g116842 = temp_output_37_0_g116842;
				half3 WorldPosition263_g116842 = temp_output_279_0_g116842;
				half3 WorldNormal263_g116842 = temp_output_280_0_g116842;
				half4 localSampleStochastic3D263_g116842 = SampleStochastic3D( Texture263_g116842 , Sampler263_g116842 , Coords263_g116842 , WorldPosition263_g116842 , WorldNormal263_g116842 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8874_g116779 = localSamplePlanar2D238_g116842;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8874_g116779 = localSamplePlanar3D246_g116842;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8874_g116779 = localSampleStochastic2D234_g116842;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8874_g116779 = localSampleStochastic3D263_g116842;
				#else
				float4 staticSwitch8874_g116779 = localSamplePlanar2D238_g116842;
				#endif
				half4 Layer338_g116801 = staticSwitch8874_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler238_g116843 = SS19_g116882;
				float4 temp_output_37_0_g116843 = Input_Terrain_Coords_128836_g116779;
				half4 Coords238_g116843 = temp_output_37_0_g116843;
				float3 temp_output_279_0_g116843 = Input_Position9197_g116779;
				half3 WorldPosition238_g116843 = temp_output_279_0_g116843;
				half4 localSamplePlanar2D238_g116843 = SamplePlanar2D( Texture238_g116843 , Sampler238_g116843 , Coords238_g116843 , WorldPosition238_g116843 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler246_g116843 = SS19_g116882;
				half4 Coords246_g116843 = temp_output_37_0_g116843;
				half3 WorldPosition246_g116843 = temp_output_279_0_g116843;
				float3 temp_output_280_0_g116843 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116843 = temp_output_280_0_g116843;
				half4 localSamplePlanar3D246_g116843 = SamplePlanar3D( Texture246_g116843 , Sampler246_g116843 , Coords246_g116843 , WorldPosition246_g116843 , WorldNormal246_g116843 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler234_g116843 = SS19_g116882;
				float4 Coords234_g116843 = temp_output_37_0_g116843;
				float3 WorldPosition234_g116843 = temp_output_279_0_g116843;
				float4 localSampleStochastic2D234_g116843 = SampleStochastic2D( Texture234_g116843 , Sampler234_g116843 , Coords234_g116843 , WorldPosition234_g116843 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler263_g116843 = SS19_g116882;
				half4 Coords263_g116843 = temp_output_37_0_g116843;
				half3 WorldPosition263_g116843 = temp_output_279_0_g116843;
				half3 WorldNormal263_g116843 = temp_output_280_0_g116843;
				half4 localSampleStochastic3D263_g116843 = SampleStochastic3D( Texture263_g116843 , Sampler263_g116843 , Coords263_g116843 , WorldPosition263_g116843 , WorldNormal263_g116843 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8875_g116779 = localSamplePlanar2D238_g116843;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8875_g116779 = localSamplePlanar3D246_g116843;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8875_g116779 = localSampleStochastic2D234_g116843;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8875_g116779 = localSampleStochastic3D263_g116843;
				#else
				float4 staticSwitch8875_g116779 = localSamplePlanar2D238_g116843;
				#endif
				half4 Layer439_g116801 = staticSwitch8875_g116779;
				float4 weightedBlendVar31_g116801 = Weights52_g116801;
				float4 weightedBlend31_g116801 = ( weightedBlendVar31_g116801.x*Layer133_g116801 + weightedBlendVar31_g116801.y*Layer237_g116801 + weightedBlendVar31_g116801.z*Layer338_g116801 + weightedBlendVar31_g116801.w*Layer439_g116801 );
				half4 Terrain_AAAA_128851_g116779 = weightedBlend31_g116801;
				half4 Layer_1243_g116787 = Terrain_AAAA_128851_g116779;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8795_g116779 = weights_167362_g116779;
				#else
				float4 staticSwitch8795_g116779 = control_167362_g116779;
				#endif
				half4 Terrain_Weights_167709_g116779 = staticSwitch8795_g116779;
				half4 Weights52_g116808 = Terrain_Weights_167709_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler238_g116847 = SS19_g116882;
				float4 temp_output_37_0_g116847 = Input_Terrain_Coords_138960_g116779;
				half4 Coords238_g116847 = temp_output_37_0_g116847;
				float3 temp_output_279_0_g116847 = Input_Position9197_g116779;
				half3 WorldPosition238_g116847 = temp_output_279_0_g116847;
				half4 localSamplePlanar2D238_g116847 = SamplePlanar2D( Texture238_g116847 , Sampler238_g116847 , Coords238_g116847 , WorldPosition238_g116847 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler246_g116847 = SS19_g116882;
				half4 Coords246_g116847 = temp_output_37_0_g116847;
				half3 WorldPosition246_g116847 = temp_output_279_0_g116847;
				float3 temp_output_280_0_g116847 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116847 = temp_output_280_0_g116847;
				half4 localSamplePlanar3D246_g116847 = SamplePlanar3D( Texture246_g116847 , Sampler246_g116847 , Coords246_g116847 , WorldPosition246_g116847 , WorldNormal246_g116847 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler234_g116847 = SS19_g116882;
				float4 Coords234_g116847 = temp_output_37_0_g116847;
				float3 WorldPosition234_g116847 = temp_output_279_0_g116847;
				float4 localSampleStochastic2D234_g116847 = SampleStochastic2D( Texture234_g116847 , Sampler234_g116847 , Coords234_g116847 , WorldPosition234_g116847 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler263_g116847 = SS19_g116882;
				half4 Coords263_g116847 = temp_output_37_0_g116847;
				half3 WorldPosition263_g116847 = temp_output_279_0_g116847;
				half3 WorldNormal263_g116847 = temp_output_280_0_g116847;
				half4 localSampleStochastic3D263_g116847 = SampleStochastic3D( Texture263_g116847 , Sampler263_g116847 , Coords263_g116847 , WorldPosition263_g116847 , WorldNormal263_g116847 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8972_g116779 = localSamplePlanar2D238_g116847;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8972_g116779 = localSamplePlanar3D246_g116847;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8972_g116779 = localSampleStochastic2D234_g116847;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8972_g116779 = localSampleStochastic3D263_g116847;
				#else
				float4 staticSwitch8972_g116779 = localSamplePlanar2D238_g116847;
				#endif
				half4 Layer133_g116808 = staticSwitch8972_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler238_g116853 = SS19_g116882;
				float4 temp_output_37_0_g116853 = Input_Terrain_Coords_148961_g116779;
				half4 Coords238_g116853 = temp_output_37_0_g116853;
				float3 temp_output_279_0_g116853 = Input_Position9197_g116779;
				half3 WorldPosition238_g116853 = temp_output_279_0_g116853;
				half4 localSamplePlanar2D238_g116853 = SamplePlanar2D( Texture238_g116853 , Sampler238_g116853 , Coords238_g116853 , WorldPosition238_g116853 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler246_g116853 = SS19_g116882;
				half4 Coords246_g116853 = temp_output_37_0_g116853;
				half3 WorldPosition246_g116853 = temp_output_279_0_g116853;
				float3 temp_output_280_0_g116853 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116853 = temp_output_280_0_g116853;
				half4 localSamplePlanar3D246_g116853 = SamplePlanar3D( Texture246_g116853 , Sampler246_g116853 , Coords246_g116853 , WorldPosition246_g116853 , WorldNormal246_g116853 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler234_g116853 = SS19_g116882;
				float4 Coords234_g116853 = temp_output_37_0_g116853;
				float3 WorldPosition234_g116853 = temp_output_279_0_g116853;
				float4 localSampleStochastic2D234_g116853 = SampleStochastic2D( Texture234_g116853 , Sampler234_g116853 , Coords234_g116853 , WorldPosition234_g116853 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler263_g116853 = SS19_g116882;
				half4 Coords263_g116853 = temp_output_37_0_g116853;
				half3 WorldPosition263_g116853 = temp_output_279_0_g116853;
				half3 WorldNormal263_g116853 = temp_output_280_0_g116853;
				half4 localSampleStochastic3D263_g116853 = SampleStochastic3D( Texture263_g116853 , Sampler263_g116853 , Coords263_g116853 , WorldPosition263_g116853 , WorldNormal263_g116853 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8973_g116779 = localSamplePlanar2D238_g116853;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8973_g116779 = localSamplePlanar3D246_g116853;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8973_g116779 = localSampleStochastic2D234_g116853;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8973_g116779 = localSampleStochastic3D263_g116853;
				#else
				float4 staticSwitch8973_g116779 = localSamplePlanar2D238_g116853;
				#endif
				half4 Layer237_g116808 = staticSwitch8973_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler238_g116854 = SS19_g116882;
				float4 temp_output_37_0_g116854 = Input_Terrain_Coords_158962_g116779;
				half4 Coords238_g116854 = temp_output_37_0_g116854;
				float3 temp_output_279_0_g116854 = Input_Position9197_g116779;
				half3 WorldPosition238_g116854 = temp_output_279_0_g116854;
				half4 localSamplePlanar2D238_g116854 = SamplePlanar2D( Texture238_g116854 , Sampler238_g116854 , Coords238_g116854 , WorldPosition238_g116854 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler246_g116854 = SS19_g116882;
				half4 Coords246_g116854 = temp_output_37_0_g116854;
				half3 WorldPosition246_g116854 = temp_output_279_0_g116854;
				float3 temp_output_280_0_g116854 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116854 = temp_output_280_0_g116854;
				half4 localSamplePlanar3D246_g116854 = SamplePlanar3D( Texture246_g116854 , Sampler246_g116854 , Coords246_g116854 , WorldPosition246_g116854 , WorldNormal246_g116854 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler234_g116854 = SS19_g116882;
				float4 Coords234_g116854 = temp_output_37_0_g116854;
				float3 WorldPosition234_g116854 = temp_output_279_0_g116854;
				float4 localSampleStochastic2D234_g116854 = SampleStochastic2D( Texture234_g116854 , Sampler234_g116854 , Coords234_g116854 , WorldPosition234_g116854 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler263_g116854 = SS19_g116882;
				half4 Coords263_g116854 = temp_output_37_0_g116854;
				half3 WorldPosition263_g116854 = temp_output_279_0_g116854;
				half3 WorldNormal263_g116854 = temp_output_280_0_g116854;
				half4 localSampleStochastic3D263_g116854 = SampleStochastic3D( Texture263_g116854 , Sampler263_g116854 , Coords263_g116854 , WorldPosition263_g116854 , WorldNormal263_g116854 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8974_g116779 = localSamplePlanar2D238_g116854;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8974_g116779 = localSamplePlanar3D246_g116854;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8974_g116779 = localSampleStochastic2D234_g116854;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8974_g116779 = localSampleStochastic3D263_g116854;
				#else
				float4 staticSwitch8974_g116779 = localSamplePlanar2D238_g116854;
				#endif
				half4 Layer338_g116808 = staticSwitch8974_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler238_g116855 = SS19_g116882;
				float4 temp_output_37_0_g116855 = Input_Terrain_Coords_168959_g116779;
				half4 Coords238_g116855 = temp_output_37_0_g116855;
				float3 temp_output_279_0_g116855 = Input_Position9197_g116779;
				half3 WorldPosition238_g116855 = temp_output_279_0_g116855;
				half4 localSamplePlanar2D238_g116855 = SamplePlanar2D( Texture238_g116855 , Sampler238_g116855 , Coords238_g116855 , WorldPosition238_g116855 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler246_g116855 = SS19_g116882;
				half4 Coords246_g116855 = temp_output_37_0_g116855;
				half3 WorldPosition246_g116855 = temp_output_279_0_g116855;
				float3 temp_output_280_0_g116855 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116855 = temp_output_280_0_g116855;
				half4 localSamplePlanar3D246_g116855 = SamplePlanar3D( Texture246_g116855 , Sampler246_g116855 , Coords246_g116855 , WorldPosition246_g116855 , WorldNormal246_g116855 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler234_g116855 = SS19_g116882;
				float4 Coords234_g116855 = temp_output_37_0_g116855;
				float3 WorldPosition234_g116855 = temp_output_279_0_g116855;
				float4 localSampleStochastic2D234_g116855 = SampleStochastic2D( Texture234_g116855 , Sampler234_g116855 , Coords234_g116855 , WorldPosition234_g116855 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler263_g116855 = SS19_g116882;
				half4 Coords263_g116855 = temp_output_37_0_g116855;
				half3 WorldPosition263_g116855 = temp_output_279_0_g116855;
				half3 WorldNormal263_g116855 = temp_output_280_0_g116855;
				half4 localSampleStochastic3D263_g116855 = SampleStochastic3D( Texture263_g116855 , Sampler263_g116855 , Coords263_g116855 , WorldPosition263_g116855 , WorldNormal263_g116855 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8975_g116779 = localSamplePlanar2D238_g116855;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8975_g116779 = localSamplePlanar3D246_g116855;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8975_g116779 = localSampleStochastic2D234_g116855;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8975_g116779 = localSampleStochastic3D263_g116855;
				#else
				float4 staticSwitch8975_g116779 = localSamplePlanar2D238_g116855;
				#endif
				half4 Layer439_g116808 = staticSwitch8975_g116779;
				float4 weightedBlendVar31_g116808 = Weights52_g116808;
				float4 weightedBlend31_g116808 = ( weightedBlendVar31_g116808.x*Layer133_g116808 + weightedBlendVar31_g116808.y*Layer237_g116808 + weightedBlendVar31_g116808.z*Layer338_g116808 + weightedBlendVar31_g116808.w*Layer439_g116808 );
				half4 Terrain_AAAA_168986_g116779 = weightedBlend31_g116808;
				half4 Layer_1644_g116787 = Terrain_AAAA_168986_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116787 = Layer_045_g116787;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116787 = ( Layer_045_g116787 + Layer_0810_g116787 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116787 = ( Layer_045_g116787 + Layer_0810_g116787 + Layer_1243_g116787 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116787 = ( Layer_045_g116787 + Layer_0810_g116787 + Layer_1243_g116787 + Layer_1644_g116787 );
				#else
				float4 staticSwitch40_g116787 = Layer_045_g116787;
				#endif
				half4 Blend_Albedo7468_g116779 = staticSwitch40_g116787;
				half4 Weights52_g116873 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116873 = _TerrainColor1;
				half4 Layer237_g116873 = _TerrainColor2;
				half4 Layer338_g116873 = _TerrainColor3;
				half4 Layer439_g116873 = _TerrainColor4;
				float4 weightedBlendVar31_g116873 = Weights52_g116873;
				float4 weightedBlend31_g116873 = ( weightedBlendVar31_g116873.x*Layer133_g116873 + weightedBlendVar31_g116873.y*Layer237_g116873 + weightedBlendVar31_g116873.z*Layer338_g116873 + weightedBlendVar31_g116873.w*Layer439_g116873 );
				half4 Terrain_Color_049349_g116779 = weightedBlend31_g116873;
				half4 Layer_045_g116878 = Terrain_Color_049349_g116779;
				half4 Weights52_g116874 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116874 = _TerrainColor5;
				half4 Layer237_g116874 = _TerrainColor6;
				half4 Layer338_g116874 = _TerrainColor7;
				half4 Layer439_g116874 = _TerrainColor8;
				float4 weightedBlendVar31_g116874 = Weights52_g116874;
				float4 weightedBlend31_g116874 = ( weightedBlendVar31_g116874.x*Layer133_g116874 + weightedBlendVar31_g116874.y*Layer237_g116874 + weightedBlendVar31_g116874.z*Layer338_g116874 + weightedBlendVar31_g116874.w*Layer439_g116874 );
				half4 Terrain_Color_089361_g116779 = weightedBlend31_g116874;
				half4 Layer_0810_g116878 = Terrain_Color_089361_g116779;
				half4 Weights52_g116875 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116875 = _TerrainColor9;
				half4 Layer237_g116875 = _TerrainColor10;
				half4 Layer338_g116875 = _TerrainColor11;
				half4 Layer439_g116875 = _TerrainColor12;
				float4 weightedBlendVar31_g116875 = Weights52_g116875;
				float4 weightedBlend31_g116875 = ( weightedBlendVar31_g116875.x*Layer133_g116875 + weightedBlendVar31_g116875.y*Layer237_g116875 + weightedBlendVar31_g116875.z*Layer338_g116875 + weightedBlendVar31_g116875.w*Layer439_g116875 );
				half4 Terrain_Color_129373_g116779 = weightedBlend31_g116875;
				half4 Layer_1243_g116878 = Terrain_Color_129373_g116779;
				half4 Weights52_g116876 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116876 = _TerrainColor13;
				half4 Layer237_g116876 = _TerrainColor14;
				half4 Layer338_g116876 = _TerrainColor15;
				half4 Layer439_g116876 = _TerrainColor16;
				float4 weightedBlendVar31_g116876 = Weights52_g116876;
				float4 weightedBlend31_g116876 = ( weightedBlendVar31_g116876.x*Layer133_g116876 + weightedBlendVar31_g116876.y*Layer237_g116876 + weightedBlendVar31_g116876.z*Layer338_g116876 + weightedBlendVar31_g116876.w*Layer439_g116876 );
				half4 Terrain_Color_169381_g116779 = weightedBlend31_g116876;
				half4 Layer_1644_g116878 = Terrain_Color_169381_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116878 = Layer_045_g116878;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116878 = ( Layer_045_g116878 + Layer_0810_g116878 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116878 = ( Layer_045_g116878 + Layer_0810_g116878 + Layer_1243_g116878 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116878 = ( Layer_045_g116878 + Layer_0810_g116878 + Layer_1243_g116878 + Layer_1644_g116878 );
				#else
				float4 staticSwitch40_g116878 = Layer_045_g116878;
				#endif
				half4 Blend_TerrainColor9387_g116779 = staticSwitch40_g116878;
				half3 Final_Albedo9144_g116779 = ( (Blend_Albedo7468_g116779).xyz * (Blend_TerrainColor9387_g116779).rgb * (_TerrainColor).rgb );
				half3 Local_Albedo9199_g116777 = Final_Albedo9144_g116779;
				float3 In_Albedo3_g116778 = Local_Albedo9199_g116777;
				float3 In_AlbedoRaw3_g116778 = Local_Albedo9199_g116777;
				float3 ase_worldTangent = IN.ase_texcoord5.xyz;
				float3 ase_worldBitangent = IN.ase_texcoord6.xyz;
				float3x3 ase_worldToTangent = float3x3(ase_worldTangent,ase_worldBitangent,ase_worldNormal);
				half4 Weights52_g116780 = Terrain_Weights_046781_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116871) = _TerrainNormalTex1;
				float localFilterTexture29_g116886 = ( 0.0 );
				SamplerState SamplerDefault29_g116886 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g116886 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g116886 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g116886 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g116886 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g116886 = SamplerDefault29_g116886;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g116886 = SamplerDefault29_g116886;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g116886 = SamplerPoint29_g116886;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g116886 = SamplerLow29_g116886;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g116886 = SamplerMedium29_g116886;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g116886 = SamplerHigh29_g116886;
				#endif
				SamplerState Sampler238_g116871 = SS29_g116886;
				float4 temp_output_37_0_g116871 = Input_Terrain_Coords_016785_g116779;
				half4 Coords238_g116871 = temp_output_37_0_g116871;
				float3 temp_output_279_0_g116871 = Input_Position9197_g116779;
				half3 WorldPosition238_g116871 = temp_output_279_0_g116871;
				half4 localSamplePlanar2D238_g116871 = SamplePlanar2D( Texture238_g116871 , Sampler238_g116871 , Coords238_g116871 , WorldPosition238_g116871 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116871) = _TerrainNormalTex1;
				SamplerState Sampler246_g116871 = SS29_g116886;
				half4 Coords246_g116871 = temp_output_37_0_g116871;
				half3 WorldPosition246_g116871 = temp_output_279_0_g116871;
				float3 temp_output_280_0_g116871 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116871 = temp_output_280_0_g116871;
				half4 localSamplePlanar3D246_g116871 = SamplePlanar3D( Texture246_g116871 , Sampler246_g116871 , Coords246_g116871 , WorldPosition246_g116871 , WorldNormal246_g116871 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116871) = _TerrainNormalTex1;
				SamplerState Sampler234_g116871 = SS29_g116886;
				float4 Coords234_g116871 = temp_output_37_0_g116871;
				float3 WorldPosition234_g116871 = temp_output_279_0_g116871;
				float4 localSampleStochastic2D234_g116871 = SampleStochastic2D( Texture234_g116871 , Sampler234_g116871 , Coords234_g116871 , WorldPosition234_g116871 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116871) = _TerrainNormalTex1;
				SamplerState Sampler263_g116871 = SS29_g116886;
				half4 Coords263_g116871 = temp_output_37_0_g116871;
				half3 WorldPosition263_g116871 = temp_output_279_0_g116871;
				half3 WorldNormal263_g116871 = temp_output_280_0_g116871;
				half4 localSampleStochastic3D263_g116871 = SampleStochastic3D( Texture263_g116871 , Sampler263_g116871 , Coords263_g116871 , WorldPosition263_g116871 , WorldNormal263_g116871 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8635_g116779 = localSamplePlanar2D238_g116871;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8635_g116779 = localSamplePlanar3D246_g116871;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8635_g116779 = localSampleStochastic2D234_g116871;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8635_g116779 = localSampleStochastic3D263_g116871;
				#else
				float4 staticSwitch8635_g116779 = localSamplePlanar2D238_g116871;
				#endif
				half4 Layer133_g116780 = staticSwitch8635_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116827) = _TerrainNormalTex2;
				SamplerState Sampler238_g116827 = SS29_g116886;
				float4 temp_output_37_0_g116827 = Input_Terrain_Coords_026787_g116779;
				half4 Coords238_g116827 = temp_output_37_0_g116827;
				float3 temp_output_279_0_g116827 = Input_Position9197_g116779;
				half3 WorldPosition238_g116827 = temp_output_279_0_g116827;
				half4 localSamplePlanar2D238_g116827 = SamplePlanar2D( Texture238_g116827 , Sampler238_g116827 , Coords238_g116827 , WorldPosition238_g116827 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116827) = _TerrainNormalTex2;
				SamplerState Sampler246_g116827 = SS29_g116886;
				half4 Coords246_g116827 = temp_output_37_0_g116827;
				half3 WorldPosition246_g116827 = temp_output_279_0_g116827;
				float3 temp_output_280_0_g116827 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116827 = temp_output_280_0_g116827;
				half4 localSamplePlanar3D246_g116827 = SamplePlanar3D( Texture246_g116827 , Sampler246_g116827 , Coords246_g116827 , WorldPosition246_g116827 , WorldNormal246_g116827 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116827) = _TerrainNormalTex2;
				SamplerState Sampler234_g116827 = SS29_g116886;
				float4 Coords234_g116827 = temp_output_37_0_g116827;
				float3 WorldPosition234_g116827 = temp_output_279_0_g116827;
				float4 localSampleStochastic2D234_g116827 = SampleStochastic2D( Texture234_g116827 , Sampler234_g116827 , Coords234_g116827 , WorldPosition234_g116827 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116827) = _TerrainNormalTex2;
				SamplerState Sampler263_g116827 = SS29_g116886;
				half4 Coords263_g116827 = temp_output_37_0_g116827;
				half3 WorldPosition263_g116827 = temp_output_279_0_g116827;
				half3 WorldNormal263_g116827 = temp_output_280_0_g116827;
				half4 localSampleStochastic3D263_g116827 = SampleStochastic3D( Texture263_g116827 , Sampler263_g116827 , Coords263_g116827 , WorldPosition263_g116827 , WorldNormal263_g116827 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8636_g116779 = localSamplePlanar2D238_g116827;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8636_g116779 = localSamplePlanar3D246_g116827;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8636_g116779 = localSampleStochastic2D234_g116827;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8636_g116779 = localSampleStochastic3D263_g116827;
				#else
				float4 staticSwitch8636_g116779 = localSamplePlanar2D238_g116827;
				#endif
				half4 Layer237_g116780 = staticSwitch8636_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116830) = _TerrainNormalTex3;
				SamplerState Sampler238_g116830 = SS29_g116886;
				float4 temp_output_37_0_g116830 = Input_Terrain_Coords_036789_g116779;
				half4 Coords238_g116830 = temp_output_37_0_g116830;
				float3 temp_output_279_0_g116830 = Input_Position9197_g116779;
				half3 WorldPosition238_g116830 = temp_output_279_0_g116830;
				half4 localSamplePlanar2D238_g116830 = SamplePlanar2D( Texture238_g116830 , Sampler238_g116830 , Coords238_g116830 , WorldPosition238_g116830 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116830) = _TerrainNormalTex3;
				SamplerState Sampler246_g116830 = SS29_g116886;
				half4 Coords246_g116830 = temp_output_37_0_g116830;
				half3 WorldPosition246_g116830 = temp_output_279_0_g116830;
				float3 temp_output_280_0_g116830 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116830 = temp_output_280_0_g116830;
				half4 localSamplePlanar3D246_g116830 = SamplePlanar3D( Texture246_g116830 , Sampler246_g116830 , Coords246_g116830 , WorldPosition246_g116830 , WorldNormal246_g116830 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116830) = _TerrainNormalTex3;
				SamplerState Sampler234_g116830 = SS29_g116886;
				float4 Coords234_g116830 = temp_output_37_0_g116830;
				float3 WorldPosition234_g116830 = temp_output_279_0_g116830;
				float4 localSampleStochastic2D234_g116830 = SampleStochastic2D( Texture234_g116830 , Sampler234_g116830 , Coords234_g116830 , WorldPosition234_g116830 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116830) = _TerrainNormalTex3;
				SamplerState Sampler263_g116830 = SS29_g116886;
				half4 Coords263_g116830 = temp_output_37_0_g116830;
				half3 WorldPosition263_g116830 = temp_output_279_0_g116830;
				half3 WorldNormal263_g116830 = temp_output_280_0_g116830;
				half4 localSampleStochastic3D263_g116830 = SampleStochastic3D( Texture263_g116830 , Sampler263_g116830 , Coords263_g116830 , WorldPosition263_g116830 , WorldNormal263_g116830 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8637_g116779 = localSamplePlanar2D238_g116830;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8637_g116779 = localSamplePlanar3D246_g116830;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8637_g116779 = localSampleStochastic2D234_g116830;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8637_g116779 = localSampleStochastic3D263_g116830;
				#else
				float4 staticSwitch8637_g116779 = localSamplePlanar2D238_g116830;
				#endif
				half4 Layer338_g116780 = staticSwitch8637_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116832) = _TerrainNormalTex4;
				SamplerState Sampler238_g116832 = SS29_g116886;
				float4 temp_output_37_0_g116832 = Input_Terrain_Coords_046791_g116779;
				half4 Coords238_g116832 = temp_output_37_0_g116832;
				float3 temp_output_279_0_g116832 = Input_Position9197_g116779;
				half3 WorldPosition238_g116832 = temp_output_279_0_g116832;
				half4 localSamplePlanar2D238_g116832 = SamplePlanar2D( Texture238_g116832 , Sampler238_g116832 , Coords238_g116832 , WorldPosition238_g116832 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116832) = _TerrainNormalTex4;
				SamplerState Sampler246_g116832 = SS29_g116886;
				half4 Coords246_g116832 = temp_output_37_0_g116832;
				half3 WorldPosition246_g116832 = temp_output_279_0_g116832;
				float3 temp_output_280_0_g116832 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116832 = temp_output_280_0_g116832;
				half4 localSamplePlanar3D246_g116832 = SamplePlanar3D( Texture246_g116832 , Sampler246_g116832 , Coords246_g116832 , WorldPosition246_g116832 , WorldNormal246_g116832 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116832) = _TerrainNormalTex4;
				SamplerState Sampler234_g116832 = SS29_g116886;
				float4 Coords234_g116832 = temp_output_37_0_g116832;
				float3 WorldPosition234_g116832 = temp_output_279_0_g116832;
				float4 localSampleStochastic2D234_g116832 = SampleStochastic2D( Texture234_g116832 , Sampler234_g116832 , Coords234_g116832 , WorldPosition234_g116832 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116832) = _TerrainNormalTex4;
				SamplerState Sampler263_g116832 = SS29_g116886;
				half4 Coords263_g116832 = temp_output_37_0_g116832;
				half3 WorldPosition263_g116832 = temp_output_279_0_g116832;
				half3 WorldNormal263_g116832 = temp_output_280_0_g116832;
				half4 localSampleStochastic3D263_g116832 = SampleStochastic3D( Texture263_g116832 , Sampler263_g116832 , Coords263_g116832 , WorldPosition263_g116832 , WorldNormal263_g116832 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8638_g116779 = localSamplePlanar2D238_g116832;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8638_g116779 = localSamplePlanar3D246_g116832;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8638_g116779 = localSampleStochastic2D234_g116832;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8638_g116779 = localSampleStochastic3D263_g116832;
				#else
				float4 staticSwitch8638_g116779 = localSamplePlanar2D238_g116832;
				#endif
				half4 Layer439_g116780 = staticSwitch8638_g116779;
				float4 weightedBlendVar31_g116780 = Weights52_g116780;
				float4 weightedBlend31_g116780 = ( weightedBlendVar31_g116780.x*Layer133_g116780 + weightedBlendVar31_g116780.y*Layer237_g116780 + weightedBlendVar31_g116780.z*Layer338_g116780 + weightedBlendVar31_g116780.w*Layer439_g116780 );
				half4 Terrain_B_047202_g116779 = weightedBlend31_g116780;
				half4 Layer_045_g116786 = Terrain_B_047202_g116779;
				half4 Weights52_g116795 = Terrain_Weights_087340_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116836) = _TerrainNormalTex5;
				SamplerState Sampler238_g116836 = SS29_g116886;
				float4 temp_output_37_0_g116836 = Input_Terrain_Coords_058750_g116779;
				half4 Coords238_g116836 = temp_output_37_0_g116836;
				float3 temp_output_279_0_g116836 = Input_Position9197_g116779;
				half3 WorldPosition238_g116836 = temp_output_279_0_g116836;
				half4 localSamplePlanar2D238_g116836 = SamplePlanar2D( Texture238_g116836 , Sampler238_g116836 , Coords238_g116836 , WorldPosition238_g116836 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116836) = _TerrainNormalTex5;
				SamplerState Sampler246_g116836 = SS29_g116886;
				half4 Coords246_g116836 = temp_output_37_0_g116836;
				half3 WorldPosition246_g116836 = temp_output_279_0_g116836;
				float3 temp_output_280_0_g116836 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116836 = temp_output_280_0_g116836;
				half4 localSamplePlanar3D246_g116836 = SamplePlanar3D( Texture246_g116836 , Sampler246_g116836 , Coords246_g116836 , WorldPosition246_g116836 , WorldNormal246_g116836 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116836) = _TerrainNormalTex5;
				SamplerState Sampler234_g116836 = SS29_g116886;
				float4 Coords234_g116836 = temp_output_37_0_g116836;
				float3 WorldPosition234_g116836 = temp_output_279_0_g116836;
				float4 localSampleStochastic2D234_g116836 = SampleStochastic2D( Texture234_g116836 , Sampler234_g116836 , Coords234_g116836 , WorldPosition234_g116836 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116836) = _TerrainNormalTex5;
				SamplerState Sampler263_g116836 = SS29_g116886;
				half4 Coords263_g116836 = temp_output_37_0_g116836;
				half3 WorldPosition263_g116836 = temp_output_279_0_g116836;
				half3 WorldNormal263_g116836 = temp_output_280_0_g116836;
				half4 localSampleStochastic3D263_g116836 = SampleStochastic3D( Texture263_g116836 , Sampler263_g116836 , Coords263_g116836 , WorldPosition263_g116836 , WorldNormal263_g116836 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8686_g116779 = localSamplePlanar2D238_g116836;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8686_g116779 = localSamplePlanar3D246_g116836;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8686_g116779 = localSampleStochastic2D234_g116836;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8686_g116779 = localSampleStochastic3D263_g116836;
				#else
				float4 staticSwitch8686_g116779 = localSamplePlanar2D238_g116836;
				#endif
				half4 Layer133_g116795 = staticSwitch8686_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116865) = _TerrainNormalTex6;
				SamplerState Sampler238_g116865 = SS29_g116886;
				float4 temp_output_37_0_g116865 = Input_Terrain_Coords_068751_g116779;
				half4 Coords238_g116865 = temp_output_37_0_g116865;
				float3 temp_output_279_0_g116865 = Input_Position9197_g116779;
				half3 WorldPosition238_g116865 = temp_output_279_0_g116865;
				half4 localSamplePlanar2D238_g116865 = SamplePlanar2D( Texture238_g116865 , Sampler238_g116865 , Coords238_g116865 , WorldPosition238_g116865 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116865) = _TerrainNormalTex6;
				SamplerState Sampler246_g116865 = SS29_g116886;
				half4 Coords246_g116865 = temp_output_37_0_g116865;
				half3 WorldPosition246_g116865 = temp_output_279_0_g116865;
				float3 temp_output_280_0_g116865 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116865 = temp_output_280_0_g116865;
				half4 localSamplePlanar3D246_g116865 = SamplePlanar3D( Texture246_g116865 , Sampler246_g116865 , Coords246_g116865 , WorldPosition246_g116865 , WorldNormal246_g116865 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116865) = _TerrainNormalTex6;
				SamplerState Sampler234_g116865 = SS29_g116886;
				float4 Coords234_g116865 = temp_output_37_0_g116865;
				float3 WorldPosition234_g116865 = temp_output_279_0_g116865;
				float4 localSampleStochastic2D234_g116865 = SampleStochastic2D( Texture234_g116865 , Sampler234_g116865 , Coords234_g116865 , WorldPosition234_g116865 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116865) = _TerrainNormalTex6;
				SamplerState Sampler263_g116865 = SS29_g116886;
				half4 Coords263_g116865 = temp_output_37_0_g116865;
				half3 WorldPosition263_g116865 = temp_output_279_0_g116865;
				half3 WorldNormal263_g116865 = temp_output_280_0_g116865;
				half4 localSampleStochastic3D263_g116865 = SampleStochastic3D( Texture263_g116865 , Sampler263_g116865 , Coords263_g116865 , WorldPosition263_g116865 , WorldNormal263_g116865 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8687_g116779 = localSamplePlanar2D238_g116865;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8687_g116779 = localSamplePlanar3D246_g116865;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8687_g116779 = localSampleStochastic2D234_g116865;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8687_g116779 = localSampleStochastic3D263_g116865;
				#else
				float4 staticSwitch8687_g116779 = localSamplePlanar2D238_g116865;
				#endif
				half4 Layer237_g116795 = staticSwitch8687_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116866) = _TerrainNormalTex7;
				SamplerState Sampler238_g116866 = SS29_g116886;
				float4 temp_output_37_0_g116866 = Input_Terrain_Coords_078752_g116779;
				half4 Coords238_g116866 = temp_output_37_0_g116866;
				float3 temp_output_279_0_g116866 = Input_Position9197_g116779;
				half3 WorldPosition238_g116866 = temp_output_279_0_g116866;
				half4 localSamplePlanar2D238_g116866 = SamplePlanar2D( Texture238_g116866 , Sampler238_g116866 , Coords238_g116866 , WorldPosition238_g116866 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116866) = _TerrainNormalTex7;
				SamplerState Sampler246_g116866 = SS29_g116886;
				half4 Coords246_g116866 = temp_output_37_0_g116866;
				half3 WorldPosition246_g116866 = temp_output_279_0_g116866;
				float3 temp_output_280_0_g116866 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116866 = temp_output_280_0_g116866;
				half4 localSamplePlanar3D246_g116866 = SamplePlanar3D( Texture246_g116866 , Sampler246_g116866 , Coords246_g116866 , WorldPosition246_g116866 , WorldNormal246_g116866 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116866) = _TerrainNormalTex7;
				SamplerState Sampler234_g116866 = SS29_g116886;
				float4 Coords234_g116866 = temp_output_37_0_g116866;
				float3 WorldPosition234_g116866 = temp_output_279_0_g116866;
				float4 localSampleStochastic2D234_g116866 = SampleStochastic2D( Texture234_g116866 , Sampler234_g116866 , Coords234_g116866 , WorldPosition234_g116866 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116866) = _TerrainNormalTex7;
				SamplerState Sampler263_g116866 = SS29_g116886;
				half4 Coords263_g116866 = temp_output_37_0_g116866;
				half3 WorldPosition263_g116866 = temp_output_279_0_g116866;
				half3 WorldNormal263_g116866 = temp_output_280_0_g116866;
				half4 localSampleStochastic3D263_g116866 = SampleStochastic3D( Texture263_g116866 , Sampler263_g116866 , Coords263_g116866 , WorldPosition263_g116866 , WorldNormal263_g116866 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8688_g116779 = localSamplePlanar2D238_g116866;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8688_g116779 = localSamplePlanar3D246_g116866;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8688_g116779 = localSampleStochastic2D234_g116866;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8688_g116779 = localSampleStochastic3D263_g116866;
				#else
				float4 staticSwitch8688_g116779 = localSamplePlanar2D238_g116866;
				#endif
				half4 Layer338_g116795 = staticSwitch8688_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116867) = _TerrainNormalTex8;
				SamplerState Sampler238_g116867 = SS29_g116886;
				float4 temp_output_37_0_g116867 = Input_Terrain_Coords_088749_g116779;
				half4 Coords238_g116867 = temp_output_37_0_g116867;
				float3 temp_output_279_0_g116867 = Input_Position9197_g116779;
				half3 WorldPosition238_g116867 = temp_output_279_0_g116867;
				half4 localSamplePlanar2D238_g116867 = SamplePlanar2D( Texture238_g116867 , Sampler238_g116867 , Coords238_g116867 , WorldPosition238_g116867 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116867) = _TerrainNormalTex8;
				SamplerState Sampler246_g116867 = SS29_g116886;
				half4 Coords246_g116867 = temp_output_37_0_g116867;
				half3 WorldPosition246_g116867 = temp_output_279_0_g116867;
				float3 temp_output_280_0_g116867 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116867 = temp_output_280_0_g116867;
				half4 localSamplePlanar3D246_g116867 = SamplePlanar3D( Texture246_g116867 , Sampler246_g116867 , Coords246_g116867 , WorldPosition246_g116867 , WorldNormal246_g116867 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116867) = _TerrainNormalTex8;
				SamplerState Sampler234_g116867 = SS29_g116886;
				float4 Coords234_g116867 = temp_output_37_0_g116867;
				float3 WorldPosition234_g116867 = temp_output_279_0_g116867;
				float4 localSampleStochastic2D234_g116867 = SampleStochastic2D( Texture234_g116867 , Sampler234_g116867 , Coords234_g116867 , WorldPosition234_g116867 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116867) = _TerrainNormalTex8;
				SamplerState Sampler263_g116867 = SS29_g116886;
				half4 Coords263_g116867 = temp_output_37_0_g116867;
				half3 WorldPosition263_g116867 = temp_output_279_0_g116867;
				half3 WorldNormal263_g116867 = temp_output_280_0_g116867;
				half4 localSampleStochastic3D263_g116867 = SampleStochastic3D( Texture263_g116867 , Sampler263_g116867 , Coords263_g116867 , WorldPosition263_g116867 , WorldNormal263_g116867 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8689_g116779 = localSamplePlanar2D238_g116867;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8689_g116779 = localSamplePlanar3D246_g116867;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8689_g116779 = localSampleStochastic2D234_g116867;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8689_g116779 = localSampleStochastic3D263_g116867;
				#else
				float4 staticSwitch8689_g116779 = localSamplePlanar2D238_g116867;
				#endif
				half4 Layer439_g116795 = staticSwitch8689_g116779;
				float4 weightedBlendVar31_g116795 = Weights52_g116795;
				float4 weightedBlend31_g116795 = ( weightedBlendVar31_g116795.x*Layer133_g116795 + weightedBlendVar31_g116795.y*Layer237_g116795 + weightedBlendVar31_g116795.z*Layer338_g116795 + weightedBlendVar31_g116795.w*Layer439_g116795 );
				half4 Terrain_B_088684_g116779 = weightedBlend31_g116795;
				half4 Layer_0810_g116786 = Terrain_B_088684_g116779;
				half4 Weights52_g116802 = Terrain_Weights_127710_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116839) = _TerrainNormalTex9;
				SamplerState Sampler238_g116839 = SS29_g116886;
				float4 temp_output_37_0_g116839 = Input_Terrain_Coords_098833_g116779;
				half4 Coords238_g116839 = temp_output_37_0_g116839;
				float3 temp_output_279_0_g116839 = Input_Position9197_g116779;
				half3 WorldPosition238_g116839 = temp_output_279_0_g116839;
				half4 localSamplePlanar2D238_g116839 = SamplePlanar2D( Texture238_g116839 , Sampler238_g116839 , Coords238_g116839 , WorldPosition238_g116839 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116839) = _TerrainNormalTex9;
				SamplerState Sampler246_g116839 = SS29_g116886;
				half4 Coords246_g116839 = temp_output_37_0_g116839;
				half3 WorldPosition246_g116839 = temp_output_279_0_g116839;
				float3 temp_output_280_0_g116839 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116839 = temp_output_280_0_g116839;
				half4 localSamplePlanar3D246_g116839 = SamplePlanar3D( Texture246_g116839 , Sampler246_g116839 , Coords246_g116839 , WorldPosition246_g116839 , WorldNormal246_g116839 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116839) = _TerrainNormalTex9;
				SamplerState Sampler234_g116839 = SS29_g116886;
				float4 Coords234_g116839 = temp_output_37_0_g116839;
				float3 WorldPosition234_g116839 = temp_output_279_0_g116839;
				float4 localSampleStochastic2D234_g116839 = SampleStochastic2D( Texture234_g116839 , Sampler234_g116839 , Coords234_g116839 , WorldPosition234_g116839 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116839) = _TerrainNormalTex9;
				SamplerState Sampler263_g116839 = SS29_g116886;
				half4 Coords263_g116839 = temp_output_37_0_g116839;
				half3 WorldPosition263_g116839 = temp_output_279_0_g116839;
				half3 WorldNormal263_g116839 = temp_output_280_0_g116839;
				half4 localSampleStochastic3D263_g116839 = SampleStochastic3D( Texture263_g116839 , Sampler263_g116839 , Coords263_g116839 , WorldPosition263_g116839 , WorldNormal263_g116839 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8849_g116779 = localSamplePlanar2D238_g116839;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8849_g116779 = localSamplePlanar3D246_g116839;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8849_g116779 = localSampleStochastic2D234_g116839;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8849_g116779 = localSampleStochastic3D263_g116839;
				#else
				float4 staticSwitch8849_g116779 = localSamplePlanar2D238_g116839;
				#endif
				half4 Layer133_g116802 = staticSwitch8849_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116844) = _TerrainNormalTex10;
				SamplerState Sampler238_g116844 = SS29_g116886;
				float4 temp_output_37_0_g116844 = Input_Terrain_Coords_108834_g116779;
				half4 Coords238_g116844 = temp_output_37_0_g116844;
				float3 temp_output_279_0_g116844 = Input_Position9197_g116779;
				half3 WorldPosition238_g116844 = temp_output_279_0_g116844;
				half4 localSamplePlanar2D238_g116844 = SamplePlanar2D( Texture238_g116844 , Sampler238_g116844 , Coords238_g116844 , WorldPosition238_g116844 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116844) = _TerrainNormalTex10;
				SamplerState Sampler246_g116844 = SS29_g116886;
				half4 Coords246_g116844 = temp_output_37_0_g116844;
				half3 WorldPosition246_g116844 = temp_output_279_0_g116844;
				float3 temp_output_280_0_g116844 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116844 = temp_output_280_0_g116844;
				half4 localSamplePlanar3D246_g116844 = SamplePlanar3D( Texture246_g116844 , Sampler246_g116844 , Coords246_g116844 , WorldPosition246_g116844 , WorldNormal246_g116844 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116844) = _TerrainNormalTex10;
				SamplerState Sampler234_g116844 = SS29_g116886;
				float4 Coords234_g116844 = temp_output_37_0_g116844;
				float3 WorldPosition234_g116844 = temp_output_279_0_g116844;
				float4 localSampleStochastic2D234_g116844 = SampleStochastic2D( Texture234_g116844 , Sampler234_g116844 , Coords234_g116844 , WorldPosition234_g116844 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116844) = _TerrainNormalTex10;
				SamplerState Sampler263_g116844 = SS29_g116886;
				half4 Coords263_g116844 = temp_output_37_0_g116844;
				half3 WorldPosition263_g116844 = temp_output_279_0_g116844;
				half3 WorldNormal263_g116844 = temp_output_280_0_g116844;
				half4 localSampleStochastic3D263_g116844 = SampleStochastic3D( Texture263_g116844 , Sampler263_g116844 , Coords263_g116844 , WorldPosition263_g116844 , WorldNormal263_g116844 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8876_g116779 = localSamplePlanar2D238_g116844;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8876_g116779 = localSamplePlanar3D246_g116844;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8876_g116779 = localSampleStochastic2D234_g116844;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8876_g116779 = localSampleStochastic3D263_g116844;
				#else
				float4 staticSwitch8876_g116779 = localSamplePlanar2D238_g116844;
				#endif
				half4 Layer237_g116802 = staticSwitch8876_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116845) = _TerrainNormalTex11;
				SamplerState Sampler238_g116845 = SS29_g116886;
				float4 temp_output_37_0_g116845 = Input_Terrain_Coords_118835_g116779;
				half4 Coords238_g116845 = temp_output_37_0_g116845;
				float3 temp_output_279_0_g116845 = Input_Position9197_g116779;
				half3 WorldPosition238_g116845 = temp_output_279_0_g116845;
				half4 localSamplePlanar2D238_g116845 = SamplePlanar2D( Texture238_g116845 , Sampler238_g116845 , Coords238_g116845 , WorldPosition238_g116845 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116845) = _TerrainNormalTex11;
				SamplerState Sampler246_g116845 = SS29_g116886;
				half4 Coords246_g116845 = temp_output_37_0_g116845;
				half3 WorldPosition246_g116845 = temp_output_279_0_g116845;
				float3 temp_output_280_0_g116845 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116845 = temp_output_280_0_g116845;
				half4 localSamplePlanar3D246_g116845 = SamplePlanar3D( Texture246_g116845 , Sampler246_g116845 , Coords246_g116845 , WorldPosition246_g116845 , WorldNormal246_g116845 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116845) = _TerrainNormalTex11;
				SamplerState Sampler234_g116845 = SS29_g116886;
				float4 Coords234_g116845 = temp_output_37_0_g116845;
				float3 WorldPosition234_g116845 = temp_output_279_0_g116845;
				float4 localSampleStochastic2D234_g116845 = SampleStochastic2D( Texture234_g116845 , Sampler234_g116845 , Coords234_g116845 , WorldPosition234_g116845 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116845) = _TerrainNormalTex11;
				SamplerState Sampler263_g116845 = SS29_g116886;
				half4 Coords263_g116845 = temp_output_37_0_g116845;
				half3 WorldPosition263_g116845 = temp_output_279_0_g116845;
				half3 WorldNormal263_g116845 = temp_output_280_0_g116845;
				half4 localSampleStochastic3D263_g116845 = SampleStochastic3D( Texture263_g116845 , Sampler263_g116845 , Coords263_g116845 , WorldPosition263_g116845 , WorldNormal263_g116845 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8850_g116779 = localSamplePlanar2D238_g116845;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8850_g116779 = localSamplePlanar3D246_g116845;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8850_g116779 = localSampleStochastic2D234_g116845;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8850_g116779 = localSampleStochastic3D263_g116845;
				#else
				float4 staticSwitch8850_g116779 = localSamplePlanar2D238_g116845;
				#endif
				half4 Layer338_g116802 = staticSwitch8850_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116846) = _TerrainNormalTex12;
				SamplerState Sampler238_g116846 = SS29_g116886;
				float4 temp_output_37_0_g116846 = Input_Terrain_Coords_128836_g116779;
				half4 Coords238_g116846 = temp_output_37_0_g116846;
				float3 temp_output_279_0_g116846 = Input_Position9197_g116779;
				half3 WorldPosition238_g116846 = temp_output_279_0_g116846;
				half4 localSamplePlanar2D238_g116846 = SamplePlanar2D( Texture238_g116846 , Sampler238_g116846 , Coords238_g116846 , WorldPosition238_g116846 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116846) = _TerrainNormalTex12;
				SamplerState Sampler246_g116846 = SS29_g116886;
				half4 Coords246_g116846 = temp_output_37_0_g116846;
				half3 WorldPosition246_g116846 = temp_output_279_0_g116846;
				float3 temp_output_280_0_g116846 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116846 = temp_output_280_0_g116846;
				half4 localSamplePlanar3D246_g116846 = SamplePlanar3D( Texture246_g116846 , Sampler246_g116846 , Coords246_g116846 , WorldPosition246_g116846 , WorldNormal246_g116846 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116846) = _TerrainNormalTex12;
				SamplerState Sampler234_g116846 = SS29_g116886;
				float4 Coords234_g116846 = temp_output_37_0_g116846;
				float3 WorldPosition234_g116846 = temp_output_279_0_g116846;
				float4 localSampleStochastic2D234_g116846 = SampleStochastic2D( Texture234_g116846 , Sampler234_g116846 , Coords234_g116846 , WorldPosition234_g116846 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116846) = _TerrainNormalTex12;
				SamplerState Sampler263_g116846 = SS29_g116886;
				half4 Coords263_g116846 = temp_output_37_0_g116846;
				half3 WorldPosition263_g116846 = temp_output_279_0_g116846;
				half3 WorldNormal263_g116846 = temp_output_280_0_g116846;
				half4 localSampleStochastic3D263_g116846 = SampleStochastic3D( Texture263_g116846 , Sampler263_g116846 , Coords263_g116846 , WorldPosition263_g116846 , WorldNormal263_g116846 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8877_g116779 = localSamplePlanar2D238_g116846;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8877_g116779 = localSamplePlanar3D246_g116846;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8877_g116779 = localSampleStochastic2D234_g116846;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8877_g116779 = localSampleStochastic3D263_g116846;
				#else
				float4 staticSwitch8877_g116779 = localSamplePlanar2D238_g116846;
				#endif
				half4 Layer439_g116802 = staticSwitch8877_g116779;
				float4 weightedBlendVar31_g116802 = Weights52_g116802;
				float4 weightedBlend31_g116802 = ( weightedBlendVar31_g116802.x*Layer133_g116802 + weightedBlendVar31_g116802.y*Layer237_g116802 + weightedBlendVar31_g116802.z*Layer338_g116802 + weightedBlendVar31_g116802.w*Layer439_g116802 );
				half4 Terrain_B_128865_g116779 = weightedBlend31_g116802;
				half4 Layer_1243_g116786 = Terrain_B_128865_g116779;
				half4 Weights52_g116809 = Terrain_Weights_167709_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116849) = _TerrainNormalTex13;
				SamplerState Sampler238_g116849 = SS29_g116886;
				float4 temp_output_37_0_g116849 = Input_Terrain_Coords_138960_g116779;
				half4 Coords238_g116849 = temp_output_37_0_g116849;
				float3 temp_output_279_0_g116849 = Input_Position9197_g116779;
				half3 WorldPosition238_g116849 = temp_output_279_0_g116849;
				half4 localSamplePlanar2D238_g116849 = SamplePlanar2D( Texture238_g116849 , Sampler238_g116849 , Coords238_g116849 , WorldPosition238_g116849 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116849) = _TerrainNormalTex13;
				SamplerState Sampler246_g116849 = SS29_g116886;
				half4 Coords246_g116849 = temp_output_37_0_g116849;
				half3 WorldPosition246_g116849 = temp_output_279_0_g116849;
				float3 temp_output_280_0_g116849 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116849 = temp_output_280_0_g116849;
				half4 localSamplePlanar3D246_g116849 = SamplePlanar3D( Texture246_g116849 , Sampler246_g116849 , Coords246_g116849 , WorldPosition246_g116849 , WorldNormal246_g116849 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116849) = _TerrainNormalTex13;
				SamplerState Sampler234_g116849 = SS29_g116886;
				float4 Coords234_g116849 = temp_output_37_0_g116849;
				float3 WorldPosition234_g116849 = temp_output_279_0_g116849;
				float4 localSampleStochastic2D234_g116849 = SampleStochastic2D( Texture234_g116849 , Sampler234_g116849 , Coords234_g116849 , WorldPosition234_g116849 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116849) = _TerrainNormalTex13;
				SamplerState Sampler263_g116849 = SS29_g116886;
				half4 Coords263_g116849 = temp_output_37_0_g116849;
				half3 WorldPosition263_g116849 = temp_output_279_0_g116849;
				half3 WorldNormal263_g116849 = temp_output_280_0_g116849;
				half4 localSampleStochastic3D263_g116849 = SampleStochastic3D( Texture263_g116849 , Sampler263_g116849 , Coords263_g116849 , WorldPosition263_g116849 , WorldNormal263_g116849 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8991_g116779 = localSamplePlanar2D238_g116849;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8991_g116779 = localSamplePlanar3D246_g116849;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8991_g116779 = localSampleStochastic2D234_g116849;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8991_g116779 = localSampleStochastic3D263_g116849;
				#else
				float4 staticSwitch8991_g116779 = localSamplePlanar2D238_g116849;
				#endif
				half4 Layer133_g116809 = staticSwitch8991_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116856) = _TerrainNormalTex14;
				SamplerState Sampler238_g116856 = SS29_g116886;
				float4 temp_output_37_0_g116856 = Input_Terrain_Coords_148961_g116779;
				half4 Coords238_g116856 = temp_output_37_0_g116856;
				float3 temp_output_279_0_g116856 = Input_Position9197_g116779;
				half3 WorldPosition238_g116856 = temp_output_279_0_g116856;
				half4 localSamplePlanar2D238_g116856 = SamplePlanar2D( Texture238_g116856 , Sampler238_g116856 , Coords238_g116856 , WorldPosition238_g116856 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116856) = _TerrainNormalTex14;
				SamplerState Sampler246_g116856 = SS29_g116886;
				half4 Coords246_g116856 = temp_output_37_0_g116856;
				half3 WorldPosition246_g116856 = temp_output_279_0_g116856;
				float3 temp_output_280_0_g116856 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116856 = temp_output_280_0_g116856;
				half4 localSamplePlanar3D246_g116856 = SamplePlanar3D( Texture246_g116856 , Sampler246_g116856 , Coords246_g116856 , WorldPosition246_g116856 , WorldNormal246_g116856 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116856) = _TerrainNormalTex14;
				SamplerState Sampler234_g116856 = SS29_g116886;
				float4 Coords234_g116856 = temp_output_37_0_g116856;
				float3 WorldPosition234_g116856 = temp_output_279_0_g116856;
				float4 localSampleStochastic2D234_g116856 = SampleStochastic2D( Texture234_g116856 , Sampler234_g116856 , Coords234_g116856 , WorldPosition234_g116856 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116856) = _TerrainNormalTex14;
				SamplerState Sampler263_g116856 = SS29_g116886;
				half4 Coords263_g116856 = temp_output_37_0_g116856;
				half3 WorldPosition263_g116856 = temp_output_279_0_g116856;
				half3 WorldNormal263_g116856 = temp_output_280_0_g116856;
				half4 localSampleStochastic3D263_g116856 = SampleStochastic3D( Texture263_g116856 , Sampler263_g116856 , Coords263_g116856 , WorldPosition263_g116856 , WorldNormal263_g116856 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8990_g116779 = localSamplePlanar2D238_g116856;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8990_g116779 = localSamplePlanar3D246_g116856;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8990_g116779 = localSampleStochastic2D234_g116856;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8990_g116779 = localSampleStochastic3D263_g116856;
				#else
				float4 staticSwitch8990_g116779 = localSamplePlanar2D238_g116856;
				#endif
				half4 Layer237_g116809 = staticSwitch8990_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116857) = _TerrainNormalTex15;
				SamplerState Sampler238_g116857 = SS29_g116886;
				float4 temp_output_37_0_g116857 = Input_Terrain_Coords_158962_g116779;
				half4 Coords238_g116857 = temp_output_37_0_g116857;
				float3 temp_output_279_0_g116857 = Input_Position9197_g116779;
				half3 WorldPosition238_g116857 = temp_output_279_0_g116857;
				half4 localSamplePlanar2D238_g116857 = SamplePlanar2D( Texture238_g116857 , Sampler238_g116857 , Coords238_g116857 , WorldPosition238_g116857 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116857) = _TerrainNormalTex15;
				SamplerState Sampler246_g116857 = SS29_g116886;
				half4 Coords246_g116857 = temp_output_37_0_g116857;
				half3 WorldPosition246_g116857 = temp_output_279_0_g116857;
				float3 temp_output_280_0_g116857 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116857 = temp_output_280_0_g116857;
				half4 localSamplePlanar3D246_g116857 = SamplePlanar3D( Texture246_g116857 , Sampler246_g116857 , Coords246_g116857 , WorldPosition246_g116857 , WorldNormal246_g116857 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116857) = _TerrainNormalTex15;
				SamplerState Sampler234_g116857 = SS29_g116886;
				float4 Coords234_g116857 = temp_output_37_0_g116857;
				float3 WorldPosition234_g116857 = temp_output_279_0_g116857;
				float4 localSampleStochastic2D234_g116857 = SampleStochastic2D( Texture234_g116857 , Sampler234_g116857 , Coords234_g116857 , WorldPosition234_g116857 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116857) = _TerrainNormalTex15;
				SamplerState Sampler263_g116857 = SS29_g116886;
				half4 Coords263_g116857 = temp_output_37_0_g116857;
				half3 WorldPosition263_g116857 = temp_output_279_0_g116857;
				half3 WorldNormal263_g116857 = temp_output_280_0_g116857;
				half4 localSampleStochastic3D263_g116857 = SampleStochastic3D( Texture263_g116857 , Sampler263_g116857 , Coords263_g116857 , WorldPosition263_g116857 , WorldNormal263_g116857 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8989_g116779 = localSamplePlanar2D238_g116857;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8989_g116779 = localSamplePlanar3D246_g116857;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8989_g116779 = localSampleStochastic2D234_g116857;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8989_g116779 = localSampleStochastic3D263_g116857;
				#else
				float4 staticSwitch8989_g116779 = localSamplePlanar2D238_g116857;
				#endif
				half4 Layer338_g116809 = staticSwitch8989_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116858) = _TerrainNormalTex16;
				SamplerState Sampler238_g116858 = SS29_g116886;
				float4 temp_output_37_0_g116858 = Input_Terrain_Coords_168959_g116779;
				half4 Coords238_g116858 = temp_output_37_0_g116858;
				float3 temp_output_279_0_g116858 = Input_Position9197_g116779;
				half3 WorldPosition238_g116858 = temp_output_279_0_g116858;
				half4 localSamplePlanar2D238_g116858 = SamplePlanar2D( Texture238_g116858 , Sampler238_g116858 , Coords238_g116858 , WorldPosition238_g116858 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116858) = _TerrainNormalTex16;
				SamplerState Sampler246_g116858 = SS29_g116886;
				half4 Coords246_g116858 = temp_output_37_0_g116858;
				half3 WorldPosition246_g116858 = temp_output_279_0_g116858;
				float3 temp_output_280_0_g116858 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116858 = temp_output_280_0_g116858;
				half4 localSamplePlanar3D246_g116858 = SamplePlanar3D( Texture246_g116858 , Sampler246_g116858 , Coords246_g116858 , WorldPosition246_g116858 , WorldNormal246_g116858 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116858) = _TerrainNormalTex16;
				SamplerState Sampler234_g116858 = SS29_g116886;
				float4 Coords234_g116858 = temp_output_37_0_g116858;
				float3 WorldPosition234_g116858 = temp_output_279_0_g116858;
				float4 localSampleStochastic2D234_g116858 = SampleStochastic2D( Texture234_g116858 , Sampler234_g116858 , Coords234_g116858 , WorldPosition234_g116858 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116858) = _TerrainNormalTex16;
				SamplerState Sampler263_g116858 = SS29_g116886;
				half4 Coords263_g116858 = temp_output_37_0_g116858;
				half3 WorldPosition263_g116858 = temp_output_279_0_g116858;
				half3 WorldNormal263_g116858 = temp_output_280_0_g116858;
				half4 localSampleStochastic3D263_g116858 = SampleStochastic3D( Texture263_g116858 , Sampler263_g116858 , Coords263_g116858 , WorldPosition263_g116858 , WorldNormal263_g116858 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8988_g116779 = localSamplePlanar2D238_g116858;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8988_g116779 = localSamplePlanar3D246_g116858;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8988_g116779 = localSampleStochastic2D234_g116858;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8988_g116779 = localSampleStochastic3D263_g116858;
				#else
				float4 staticSwitch8988_g116779 = localSamplePlanar2D238_g116858;
				#endif
				half4 Layer439_g116809 = staticSwitch8988_g116779;
				float4 weightedBlendVar31_g116809 = Weights52_g116809;
				float4 weightedBlend31_g116809 = ( weightedBlendVar31_g116809.x*Layer133_g116809 + weightedBlendVar31_g116809.y*Layer237_g116809 + weightedBlendVar31_g116809.z*Layer338_g116809 + weightedBlendVar31_g116809.w*Layer439_g116809 );
				half4 Terrain_B_168987_g116779 = weightedBlend31_g116809;
				half4 Layer_1644_g116786 = Terrain_B_168987_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116786 = Layer_045_g116786;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116786 = ( Layer_045_g116786 + Layer_0810_g116786 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116786 = ( Layer_045_g116786 + Layer_0810_g116786 + Layer_1243_g116786 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116786 = ( Layer_045_g116786 + Layer_0810_g116786 + Layer_1243_g116786 + Layer_1644_g116786 );
				#else
				float4 staticSwitch40_g116786 = Layer_045_g116786;
				#endif
				half4 Blend_Normal7512_g116779 = staticSwitch40_g116786;
				half4 Normal_Packed45_g116880 = Blend_Normal7512_g116779;
				float2 appendResult58_g116880 = (float2(( (Normal_Packed45_g116880).x * (Normal_Packed45_g116880).w ) , (Normal_Packed45_g116880).y));
				half2 Normal_Default50_g116880 = appendResult58_g116880;
				half2 Normal_ASTC41_g116880 = (Normal_Packed45_g116880).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g116880 = Normal_ASTC41_g116880;
				#else
				float2 staticSwitch38_g116880 = Normal_Default50_g116880;
				#endif
				half2 Normal_NO_DTX544_g116880 = (Normal_Packed45_g116880).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g116880 = Normal_NO_DTX544_g116880;
				#else
				float2 staticSwitch37_g116880 = staticSwitch38_g116880;
				#endif
				half4 Weights52_g116782 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116782 = temp_output_6970_0_g116779;
				half4 Layer237_g116782 = temp_output_6977_0_g116779;
				half4 Layer338_g116782 = temp_output_6978_0_g116779;
				half4 Layer439_g116782 = temp_output_6983_0_g116779;
				float4 weightedBlendVar31_g116782 = Weights52_g116782;
				float4 weightedBlend31_g116782 = ( weightedBlendVar31_g116782.x*Layer133_g116782 + weightedBlendVar31_g116782.y*Layer237_g116782 + weightedBlendVar31_g116782.z*Layer338_g116782 + weightedBlendVar31_g116782.w*Layer439_g116782 );
				half4 Terrain_Shaders_047203_g116779 = weightedBlend31_g116782;
				half4 Layer_045_g116788 = Terrain_Shaders_047203_g116779;
				half4 Weights52_g116798 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116798 = temp_output_8714_0_g116779;
				half4 Layer237_g116798 = temp_output_8721_0_g116779;
				half4 Layer338_g116798 = temp_output_8724_0_g116779;
				half4 Layer439_g116798 = temp_output_8727_0_g116779;
				float4 weightedBlendVar31_g116798 = Weights52_g116798;
				float4 weightedBlend31_g116798 = ( weightedBlendVar31_g116798.x*Layer133_g116798 + weightedBlendVar31_g116798.y*Layer237_g116798 + weightedBlendVar31_g116798.z*Layer338_g116798 + weightedBlendVar31_g116798.w*Layer439_g116798 );
				half4 Terrain_Shaders_088730_g116779 = weightedBlend31_g116798;
				half4 Layer_0810_g116788 = Terrain_Shaders_088730_g116779;
				half4 Weights52_g116805 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116805 = temp_output_8815_0_g116779;
				half4 Layer237_g116805 = temp_output_8818_0_g116779;
				half4 Layer338_g116805 = temp_output_8819_0_g116779;
				half4 Layer439_g116805 = temp_output_8820_0_g116779;
				float4 weightedBlendVar31_g116805 = Weights52_g116805;
				float4 weightedBlend31_g116805 = ( weightedBlendVar31_g116805.x*Layer133_g116805 + weightedBlendVar31_g116805.y*Layer237_g116805 + weightedBlendVar31_g116805.z*Layer338_g116805 + weightedBlendVar31_g116805.w*Layer439_g116805 );
				half4 Terrain_Shaders_128871_g116779 = weightedBlend31_g116805;
				half4 Layer_1243_g116788 = Terrain_Shaders_128871_g116779;
				half4 Weights52_g116812 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116812 = temp_output_8931_0_g116779;
				half4 Layer237_g116812 = temp_output_8934_0_g116779;
				half4 Layer338_g116812 = temp_output_8935_0_g116779;
				half4 Layer439_g116812 = temp_output_8936_0_g116779;
				float4 weightedBlendVar31_g116812 = Weights52_g116812;
				float4 weightedBlend31_g116812 = ( weightedBlendVar31_g116812.x*Layer133_g116812 + weightedBlendVar31_g116812.y*Layer237_g116812 + weightedBlendVar31_g116812.z*Layer338_g116812 + weightedBlendVar31_g116812.w*Layer439_g116812 );
				half4 Terrain_Shaders_169014_g116779 = weightedBlend31_g116812;
				half4 Layer_1644_g116788 = Terrain_Shaders_169014_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116788 = Layer_045_g116788;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116788 = ( Layer_045_g116788 + Layer_0810_g116788 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116788 = ( Layer_045_g116788 + Layer_0810_g116788 + Layer_1243_g116788 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116788 = ( Layer_045_g116788 + Layer_0810_g116788 + Layer_1243_g116788 + Layer_1644_g116788 );
				#else
				float4 staticSwitch40_g116788 = Layer_045_g116788;
				#endif
				half4 Blend_Shaders7420_g116779 = staticSwitch40_g116788;
				half4 Normal_Packed45_g116879 = Blend_Shaders7420_g116779;
				half2 Normal_NO_DTX544_g116879 = (Normal_Packed45_g116879).wy;
				#ifdef TVE_TERRAIN_PACKED
				float2 staticSwitch9080_g116779 = (Normal_NO_DTX544_g116879*2.0 + -1.0);
				#else
				float2 staticSwitch9080_g116779 = (staticSwitch37_g116880*2.0 + -1.0);
				#endif
				half4 Weights52_g116783 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116783 = _TerrainParams1;
				half4 Layer237_g116783 = _TerrainParams2;
				half4 Layer338_g116783 = _TerrainParams3;
				half4 Layer439_g116783 = _TerrainParams4;
				float4 weightedBlendVar31_g116783 = Weights52_g116783;
				float4 weightedBlend31_g116783 = ( weightedBlendVar31_g116783.x*Layer133_g116783 + weightedBlendVar31_g116783.y*Layer237_g116783 + weightedBlendVar31_g116783.z*Layer338_g116783 + weightedBlendVar31_g116783.w*Layer439_g116783 );
				half4 Terrain_Params_047533_g116779 = weightedBlend31_g116783;
				half4 Layer_045_g116789 = Terrain_Params_047533_g116779;
				half4 Weights52_g116799 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116799 = _TerrainParams5;
				half4 Layer237_g116799 = _TerrainParams6;
				half4 Layer338_g116799 = _TerrainParams7;
				half4 Layer439_g116799 = _TerrainParams8;
				float4 weightedBlendVar31_g116799 = Weights52_g116799;
				float4 weightedBlend31_g116799 = ( weightedBlendVar31_g116799.x*Layer133_g116799 + weightedBlendVar31_g116799.y*Layer237_g116799 + weightedBlendVar31_g116799.z*Layer338_g116799 + weightedBlendVar31_g116799.w*Layer439_g116799 );
				half4 Terrain_Params_088739_g116779 = weightedBlend31_g116799;
				half4 Layer_0810_g116789 = Terrain_Params_088739_g116779;
				half4 Weights52_g116806 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116806 = _TerrainParams9;
				half4 Layer237_g116806 = _TerrainParams10;
				half4 Layer338_g116806 = _TerrainParams11;
				half4 Layer439_g116806 = _TerrainParams12;
				float4 weightedBlendVar31_g116806 = Weights52_g116806;
				float4 weightedBlend31_g116806 = ( weightedBlendVar31_g116806.x*Layer133_g116806 + weightedBlendVar31_g116806.y*Layer237_g116806 + weightedBlendVar31_g116806.z*Layer338_g116806 + weightedBlendVar31_g116806.w*Layer439_g116806 );
				half4 Terrain_Params_128867_g116779 = weightedBlend31_g116806;
				half4 Layer_1243_g116789 = Terrain_Params_128867_g116779;
				half4 Weights52_g116813 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116813 = _TerrainParams13;
				half4 Layer237_g116813 = _TerrainParams14;
				half4 Layer338_g116813 = _TerrainParams15;
				half4 Layer439_g116813 = _TerrainParams16;
				float4 weightedBlendVar31_g116813 = Weights52_g116813;
				float4 weightedBlend31_g116813 = ( weightedBlendVar31_g116813.x*Layer133_g116813 + weightedBlendVar31_g116813.y*Layer237_g116813 + weightedBlendVar31_g116813.z*Layer338_g116813 + weightedBlendVar31_g116813.w*Layer439_g116813 );
				half4 Terrain_Params_169017_g116779 = weightedBlend31_g116813;
				half4 Layer_1644_g116789 = Terrain_Params_169017_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116789 = Layer_045_g116789;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116789 = ( Layer_045_g116789 + Layer_0810_g116789 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116789 = ( Layer_045_g116789 + Layer_0810_g116789 + Layer_1243_g116789 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116789 = ( Layer_045_g116789 + Layer_0810_g116789 + Layer_1243_g116789 + Layer_1644_g116789 );
				#else
				float4 staticSwitch40_g116789 = Layer_045_g116789;
				#endif
				half4 Blend_Params7547_g116779 = staticSwitch40_g116789;
				half2 Normal_Planar45_g116881 = ( ( staticSwitch9080_g116779 * (Blend_Params7547_g116779).z ) * _TerrainNormalValue );
				float2 break71_g116881 = Normal_Planar45_g116881;
				float3 appendResult72_g116881 = (float3(break71_g116881.x , 0.0 , break71_g116881.y));
				half2 Final_NormalTS9145_g116779 = (mul( ase_worldToTangent, appendResult72_g116881 )).xy;
				half2 Local_Normal9200_g116777 = Final_NormalTS9145_g116779;
				float2 In_NormalTS3_g116778 = Local_Normal9200_g116777;
				float3 appendResult68_g116889 = (float3(Local_Normal9200_g116777 , 1.0));
				float3 tanToWorld0 = float3( ase_worldTangent.x, ase_worldBitangent.x, ase_worldNormal.x );
				float3 tanToWorld1 = float3( ase_worldTangent.y, ase_worldBitangent.y, ase_worldNormal.y );
				float3 tanToWorld2 = float3( ase_worldTangent.z, ase_worldBitangent.z, ase_worldNormal.z );
				float3 tanNormal74_g116889 = appendResult68_g116889;
				float3 worldNormal74_g116889 = normalize( float3(dot(tanToWorld0,tanNormal74_g116889), dot(tanToWorld1,tanNormal74_g116889), dot(tanToWorld2,tanNormal74_g116889)) );
				float3 In_NormalWS3_g116778 = worldNormal74_g116889;
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9139_g116779 = 0.0;
				#else
				float staticSwitch9139_g116779 = ( (Blend_Shaders7420_g116779).x * (Blend_Params7547_g116779).x * _TerrainMetallicValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9097_g116779 = 1.0;
				#else
				float staticSwitch9097_g116779 = ( (Blend_Shaders7420_g116779).y * _TerrainOcclusionValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9105_g116779 = (Blend_Shaders7420_g116779).x;
				#else
				float staticSwitch9105_g116779 = (Blend_Shaders7420_g116779).w;
				#endif
				float4 appendResult9147_g116779 = (float4(staticSwitch9139_g116779 , staticSwitch9097_g116779 , (Blend_Shaders7420_g116779).z , ( staticSwitch9105_g116779 * (Blend_Params7547_g116779).w * _TerrainSmoothnessValue )));
				half4 Final_Shaders9146_g116779 = appendResult9147_g116779;
				half4 Local_Shader9201_g116777 = Final_Shaders9146_g116779;
				float4 In_Shader3_g116778 = Local_Shader9201_g116777;
				half4 Weights52_g116872 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116872 = _TerrainSpecular1;
				half4 Layer237_g116872 = _TerrainSpecular2;
				half4 Layer338_g116872 = _TerrainSpecular3;
				half4 Layer439_g116872 = _TerrainSpecular4;
				float4 weightedBlendVar31_g116872 = Weights52_g116872;
				float4 weightedBlend31_g116872 = ( weightedBlendVar31_g116872.x*Layer133_g116872 + weightedBlendVar31_g116872.y*Layer237_g116872 + weightedBlendVar31_g116872.z*Layer338_g116872 + weightedBlendVar31_g116872.w*Layer439_g116872 );
				half4 Terrain_Specular_047390_g116779 = weightedBlend31_g116872;
				half4 Layer_045_g116877 = Terrain_Specular_047390_g116779;
				half4 Weights52_g116800 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116800 = _TerrainSpecular5;
				half4 Layer237_g116800 = _TerrainSpecular6;
				half4 Layer338_g116800 = _TerrainSpecular7;
				half4 Layer439_g116800 = _TerrainSpecular8;
				float4 weightedBlendVar31_g116800 = Weights52_g116800;
				float4 weightedBlend31_g116800 = ( weightedBlendVar31_g116800.x*Layer133_g116800 + weightedBlendVar31_g116800.y*Layer237_g116800 + weightedBlendVar31_g116800.z*Layer338_g116800 + weightedBlendVar31_g116800.w*Layer439_g116800 );
				half4 Terrain_Specular_088745_g116779 = weightedBlend31_g116800;
				half4 Layer_0810_g116877 = Terrain_Specular_088745_g116779;
				half4 Weights52_g116807 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116807 = _TerrainSpecular9;
				half4 Layer237_g116807 = _TerrainSpecular10;
				half4 Layer338_g116807 = _TerrainSpecular11;
				half4 Layer439_g116807 = _TerrainSpecular12;
				float4 weightedBlendVar31_g116807 = Weights52_g116807;
				float4 weightedBlend31_g116807 = ( weightedBlendVar31_g116807.x*Layer133_g116807 + weightedBlendVar31_g116807.y*Layer237_g116807 + weightedBlendVar31_g116807.z*Layer338_g116807 + weightedBlendVar31_g116807.w*Layer439_g116807 );
				half4 Terrain_Specular_128869_g116779 = weightedBlend31_g116807;
				half4 Layer_1243_g116877 = Terrain_Specular_128869_g116779;
				half4 Weights52_g116814 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116814 = _TerrainSpecular13;
				half4 Layer237_g116814 = _TerrainSpecular14;
				half4 Layer338_g116814 = _TerrainSpecular15;
				half4 Layer439_g116814 = _TerrainSpecular16;
				float4 weightedBlendVar31_g116814 = Weights52_g116814;
				float4 weightedBlend31_g116814 = ( weightedBlendVar31_g116814.x*Layer133_g116814 + weightedBlendVar31_g116814.y*Layer237_g116814 + weightedBlendVar31_g116814.z*Layer338_g116814 + weightedBlendVar31_g116814.w*Layer439_g116814 );
				half4 Terrain_Specular_169019_g116779 = weightedBlend31_g116814;
				half4 Layer_1644_g116877 = Terrain_Specular_169019_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116877 = Layer_045_g116877;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116877 = ( Layer_045_g116877 + Layer_0810_g116877 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116877 = ( Layer_045_g116877 + Layer_0810_g116877 + Layer_1243_g116877 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116877 = ( Layer_045_g116877 + Layer_0810_g116877 + Layer_1243_g116877 + Layer_1644_g116877 );
				#else
				float4 staticSwitch40_g116877 = Layer_045_g116877;
				#endif
				half4 Blend_TerrainSpecular7446_g116779 = staticSwitch40_g116877;
				float3 temp_output_9088_0_g116779 = (Blend_TerrainSpecular7446_g116779).rgb;
				float4 appendResult9189_g116779 = (float4(temp_output_9088_0_g116779 , 1.0));
				half4 Final_Emissive9151_g116779 = appendResult9189_g116779;
				half4 Local_EmissiveLDR9202_g116777 = Final_Emissive9151_g116779;
				float4 In_Emissive3_g116778 = Local_EmissiveLDR9202_g116777;
				float3 temp_output_3_0_g116890 = Local_Albedo9199_g116777;
				float dotResult20_g116890 = dot( temp_output_3_0_g116890 , float3(0.2126,0.7152,0.0722) );
				float temp_output_9165_0_g116777 = dotResult20_g116890;
				float In_Grayscale3_g116778 = temp_output_9165_0_g116777;
				float clampResult9168_g116777 = clamp( saturate( ( temp_output_9165_0_g116777 * 5.0 ) ) , 0.2 , 1.0 );
				float In_Luminosity3_g116778 = clampResult9168_g116777;
				half Final_MultiShader9150_g116779 = ( (Blend_TerrainSpecular7446_g116779).a * (Blend_Albedo7468_g116779).w );
				half Local_MultiMask9203_g116777 = Final_MultiShader9150_g116779;
				float In_MultiMask3_g116778 = Local_MultiMask9203_g116777;
				float4 temp_output_35_0_g116888 = appendResult9125_g116779;
				float2 InputScale48_g116888 = (temp_output_35_0_g116888).zw;
				half2 FinalScale53_g116888 = ( 1.0 / InputScale48_g116888 );
				float2 InputPosition52_g116888 = (temp_output_35_0_g116888).xy;
				half2 FinalPosition58_g116888 = -( FinalScale53_g116888 * InputPosition52_g116888 );
				float2 temp_output_65_0_g116888 = ( ( (ase_worldPos).xz * FinalScale53_g116888 ) + FinalPosition58_g116888 );
				float2 Terrain_Holes_UV9406_g116779 = temp_output_65_0_g116888;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch9188_g116779 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9406_g116779 ).r;
				#else
				float staticSwitch9188_g116779 = 1.0;
				#endif
				half Terrain_Holes7437_g116779 = staticSwitch9188_g116779;
				half Local_HoleMask9204_g116777 = Terrain_Holes7437_g116779;
				float In_AlphaClip3_g116778 = Local_HoleMask9204_g116777;
				float In_AlphaFade3_g116778 = 1.0;
				float3 temp_cast_9 = (1.0).xxx;
				float3 In_Translucency3_g116778 = temp_cast_9;
				float In_Transmission3_g116778 = 1.0;
				float In_Thickness3_g116778 = 0.0;
				float In_Diffusion3_g116778 = 0.0;
				Data3_g116778.Dummy = In_Dummy3_g116778;
				Data3_g116778.Albedo = In_Albedo3_g116778;
				Data3_g116778.AlbedoRaw = In_AlbedoRaw3_g116778;
				Data3_g116778.NormalTS = In_NormalTS3_g116778;
				Data3_g116778.NormalWS = In_NormalWS3_g116778;
				Data3_g116778.Shader = In_Shader3_g116778;
				Data3_g116778.Emissive= In_Emissive3_g116778;
				Data3_g116778.MultiMask = In_MultiMask3_g116778;
				Data3_g116778.Grayscale = In_Grayscale3_g116778;
				Data3_g116778.Luminosity = In_Luminosity3_g116778;
				Data3_g116778.AlphaClip = In_AlphaClip3_g116778;
				Data3_g116778.AlphaFade = In_AlphaFade3_g116778;
				Data3_g116778.Translucency = In_Translucency3_g116778;
				Data3_g116778.Transmission = In_Transmission3_g116778;
				Data3_g116778.Thickness = In_Thickness3_g116778;
				Data3_g116778.Diffusion = In_Diffusion3_g116778;
				TVEVisualData Data4_g116913 = Data3_g116778;
				float Out_Dummy4_g116913 = 0;
				float3 Out_Albedo4_g116913 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116913 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116913 = float2( 0,0 );
				float3 Out_NormalWS4_g116913 = float3( 0,0,0 );
				float4 Out_Shader4_g116913 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116913 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116913 = 0;
				float Out_Grayscale4_g116913 = 0;
				float Out_Luminosity4_g116913 = 0;
				float Out_AlphaClip4_g116913 = 0;
				float Out_AlphaFade4_g116913 = 0;
				float3 Out_Translucency4_g116913 = float3( 0,0,0 );
				float Out_Transmission4_g116913 = 0;
				float Out_Thickness4_g116913 = 0;
				float Out_Diffusion4_g116913 = 0;
				Out_Dummy4_g116913 = Data4_g116913.Dummy;
				Out_Albedo4_g116913 = Data4_g116913.Albedo;
				Out_AlbedoRaw4_g116913 = Data4_g116913.AlbedoRaw;
				Out_NormalTS4_g116913 = Data4_g116913.NormalTS;
				Out_NormalWS4_g116913 = Data4_g116913.NormalWS;
				Out_Shader4_g116913 = Data4_g116913.Shader;
				Out_Emissive4_g116913= Data4_g116913.Emissive;
				Out_MultiMask4_g116913 = Data4_g116913.MultiMask;
				Out_Grayscale4_g116913 = Data4_g116913.Grayscale;
				Out_Luminosity4_g116913= Data4_g116913.Luminosity;
				Out_AlphaClip4_g116913 = Data4_g116913.AlphaClip;
				Out_AlphaFade4_g116913 = Data4_g116913.AlphaFade;
				Out_Translucency4_g116913 = Data4_g116913.Translucency;
				Out_Transmission4_g116913 = Data4_g116913.Transmission;
				Out_Thickness4_g116913 = Data4_g116913.Thickness;
				Out_Diffusion4_g116913 = Data4_g116913.Diffusion;
				half3 Visual_Albedo139_g116891 = Out_Albedo4_g116913;
				float temp_output_200_12_g116891 = Out_Grayscale4_g116913;
				half Visual_Grayscale150_g116891 = temp_output_200_12_g116891;
				float3 temp_cast_10 = (Visual_Grayscale150_g116891).xxx;
				float localBuildGlobalData204_g115912 = ( 0.0 );
				TVEGlobalData Data204_g115912 = (TVEGlobalData)0;
				half Dummy211_g115912 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g115912 = Dummy211_g115912;
				half4 Coat_Params302_g115912 = TVE_CoatParams;
				float4 In_CoatParams204_g115912 = Coat_Params302_g115912;
				float temp_output_82_0_g115913 = _GlobalPaintLayerValue;
				float temp_output_19_0_g115915 = TVE_PaintLayers[(int)temp_output_82_0_g115913];
				TVEModelData Data16_g114321 = (TVEModelData)0;
				float In_Dummy16_g114321 = 0.0;
				float3 vertexToFrag73_g114306 = IN.ase_texcoord7.xyz;
				half3 PositionWS122_g114306 = vertexToFrag73_g114306;
				float3 In_PositionWS16_g114321 = PositionWS122_g114306;
				float4x4 break19_g114308 = unity_ObjectToWorld;
				float3 appendResult20_g114308 = (float3(break19_g114308[ 0 ][ 3 ] , break19_g114308[ 1 ][ 3 ] , break19_g114308[ 2 ][ 3 ]));
				half3 ObjectData20_g114310 = appendResult20_g114308;
				half3 WorldData19_g114310 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g114310 = WorldData19_g114310;
				#else
				float3 staticSwitch14_g114310 = ObjectData20_g114310;
				#endif
				float3 temp_output_124_0_g114308 = staticSwitch14_g114310;
				float3 temp_output_239_7_g114306 = temp_output_124_0_g114308;
				half3 PivotWS121_g114306 = temp_output_239_7_g114306;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
				#else
				float3 staticSwitch204_g114306 = PositionWS122_g114306;
				#endif
				half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
				float3 In_PositionWO16_g114321 = PositionWO132_g114306;
				float3 In_PivotWS16_g114321 = PivotWS121_g114306;
				half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
				float3 In_PivotWO16_g114321 = PivotWO133_g114306;
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g114306 = normalizedWorldNormal;
				float3 In_NormalWS16_g114321 = Normal_WS95_g114306;
				float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
				half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
				float3 In_ViewDirWS16_g114321 = ViewDirWS169_g114306;
				half4 VertexMasks171_g114306 = IN.ase_color;
				float4 In_VertexData16_g114321 = VertexMasks171_g114306;
				float4 In_BoundsData16_g114321 = float4( 1,1,1,1 );
				Data16_g114321.Dummy = In_Dummy16_g114321;
				Data16_g114321.PositionWS = In_PositionWS16_g114321;
				Data16_g114321.PositionWO = In_PositionWO16_g114321;
				Data16_g114321.PivotWS = In_PivotWS16_g114321;
				Data16_g114321.PivotWO = In_PivotWO16_g114321;
				Data16_g114321.NormalWS = In_NormalWS16_g114321;
				Data16_g114321.ViewDirWS = In_ViewDirWS16_g114321;
				Data16_g114321.VertexData = In_VertexData16_g114321;
				Data16_g114321.BoundsData = In_BoundsData16_g114321;
				TVEModelData Data15_g115994 = Data16_g114321;
				float Out_Dummy15_g115994 = 0;
				float3 Out_PositionWS15_g115994 = float3( 0,0,0 );
				float3 Out_PositionWO15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWS15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWO15_g115994 = float3( 0,0,0 );
				float3 Out_NormalWS15_g115994 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g115994 = float3( 0,0,0 );
				float4 Out_VertexData15_g115994 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g115994 = float4( 0,0,0,0 );
				Out_Dummy15_g115994 = Data15_g115994.Dummy;
				Out_PositionWS15_g115994 = Data15_g115994.PositionWS;
				Out_PositionWO15_g115994 = Data15_g115994.PositionWO;
				Out_PivotWS15_g115994 = Data15_g115994.PivotWS;
				Out_PivotWO15_g115994 = Data15_g115994.PivotWO;
				Out_NormalWS15_g115994 = Data15_g115994.NormalWS;
				Out_ViewDirWS15_g115994 = Data15_g115994.ViewDirWS;
				Out_VertexData15_g115994 = Data15_g115994.VertexData;
				Out_BoundsData15_g115994 = Data15_g115994.BoundsData;
				half3 Model_PositionWS143_g115912 = Out_PositionWS15_g115994;
				half3 Input_Position180_g115916 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115916 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_82_0_g115916 = temp_output_82_0_g115913;
				float2 temp_output_119_0_g115916 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_7_0_g115921 = 1.0;
				float temp_output_10_0_g115921 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115921 );
				float4 lerpResult131_g115916 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115916,temp_output_82_0_g115916), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115916,temp_output_82_0_g115916), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115916 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115921 ) / temp_output_10_0_g115921 ) ));
				float4 temp_output_17_0_g115915 = lerpResult131_g115916;
				float4 temp_output_3_0_g115915 = TVE_PaintParams;
				float4 ifLocalVar18_g115915 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115915 >= 0.5 )
				ifLocalVar18_g115915 = temp_output_17_0_g115915;
				else
				ifLocalVar18_g115915 = temp_output_3_0_g115915;
				float4 lerpResult22_g115915 = lerp( temp_output_3_0_g115915 , temp_output_17_0_g115915 , temp_output_19_0_g115915);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115915 = lerpResult22_g115915;
				#else
				float4 staticSwitch24_g115915 = ifLocalVar18_g115915;
				#endif
				half4 Paint_Params71_g115912 = staticSwitch24_g115915;
				float4 In_PaintParams204_g115912 = Paint_Params71_g115912;
				float temp_output_82_0_g115931 = _GlobalGlowLayerValue;
				float temp_output_19_0_g115933 = TVE_GlowLayers[(int)temp_output_82_0_g115931];
				half3 Input_Position180_g115934 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115934 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_82_0_g115934 = temp_output_82_0_g115931;
				float2 temp_output_119_0_g115934 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_7_0_g115939 = 1.0;
				float temp_output_10_0_g115939 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115939 );
				float4 lerpResult131_g115934 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115934,temp_output_82_0_g115934), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115934,temp_output_82_0_g115934), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115934 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115939 ) / temp_output_10_0_g115939 ) ));
				float4 temp_output_17_0_g115933 = lerpResult131_g115934;
				float4 temp_output_3_0_g115933 = TVE_GlowParams;
				float4 ifLocalVar18_g115933 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115933 >= 0.5 )
				ifLocalVar18_g115933 = temp_output_17_0_g115933;
				else
				ifLocalVar18_g115933 = temp_output_3_0_g115933;
				float4 lerpResult22_g115933 = lerp( temp_output_3_0_g115933 , temp_output_17_0_g115933 , temp_output_19_0_g115933);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115933 = lerpResult22_g115933;
				#else
				float4 staticSwitch24_g115933 = ifLocalVar18_g115933;
				#endif
				half4 Glow_Params248_g115912 = staticSwitch24_g115933;
				float4 In_GlowParams204_g115912 = Glow_Params248_g115912;
				float temp_output_132_0_g115976 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g115978 = TVE_AtmoLayers[(int)temp_output_132_0_g115976];
				half3 Input_Position180_g115979 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115979 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_82_0_g115979 = temp_output_132_0_g115976;
				float2 temp_output_119_0_g115979 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_7_0_g115984 = 1.0;
				float temp_output_10_0_g115984 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115984 );
				float4 lerpResult131_g115979 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115979,temp_output_82_0_g115979), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115979,temp_output_82_0_g115979), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115979 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115984 ) / temp_output_10_0_g115984 ) ));
				float4 temp_output_17_0_g115978 = lerpResult131_g115979;
				float4 temp_output_3_0_g115978 = TVE_AtmoParams;
				float4 ifLocalVar18_g115978 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115978 >= 0.5 )
				ifLocalVar18_g115978 = temp_output_17_0_g115978;
				else
				ifLocalVar18_g115978 = temp_output_3_0_g115978;
				float4 lerpResult22_g115978 = lerp( temp_output_3_0_g115978 , temp_output_17_0_g115978 , temp_output_19_0_g115978);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115978 = lerpResult22_g115978;
				#else
				float4 staticSwitch24_g115978 = ifLocalVar18_g115978;
				#endif
				half4 Atmo_Params80_g115912 = staticSwitch24_g115978;
				float4 In_AtmoParams204_g115912 = Atmo_Params80_g115912;
				float temp_output_132_0_g115985 = _GlobalFadeLayerValue;
				float temp_output_19_0_g115987 = TVE_FadeLayers[(int)temp_output_132_0_g115985];
				half3 Input_Position180_g115988 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115988 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_82_0_g115988 = temp_output_132_0_g115985;
				float2 temp_output_119_0_g115988 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_7_0_g115993 = 1.0;
				float temp_output_10_0_g115993 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115993 );
				float4 lerpResult131_g115988 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115988,temp_output_82_0_g115988), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115988,temp_output_82_0_g115988), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115988 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115993 ) / temp_output_10_0_g115993 ) ));
				float4 temp_output_17_0_g115987 = lerpResult131_g115988;
				float4 temp_output_3_0_g115987 = TVE_FadeParams;
				float4 ifLocalVar18_g115987 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115987 >= 0.5 )
				ifLocalVar18_g115987 = temp_output_17_0_g115987;
				else
				ifLocalVar18_g115987 = temp_output_3_0_g115987;
				float4 lerpResult22_g115987 = lerp( temp_output_3_0_g115987 , temp_output_17_0_g115987 , temp_output_19_0_g115987);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115987 = lerpResult22_g115987;
				#else
				float4 staticSwitch24_g115987 = ifLocalVar18_g115987;
				#endif
				half4 Fade_Params387_g115912 = staticSwitch24_g115987;
				float4 In_FadeParams204_g115912 = Fade_Params387_g115912;
				half4 Form_Params112_g115912 = TVE_FormParams;
				float4 In_FormParams204_g115912 = Form_Params112_g115912;
				float temp_output_130_0_g115949 = _GlobalLandLayerValue;
				float temp_output_19_0_g115951 = TVE_LandLayers[(int)temp_output_130_0_g115949];
				half3 Input_Position180_g115952 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115952 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_82_0_g115952 = temp_output_130_0_g115949;
				float2 temp_output_119_0_g115952 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_7_0_g115957 = 1.0;
				float temp_output_10_0_g115957 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115957 );
				float4 lerpResult131_g115952 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115952,temp_output_82_0_g115952), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115952,temp_output_82_0_g115952), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115952 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115957 ) / temp_output_10_0_g115957 ) ));
				float4 temp_output_17_0_g115951 = lerpResult131_g115952;
				float4 temp_output_3_0_g115951 = TVE_LandParams;
				float4 ifLocalVar18_g115951 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115951 >= 0.5 )
				ifLocalVar18_g115951 = temp_output_17_0_g115951;
				else
				ifLocalVar18_g115951 = temp_output_3_0_g115951;
				float4 lerpResult22_g115951 = lerp( temp_output_3_0_g115951 , temp_output_17_0_g115951 , temp_output_19_0_g115951);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115951 = lerpResult22_g115951;
				#else
				float4 staticSwitch24_g115951 = ifLocalVar18_g115951;
				#endif
				half4 Land_Params375_g115912 = staticSwitch24_g115951;
				float4 In_LandParams204_g115912 = Land_Params375_g115912;
				half4 Wind_Params88_g115912 = TVE_WindParams;
				float4 In_WindParams204_g115912 = Wind_Params88_g115912;
				half4 Push_Params335_g115912 = TVE_PushParams;
				float4 In_PushParams204_g115912 = Push_Params335_g115912;
				Data204_g115912.Dummy = In_Dummy204_g115912;
				Data204_g115912.CoatParams = In_CoatParams204_g115912;
				Data204_g115912.PaintParams = In_PaintParams204_g115912;
				Data204_g115912.GlowParams = In_GlowParams204_g115912;
				Data204_g115912.AtmoParams = In_AtmoParams204_g115912;
				Data204_g115912.FadeParams = In_FadeParams204_g115912;
				Data204_g115912.FormParams= In_FormParams204_g115912;
				Data204_g115912.LandParams = In_LandParams204_g115912;
				Data204_g115912.WindParams = In_WindParams204_g115912;
				Data204_g115912.PushParams = In_PushParams204_g115912;
				TVEGlobalData Data15_g116892 = Data204_g115912;
				float Out_Dummy15_g116892 = 0;
				float4 Out_CoatParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116892 = float4( 0,0,0,0 );
				Out_Dummy15_g116892 = Data15_g116892.Dummy;
				Out_CoatParams15_g116892 = Data15_g116892.CoatParams;
				Out_PaintParams15_g116892 = Data15_g116892.PaintParams;
				Out_GlowParams15_g116892 = Data15_g116892.GlowParams;
				Out_AtmoParams15_g116892= Data15_g116892.AtmoParams;
				Out_FadeParams15_g116892= Data15_g116892.FadeParams;
				Out_FormParams15_g116892 = Data15_g116892.FormParams;
				Out_LandParams15_g116892 = Data15_g116892.LandParams;
				Out_WindParams15_g116892 = Data15_g116892.WindParams;
				Out_PushParams15_g116892 = Data15_g116892.PushParams;
				half4 Global_PaintParams209_g116891 = Out_PaintParams15_g116892;
				float temp_output_6_0_g116893 = ( saturate( (Global_PaintParams209_g116891).w ) * TVE_IsEnabled );
				#ifdef TVE_REGISTER
				float staticSwitch14_g116893 = ( temp_output_6_0_g116893 + ( _TintingElementMode * 0.0 ) );
				#else
				float staticSwitch14_g116893 = temp_output_6_0_g116893;
				#endif
				#ifdef TVE_TINTING_ELEMENT
				float staticSwitch283_g116891 = staticSwitch14_g116893;
				#else
				float staticSwitch283_g116891 = 1.0;
				#endif
				half Tinting_GlobalValue285_g116891 = staticSwitch283_g116891;
				float3 lerpResult368_g116891 = lerp( Visual_Albedo139_g116891 , temp_cast_10 , ( Tinting_GlobalValue285_g116891 * _TintingGrayValue ));
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g116911 = 2.0;
				#else
				float staticSwitch1_g116911 = 4.594794;
				#endif
				float3 temp_cast_32 = (1.0).xxx;
				#ifdef TVE_TINTING_ELEMENT
				float3 staticSwitch288_g116891 = (Global_PaintParams209_g116891).xyz;
				#else
				float3 staticSwitch288_g116891 = temp_cast_32;
				#endif
				half3 Tinting_ColorGlobal290_g116891 = staticSwitch288_g116891;
				float temp_output_200_11_g116891 = Out_MultiMask4_g116913;
				half Visual_MultiMask181_g116891 = temp_output_200_11_g116891;
				float lerpResult147_g116891 = lerp( 1.0 , Visual_MultiMask181_g116891 , _TintingMultiValue);
				half Tinting_MutiMask121_g116891 = lerpResult147_g116891;
				half Tinting_TexMask385_g116891 = 1.0;
				float temp_output_200_15_g116891 = Out_Luminosity4_g116913;
				half Visual_Luminosity257_g116891 = temp_output_200_15_g116891;
				float clampResult17_g116905 = clamp( Visual_Luminosity257_g116891 , 0.0001 , 0.9999 );
				float temp_output_7_0_g116904 = _TintingLumaRemap.x;
				float temp_output_10_0_g116904 = ( _TintingLumaRemap.y - temp_output_7_0_g116904 );
				float lerpResult228_g116891 = lerp( 1.0 , saturate( ( ( clampResult17_g116905 - temp_output_7_0_g116904 ) / ( temp_output_10_0_g116904 + 0.0001 ) ) ) , _TintingLumaValue);
				half Tinting_LumaMask153_g116891 = lerpResult228_g116891;
				half Tinting_VertMask309_g116891 = 1.0;
				half Tinting_NoiseMask213_g116891 = 1.0;
				half Custom_Mask345_g116891 = 1.0;
				float temp_output_7_0_g116900 = _TintingBlendRemap.x;
				float temp_output_10_0_g116900 = ( _TintingBlendRemap.y - temp_output_7_0_g116900 );
				half Tinting_Mask242_g116891 = ( saturate( ( ( ( _TintingIntensityValue * Tinting_MutiMask121_g116891 * Tinting_TexMask385_g116891 * Tinting_LumaMask153_g116891 * Tinting_VertMask309_g116891 * Tinting_NoiseMask213_g116891 * Tinting_GlobalValue285_g116891 * Custom_Mask345_g116891 ) - temp_output_7_0_g116900 ) / ( temp_output_10_0_g116900 + 0.0001 ) ) ) * TVE_IsEnabled );
				float3 lerpResult90_g116891 = lerp( Visual_Albedo139_g116891 , ( lerpResult368_g116891 * staticSwitch1_g116911 * Tinting_ColorGlobal290_g116891 * (_TintingColor).rgb ) , Tinting_Mask242_g116891);
				#ifdef TVE_TINTING
				float3 staticSwitch286_g116891 = lerpResult90_g116891;
				#else
				float3 staticSwitch286_g116891 = Visual_Albedo139_g116891;
				#endif
				half3 Final_Albedo97_g116891 = staticSwitch286_g116891;
				float3 In_Albedo3_g116912 = Final_Albedo97_g116891;
				float3 In_AlbedoRaw3_g116912 = Out_AlbedoRaw4_g116913;
				float2 In_NormalTS3_g116912 = Out_NormalTS4_g116913;
				float3 In_NormalWS3_g116912 = Out_NormalWS4_g116913;
				float4 In_Shader3_g116912 = Out_Shader4_g116913;
				float4 In_Emissive3_g116912 = Out_Emissive4_g116913;
				float In_Grayscale3_g116912 = temp_output_200_12_g116891;
				float In_Luminosity3_g116912 = temp_output_200_15_g116891;
				float In_MultiMask3_g116912 = temp_output_200_11_g116891;
				float In_AlphaClip3_g116912 = Out_AlphaClip4_g116913;
				float In_AlphaFade3_g116912 = Out_AlphaFade4_g116913;
				float3 In_Translucency3_g116912 = Out_Translucency4_g116913;
				float In_Transmission3_g116912 = Out_Transmission4_g116913;
				float In_Thickness3_g116912 = Out_Thickness4_g116913;
				float In_Diffusion3_g116912 = Out_Diffusion4_g116913;
				Data3_g116912.Dummy = In_Dummy3_g116912;
				Data3_g116912.Albedo = In_Albedo3_g116912;
				Data3_g116912.AlbedoRaw = In_AlbedoRaw3_g116912;
				Data3_g116912.NormalTS = In_NormalTS3_g116912;
				Data3_g116912.NormalWS = In_NormalWS3_g116912;
				Data3_g116912.Shader = In_Shader3_g116912;
				Data3_g116912.Emissive= In_Emissive3_g116912;
				Data3_g116912.MultiMask = In_MultiMask3_g116912;
				Data3_g116912.Grayscale = In_Grayscale3_g116912;
				Data3_g116912.Luminosity = In_Luminosity3_g116912;
				Data3_g116912.AlphaClip = In_AlphaClip3_g116912;
				Data3_g116912.AlphaFade = In_AlphaFade3_g116912;
				Data3_g116912.Translucency = In_Translucency3_g116912;
				Data3_g116912.Transmission = In_Transmission3_g116912;
				Data3_g116912.Thickness = In_Thickness3_g116912;
				Data3_g116912.Diffusion = In_Diffusion3_g116912;
				TVEVisualData Data4_g116917 = Data3_g116912;
				float Out_Dummy4_g116917 = 0;
				float3 Out_Albedo4_g116917 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116917 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116917 = float2( 0,0 );
				float3 Out_NormalWS4_g116917 = float3( 0,0,0 );
				float4 Out_Shader4_g116917 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116917 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116917 = 0;
				float Out_Grayscale4_g116917 = 0;
				float Out_Luminosity4_g116917 = 0;
				float Out_AlphaClip4_g116917 = 0;
				float Out_AlphaFade4_g116917 = 0;
				float3 Out_Translucency4_g116917 = float3( 0,0,0 );
				float Out_Transmission4_g116917 = 0;
				float Out_Thickness4_g116917 = 0;
				float Out_Diffusion4_g116917 = 0;
				Out_Dummy4_g116917 = Data4_g116917.Dummy;
				Out_Albedo4_g116917 = Data4_g116917.Albedo;
				Out_AlbedoRaw4_g116917 = Data4_g116917.AlbedoRaw;
				Out_NormalTS4_g116917 = Data4_g116917.NormalTS;
				Out_NormalWS4_g116917 = Data4_g116917.NormalWS;
				Out_Shader4_g116917 = Data4_g116917.Shader;
				Out_Emissive4_g116917= Data4_g116917.Emissive;
				Out_MultiMask4_g116917 = Data4_g116917.MultiMask;
				Out_Grayscale4_g116917 = Data4_g116917.Grayscale;
				Out_Luminosity4_g116917= Data4_g116917.Luminosity;
				Out_AlphaClip4_g116917 = Data4_g116917.AlphaClip;
				Out_AlphaFade4_g116917 = Data4_g116917.AlphaFade;
				Out_Translucency4_g116917 = Data4_g116917.Translucency;
				Out_Transmission4_g116917 = Data4_g116917.Transmission;
				Out_Thickness4_g116917 = Data4_g116917.Thickness;
				Out_Diffusion4_g116917 = Data4_g116917.Diffusion;
				half3 Visual_Albedo292_g116915 = Out_Albedo4_g116917;
				float temp_output_280_12_g116915 = Out_Grayscale4_g116917;
				half Visual_Grayscale308_g116915 = temp_output_280_12_g116915;
				float3 temp_cast_33 = (Visual_Grayscale308_g116915).xxx;
				TVEGlobalData Data15_g116916 = Data204_g115912;
				float Out_Dummy15_g116916 = 0;
				float4 Out_CoatParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116916 = float4( 0,0,0,0 );
				Out_Dummy15_g116916 = Data15_g116916.Dummy;
				Out_CoatParams15_g116916 = Data15_g116916.CoatParams;
				Out_PaintParams15_g116916 = Data15_g116916.PaintParams;
				Out_GlowParams15_g116916 = Data15_g116916.GlowParams;
				Out_AtmoParams15_g116916= Data15_g116916.AtmoParams;
				Out_FadeParams15_g116916= Data15_g116916.FadeParams;
				Out_FormParams15_g116916 = Data15_g116916.FormParams;
				Out_LandParams15_g116916 = Data15_g116916.LandParams;
				Out_WindParams15_g116916 = Data15_g116916.WindParams;
				Out_PushParams15_g116916 = Data15_g116916.PushParams;
				half4 Global_AtmoParams314_g116915 = Out_AtmoParams15_g116916;
				#ifdef TVE_DRYNESS_ELEMENT
				float staticSwitch351_g116915 = ( (Global_AtmoParams314_g116915).x * TVE_IsEnabled );
				#else
				float staticSwitch351_g116915 = 1.0;
				#endif
				half Dryness_GlobalMask352_g116915 = staticSwitch351_g116915;
				float3 lerpResult485_g116915 = lerp( Visual_Albedo292_g116915 , temp_cast_33 , ( Dryness_GlobalMask352_g116915 * _DrynessGrayValue ));
				half3 hsvTorgb58_g116936 = RGBToHSV( lerpResult485_g116915 );
				half3 hsvTorgb61_g116936 = HSVToRGB( half3(( hsvTorgb58_g116936.x + _DrynessShiftValue ),hsvTorgb58_g116936.y,hsvTorgb58_g116936.z) );
				#ifdef TVE_DRYNESS_SHIFT
				float3 staticSwitch499_g116915 = hsvTorgb61_g116936;
				#else
				float3 staticSwitch499_g116915 = lerpResult485_g116915;
				#endif
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g116935 = 2.0;
				#else
				float staticSwitch1_g116935 = 4.594794;
				#endif
				half Dryness_TexMask478_g116915 = 1.0;
				float temp_output_280_11_g116915 = Out_MultiMask4_g116917;
				half Visual_MultiMask310_g116915 = temp_output_280_11_g116915;
				float lerpResult283_g116915 = lerp( 1.0 , Visual_MultiMask310_g116915 , _DrynessMultiValue);
				half Dryness_MultiMask302_g116915 = lerpResult283_g116915;
				float temp_output_280_15_g116915 = Out_Luminosity4_g116917;
				half Visual_Luminosity309_g116915 = temp_output_280_15_g116915;
				float clampResult17_g116931 = clamp( Visual_Luminosity309_g116915 , 0.0001 , 0.9999 );
				float temp_output_7_0_g116930 = _DrynessLumaRemap.x;
				float temp_output_10_0_g116930 = ( _DrynessLumaRemap.y - temp_output_7_0_g116930 );
				float lerpResult295_g116915 = lerp( 1.0 , saturate( ( ( clampResult17_g116931 - temp_output_7_0_g116930 ) / ( temp_output_10_0_g116930 + 0.0001 ) ) ) , _DrynessLumaValue);
				half Dryness_LumaMask301_g116915 = lerpResult295_g116915;
				half Dryness_VertMask378_g116915 = 1.0;
				half Dryness_MaskNoise291_g116915 = 1.0;
				half Custom_Mask411_g116915 = 1.0;
				float temp_output_7_0_g116929 = _DrynessBlendRemap.x;
				float temp_output_10_0_g116929 = ( _DrynessBlendRemap.y - temp_output_7_0_g116929 );
				half Dryness_Mask329_g116915 = saturate( ( ( ( _DrynessIntensityValue * Dryness_TexMask478_g116915 * Dryness_MultiMask302_g116915 * Dryness_LumaMask301_g116915 * Dryness_VertMask378_g116915 * Dryness_MaskNoise291_g116915 * Dryness_GlobalMask352_g116915 * Custom_Mask411_g116915 ) - temp_output_7_0_g116929 ) / ( temp_output_10_0_g116929 + 0.0001 ) ) );
				float3 lerpResult336_g116915 = lerp( Visual_Albedo292_g116915 , ( staticSwitch499_g116915 * staticSwitch1_g116935 * (_DrynessColor).rgb ) , Dryness_Mask329_g116915);
				#ifdef TVE_DRYNESS
				float3 staticSwitch356_g116915 = lerpResult336_g116915;
				#else
				float3 staticSwitch356_g116915 = Visual_Albedo292_g116915;
				#endif
				half3 Final_Albedo331_g116915 = staticSwitch356_g116915;
				float3 In_Albedo3_g116918 = Final_Albedo331_g116915;
				float3 In_AlbedoRaw3_g116918 = Out_AlbedoRaw4_g116917;
				float2 In_NormalTS3_g116918 = Out_NormalTS4_g116917;
				float3 In_NormalWS3_g116918 = Out_NormalWS4_g116917;
				half4 Visual_Shader415_g116915 = Out_Shader4_g116917;
				float4 break438_g116915 = Visual_Shader415_g116915;
				float4 appendResult439_g116915 = (float4(break438_g116915.x , break438_g116915.y , break438_g116915.z , ( break438_g116915.w * _DrynessSmoothnessValue )));
				float4 lerpResult427_g116915 = lerp( Visual_Shader415_g116915 , appendResult439_g116915 , Dryness_Mask329_g116915);
				#ifdef TVE_DRYNESS
				float4 staticSwitch426_g116915 = lerpResult427_g116915;
				#else
				float4 staticSwitch426_g116915 = Visual_Shader415_g116915;
				#endif
				half4 Final_Shader433_g116915 = staticSwitch426_g116915;
				float4 In_Shader3_g116918 = Final_Shader433_g116915;
				float4 In_Emissive3_g116918 = Out_Emissive4_g116917;
				float In_Grayscale3_g116918 = temp_output_280_12_g116915;
				float In_Luminosity3_g116918 = temp_output_280_15_g116915;
				float In_MultiMask3_g116918 = temp_output_280_11_g116915;
				float In_AlphaClip3_g116918 = Out_AlphaClip4_g116917;
				float In_AlphaFade3_g116918 = Out_AlphaFade4_g116917;
				float3 In_Translucency3_g116918 = Out_Translucency4_g116917;
				half Visual_Transmission416_g116915 = Out_Transmission4_g116917;
				float lerpResult421_g116915 = lerp( Visual_Transmission416_g116915 , ( Visual_Transmission416_g116915 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g116915);
				#ifdef TVE_DRYNESS
				float staticSwitch418_g116915 = lerpResult421_g116915;
				#else
				float staticSwitch418_g116915 = Visual_Transmission416_g116915;
				#endif
				half Final_Transmission425_g116915 = staticSwitch418_g116915;
				float In_Transmission3_g116918 = Final_Transmission425_g116915;
				float In_Thickness3_g116918 = Out_Thickness4_g116917;
				float In_Diffusion3_g116918 = Out_Diffusion4_g116917;
				Data3_g116918.Dummy = In_Dummy3_g116918;
				Data3_g116918.Albedo = In_Albedo3_g116918;
				Data3_g116918.AlbedoRaw = In_AlbedoRaw3_g116918;
				Data3_g116918.NormalTS = In_NormalTS3_g116918;
				Data3_g116918.NormalWS = In_NormalWS3_g116918;
				Data3_g116918.Shader = In_Shader3_g116918;
				Data3_g116918.Emissive= In_Emissive3_g116918;
				Data3_g116918.MultiMask = In_MultiMask3_g116918;
				Data3_g116918.Grayscale = In_Grayscale3_g116918;
				Data3_g116918.Luminosity = In_Luminosity3_g116918;
				Data3_g116918.AlphaClip = In_AlphaClip3_g116918;
				Data3_g116918.AlphaFade = In_AlphaFade3_g116918;
				Data3_g116918.Translucency = In_Translucency3_g116918;
				Data3_g116918.Transmission = In_Transmission3_g116918;
				Data3_g116918.Thickness = In_Thickness3_g116918;
				Data3_g116918.Diffusion = In_Diffusion3_g116918;
				TVEVisualData Data4_g116939 = Data3_g116918;
				float Out_Dummy4_g116939 = 0;
				float3 Out_Albedo4_g116939 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116939 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116939 = float2( 0,0 );
				float3 Out_NormalWS4_g116939 = float3( 0,0,0 );
				float4 Out_Shader4_g116939 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116939 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116939 = 0;
				float Out_Grayscale4_g116939 = 0;
				float Out_Luminosity4_g116939 = 0;
				float Out_AlphaClip4_g116939 = 0;
				float Out_AlphaFade4_g116939 = 0;
				float3 Out_Translucency4_g116939 = float3( 0,0,0 );
				float Out_Transmission4_g116939 = 0;
				float Out_Thickness4_g116939 = 0;
				float Out_Diffusion4_g116939 = 0;
				Out_Dummy4_g116939 = Data4_g116939.Dummy;
				Out_Albedo4_g116939 = Data4_g116939.Albedo;
				Out_AlbedoRaw4_g116939 = Data4_g116939.AlbedoRaw;
				Out_NormalTS4_g116939 = Data4_g116939.NormalTS;
				Out_NormalWS4_g116939 = Data4_g116939.NormalWS;
				Out_Shader4_g116939 = Data4_g116939.Shader;
				Out_Emissive4_g116939= Data4_g116939.Emissive;
				Out_MultiMask4_g116939 = Data4_g116939.MultiMask;
				Out_Grayscale4_g116939 = Data4_g116939.Grayscale;
				Out_Luminosity4_g116939= Data4_g116939.Luminosity;
				Out_AlphaClip4_g116939 = Data4_g116939.AlphaClip;
				Out_AlphaFade4_g116939 = Data4_g116939.AlphaFade;
				Out_Translucency4_g116939 = Data4_g116939.Translucency;
				Out_Transmission4_g116939 = Data4_g116939.Transmission;
				Out_Thickness4_g116939 = Data4_g116939.Thickness;
				Out_Diffusion4_g116939 = Data4_g116939.Diffusion;
				half3 Visual_Albedo127_g116938 = Out_Albedo4_g116939;
				float3 temp_output_622_0_g116938 = (_OverlayColor).rgb;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116942) = _OverlayAlbedoTex;
				float localFilterTexture19_g116971 = ( 0.0 );
				SamplerState SamplerDefault19_g116971 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g116971 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g116971 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g116971 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g116971 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g116971 = SamplerDefault19_g116971;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g116971 = SamplerDefault19_g116971;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g116971 = SamplerPoint19_g116971;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g116971 = SamplerLow19_g116971;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g116971 = SamplerMedium19_g116971;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g116971 = SamplerHigh19_g116971;
				#endif
				SamplerState Sampler238_g116942 = SS19_g116971;
				float4 temp_output_6_0_g116943 = _overlay_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g116943 = ( temp_output_6_0_g116943 + ( ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g116943 = temp_output_6_0_g116943;
				#endif
				half4 Overlay_Coords639_g116938 = staticSwitch14_g116943;
				float4 temp_output_37_0_g116942 = Overlay_Coords639_g116938;
				half4 Coords238_g116942 = temp_output_37_0_g116942;
				TVEModelData Data15_g116973 = Data16_g114321;
				float Out_Dummy15_g116973 = 0;
				float3 Out_PositionWS15_g116973 = float3( 0,0,0 );
				float3 Out_PositionWO15_g116973 = float3( 0,0,0 );
				float3 Out_PivotWS15_g116973 = float3( 0,0,0 );
				float3 Out_PivotWO15_g116973 = float3( 0,0,0 );
				float3 Out_NormalWS15_g116973 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g116973 = float3( 0,0,0 );
				float4 Out_VertexData15_g116973 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g116973 = float4( 0,0,0,0 );
				Out_Dummy15_g116973 = Data15_g116973.Dummy;
				Out_PositionWS15_g116973 = Data15_g116973.PositionWS;
				Out_PositionWO15_g116973 = Data15_g116973.PositionWO;
				Out_PivotWS15_g116973 = Data15_g116973.PivotWS;
				Out_PivotWO15_g116973 = Data15_g116973.PivotWO;
				Out_NormalWS15_g116973 = Data15_g116973.NormalWS;
				Out_ViewDirWS15_g116973 = Data15_g116973.ViewDirWS;
				Out_VertexData15_g116973 = Data15_g116973.VertexData;
				Out_BoundsData15_g116973 = Data15_g116973.BoundsData;
				half3 Model_PositionWO602_g116938 = Out_PositionWO15_g116973;
				float3 temp_output_279_0_g116942 = Model_PositionWO602_g116938;
				half3 WorldPosition238_g116942 = temp_output_279_0_g116942;
				half4 localSamplePlanar2D238_g116942 = SamplePlanar2D( Texture238_g116942 , Sampler238_g116942 , Coords238_g116942 , WorldPosition238_g116942 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116942) = _OverlayAlbedoTex;
				SamplerState Sampler246_g116942 = SS19_g116971;
				half4 Coords246_g116942 = temp_output_37_0_g116942;
				half3 WorldPosition246_g116942 = temp_output_279_0_g116942;
				half3 Model_NormalWS712_g116938 = Out_NormalWS15_g116973;
				float3 temp_output_280_0_g116942 = Model_NormalWS712_g116938;
				half3 WorldNormal246_g116942 = temp_output_280_0_g116942;
				half4 localSamplePlanar3D246_g116942 = SamplePlanar3D( Texture246_g116942 , Sampler246_g116942 , Coords246_g116942 , WorldPosition246_g116942 , WorldNormal246_g116942 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116942) = _OverlayAlbedoTex;
				SamplerState Sampler234_g116942 = SS19_g116971;
				float4 Coords234_g116942 = temp_output_37_0_g116942;
				float3 WorldPosition234_g116942 = temp_output_279_0_g116942;
				float4 localSampleStochastic2D234_g116942 = SampleStochastic2D( Texture234_g116942 , Sampler234_g116942 , Coords234_g116942 , WorldPosition234_g116942 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116942) = _OverlayAlbedoTex;
				SamplerState Sampler263_g116942 = SS19_g116971;
				half4 Coords263_g116942 = temp_output_37_0_g116942;
				half3 WorldPosition263_g116942 = temp_output_279_0_g116942;
				half3 WorldNormal263_g116942 = temp_output_280_0_g116942;
				half4 localSampleStochastic3D263_g116942 = SampleStochastic3D( Texture263_g116942 , Sampler263_g116942 , Coords263_g116942 , WorldPosition263_g116942 , WorldNormal263_g116942 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch676_g116938 = localSamplePlanar2D238_g116942;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch676_g116938 = localSamplePlanar3D246_g116942;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch676_g116938 = localSampleStochastic2D234_g116942;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch676_g116938 = localSampleStochastic3D263_g116942;
				#else
				float4 staticSwitch676_g116938 = localSamplePlanar2D238_g116942;
				#endif
				half3 Overlay_Albedo526_g116938 = (staticSwitch676_g116938).xyz;
				#ifdef TVE_OVERLAY_TEX
				float3 staticSwitch578_g116938 = ( temp_output_622_0_g116938 * Overlay_Albedo526_g116938 );
				#else
				float3 staticSwitch578_g116938 = temp_output_622_0_g116938;
				#endif
				float3 temp_output_6_0_g116949 = staticSwitch578_g116938;
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g116949 = ( temp_output_6_0_g116949 + ( _OverlayTextureMode * 0.0 ) );
				#else
				float3 staticSwitch14_g116949 = temp_output_6_0_g116949;
				#endif
				float3 temp_cast_34 = (0.0).xxx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116946) = _OverlayGlitterTexRT;
				SamplerState Sampler246_g116946 = sampler_Linear_Repeat;
				float4 appendResult863_g116938 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g116946 = appendResult863_g116938;
				half4 Coords246_g116946 = temp_output_37_0_g116946;
				float3 temp_output_279_0_g116946 = Model_PositionWO602_g116938;
				half3 WorldPosition246_g116946 = temp_output_279_0_g116946;
				float3 temp_output_280_0_g116946 = Model_NormalWS712_g116938;
				half3 WorldNormal246_g116946 = temp_output_280_0_g116946;
				half4 localSamplePlanar3D246_g116946 = SamplePlanar3D( Texture246_g116946 , Sampler246_g116946 , Coords246_g116946 , WorldPosition246_g116946 , WorldNormal246_g116946 );
				half Overlay_GlitterTex854_g116938 = (localSamplePlanar3D246_g116946).x;
				half3 Model_PositionWS879_g116938 = Out_PositionWS15_g116973;
				#ifdef TVE_OVERLAY_GLITTER
				float3 staticSwitch868_g116938 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g116938 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g116938 ) / _OverlayGlitterDistValue ) ) ) );
				#else
				float3 staticSwitch868_g116938 = temp_cast_34;
				#endif
				half3 Overlay_GlitterColor865_g116938 = staticSwitch868_g116938;
				half Overlay_TexMask908_g116938 = 1.0;
				float3 temp_output_739_21_g116938 = Out_NormalWS4_g116939;
				half3 Visual_NormalWS749_g116938 = temp_output_739_21_g116938;
				float clampResult17_g116959 = clamp( saturate( (Visual_NormalWS749_g116938).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g116958 = _OverlayProjRemap.x;
				float temp_output_10_0_g116958 = ( _OverlayProjRemap.y - temp_output_7_0_g116958 );
				float lerpResult842_g116938 = lerp( 1.0 , saturate( ( ( clampResult17_g116959 - temp_output_7_0_g116958 ) / ( temp_output_10_0_g116958 + 0.0001 ) ) ) , _OverlayProjValue);
				half Overlay_MaskProj457_g116938 = lerpResult842_g116938;
				float temp_output_739_15_g116938 = Out_Luminosity4_g116939;
				half Visual_Luminosity654_g116938 = temp_output_739_15_g116938;
				float clampResult17_g116961 = clamp( Visual_Luminosity654_g116938 , 0.0001 , 0.9999 );
				float temp_output_7_0_g116960 = _OverlayLumaRemap.x;
				float temp_output_10_0_g116960 = ( _OverlayLumaRemap.y - temp_output_7_0_g116960 );
				float lerpResult587_g116938 = lerp( 1.0 , saturate( ( ( clampResult17_g116961 - temp_output_7_0_g116960 ) / ( temp_output_10_0_g116960 + 0.0001 ) ) ) , _OverlayLumaValue);
				half Overlay_MaskLuma438_g116938 = lerpResult587_g116938;
				half Overlay_VertMask801_g116938 = 1.0;
				half Overlay_MaskNoise427_g116938 = 1.0;
				TVEGlobalData Data15_g116940 = Data204_g115912;
				float Out_Dummy15_g116940 = 0;
				float4 Out_CoatParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116940 = float4( 0,0,0,0 );
				Out_Dummy15_g116940 = Data15_g116940.Dummy;
				Out_CoatParams15_g116940 = Data15_g116940.CoatParams;
				Out_PaintParams15_g116940 = Data15_g116940.PaintParams;
				Out_GlowParams15_g116940 = Data15_g116940.GlowParams;
				Out_AtmoParams15_g116940= Data15_g116940.AtmoParams;
				Out_FadeParams15_g116940= Data15_g116940.FadeParams;
				Out_FormParams15_g116940 = Data15_g116940.FormParams;
				Out_LandParams15_g116940 = Data15_g116940.LandParams;
				Out_WindParams15_g116940 = Data15_g116940.WindParams;
				Out_PushParams15_g116940 = Data15_g116940.PushParams;
				half4 Global_AtmoParams516_g116938 = Out_AtmoParams15_g116940;
				#ifdef TVE_OVERLAY_ELEMENT
				float staticSwitch705_g116938 = ( (Global_AtmoParams516_g116938).z * TVE_IsEnabled );
				#else
				float staticSwitch705_g116938 = 1.0;
				#endif
				half Overlay_MaskGlobal429_g116938 = staticSwitch705_g116938;
				half Custom_Mask646_g116938 = 1.0;
				float temp_output_7_0_g116967 = _OverlayBlendRemap1.x;
				float temp_output_10_0_g116967 = ( _OverlayBlendRemap1.y - temp_output_7_0_g116967 );
				half Overlay_Mask494_g116938 = saturate( ( ( ( _OverlayIntensityValue * Overlay_TexMask908_g116938 * Overlay_MaskProj457_g116938 * Overlay_MaskLuma438_g116938 * Overlay_VertMask801_g116938 * Overlay_MaskNoise427_g116938 * Overlay_MaskGlobal429_g116938 * Custom_Mask646_g116938 ) - temp_output_7_0_g116967 ) / ( temp_output_10_0_g116967 + 0.0001 ) ) );
				float3 lerpResult467_g116938 = lerp( Visual_Albedo127_g116938 , ( staticSwitch14_g116949 + Overlay_GlitterColor865_g116938 ) , Overlay_Mask494_g116938);
				#ifdef TVE_OVERLAY
				float3 staticSwitch577_g116938 = lerpResult467_g116938;
				#else
				float3 staticSwitch577_g116938 = Visual_Albedo127_g116938;
				#endif
				half3 Final_Albedo493_g116938 = staticSwitch577_g116938;
				float3 In_Albedo3_g116941 = Final_Albedo493_g116938;
				float3 In_AlbedoRaw3_g116941 = Out_AlbedoRaw4_g116939;
				half2 Visual_NormalTS535_g116938 = Out_NormalTS4_g116939;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116944) = _OverlayNormalTex;
				float localFilterTexture29_g116972 = ( 0.0 );
				SamplerState SamplerDefault29_g116972 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g116972 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g116972 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g116972 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g116972 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g116972 = SamplerDefault29_g116972;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g116972 = SamplerDefault29_g116972;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g116972 = SamplerPoint29_g116972;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g116972 = SamplerLow29_g116972;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g116972 = SamplerMedium29_g116972;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g116972 = SamplerHigh29_g116972;
				#endif
				SamplerState Sampler238_g116944 = SS29_g116972;
				float4 temp_output_37_0_g116944 = Overlay_Coords639_g116938;
				half4 Coords238_g116944 = temp_output_37_0_g116944;
				float3 temp_output_279_0_g116944 = Model_PositionWO602_g116938;
				half3 WorldPosition238_g116944 = temp_output_279_0_g116944;
				half4 localSamplePlanar2D238_g116944 = SamplePlanar2D( Texture238_g116944 , Sampler238_g116944 , Coords238_g116944 , WorldPosition238_g116944 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116944) = _OverlayNormalTex;
				SamplerState Sampler246_g116944 = SS29_g116972;
				half4 Coords246_g116944 = temp_output_37_0_g116944;
				half3 WorldPosition246_g116944 = temp_output_279_0_g116944;
				float3 temp_output_280_0_g116944 = Model_NormalWS712_g116938;
				half3 WorldNormal246_g116944 = temp_output_280_0_g116944;
				half4 localSamplePlanar3D246_g116944 = SamplePlanar3D( Texture246_g116944 , Sampler246_g116944 , Coords246_g116944 , WorldPosition246_g116944 , WorldNormal246_g116944 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116944) = _OverlayNormalTex;
				SamplerState Sampler234_g116944 = SS29_g116972;
				float4 Coords234_g116944 = temp_output_37_0_g116944;
				float3 WorldPosition234_g116944 = temp_output_279_0_g116944;
				float4 localSampleStochastic2D234_g116944 = SampleStochastic2D( Texture234_g116944 , Sampler234_g116944 , Coords234_g116944 , WorldPosition234_g116944 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116944) = _OverlayNormalTex;
				SamplerState Sampler263_g116944 = SS29_g116972;
				half4 Coords263_g116944 = temp_output_37_0_g116944;
				half3 WorldPosition263_g116944 = temp_output_279_0_g116944;
				half3 WorldNormal263_g116944 = temp_output_280_0_g116944;
				half4 localSampleStochastic3D263_g116944 = SampleStochastic3D( Texture263_g116944 , Sampler263_g116944 , Coords263_g116944 , WorldPosition263_g116944 , WorldNormal263_g116944 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch686_g116938 = localSamplePlanar2D238_g116944;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch686_g116938 = localSamplePlanar3D246_g116944;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch686_g116938 = localSampleStochastic2D234_g116944;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch686_g116938 = localSampleStochastic3D263_g116944;
				#else
				float4 staticSwitch686_g116938 = localSamplePlanar2D238_g116944;
				#endif
				half4 Normal_Packed45_g116948 = staticSwitch686_g116938;
				float2 appendResult58_g116948 = (float2(( (Normal_Packed45_g116948).x * (Normal_Packed45_g116948).w ) , (Normal_Packed45_g116948).y));
				half2 Normal_Default50_g116948 = appendResult58_g116948;
				half2 Normal_ASTC41_g116948 = (Normal_Packed45_g116948).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g116948 = Normal_ASTC41_g116948;
				#else
				float2 staticSwitch38_g116948 = Normal_Default50_g116948;
				#endif
				half2 Normal_NO_DTX544_g116948 = (Normal_Packed45_g116948).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g116948 = Normal_NO_DTX544_g116948;
				#else
				float2 staticSwitch37_g116948 = staticSwitch38_g116948;
				#endif
				half2 Normal_Planar45_g116947 = (staticSwitch37_g116948*2.0 + -1.0);
				float2 break71_g116947 = Normal_Planar45_g116947;
				float3 appendResult72_g116947 = (float3(break71_g116947.x , 0.0 , break71_g116947.y));
				half2 Overlay_Normal528_g116938 = (mul( ase_worldToTangent, appendResult72_g116947 )).xy;
				#ifdef TVE_OVERLAY_TEX
				float2 staticSwitch579_g116938 = Overlay_Normal528_g116938;
				#else
				float2 staticSwitch579_g116938 = Visual_NormalTS535_g116938;
				#endif
				float2 lerpResult551_g116938 = lerp( Visual_NormalTS535_g116938 , ( staticSwitch579_g116938 * _OverlayNormalValue ) , Overlay_Mask494_g116938);
				#ifdef TVE_OVERLAY
				float2 staticSwitch583_g116938 = lerpResult551_g116938;
				#else
				float2 staticSwitch583_g116938 = Visual_NormalTS535_g116938;
				#endif
				half2 Final_NormalTS499_g116938 = staticSwitch583_g116938;
				float2 In_NormalTS3_g116941 = Final_NormalTS499_g116938;
				float3 In_NormalWS3_g116941 = temp_output_739_21_g116938;
				half4 Visual_Masks536_g116938 = Out_Shader4_g116939;
				float4 appendResult585_g116938 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
				float4 lerpResult584_g116938 = lerp( Visual_Masks536_g116938 , appendResult585_g116938 , Overlay_Mask494_g116938);
				#ifdef TVE_OVERLAY
				float4 staticSwitch586_g116938 = lerpResult584_g116938;
				#else
				float4 staticSwitch586_g116938 = Visual_Masks536_g116938;
				#endif
				half4 Final_Masks482_g116938 = staticSwitch586_g116938;
				float4 In_Shader3_g116941 = Final_Masks482_g116938;
				float4 In_Emissive3_g116941 = Out_Emissive4_g116939;
				float temp_output_739_12_g116938 = Out_Grayscale4_g116939;
				float In_Grayscale3_g116941 = temp_output_739_12_g116938;
				float In_Luminosity3_g116941 = temp_output_739_15_g116938;
				float In_MultiMask3_g116941 = Out_MultiMask4_g116939;
				float In_AlphaClip3_g116941 = Out_AlphaClip4_g116939;
				float In_AlphaFade3_g116941 = Out_AlphaFade4_g116939;
				float3 In_Translucency3_g116941 = Out_Translucency4_g116939;
				half Visual_Transmission699_g116938 = Out_Transmission4_g116939;
				float lerpResult746_g116938 = lerp( Visual_Transmission699_g116938 , ( Visual_Transmission699_g116938 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g116938 * Overlay_MaskNoise427_g116938 * Overlay_MaskGlobal429_g116938 ));
				#ifdef TVE_OVERLAY
				float staticSwitch703_g116938 = lerpResult746_g116938;
				#else
				float staticSwitch703_g116938 = Visual_Transmission699_g116938;
				#endif
				half Final_Transmission702_g116938 = staticSwitch703_g116938;
				float In_Transmission3_g116941 = Final_Transmission702_g116938;
				float In_Thickness3_g116941 = Out_Thickness4_g116939;
				float In_Diffusion3_g116941 = Out_Diffusion4_g116939;
				Data3_g116941.Dummy = In_Dummy3_g116941;
				Data3_g116941.Albedo = In_Albedo3_g116941;
				Data3_g116941.AlbedoRaw = In_AlbedoRaw3_g116941;
				Data3_g116941.NormalTS = In_NormalTS3_g116941;
				Data3_g116941.NormalWS = In_NormalWS3_g116941;
				Data3_g116941.Shader = In_Shader3_g116941;
				Data3_g116941.Emissive= In_Emissive3_g116941;
				Data3_g116941.MultiMask = In_MultiMask3_g116941;
				Data3_g116941.Grayscale = In_Grayscale3_g116941;
				Data3_g116941.Luminosity = In_Luminosity3_g116941;
				Data3_g116941.AlphaClip = In_AlphaClip3_g116941;
				Data3_g116941.AlphaFade = In_AlphaFade3_g116941;
				Data3_g116941.Translucency = In_Translucency3_g116941;
				Data3_g116941.Transmission = In_Transmission3_g116941;
				Data3_g116941.Thickness = In_Thickness3_g116941;
				Data3_g116941.Diffusion = In_Diffusion3_g116941;
				TVEVisualData Data4_g116975 = Data3_g116941;
				float Out_Dummy4_g116975 = 0;
				float3 Out_Albedo4_g116975 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116975 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116975 = float2( 0,0 );
				float3 Out_NormalWS4_g116975 = float3( 0,0,0 );
				float4 Out_Shader4_g116975 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116975 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116975 = 0;
				float Out_Grayscale4_g116975 = 0;
				float Out_Luminosity4_g116975 = 0;
				float Out_AlphaClip4_g116975 = 0;
				float Out_AlphaFade4_g116975 = 0;
				float3 Out_Translucency4_g116975 = float3( 0,0,0 );
				float Out_Transmission4_g116975 = 0;
				float Out_Thickness4_g116975 = 0;
				float Out_Diffusion4_g116975 = 0;
				Out_Dummy4_g116975 = Data4_g116975.Dummy;
				Out_Albedo4_g116975 = Data4_g116975.Albedo;
				Out_AlbedoRaw4_g116975 = Data4_g116975.AlbedoRaw;
				Out_NormalTS4_g116975 = Data4_g116975.NormalTS;
				Out_NormalWS4_g116975 = Data4_g116975.NormalWS;
				Out_Shader4_g116975 = Data4_g116975.Shader;
				Out_Emissive4_g116975= Data4_g116975.Emissive;
				Out_MultiMask4_g116975 = Data4_g116975.MultiMask;
				Out_Grayscale4_g116975 = Data4_g116975.Grayscale;
				Out_Luminosity4_g116975= Data4_g116975.Luminosity;
				Out_AlphaClip4_g116975 = Data4_g116975.AlphaClip;
				Out_AlphaFade4_g116975 = Data4_g116975.AlphaFade;
				Out_Translucency4_g116975 = Data4_g116975.Translucency;
				Out_Transmission4_g116975 = Data4_g116975.Transmission;
				Out_Thickness4_g116975 = Data4_g116975.Thickness;
				Out_Diffusion4_g116975 = Data4_g116975.Diffusion;
				half3 Visual_Albedo127_g116974 = Out_Albedo4_g116975;
				TVEGlobalData Data15_g116980 = Data204_g115912;
				float Out_Dummy15_g116980 = 0;
				float4 Out_CoatParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116980 = float4( 0,0,0,0 );
				Out_Dummy15_g116980 = Data15_g116980.Dummy;
				Out_CoatParams15_g116980 = Data15_g116980.CoatParams;
				Out_PaintParams15_g116980 = Data15_g116980.PaintParams;
				Out_GlowParams15_g116980 = Data15_g116980.GlowParams;
				Out_AtmoParams15_g116980= Data15_g116980.AtmoParams;
				Out_FadeParams15_g116980= Data15_g116980.FadeParams;
				Out_FormParams15_g116980 = Data15_g116980.FormParams;
				Out_LandParams15_g116980 = Data15_g116980.LandParams;
				Out_WindParams15_g116980 = Data15_g116980.WindParams;
				Out_PushParams15_g116980 = Data15_g116980.PushParams;
				half4 Global_AtmoParams516_g116974 = Out_AtmoParams15_g116980;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch663_g116974 = ( (Global_AtmoParams516_g116974).y * TVE_IsEnabled );
				#else
				float staticSwitch663_g116974 = 1.0;
				#endif
				half Global_Wetness429_g116974 = staticSwitch663_g116974;
				half Wetness_Value1042_g116974 = ( _WetnessIntensityValue * Global_Wetness429_g116974 );
				half Wetness_VertMask1024_g116974 = 1.0;
				float temp_output_1043_0_g116974 = ( Wetness_Value1042_g116974 * Wetness_VertMask1024_g116974 );
				half Wetness_Mask866_g116974 = temp_output_1043_0_g116974;
				half Water_VertMask1094_g116974 = 1.0;
				half4 Visual_Masks536_g116974 = Out_Shader4_g116975;
				float lerpResult1013_g116974 = lerp( 1.0 , (Visual_Masks536_g116974).z , _WetnessWaterBaseValue);
				half Water_HeightMask782_g116974 = lerpResult1013_g116974;
				float clampResult17_g116989 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g116974 * Water_VertMask1094_g116974 ) - Water_HeightMask782_g116974 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g116990 = _WetnessWaterBlendRemap.x;
				float temp_output_10_0_g116990 = ( _WetnessWaterBlendRemap.y - temp_output_7_0_g116990 );
				TVEModelData Data15_g116988 = Data16_g114321;
				float Out_Dummy15_g116988 = 0;
				float3 Out_PositionWS15_g116988 = float3( 0,0,0 );
				float3 Out_PositionWO15_g116988 = float3( 0,0,0 );
				float3 Out_PivotWS15_g116988 = float3( 0,0,0 );
				float3 Out_PivotWO15_g116988 = float3( 0,0,0 );
				float3 Out_NormalWS15_g116988 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g116988 = float3( 0,0,0 );
				float4 Out_VertexData15_g116988 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g116988 = float4( 0,0,0,0 );
				Out_Dummy15_g116988 = Data15_g116988.Dummy;
				Out_PositionWS15_g116988 = Data15_g116988.PositionWS;
				Out_PositionWO15_g116988 = Data15_g116988.PositionWO;
				Out_PivotWS15_g116988 = Data15_g116988.PivotWS;
				Out_PivotWO15_g116988 = Data15_g116988.PivotWO;
				Out_NormalWS15_g116988 = Data15_g116988.NormalWS;
				Out_ViewDirWS15_g116988 = Data15_g116988.ViewDirWS;
				Out_VertexData15_g116988 = Data15_g116988.VertexData;
				Out_BoundsData15_g116988 = Data15_g116988.BoundsData;
				half3 Model_NormalWS798_g116974 = Out_NormalWS15_g116988;
				float temp_output_786_0_g116974 = saturate( (Model_NormalWS798_g116974).y );
				half Wetness_ProjMask790_g116974 = temp_output_786_0_g116974;
				half Water_Mask760_g116974 = ( saturate( ( ( clampResult17_g116989 - temp_output_7_0_g116990 ) / ( temp_output_10_0_g116990 + 0.0001 ) ) ) * Wetness_ProjMask790_g116974 );
				float3 lerpResult918_g116974 = lerp( Visual_Albedo127_g116974 , ( Visual_Albedo127_g116974 * (_WetnessWaterColor).rgb ) , Water_Mask760_g116974);
				#ifdef TVE_WETNESS_WATER
				float3 staticSwitch946_g116974 = lerpResult918_g116974;
				#else
				float3 staticSwitch946_g116974 = Visual_Albedo127_g116974;
				#endif
				float3 lerpResult768_g116974 = lerp( staticSwitch946_g116974 , ( staticSwitch946_g116974 * staticSwitch946_g116974 ) , _WetnessContrastValue);
				float3 lerpResult651_g116974 = lerp( Visual_Albedo127_g116974 , lerpResult768_g116974 , Wetness_Mask866_g116974);
				#ifdef TVE_WETNESS
				float3 staticSwitch577_g116974 = lerpResult651_g116974;
				#else
				float3 staticSwitch577_g116974 = Visual_Albedo127_g116974;
				#endif
				half3 Final_Albedo493_g116974 = staticSwitch577_g116974;
				float3 In_Albedo3_g116976 = Final_Albedo493_g116974;
				float3 In_AlbedoRaw3_g116976 = Out_AlbedoRaw4_g116975;
				half2 Visual_Normal535_g116974 = Out_NormalTS4_g116975;
				float lerpResult877_g116974 = lerp( 1.0 , 0.0 , ( Water_Mask760_g116974 * Water_Mask760_g116974 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch957_g116974 = ( Visual_Normal535_g116974 * lerpResult877_g116974 );
				#else
				float2 staticSwitch957_g116974 = Visual_Normal535_g116974;
				#endif
				float2 temp_cast_35 = (0.0).xx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116986) = _WetnessDropsTexRT;
				SamplerState Sampler238_g116986 = sampler_Linear_Repeat_Aniso8;
				float4 appendResult924_g116974 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g116986 = appendResult924_g116974;
				half4 Coords238_g116986 = temp_output_37_0_g116986;
				half3 Model_PositionWO602_g116974 = Out_PositionWO15_g116988;
				float3 temp_output_279_0_g116986 = Model_PositionWO602_g116974;
				half3 WorldPosition238_g116986 = temp_output_279_0_g116986;
				half4 localSamplePlanar2D238_g116986 = SamplePlanar2D( Texture238_g116986 , Sampler238_g116986 , Coords238_g116986 , WorldPosition238_g116986 );
				float4 temp_output_1010_0_g116974 = localSamplePlanar2D238_g116986;
				half2 Rain_DropsNormal919_g116974 = (temp_output_1010_0_g116974).zw;
				float2 temp_output_903_0_g116974 = (Rain_DropsNormal919_g116974*2.0 + -1.0);
				half2 Rain_RingsNormal713_g116974 = (temp_output_1010_0_g116974).xy;
				float2 lerpResult904_g116974 = lerp( temp_output_903_0_g116974 , (Rain_RingsNormal713_g116974*2.0 + -1.0) , ( Water_Mask760_g116974 * Water_Mask760_g116974 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch960_g116974 = lerpResult904_g116974;
				#else
				float2 staticSwitch960_g116974 = temp_output_903_0_g116974;
				#endif
				half2 Rain_Drops1002_g116974 = ( staticSwitch960_g116974 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
				half3 Model_PositionWS823_g116974 = Out_PositionWS15_g116988;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch949_g116974 = ( (Global_AtmoParams516_g116974).w * TVE_IsEnabled );
				#else
				float staticSwitch949_g116974 = 1.0;
				#endif
				half Global_Rain955_g116974 = staticSwitch949_g116974;
				half Rain_Value1067_g116974 = Global_Rain955_g116974;
				half Rain_VertMask1108_g116974 = 1.0;
				half Rain_Mask999_g116974 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g116974 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g116974 * Rain_VertMask1108_g116974 );
				half2 Normal_Planar45_g116985 = ( Rain_Drops1002_g116974 * Rain_Mask999_g116974 * Wetness_ProjMask790_g116974 );
				float2 break71_g116985 = Normal_Planar45_g116985;
				float3 appendResult72_g116985 = (float3(break71_g116985.x , 0.0 , break71_g116985.y));
				half2 Wetness_Normal526_g116974 = (mul( ase_worldToTangent, appendResult72_g116985 )).xy;
				#ifdef TVE_WETNESS_DROPS
				float2 staticSwitch583_g116974 = Wetness_Normal526_g116974;
				#else
				float2 staticSwitch583_g116974 = temp_cast_35;
				#endif
				#ifdef TVE_WETNESS
				float2 staticSwitch774_g116974 = ( staticSwitch957_g116974 + staticSwitch583_g116974 );
				#else
				float2 staticSwitch774_g116974 = Visual_Normal535_g116974;
				#endif
				half2 Final_Normal499_g116974 = staticSwitch774_g116974;
				float2 In_NormalTS3_g116976 = Final_Normal499_g116974;
				float3 In_NormalWS3_g116976 = Out_NormalWS4_g116975;
				float4 break658_g116974 = Visual_Masks536_g116974;
				float temp_output_935_0_g116974 = ( Wetness_Mask866_g116974 * _WetnessSmoothnessValue );
				float lerpResult941_g116974 = lerp( temp_output_935_0_g116974 , 2.0 , Water_Mask760_g116974);
				#ifdef TVE_WETNESS_WATER
				float staticSwitch959_g116974 = lerpResult941_g116974;
				#else
				float staticSwitch959_g116974 = temp_output_935_0_g116974;
				#endif
				float4 appendResult661_g116974 = (float4(break658_g116974.x , break658_g116974.y , break658_g116974.z , saturate( ( break658_g116974.w + staticSwitch959_g116974 ) )));
				#ifdef TVE_WETNESS
				float4 staticSwitch586_g116974 = appendResult661_g116974;
				#else
				float4 staticSwitch586_g116974 = Visual_Masks536_g116974;
				#endif
				half4 Final_Masks482_g116974 = staticSwitch586_g116974;
				float4 In_Shader3_g116976 = Final_Masks482_g116974;
				float4 In_Emissive3_g116976 = Out_Emissive4_g116975;
				float In_Grayscale3_g116976 = Out_Grayscale4_g116975;
				float In_Luminosity3_g116976 = Out_Luminosity4_g116975;
				float In_MultiMask3_g116976 = Out_MultiMask4_g116975;
				float In_AlphaClip3_g116976 = Out_AlphaClip4_g116975;
				float In_AlphaFade3_g116976 = Out_AlphaFade4_g116975;
				float3 In_Translucency3_g116976 = Out_Translucency4_g116975;
				float In_Transmission3_g116976 = Out_Transmission4_g116975;
				float In_Thickness3_g116976 = Out_Thickness4_g116975;
				float In_Diffusion3_g116976 = Out_Diffusion4_g116975;
				Data3_g116976.Dummy = In_Dummy3_g116976;
				Data3_g116976.Albedo = In_Albedo3_g116976;
				Data3_g116976.AlbedoRaw = In_AlbedoRaw3_g116976;
				Data3_g116976.NormalTS = In_NormalTS3_g116976;
				Data3_g116976.NormalWS = In_NormalWS3_g116976;
				Data3_g116976.Shader = In_Shader3_g116976;
				Data3_g116976.Emissive= In_Emissive3_g116976;
				Data3_g116976.MultiMask = In_MultiMask3_g116976;
				Data3_g116976.Grayscale = In_Grayscale3_g116976;
				Data3_g116976.Luminosity = In_Luminosity3_g116976;
				Data3_g116976.AlphaClip = In_AlphaClip3_g116976;
				Data3_g116976.AlphaFade = In_AlphaFade3_g116976;
				Data3_g116976.Translucency = In_Translucency3_g116976;
				Data3_g116976.Transmission = In_Transmission3_g116976;
				Data3_g116976.Thickness = In_Thickness3_g116976;
				Data3_g116976.Diffusion = In_Diffusion3_g116976;
				TVEVisualData Data4_g117012 = Data3_g116976;
				float Out_Dummy4_g117012 = 0;
				float3 Out_Albedo4_g117012 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g117012 = float3( 0,0,0 );
				float2 Out_NormalTS4_g117012 = float2( 0,0 );
				float3 Out_NormalWS4_g117012 = float3( 0,0,0 );
				float4 Out_Shader4_g117012 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g117012 = float4( 0,0,0,0 );
				float Out_MultiMask4_g117012 = 0;
				float Out_Grayscale4_g117012 = 0;
				float Out_Luminosity4_g117012 = 0;
				float Out_AlphaClip4_g117012 = 0;
				float Out_AlphaFade4_g117012 = 0;
				float3 Out_Translucency4_g117012 = float3( 0,0,0 );
				float Out_Transmission4_g117012 = 0;
				float Out_Thickness4_g117012 = 0;
				float Out_Diffusion4_g117012 = 0;
				Out_Dummy4_g117012 = Data4_g117012.Dummy;
				Out_Albedo4_g117012 = Data4_g117012.Albedo;
				Out_AlbedoRaw4_g117012 = Data4_g117012.AlbedoRaw;
				Out_NormalTS4_g117012 = Data4_g117012.NormalTS;
				Out_NormalWS4_g117012 = Data4_g117012.NormalWS;
				Out_Shader4_g117012 = Data4_g117012.Shader;
				Out_Emissive4_g117012= Data4_g117012.Emissive;
				Out_MultiMask4_g117012 = Data4_g117012.MultiMask;
				Out_Grayscale4_g117012 = Data4_g117012.Grayscale;
				Out_Luminosity4_g117012= Data4_g117012.Luminosity;
				Out_AlphaClip4_g117012 = Data4_g117012.AlphaClip;
				Out_AlphaFade4_g117012 = Data4_g117012.AlphaFade;
				Out_Translucency4_g117012 = Data4_g117012.Translucency;
				Out_Transmission4_g117012 = Data4_g117012.Transmission;
				Out_Thickness4_g117012 = Data4_g117012.Thickness;
				Out_Diffusion4_g117012 = Data4_g117012.Diffusion;
				float3 temp_output_297_0_g117003 = Out_Albedo4_g117012;
				float3 In_Albedo3_g117013 = temp_output_297_0_g117003;
				float3 temp_output_297_23_g117003 = Out_AlbedoRaw4_g117012;
				float3 In_AlbedoRaw3_g117013 = temp_output_297_23_g117003;
				float2 In_NormalTS3_g117013 = Out_NormalTS4_g117012;
				float3 In_NormalWS3_g117013 = Out_NormalWS4_g117012;
				float4 In_Shader3_g117013 = Out_Shader4_g117012;
				float4 temp_cast_36 = (0.0).xxxx;
				half4 Visual_Emissive255_g117003 = Out_Emissive4_g117012;
				half Emissive_MeshMask221_g117003 = 1.0;
				half Emissive_Mask103_g117003 = 1.0;
				float temp_output_279_0_g117003 = ( Emissive_MeshMask221_g117003 * Emissive_Mask103_g117003 );
				float3 appendResult293_g117003 = (float3(temp_output_279_0_g117003 , temp_output_279_0_g117003 , temp_output_279_0_g117003));
				half3 Local_EmissiveColor278_g117003 = appendResult293_g117003;
				float3 temp_cast_37 = (1.0).xxx;
				TVEGlobalData Data15_g117004 = Data204_g115912;
				float Out_Dummy15_g117004 = 0;
				float4 Out_CoatParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g117004 = float4( 0,0,0,0 );
				Out_Dummy15_g117004 = Data15_g117004.Dummy;
				Out_CoatParams15_g117004 = Data15_g117004.CoatParams;
				Out_PaintParams15_g117004 = Data15_g117004.PaintParams;
				Out_GlowParams15_g117004 = Data15_g117004.GlowParams;
				Out_AtmoParams15_g117004= Data15_g117004.AtmoParams;
				Out_FadeParams15_g117004= Data15_g117004.FadeParams;
				Out_FormParams15_g117004 = Data15_g117004.FormParams;
				Out_LandParams15_g117004 = Data15_g117004.LandParams;
				Out_WindParams15_g117004 = Data15_g117004.WindParams;
				Out_PushParams15_g117004 = Data15_g117004.PushParams;
				half4 Global_GlowParams179_g117003 = Out_GlowParams15_g117004;
				float3 lerpResult299_g117003 = lerp( float3( 1,1,1 ) , (Global_GlowParams179_g117003).xyz , TVE_IsEnabled);
				#ifdef TVE_EMISSIVE_ELEMENT
				float3 staticSwitch228_g117003 = lerpResult299_g117003;
				#else
				float3 staticSwitch228_g117003 = temp_cast_37;
				#endif
				half3 Emissive_GlobalMask248_g117003 = staticSwitch228_g117003;
				half3 Visual_AlbedoRaw306_g117003 = temp_output_297_23_g117003;
				float3 lerpResult307_g117003 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g117003 , _EmissiveColorMode);
				half3 Local_EmissiveValue88_g117003 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g117003 * lerpResult307_g117003 );
				half3 Emissive_Blend260_g117003 = ( ( (Visual_Emissive255_g117003).xyz * Local_EmissiveColor278_g117003 ) * Local_EmissiveValue88_g117003 );
				float3 temp_output_3_0_g117017 = Emissive_Blend260_g117003;
				float temp_output_15_0_g117017 = _emissive_power_value;
				float3 temp_output_23_0_g117017 = ( temp_output_3_0_g117017 * temp_output_15_0_g117017 );
				half Local_EmissiveMask294_g117003 = temp_output_279_0_g117003;
				float4 appendResult295_g117003 = (float4(temp_output_23_0_g117017 , Local_EmissiveMask294_g117003));
				#ifdef TVE_EMISSIVE
				float4 staticSwitch129_g117003 = appendResult295_g117003;
				#else
				float4 staticSwitch129_g117003 = temp_cast_36;
				#endif
				half4 Final_Emissive184_g117003 = staticSwitch129_g117003;
				float4 In_Emissive3_g117013 = Final_Emissive184_g117003;
				float In_Grayscale3_g117013 = Out_Grayscale4_g117012;
				float In_Luminosity3_g117013 = Out_Luminosity4_g117012;
				float temp_output_297_11_g117003 = Out_MultiMask4_g117012;
				float In_MultiMask3_g117013 = temp_output_297_11_g117003;
				float In_AlphaClip3_g117013 = Out_AlphaClip4_g117012;
				float In_AlphaFade3_g117013 = Out_AlphaFade4_g117012;
				float3 In_Translucency3_g117013 = Out_Translucency4_g117012;
				float In_Transmission3_g117013 = Out_Transmission4_g117012;
				float In_Thickness3_g117013 = Out_Thickness4_g117012;
				float In_Diffusion3_g117013 = Out_Diffusion4_g117012;
				Data3_g117013.Dummy = In_Dummy3_g117013;
				Data3_g117013.Albedo = In_Albedo3_g117013;
				Data3_g117013.AlbedoRaw = In_AlbedoRaw3_g117013;
				Data3_g117013.NormalTS = In_NormalTS3_g117013;
				Data3_g117013.NormalWS = In_NormalWS3_g117013;
				Data3_g117013.Shader = In_Shader3_g117013;
				Data3_g117013.Emissive= In_Emissive3_g117013;
				Data3_g117013.MultiMask = In_MultiMask3_g117013;
				Data3_g117013.Grayscale = In_Grayscale3_g117013;
				Data3_g117013.Luminosity = In_Luminosity3_g117013;
				Data3_g117013.AlphaClip = In_AlphaClip3_g117013;
				Data3_g117013.AlphaFade = In_AlphaFade3_g117013;
				Data3_g117013.Translucency = In_Translucency3_g117013;
				Data3_g117013.Transmission = In_Transmission3_g117013;
				Data3_g117013.Thickness = In_Thickness3_g117013;
				Data3_g117013.Diffusion = In_Diffusion3_g117013;
				TVEVisualData Data4_g117029 = Data3_g117013;
				float Out_Dummy4_g117029 = 0;
				float3 Out_Albedo4_g117029 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g117029 = float3( 0,0,0 );
				float2 Out_NormalTS4_g117029 = float2( 0,0 );
				float3 Out_NormalWS4_g117029 = float3( 0,0,0 );
				float4 Out_Shader4_g117029 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g117029 = float4( 0,0,0,0 );
				float Out_MultiMask4_g117029 = 0;
				float Out_Grayscale4_g117029 = 0;
				float Out_Luminosity4_g117029 = 0;
				float Out_AlphaClip4_g117029 = 0;
				float Out_AlphaFade4_g117029 = 0;
				float3 Out_Translucency4_g117029 = float3( 0,0,0 );
				float Out_Transmission4_g117029 = 0;
				float Out_Thickness4_g117029 = 0;
				float Out_Diffusion4_g117029 = 0;
				Out_Dummy4_g117029 = Data4_g117029.Dummy;
				Out_Albedo4_g117029 = Data4_g117029.Albedo;
				Out_AlbedoRaw4_g117029 = Data4_g117029.AlbedoRaw;
				Out_NormalTS4_g117029 = Data4_g117029.NormalTS;
				Out_NormalWS4_g117029 = Data4_g117029.NormalWS;
				Out_Shader4_g117029 = Data4_g117029.Shader;
				Out_Emissive4_g117029= Data4_g117029.Emissive;
				Out_MultiMask4_g117029 = Data4_g117029.MultiMask;
				Out_Grayscale4_g117029 = Data4_g117029.Grayscale;
				Out_Luminosity4_g117029= Data4_g117029.Luminosity;
				Out_AlphaClip4_g117029 = Data4_g117029.AlphaClip;
				Out_AlphaFade4_g117029 = Data4_g117029.AlphaFade;
				Out_Translucency4_g117029 = Data4_g117029.Translucency;
				Out_Transmission4_g117029 = Data4_g117029.Transmission;
				Out_Thickness4_g117029 = Data4_g117029.Thickness;
				Out_Diffusion4_g117029 = Data4_g117029.Diffusion;
				float3 In_Albedo3_g117019 = Out_Albedo4_g117029;
				float3 In_AlbedoRaw3_g117019 = Out_AlbedoRaw4_g117029;
				float2 In_NormalTS3_g117019 = Out_NormalTS4_g117029;
				float3 In_NormalWS3_g117019 = Out_NormalWS4_g117029;
				float4 In_Shader3_g117019 = Out_Shader4_g117029;
				float4 In_Emissive3_g117019 = Out_Emissive4_g117029;
				float In_Grayscale3_g117019 = Out_Grayscale4_g117029;
				float In_Luminosity3_g117019 = Out_Luminosity4_g117029;
				float temp_output_836_11_g117018 = Out_MultiMask4_g117029;
				float In_MultiMask3_g117019 = temp_output_836_11_g117018;
				half Visual_AlphaClip667_g117018 = Out_AlphaClip4_g117029;
				TVEGlobalData Data15_g117028 = Data204_g115912;
				float Out_Dummy15_g117028 = 0;
				float4 Out_CoatParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g117028 = float4( 0,0,0,0 );
				Out_Dummy15_g117028 = Data15_g117028.Dummy;
				Out_CoatParams15_g117028 = Data15_g117028.CoatParams;
				Out_PaintParams15_g117028 = Data15_g117028.PaintParams;
				Out_GlowParams15_g117028 = Data15_g117028.GlowParams;
				Out_AtmoParams15_g117028= Data15_g117028.AtmoParams;
				Out_FadeParams15_g117028= Data15_g117028.FadeParams;
				Out_FormParams15_g117028 = Data15_g117028.FormParams;
				Out_LandParams15_g117028 = Data15_g117028.LandParams;
				Out_WindParams15_g117028 = Data15_g117028.WindParams;
				Out_PushParams15_g117028 = Data15_g117028.PushParams;
				half4 Global_FadeParams516_g117018 = Out_FadeParams15_g117028;
				#ifdef TVE_CUTOUT_ELEMENT
				float staticSwitch663_g117018 = saturate( (Global_FadeParams516_g117018).w );
				#else
				float staticSwitch663_g117018 = 1.0;
				#endif
				half Local_GlobalMask429_g117018 = staticSwitch663_g117018;
				half Local_AlphaMask814_g117018 = 1.0;
				half Local_NoiseMask678_g117018 = 1.0;
				half Local_VertMask766_g117018 = 1.0;
				half Local_MultiMask685_g117018 = 1.0;
				float lerpResult728_g117018 = lerp( Visual_AlphaClip667_g117018 , min( Visual_AlphaClip667_g117018 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g117018 ) - ( Local_AlphaMask814_g117018 * Local_NoiseMask678_g117018 * Local_VertMask766_g117018 ) ) ) ) , Local_MultiMask685_g117018);
				half Local_AlphaClip784_g117018 = lerpResult728_g117018;
				#ifdef TVE_CUTOUT
				float staticSwitch577_g117018 = Local_AlphaClip784_g117018;
				#else
				float staticSwitch577_g117018 = Visual_AlphaClip667_g117018;
				#endif
				half Final_AlphaClip795_g117018 = staticSwitch577_g117018;
				float In_AlphaClip3_g117019 = Final_AlphaClip795_g117018;
				float In_AlphaFade3_g117019 = Out_AlphaFade4_g117029;
				float3 In_Translucency3_g117019 = Out_Translucency4_g117029;
				float In_Transmission3_g117019 = Out_Transmission4_g117029;
				float In_Thickness3_g117019 = Out_Thickness4_g117029;
				float In_Diffusion3_g117019 = Out_Diffusion4_g117029;
				Data3_g117019.Dummy = In_Dummy3_g117019;
				Data3_g117019.Albedo = In_Albedo3_g117019;
				Data3_g117019.AlbedoRaw = In_AlbedoRaw3_g117019;
				Data3_g117019.NormalTS = In_NormalTS3_g117019;
				Data3_g117019.NormalWS = In_NormalWS3_g117019;
				Data3_g117019.Shader = In_Shader3_g117019;
				Data3_g117019.Emissive= In_Emissive3_g117019;
				Data3_g117019.MultiMask = In_MultiMask3_g117019;
				Data3_g117019.Grayscale = In_Grayscale3_g117019;
				Data3_g117019.Luminosity = In_Luminosity3_g117019;
				Data3_g117019.AlphaClip = In_AlphaClip3_g117019;
				Data3_g117019.AlphaFade = In_AlphaFade3_g117019;
				Data3_g117019.Translucency = In_Translucency3_g117019;
				Data3_g117019.Transmission = In_Transmission3_g117019;
				Data3_g117019.Thickness = In_Thickness3_g117019;
				Data3_g117019.Diffusion = In_Diffusion3_g117019;
				TVEVisualData Data4_g117042 = Data3_g117019;
				float Out_Dummy4_g117042 = 0;
				float3 Out_Albedo4_g117042 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g117042 = float3( 0,0,0 );
				float2 Out_NormalTS4_g117042 = float2( 0,0 );
				float3 Out_NormalWS4_g117042 = float3( 0,0,0 );
				float4 Out_Shader4_g117042 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g117042 = float4( 0,0,0,0 );
				float Out_MultiMask4_g117042 = 0;
				float Out_Grayscale4_g117042 = 0;
				float Out_Luminosity4_g117042 = 0;
				float Out_AlphaClip4_g117042 = 0;
				float Out_AlphaFade4_g117042 = 0;
				float3 Out_Translucency4_g117042 = float3( 0,0,0 );
				float Out_Transmission4_g117042 = 0;
				float Out_Thickness4_g117042 = 0;
				float Out_Diffusion4_g117042 = 0;
				Out_Dummy4_g117042 = Data4_g117042.Dummy;
				Out_Albedo4_g117042 = Data4_g117042.Albedo;
				Out_AlbedoRaw4_g117042 = Data4_g117042.AlbedoRaw;
				Out_NormalTS4_g117042 = Data4_g117042.NormalTS;
				Out_NormalWS4_g117042 = Data4_g117042.NormalWS;
				Out_Shader4_g117042 = Data4_g117042.Shader;
				Out_Emissive4_g117042= Data4_g117042.Emissive;
				Out_MultiMask4_g117042 = Data4_g117042.MultiMask;
				Out_Grayscale4_g117042 = Data4_g117042.Grayscale;
				Out_Luminosity4_g117042= Data4_g117042.Luminosity;
				Out_AlphaClip4_g117042 = Data4_g117042.AlphaClip;
				Out_AlphaFade4_g117042 = Data4_g117042.AlphaFade;
				Out_Translucency4_g117042 = Data4_g117042.Translucency;
				Out_Transmission4_g117042 = Data4_g117042.Transmission;
				Out_Thickness4_g117042 = Data4_g117042.Thickness;
				Out_Diffusion4_g117042 = Data4_g117042.Diffusion;
				half3 Input_Albedo24_g117041 = Out_Albedo4_g117042;
				#ifdef UNITY_COLORSPACE_GAMMA
				float4 staticSwitch22_g117041 = half4(0.2209163,0.2209163,0.2209163,0.7790837);
				#else
				float4 staticSwitch22_g117041 = half4(0.04,0.04,0.04,0.96);
				#endif
				half4 ColorSpaceDielectricSpec23_g117041 = staticSwitch22_g117041;
				float4 break24_g117038 = Out_Shader4_g117042;
				half Metallic95_g117038 = break24_g117038.x;
				half Input_Metallic25_g117041 = Metallic95_g117038;
				half OneMinusReflectivity31_g117041 = ( (ColorSpaceDielectricSpec23_g117041).w - ( (ColorSpaceDielectricSpec23_g117041).w * Input_Metallic25_g117041 ) );
				
				float localCustomAlphaClip19_g117044 = ( 0.0 );
				float temp_output_3_0_g117044 = Out_AlphaClip4_g117042;
				float Alpha19_g117044 = temp_output_3_0_g117044;
				float temp_output_15_0_g117044 = 0.5;
				float Treshold19_g117044 = temp_output_15_0_g117044;
				#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_DITHER)
				#if defined ( TVE_PIPELINE_HD)
				#if !defined(SHADERPASS_FORWARD_BYPASS_ALPHA_TEST) && !defined(SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST)
				clip(Alpha19_g117044 - Treshold19_g117044);
				#endif
				#else
				clip(Alpha19_g117044 - Treshold19_g117044);
				#endif
				#endif
				
				o.Albedo = ( Input_Albedo24_g117041 * OneMinusReflectivity31_g117041 );
				o.Normal = fixed3( 0, 0, 1 );
				o.Emission = (Out_Emissive4_g117042).xyz;
				o.Alpha = Alpha19_g117044;
				float AlphaClipThreshold = 0.5;

				#ifdef _ALPHATEST_ON
					clip( o.Alpha - AlphaClipThreshold );
				#endif

				#ifdef _DEPTHOFFSET_ON
					outputDepth = IN.pos.z;
				#endif

				UnityMetaInput metaIN;
				UNITY_INITIALIZE_OUTPUT(UnityMetaInput, metaIN);
				metaIN.Albedo = o.Albedo;
				metaIN.Emission = o.Emission;
				#ifdef EDITOR_VISUALIZATION
					metaIN.VizUV = IN.vizUV;
					metaIN.LightCoord = IN.lightCoord;
				#endif
				return UnityMetaFragment(metaIN);
			}
			ENDCG
		}

		UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
	UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"

		Pass
		{
			
			Name "ShadowCaster"
			Tags { "LightMode"="ShadowCaster" }
			ZWrite On
			ZTest LEqual
			AlphaToMask Off

			CGPROGRAM
			#define ASE_NEEDS_FRAG_SHADOWCOORDS
			#pragma multi_compile __ LOD_FADE_CROSSFADE
			#pragma multi_compile_fog
			#define ASE_FOG 1
			#define ASE_ABSOLUTE_VERTEX_POS 1
			#define ASE_TERRAIN 1
			#define _SPECULAR_SETUP 1
			#define ASE_LIGHTING_SIMPLE 1
			#define _ENVIRONMENTREFLECTIONS_OFF 1
			#define ASE_USING_SAMPLING_MACROS 1

			#pragma vertex vert
			#pragma fragment frag
			#pragma skip_variants FOG_LINEAR FOG_EXP FOG_EXP2
			#pragma multi_compile_shadowcaster
			#ifndef UNITY_PASS_SHADOWCASTER
				#define UNITY_PASS_SHADOWCASTER
			#endif
			#include "HLSLSupport.cginc"

			#ifdef ASE_GEOMETRY
				#ifndef UNITY_INSTANCED_LOD_FADE
					#define UNITY_INSTANCED_LOD_FADE
				#endif
				#ifndef UNITY_INSTANCED_SH
					#define UNITY_INSTANCED_SH
				#endif
				#ifndef UNITY_INSTANCED_LIGHTMAPSTS
					#define UNITY_INSTANCED_LIGHTMAPSTS
				#endif
			#endif

			#if ( SHADER_API_D3D11 || SHADER_API_GLCORE || SHADER_API_GLES || SHADER_API_GLES3 || SHADER_API_METAL || SHADER_API_VULKAN )
				#define CAN_SKIP_VPOS
			#endif
			#include "UnityShaderVariables.cginc"
			#include "UnityCG.cginc"
			#include "Lighting.cginc"
			#include "UnityPBSLighting.cginc"

			#define ASE_NEEDS_VERT_POSITION
			#define ASE_NEEDS_VERT_NORMAL
			#define ASE_NEEDS_VERT_TANGENT
			#pragma shader_feature_local_fragment TVE_PIPELINE_STANDARD TVE_PIPELINE_UNIVERSAL TVE_PIPELINE_HD
			#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
			#pragma shader_feature_local_vertex TVE_LANDSCAPE
			#pragma shader_feature_local_fragment TVE_WETNESS
			#pragma shader_feature_local_fragment TVE_OVERLAY
			#pragma shader_feature_local_fragment TVE_DRYNESS
			#pragma shader_feature_local_fragment TVE_TINTING
			#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
			#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
			#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
			#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
			#pragma shader_feature_local_fragment TVE_DRYNESS_SHIFT
			#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
			#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
			#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_WATER
			#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
			#pragma shader_feature_local_fragment TVE_EMISSIVE
			#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
			#pragma shader_feature_local_fragment TVE_CUTOUT
			#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
			#pragma multi_compile_instancing
			#pragma instancing_options assumeuniformscaling nomatrices nolightprobe nolightmap forwardadd
			  
			struct TVEVisualData
			{  
				half Dummy;  
				half3 Albedo;
				half3 AlbedoRaw;
				half2 NormalTS;
				half3 NormalWS; 
				half4 Shader;
				half4 Emissive;
				half AlphaClip;
				half AlphaFade;
				half MultiMask;
				half Grayscale;
				half Luminosity;
				half3 Translucency;
				half Transmission;
				half Thickness;
				float Diffusion;
			};  
			    
			struct TVEModelData
			{    
				half Dummy;    
				half3 PositionOS;
				half3 PositionWS;
				half3 PositionWO;
				half3 PositionRawOS;
				half3 PositionAddOS;
				half3 PivotOS;
				half3 PivotWS;
				half3 PivotWO;
				half3 NormalOS;
				half3 NormalWS;
				half3 NormalRawOS;
				half3 NormalRawWS;
				half4 TangentOS;
				half3 ViewDirWS;
				half4 VertexData;
				half4 MotionData;
				half4 BoundsData;
				half4 RotationData;
			};    
			      
			struct TVEGlobalData
			{      
				half Dummy;      
				half4 CoatParams;
				half4 PaintParams;
				half4 GlowParams;
				half4 AtmoParams;
				half4 FadeParams;
				half4 FormParams;
				half4 LandParams;
				half4 WindParams;
				half4 PushParams;
			};      
			        
			//#pragma editor_sync_compilation
			#if defined(SHADER_API_D3D11) || defined(SHADER_API_XBOXONE) || defined(UNITY_COMPILER_HLSLCC) || defined(SHADER_API_PSSL) || (defined(SHADER_TARGET_SURFACE_ANALYSIS) && !defined(SHADER_TARGET_SURFACE_ANALYSIS_MOJOSHADER))//ASE Sampler Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex.SampleBias(samplerTex,coord,bias)
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex.SampleGrad(samplerTex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
			#else//ASE Sampling Macros
			#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex2D(tex,coord)
			#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex2Dlod(tex,float4(coord,0,lod))
			#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex2Dbias(tex,float4(coord,0,bias))
			#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex2Dgrad(tex,coord,ddx,ddy)
			#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplertex,coord,lod) tex2DArraylod(tex, float4(coord,lod))
			#endif//ASE Sampling Macros
			

			struct appdata {
				float4 vertex : POSITION;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;
				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct v2f {
				V2F_SHADOW_CASTER;
				float4 ase_texcoord2 : TEXCOORD2;
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_texcoord4 : TEXCOORD4;
				float4 ase_texcoord5 : TEXCOORD5;
				float4 ase_texcoord6 : TEXCOORD6;
				float4 ase_color : COLOR;
				float4 ase_texcoord7 : TEXCOORD7;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				UNITY_VERTEX_OUTPUT_STEREO
			};

			#ifdef UNITY_STANDARD_USE_DITHER_MASK
				sampler3D _DitherMaskLOD;
			#endif
			#ifdef ASE_TESSELLATION
				float _TessPhongStrength;
				float _TessValue;
				float _TessMin;
				float _TessMax;
				float _TessEdgeLength;
				float _TessMaxDisp;
			#endif
			uniform half _TerrainLayersMode;
			uniform half _TerrainSampleMode1;
			uniform half _TerrainSampleMode2;
			uniform half _TerrainSampleMode3;
			uniform half _TerrainSampleMode4;
			uniform half _TerrainSampleMode5;
			uniform half _TerrainSampleMode6;
			uniform half _TerrainSampleMode7;
			uniform half _TerrainSampleMode8;
			uniform half _TerrainSampleMode9;
			uniform half _TerrainSampleMode10;
			uniform half _TerrainSampleMode11;
			uniform half _TerrainSampleMode12;
			uniform half _TerrainSampleMode13;
			uniform half _TerrainSampleMode14;
			uniform half _TerrainSampleMode15;
			uniform half _TerrainSampleMode16;
			uniform half _TerrainTextureMode;
			uniform half _IsTerrainShader;
			uniform half _RenderCategory;
			uniform half _RenderEnd;
			uniform half _IsTVEShader;
			uniform half _IsCustomShader;
			uniform half _IsShared;
			uniform half _HasDefaultTextures;
			uniform half _IsCollected;
			uniform half _IsConverted;
			uniform half _IsIdentifier;
			uniform half _RenderDecals;
			uniform half _RenderSSR;
			uniform half _RenderClip;
			uniform half _IsVersion;
			uniform half _RenderShadow;
			uniform half _RenderFilter;
			uniform half _IsSimpleShader;
			uniform half _LandscapeCategory;
			uniform half _LandscapeEnd;
			uniform half _LandscapeInfo;
			uniform float3 TVE_WorldOrigin;
			uniform half4 _object_phase_mode;
			uniform half _GlobalCategory;
			uniform half _GlobalEnd;
			uniform half4 TVE_CoatParams;
			uniform half _GlobalPaintLayerValue;
			uniform float TVE_PaintLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintBaseTex);
			uniform half4 TVE_RenderBaseCoords;
			SamplerState sampler_Linear_Clamp;
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintNearTex);
			uniform half4 TVE_RenderNearCoords;
			SamplerState sampler_Linear_Repeat;
			uniform float4 TVE_RenderNearPositionR;
			uniform half TVE_RenderNearFadeValue;
			uniform half4 TVE_PaintParams;
			uniform half _GlobalGlowLayerValue;
			uniform float TVE_GlowLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowNearTex);
			uniform half4 TVE_GlowParams;
			uniform half _GlobalAtmoLayerValue;
			uniform float TVE_AtmoLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoNearTex);
			uniform half4 TVE_AtmoParams;
			uniform half _GlobalFadeLayerValue;
			uniform float TVE_FadeLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeNearTex);
			uniform half4 TVE_FadeParams;
			uniform half4 TVE_FormParams;
			uniform half _GlobalLandLayerValue;
			uniform float TVE_LandLayers[10];
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_LandBaseTex);
			UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_LandNearTex);
			uniform half4 TVE_LandParams;
			uniform half4 TVE_WindParams;
			uniform half4 TVE_PushParams;
			uniform half _LandscapeHeightValue;
			uniform half TVE_IsEnabled;
			uniform half _CutoutCategory;
			uniform half _CutoutEnd;
			uniform half _CutoutElementMode;
			uniform half _CutoutBakeInfo;
			uniform half _EmissiveCategory;
			uniform half _EmissiveEnd;
			uniform half _EmissivePowerMode;
			uniform half _EmissivePowerValue;
			uniform half _EmissiveElementMode;
			uniform half _EmissiveFlagMode;
			uniform half _WetnessCategory;
			uniform half _WetnessEnd;
			uniform half _WetnessElementMode;
			uniform half _WetnessBakeInfo;
			uniform half _OverlayCategory;
			uniform half _OverlayEnd;
			uniform half _OverlaySpace;
			uniform half _OverlayElementMode;
			uniform half _OverlayBakeInfo;
			uniform half _DrynessCategory;
			uniform half _DrynessEnd;
			uniform half _DrynessSpace;
			uniform half _DrynessElementMode;
			uniform half _DrynessBakeInfo;
			uniform half _TintingCategory;
			uniform half _TintingEnd;
			uniform half _TintingSpace;
			uniform half _TintingBakeInfo;
			uniform half _CategoryTerrain;
			uniform half _EndTerrain;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex1);
			uniform half4 _TerrainPosition;
			uniform half4 _TerrainSize;
			float4 _TerrainControlTex1_TexelSize;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex1);
			SamplerState sampler_Point_Repeat;
			SamplerState sampler_Linear_Repeat_Aniso8;
			uniform half4 _TerrainCoord1;
			uniform half4 _TerrainShaderMin1;
			uniform half4 _TerrainShaderMax1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex2);
			uniform half4 _TerrainCoord2;
			uniform half4 _TerrainShaderMin2;
			uniform half4 _TerrainShaderMax2;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex3);
			uniform half4 _TerrainCoord3;
			uniform half4 _TerrainShaderMin3;
			uniform half4 _TerrainShaderMax3;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex4);
			uniform half4 _TerrainCoord4;
			uniform half4 _TerrainShaderMin4;
			uniform half4 _TerrainShaderMax4;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex5);
			uniform half4 _TerrainCoord5;
			uniform half4 _TerrainShaderMin5;
			uniform half4 _TerrainShaderMax5;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex6);
			uniform half4 _TerrainCoord6;
			uniform half4 _TerrainShaderMin6;
			uniform half4 _TerrainShaderMax6;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex7);
			uniform half4 _TerrainCoord7;
			uniform half4 _TerrainShaderMin7;
			uniform half4 _TerrainShaderMax7;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex8);
			uniform half4 _TerrainCoord8;
			uniform half4 _TerrainShaderMin8;
			uniform half4 _TerrainShaderMax8;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex9);
			uniform half4 _TerrainCoord9;
			uniform half4 _TerrainShaderMin9;
			uniform half4 _TerrainShaderMax9;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex10);
			uniform half4 _TerrainCoord10;
			uniform half4 _TerrainShaderMin10;
			uniform half4 _TerrainShaderMax10;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex11);
			uniform half4 _TerrainCoord11;
			uniform half4 _TerrainShaderMin11;
			uniform half4 _TerrainShaderMax11;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex12);
			uniform half4 _TerrainCoord12;
			uniform half4 _TerrainShaderMin12;
			uniform half4 _TerrainShaderMax12;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex13);
			uniform half4 _TerrainCoord13;
			uniform half4 _TerrainShaderMin13;
			uniform half4 _TerrainShaderMax13;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex14);
			uniform half4 _TerrainCoord14;
			uniform half4 _TerrainShaderMin14;
			uniform half4 _TerrainShaderMax14;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex15);
			uniform half4 _TerrainCoord15;
			uniform half4 _TerrainShaderMin15;
			uniform half4 _TerrainShaderMax15;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex16);
			uniform half4 _TerrainCoord16;
			uniform half4 _TerrainShaderMin16;
			uniform half4 _TerrainShaderMax16;
			uniform half _TerrainHeightBlendValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex16);
			uniform half4 _TerrainColor1;
			uniform half4 _TerrainColor2;
			uniform half4 _TerrainColor3;
			uniform half4 _TerrainColor4;
			uniform half4 _TerrainColor5;
			uniform half4 _TerrainColor6;
			uniform half4 _TerrainColor7;
			uniform half4 _TerrainColor8;
			uniform half4 _TerrainColor9;
			uniform half4 _TerrainColor10;
			uniform half4 _TerrainColor11;
			uniform half4 _TerrainColor12;
			uniform half4 _TerrainColor13;
			uniform half4 _TerrainColor14;
			uniform half4 _TerrainColor15;
			uniform half4 _TerrainColor16;
			uniform half4 _TerrainColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex1);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex2);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex3);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex4);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex5);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex6);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex7);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex8);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex9);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex10);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex11);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex12);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex13);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex14);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex15);
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex16);
			uniform half4 _TerrainParams1;
			uniform half4 _TerrainParams2;
			uniform half4 _TerrainParams3;
			uniform half4 _TerrainParams4;
			uniform half4 _TerrainParams5;
			uniform half4 _TerrainParams6;
			uniform half4 _TerrainParams7;
			uniform half4 _TerrainParams8;
			uniform half4 _TerrainParams9;
			uniform half4 _TerrainParams10;
			uniform half4 _TerrainParams11;
			uniform half4 _TerrainParams12;
			uniform half4 _TerrainParams13;
			uniform half4 _TerrainParams14;
			uniform half4 _TerrainParams15;
			uniform half4 _TerrainParams16;
			uniform half _TerrainNormalValue;
			uniform half _TerrainMetallicValue;
			uniform half _TerrainOcclusionValue;
			uniform half _TerrainSmoothnessValue;
			uniform half4 _TerrainSpecular1;
			uniform half4 _TerrainSpecular2;
			uniform half4 _TerrainSpecular3;
			uniform half4 _TerrainSpecular4;
			uniform half4 _TerrainSpecular5;
			uniform half4 _TerrainSpecular6;
			uniform half4 _TerrainSpecular7;
			uniform half4 _TerrainSpecular8;
			uniform half4 _TerrainSpecular9;
			uniform half4 _TerrainSpecular10;
			uniform half4 _TerrainSpecular11;
			uniform half4 _TerrainSpecular12;
			uniform half4 _TerrainSpecular13;
			uniform half4 _TerrainSpecular14;
			uniform half4 _TerrainSpecular15;
			uniform half4 _TerrainSpecular16;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainHolesTex);
			uniform half _TintingElementMode;
			uniform half _TintingGrayValue;
			uniform float4 _TintingColor;
			uniform half _TintingIntensityValue;
			uniform half _TintingMultiValue;
			uniform half4 _TintingLumaRemap;
			uniform half _TintingLumaValue;
			uniform half4 _TintingBlendRemap;
			uniform half _DrynessGrayValue;
			uniform half _DrynessShiftValue;
			uniform float4 _DrynessColor;
			uniform half _DrynessIntensityValue;
			uniform half _DrynessMultiValue;
			uniform half4 _DrynessLumaRemap;
			uniform half _DrynessLumaValue;
			uniform half4 _DrynessBlendRemap;
			uniform half _DrynessSmoothnessValue;
			uniform half _DrynessSubsurfaceValue;
			uniform half4 _OverlayColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayAlbedoTex);
			uniform half4 _overlay_coord_value;
			uniform half _OverlaySampleMode;
			uniform half _OverlayCoordMode;
			uniform half4 _OverlayCoordValue;
			uniform half _OverlayTextureMode;
			uniform half _OverlayGlitterIntensityValue;
			uniform half4 _OverlayGlitterColor;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayGlitterTexRT);
			uniform half _OverlayGlitterTillingValue;
			uniform half _OverlayGlitterDistValue;
			uniform half _OverlayIntensityValue;
			uniform half4 _OverlayProjRemap;
			uniform half _OverlayProjValue;
			uniform half4 _OverlayLumaRemap;
			uniform half _OverlayLumaValue;
			uniform half4 _OverlayBlendRemap1;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayNormalTex);
			uniform half _OverlayNormalValue;
			uniform half _OverlaySmoothnessValue;
			uniform half _OverlaySubsurfaceValue;
			uniform half4 _WetnessWaterColor;
			uniform half _WetnessWaterIntensityValue;
			uniform half _WetnessIntensityValue;
			uniform half _WetnessWaterBaseValue;
			uniform half4 _WetnessWaterBlendRemap;
			uniform half _WetnessContrastValue;
			UNITY_DECLARE_TEX2D_NOSAMPLER(_WetnessDropsTexRT);
			uniform half _WetnessDropsTillingValue;
			uniform half _WetnessDropsIntensityValue;
			uniform half _WetnessDropsNormalValue;
			uniform half _WetnessDropsDistValue;
			uniform half _WetnessSmoothnessValue;
			uniform half _EmissiveIntensityValue;
			uniform half4 _EmissiveColor;
			uniform half _EmissiveColorMode;
			uniform float _emissive_power_value;
			uniform half _CutoutIntensityValue;
			#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
				sampler2D _TerrainHeightmapTexture;//ASE Terrain Instancing
				sampler2D _TerrainNormalmapTexture;//ASE Terrain Instancing
			#endif//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_START( Terrain )//ASE Terrain Instancing
				UNITY_DEFINE_INSTANCED_PROP( float4, _TerrainPatchInstanceData )//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_END( Terrain)//ASE Terrain Instancing
			CBUFFER_START( UnityTerrain)//ASE Terrain Instancing
				#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
					float4 _TerrainHeightmapRecipSize;//ASE Terrain Instancing
					float4 _TerrainHeightmapScale;//ASE Terrain Instancing
				#endif//ASE Terrain Instancing
			CBUFFER_END//ASE Terrain Instancing


			void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
			{
				ZX = WorldPosition.xz * Coords.xx - Coords.zz;
				ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
				XY = WorldPosition.xy * Coords.xy - Coords.zw;
			}
			
			half4 SamplePlanar2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
			{
				half3 powNormal = abs( WorldNormal.xyz );
				half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
				weights /= ( weights.x + weights.y + weights.z ).xxx;
				T1 = weights.y;
				T2 = weights.x;
				T3 = weights.z;
			}
			
			half4 SamplePlanar3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
				half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
				half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
				return tex1 * T1 + tex2 * T2 + tex3 * T3;
			}
			
			void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
			{
				half2 vertex1, vertex2, vertex3;
				// Scaling of the input
				half2 uv = UV * 3.464; // 2 * sqrt (3)
				// Skew input space into simplex triangle grid
				const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
				half2 skewedCoord = mul( gridToSkewedGrid, uv );
				// Compute local triangle vertex IDs and local barycentric coordinates
				int2 baseId = int2( floor( skewedCoord ) );
				half3 temp = half3( frac( skewedCoord ), 0 );
				temp.z = 1.0 - temp.x - temp.y;
				if ( temp.z > 0.0 )
				{
					W1 = temp.z;
					W2 = temp.y;
					W3 = temp.x;
					vertex1 = baseId;
					vertex2 = baseId + int2( 0, 1 );
					vertex3 = baseId + int2( 1, 0 );
				}
				else
				{
					W1 = -temp.z;
					W2 = 1.0 - temp.y;
					W3 = 1.0 - temp.x;
					vertex1 = baseId + int2( 1, 1 );
					vertex2 = baseId + int2( 1, 0 );
					vertex3 = baseId + int2( 0, 1 );
				}
				UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
				UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
				UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
				return;
			}
			
			float4 SampleStochastic2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
				half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
				half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
				half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
				return tex1 * W1 + tex2 * W2 + tex3 * W3;
			}
			
			half4 SampleStochastic3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				half4 tex1, tex2, tex3;
				ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
				half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
				half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
				half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				return texZX * T1 + texZY * T2 + texXY * T3;
			}
			
			half3 HSVToRGB( half3 c )
			{
				half4 K = half4( 1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0 );
				half3 p = abs( frac( c.xxx + K.xyz ) * 6.0 - K.www );
				return c.z * lerp( K.xxx, saturate( p - K.xxx ), c.y );
			}
			
			half3 RGBToHSV(half3 c)
			{
				half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
				half4 p = lerp( half4( c.bg, K.wz ), half4( c.gb, K.xy ), step( c.b, c.g ) );
				half4 q = lerp( half4( p.xyw, c.r ), half4( c.r, p.yzx ), step( p.x, c.r ) );
				half d = q.x - min( q.w, q.y );
				half e = 1.0e-10;
				return half3( abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
			}
			appdata ApplyMeshModification( appdata v ){
			#ifdef UNITY_INSTANCING_ENABLED
				float2 patchVertex = v.vertex.xy;
				float4 instanceData = UNITY_ACCESS_INSTANCED_PROP( Terrain, _TerrainPatchInstanceData );
				float4 uvscale = instanceData.z * _TerrainHeightmapRecipSize;
				float4 uvoffset = instanceData.xyxy * uvscale;
				uvoffset.xy += 0.5f * _TerrainHeightmapRecipSize.xy;
				float2 sampleCoords = (patchVertex.xy * uvscale.xy + uvoffset.xy);
				v.ase_texcoord = float4(patchVertex.xy * uvscale.zw + uvoffset.zw, 0, 0);
				float height = UnpackHeightmap( tex2Dlod( _TerrainHeightmapTexture, float4(sampleCoords, 0, 0) ) );
				v.vertex.xz = (patchVertex.xy + instanceData.xy) * _TerrainHeightmapScale.xz * instanceData.z;
				v.vertex.y = height * _TerrainHeightmapScale.y;
				v.normal = tex2Dlod( _TerrainNormalmapTexture, v.ase_texcoord ).rgb * 2 - 1;
			#endif
			return v;
			}
			

			v2f VertexFunction (appdata v  ) {
				UNITY_SETUP_INSTANCE_ID(v);
				v2f o;
				UNITY_INITIALIZE_OUTPUT(v2f,o);
				UNITY_TRANSFER_INSTANCE_ID(v,o);
				UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);

				v = ApplyMeshModification(v);
				TVEModelData Data16_g117033 = (TVEModelData)0;
				half Dummy181_g117031 = ( _LandscapeCategory + _LandscapeEnd + _LandscapeInfo );
				float In_Dummy16_g117033 = Dummy181_g117031;
				TVEModelData Data16_g114320 = (TVEModelData)0;
				half Dummy207_g114306 = 0.0;
				float In_Dummy16_g114320 = Dummy207_g114306;
				half3 PositionOS131_g114306 = v.vertex.xyz;
				float3 In_PositionOS16_g114320 = PositionOS131_g114306;
				float3 ase_worldPos = mul(unity_ObjectToWorld, float4( (v.vertex).xyz, 1 )).xyz;
				float3 vertexToFrag73_g114306 = ase_worldPos;
				half3 PositionWS122_g114306 = vertexToFrag73_g114306;
				float3 In_PositionWS16_g114320 = PositionWS122_g114306;
				float4x4 break19_g114308 = unity_ObjectToWorld;
				float3 appendResult20_g114308 = (float3(break19_g114308[ 0 ][ 3 ] , break19_g114308[ 1 ][ 3 ] , break19_g114308[ 2 ][ 3 ]));
				half3 ObjectData20_g114310 = appendResult20_g114308;
				half3 WorldData19_g114310 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g114310 = WorldData19_g114310;
				#else
				float3 staticSwitch14_g114310 = ObjectData20_g114310;
				#endif
				float3 temp_output_124_0_g114308 = staticSwitch14_g114310;
				float3 temp_output_239_7_g114306 = temp_output_124_0_g114308;
				half3 PivotWS121_g114306 = temp_output_239_7_g114306;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
				#else
				float3 staticSwitch204_g114306 = PositionWS122_g114306;
				#endif
				half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
				float3 In_PositionWO16_g114320 = PositionWO132_g114306;
				float3 In_PositionRawOS16_g114320 = PositionOS131_g114306;
				float3 In_PositionAddOS16_g114320 = float3( 0,0,0 );
				float3 _Vector0 = float3(0,0,0);
				half3 PivotOS149_g114306 = _Vector0;
				float3 In_PivotOS16_g114320 = PivotOS149_g114306;
				float3 In_PivotWS16_g114320 = PivotWS121_g114306;
				half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
				float3 In_PivotWO16_g114320 = PivotWO133_g114306;
				half3 NormalOS134_g114306 = v.normal;
				float3 In_NormalOS16_g114320 = NormalOS134_g114306;
				float3 ase_worldNormal = UnityObjectToWorldNormal(v.normal);
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g114306 = normalizedWorldNormal;
				float3 In_NormalWS16_g114320 = Normal_WS95_g114306;
				float3 In_NormalRawOS16_g114320 = NormalOS134_g114306;
				float3 objToWorldDir298_g114306 = normalize( mul( unity_ObjectToWorld, float4( v.normal, 0 ) ).xyz );
				half3 Normal_RawWS136_g114306 = objToWorldDir298_g114306;
				float3 In_NormalRawWS16_g114320 = Normal_RawWS136_g114306;
				half4 TangentlOS153_g114306 = v.tangent;
				float4 In_TangentOS16_g114320 = TangentlOS153_g114306;
				float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
				half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
				float3 In_ViewDirWS16_g114320 = ViewDirWS169_g114306;
				half4 VertexMasks171_g114306 = v.ase_color;
				float4 In_VertexData16_g114320 = VertexMasks171_g114306;
				float4 break33_g114319 = _object_phase_mode;
				float temp_output_30_0_g114319 = ( v.ase_color.r * break33_g114319.x );
				float temp_output_29_0_g114319 = ( v.ase_color.g * break33_g114319.y );
				float temp_output_31_0_g114319 = ( v.ase_color.b * break33_g114319.z );
				float temp_output_28_0_g114319 = ( temp_output_30_0_g114319 + temp_output_29_0_g114319 + temp_output_31_0_g114319 + ( v.ase_color.a * break33_g114319.w ) );
				float3 break243_g114306 = PivotWO133_g114306;
				float temp_output_315_0_g114306 = (frac( ( temp_output_28_0_g114319 + ( break243_g114306.x + break243_g114306.z ) ) )*2.0 + -1.0);
				float4 appendResult177_g114306 = (float4(1.0 , 1.0 , temp_output_315_0_g114306 , 1.0));
				half4 MotionMasks176_g114306 = appendResult177_g114306;
				float4 In_MotionData16_g114320 = MotionMasks176_g114306;
				half4 BoundsData254_g114306 = float4( 0,0,0,0 );
				float4 In_BoundsData16_g114320 = BoundsData254_g114306;
				float4 In_RotationData16_g114320 = float4( 0,0,0,0 );
				Data16_g114320.Dummy = In_Dummy16_g114320;
				Data16_g114320.PositionOS = In_PositionOS16_g114320;
				Data16_g114320.PositionWS = In_PositionWS16_g114320;
				Data16_g114320.PositionWO = In_PositionWO16_g114320;
				Data16_g114320.PositionRawOS = In_PositionRawOS16_g114320;
				Data16_g114320.PositionAddOS = In_PositionAddOS16_g114320;
				Data16_g114320.PivotOS = In_PivotOS16_g114320;
				Data16_g114320.PivotWS = In_PivotWS16_g114320;
				Data16_g114320.PivotWO = In_PivotWO16_g114320;
				Data16_g114320.NormalOS = In_NormalOS16_g114320;
				Data16_g114320.NormalWS = In_NormalWS16_g114320;
				Data16_g114320.NormalRawOS = In_NormalRawOS16_g114320;
				Data16_g114320.NormalRawWS = In_NormalRawWS16_g114320;
				Data16_g114320.TangentOS = In_TangentOS16_g114320;
				Data16_g114320.ViewDirWS = In_ViewDirWS16_g114320;
				Data16_g114320.VertexData = In_VertexData16_g114320;
				Data16_g114320.MotionData = In_MotionData16_g114320;
				Data16_g114320.BoundsData = In_BoundsData16_g114320;
				Data16_g114320.RotationData = In_RotationData16_g114320;
				TVEModelData Data15_g117032 = Data16_g114320;
				float Out_Dummy15_g117032 = 0;
				float3 Out_PositionOS15_g117032 = float3( 0,0,0 );
				float3 Out_PositionWS15_g117032 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117032 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g117032 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g117032 = float3( 0,0,0 );
				float3 Out_PivotOS15_g117032 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117032 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117032 = float3( 0,0,0 );
				float3 Out_NormalOS15_g117032 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117032 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g117032 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g117032 = float3( 0,0,0 );
				float4 Out_TangentOS15_g117032 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g117032 = float3( 0,0,0 );
				float4 Out_VertexData15_g117032 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g117032 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117032 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g117032 = float4( 0,0,0,0 );
				Out_Dummy15_g117032 = Data15_g117032.Dummy;
				Out_PositionOS15_g117032 = Data15_g117032.PositionOS;
				Out_PositionWS15_g117032 = Data15_g117032.PositionWS;
				Out_PositionWO15_g117032 = Data15_g117032.PositionWO;
				Out_PositionRawOS15_g117032 = Data15_g117032.PositionRawOS;
				Out_PositionAddOS15_g117032 = Data15_g117032.PositionAddOS;
				Out_PivotOS15_g117032 = Data15_g117032.PivotOS;
				Out_PivotWS15_g117032 = Data15_g117032.PivotWS;
				Out_PivotWO15_g117032 = Data15_g117032.PivotWO;
				Out_NormalOS15_g117032 = Data15_g117032.NormalOS;
				Out_NormalWS15_g117032 = Data15_g117032.NormalWS;
				Out_NormalRawOS15_g117032 = Data15_g117032.NormalRawOS;
				Out_NormalRawWS15_g117032 = Data15_g117032.NormalRawWS;
				Out_TangentOS15_g117032 = Data15_g117032.TangentOS;
				Out_ViewDirWS15_g117032 = Data15_g117032.ViewDirWS;
				Out_VertexData15_g117032 = Data15_g117032.VertexData;
				Out_MotionData15_g117032 = Data15_g117032.MotionData;
				Out_BoundsData15_g117032 = Data15_g117032.BoundsData;
				Out_RotationData15_g117032 = Data15_g117032.RotationData;
				half3 Input_PositionOS147_g117031 = Out_PositionOS15_g117032;
				float3 break592_g117031 = Input_PositionOS147_g117031;
				float localBuildGlobalData204_g115912 = ( 0.0 );
				TVEGlobalData Data204_g115912 = (TVEGlobalData)0;
				half Dummy211_g115912 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g115912 = Dummy211_g115912;
				half4 Coat_Params302_g115912 = TVE_CoatParams;
				float4 In_CoatParams204_g115912 = Coat_Params302_g115912;
				float temp_output_82_0_g115913 = _GlobalPaintLayerValue;
				float temp_output_19_0_g115915 = TVE_PaintLayers[(int)temp_output_82_0_g115913];
				TVEModelData Data16_g114321 = (TVEModelData)0;
				float In_Dummy16_g114321 = 0.0;
				float3 In_PositionWS16_g114321 = PositionWS122_g114306;
				float3 In_PositionWO16_g114321 = PositionWO132_g114306;
				float3 In_PivotWS16_g114321 = PivotWS121_g114306;
				float3 In_PivotWO16_g114321 = PivotWO133_g114306;
				float3 In_NormalWS16_g114321 = Normal_WS95_g114306;
				float3 In_ViewDirWS16_g114321 = ViewDirWS169_g114306;
				float4 In_VertexData16_g114321 = VertexMasks171_g114306;
				float4 In_BoundsData16_g114321 = float4( 1,1,1,1 );
				Data16_g114321.Dummy = In_Dummy16_g114321;
				Data16_g114321.PositionWS = In_PositionWS16_g114321;
				Data16_g114321.PositionWO = In_PositionWO16_g114321;
				Data16_g114321.PivotWS = In_PivotWS16_g114321;
				Data16_g114321.PivotWO = In_PivotWO16_g114321;
				Data16_g114321.NormalWS = In_NormalWS16_g114321;
				Data16_g114321.ViewDirWS = In_ViewDirWS16_g114321;
				Data16_g114321.VertexData = In_VertexData16_g114321;
				Data16_g114321.BoundsData = In_BoundsData16_g114321;
				TVEModelData Data15_g115994 = Data16_g114321;
				float Out_Dummy15_g115994 = 0;
				float3 Out_PositionWS15_g115994 = float3( 0,0,0 );
				float3 Out_PositionWO15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWS15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWO15_g115994 = float3( 0,0,0 );
				float3 Out_NormalWS15_g115994 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g115994 = float3( 0,0,0 );
				float4 Out_VertexData15_g115994 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g115994 = float4( 0,0,0,0 );
				Out_Dummy15_g115994 = Data15_g115994.Dummy;
				Out_PositionWS15_g115994 = Data15_g115994.PositionWS;
				Out_PositionWO15_g115994 = Data15_g115994.PositionWO;
				Out_PivotWS15_g115994 = Data15_g115994.PivotWS;
				Out_PivotWO15_g115994 = Data15_g115994.PivotWO;
				Out_NormalWS15_g115994 = Data15_g115994.NormalWS;
				Out_ViewDirWS15_g115994 = Data15_g115994.ViewDirWS;
				Out_VertexData15_g115994 = Data15_g115994.VertexData;
				Out_BoundsData15_g115994 = Data15_g115994.BoundsData;
				half3 Model_PositionWS143_g115912 = Out_PositionWS15_g115994;
				half3 Input_Position180_g115916 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115916 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_82_0_g115916 = temp_output_82_0_g115913;
				float2 temp_output_119_0_g115916 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_7_0_g115921 = 1.0;
				float temp_output_10_0_g115921 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115921 );
				float4 lerpResult131_g115916 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115916,temp_output_82_0_g115916), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115916,temp_output_82_0_g115916), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115916 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115921 ) / temp_output_10_0_g115921 ) ));
				float4 temp_output_17_0_g115915 = lerpResult131_g115916;
				float4 temp_output_3_0_g115915 = TVE_PaintParams;
				float4 ifLocalVar18_g115915 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115915 >= 0.5 )
				ifLocalVar18_g115915 = temp_output_17_0_g115915;
				else
				ifLocalVar18_g115915 = temp_output_3_0_g115915;
				float4 lerpResult22_g115915 = lerp( temp_output_3_0_g115915 , temp_output_17_0_g115915 , temp_output_19_0_g115915);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115915 = lerpResult22_g115915;
				#else
				float4 staticSwitch24_g115915 = ifLocalVar18_g115915;
				#endif
				half4 Paint_Params71_g115912 = staticSwitch24_g115915;
				float4 In_PaintParams204_g115912 = Paint_Params71_g115912;
				float temp_output_82_0_g115931 = _GlobalGlowLayerValue;
				float temp_output_19_0_g115933 = TVE_GlowLayers[(int)temp_output_82_0_g115931];
				half3 Input_Position180_g115934 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115934 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_82_0_g115934 = temp_output_82_0_g115931;
				float2 temp_output_119_0_g115934 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_7_0_g115939 = 1.0;
				float temp_output_10_0_g115939 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115939 );
				float4 lerpResult131_g115934 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115934,temp_output_82_0_g115934), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115934,temp_output_82_0_g115934), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115934 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115939 ) / temp_output_10_0_g115939 ) ));
				float4 temp_output_17_0_g115933 = lerpResult131_g115934;
				float4 temp_output_3_0_g115933 = TVE_GlowParams;
				float4 ifLocalVar18_g115933 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115933 >= 0.5 )
				ifLocalVar18_g115933 = temp_output_17_0_g115933;
				else
				ifLocalVar18_g115933 = temp_output_3_0_g115933;
				float4 lerpResult22_g115933 = lerp( temp_output_3_0_g115933 , temp_output_17_0_g115933 , temp_output_19_0_g115933);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115933 = lerpResult22_g115933;
				#else
				float4 staticSwitch24_g115933 = ifLocalVar18_g115933;
				#endif
				half4 Glow_Params248_g115912 = staticSwitch24_g115933;
				float4 In_GlowParams204_g115912 = Glow_Params248_g115912;
				float temp_output_132_0_g115976 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g115978 = TVE_AtmoLayers[(int)temp_output_132_0_g115976];
				half3 Input_Position180_g115979 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115979 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_82_0_g115979 = temp_output_132_0_g115976;
				float2 temp_output_119_0_g115979 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_7_0_g115984 = 1.0;
				float temp_output_10_0_g115984 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115984 );
				float4 lerpResult131_g115979 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115979,temp_output_82_0_g115979), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115979,temp_output_82_0_g115979), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115979 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115984 ) / temp_output_10_0_g115984 ) ));
				float4 temp_output_17_0_g115978 = lerpResult131_g115979;
				float4 temp_output_3_0_g115978 = TVE_AtmoParams;
				float4 ifLocalVar18_g115978 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115978 >= 0.5 )
				ifLocalVar18_g115978 = temp_output_17_0_g115978;
				else
				ifLocalVar18_g115978 = temp_output_3_0_g115978;
				float4 lerpResult22_g115978 = lerp( temp_output_3_0_g115978 , temp_output_17_0_g115978 , temp_output_19_0_g115978);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115978 = lerpResult22_g115978;
				#else
				float4 staticSwitch24_g115978 = ifLocalVar18_g115978;
				#endif
				half4 Atmo_Params80_g115912 = staticSwitch24_g115978;
				float4 In_AtmoParams204_g115912 = Atmo_Params80_g115912;
				float temp_output_132_0_g115985 = _GlobalFadeLayerValue;
				float temp_output_19_0_g115987 = TVE_FadeLayers[(int)temp_output_132_0_g115985];
				half3 Input_Position180_g115988 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115988 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_82_0_g115988 = temp_output_132_0_g115985;
				float2 temp_output_119_0_g115988 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_7_0_g115993 = 1.0;
				float temp_output_10_0_g115993 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115993 );
				float4 lerpResult131_g115988 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115988,temp_output_82_0_g115988), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115988,temp_output_82_0_g115988), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115988 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115993 ) / temp_output_10_0_g115993 ) ));
				float4 temp_output_17_0_g115987 = lerpResult131_g115988;
				float4 temp_output_3_0_g115987 = TVE_FadeParams;
				float4 ifLocalVar18_g115987 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115987 >= 0.5 )
				ifLocalVar18_g115987 = temp_output_17_0_g115987;
				else
				ifLocalVar18_g115987 = temp_output_3_0_g115987;
				float4 lerpResult22_g115987 = lerp( temp_output_3_0_g115987 , temp_output_17_0_g115987 , temp_output_19_0_g115987);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115987 = lerpResult22_g115987;
				#else
				float4 staticSwitch24_g115987 = ifLocalVar18_g115987;
				#endif
				half4 Fade_Params387_g115912 = staticSwitch24_g115987;
				float4 In_FadeParams204_g115912 = Fade_Params387_g115912;
				half4 Form_Params112_g115912 = TVE_FormParams;
				float4 In_FormParams204_g115912 = Form_Params112_g115912;
				float temp_output_130_0_g115949 = _GlobalLandLayerValue;
				float temp_output_19_0_g115951 = TVE_LandLayers[(int)temp_output_130_0_g115949];
				half3 Input_Position180_g115952 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115952 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_82_0_g115952 = temp_output_130_0_g115949;
				float2 temp_output_119_0_g115952 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_7_0_g115957 = 1.0;
				float temp_output_10_0_g115957 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115957 );
				float4 lerpResult131_g115952 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115952,temp_output_82_0_g115952), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115952,temp_output_82_0_g115952), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115952 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115957 ) / temp_output_10_0_g115957 ) ));
				float4 temp_output_17_0_g115951 = lerpResult131_g115952;
				float4 temp_output_3_0_g115951 = TVE_LandParams;
				float4 ifLocalVar18_g115951 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115951 >= 0.5 )
				ifLocalVar18_g115951 = temp_output_17_0_g115951;
				else
				ifLocalVar18_g115951 = temp_output_3_0_g115951;
				float4 lerpResult22_g115951 = lerp( temp_output_3_0_g115951 , temp_output_17_0_g115951 , temp_output_19_0_g115951);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115951 = lerpResult22_g115951;
				#else
				float4 staticSwitch24_g115951 = ifLocalVar18_g115951;
				#endif
				half4 Land_Params375_g115912 = staticSwitch24_g115951;
				float4 In_LandParams204_g115912 = Land_Params375_g115912;
				half4 Wind_Params88_g115912 = TVE_WindParams;
				float4 In_WindParams204_g115912 = Wind_Params88_g115912;
				half4 Push_Params335_g115912 = TVE_PushParams;
				float4 In_PushParams204_g115912 = Push_Params335_g115912;
				Data204_g115912.Dummy = In_Dummy204_g115912;
				Data204_g115912.CoatParams = In_CoatParams204_g115912;
				Data204_g115912.PaintParams = In_PaintParams204_g115912;
				Data204_g115912.GlowParams = In_GlowParams204_g115912;
				Data204_g115912.AtmoParams = In_AtmoParams204_g115912;
				Data204_g115912.FadeParams = In_FadeParams204_g115912;
				Data204_g115912.FormParams= In_FormParams204_g115912;
				Data204_g115912.LandParams = In_LandParams204_g115912;
				Data204_g115912.WindParams = In_WindParams204_g115912;
				Data204_g115912.PushParams = In_PushParams204_g115912;
				TVEGlobalData Data15_g117034 = Data204_g115912;
				float Out_Dummy15_g117034 = 0;
				float4 Out_CoatParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g117034 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g117034 = float4( 0,0,0,0 );
				Out_Dummy15_g117034 = Data15_g117034.Dummy;
				Out_CoatParams15_g117034 = Data15_g117034.CoatParams;
				Out_PaintParams15_g117034 = Data15_g117034.PaintParams;
				Out_GlowParams15_g117034 = Data15_g117034.GlowParams;
				Out_AtmoParams15_g117034= Data15_g117034.AtmoParams;
				Out_FadeParams15_g117034= Data15_g117034.FadeParams;
				Out_FormParams15_g117034 = Data15_g117034.FormParams;
				Out_LandParams15_g117034 = Data15_g117034.LandParams;
				Out_WindParams15_g117034 = Data15_g117034.WindParams;
				Out_PushParams15_g117034 = Data15_g117034.PushParams;
				half4 Input_FormParams214_g117031 = Out_LandParams15_g117034;
				float temp_output_572_0_g117031 = (Input_FormParams214_g117031).z;
				float temp_output_595_0_g117031 = ( break592_g117031.y + temp_output_572_0_g117031 );
				float lerpResult604_g117031 = lerp( break592_g117031.y , temp_output_595_0_g117031 , ( _LandscapeHeightValue * TVE_IsEnabled ));
				float3 appendResult593_g117031 = (float3(break592_g117031.x , lerpResult604_g117031 , break592_g117031.z));
				#ifdef TVE_LANDSCAPE
				float3 staticSwitch575_g117031 = appendResult593_g117031;
				#else
				float3 staticSwitch575_g117031 = Input_PositionOS147_g117031;
				#endif
				half3 Final_PositionOS580_g117031 = staticSwitch575_g117031;
				float3 In_PositionOS16_g117033 = Final_PositionOS580_g117031;
				float3 In_PositionWS16_g117033 = Out_PositionWS15_g117032;
				float3 In_PositionWO16_g117033 = Out_PositionWO15_g117032;
				float3 In_PositionRawOS16_g117033 = Out_PositionRawOS15_g117032;
				float3 In_PositionAddOS16_g117033 = Out_PositionAddOS15_g117032;
				float3 In_PivotOS16_g117033 = Out_PivotOS15_g117032;
				float3 In_PivotWS16_g117033 = Out_PivotWS15_g117032;
				float3 temp_output_481_19_g117031 = Out_PivotWO15_g117032;
				float3 In_PivotWO16_g117033 = temp_output_481_19_g117031;
				float3 temp_output_481_20_g117031 = Out_NormalOS15_g117032;
				float3 In_NormalOS16_g117033 = temp_output_481_20_g117031;
				float3 In_NormalWS16_g117033 = Out_NormalWS15_g117032;
				float3 In_NormalRawOS16_g117033 = Out_NormalRawOS15_g117032;
				float3 In_NormalRawWS16_g117033 = Out_NormalRawWS15_g117032;
				float4 In_TangentOS16_g117033 = Out_TangentOS15_g117032;
				float3 In_ViewDirWS16_g117033 = Out_ViewDirWS15_g117032;
				float4 In_VertexData16_g117033 = Out_VertexData15_g117032;
				float4 In_MotionData16_g117033 = Out_MotionData15_g117032;
				float4 In_BoundsData16_g117033 = Out_BoundsData15_g117032;
				float4 In_RotationData16_g117033 = Out_RotationData15_g117032;
				Data16_g117033.Dummy = In_Dummy16_g117033;
				Data16_g117033.PositionOS = In_PositionOS16_g117033;
				Data16_g117033.PositionWS = In_PositionWS16_g117033;
				Data16_g117033.PositionWO = In_PositionWO16_g117033;
				Data16_g117033.PositionRawOS = In_PositionRawOS16_g117033;
				Data16_g117033.PositionAddOS = In_PositionAddOS16_g117033;
				Data16_g117033.PivotOS = In_PivotOS16_g117033;
				Data16_g117033.PivotWS = In_PivotWS16_g117033;
				Data16_g117033.PivotWO = In_PivotWO16_g117033;
				Data16_g117033.NormalOS = In_NormalOS16_g117033;
				Data16_g117033.NormalWS = In_NormalWS16_g117033;
				Data16_g117033.NormalRawOS = In_NormalRawOS16_g117033;
				Data16_g117033.NormalRawWS = In_NormalRawWS16_g117033;
				Data16_g117033.TangentOS = In_TangentOS16_g117033;
				Data16_g117033.ViewDirWS = In_ViewDirWS16_g117033;
				Data16_g117033.VertexData = In_VertexData16_g117033;
				Data16_g117033.MotionData = In_MotionData16_g117033;
				Data16_g117033.BoundsData = In_BoundsData16_g117033;
				Data16_g117033.RotationData = In_RotationData16_g117033;
				TVEModelData Data15_g117040 = Data16_g117033;
				float Out_Dummy15_g117040 = 0;
				float3 Out_PositionOS15_g117040 = float3( 0,0,0 );
				float3 Out_PositionWS15_g117040 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117040 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g117040 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g117040 = float3( 0,0,0 );
				float3 Out_PivotOS15_g117040 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117040 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117040 = float3( 0,0,0 );
				float3 Out_NormalOS15_g117040 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117040 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g117040 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g117040 = float3( 0,0,0 );
				float4 Out_TangentOS15_g117040 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g117040 = float3( 0,0,0 );
				float4 Out_VertexData15_g117040 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g117040 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117040 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g117040 = float4( 0,0,0,0 );
				Out_Dummy15_g117040 = Data15_g117040.Dummy;
				Out_PositionOS15_g117040 = Data15_g117040.PositionOS;
				Out_PositionWS15_g117040 = Data15_g117040.PositionWS;
				Out_PositionWO15_g117040 = Data15_g117040.PositionWO;
				Out_PositionRawOS15_g117040 = Data15_g117040.PositionRawOS;
				Out_PositionAddOS15_g117040 = Data15_g117040.PositionAddOS;
				Out_PivotOS15_g117040 = Data15_g117040.PivotOS;
				Out_PivotWS15_g117040 = Data15_g117040.PivotWS;
				Out_PivotWO15_g117040 = Data15_g117040.PivotWO;
				Out_NormalOS15_g117040 = Data15_g117040.NormalOS;
				Out_NormalWS15_g117040 = Data15_g117040.NormalWS;
				Out_NormalRawOS15_g117040 = Data15_g117040.NormalRawOS;
				Out_NormalRawWS15_g117040 = Data15_g117040.NormalRawWS;
				Out_TangentOS15_g117040 = Data15_g117040.TangentOS;
				Out_ViewDirWS15_g117040 = Data15_g117040.ViewDirWS;
				Out_VertexData15_g117040 = Data15_g117040.VertexData;
				Out_MotionData15_g117040 = Data15_g117040.MotionData;
				Out_BoundsData15_g117040 = Data15_g117040.BoundsData;
				Out_RotationData15_g117040 = Data15_g117040.RotationData;
				float3 temp_output_31_0_g117038 = Out_PositionOS15_g117040;
				
				o.ase_texcoord2.xyz = ase_worldPos;
				o.ase_texcoord3.xyz = ase_worldNormal;
				float3 ase_worldTangent = UnityObjectToWorldDir(v.tangent);
				o.ase_texcoord4.xyz = ase_worldTangent;
				float ase_vertexTangentSign = v.tangent.w * ( unity_WorldTransformParams.w >= 0.0 ? 1.0 : -1.0 );
				float3 ase_worldBitangent = cross( ase_worldNormal, ase_worldTangent ) * ase_vertexTangentSign;
				o.ase_texcoord5.xyz = ase_worldBitangent;
				o.ase_texcoord6.xyz = vertexToFrag73_g114306;
				
				o.ase_color = v.ase_color;
				o.ase_texcoord7 = v.ase_texcoord;
				
				//setting value to unused interpolator channels and avoid initialization warnings
				o.ase_texcoord2.w = 0;
				o.ase_texcoord3.w = 0;
				o.ase_texcoord4.w = 0;
				o.ase_texcoord5.w = 0;
				o.ase_texcoord6.w = 0;
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					float3 defaultVertexValue = v.vertex.xyz;
				#else
					float3 defaultVertexValue = float3(0, 0, 0);
				#endif
				float3 vertexValue = temp_output_31_0_g117038;
				#ifdef ASE_ABSOLUTE_VERTEX_POS
					v.vertex.xyz = vertexValue;
				#else
					v.vertex.xyz += vertexValue;
				#endif
				v.vertex.w = 1;
				v.normal = Out_NormalOS15_g117040;
				v.tangent = Out_TangentOS15_g117040;

				TRANSFER_SHADOW_CASTER_NORMALOFFSET(o)
				return o;
			}

			#if defined(ASE_TESSELLATION)
			struct VertexControl
			{
				float4 vertex : INTERNALTESSPOS;
				float4 tangent : TANGENT;
				float3 normal : NORMAL;
				float4 texcoord1 : TEXCOORD1;
				float4 texcoord2 : TEXCOORD2;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;

				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct TessellationFactors
			{
				float edge[3] : SV_TessFactor;
				float inside : SV_InsideTessFactor;
			};

			VertexControl vert ( appdata v )
			{
				VertexControl o;
				UNITY_SETUP_INSTANCE_ID(v);
				UNITY_TRANSFER_INSTANCE_ID(v, o);
				o.vertex = v.vertex;
				o.tangent = v.tangent;
				o.normal = v.normal;
				o.texcoord1 = v.texcoord1;
				o.texcoord2 = v.texcoord2;
				o.ase_color = v.ase_color;
				o.ase_texcoord = v.ase_texcoord;
				return o;
			}

			TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
			{
				TessellationFactors o;
				float4 tf = 1;
				float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
				float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
				#if defined(ASE_FIXED_TESSELLATION)
				tf = FixedTess( tessValue );
				#elif defined(ASE_DISTANCE_TESSELLATION)
				tf = DistanceBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, tessValue, tessMin, tessMax, UNITY_MATRIX_M, _WorldSpaceCameraPos );
				#elif defined(ASE_LENGTH_TESSELLATION)
				tf = EdgeLengthBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams );
				#elif defined(ASE_LENGTH_CULL_TESSELLATION)
				tf = EdgeLengthBasedTessCull(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, tessMaxDisp, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams, unity_CameraWorldClipPlanes );
				#endif
				o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
				return o;
			}

			[domain("tri")]
			[partitioning("fractional_odd")]
			[outputtopology("triangle_cw")]
			[patchconstantfunc("TessellationFunction")]
			[outputcontrolpoints(3)]
			VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
			{
			   return patch[id];
			}

			[domain("tri")]
			v2f DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
			{
				appdata o = (appdata) 0;
				o.vertex = patch[0].vertex * bary.x + patch[1].vertex * bary.y + patch[2].vertex * bary.z;
				o.tangent = patch[0].tangent * bary.x + patch[1].tangent * bary.y + patch[2].tangent * bary.z;
				o.normal = patch[0].normal * bary.x + patch[1].normal * bary.y + patch[2].normal * bary.z;
				o.texcoord1 = patch[0].texcoord1 * bary.x + patch[1].texcoord1 * bary.y + patch[2].texcoord1 * bary.z;
				o.texcoord2 = patch[0].texcoord2 * bary.x + patch[1].texcoord2 * bary.y + patch[2].texcoord2 * bary.z;
				o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
				o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
				#if defined(ASE_PHONG_TESSELLATION)
				float3 pp[3];
				for (int i = 0; i < 3; ++i)
					pp[i] = o.vertex.xyz - patch[i].normal * (dot(o.vertex.xyz, patch[i].normal) - dot(patch[i].vertex.xyz, patch[i].normal));
				float phongStrength = _TessPhongStrength;
				o.vertex.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.vertex.xyz;
				#endif
				UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
				return VertexFunction(o);
			}
			#else
			v2f vert ( appdata v )
			{
				return VertexFunction( v );
			}
			#endif

			fixed4 frag (v2f IN 
				#ifdef _DEPTHOFFSET_ON
				, out float outputDepth : SV_Depth
				#endif
				#if !defined( CAN_SKIP_VPOS )
				, UNITY_VPOS_TYPE vpos : VPOS
				#endif
				) : SV_Target
			{
				UNITY_SETUP_INSTANCE_ID(IN);

				#ifdef LOD_FADE_CROSSFADE
					UNITY_APPLY_DITHER_CROSSFADE(IN.pos.xy);
				#endif

				#if defined(ASE_LIGHTING_SIMPLE)
					SurfaceOutput o = (SurfaceOutput)0;
				#else
					#if defined(_SPECULAR_SETUP)
						SurfaceOutputStandardSpecular o = (SurfaceOutputStandardSpecular)0;
					#else
						SurfaceOutputStandard o = (SurfaceOutputStandard)0;
					#endif
				#endif

				float localCustomAlphaClip19_g117044 = ( 0.0 );
				float localBreakData4_g117042 = ( 0.0 );
				float localCompData3_g117019 = ( 0.0 );
				TVEVisualData Data3_g117019 = (TVEVisualData)0;
				half Dummy594_g117018 = ( _CutoutCategory + _CutoutEnd + _CutoutElementMode + _CutoutBakeInfo );
				float In_Dummy3_g117019 = Dummy594_g117018;
				float localBreakData4_g117029 = ( 0.0 );
				float localCompData3_g117013 = ( 0.0 );
				TVEVisualData Data3_g117013 = (TVEVisualData)0;
				half Dummy145_g117003 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveElementMode + _EmissiveFlagMode );
				float In_Dummy3_g117013 = Dummy145_g117003;
				float localBreakData4_g117012 = ( 0.0 );
				float localCompData3_g116976 = ( 0.0 );
				TVEVisualData Data3_g116976 = (TVEVisualData)0;
				half Dummy594_g116974 = ( _WetnessCategory + _WetnessEnd + _WetnessElementMode + _WetnessBakeInfo );
				float In_Dummy3_g116976 = Dummy594_g116974;
				float localBreakData4_g116975 = ( 0.0 );
				float localCompData3_g116941 = ( 0.0 );
				TVEVisualData Data3_g116941 = (TVEVisualData)0;
				half Dummy594_g116938 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayElementMode + _OverlayBakeInfo );
				float In_Dummy3_g116941 = Dummy594_g116938;
				float localBreakData4_g116939 = ( 0.0 );
				float localCompData3_g116918 = ( 0.0 );
				TVEVisualData Data3_g116918 = (TVEVisualData)0;
				half Dummy205_g116915 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessElementMode + _DrynessBakeInfo );
				float In_Dummy3_g116918 = Dummy205_g116915;
				float localBreakData4_g116917 = ( 0.0 );
				float localCompData3_g116912 = ( 0.0 );
				TVEVisualData Data3_g116912 = (TVEVisualData)0;
				half Dummy205_g116891 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeInfo );
				float In_Dummy3_g116912 = Dummy205_g116891;
				float localBreakData4_g116913 = ( 0.0 );
				float localCompData3_g116778 = ( 0.0 );
				TVEVisualData Data3_g116778 = (TVEVisualData)0;
				half Dummy9163_g116777 = ( _CategoryTerrain + _EndTerrain );
				float In_Dummy3_g116778 = Dummy9163_g116777;
				float localHeightBasedBlending7362_g116779 = ( 0.0 );
				float3 ase_worldPos = IN.ase_texcoord2.xyz;
				float4 appendResult9125_g116779 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
				float4 temp_output_35_0_g116887 = appendResult9125_g116779;
				float2 InputScale48_g116887 = (temp_output_35_0_g116887).zw;
				half2 FinalScale53_g116887 = ( 1.0 / InputScale48_g116887 );
				float2 InputPosition52_g116887 = (temp_output_35_0_g116887).xy;
				half2 FinalPosition58_g116887 = -( FinalScale53_g116887 * InputPosition52_g116887 );
				float2 temp_output_65_0_g116887 = ( ( (ase_worldPos).xz * FinalScale53_g116887 ) + FinalPosition58_g116887 );
				float4 temp_output_70_0_g116887 = _TerrainControlTex1_TexelSize;
				float2 InputTexelSize68_g116887 = (temp_output_70_0_g116887).zw;
				float2 temp_cast_0 = (1.0).xx;
				float2 InputTexelRecip69_g116887 = (temp_output_70_0_g116887).xy;
				float2 Terrain_Control_UV7873_g116779 = ( ( ( temp_output_65_0_g116887 / ( 1.0 / ( InputTexelSize68_g116887 - temp_cast_0 ) ) ) + 0.5 ) * InputTexelRecip69_g116887 );
				half4 Terrain_Control_047365_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_047362_g116779 = Terrain_Control_047365_g116779;
				half4 Terrain_Control_087366_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_087362_g116779 = Terrain_Control_087366_g116779;
				half4 Terrain_Control_127712_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_127362_g116779 = Terrain_Control_127712_g116779;
				half4 Terrain_Control_167711_g116779 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g116779 );
				float4 control_167362_g116779 = Terrain_Control_167711_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116824) = _TerrainShaderTex1;
				float localFilterTexture30_g116885 = ( 0.0 );
				SamplerState SamplerDefault30_g116885 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g116885 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g116885 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g116885 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g116885 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g116885 = SamplerDefault30_g116885;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g116885 = SamplerDefault30_g116885;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g116885 = SamplerPoint30_g116885;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g116885 = SamplerLow30_g116885;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g116885 = SamplerMedium30_g116885;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g116885 = SamplerHigh30_g116885;
				#endif
				SamplerState Sampler238_g116824 = SS30_g116885;
				half4 Input_Terrain_Coords_016785_g116779 = _TerrainCoord1;
				float4 temp_output_37_0_g116824 = Input_Terrain_Coords_016785_g116779;
				half4 Coords238_g116824 = temp_output_37_0_g116824;
				half3 Input_Position9197_g116779 = ase_worldPos;
				float3 temp_output_279_0_g116824 = Input_Position9197_g116779;
				half3 WorldPosition238_g116824 = temp_output_279_0_g116824;
				half4 localSamplePlanar2D238_g116824 = SamplePlanar2D( Texture238_g116824 , Sampler238_g116824 , Coords238_g116824 , WorldPosition238_g116824 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116824) = _TerrainShaderTex1;
				SamplerState Sampler246_g116824 = SS30_g116885;
				half4 Coords246_g116824 = temp_output_37_0_g116824;
				half3 WorldPosition246_g116824 = temp_output_279_0_g116824;
				float3 ase_worldNormal = IN.ase_texcoord3.xyz;
				half3 Input_Normal9199_g116779 = ase_worldNormal;
				float3 temp_output_280_0_g116824 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116824 = temp_output_280_0_g116824;
				half4 localSamplePlanar3D246_g116824 = SamplePlanar3D( Texture246_g116824 , Sampler246_g116824 , Coords246_g116824 , WorldPosition246_g116824 , WorldNormal246_g116824 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116824) = _TerrainShaderTex1;
				SamplerState Sampler234_g116824 = SS30_g116885;
				float4 Coords234_g116824 = temp_output_37_0_g116824;
				float3 WorldPosition234_g116824 = temp_output_279_0_g116824;
				float4 localSampleStochastic2D234_g116824 = SampleStochastic2D( Texture234_g116824 , Sampler234_g116824 , Coords234_g116824 , WorldPosition234_g116824 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116824) = _TerrainShaderTex1;
				SamplerState Sampler263_g116824 = SS30_g116885;
				half4 Coords263_g116824 = temp_output_37_0_g116824;
				half3 WorldPosition263_g116824 = temp_output_279_0_g116824;
				half3 WorldNormal263_g116824 = temp_output_280_0_g116824;
				half4 localSampleStochastic3D263_g116824 = SampleStochastic3D( Texture263_g116824 , Sampler263_g116824 , Coords263_g116824 , WorldPosition263_g116824 , WorldNormal263_g116824 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8639_g116779 = localSamplePlanar2D238_g116824;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8639_g116779 = localSamplePlanar3D246_g116824;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8639_g116779 = localSampleStochastic2D234_g116824;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8639_g116779 = localSampleStochastic3D263_g116824;
				#else
				float4 staticSwitch8639_g116779 = localSamplePlanar2D238_g116824;
				#endif
				float4 temp_output_7_0_g116781 = _TerrainShaderMin1;
				float4 temp_output_10_0_g116781 = ( _TerrainShaderMax1 - temp_output_7_0_g116781 );
				float4 temp_output_6970_0_g116779 = saturate( ( ( staticSwitch8639_g116779 - temp_output_7_0_g116781 ) / ( temp_output_10_0_g116781 + 0.0001 ) ) );
				half4 Masks_015_g116785 = temp_output_6970_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116828) = _TerrainShaderTex2;
				SamplerState Sampler238_g116828 = SS30_g116885;
				half4 Input_Terrain_Coords_026787_g116779 = _TerrainCoord2;
				float4 temp_output_37_0_g116828 = Input_Terrain_Coords_026787_g116779;
				half4 Coords238_g116828 = temp_output_37_0_g116828;
				float3 temp_output_279_0_g116828 = Input_Position9197_g116779;
				half3 WorldPosition238_g116828 = temp_output_279_0_g116828;
				half4 localSamplePlanar2D238_g116828 = SamplePlanar2D( Texture238_g116828 , Sampler238_g116828 , Coords238_g116828 , WorldPosition238_g116828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116828) = _TerrainShaderTex2;
				SamplerState Sampler246_g116828 = SS30_g116885;
				half4 Coords246_g116828 = temp_output_37_0_g116828;
				half3 WorldPosition246_g116828 = temp_output_279_0_g116828;
				float3 temp_output_280_0_g116828 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116828 = temp_output_280_0_g116828;
				half4 localSamplePlanar3D246_g116828 = SamplePlanar3D( Texture246_g116828 , Sampler246_g116828 , Coords246_g116828 , WorldPosition246_g116828 , WorldNormal246_g116828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116828) = _TerrainShaderTex2;
				SamplerState Sampler234_g116828 = SS30_g116885;
				float4 Coords234_g116828 = temp_output_37_0_g116828;
				float3 WorldPosition234_g116828 = temp_output_279_0_g116828;
				float4 localSampleStochastic2D234_g116828 = SampleStochastic2D( Texture234_g116828 , Sampler234_g116828 , Coords234_g116828 , WorldPosition234_g116828 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116828) = _TerrainShaderTex2;
				SamplerState Sampler263_g116828 = SS30_g116885;
				half4 Coords263_g116828 = temp_output_37_0_g116828;
				half3 WorldPosition263_g116828 = temp_output_279_0_g116828;
				half3 WorldNormal263_g116828 = temp_output_280_0_g116828;
				half4 localSampleStochastic3D263_g116828 = SampleStochastic3D( Texture263_g116828 , Sampler263_g116828 , Coords263_g116828 , WorldPosition263_g116828 , WorldNormal263_g116828 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8640_g116779 = localSamplePlanar2D238_g116828;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8640_g116779 = localSamplePlanar3D246_g116828;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8640_g116779 = localSampleStochastic2D234_g116828;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8640_g116779 = localSampleStochastic3D263_g116828;
				#else
				float4 staticSwitch8640_g116779 = localSamplePlanar2D238_g116828;
				#endif
				float4 temp_output_7_0_g116791 = _TerrainShaderMin2;
				float4 temp_output_10_0_g116791 = ( _TerrainShaderMax2 - temp_output_7_0_g116791 );
				float4 temp_output_6977_0_g116779 = saturate( ( ( staticSwitch8640_g116779 - temp_output_7_0_g116791 ) / ( temp_output_10_0_g116791 + 0.0001 ) ) );
				half4 Masks_0210_g116785 = temp_output_6977_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116833) = _TerrainShaderTex3;
				SamplerState Sampler238_g116833 = SS30_g116885;
				half4 Input_Terrain_Coords_036789_g116779 = _TerrainCoord3;
				float4 temp_output_37_0_g116833 = Input_Terrain_Coords_036789_g116779;
				half4 Coords238_g116833 = temp_output_37_0_g116833;
				float3 temp_output_279_0_g116833 = Input_Position9197_g116779;
				half3 WorldPosition238_g116833 = temp_output_279_0_g116833;
				half4 localSamplePlanar2D238_g116833 = SamplePlanar2D( Texture238_g116833 , Sampler238_g116833 , Coords238_g116833 , WorldPosition238_g116833 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116833) = _TerrainShaderTex3;
				SamplerState Sampler246_g116833 = SS30_g116885;
				half4 Coords246_g116833 = temp_output_37_0_g116833;
				half3 WorldPosition246_g116833 = temp_output_279_0_g116833;
				float3 temp_output_280_0_g116833 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116833 = temp_output_280_0_g116833;
				half4 localSamplePlanar3D246_g116833 = SamplePlanar3D( Texture246_g116833 , Sampler246_g116833 , Coords246_g116833 , WorldPosition246_g116833 , WorldNormal246_g116833 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116833) = _TerrainShaderTex3;
				SamplerState Sampler234_g116833 = SS30_g116885;
				float4 Coords234_g116833 = temp_output_37_0_g116833;
				float3 WorldPosition234_g116833 = temp_output_279_0_g116833;
				float4 localSampleStochastic2D234_g116833 = SampleStochastic2D( Texture234_g116833 , Sampler234_g116833 , Coords234_g116833 , WorldPosition234_g116833 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116833) = _TerrainShaderTex3;
				SamplerState Sampler263_g116833 = SS30_g116885;
				half4 Coords263_g116833 = temp_output_37_0_g116833;
				half3 WorldPosition263_g116833 = temp_output_279_0_g116833;
				half3 WorldNormal263_g116833 = temp_output_280_0_g116833;
				half4 localSampleStochastic3D263_g116833 = SampleStochastic3D( Texture263_g116833 , Sampler263_g116833 , Coords263_g116833 , WorldPosition263_g116833 , WorldNormal263_g116833 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8641_g116779 = localSamplePlanar2D238_g116833;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8641_g116779 = localSamplePlanar3D246_g116833;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8641_g116779 = localSampleStochastic2D234_g116833;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8641_g116779 = localSampleStochastic3D263_g116833;
				#else
				float4 staticSwitch8641_g116779 = localSamplePlanar2D238_g116833;
				#endif
				float4 temp_output_7_0_g116792 = _TerrainShaderMin3;
				float4 temp_output_10_0_g116792 = ( _TerrainShaderMax3 - temp_output_7_0_g116792 );
				float4 temp_output_6978_0_g116779 = saturate( ( ( staticSwitch8641_g116779 - temp_output_7_0_g116792 ) / ( temp_output_10_0_g116792 + 0.0001 ) ) );
				half4 Masks_0312_g116785 = temp_output_6978_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116834) = _TerrainShaderTex4;
				SamplerState Sampler238_g116834 = SS30_g116885;
				half4 Input_Terrain_Coords_046791_g116779 = _TerrainCoord4;
				float4 temp_output_37_0_g116834 = Input_Terrain_Coords_046791_g116779;
				half4 Coords238_g116834 = temp_output_37_0_g116834;
				float3 temp_output_279_0_g116834 = Input_Position9197_g116779;
				half3 WorldPosition238_g116834 = temp_output_279_0_g116834;
				half4 localSamplePlanar2D238_g116834 = SamplePlanar2D( Texture238_g116834 , Sampler238_g116834 , Coords238_g116834 , WorldPosition238_g116834 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116834) = _TerrainShaderTex4;
				SamplerState Sampler246_g116834 = SS30_g116885;
				half4 Coords246_g116834 = temp_output_37_0_g116834;
				half3 WorldPosition246_g116834 = temp_output_279_0_g116834;
				float3 temp_output_280_0_g116834 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116834 = temp_output_280_0_g116834;
				half4 localSamplePlanar3D246_g116834 = SamplePlanar3D( Texture246_g116834 , Sampler246_g116834 , Coords246_g116834 , WorldPosition246_g116834 , WorldNormal246_g116834 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116834) = _TerrainShaderTex4;
				SamplerState Sampler234_g116834 = SS30_g116885;
				float4 Coords234_g116834 = temp_output_37_0_g116834;
				float3 WorldPosition234_g116834 = temp_output_279_0_g116834;
				float4 localSampleStochastic2D234_g116834 = SampleStochastic2D( Texture234_g116834 , Sampler234_g116834 , Coords234_g116834 , WorldPosition234_g116834 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116834) = _TerrainShaderTex4;
				SamplerState Sampler263_g116834 = SS30_g116885;
				half4 Coords263_g116834 = temp_output_37_0_g116834;
				half3 WorldPosition263_g116834 = temp_output_279_0_g116834;
				half3 WorldNormal263_g116834 = temp_output_280_0_g116834;
				half4 localSampleStochastic3D263_g116834 = SampleStochastic3D( Texture263_g116834 , Sampler263_g116834 , Coords263_g116834 , WorldPosition263_g116834 , WorldNormal263_g116834 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8642_g116779 = localSamplePlanar2D238_g116834;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8642_g116779 = localSamplePlanar3D246_g116834;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8642_g116779 = localSampleStochastic2D234_g116834;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8642_g116779 = localSampleStochastic3D263_g116834;
				#else
				float4 staticSwitch8642_g116779 = localSamplePlanar2D238_g116834;
				#endif
				float4 temp_output_7_0_g116793 = _TerrainShaderMin4;
				float4 temp_output_10_0_g116793 = ( _TerrainShaderMax4 - temp_output_7_0_g116793 );
				float4 temp_output_6983_0_g116779 = saturate( ( ( staticSwitch8642_g116779 - temp_output_7_0_g116793 ) / ( temp_output_10_0_g116793 + 0.0001 ) ) );
				half4 Masks_0414_g116785 = temp_output_6983_0_g116779;
				float4 appendResult29_g116785 = (float4((Masks_015_g116785).z , (Masks_0210_g116785).z , (Masks_0312_g116785).z , (Masks_0414_g116785).z));
				half4 Control31_g116785 = Terrain_Control_047365_g116779;
				half4 Terrain_Height_047210_g116779 = ( appendResult29_g116785 * Control31_g116785 );
				float4 heights_047362_g116779 = Terrain_Height_047210_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116837) = _TerrainShaderTex5;
				SamplerState Sampler238_g116837 = SS30_g116885;
				half4 Input_Terrain_Coords_058750_g116779 = _TerrainCoord5;
				float4 temp_output_37_0_g116837 = Input_Terrain_Coords_058750_g116779;
				half4 Coords238_g116837 = temp_output_37_0_g116837;
				float3 temp_output_279_0_g116837 = Input_Position9197_g116779;
				half3 WorldPosition238_g116837 = temp_output_279_0_g116837;
				half4 localSamplePlanar2D238_g116837 = SamplePlanar2D( Texture238_g116837 , Sampler238_g116837 , Coords238_g116837 , WorldPosition238_g116837 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116837) = _TerrainShaderTex5;
				SamplerState Sampler246_g116837 = SS30_g116885;
				half4 Coords246_g116837 = temp_output_37_0_g116837;
				half3 WorldPosition246_g116837 = temp_output_279_0_g116837;
				float3 temp_output_280_0_g116837 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116837 = temp_output_280_0_g116837;
				half4 localSamplePlanar3D246_g116837 = SamplePlanar3D( Texture246_g116837 , Sampler246_g116837 , Coords246_g116837 , WorldPosition246_g116837 , WorldNormal246_g116837 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116837) = _TerrainShaderTex5;
				SamplerState Sampler234_g116837 = SS30_g116885;
				float4 Coords234_g116837 = temp_output_37_0_g116837;
				float3 WorldPosition234_g116837 = temp_output_279_0_g116837;
				float4 localSampleStochastic2D234_g116837 = SampleStochastic2D( Texture234_g116837 , Sampler234_g116837 , Coords234_g116837 , WorldPosition234_g116837 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116837) = _TerrainShaderTex5;
				SamplerState Sampler263_g116837 = SS30_g116885;
				half4 Coords263_g116837 = temp_output_37_0_g116837;
				half3 WorldPosition263_g116837 = temp_output_279_0_g116837;
				half3 WorldNormal263_g116837 = temp_output_280_0_g116837;
				half4 localSampleStochastic3D263_g116837 = SampleStochastic3D( Texture263_g116837 , Sampler263_g116837 , Coords263_g116837 , WorldPosition263_g116837 , WorldNormal263_g116837 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8710_g116779 = localSamplePlanar2D238_g116837;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8710_g116779 = localSamplePlanar3D246_g116837;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8710_g116779 = localSampleStochastic2D234_g116837;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8710_g116779 = localSampleStochastic3D263_g116837;
				#else
				float4 staticSwitch8710_g116779 = localSamplePlanar2D238_g116837;
				#endif
				float4 temp_output_7_0_g116796 = _TerrainShaderMin5;
				float4 temp_output_10_0_g116796 = ( _TerrainShaderMax5 - temp_output_7_0_g116796 );
				float4 temp_output_8714_0_g116779 = saturate( ( ( staticSwitch8710_g116779 - temp_output_7_0_g116796 ) / ( temp_output_10_0_g116796 + 0.0001 ) ) );
				half4 Masks_015_g116797 = temp_output_8714_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116868) = _TerrainShaderTex6;
				SamplerState Sampler238_g116868 = SS30_g116885;
				half4 Input_Terrain_Coords_068751_g116779 = _TerrainCoord6;
				float4 temp_output_37_0_g116868 = Input_Terrain_Coords_068751_g116779;
				half4 Coords238_g116868 = temp_output_37_0_g116868;
				float3 temp_output_279_0_g116868 = Input_Position9197_g116779;
				half3 WorldPosition238_g116868 = temp_output_279_0_g116868;
				half4 localSamplePlanar2D238_g116868 = SamplePlanar2D( Texture238_g116868 , Sampler238_g116868 , Coords238_g116868 , WorldPosition238_g116868 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116868) = _TerrainShaderTex6;
				SamplerState Sampler246_g116868 = SS30_g116885;
				half4 Coords246_g116868 = temp_output_37_0_g116868;
				half3 WorldPosition246_g116868 = temp_output_279_0_g116868;
				float3 temp_output_280_0_g116868 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116868 = temp_output_280_0_g116868;
				half4 localSamplePlanar3D246_g116868 = SamplePlanar3D( Texture246_g116868 , Sampler246_g116868 , Coords246_g116868 , WorldPosition246_g116868 , WorldNormal246_g116868 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116868) = _TerrainShaderTex6;
				SamplerState Sampler234_g116868 = SS30_g116885;
				float4 Coords234_g116868 = temp_output_37_0_g116868;
				float3 WorldPosition234_g116868 = temp_output_279_0_g116868;
				float4 localSampleStochastic2D234_g116868 = SampleStochastic2D( Texture234_g116868 , Sampler234_g116868 , Coords234_g116868 , WorldPosition234_g116868 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116868) = _TerrainShaderTex6;
				SamplerState Sampler263_g116868 = SS30_g116885;
				half4 Coords263_g116868 = temp_output_37_0_g116868;
				half3 WorldPosition263_g116868 = temp_output_279_0_g116868;
				half3 WorldNormal263_g116868 = temp_output_280_0_g116868;
				half4 localSampleStochastic3D263_g116868 = SampleStochastic3D( Texture263_g116868 , Sampler263_g116868 , Coords263_g116868 , WorldPosition263_g116868 , WorldNormal263_g116868 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8711_g116779 = localSamplePlanar2D238_g116868;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8711_g116779 = localSamplePlanar3D246_g116868;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8711_g116779 = localSampleStochastic2D234_g116868;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8711_g116779 = localSampleStochastic3D263_g116868;
				#else
				float4 staticSwitch8711_g116779 = localSamplePlanar2D238_g116868;
				#endif
				float4 temp_output_7_0_g116821 = _TerrainShaderMin6;
				float4 temp_output_10_0_g116821 = ( _TerrainShaderMax6 - temp_output_7_0_g116821 );
				float4 temp_output_8721_0_g116779 = saturate( ( ( staticSwitch8711_g116779 - temp_output_7_0_g116821 ) / ( temp_output_10_0_g116821 + 0.0001 ) ) );
				half4 Masks_0210_g116797 = temp_output_8721_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116869) = _TerrainShaderTex7;
				SamplerState Sampler238_g116869 = SS30_g116885;
				half4 Input_Terrain_Coords_078752_g116779 = _TerrainCoord7;
				float4 temp_output_37_0_g116869 = Input_Terrain_Coords_078752_g116779;
				half4 Coords238_g116869 = temp_output_37_0_g116869;
				float3 temp_output_279_0_g116869 = Input_Position9197_g116779;
				half3 WorldPosition238_g116869 = temp_output_279_0_g116869;
				half4 localSamplePlanar2D238_g116869 = SamplePlanar2D( Texture238_g116869 , Sampler238_g116869 , Coords238_g116869 , WorldPosition238_g116869 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116869) = _TerrainShaderTex7;
				SamplerState Sampler246_g116869 = SS30_g116885;
				half4 Coords246_g116869 = temp_output_37_0_g116869;
				half3 WorldPosition246_g116869 = temp_output_279_0_g116869;
				float3 temp_output_280_0_g116869 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116869 = temp_output_280_0_g116869;
				half4 localSamplePlanar3D246_g116869 = SamplePlanar3D( Texture246_g116869 , Sampler246_g116869 , Coords246_g116869 , WorldPosition246_g116869 , WorldNormal246_g116869 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116869) = _TerrainShaderTex7;
				SamplerState Sampler234_g116869 = SS30_g116885;
				float4 Coords234_g116869 = temp_output_37_0_g116869;
				float3 WorldPosition234_g116869 = temp_output_279_0_g116869;
				float4 localSampleStochastic2D234_g116869 = SampleStochastic2D( Texture234_g116869 , Sampler234_g116869 , Coords234_g116869 , WorldPosition234_g116869 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116869) = _TerrainShaderTex7;
				SamplerState Sampler263_g116869 = SS30_g116885;
				half4 Coords263_g116869 = temp_output_37_0_g116869;
				half3 WorldPosition263_g116869 = temp_output_279_0_g116869;
				half3 WorldNormal263_g116869 = temp_output_280_0_g116869;
				half4 localSampleStochastic3D263_g116869 = SampleStochastic3D( Texture263_g116869 , Sampler263_g116869 , Coords263_g116869 , WorldPosition263_g116869 , WorldNormal263_g116869 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8712_g116779 = localSamplePlanar2D238_g116869;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8712_g116779 = localSamplePlanar3D246_g116869;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8712_g116779 = localSampleStochastic2D234_g116869;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8712_g116779 = localSampleStochastic3D263_g116869;
				#else
				float4 staticSwitch8712_g116779 = localSamplePlanar2D238_g116869;
				#endif
				float4 temp_output_7_0_g116822 = _TerrainShaderMin7;
				float4 temp_output_10_0_g116822 = ( _TerrainShaderMax7 - temp_output_7_0_g116822 );
				float4 temp_output_8724_0_g116779 = saturate( ( ( staticSwitch8712_g116779 - temp_output_7_0_g116822 ) / ( temp_output_10_0_g116822 + 0.0001 ) ) );
				half4 Masks_0312_g116797 = temp_output_8724_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116870) = _TerrainShaderTex8;
				SamplerState Sampler238_g116870 = SS30_g116885;
				half4 Input_Terrain_Coords_088749_g116779 = _TerrainCoord8;
				float4 temp_output_37_0_g116870 = Input_Terrain_Coords_088749_g116779;
				half4 Coords238_g116870 = temp_output_37_0_g116870;
				float3 temp_output_279_0_g116870 = Input_Position9197_g116779;
				half3 WorldPosition238_g116870 = temp_output_279_0_g116870;
				half4 localSamplePlanar2D238_g116870 = SamplePlanar2D( Texture238_g116870 , Sampler238_g116870 , Coords238_g116870 , WorldPosition238_g116870 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116870) = _TerrainShaderTex8;
				SamplerState Sampler246_g116870 = SS30_g116885;
				half4 Coords246_g116870 = temp_output_37_0_g116870;
				half3 WorldPosition246_g116870 = temp_output_279_0_g116870;
				float3 temp_output_280_0_g116870 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116870 = temp_output_280_0_g116870;
				half4 localSamplePlanar3D246_g116870 = SamplePlanar3D( Texture246_g116870 , Sampler246_g116870 , Coords246_g116870 , WorldPosition246_g116870 , WorldNormal246_g116870 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116870) = _TerrainShaderTex8;
				SamplerState Sampler234_g116870 = SS30_g116885;
				float4 Coords234_g116870 = temp_output_37_0_g116870;
				float3 WorldPosition234_g116870 = temp_output_279_0_g116870;
				float4 localSampleStochastic2D234_g116870 = SampleStochastic2D( Texture234_g116870 , Sampler234_g116870 , Coords234_g116870 , WorldPosition234_g116870 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116870) = _TerrainShaderTex8;
				SamplerState Sampler263_g116870 = SS30_g116885;
				half4 Coords263_g116870 = temp_output_37_0_g116870;
				half3 WorldPosition263_g116870 = temp_output_279_0_g116870;
				half3 WorldNormal263_g116870 = temp_output_280_0_g116870;
				half4 localSampleStochastic3D263_g116870 = SampleStochastic3D( Texture263_g116870 , Sampler263_g116870 , Coords263_g116870 , WorldPosition263_g116870 , WorldNormal263_g116870 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8713_g116779 = localSamplePlanar2D238_g116870;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8713_g116779 = localSamplePlanar3D246_g116870;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8713_g116779 = localSampleStochastic2D234_g116870;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8713_g116779 = localSampleStochastic3D263_g116870;
				#else
				float4 staticSwitch8713_g116779 = localSamplePlanar2D238_g116870;
				#endif
				float4 temp_output_7_0_g116823 = _TerrainShaderMin8;
				float4 temp_output_10_0_g116823 = ( _TerrainShaderMax8 - temp_output_7_0_g116823 );
				float4 temp_output_8727_0_g116779 = saturate( ( ( staticSwitch8713_g116779 - temp_output_7_0_g116823 ) / ( temp_output_10_0_g116823 + 0.0001 ) ) );
				half4 Masks_0414_g116797 = temp_output_8727_0_g116779;
				float4 appendResult29_g116797 = (float4((Masks_015_g116797).z , (Masks_0210_g116797).z , (Masks_0312_g116797).z , (Masks_0414_g116797).z));
				half4 Control31_g116797 = Terrain_Control_087366_g116779;
				half4 Terrain_Height_088731_g116779 = ( appendResult29_g116797 * Control31_g116797 );
				float4 heights_087362_g116779 = Terrain_Height_088731_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116840) = _TerrainShaderTex9;
				SamplerState Sampler238_g116840 = SS30_g116885;
				half4 Input_Terrain_Coords_098833_g116779 = _TerrainCoord9;
				float4 temp_output_37_0_g116840 = Input_Terrain_Coords_098833_g116779;
				half4 Coords238_g116840 = temp_output_37_0_g116840;
				float3 temp_output_279_0_g116840 = Input_Position9197_g116779;
				half3 WorldPosition238_g116840 = temp_output_279_0_g116840;
				half4 localSamplePlanar2D238_g116840 = SamplePlanar2D( Texture238_g116840 , Sampler238_g116840 , Coords238_g116840 , WorldPosition238_g116840 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116840) = _TerrainShaderTex9;
				SamplerState Sampler246_g116840 = SS30_g116885;
				half4 Coords246_g116840 = temp_output_37_0_g116840;
				half3 WorldPosition246_g116840 = temp_output_279_0_g116840;
				float3 temp_output_280_0_g116840 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116840 = temp_output_280_0_g116840;
				half4 localSamplePlanar3D246_g116840 = SamplePlanar3D( Texture246_g116840 , Sampler246_g116840 , Coords246_g116840 , WorldPosition246_g116840 , WorldNormal246_g116840 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116840) = _TerrainShaderTex9;
				SamplerState Sampler234_g116840 = SS30_g116885;
				float4 Coords234_g116840 = temp_output_37_0_g116840;
				float3 WorldPosition234_g116840 = temp_output_279_0_g116840;
				float4 localSampleStochastic2D234_g116840 = SampleStochastic2D( Texture234_g116840 , Sampler234_g116840 , Coords234_g116840 , WorldPosition234_g116840 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116840) = _TerrainShaderTex9;
				SamplerState Sampler263_g116840 = SS30_g116885;
				half4 Coords263_g116840 = temp_output_37_0_g116840;
				half3 WorldPosition263_g116840 = temp_output_279_0_g116840;
				half3 WorldNormal263_g116840 = temp_output_280_0_g116840;
				half4 localSampleStochastic3D263_g116840 = SampleStochastic3D( Texture263_g116840 , Sampler263_g116840 , Coords263_g116840 , WorldPosition263_g116840 , WorldNormal263_g116840 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8878_g116779 = localSamplePlanar2D238_g116840;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8878_g116779 = localSamplePlanar3D246_g116840;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8878_g116779 = localSampleStochastic2D234_g116840;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8878_g116779 = localSampleStochastic3D263_g116840;
				#else
				float4 staticSwitch8878_g116779 = localSamplePlanar2D238_g116840;
				#endif
				float4 temp_output_7_0_g116803 = _TerrainShaderMin9;
				float4 temp_output_10_0_g116803 = ( _TerrainShaderMax9 - temp_output_7_0_g116803 );
				float4 temp_output_8815_0_g116779 = saturate( ( ( staticSwitch8878_g116779 - temp_output_7_0_g116803 ) / ( temp_output_10_0_g116803 + 0.0001 ) ) );
				half4 Masks_015_g116804 = temp_output_8815_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116850) = _TerrainShaderTex10;
				SamplerState Sampler238_g116850 = SS30_g116885;
				half4 Input_Terrain_Coords_108834_g116779 = _TerrainCoord10;
				float4 temp_output_37_0_g116850 = Input_Terrain_Coords_108834_g116779;
				half4 Coords238_g116850 = temp_output_37_0_g116850;
				float3 temp_output_279_0_g116850 = Input_Position9197_g116779;
				half3 WorldPosition238_g116850 = temp_output_279_0_g116850;
				half4 localSamplePlanar2D238_g116850 = SamplePlanar2D( Texture238_g116850 , Sampler238_g116850 , Coords238_g116850 , WorldPosition238_g116850 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116850) = _TerrainShaderTex10;
				SamplerState Sampler246_g116850 = SS30_g116885;
				half4 Coords246_g116850 = temp_output_37_0_g116850;
				half3 WorldPosition246_g116850 = temp_output_279_0_g116850;
				float3 temp_output_280_0_g116850 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116850 = temp_output_280_0_g116850;
				half4 localSamplePlanar3D246_g116850 = SamplePlanar3D( Texture246_g116850 , Sampler246_g116850 , Coords246_g116850 , WorldPosition246_g116850 , WorldNormal246_g116850 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116850) = _TerrainShaderTex10;
				SamplerState Sampler234_g116850 = SS30_g116885;
				float4 Coords234_g116850 = temp_output_37_0_g116850;
				float3 WorldPosition234_g116850 = temp_output_279_0_g116850;
				float4 localSampleStochastic2D234_g116850 = SampleStochastic2D( Texture234_g116850 , Sampler234_g116850 , Coords234_g116850 , WorldPosition234_g116850 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116850) = _TerrainShaderTex10;
				SamplerState Sampler263_g116850 = SS30_g116885;
				half4 Coords263_g116850 = temp_output_37_0_g116850;
				half3 WorldPosition263_g116850 = temp_output_279_0_g116850;
				half3 WorldNormal263_g116850 = temp_output_280_0_g116850;
				half4 localSampleStochastic3D263_g116850 = SampleStochastic3D( Texture263_g116850 , Sampler263_g116850 , Coords263_g116850 , WorldPosition263_g116850 , WorldNormal263_g116850 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8860_g116779 = localSamplePlanar2D238_g116850;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8860_g116779 = localSamplePlanar3D246_g116850;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8860_g116779 = localSampleStochastic2D234_g116850;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8860_g116779 = localSampleStochastic3D263_g116850;
				#else
				float4 staticSwitch8860_g116779 = localSamplePlanar2D238_g116850;
				#endif
				float4 temp_output_7_0_g116815 = _TerrainShaderMin10;
				float4 temp_output_10_0_g116815 = ( _TerrainShaderMax10 - temp_output_7_0_g116815 );
				float4 temp_output_8818_0_g116779 = saturate( ( ( staticSwitch8860_g116779 - temp_output_7_0_g116815 ) / ( temp_output_10_0_g116815 + 0.0001 ) ) );
				half4 Masks_0210_g116804 = temp_output_8818_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116851) = _TerrainShaderTex11;
				SamplerState Sampler238_g116851 = SS30_g116885;
				half4 Input_Terrain_Coords_118835_g116779 = _TerrainCoord11;
				float4 temp_output_37_0_g116851 = Input_Terrain_Coords_118835_g116779;
				half4 Coords238_g116851 = temp_output_37_0_g116851;
				float3 temp_output_279_0_g116851 = Input_Position9197_g116779;
				half3 WorldPosition238_g116851 = temp_output_279_0_g116851;
				half4 localSamplePlanar2D238_g116851 = SamplePlanar2D( Texture238_g116851 , Sampler238_g116851 , Coords238_g116851 , WorldPosition238_g116851 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116851) = _TerrainShaderTex11;
				SamplerState Sampler246_g116851 = SS30_g116885;
				half4 Coords246_g116851 = temp_output_37_0_g116851;
				half3 WorldPosition246_g116851 = temp_output_279_0_g116851;
				float3 temp_output_280_0_g116851 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116851 = temp_output_280_0_g116851;
				half4 localSamplePlanar3D246_g116851 = SamplePlanar3D( Texture246_g116851 , Sampler246_g116851 , Coords246_g116851 , WorldPosition246_g116851 , WorldNormal246_g116851 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116851) = _TerrainShaderTex11;
				SamplerState Sampler234_g116851 = SS30_g116885;
				float4 Coords234_g116851 = temp_output_37_0_g116851;
				float3 WorldPosition234_g116851 = temp_output_279_0_g116851;
				float4 localSampleStochastic2D234_g116851 = SampleStochastic2D( Texture234_g116851 , Sampler234_g116851 , Coords234_g116851 , WorldPosition234_g116851 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116851) = _TerrainShaderTex11;
				SamplerState Sampler263_g116851 = SS30_g116885;
				half4 Coords263_g116851 = temp_output_37_0_g116851;
				half3 WorldPosition263_g116851 = temp_output_279_0_g116851;
				half3 WorldNormal263_g116851 = temp_output_280_0_g116851;
				half4 localSampleStochastic3D263_g116851 = SampleStochastic3D( Texture263_g116851 , Sampler263_g116851 , Coords263_g116851 , WorldPosition263_g116851 , WorldNormal263_g116851 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8861_g116779 = localSamplePlanar2D238_g116851;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8861_g116779 = localSamplePlanar3D246_g116851;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8861_g116779 = localSampleStochastic2D234_g116851;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8861_g116779 = localSampleStochastic3D263_g116851;
				#else
				float4 staticSwitch8861_g116779 = localSamplePlanar2D238_g116851;
				#endif
				float4 temp_output_7_0_g116816 = _TerrainShaderMin11;
				float4 temp_output_10_0_g116816 = ( _TerrainShaderMax11 - temp_output_7_0_g116816 );
				float4 temp_output_8819_0_g116779 = saturate( ( ( staticSwitch8861_g116779 - temp_output_7_0_g116816 ) / ( temp_output_10_0_g116816 + 0.0001 ) ) );
				half4 Masks_0312_g116804 = temp_output_8819_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116852) = _TerrainShaderTex12;
				SamplerState Sampler238_g116852 = SS30_g116885;
				half4 Input_Terrain_Coords_128836_g116779 = _TerrainCoord12;
				float4 temp_output_37_0_g116852 = Input_Terrain_Coords_128836_g116779;
				half4 Coords238_g116852 = temp_output_37_0_g116852;
				float3 temp_output_279_0_g116852 = Input_Position9197_g116779;
				half3 WorldPosition238_g116852 = temp_output_279_0_g116852;
				half4 localSamplePlanar2D238_g116852 = SamplePlanar2D( Texture238_g116852 , Sampler238_g116852 , Coords238_g116852 , WorldPosition238_g116852 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116852) = _TerrainShaderTex12;
				SamplerState Sampler246_g116852 = SS30_g116885;
				half4 Coords246_g116852 = temp_output_37_0_g116852;
				half3 WorldPosition246_g116852 = temp_output_279_0_g116852;
				float3 temp_output_280_0_g116852 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116852 = temp_output_280_0_g116852;
				half4 localSamplePlanar3D246_g116852 = SamplePlanar3D( Texture246_g116852 , Sampler246_g116852 , Coords246_g116852 , WorldPosition246_g116852 , WorldNormal246_g116852 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116852) = _TerrainShaderTex12;
				SamplerState Sampler234_g116852 = SS30_g116885;
				float4 Coords234_g116852 = temp_output_37_0_g116852;
				float3 WorldPosition234_g116852 = temp_output_279_0_g116852;
				float4 localSampleStochastic2D234_g116852 = SampleStochastic2D( Texture234_g116852 , Sampler234_g116852 , Coords234_g116852 , WorldPosition234_g116852 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116852) = _TerrainShaderTex12;
				SamplerState Sampler263_g116852 = SS30_g116885;
				half4 Coords263_g116852 = temp_output_37_0_g116852;
				half3 WorldPosition263_g116852 = temp_output_279_0_g116852;
				half3 WorldNormal263_g116852 = temp_output_280_0_g116852;
				half4 localSampleStochastic3D263_g116852 = SampleStochastic3D( Texture263_g116852 , Sampler263_g116852 , Coords263_g116852 , WorldPosition263_g116852 , WorldNormal263_g116852 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8879_g116779 = localSamplePlanar2D238_g116852;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8879_g116779 = localSamplePlanar3D246_g116852;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8879_g116779 = localSampleStochastic2D234_g116852;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8879_g116779 = localSampleStochastic3D263_g116852;
				#else
				float4 staticSwitch8879_g116779 = localSamplePlanar2D238_g116852;
				#endif
				float4 temp_output_7_0_g116817 = _TerrainShaderMin12;
				float4 temp_output_10_0_g116817 = ( _TerrainShaderMax12 - temp_output_7_0_g116817 );
				float4 temp_output_8820_0_g116779 = saturate( ( ( staticSwitch8879_g116779 - temp_output_7_0_g116817 ) / ( temp_output_10_0_g116817 + 0.0001 ) ) );
				half4 Masks_0414_g116804 = temp_output_8820_0_g116779;
				float4 appendResult29_g116804 = (float4((Masks_015_g116804).z , (Masks_0210_g116804).z , (Masks_0312_g116804).z , (Masks_0414_g116804).z));
				half4 Control31_g116804 = Terrain_Control_127712_g116779;
				half4 Terrain_Height_128870_g116779 = ( appendResult29_g116804 * Control31_g116804 );
				float4 heights_127362_g116779 = Terrain_Height_128870_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116848) = _TerrainShaderTex13;
				SamplerState Sampler238_g116848 = SS30_g116885;
				half4 Input_Terrain_Coords_138960_g116779 = _TerrainCoord13;
				float4 temp_output_37_0_g116848 = Input_Terrain_Coords_138960_g116779;
				half4 Coords238_g116848 = temp_output_37_0_g116848;
				float3 temp_output_279_0_g116848 = Input_Position9197_g116779;
				half3 WorldPosition238_g116848 = temp_output_279_0_g116848;
				half4 localSamplePlanar2D238_g116848 = SamplePlanar2D( Texture238_g116848 , Sampler238_g116848 , Coords238_g116848 , WorldPosition238_g116848 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116848) = _TerrainShaderTex13;
				SamplerState Sampler246_g116848 = SS30_g116885;
				half4 Coords246_g116848 = temp_output_37_0_g116848;
				half3 WorldPosition246_g116848 = temp_output_279_0_g116848;
				float3 temp_output_280_0_g116848 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116848 = temp_output_280_0_g116848;
				half4 localSamplePlanar3D246_g116848 = SamplePlanar3D( Texture246_g116848 , Sampler246_g116848 , Coords246_g116848 , WorldPosition246_g116848 , WorldNormal246_g116848 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116848) = _TerrainShaderTex13;
				SamplerState Sampler234_g116848 = SS30_g116885;
				float4 Coords234_g116848 = temp_output_37_0_g116848;
				float3 WorldPosition234_g116848 = temp_output_279_0_g116848;
				float4 localSampleStochastic2D234_g116848 = SampleStochastic2D( Texture234_g116848 , Sampler234_g116848 , Coords234_g116848 , WorldPosition234_g116848 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116848) = _TerrainShaderTex13;
				SamplerState Sampler263_g116848 = SS30_g116885;
				half4 Coords263_g116848 = temp_output_37_0_g116848;
				half3 WorldPosition263_g116848 = temp_output_279_0_g116848;
				half3 WorldNormal263_g116848 = temp_output_280_0_g116848;
				half4 localSampleStochastic3D263_g116848 = SampleStochastic3D( Texture263_g116848 , Sampler263_g116848 , Coords263_g116848 , WorldPosition263_g116848 , WorldNormal263_g116848 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch9000_g116779 = localSamplePlanar2D238_g116848;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch9000_g116779 = localSamplePlanar3D246_g116848;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch9000_g116779 = localSampleStochastic2D234_g116848;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch9000_g116779 = localSampleStochastic3D263_g116848;
				#else
				float4 staticSwitch9000_g116779 = localSamplePlanar2D238_g116848;
				#endif
				float4 temp_output_7_0_g116810 = _TerrainShaderMin13;
				float4 temp_output_10_0_g116810 = ( _TerrainShaderMax13 - temp_output_7_0_g116810 );
				float4 temp_output_8931_0_g116779 = saturate( ( ( staticSwitch9000_g116779 - temp_output_7_0_g116810 ) / ( temp_output_10_0_g116810 + 0.0001 ) ) );
				half4 Masks_015_g116811 = temp_output_8931_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116859) = _TerrainShaderTex14;
				SamplerState Sampler238_g116859 = SS30_g116885;
				half4 Input_Terrain_Coords_148961_g116779 = _TerrainCoord14;
				float4 temp_output_37_0_g116859 = Input_Terrain_Coords_148961_g116779;
				half4 Coords238_g116859 = temp_output_37_0_g116859;
				float3 temp_output_279_0_g116859 = Input_Position9197_g116779;
				half3 WorldPosition238_g116859 = temp_output_279_0_g116859;
				half4 localSamplePlanar2D238_g116859 = SamplePlanar2D( Texture238_g116859 , Sampler238_g116859 , Coords238_g116859 , WorldPosition238_g116859 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116859) = _TerrainShaderTex14;
				SamplerState Sampler246_g116859 = SS30_g116885;
				half4 Coords246_g116859 = temp_output_37_0_g116859;
				half3 WorldPosition246_g116859 = temp_output_279_0_g116859;
				float3 temp_output_280_0_g116859 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116859 = temp_output_280_0_g116859;
				half4 localSamplePlanar3D246_g116859 = SamplePlanar3D( Texture246_g116859 , Sampler246_g116859 , Coords246_g116859 , WorldPosition246_g116859 , WorldNormal246_g116859 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116859) = _TerrainShaderTex14;
				SamplerState Sampler234_g116859 = SS30_g116885;
				float4 Coords234_g116859 = temp_output_37_0_g116859;
				float3 WorldPosition234_g116859 = temp_output_279_0_g116859;
				float4 localSampleStochastic2D234_g116859 = SampleStochastic2D( Texture234_g116859 , Sampler234_g116859 , Coords234_g116859 , WorldPosition234_g116859 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116859) = _TerrainShaderTex14;
				SamplerState Sampler263_g116859 = SS30_g116885;
				half4 Coords263_g116859 = temp_output_37_0_g116859;
				half3 WorldPosition263_g116859 = temp_output_279_0_g116859;
				half3 WorldNormal263_g116859 = temp_output_280_0_g116859;
				half4 localSampleStochastic3D263_g116859 = SampleStochastic3D( Texture263_g116859 , Sampler263_g116859 , Coords263_g116859 , WorldPosition263_g116859 , WorldNormal263_g116859 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch9001_g116779 = localSamplePlanar2D238_g116859;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch9001_g116779 = localSamplePlanar3D246_g116859;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch9001_g116779 = localSampleStochastic2D234_g116859;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch9001_g116779 = localSampleStochastic3D263_g116859;
				#else
				float4 staticSwitch9001_g116779 = localSamplePlanar2D238_g116859;
				#endif
				float4 temp_output_7_0_g116818 = _TerrainShaderMin14;
				float4 temp_output_10_0_g116818 = ( _TerrainShaderMax14 - temp_output_7_0_g116818 );
				float4 temp_output_8934_0_g116779 = saturate( ( ( staticSwitch9001_g116779 - temp_output_7_0_g116818 ) / ( temp_output_10_0_g116818 + 0.0001 ) ) );
				half4 Masks_0210_g116811 = temp_output_8934_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116860) = _TerrainShaderTex15;
				SamplerState Sampler238_g116860 = SS30_g116885;
				half4 Input_Terrain_Coords_158962_g116779 = _TerrainCoord15;
				float4 temp_output_37_0_g116860 = Input_Terrain_Coords_158962_g116779;
				half4 Coords238_g116860 = temp_output_37_0_g116860;
				float3 temp_output_279_0_g116860 = Input_Position9197_g116779;
				half3 WorldPosition238_g116860 = temp_output_279_0_g116860;
				half4 localSamplePlanar2D238_g116860 = SamplePlanar2D( Texture238_g116860 , Sampler238_g116860 , Coords238_g116860 , WorldPosition238_g116860 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116860) = _TerrainShaderTex15;
				SamplerState Sampler246_g116860 = SS30_g116885;
				half4 Coords246_g116860 = temp_output_37_0_g116860;
				half3 WorldPosition246_g116860 = temp_output_279_0_g116860;
				float3 temp_output_280_0_g116860 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116860 = temp_output_280_0_g116860;
				half4 localSamplePlanar3D246_g116860 = SamplePlanar3D( Texture246_g116860 , Sampler246_g116860 , Coords246_g116860 , WorldPosition246_g116860 , WorldNormal246_g116860 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116860) = _TerrainShaderTex15;
				SamplerState Sampler234_g116860 = SS30_g116885;
				float4 Coords234_g116860 = temp_output_37_0_g116860;
				float3 WorldPosition234_g116860 = temp_output_279_0_g116860;
				float4 localSampleStochastic2D234_g116860 = SampleStochastic2D( Texture234_g116860 , Sampler234_g116860 , Coords234_g116860 , WorldPosition234_g116860 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116860) = _TerrainShaderTex15;
				SamplerState Sampler263_g116860 = SS30_g116885;
				half4 Coords263_g116860 = temp_output_37_0_g116860;
				half3 WorldPosition263_g116860 = temp_output_279_0_g116860;
				half3 WorldNormal263_g116860 = temp_output_280_0_g116860;
				half4 localSampleStochastic3D263_g116860 = SampleStochastic3D( Texture263_g116860 , Sampler263_g116860 , Coords263_g116860 , WorldPosition263_g116860 , WorldNormal263_g116860 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch9002_g116779 = localSamplePlanar2D238_g116860;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch9002_g116779 = localSamplePlanar3D246_g116860;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch9002_g116779 = localSampleStochastic2D234_g116860;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch9002_g116779 = localSampleStochastic3D263_g116860;
				#else
				float4 staticSwitch9002_g116779 = localSamplePlanar2D238_g116860;
				#endif
				float4 temp_output_7_0_g116819 = _TerrainShaderMin15;
				float4 temp_output_10_0_g116819 = ( _TerrainShaderMax15 - temp_output_7_0_g116819 );
				float4 temp_output_8935_0_g116779 = saturate( ( ( staticSwitch9002_g116779 - temp_output_7_0_g116819 ) / ( temp_output_10_0_g116819 + 0.0001 ) ) );
				half4 Masks_0312_g116811 = temp_output_8935_0_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116861) = _TerrainShaderTex16;
				SamplerState Sampler238_g116861 = SS30_g116885;
				half4 Input_Terrain_Coords_168959_g116779 = _TerrainCoord16;
				float4 temp_output_37_0_g116861 = Input_Terrain_Coords_168959_g116779;
				half4 Coords238_g116861 = temp_output_37_0_g116861;
				float3 temp_output_279_0_g116861 = Input_Position9197_g116779;
				half3 WorldPosition238_g116861 = temp_output_279_0_g116861;
				half4 localSamplePlanar2D238_g116861 = SamplePlanar2D( Texture238_g116861 , Sampler238_g116861 , Coords238_g116861 , WorldPosition238_g116861 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116861) = _TerrainShaderTex16;
				SamplerState Sampler246_g116861 = SS30_g116885;
				half4 Coords246_g116861 = temp_output_37_0_g116861;
				half3 WorldPosition246_g116861 = temp_output_279_0_g116861;
				float3 temp_output_280_0_g116861 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116861 = temp_output_280_0_g116861;
				half4 localSamplePlanar3D246_g116861 = SamplePlanar3D( Texture246_g116861 , Sampler246_g116861 , Coords246_g116861 , WorldPosition246_g116861 , WorldNormal246_g116861 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116861) = _TerrainShaderTex16;
				SamplerState Sampler234_g116861 = SS30_g116885;
				float4 Coords234_g116861 = temp_output_37_0_g116861;
				float3 WorldPosition234_g116861 = temp_output_279_0_g116861;
				float4 localSampleStochastic2D234_g116861 = SampleStochastic2D( Texture234_g116861 , Sampler234_g116861 , Coords234_g116861 , WorldPosition234_g116861 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116861) = _TerrainShaderTex16;
				SamplerState Sampler263_g116861 = SS30_g116885;
				half4 Coords263_g116861 = temp_output_37_0_g116861;
				half3 WorldPosition263_g116861 = temp_output_279_0_g116861;
				half3 WorldNormal263_g116861 = temp_output_280_0_g116861;
				half4 localSampleStochastic3D263_g116861 = SampleStochastic3D( Texture263_g116861 , Sampler263_g116861 , Coords263_g116861 , WorldPosition263_g116861 , WorldNormal263_g116861 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch9003_g116779 = localSamplePlanar2D238_g116861;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch9003_g116779 = localSamplePlanar3D246_g116861;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch9003_g116779 = localSampleStochastic2D234_g116861;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch9003_g116779 = localSampleStochastic3D263_g116861;
				#else
				float4 staticSwitch9003_g116779 = localSamplePlanar2D238_g116861;
				#endif
				float4 temp_output_7_0_g116820 = _TerrainShaderMin16;
				float4 temp_output_10_0_g116820 = ( _TerrainShaderMax16 - temp_output_7_0_g116820 );
				float4 temp_output_8936_0_g116779 = saturate( ( ( staticSwitch9003_g116779 - temp_output_7_0_g116820 ) / ( temp_output_10_0_g116820 + 0.0001 ) ) );
				half4 Masks_0414_g116811 = temp_output_8936_0_g116779;
				float4 appendResult29_g116811 = (float4((Masks_015_g116811).z , (Masks_0210_g116811).z , (Masks_0312_g116811).z , (Masks_0414_g116811).z));
				half4 Control31_g116811 = Terrain_Control_167711_g116779;
				half4 Terrain_Height_169015_g116779 = ( appendResult29_g116811 * Control31_g116811 );
				float4 heights_167362_g116779 = Terrain_Height_169015_g116779;
				float heightTransition7362_g116779 = ( 1.0 - _TerrainHeightBlendValue );
				float4 weights_047362_g116779 = float4( 0,0,0,0 );
				float4 weights_087362_g116779 = float4( 0,0,0,0 );
				float4 weights_127362_g116779 = float4( 0,0,0,0 );
				float4 weights_167362_g116779 = float4( 0,0,0,0 );
				//Modified version of the HDRP terrain height based blending
				float maxHeight = 0;
				float4 weightedHeights_04 = float4( 0,0,0,0 );
				float4 weightedHeights_08 = float4( 0,0,0,0 );
				float4 weightedHeights_12 = float4( 0,0,0,0 );
				float4 weightedHeights_16 = float4( 0,0,0,0 );
				maxHeight = heights_047362_g116779.x;
				maxHeight = max(maxHeight, heights_047362_g116779.y);
				maxHeight = max(maxHeight, heights_047362_g116779.z);
				maxHeight = max(maxHeight, heights_047362_g116779.w);
				#ifdef TVE_TERRAIN_08
				maxHeight = max(maxHeight, heights_087362_g116779.x);
				maxHeight = max(maxHeight, heights_087362_g116779.y);
				maxHeight = max(maxHeight, heights_087362_g116779.z);
				maxHeight = max(maxHeight, heights_087362_g116779.w);
				#endif
				#ifdef TVE_TERRAIN_12
				maxHeight = max(maxHeight, heights_087362_g116779.x);
				maxHeight = max(maxHeight, heights_087362_g116779.y);
				maxHeight = max(maxHeight, heights_087362_g116779.z);
				maxHeight = max(maxHeight, heights_087362_g116779.w);
				maxHeight = max(maxHeight, heights_127362_g116779.x);
				maxHeight = max(maxHeight, heights_127362_g116779.y);
				maxHeight = max(maxHeight, heights_127362_g116779.z);
				maxHeight = max(maxHeight, heights_127362_g116779.w);
				#endif
				#ifdef TVE_TERRAIN_16
				maxHeight = max(maxHeight, heights_087362_g116779.x);
				maxHeight = max(maxHeight, heights_087362_g116779.y);
				maxHeight = max(maxHeight, heights_087362_g116779.z);
				maxHeight = max(maxHeight, heights_087362_g116779.w);
				maxHeight = max(maxHeight, heights_127362_g116779.x);
				maxHeight = max(maxHeight, heights_127362_g116779.y);
				maxHeight = max(maxHeight, heights_127362_g116779.z);
				maxHeight = max(maxHeight, heights_127362_g116779.w);
				maxHeight = max(maxHeight, heights_167362_g116779.x);
				maxHeight = max(maxHeight, heights_167362_g116779.y);
				maxHeight = max(maxHeight, heights_167362_g116779.z);
				maxHeight = max(maxHeight, heights_167362_g116779.w);
				#endif
				float transition = max(heightTransition7362_g116779, 0.01);
				weightedHeights_04 = float4 ( heights_047362_g116779.x, heights_047362_g116779.y, heights_047362_g116779.z, heights_047362_g116779.w );
				weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
				weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g116779;
				#ifdef TVE_TERRAIN_08
				weightedHeights_08 = float4 ( heights_087362_g116779.x, heights_087362_g116779.y, heights_087362_g116779.z, heights_087362_g116779.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g116779;
				#endif
				#ifdef TVE_TERRAIN_12
				weightedHeights_08 = float4 ( heights_087362_g116779.x, heights_087362_g116779.y, heights_087362_g116779.z, heights_087362_g116779.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g116779;
				weightedHeights_12 = float4 ( heights_127362_g116779.x, heights_127362_g116779.y, heights_127362_g116779.z, heights_127362_g116779.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g116779;
				#endif
				#ifdef TVE_TERRAIN_16
				weightedHeights_08 = float4 ( heights_087362_g116779.x, heights_087362_g116779.y, heights_087362_g116779.z, heights_087362_g116779.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g116779;
				weightedHeights_12 = float4 ( heights_127362_g116779.x, heights_127362_g116779.y, heights_127362_g116779.z, heights_127362_g116779.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g116779;
				weightedHeights_16 = float4 ( heights_167362_g116779.x, heights_167362_g116779.y, heights_167362_g116779.z, heights_167362_g116779.w );
				weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
				weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g116779;
				#endif
				float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
				float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
				float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
				float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
				float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
				weights_047362_g116779 = weightedHeights_04 / sumHeight.xxxx;
				#ifdef TVE_TERRAIN_08
				weights_087362_g116779 = weightedHeights_08 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_12
				weights_087362_g116779 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g116779 = weightedHeights_12 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_16
				weights_087362_g116779 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g116779 = weightedHeights_12 / sumHeight.xxxx;
				weights_167362_g116779 = weightedHeights_16 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8792_g116779 = weights_047362_g116779;
				#else
				float4 staticSwitch8792_g116779 = control_047362_g116779;
				#endif
				half4 Terrain_Weights_046781_g116779 = staticSwitch8792_g116779;
				half4 Weights52_g116784 = Terrain_Weights_046781_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116825) = _TerrainAlbedoTex1;
				float localFilterTexture19_g116882 = ( 0.0 );
				SamplerState SamplerDefault19_g116882 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g116882 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g116882 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g116882 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g116882 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g116882 = SamplerDefault19_g116882;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g116882 = SamplerDefault19_g116882;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g116882 = SamplerPoint19_g116882;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g116882 = SamplerLow19_g116882;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g116882 = SamplerMedium19_g116882;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g116882 = SamplerHigh19_g116882;
				#endif
				SamplerState Sampler238_g116825 = SS19_g116882;
				float4 temp_output_37_0_g116825 = Input_Terrain_Coords_016785_g116779;
				half4 Coords238_g116825 = temp_output_37_0_g116825;
				float3 temp_output_279_0_g116825 = Input_Position9197_g116779;
				half3 WorldPosition238_g116825 = temp_output_279_0_g116825;
				half4 localSamplePlanar2D238_g116825 = SamplePlanar2D( Texture238_g116825 , Sampler238_g116825 , Coords238_g116825 , WorldPosition238_g116825 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116825) = _TerrainAlbedoTex1;
				SamplerState Sampler246_g116825 = SS19_g116882;
				half4 Coords246_g116825 = temp_output_37_0_g116825;
				half3 WorldPosition246_g116825 = temp_output_279_0_g116825;
				float3 temp_output_280_0_g116825 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116825 = temp_output_280_0_g116825;
				half4 localSamplePlanar3D246_g116825 = SamplePlanar3D( Texture246_g116825 , Sampler246_g116825 , Coords246_g116825 , WorldPosition246_g116825 , WorldNormal246_g116825 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116825) = _TerrainAlbedoTex1;
				SamplerState Sampler234_g116825 = SS19_g116882;
				float4 Coords234_g116825 = temp_output_37_0_g116825;
				float3 WorldPosition234_g116825 = temp_output_279_0_g116825;
				float4 localSampleStochastic2D234_g116825 = SampleStochastic2D( Texture234_g116825 , Sampler234_g116825 , Coords234_g116825 , WorldPosition234_g116825 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116825) = _TerrainAlbedoTex1;
				SamplerState Sampler263_g116825 = SS19_g116882;
				half4 Coords263_g116825 = temp_output_37_0_g116825;
				half3 WorldPosition263_g116825 = temp_output_279_0_g116825;
				half3 WorldNormal263_g116825 = temp_output_280_0_g116825;
				half4 localSampleStochastic3D263_g116825 = SampleStochastic3D( Texture263_g116825 , Sampler263_g116825 , Coords263_g116825 , WorldPosition263_g116825 , WorldNormal263_g116825 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8614_g116779 = localSamplePlanar2D238_g116825;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8614_g116779 = localSamplePlanar3D246_g116825;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8614_g116779 = localSampleStochastic2D234_g116825;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8614_g116779 = localSampleStochastic3D263_g116825;
				#else
				float4 staticSwitch8614_g116779 = localSamplePlanar2D238_g116825;
				#endif
				half4 Layer133_g116784 = staticSwitch8614_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler238_g116826 = SS19_g116882;
				float4 temp_output_37_0_g116826 = Input_Terrain_Coords_026787_g116779;
				half4 Coords238_g116826 = temp_output_37_0_g116826;
				float3 temp_output_279_0_g116826 = Input_Position9197_g116779;
				half3 WorldPosition238_g116826 = temp_output_279_0_g116826;
				half4 localSamplePlanar2D238_g116826 = SamplePlanar2D( Texture238_g116826 , Sampler238_g116826 , Coords238_g116826 , WorldPosition238_g116826 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler246_g116826 = SS19_g116882;
				half4 Coords246_g116826 = temp_output_37_0_g116826;
				half3 WorldPosition246_g116826 = temp_output_279_0_g116826;
				float3 temp_output_280_0_g116826 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116826 = temp_output_280_0_g116826;
				half4 localSamplePlanar3D246_g116826 = SamplePlanar3D( Texture246_g116826 , Sampler246_g116826 , Coords246_g116826 , WorldPosition246_g116826 , WorldNormal246_g116826 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler234_g116826 = SS19_g116882;
				float4 Coords234_g116826 = temp_output_37_0_g116826;
				float3 WorldPosition234_g116826 = temp_output_279_0_g116826;
				float4 localSampleStochastic2D234_g116826 = SampleStochastic2D( Texture234_g116826 , Sampler234_g116826 , Coords234_g116826 , WorldPosition234_g116826 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116826) = _TerrainAlbedoTex2;
				SamplerState Sampler263_g116826 = SS19_g116882;
				half4 Coords263_g116826 = temp_output_37_0_g116826;
				half3 WorldPosition263_g116826 = temp_output_279_0_g116826;
				half3 WorldNormal263_g116826 = temp_output_280_0_g116826;
				half4 localSampleStochastic3D263_g116826 = SampleStochastic3D( Texture263_g116826 , Sampler263_g116826 , Coords263_g116826 , WorldPosition263_g116826 , WorldNormal263_g116826 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8629_g116779 = localSamplePlanar2D238_g116826;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8629_g116779 = localSamplePlanar3D246_g116826;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8629_g116779 = localSampleStochastic2D234_g116826;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8629_g116779 = localSampleStochastic3D263_g116826;
				#else
				float4 staticSwitch8629_g116779 = localSamplePlanar2D238_g116826;
				#endif
				half4 Layer237_g116784 = staticSwitch8629_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler238_g116829 = SS19_g116882;
				float4 temp_output_37_0_g116829 = Input_Terrain_Coords_036789_g116779;
				half4 Coords238_g116829 = temp_output_37_0_g116829;
				float3 temp_output_279_0_g116829 = Input_Position9197_g116779;
				half3 WorldPosition238_g116829 = temp_output_279_0_g116829;
				half4 localSamplePlanar2D238_g116829 = SamplePlanar2D( Texture238_g116829 , Sampler238_g116829 , Coords238_g116829 , WorldPosition238_g116829 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler246_g116829 = SS19_g116882;
				half4 Coords246_g116829 = temp_output_37_0_g116829;
				half3 WorldPosition246_g116829 = temp_output_279_0_g116829;
				float3 temp_output_280_0_g116829 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116829 = temp_output_280_0_g116829;
				half4 localSamplePlanar3D246_g116829 = SamplePlanar3D( Texture246_g116829 , Sampler246_g116829 , Coords246_g116829 , WorldPosition246_g116829 , WorldNormal246_g116829 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler234_g116829 = SS19_g116882;
				float4 Coords234_g116829 = temp_output_37_0_g116829;
				float3 WorldPosition234_g116829 = temp_output_279_0_g116829;
				float4 localSampleStochastic2D234_g116829 = SampleStochastic2D( Texture234_g116829 , Sampler234_g116829 , Coords234_g116829 , WorldPosition234_g116829 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116829) = _TerrainAlbedoTex3;
				SamplerState Sampler263_g116829 = SS19_g116882;
				half4 Coords263_g116829 = temp_output_37_0_g116829;
				half3 WorldPosition263_g116829 = temp_output_279_0_g116829;
				half3 WorldNormal263_g116829 = temp_output_280_0_g116829;
				half4 localSampleStochastic3D263_g116829 = SampleStochastic3D( Texture263_g116829 , Sampler263_g116829 , Coords263_g116829 , WorldPosition263_g116829 , WorldNormal263_g116829 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8630_g116779 = localSamplePlanar2D238_g116829;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8630_g116779 = localSamplePlanar3D246_g116829;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8630_g116779 = localSampleStochastic2D234_g116829;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8630_g116779 = localSampleStochastic3D263_g116829;
				#else
				float4 staticSwitch8630_g116779 = localSamplePlanar2D238_g116829;
				#endif
				half4 Layer338_g116784 = staticSwitch8630_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler238_g116831 = SS19_g116882;
				float4 temp_output_37_0_g116831 = Input_Terrain_Coords_046791_g116779;
				half4 Coords238_g116831 = temp_output_37_0_g116831;
				float3 temp_output_279_0_g116831 = Input_Position9197_g116779;
				half3 WorldPosition238_g116831 = temp_output_279_0_g116831;
				half4 localSamplePlanar2D238_g116831 = SamplePlanar2D( Texture238_g116831 , Sampler238_g116831 , Coords238_g116831 , WorldPosition238_g116831 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler246_g116831 = SS19_g116882;
				half4 Coords246_g116831 = temp_output_37_0_g116831;
				half3 WorldPosition246_g116831 = temp_output_279_0_g116831;
				float3 temp_output_280_0_g116831 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116831 = temp_output_280_0_g116831;
				half4 localSamplePlanar3D246_g116831 = SamplePlanar3D( Texture246_g116831 , Sampler246_g116831 , Coords246_g116831 , WorldPosition246_g116831 , WorldNormal246_g116831 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler234_g116831 = SS19_g116882;
				float4 Coords234_g116831 = temp_output_37_0_g116831;
				float3 WorldPosition234_g116831 = temp_output_279_0_g116831;
				float4 localSampleStochastic2D234_g116831 = SampleStochastic2D( Texture234_g116831 , Sampler234_g116831 , Coords234_g116831 , WorldPosition234_g116831 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116831) = _TerrainAlbedoTex4;
				SamplerState Sampler263_g116831 = SS19_g116882;
				half4 Coords263_g116831 = temp_output_37_0_g116831;
				half3 WorldPosition263_g116831 = temp_output_279_0_g116831;
				half3 WorldNormal263_g116831 = temp_output_280_0_g116831;
				half4 localSampleStochastic3D263_g116831 = SampleStochastic3D( Texture263_g116831 , Sampler263_g116831 , Coords263_g116831 , WorldPosition263_g116831 , WorldNormal263_g116831 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8631_g116779 = localSamplePlanar2D238_g116831;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8631_g116779 = localSamplePlanar3D246_g116831;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8631_g116779 = localSampleStochastic2D234_g116831;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8631_g116779 = localSampleStochastic3D263_g116831;
				#else
				float4 staticSwitch8631_g116779 = localSamplePlanar2D238_g116831;
				#endif
				half4 Layer439_g116784 = staticSwitch8631_g116779;
				float4 weightedBlendVar31_g116784 = Weights52_g116784;
				float4 weightedBlend31_g116784 = ( weightedBlendVar31_g116784.x*Layer133_g116784 + weightedBlendVar31_g116784.y*Layer237_g116784 + weightedBlendVar31_g116784.z*Layer338_g116784 + weightedBlendVar31_g116784.w*Layer439_g116784 );
				half4 Terrain_AAAA_047200_g116779 = weightedBlend31_g116784;
				half4 Layer_045_g116787 = Terrain_AAAA_047200_g116779;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8793_g116779 = weights_087362_g116779;
				#else
				float4 staticSwitch8793_g116779 = control_087362_g116779;
				#endif
				half4 Terrain_Weights_087340_g116779 = staticSwitch8793_g116779;
				half4 Weights52_g116794 = Terrain_Weights_087340_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler238_g116835 = SS19_g116882;
				float4 temp_output_37_0_g116835 = Input_Terrain_Coords_058750_g116779;
				half4 Coords238_g116835 = temp_output_37_0_g116835;
				float3 temp_output_279_0_g116835 = Input_Position9197_g116779;
				half3 WorldPosition238_g116835 = temp_output_279_0_g116835;
				half4 localSamplePlanar2D238_g116835 = SamplePlanar2D( Texture238_g116835 , Sampler238_g116835 , Coords238_g116835 , WorldPosition238_g116835 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler246_g116835 = SS19_g116882;
				half4 Coords246_g116835 = temp_output_37_0_g116835;
				half3 WorldPosition246_g116835 = temp_output_279_0_g116835;
				float3 temp_output_280_0_g116835 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116835 = temp_output_280_0_g116835;
				half4 localSamplePlanar3D246_g116835 = SamplePlanar3D( Texture246_g116835 , Sampler246_g116835 , Coords246_g116835 , WorldPosition246_g116835 , WorldNormal246_g116835 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler234_g116835 = SS19_g116882;
				float4 Coords234_g116835 = temp_output_37_0_g116835;
				float3 WorldPosition234_g116835 = temp_output_279_0_g116835;
				float4 localSampleStochastic2D234_g116835 = SampleStochastic2D( Texture234_g116835 , Sampler234_g116835 , Coords234_g116835 , WorldPosition234_g116835 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116835) = _TerrainAlbedoTex5;
				SamplerState Sampler263_g116835 = SS19_g116882;
				half4 Coords263_g116835 = temp_output_37_0_g116835;
				half3 WorldPosition263_g116835 = temp_output_279_0_g116835;
				half3 WorldNormal263_g116835 = temp_output_280_0_g116835;
				half4 localSampleStochastic3D263_g116835 = SampleStochastic3D( Texture263_g116835 , Sampler263_g116835 , Coords263_g116835 , WorldPosition263_g116835 , WorldNormal263_g116835 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8690_g116779 = localSamplePlanar2D238_g116835;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8690_g116779 = localSamplePlanar3D246_g116835;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8690_g116779 = localSampleStochastic2D234_g116835;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8690_g116779 = localSampleStochastic3D263_g116835;
				#else
				float4 staticSwitch8690_g116779 = localSamplePlanar2D238_g116835;
				#endif
				half4 Layer133_g116794 = staticSwitch8690_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler238_g116862 = SS19_g116882;
				float4 temp_output_37_0_g116862 = Input_Terrain_Coords_068751_g116779;
				half4 Coords238_g116862 = temp_output_37_0_g116862;
				float3 temp_output_279_0_g116862 = Input_Position9197_g116779;
				half3 WorldPosition238_g116862 = temp_output_279_0_g116862;
				half4 localSamplePlanar2D238_g116862 = SamplePlanar2D( Texture238_g116862 , Sampler238_g116862 , Coords238_g116862 , WorldPosition238_g116862 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler246_g116862 = SS19_g116882;
				half4 Coords246_g116862 = temp_output_37_0_g116862;
				half3 WorldPosition246_g116862 = temp_output_279_0_g116862;
				float3 temp_output_280_0_g116862 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116862 = temp_output_280_0_g116862;
				half4 localSamplePlanar3D246_g116862 = SamplePlanar3D( Texture246_g116862 , Sampler246_g116862 , Coords246_g116862 , WorldPosition246_g116862 , WorldNormal246_g116862 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler234_g116862 = SS19_g116882;
				float4 Coords234_g116862 = temp_output_37_0_g116862;
				float3 WorldPosition234_g116862 = temp_output_279_0_g116862;
				float4 localSampleStochastic2D234_g116862 = SampleStochastic2D( Texture234_g116862 , Sampler234_g116862 , Coords234_g116862 , WorldPosition234_g116862 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116862) = _TerrainAlbedoTex6;
				SamplerState Sampler263_g116862 = SS19_g116882;
				half4 Coords263_g116862 = temp_output_37_0_g116862;
				half3 WorldPosition263_g116862 = temp_output_279_0_g116862;
				half3 WorldNormal263_g116862 = temp_output_280_0_g116862;
				half4 localSampleStochastic3D263_g116862 = SampleStochastic3D( Texture263_g116862 , Sampler263_g116862 , Coords263_g116862 , WorldPosition263_g116862 , WorldNormal263_g116862 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8691_g116779 = localSamplePlanar2D238_g116862;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8691_g116779 = localSamplePlanar3D246_g116862;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8691_g116779 = localSampleStochastic2D234_g116862;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8691_g116779 = localSampleStochastic3D263_g116862;
				#else
				float4 staticSwitch8691_g116779 = localSamplePlanar2D238_g116862;
				#endif
				half4 Layer237_g116794 = staticSwitch8691_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler238_g116863 = SS19_g116882;
				float4 temp_output_37_0_g116863 = Input_Terrain_Coords_078752_g116779;
				half4 Coords238_g116863 = temp_output_37_0_g116863;
				float3 temp_output_279_0_g116863 = Input_Position9197_g116779;
				half3 WorldPosition238_g116863 = temp_output_279_0_g116863;
				half4 localSamplePlanar2D238_g116863 = SamplePlanar2D( Texture238_g116863 , Sampler238_g116863 , Coords238_g116863 , WorldPosition238_g116863 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler246_g116863 = SS19_g116882;
				half4 Coords246_g116863 = temp_output_37_0_g116863;
				half3 WorldPosition246_g116863 = temp_output_279_0_g116863;
				float3 temp_output_280_0_g116863 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116863 = temp_output_280_0_g116863;
				half4 localSamplePlanar3D246_g116863 = SamplePlanar3D( Texture246_g116863 , Sampler246_g116863 , Coords246_g116863 , WorldPosition246_g116863 , WorldNormal246_g116863 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler234_g116863 = SS19_g116882;
				float4 Coords234_g116863 = temp_output_37_0_g116863;
				float3 WorldPosition234_g116863 = temp_output_279_0_g116863;
				float4 localSampleStochastic2D234_g116863 = SampleStochastic2D( Texture234_g116863 , Sampler234_g116863 , Coords234_g116863 , WorldPosition234_g116863 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116863) = _TerrainAlbedoTex7;
				SamplerState Sampler263_g116863 = SS19_g116882;
				half4 Coords263_g116863 = temp_output_37_0_g116863;
				half3 WorldPosition263_g116863 = temp_output_279_0_g116863;
				half3 WorldNormal263_g116863 = temp_output_280_0_g116863;
				half4 localSampleStochastic3D263_g116863 = SampleStochastic3D( Texture263_g116863 , Sampler263_g116863 , Coords263_g116863 , WorldPosition263_g116863 , WorldNormal263_g116863 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8692_g116779 = localSamplePlanar2D238_g116863;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8692_g116779 = localSamplePlanar3D246_g116863;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8692_g116779 = localSampleStochastic2D234_g116863;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8692_g116779 = localSampleStochastic3D263_g116863;
				#else
				float4 staticSwitch8692_g116779 = localSamplePlanar2D238_g116863;
				#endif
				half4 Layer338_g116794 = staticSwitch8692_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler238_g116864 = SS19_g116882;
				float4 temp_output_37_0_g116864 = Input_Terrain_Coords_088749_g116779;
				half4 Coords238_g116864 = temp_output_37_0_g116864;
				float3 temp_output_279_0_g116864 = Input_Position9197_g116779;
				half3 WorldPosition238_g116864 = temp_output_279_0_g116864;
				half4 localSamplePlanar2D238_g116864 = SamplePlanar2D( Texture238_g116864 , Sampler238_g116864 , Coords238_g116864 , WorldPosition238_g116864 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler246_g116864 = SS19_g116882;
				half4 Coords246_g116864 = temp_output_37_0_g116864;
				half3 WorldPosition246_g116864 = temp_output_279_0_g116864;
				float3 temp_output_280_0_g116864 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116864 = temp_output_280_0_g116864;
				half4 localSamplePlanar3D246_g116864 = SamplePlanar3D( Texture246_g116864 , Sampler246_g116864 , Coords246_g116864 , WorldPosition246_g116864 , WorldNormal246_g116864 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler234_g116864 = SS19_g116882;
				float4 Coords234_g116864 = temp_output_37_0_g116864;
				float3 WorldPosition234_g116864 = temp_output_279_0_g116864;
				float4 localSampleStochastic2D234_g116864 = SampleStochastic2D( Texture234_g116864 , Sampler234_g116864 , Coords234_g116864 , WorldPosition234_g116864 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116864) = _TerrainAlbedoTex8;
				SamplerState Sampler263_g116864 = SS19_g116882;
				half4 Coords263_g116864 = temp_output_37_0_g116864;
				half3 WorldPosition263_g116864 = temp_output_279_0_g116864;
				half3 WorldNormal263_g116864 = temp_output_280_0_g116864;
				half4 localSampleStochastic3D263_g116864 = SampleStochastic3D( Texture263_g116864 , Sampler263_g116864 , Coords263_g116864 , WorldPosition263_g116864 , WorldNormal263_g116864 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8693_g116779 = localSamplePlanar2D238_g116864;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8693_g116779 = localSamplePlanar3D246_g116864;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8693_g116779 = localSampleStochastic2D234_g116864;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8693_g116779 = localSampleStochastic3D263_g116864;
				#else
				float4 staticSwitch8693_g116779 = localSamplePlanar2D238_g116864;
				#endif
				half4 Layer439_g116794 = staticSwitch8693_g116779;
				float4 weightedBlendVar31_g116794 = Weights52_g116794;
				float4 weightedBlend31_g116794 = ( weightedBlendVar31_g116794.x*Layer133_g116794 + weightedBlendVar31_g116794.y*Layer237_g116794 + weightedBlendVar31_g116794.z*Layer338_g116794 + weightedBlendVar31_g116794.w*Layer439_g116794 );
				half4 Terrain_AAAA_088665_g116779 = weightedBlend31_g116794;
				half4 Layer_0810_g116787 = Terrain_AAAA_088665_g116779;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8794_g116779 = weights_127362_g116779;
				#else
				float4 staticSwitch8794_g116779 = control_127362_g116779;
				#endif
				half4 Terrain_Weights_127710_g116779 = staticSwitch8794_g116779;
				half4 Weights52_g116801 = Terrain_Weights_127710_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler238_g116838 = SS19_g116882;
				float4 temp_output_37_0_g116838 = Input_Terrain_Coords_098833_g116779;
				half4 Coords238_g116838 = temp_output_37_0_g116838;
				float3 temp_output_279_0_g116838 = Input_Position9197_g116779;
				half3 WorldPosition238_g116838 = temp_output_279_0_g116838;
				half4 localSamplePlanar2D238_g116838 = SamplePlanar2D( Texture238_g116838 , Sampler238_g116838 , Coords238_g116838 , WorldPosition238_g116838 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler246_g116838 = SS19_g116882;
				half4 Coords246_g116838 = temp_output_37_0_g116838;
				half3 WorldPosition246_g116838 = temp_output_279_0_g116838;
				float3 temp_output_280_0_g116838 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116838 = temp_output_280_0_g116838;
				half4 localSamplePlanar3D246_g116838 = SamplePlanar3D( Texture246_g116838 , Sampler246_g116838 , Coords246_g116838 , WorldPosition246_g116838 , WorldNormal246_g116838 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler234_g116838 = SS19_g116882;
				float4 Coords234_g116838 = temp_output_37_0_g116838;
				float3 WorldPosition234_g116838 = temp_output_279_0_g116838;
				float4 localSampleStochastic2D234_g116838 = SampleStochastic2D( Texture234_g116838 , Sampler234_g116838 , Coords234_g116838 , WorldPosition234_g116838 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116838) = _TerrainAlbedoTex9;
				SamplerState Sampler263_g116838 = SS19_g116882;
				half4 Coords263_g116838 = temp_output_37_0_g116838;
				half3 WorldPosition263_g116838 = temp_output_279_0_g116838;
				half3 WorldNormal263_g116838 = temp_output_280_0_g116838;
				half4 localSampleStochastic3D263_g116838 = SampleStochastic3D( Texture263_g116838 , Sampler263_g116838 , Coords263_g116838 , WorldPosition263_g116838 , WorldNormal263_g116838 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8872_g116779 = localSamplePlanar2D238_g116838;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8872_g116779 = localSamplePlanar3D246_g116838;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8872_g116779 = localSampleStochastic2D234_g116838;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8872_g116779 = localSampleStochastic3D263_g116838;
				#else
				float4 staticSwitch8872_g116779 = localSamplePlanar2D238_g116838;
				#endif
				half4 Layer133_g116801 = staticSwitch8872_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler238_g116841 = SS19_g116882;
				float4 temp_output_37_0_g116841 = Input_Terrain_Coords_108834_g116779;
				half4 Coords238_g116841 = temp_output_37_0_g116841;
				float3 temp_output_279_0_g116841 = Input_Position9197_g116779;
				half3 WorldPosition238_g116841 = temp_output_279_0_g116841;
				half4 localSamplePlanar2D238_g116841 = SamplePlanar2D( Texture238_g116841 , Sampler238_g116841 , Coords238_g116841 , WorldPosition238_g116841 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler246_g116841 = SS19_g116882;
				half4 Coords246_g116841 = temp_output_37_0_g116841;
				half3 WorldPosition246_g116841 = temp_output_279_0_g116841;
				float3 temp_output_280_0_g116841 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116841 = temp_output_280_0_g116841;
				half4 localSamplePlanar3D246_g116841 = SamplePlanar3D( Texture246_g116841 , Sampler246_g116841 , Coords246_g116841 , WorldPosition246_g116841 , WorldNormal246_g116841 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler234_g116841 = SS19_g116882;
				float4 Coords234_g116841 = temp_output_37_0_g116841;
				float3 WorldPosition234_g116841 = temp_output_279_0_g116841;
				float4 localSampleStochastic2D234_g116841 = SampleStochastic2D( Texture234_g116841 , Sampler234_g116841 , Coords234_g116841 , WorldPosition234_g116841 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116841) = _TerrainAlbedoTex10;
				SamplerState Sampler263_g116841 = SS19_g116882;
				half4 Coords263_g116841 = temp_output_37_0_g116841;
				half3 WorldPosition263_g116841 = temp_output_279_0_g116841;
				half3 WorldNormal263_g116841 = temp_output_280_0_g116841;
				half4 localSampleStochastic3D263_g116841 = SampleStochastic3D( Texture263_g116841 , Sampler263_g116841 , Coords263_g116841 , WorldPosition263_g116841 , WorldNormal263_g116841 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8873_g116779 = localSamplePlanar2D238_g116841;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8873_g116779 = localSamplePlanar3D246_g116841;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8873_g116779 = localSampleStochastic2D234_g116841;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8873_g116779 = localSampleStochastic3D263_g116841;
				#else
				float4 staticSwitch8873_g116779 = localSamplePlanar2D238_g116841;
				#endif
				half4 Layer237_g116801 = staticSwitch8873_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler238_g116842 = SS19_g116882;
				float4 temp_output_37_0_g116842 = Input_Terrain_Coords_118835_g116779;
				half4 Coords238_g116842 = temp_output_37_0_g116842;
				float3 temp_output_279_0_g116842 = Input_Position9197_g116779;
				half3 WorldPosition238_g116842 = temp_output_279_0_g116842;
				half4 localSamplePlanar2D238_g116842 = SamplePlanar2D( Texture238_g116842 , Sampler238_g116842 , Coords238_g116842 , WorldPosition238_g116842 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler246_g116842 = SS19_g116882;
				half4 Coords246_g116842 = temp_output_37_0_g116842;
				half3 WorldPosition246_g116842 = temp_output_279_0_g116842;
				float3 temp_output_280_0_g116842 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116842 = temp_output_280_0_g116842;
				half4 localSamplePlanar3D246_g116842 = SamplePlanar3D( Texture246_g116842 , Sampler246_g116842 , Coords246_g116842 , WorldPosition246_g116842 , WorldNormal246_g116842 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler234_g116842 = SS19_g116882;
				float4 Coords234_g116842 = temp_output_37_0_g116842;
				float3 WorldPosition234_g116842 = temp_output_279_0_g116842;
				float4 localSampleStochastic2D234_g116842 = SampleStochastic2D( Texture234_g116842 , Sampler234_g116842 , Coords234_g116842 , WorldPosition234_g116842 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116842) = _TerrainAlbedoTex11;
				SamplerState Sampler263_g116842 = SS19_g116882;
				half4 Coords263_g116842 = temp_output_37_0_g116842;
				half3 WorldPosition263_g116842 = temp_output_279_0_g116842;
				half3 WorldNormal263_g116842 = temp_output_280_0_g116842;
				half4 localSampleStochastic3D263_g116842 = SampleStochastic3D( Texture263_g116842 , Sampler263_g116842 , Coords263_g116842 , WorldPosition263_g116842 , WorldNormal263_g116842 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8874_g116779 = localSamplePlanar2D238_g116842;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8874_g116779 = localSamplePlanar3D246_g116842;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8874_g116779 = localSampleStochastic2D234_g116842;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8874_g116779 = localSampleStochastic3D263_g116842;
				#else
				float4 staticSwitch8874_g116779 = localSamplePlanar2D238_g116842;
				#endif
				half4 Layer338_g116801 = staticSwitch8874_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler238_g116843 = SS19_g116882;
				float4 temp_output_37_0_g116843 = Input_Terrain_Coords_128836_g116779;
				half4 Coords238_g116843 = temp_output_37_0_g116843;
				float3 temp_output_279_0_g116843 = Input_Position9197_g116779;
				half3 WorldPosition238_g116843 = temp_output_279_0_g116843;
				half4 localSamplePlanar2D238_g116843 = SamplePlanar2D( Texture238_g116843 , Sampler238_g116843 , Coords238_g116843 , WorldPosition238_g116843 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler246_g116843 = SS19_g116882;
				half4 Coords246_g116843 = temp_output_37_0_g116843;
				half3 WorldPosition246_g116843 = temp_output_279_0_g116843;
				float3 temp_output_280_0_g116843 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116843 = temp_output_280_0_g116843;
				half4 localSamplePlanar3D246_g116843 = SamplePlanar3D( Texture246_g116843 , Sampler246_g116843 , Coords246_g116843 , WorldPosition246_g116843 , WorldNormal246_g116843 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler234_g116843 = SS19_g116882;
				float4 Coords234_g116843 = temp_output_37_0_g116843;
				float3 WorldPosition234_g116843 = temp_output_279_0_g116843;
				float4 localSampleStochastic2D234_g116843 = SampleStochastic2D( Texture234_g116843 , Sampler234_g116843 , Coords234_g116843 , WorldPosition234_g116843 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116843) = _TerrainAlbedoTex12;
				SamplerState Sampler263_g116843 = SS19_g116882;
				half4 Coords263_g116843 = temp_output_37_0_g116843;
				half3 WorldPosition263_g116843 = temp_output_279_0_g116843;
				half3 WorldNormal263_g116843 = temp_output_280_0_g116843;
				half4 localSampleStochastic3D263_g116843 = SampleStochastic3D( Texture263_g116843 , Sampler263_g116843 , Coords263_g116843 , WorldPosition263_g116843 , WorldNormal263_g116843 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8875_g116779 = localSamplePlanar2D238_g116843;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8875_g116779 = localSamplePlanar3D246_g116843;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8875_g116779 = localSampleStochastic2D234_g116843;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8875_g116779 = localSampleStochastic3D263_g116843;
				#else
				float4 staticSwitch8875_g116779 = localSamplePlanar2D238_g116843;
				#endif
				half4 Layer439_g116801 = staticSwitch8875_g116779;
				float4 weightedBlendVar31_g116801 = Weights52_g116801;
				float4 weightedBlend31_g116801 = ( weightedBlendVar31_g116801.x*Layer133_g116801 + weightedBlendVar31_g116801.y*Layer237_g116801 + weightedBlendVar31_g116801.z*Layer338_g116801 + weightedBlendVar31_g116801.w*Layer439_g116801 );
				half4 Terrain_AAAA_128851_g116779 = weightedBlend31_g116801;
				half4 Layer_1243_g116787 = Terrain_AAAA_128851_g116779;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8795_g116779 = weights_167362_g116779;
				#else
				float4 staticSwitch8795_g116779 = control_167362_g116779;
				#endif
				half4 Terrain_Weights_167709_g116779 = staticSwitch8795_g116779;
				half4 Weights52_g116808 = Terrain_Weights_167709_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler238_g116847 = SS19_g116882;
				float4 temp_output_37_0_g116847 = Input_Terrain_Coords_138960_g116779;
				half4 Coords238_g116847 = temp_output_37_0_g116847;
				float3 temp_output_279_0_g116847 = Input_Position9197_g116779;
				half3 WorldPosition238_g116847 = temp_output_279_0_g116847;
				half4 localSamplePlanar2D238_g116847 = SamplePlanar2D( Texture238_g116847 , Sampler238_g116847 , Coords238_g116847 , WorldPosition238_g116847 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler246_g116847 = SS19_g116882;
				half4 Coords246_g116847 = temp_output_37_0_g116847;
				half3 WorldPosition246_g116847 = temp_output_279_0_g116847;
				float3 temp_output_280_0_g116847 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116847 = temp_output_280_0_g116847;
				half4 localSamplePlanar3D246_g116847 = SamplePlanar3D( Texture246_g116847 , Sampler246_g116847 , Coords246_g116847 , WorldPosition246_g116847 , WorldNormal246_g116847 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler234_g116847 = SS19_g116882;
				float4 Coords234_g116847 = temp_output_37_0_g116847;
				float3 WorldPosition234_g116847 = temp_output_279_0_g116847;
				float4 localSampleStochastic2D234_g116847 = SampleStochastic2D( Texture234_g116847 , Sampler234_g116847 , Coords234_g116847 , WorldPosition234_g116847 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116847) = _TerrainAlbedoTex13;
				SamplerState Sampler263_g116847 = SS19_g116882;
				half4 Coords263_g116847 = temp_output_37_0_g116847;
				half3 WorldPosition263_g116847 = temp_output_279_0_g116847;
				half3 WorldNormal263_g116847 = temp_output_280_0_g116847;
				half4 localSampleStochastic3D263_g116847 = SampleStochastic3D( Texture263_g116847 , Sampler263_g116847 , Coords263_g116847 , WorldPosition263_g116847 , WorldNormal263_g116847 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8972_g116779 = localSamplePlanar2D238_g116847;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8972_g116779 = localSamplePlanar3D246_g116847;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8972_g116779 = localSampleStochastic2D234_g116847;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8972_g116779 = localSampleStochastic3D263_g116847;
				#else
				float4 staticSwitch8972_g116779 = localSamplePlanar2D238_g116847;
				#endif
				half4 Layer133_g116808 = staticSwitch8972_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler238_g116853 = SS19_g116882;
				float4 temp_output_37_0_g116853 = Input_Terrain_Coords_148961_g116779;
				half4 Coords238_g116853 = temp_output_37_0_g116853;
				float3 temp_output_279_0_g116853 = Input_Position9197_g116779;
				half3 WorldPosition238_g116853 = temp_output_279_0_g116853;
				half4 localSamplePlanar2D238_g116853 = SamplePlanar2D( Texture238_g116853 , Sampler238_g116853 , Coords238_g116853 , WorldPosition238_g116853 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler246_g116853 = SS19_g116882;
				half4 Coords246_g116853 = temp_output_37_0_g116853;
				half3 WorldPosition246_g116853 = temp_output_279_0_g116853;
				float3 temp_output_280_0_g116853 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116853 = temp_output_280_0_g116853;
				half4 localSamplePlanar3D246_g116853 = SamplePlanar3D( Texture246_g116853 , Sampler246_g116853 , Coords246_g116853 , WorldPosition246_g116853 , WorldNormal246_g116853 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler234_g116853 = SS19_g116882;
				float4 Coords234_g116853 = temp_output_37_0_g116853;
				float3 WorldPosition234_g116853 = temp_output_279_0_g116853;
				float4 localSampleStochastic2D234_g116853 = SampleStochastic2D( Texture234_g116853 , Sampler234_g116853 , Coords234_g116853 , WorldPosition234_g116853 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116853) = _TerrainAlbedoTex14;
				SamplerState Sampler263_g116853 = SS19_g116882;
				half4 Coords263_g116853 = temp_output_37_0_g116853;
				half3 WorldPosition263_g116853 = temp_output_279_0_g116853;
				half3 WorldNormal263_g116853 = temp_output_280_0_g116853;
				half4 localSampleStochastic3D263_g116853 = SampleStochastic3D( Texture263_g116853 , Sampler263_g116853 , Coords263_g116853 , WorldPosition263_g116853 , WorldNormal263_g116853 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8973_g116779 = localSamplePlanar2D238_g116853;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8973_g116779 = localSamplePlanar3D246_g116853;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8973_g116779 = localSampleStochastic2D234_g116853;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8973_g116779 = localSampleStochastic3D263_g116853;
				#else
				float4 staticSwitch8973_g116779 = localSamplePlanar2D238_g116853;
				#endif
				half4 Layer237_g116808 = staticSwitch8973_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler238_g116854 = SS19_g116882;
				float4 temp_output_37_0_g116854 = Input_Terrain_Coords_158962_g116779;
				half4 Coords238_g116854 = temp_output_37_0_g116854;
				float3 temp_output_279_0_g116854 = Input_Position9197_g116779;
				half3 WorldPosition238_g116854 = temp_output_279_0_g116854;
				half4 localSamplePlanar2D238_g116854 = SamplePlanar2D( Texture238_g116854 , Sampler238_g116854 , Coords238_g116854 , WorldPosition238_g116854 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler246_g116854 = SS19_g116882;
				half4 Coords246_g116854 = temp_output_37_0_g116854;
				half3 WorldPosition246_g116854 = temp_output_279_0_g116854;
				float3 temp_output_280_0_g116854 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116854 = temp_output_280_0_g116854;
				half4 localSamplePlanar3D246_g116854 = SamplePlanar3D( Texture246_g116854 , Sampler246_g116854 , Coords246_g116854 , WorldPosition246_g116854 , WorldNormal246_g116854 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler234_g116854 = SS19_g116882;
				float4 Coords234_g116854 = temp_output_37_0_g116854;
				float3 WorldPosition234_g116854 = temp_output_279_0_g116854;
				float4 localSampleStochastic2D234_g116854 = SampleStochastic2D( Texture234_g116854 , Sampler234_g116854 , Coords234_g116854 , WorldPosition234_g116854 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116854) = _TerrainAlbedoTex15;
				SamplerState Sampler263_g116854 = SS19_g116882;
				half4 Coords263_g116854 = temp_output_37_0_g116854;
				half3 WorldPosition263_g116854 = temp_output_279_0_g116854;
				half3 WorldNormal263_g116854 = temp_output_280_0_g116854;
				half4 localSampleStochastic3D263_g116854 = SampleStochastic3D( Texture263_g116854 , Sampler263_g116854 , Coords263_g116854 , WorldPosition263_g116854 , WorldNormal263_g116854 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8974_g116779 = localSamplePlanar2D238_g116854;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8974_g116779 = localSamplePlanar3D246_g116854;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8974_g116779 = localSampleStochastic2D234_g116854;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8974_g116779 = localSampleStochastic3D263_g116854;
				#else
				float4 staticSwitch8974_g116779 = localSamplePlanar2D238_g116854;
				#endif
				half4 Layer338_g116808 = staticSwitch8974_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler238_g116855 = SS19_g116882;
				float4 temp_output_37_0_g116855 = Input_Terrain_Coords_168959_g116779;
				half4 Coords238_g116855 = temp_output_37_0_g116855;
				float3 temp_output_279_0_g116855 = Input_Position9197_g116779;
				half3 WorldPosition238_g116855 = temp_output_279_0_g116855;
				half4 localSamplePlanar2D238_g116855 = SamplePlanar2D( Texture238_g116855 , Sampler238_g116855 , Coords238_g116855 , WorldPosition238_g116855 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler246_g116855 = SS19_g116882;
				half4 Coords246_g116855 = temp_output_37_0_g116855;
				half3 WorldPosition246_g116855 = temp_output_279_0_g116855;
				float3 temp_output_280_0_g116855 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116855 = temp_output_280_0_g116855;
				half4 localSamplePlanar3D246_g116855 = SamplePlanar3D( Texture246_g116855 , Sampler246_g116855 , Coords246_g116855 , WorldPosition246_g116855 , WorldNormal246_g116855 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler234_g116855 = SS19_g116882;
				float4 Coords234_g116855 = temp_output_37_0_g116855;
				float3 WorldPosition234_g116855 = temp_output_279_0_g116855;
				float4 localSampleStochastic2D234_g116855 = SampleStochastic2D( Texture234_g116855 , Sampler234_g116855 , Coords234_g116855 , WorldPosition234_g116855 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116855) = _TerrainAlbedoTex16;
				SamplerState Sampler263_g116855 = SS19_g116882;
				half4 Coords263_g116855 = temp_output_37_0_g116855;
				half3 WorldPosition263_g116855 = temp_output_279_0_g116855;
				half3 WorldNormal263_g116855 = temp_output_280_0_g116855;
				half4 localSampleStochastic3D263_g116855 = SampleStochastic3D( Texture263_g116855 , Sampler263_g116855 , Coords263_g116855 , WorldPosition263_g116855 , WorldNormal263_g116855 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8975_g116779 = localSamplePlanar2D238_g116855;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8975_g116779 = localSamplePlanar3D246_g116855;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8975_g116779 = localSampleStochastic2D234_g116855;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8975_g116779 = localSampleStochastic3D263_g116855;
				#else
				float4 staticSwitch8975_g116779 = localSamplePlanar2D238_g116855;
				#endif
				half4 Layer439_g116808 = staticSwitch8975_g116779;
				float4 weightedBlendVar31_g116808 = Weights52_g116808;
				float4 weightedBlend31_g116808 = ( weightedBlendVar31_g116808.x*Layer133_g116808 + weightedBlendVar31_g116808.y*Layer237_g116808 + weightedBlendVar31_g116808.z*Layer338_g116808 + weightedBlendVar31_g116808.w*Layer439_g116808 );
				half4 Terrain_AAAA_168986_g116779 = weightedBlend31_g116808;
				half4 Layer_1644_g116787 = Terrain_AAAA_168986_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116787 = Layer_045_g116787;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116787 = ( Layer_045_g116787 + Layer_0810_g116787 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116787 = ( Layer_045_g116787 + Layer_0810_g116787 + Layer_1243_g116787 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116787 = ( Layer_045_g116787 + Layer_0810_g116787 + Layer_1243_g116787 + Layer_1644_g116787 );
				#else
				float4 staticSwitch40_g116787 = Layer_045_g116787;
				#endif
				half4 Blend_Albedo7468_g116779 = staticSwitch40_g116787;
				half4 Weights52_g116873 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116873 = _TerrainColor1;
				half4 Layer237_g116873 = _TerrainColor2;
				half4 Layer338_g116873 = _TerrainColor3;
				half4 Layer439_g116873 = _TerrainColor4;
				float4 weightedBlendVar31_g116873 = Weights52_g116873;
				float4 weightedBlend31_g116873 = ( weightedBlendVar31_g116873.x*Layer133_g116873 + weightedBlendVar31_g116873.y*Layer237_g116873 + weightedBlendVar31_g116873.z*Layer338_g116873 + weightedBlendVar31_g116873.w*Layer439_g116873 );
				half4 Terrain_Color_049349_g116779 = weightedBlend31_g116873;
				half4 Layer_045_g116878 = Terrain_Color_049349_g116779;
				half4 Weights52_g116874 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116874 = _TerrainColor5;
				half4 Layer237_g116874 = _TerrainColor6;
				half4 Layer338_g116874 = _TerrainColor7;
				half4 Layer439_g116874 = _TerrainColor8;
				float4 weightedBlendVar31_g116874 = Weights52_g116874;
				float4 weightedBlend31_g116874 = ( weightedBlendVar31_g116874.x*Layer133_g116874 + weightedBlendVar31_g116874.y*Layer237_g116874 + weightedBlendVar31_g116874.z*Layer338_g116874 + weightedBlendVar31_g116874.w*Layer439_g116874 );
				half4 Terrain_Color_089361_g116779 = weightedBlend31_g116874;
				half4 Layer_0810_g116878 = Terrain_Color_089361_g116779;
				half4 Weights52_g116875 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116875 = _TerrainColor9;
				half4 Layer237_g116875 = _TerrainColor10;
				half4 Layer338_g116875 = _TerrainColor11;
				half4 Layer439_g116875 = _TerrainColor12;
				float4 weightedBlendVar31_g116875 = Weights52_g116875;
				float4 weightedBlend31_g116875 = ( weightedBlendVar31_g116875.x*Layer133_g116875 + weightedBlendVar31_g116875.y*Layer237_g116875 + weightedBlendVar31_g116875.z*Layer338_g116875 + weightedBlendVar31_g116875.w*Layer439_g116875 );
				half4 Terrain_Color_129373_g116779 = weightedBlend31_g116875;
				half4 Layer_1243_g116878 = Terrain_Color_129373_g116779;
				half4 Weights52_g116876 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116876 = _TerrainColor13;
				half4 Layer237_g116876 = _TerrainColor14;
				half4 Layer338_g116876 = _TerrainColor15;
				half4 Layer439_g116876 = _TerrainColor16;
				float4 weightedBlendVar31_g116876 = Weights52_g116876;
				float4 weightedBlend31_g116876 = ( weightedBlendVar31_g116876.x*Layer133_g116876 + weightedBlendVar31_g116876.y*Layer237_g116876 + weightedBlendVar31_g116876.z*Layer338_g116876 + weightedBlendVar31_g116876.w*Layer439_g116876 );
				half4 Terrain_Color_169381_g116779 = weightedBlend31_g116876;
				half4 Layer_1644_g116878 = Terrain_Color_169381_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116878 = Layer_045_g116878;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116878 = ( Layer_045_g116878 + Layer_0810_g116878 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116878 = ( Layer_045_g116878 + Layer_0810_g116878 + Layer_1243_g116878 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116878 = ( Layer_045_g116878 + Layer_0810_g116878 + Layer_1243_g116878 + Layer_1644_g116878 );
				#else
				float4 staticSwitch40_g116878 = Layer_045_g116878;
				#endif
				half4 Blend_TerrainColor9387_g116779 = staticSwitch40_g116878;
				half3 Final_Albedo9144_g116779 = ( (Blend_Albedo7468_g116779).xyz * (Blend_TerrainColor9387_g116779).rgb * (_TerrainColor).rgb );
				half3 Local_Albedo9199_g116777 = Final_Albedo9144_g116779;
				float3 In_Albedo3_g116778 = Local_Albedo9199_g116777;
				float3 In_AlbedoRaw3_g116778 = Local_Albedo9199_g116777;
				float3 ase_worldTangent = IN.ase_texcoord4.xyz;
				float3 ase_worldBitangent = IN.ase_texcoord5.xyz;
				float3x3 ase_worldToTangent = float3x3(ase_worldTangent,ase_worldBitangent,ase_worldNormal);
				half4 Weights52_g116780 = Terrain_Weights_046781_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116871) = _TerrainNormalTex1;
				float localFilterTexture29_g116886 = ( 0.0 );
				SamplerState SamplerDefault29_g116886 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g116886 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g116886 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g116886 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g116886 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g116886 = SamplerDefault29_g116886;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g116886 = SamplerDefault29_g116886;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g116886 = SamplerPoint29_g116886;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g116886 = SamplerLow29_g116886;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g116886 = SamplerMedium29_g116886;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g116886 = SamplerHigh29_g116886;
				#endif
				SamplerState Sampler238_g116871 = SS29_g116886;
				float4 temp_output_37_0_g116871 = Input_Terrain_Coords_016785_g116779;
				half4 Coords238_g116871 = temp_output_37_0_g116871;
				float3 temp_output_279_0_g116871 = Input_Position9197_g116779;
				half3 WorldPosition238_g116871 = temp_output_279_0_g116871;
				half4 localSamplePlanar2D238_g116871 = SamplePlanar2D( Texture238_g116871 , Sampler238_g116871 , Coords238_g116871 , WorldPosition238_g116871 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116871) = _TerrainNormalTex1;
				SamplerState Sampler246_g116871 = SS29_g116886;
				half4 Coords246_g116871 = temp_output_37_0_g116871;
				half3 WorldPosition246_g116871 = temp_output_279_0_g116871;
				float3 temp_output_280_0_g116871 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116871 = temp_output_280_0_g116871;
				half4 localSamplePlanar3D246_g116871 = SamplePlanar3D( Texture246_g116871 , Sampler246_g116871 , Coords246_g116871 , WorldPosition246_g116871 , WorldNormal246_g116871 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116871) = _TerrainNormalTex1;
				SamplerState Sampler234_g116871 = SS29_g116886;
				float4 Coords234_g116871 = temp_output_37_0_g116871;
				float3 WorldPosition234_g116871 = temp_output_279_0_g116871;
				float4 localSampleStochastic2D234_g116871 = SampleStochastic2D( Texture234_g116871 , Sampler234_g116871 , Coords234_g116871 , WorldPosition234_g116871 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116871) = _TerrainNormalTex1;
				SamplerState Sampler263_g116871 = SS29_g116886;
				half4 Coords263_g116871 = temp_output_37_0_g116871;
				half3 WorldPosition263_g116871 = temp_output_279_0_g116871;
				half3 WorldNormal263_g116871 = temp_output_280_0_g116871;
				half4 localSampleStochastic3D263_g116871 = SampleStochastic3D( Texture263_g116871 , Sampler263_g116871 , Coords263_g116871 , WorldPosition263_g116871 , WorldNormal263_g116871 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8635_g116779 = localSamplePlanar2D238_g116871;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8635_g116779 = localSamplePlanar3D246_g116871;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8635_g116779 = localSampleStochastic2D234_g116871;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8635_g116779 = localSampleStochastic3D263_g116871;
				#else
				float4 staticSwitch8635_g116779 = localSamplePlanar2D238_g116871;
				#endif
				half4 Layer133_g116780 = staticSwitch8635_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116827) = _TerrainNormalTex2;
				SamplerState Sampler238_g116827 = SS29_g116886;
				float4 temp_output_37_0_g116827 = Input_Terrain_Coords_026787_g116779;
				half4 Coords238_g116827 = temp_output_37_0_g116827;
				float3 temp_output_279_0_g116827 = Input_Position9197_g116779;
				half3 WorldPosition238_g116827 = temp_output_279_0_g116827;
				half4 localSamplePlanar2D238_g116827 = SamplePlanar2D( Texture238_g116827 , Sampler238_g116827 , Coords238_g116827 , WorldPosition238_g116827 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116827) = _TerrainNormalTex2;
				SamplerState Sampler246_g116827 = SS29_g116886;
				half4 Coords246_g116827 = temp_output_37_0_g116827;
				half3 WorldPosition246_g116827 = temp_output_279_0_g116827;
				float3 temp_output_280_0_g116827 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116827 = temp_output_280_0_g116827;
				half4 localSamplePlanar3D246_g116827 = SamplePlanar3D( Texture246_g116827 , Sampler246_g116827 , Coords246_g116827 , WorldPosition246_g116827 , WorldNormal246_g116827 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116827) = _TerrainNormalTex2;
				SamplerState Sampler234_g116827 = SS29_g116886;
				float4 Coords234_g116827 = temp_output_37_0_g116827;
				float3 WorldPosition234_g116827 = temp_output_279_0_g116827;
				float4 localSampleStochastic2D234_g116827 = SampleStochastic2D( Texture234_g116827 , Sampler234_g116827 , Coords234_g116827 , WorldPosition234_g116827 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116827) = _TerrainNormalTex2;
				SamplerState Sampler263_g116827 = SS29_g116886;
				half4 Coords263_g116827 = temp_output_37_0_g116827;
				half3 WorldPosition263_g116827 = temp_output_279_0_g116827;
				half3 WorldNormal263_g116827 = temp_output_280_0_g116827;
				half4 localSampleStochastic3D263_g116827 = SampleStochastic3D( Texture263_g116827 , Sampler263_g116827 , Coords263_g116827 , WorldPosition263_g116827 , WorldNormal263_g116827 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8636_g116779 = localSamplePlanar2D238_g116827;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8636_g116779 = localSamplePlanar3D246_g116827;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8636_g116779 = localSampleStochastic2D234_g116827;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8636_g116779 = localSampleStochastic3D263_g116827;
				#else
				float4 staticSwitch8636_g116779 = localSamplePlanar2D238_g116827;
				#endif
				half4 Layer237_g116780 = staticSwitch8636_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116830) = _TerrainNormalTex3;
				SamplerState Sampler238_g116830 = SS29_g116886;
				float4 temp_output_37_0_g116830 = Input_Terrain_Coords_036789_g116779;
				half4 Coords238_g116830 = temp_output_37_0_g116830;
				float3 temp_output_279_0_g116830 = Input_Position9197_g116779;
				half3 WorldPosition238_g116830 = temp_output_279_0_g116830;
				half4 localSamplePlanar2D238_g116830 = SamplePlanar2D( Texture238_g116830 , Sampler238_g116830 , Coords238_g116830 , WorldPosition238_g116830 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116830) = _TerrainNormalTex3;
				SamplerState Sampler246_g116830 = SS29_g116886;
				half4 Coords246_g116830 = temp_output_37_0_g116830;
				half3 WorldPosition246_g116830 = temp_output_279_0_g116830;
				float3 temp_output_280_0_g116830 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116830 = temp_output_280_0_g116830;
				half4 localSamplePlanar3D246_g116830 = SamplePlanar3D( Texture246_g116830 , Sampler246_g116830 , Coords246_g116830 , WorldPosition246_g116830 , WorldNormal246_g116830 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116830) = _TerrainNormalTex3;
				SamplerState Sampler234_g116830 = SS29_g116886;
				float4 Coords234_g116830 = temp_output_37_0_g116830;
				float3 WorldPosition234_g116830 = temp_output_279_0_g116830;
				float4 localSampleStochastic2D234_g116830 = SampleStochastic2D( Texture234_g116830 , Sampler234_g116830 , Coords234_g116830 , WorldPosition234_g116830 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116830) = _TerrainNormalTex3;
				SamplerState Sampler263_g116830 = SS29_g116886;
				half4 Coords263_g116830 = temp_output_37_0_g116830;
				half3 WorldPosition263_g116830 = temp_output_279_0_g116830;
				half3 WorldNormal263_g116830 = temp_output_280_0_g116830;
				half4 localSampleStochastic3D263_g116830 = SampleStochastic3D( Texture263_g116830 , Sampler263_g116830 , Coords263_g116830 , WorldPosition263_g116830 , WorldNormal263_g116830 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8637_g116779 = localSamplePlanar2D238_g116830;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8637_g116779 = localSamplePlanar3D246_g116830;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8637_g116779 = localSampleStochastic2D234_g116830;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8637_g116779 = localSampleStochastic3D263_g116830;
				#else
				float4 staticSwitch8637_g116779 = localSamplePlanar2D238_g116830;
				#endif
				half4 Layer338_g116780 = staticSwitch8637_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116832) = _TerrainNormalTex4;
				SamplerState Sampler238_g116832 = SS29_g116886;
				float4 temp_output_37_0_g116832 = Input_Terrain_Coords_046791_g116779;
				half4 Coords238_g116832 = temp_output_37_0_g116832;
				float3 temp_output_279_0_g116832 = Input_Position9197_g116779;
				half3 WorldPosition238_g116832 = temp_output_279_0_g116832;
				half4 localSamplePlanar2D238_g116832 = SamplePlanar2D( Texture238_g116832 , Sampler238_g116832 , Coords238_g116832 , WorldPosition238_g116832 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116832) = _TerrainNormalTex4;
				SamplerState Sampler246_g116832 = SS29_g116886;
				half4 Coords246_g116832 = temp_output_37_0_g116832;
				half3 WorldPosition246_g116832 = temp_output_279_0_g116832;
				float3 temp_output_280_0_g116832 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116832 = temp_output_280_0_g116832;
				half4 localSamplePlanar3D246_g116832 = SamplePlanar3D( Texture246_g116832 , Sampler246_g116832 , Coords246_g116832 , WorldPosition246_g116832 , WorldNormal246_g116832 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116832) = _TerrainNormalTex4;
				SamplerState Sampler234_g116832 = SS29_g116886;
				float4 Coords234_g116832 = temp_output_37_0_g116832;
				float3 WorldPosition234_g116832 = temp_output_279_0_g116832;
				float4 localSampleStochastic2D234_g116832 = SampleStochastic2D( Texture234_g116832 , Sampler234_g116832 , Coords234_g116832 , WorldPosition234_g116832 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116832) = _TerrainNormalTex4;
				SamplerState Sampler263_g116832 = SS29_g116886;
				half4 Coords263_g116832 = temp_output_37_0_g116832;
				half3 WorldPosition263_g116832 = temp_output_279_0_g116832;
				half3 WorldNormal263_g116832 = temp_output_280_0_g116832;
				half4 localSampleStochastic3D263_g116832 = SampleStochastic3D( Texture263_g116832 , Sampler263_g116832 , Coords263_g116832 , WorldPosition263_g116832 , WorldNormal263_g116832 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8638_g116779 = localSamplePlanar2D238_g116832;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8638_g116779 = localSamplePlanar3D246_g116832;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8638_g116779 = localSampleStochastic2D234_g116832;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8638_g116779 = localSampleStochastic3D263_g116832;
				#else
				float4 staticSwitch8638_g116779 = localSamplePlanar2D238_g116832;
				#endif
				half4 Layer439_g116780 = staticSwitch8638_g116779;
				float4 weightedBlendVar31_g116780 = Weights52_g116780;
				float4 weightedBlend31_g116780 = ( weightedBlendVar31_g116780.x*Layer133_g116780 + weightedBlendVar31_g116780.y*Layer237_g116780 + weightedBlendVar31_g116780.z*Layer338_g116780 + weightedBlendVar31_g116780.w*Layer439_g116780 );
				half4 Terrain_B_047202_g116779 = weightedBlend31_g116780;
				half4 Layer_045_g116786 = Terrain_B_047202_g116779;
				half4 Weights52_g116795 = Terrain_Weights_087340_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116836) = _TerrainNormalTex5;
				SamplerState Sampler238_g116836 = SS29_g116886;
				float4 temp_output_37_0_g116836 = Input_Terrain_Coords_058750_g116779;
				half4 Coords238_g116836 = temp_output_37_0_g116836;
				float3 temp_output_279_0_g116836 = Input_Position9197_g116779;
				half3 WorldPosition238_g116836 = temp_output_279_0_g116836;
				half4 localSamplePlanar2D238_g116836 = SamplePlanar2D( Texture238_g116836 , Sampler238_g116836 , Coords238_g116836 , WorldPosition238_g116836 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116836) = _TerrainNormalTex5;
				SamplerState Sampler246_g116836 = SS29_g116886;
				half4 Coords246_g116836 = temp_output_37_0_g116836;
				half3 WorldPosition246_g116836 = temp_output_279_0_g116836;
				float3 temp_output_280_0_g116836 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116836 = temp_output_280_0_g116836;
				half4 localSamplePlanar3D246_g116836 = SamplePlanar3D( Texture246_g116836 , Sampler246_g116836 , Coords246_g116836 , WorldPosition246_g116836 , WorldNormal246_g116836 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116836) = _TerrainNormalTex5;
				SamplerState Sampler234_g116836 = SS29_g116886;
				float4 Coords234_g116836 = temp_output_37_0_g116836;
				float3 WorldPosition234_g116836 = temp_output_279_0_g116836;
				float4 localSampleStochastic2D234_g116836 = SampleStochastic2D( Texture234_g116836 , Sampler234_g116836 , Coords234_g116836 , WorldPosition234_g116836 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116836) = _TerrainNormalTex5;
				SamplerState Sampler263_g116836 = SS29_g116886;
				half4 Coords263_g116836 = temp_output_37_0_g116836;
				half3 WorldPosition263_g116836 = temp_output_279_0_g116836;
				half3 WorldNormal263_g116836 = temp_output_280_0_g116836;
				half4 localSampleStochastic3D263_g116836 = SampleStochastic3D( Texture263_g116836 , Sampler263_g116836 , Coords263_g116836 , WorldPosition263_g116836 , WorldNormal263_g116836 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8686_g116779 = localSamplePlanar2D238_g116836;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8686_g116779 = localSamplePlanar3D246_g116836;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8686_g116779 = localSampleStochastic2D234_g116836;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8686_g116779 = localSampleStochastic3D263_g116836;
				#else
				float4 staticSwitch8686_g116779 = localSamplePlanar2D238_g116836;
				#endif
				half4 Layer133_g116795 = staticSwitch8686_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116865) = _TerrainNormalTex6;
				SamplerState Sampler238_g116865 = SS29_g116886;
				float4 temp_output_37_0_g116865 = Input_Terrain_Coords_068751_g116779;
				half4 Coords238_g116865 = temp_output_37_0_g116865;
				float3 temp_output_279_0_g116865 = Input_Position9197_g116779;
				half3 WorldPosition238_g116865 = temp_output_279_0_g116865;
				half4 localSamplePlanar2D238_g116865 = SamplePlanar2D( Texture238_g116865 , Sampler238_g116865 , Coords238_g116865 , WorldPosition238_g116865 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116865) = _TerrainNormalTex6;
				SamplerState Sampler246_g116865 = SS29_g116886;
				half4 Coords246_g116865 = temp_output_37_0_g116865;
				half3 WorldPosition246_g116865 = temp_output_279_0_g116865;
				float3 temp_output_280_0_g116865 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116865 = temp_output_280_0_g116865;
				half4 localSamplePlanar3D246_g116865 = SamplePlanar3D( Texture246_g116865 , Sampler246_g116865 , Coords246_g116865 , WorldPosition246_g116865 , WorldNormal246_g116865 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116865) = _TerrainNormalTex6;
				SamplerState Sampler234_g116865 = SS29_g116886;
				float4 Coords234_g116865 = temp_output_37_0_g116865;
				float3 WorldPosition234_g116865 = temp_output_279_0_g116865;
				float4 localSampleStochastic2D234_g116865 = SampleStochastic2D( Texture234_g116865 , Sampler234_g116865 , Coords234_g116865 , WorldPosition234_g116865 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116865) = _TerrainNormalTex6;
				SamplerState Sampler263_g116865 = SS29_g116886;
				half4 Coords263_g116865 = temp_output_37_0_g116865;
				half3 WorldPosition263_g116865 = temp_output_279_0_g116865;
				half3 WorldNormal263_g116865 = temp_output_280_0_g116865;
				half4 localSampleStochastic3D263_g116865 = SampleStochastic3D( Texture263_g116865 , Sampler263_g116865 , Coords263_g116865 , WorldPosition263_g116865 , WorldNormal263_g116865 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8687_g116779 = localSamplePlanar2D238_g116865;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8687_g116779 = localSamplePlanar3D246_g116865;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8687_g116779 = localSampleStochastic2D234_g116865;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8687_g116779 = localSampleStochastic3D263_g116865;
				#else
				float4 staticSwitch8687_g116779 = localSamplePlanar2D238_g116865;
				#endif
				half4 Layer237_g116795 = staticSwitch8687_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116866) = _TerrainNormalTex7;
				SamplerState Sampler238_g116866 = SS29_g116886;
				float4 temp_output_37_0_g116866 = Input_Terrain_Coords_078752_g116779;
				half4 Coords238_g116866 = temp_output_37_0_g116866;
				float3 temp_output_279_0_g116866 = Input_Position9197_g116779;
				half3 WorldPosition238_g116866 = temp_output_279_0_g116866;
				half4 localSamplePlanar2D238_g116866 = SamplePlanar2D( Texture238_g116866 , Sampler238_g116866 , Coords238_g116866 , WorldPosition238_g116866 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116866) = _TerrainNormalTex7;
				SamplerState Sampler246_g116866 = SS29_g116886;
				half4 Coords246_g116866 = temp_output_37_0_g116866;
				half3 WorldPosition246_g116866 = temp_output_279_0_g116866;
				float3 temp_output_280_0_g116866 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116866 = temp_output_280_0_g116866;
				half4 localSamplePlanar3D246_g116866 = SamplePlanar3D( Texture246_g116866 , Sampler246_g116866 , Coords246_g116866 , WorldPosition246_g116866 , WorldNormal246_g116866 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116866) = _TerrainNormalTex7;
				SamplerState Sampler234_g116866 = SS29_g116886;
				float4 Coords234_g116866 = temp_output_37_0_g116866;
				float3 WorldPosition234_g116866 = temp_output_279_0_g116866;
				float4 localSampleStochastic2D234_g116866 = SampleStochastic2D( Texture234_g116866 , Sampler234_g116866 , Coords234_g116866 , WorldPosition234_g116866 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116866) = _TerrainNormalTex7;
				SamplerState Sampler263_g116866 = SS29_g116886;
				half4 Coords263_g116866 = temp_output_37_0_g116866;
				half3 WorldPosition263_g116866 = temp_output_279_0_g116866;
				half3 WorldNormal263_g116866 = temp_output_280_0_g116866;
				half4 localSampleStochastic3D263_g116866 = SampleStochastic3D( Texture263_g116866 , Sampler263_g116866 , Coords263_g116866 , WorldPosition263_g116866 , WorldNormal263_g116866 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8688_g116779 = localSamplePlanar2D238_g116866;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8688_g116779 = localSamplePlanar3D246_g116866;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8688_g116779 = localSampleStochastic2D234_g116866;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8688_g116779 = localSampleStochastic3D263_g116866;
				#else
				float4 staticSwitch8688_g116779 = localSamplePlanar2D238_g116866;
				#endif
				half4 Layer338_g116795 = staticSwitch8688_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116867) = _TerrainNormalTex8;
				SamplerState Sampler238_g116867 = SS29_g116886;
				float4 temp_output_37_0_g116867 = Input_Terrain_Coords_088749_g116779;
				half4 Coords238_g116867 = temp_output_37_0_g116867;
				float3 temp_output_279_0_g116867 = Input_Position9197_g116779;
				half3 WorldPosition238_g116867 = temp_output_279_0_g116867;
				half4 localSamplePlanar2D238_g116867 = SamplePlanar2D( Texture238_g116867 , Sampler238_g116867 , Coords238_g116867 , WorldPosition238_g116867 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116867) = _TerrainNormalTex8;
				SamplerState Sampler246_g116867 = SS29_g116886;
				half4 Coords246_g116867 = temp_output_37_0_g116867;
				half3 WorldPosition246_g116867 = temp_output_279_0_g116867;
				float3 temp_output_280_0_g116867 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116867 = temp_output_280_0_g116867;
				half4 localSamplePlanar3D246_g116867 = SamplePlanar3D( Texture246_g116867 , Sampler246_g116867 , Coords246_g116867 , WorldPosition246_g116867 , WorldNormal246_g116867 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116867) = _TerrainNormalTex8;
				SamplerState Sampler234_g116867 = SS29_g116886;
				float4 Coords234_g116867 = temp_output_37_0_g116867;
				float3 WorldPosition234_g116867 = temp_output_279_0_g116867;
				float4 localSampleStochastic2D234_g116867 = SampleStochastic2D( Texture234_g116867 , Sampler234_g116867 , Coords234_g116867 , WorldPosition234_g116867 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116867) = _TerrainNormalTex8;
				SamplerState Sampler263_g116867 = SS29_g116886;
				half4 Coords263_g116867 = temp_output_37_0_g116867;
				half3 WorldPosition263_g116867 = temp_output_279_0_g116867;
				half3 WorldNormal263_g116867 = temp_output_280_0_g116867;
				half4 localSampleStochastic3D263_g116867 = SampleStochastic3D( Texture263_g116867 , Sampler263_g116867 , Coords263_g116867 , WorldPosition263_g116867 , WorldNormal263_g116867 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8689_g116779 = localSamplePlanar2D238_g116867;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8689_g116779 = localSamplePlanar3D246_g116867;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8689_g116779 = localSampleStochastic2D234_g116867;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8689_g116779 = localSampleStochastic3D263_g116867;
				#else
				float4 staticSwitch8689_g116779 = localSamplePlanar2D238_g116867;
				#endif
				half4 Layer439_g116795 = staticSwitch8689_g116779;
				float4 weightedBlendVar31_g116795 = Weights52_g116795;
				float4 weightedBlend31_g116795 = ( weightedBlendVar31_g116795.x*Layer133_g116795 + weightedBlendVar31_g116795.y*Layer237_g116795 + weightedBlendVar31_g116795.z*Layer338_g116795 + weightedBlendVar31_g116795.w*Layer439_g116795 );
				half4 Terrain_B_088684_g116779 = weightedBlend31_g116795;
				half4 Layer_0810_g116786 = Terrain_B_088684_g116779;
				half4 Weights52_g116802 = Terrain_Weights_127710_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116839) = _TerrainNormalTex9;
				SamplerState Sampler238_g116839 = SS29_g116886;
				float4 temp_output_37_0_g116839 = Input_Terrain_Coords_098833_g116779;
				half4 Coords238_g116839 = temp_output_37_0_g116839;
				float3 temp_output_279_0_g116839 = Input_Position9197_g116779;
				half3 WorldPosition238_g116839 = temp_output_279_0_g116839;
				half4 localSamplePlanar2D238_g116839 = SamplePlanar2D( Texture238_g116839 , Sampler238_g116839 , Coords238_g116839 , WorldPosition238_g116839 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116839) = _TerrainNormalTex9;
				SamplerState Sampler246_g116839 = SS29_g116886;
				half4 Coords246_g116839 = temp_output_37_0_g116839;
				half3 WorldPosition246_g116839 = temp_output_279_0_g116839;
				float3 temp_output_280_0_g116839 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116839 = temp_output_280_0_g116839;
				half4 localSamplePlanar3D246_g116839 = SamplePlanar3D( Texture246_g116839 , Sampler246_g116839 , Coords246_g116839 , WorldPosition246_g116839 , WorldNormal246_g116839 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116839) = _TerrainNormalTex9;
				SamplerState Sampler234_g116839 = SS29_g116886;
				float4 Coords234_g116839 = temp_output_37_0_g116839;
				float3 WorldPosition234_g116839 = temp_output_279_0_g116839;
				float4 localSampleStochastic2D234_g116839 = SampleStochastic2D( Texture234_g116839 , Sampler234_g116839 , Coords234_g116839 , WorldPosition234_g116839 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116839) = _TerrainNormalTex9;
				SamplerState Sampler263_g116839 = SS29_g116886;
				half4 Coords263_g116839 = temp_output_37_0_g116839;
				half3 WorldPosition263_g116839 = temp_output_279_0_g116839;
				half3 WorldNormal263_g116839 = temp_output_280_0_g116839;
				half4 localSampleStochastic3D263_g116839 = SampleStochastic3D( Texture263_g116839 , Sampler263_g116839 , Coords263_g116839 , WorldPosition263_g116839 , WorldNormal263_g116839 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8849_g116779 = localSamplePlanar2D238_g116839;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8849_g116779 = localSamplePlanar3D246_g116839;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8849_g116779 = localSampleStochastic2D234_g116839;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8849_g116779 = localSampleStochastic3D263_g116839;
				#else
				float4 staticSwitch8849_g116779 = localSamplePlanar2D238_g116839;
				#endif
				half4 Layer133_g116802 = staticSwitch8849_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116844) = _TerrainNormalTex10;
				SamplerState Sampler238_g116844 = SS29_g116886;
				float4 temp_output_37_0_g116844 = Input_Terrain_Coords_108834_g116779;
				half4 Coords238_g116844 = temp_output_37_0_g116844;
				float3 temp_output_279_0_g116844 = Input_Position9197_g116779;
				half3 WorldPosition238_g116844 = temp_output_279_0_g116844;
				half4 localSamplePlanar2D238_g116844 = SamplePlanar2D( Texture238_g116844 , Sampler238_g116844 , Coords238_g116844 , WorldPosition238_g116844 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116844) = _TerrainNormalTex10;
				SamplerState Sampler246_g116844 = SS29_g116886;
				half4 Coords246_g116844 = temp_output_37_0_g116844;
				half3 WorldPosition246_g116844 = temp_output_279_0_g116844;
				float3 temp_output_280_0_g116844 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116844 = temp_output_280_0_g116844;
				half4 localSamplePlanar3D246_g116844 = SamplePlanar3D( Texture246_g116844 , Sampler246_g116844 , Coords246_g116844 , WorldPosition246_g116844 , WorldNormal246_g116844 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116844) = _TerrainNormalTex10;
				SamplerState Sampler234_g116844 = SS29_g116886;
				float4 Coords234_g116844 = temp_output_37_0_g116844;
				float3 WorldPosition234_g116844 = temp_output_279_0_g116844;
				float4 localSampleStochastic2D234_g116844 = SampleStochastic2D( Texture234_g116844 , Sampler234_g116844 , Coords234_g116844 , WorldPosition234_g116844 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116844) = _TerrainNormalTex10;
				SamplerState Sampler263_g116844 = SS29_g116886;
				half4 Coords263_g116844 = temp_output_37_0_g116844;
				half3 WorldPosition263_g116844 = temp_output_279_0_g116844;
				half3 WorldNormal263_g116844 = temp_output_280_0_g116844;
				half4 localSampleStochastic3D263_g116844 = SampleStochastic3D( Texture263_g116844 , Sampler263_g116844 , Coords263_g116844 , WorldPosition263_g116844 , WorldNormal263_g116844 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8876_g116779 = localSamplePlanar2D238_g116844;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8876_g116779 = localSamplePlanar3D246_g116844;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8876_g116779 = localSampleStochastic2D234_g116844;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8876_g116779 = localSampleStochastic3D263_g116844;
				#else
				float4 staticSwitch8876_g116779 = localSamplePlanar2D238_g116844;
				#endif
				half4 Layer237_g116802 = staticSwitch8876_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116845) = _TerrainNormalTex11;
				SamplerState Sampler238_g116845 = SS29_g116886;
				float4 temp_output_37_0_g116845 = Input_Terrain_Coords_118835_g116779;
				half4 Coords238_g116845 = temp_output_37_0_g116845;
				float3 temp_output_279_0_g116845 = Input_Position9197_g116779;
				half3 WorldPosition238_g116845 = temp_output_279_0_g116845;
				half4 localSamplePlanar2D238_g116845 = SamplePlanar2D( Texture238_g116845 , Sampler238_g116845 , Coords238_g116845 , WorldPosition238_g116845 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116845) = _TerrainNormalTex11;
				SamplerState Sampler246_g116845 = SS29_g116886;
				half4 Coords246_g116845 = temp_output_37_0_g116845;
				half3 WorldPosition246_g116845 = temp_output_279_0_g116845;
				float3 temp_output_280_0_g116845 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116845 = temp_output_280_0_g116845;
				half4 localSamplePlanar3D246_g116845 = SamplePlanar3D( Texture246_g116845 , Sampler246_g116845 , Coords246_g116845 , WorldPosition246_g116845 , WorldNormal246_g116845 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116845) = _TerrainNormalTex11;
				SamplerState Sampler234_g116845 = SS29_g116886;
				float4 Coords234_g116845 = temp_output_37_0_g116845;
				float3 WorldPosition234_g116845 = temp_output_279_0_g116845;
				float4 localSampleStochastic2D234_g116845 = SampleStochastic2D( Texture234_g116845 , Sampler234_g116845 , Coords234_g116845 , WorldPosition234_g116845 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116845) = _TerrainNormalTex11;
				SamplerState Sampler263_g116845 = SS29_g116886;
				half4 Coords263_g116845 = temp_output_37_0_g116845;
				half3 WorldPosition263_g116845 = temp_output_279_0_g116845;
				half3 WorldNormal263_g116845 = temp_output_280_0_g116845;
				half4 localSampleStochastic3D263_g116845 = SampleStochastic3D( Texture263_g116845 , Sampler263_g116845 , Coords263_g116845 , WorldPosition263_g116845 , WorldNormal263_g116845 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8850_g116779 = localSamplePlanar2D238_g116845;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8850_g116779 = localSamplePlanar3D246_g116845;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8850_g116779 = localSampleStochastic2D234_g116845;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8850_g116779 = localSampleStochastic3D263_g116845;
				#else
				float4 staticSwitch8850_g116779 = localSamplePlanar2D238_g116845;
				#endif
				half4 Layer338_g116802 = staticSwitch8850_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116846) = _TerrainNormalTex12;
				SamplerState Sampler238_g116846 = SS29_g116886;
				float4 temp_output_37_0_g116846 = Input_Terrain_Coords_128836_g116779;
				half4 Coords238_g116846 = temp_output_37_0_g116846;
				float3 temp_output_279_0_g116846 = Input_Position9197_g116779;
				half3 WorldPosition238_g116846 = temp_output_279_0_g116846;
				half4 localSamplePlanar2D238_g116846 = SamplePlanar2D( Texture238_g116846 , Sampler238_g116846 , Coords238_g116846 , WorldPosition238_g116846 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116846) = _TerrainNormalTex12;
				SamplerState Sampler246_g116846 = SS29_g116886;
				half4 Coords246_g116846 = temp_output_37_0_g116846;
				half3 WorldPosition246_g116846 = temp_output_279_0_g116846;
				float3 temp_output_280_0_g116846 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116846 = temp_output_280_0_g116846;
				half4 localSamplePlanar3D246_g116846 = SamplePlanar3D( Texture246_g116846 , Sampler246_g116846 , Coords246_g116846 , WorldPosition246_g116846 , WorldNormal246_g116846 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116846) = _TerrainNormalTex12;
				SamplerState Sampler234_g116846 = SS29_g116886;
				float4 Coords234_g116846 = temp_output_37_0_g116846;
				float3 WorldPosition234_g116846 = temp_output_279_0_g116846;
				float4 localSampleStochastic2D234_g116846 = SampleStochastic2D( Texture234_g116846 , Sampler234_g116846 , Coords234_g116846 , WorldPosition234_g116846 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116846) = _TerrainNormalTex12;
				SamplerState Sampler263_g116846 = SS29_g116886;
				half4 Coords263_g116846 = temp_output_37_0_g116846;
				half3 WorldPosition263_g116846 = temp_output_279_0_g116846;
				half3 WorldNormal263_g116846 = temp_output_280_0_g116846;
				half4 localSampleStochastic3D263_g116846 = SampleStochastic3D( Texture263_g116846 , Sampler263_g116846 , Coords263_g116846 , WorldPosition263_g116846 , WorldNormal263_g116846 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8877_g116779 = localSamplePlanar2D238_g116846;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8877_g116779 = localSamplePlanar3D246_g116846;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8877_g116779 = localSampleStochastic2D234_g116846;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8877_g116779 = localSampleStochastic3D263_g116846;
				#else
				float4 staticSwitch8877_g116779 = localSamplePlanar2D238_g116846;
				#endif
				half4 Layer439_g116802 = staticSwitch8877_g116779;
				float4 weightedBlendVar31_g116802 = Weights52_g116802;
				float4 weightedBlend31_g116802 = ( weightedBlendVar31_g116802.x*Layer133_g116802 + weightedBlendVar31_g116802.y*Layer237_g116802 + weightedBlendVar31_g116802.z*Layer338_g116802 + weightedBlendVar31_g116802.w*Layer439_g116802 );
				half4 Terrain_B_128865_g116779 = weightedBlend31_g116802;
				half4 Layer_1243_g116786 = Terrain_B_128865_g116779;
				half4 Weights52_g116809 = Terrain_Weights_167709_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116849) = _TerrainNormalTex13;
				SamplerState Sampler238_g116849 = SS29_g116886;
				float4 temp_output_37_0_g116849 = Input_Terrain_Coords_138960_g116779;
				half4 Coords238_g116849 = temp_output_37_0_g116849;
				float3 temp_output_279_0_g116849 = Input_Position9197_g116779;
				half3 WorldPosition238_g116849 = temp_output_279_0_g116849;
				half4 localSamplePlanar2D238_g116849 = SamplePlanar2D( Texture238_g116849 , Sampler238_g116849 , Coords238_g116849 , WorldPosition238_g116849 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116849) = _TerrainNormalTex13;
				SamplerState Sampler246_g116849 = SS29_g116886;
				half4 Coords246_g116849 = temp_output_37_0_g116849;
				half3 WorldPosition246_g116849 = temp_output_279_0_g116849;
				float3 temp_output_280_0_g116849 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116849 = temp_output_280_0_g116849;
				half4 localSamplePlanar3D246_g116849 = SamplePlanar3D( Texture246_g116849 , Sampler246_g116849 , Coords246_g116849 , WorldPosition246_g116849 , WorldNormal246_g116849 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116849) = _TerrainNormalTex13;
				SamplerState Sampler234_g116849 = SS29_g116886;
				float4 Coords234_g116849 = temp_output_37_0_g116849;
				float3 WorldPosition234_g116849 = temp_output_279_0_g116849;
				float4 localSampleStochastic2D234_g116849 = SampleStochastic2D( Texture234_g116849 , Sampler234_g116849 , Coords234_g116849 , WorldPosition234_g116849 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116849) = _TerrainNormalTex13;
				SamplerState Sampler263_g116849 = SS29_g116886;
				half4 Coords263_g116849 = temp_output_37_0_g116849;
				half3 WorldPosition263_g116849 = temp_output_279_0_g116849;
				half3 WorldNormal263_g116849 = temp_output_280_0_g116849;
				half4 localSampleStochastic3D263_g116849 = SampleStochastic3D( Texture263_g116849 , Sampler263_g116849 , Coords263_g116849 , WorldPosition263_g116849 , WorldNormal263_g116849 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8991_g116779 = localSamplePlanar2D238_g116849;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8991_g116779 = localSamplePlanar3D246_g116849;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8991_g116779 = localSampleStochastic2D234_g116849;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8991_g116779 = localSampleStochastic3D263_g116849;
				#else
				float4 staticSwitch8991_g116779 = localSamplePlanar2D238_g116849;
				#endif
				half4 Layer133_g116809 = staticSwitch8991_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116856) = _TerrainNormalTex14;
				SamplerState Sampler238_g116856 = SS29_g116886;
				float4 temp_output_37_0_g116856 = Input_Terrain_Coords_148961_g116779;
				half4 Coords238_g116856 = temp_output_37_0_g116856;
				float3 temp_output_279_0_g116856 = Input_Position9197_g116779;
				half3 WorldPosition238_g116856 = temp_output_279_0_g116856;
				half4 localSamplePlanar2D238_g116856 = SamplePlanar2D( Texture238_g116856 , Sampler238_g116856 , Coords238_g116856 , WorldPosition238_g116856 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116856) = _TerrainNormalTex14;
				SamplerState Sampler246_g116856 = SS29_g116886;
				half4 Coords246_g116856 = temp_output_37_0_g116856;
				half3 WorldPosition246_g116856 = temp_output_279_0_g116856;
				float3 temp_output_280_0_g116856 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116856 = temp_output_280_0_g116856;
				half4 localSamplePlanar3D246_g116856 = SamplePlanar3D( Texture246_g116856 , Sampler246_g116856 , Coords246_g116856 , WorldPosition246_g116856 , WorldNormal246_g116856 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116856) = _TerrainNormalTex14;
				SamplerState Sampler234_g116856 = SS29_g116886;
				float4 Coords234_g116856 = temp_output_37_0_g116856;
				float3 WorldPosition234_g116856 = temp_output_279_0_g116856;
				float4 localSampleStochastic2D234_g116856 = SampleStochastic2D( Texture234_g116856 , Sampler234_g116856 , Coords234_g116856 , WorldPosition234_g116856 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116856) = _TerrainNormalTex14;
				SamplerState Sampler263_g116856 = SS29_g116886;
				half4 Coords263_g116856 = temp_output_37_0_g116856;
				half3 WorldPosition263_g116856 = temp_output_279_0_g116856;
				half3 WorldNormal263_g116856 = temp_output_280_0_g116856;
				half4 localSampleStochastic3D263_g116856 = SampleStochastic3D( Texture263_g116856 , Sampler263_g116856 , Coords263_g116856 , WorldPosition263_g116856 , WorldNormal263_g116856 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8990_g116779 = localSamplePlanar2D238_g116856;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8990_g116779 = localSamplePlanar3D246_g116856;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8990_g116779 = localSampleStochastic2D234_g116856;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8990_g116779 = localSampleStochastic3D263_g116856;
				#else
				float4 staticSwitch8990_g116779 = localSamplePlanar2D238_g116856;
				#endif
				half4 Layer237_g116809 = staticSwitch8990_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116857) = _TerrainNormalTex15;
				SamplerState Sampler238_g116857 = SS29_g116886;
				float4 temp_output_37_0_g116857 = Input_Terrain_Coords_158962_g116779;
				half4 Coords238_g116857 = temp_output_37_0_g116857;
				float3 temp_output_279_0_g116857 = Input_Position9197_g116779;
				half3 WorldPosition238_g116857 = temp_output_279_0_g116857;
				half4 localSamplePlanar2D238_g116857 = SamplePlanar2D( Texture238_g116857 , Sampler238_g116857 , Coords238_g116857 , WorldPosition238_g116857 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116857) = _TerrainNormalTex15;
				SamplerState Sampler246_g116857 = SS29_g116886;
				half4 Coords246_g116857 = temp_output_37_0_g116857;
				half3 WorldPosition246_g116857 = temp_output_279_0_g116857;
				float3 temp_output_280_0_g116857 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116857 = temp_output_280_0_g116857;
				half4 localSamplePlanar3D246_g116857 = SamplePlanar3D( Texture246_g116857 , Sampler246_g116857 , Coords246_g116857 , WorldPosition246_g116857 , WorldNormal246_g116857 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116857) = _TerrainNormalTex15;
				SamplerState Sampler234_g116857 = SS29_g116886;
				float4 Coords234_g116857 = temp_output_37_0_g116857;
				float3 WorldPosition234_g116857 = temp_output_279_0_g116857;
				float4 localSampleStochastic2D234_g116857 = SampleStochastic2D( Texture234_g116857 , Sampler234_g116857 , Coords234_g116857 , WorldPosition234_g116857 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116857) = _TerrainNormalTex15;
				SamplerState Sampler263_g116857 = SS29_g116886;
				half4 Coords263_g116857 = temp_output_37_0_g116857;
				half3 WorldPosition263_g116857 = temp_output_279_0_g116857;
				half3 WorldNormal263_g116857 = temp_output_280_0_g116857;
				half4 localSampleStochastic3D263_g116857 = SampleStochastic3D( Texture263_g116857 , Sampler263_g116857 , Coords263_g116857 , WorldPosition263_g116857 , WorldNormal263_g116857 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8989_g116779 = localSamplePlanar2D238_g116857;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8989_g116779 = localSamplePlanar3D246_g116857;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8989_g116779 = localSampleStochastic2D234_g116857;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8989_g116779 = localSampleStochastic3D263_g116857;
				#else
				float4 staticSwitch8989_g116779 = localSamplePlanar2D238_g116857;
				#endif
				half4 Layer338_g116809 = staticSwitch8989_g116779;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116858) = _TerrainNormalTex16;
				SamplerState Sampler238_g116858 = SS29_g116886;
				float4 temp_output_37_0_g116858 = Input_Terrain_Coords_168959_g116779;
				half4 Coords238_g116858 = temp_output_37_0_g116858;
				float3 temp_output_279_0_g116858 = Input_Position9197_g116779;
				half3 WorldPosition238_g116858 = temp_output_279_0_g116858;
				half4 localSamplePlanar2D238_g116858 = SamplePlanar2D( Texture238_g116858 , Sampler238_g116858 , Coords238_g116858 , WorldPosition238_g116858 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116858) = _TerrainNormalTex16;
				SamplerState Sampler246_g116858 = SS29_g116886;
				half4 Coords246_g116858 = temp_output_37_0_g116858;
				half3 WorldPosition246_g116858 = temp_output_279_0_g116858;
				float3 temp_output_280_0_g116858 = Input_Normal9199_g116779;
				half3 WorldNormal246_g116858 = temp_output_280_0_g116858;
				half4 localSamplePlanar3D246_g116858 = SamplePlanar3D( Texture246_g116858 , Sampler246_g116858 , Coords246_g116858 , WorldPosition246_g116858 , WorldNormal246_g116858 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116858) = _TerrainNormalTex16;
				SamplerState Sampler234_g116858 = SS29_g116886;
				float4 Coords234_g116858 = temp_output_37_0_g116858;
				float3 WorldPosition234_g116858 = temp_output_279_0_g116858;
				float4 localSampleStochastic2D234_g116858 = SampleStochastic2D( Texture234_g116858 , Sampler234_g116858 , Coords234_g116858 , WorldPosition234_g116858 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116858) = _TerrainNormalTex16;
				SamplerState Sampler263_g116858 = SS29_g116886;
				half4 Coords263_g116858 = temp_output_37_0_g116858;
				half3 WorldPosition263_g116858 = temp_output_279_0_g116858;
				half3 WorldNormal263_g116858 = temp_output_280_0_g116858;
				half4 localSampleStochastic3D263_g116858 = SampleStochastic3D( Texture263_g116858 , Sampler263_g116858 , Coords263_g116858 , WorldPosition263_g116858 , WorldNormal263_g116858 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8988_g116779 = localSamplePlanar2D238_g116858;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8988_g116779 = localSamplePlanar3D246_g116858;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8988_g116779 = localSampleStochastic2D234_g116858;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8988_g116779 = localSampleStochastic3D263_g116858;
				#else
				float4 staticSwitch8988_g116779 = localSamplePlanar2D238_g116858;
				#endif
				half4 Layer439_g116809 = staticSwitch8988_g116779;
				float4 weightedBlendVar31_g116809 = Weights52_g116809;
				float4 weightedBlend31_g116809 = ( weightedBlendVar31_g116809.x*Layer133_g116809 + weightedBlendVar31_g116809.y*Layer237_g116809 + weightedBlendVar31_g116809.z*Layer338_g116809 + weightedBlendVar31_g116809.w*Layer439_g116809 );
				half4 Terrain_B_168987_g116779 = weightedBlend31_g116809;
				half4 Layer_1644_g116786 = Terrain_B_168987_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116786 = Layer_045_g116786;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116786 = ( Layer_045_g116786 + Layer_0810_g116786 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116786 = ( Layer_045_g116786 + Layer_0810_g116786 + Layer_1243_g116786 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116786 = ( Layer_045_g116786 + Layer_0810_g116786 + Layer_1243_g116786 + Layer_1644_g116786 );
				#else
				float4 staticSwitch40_g116786 = Layer_045_g116786;
				#endif
				half4 Blend_Normal7512_g116779 = staticSwitch40_g116786;
				half4 Normal_Packed45_g116880 = Blend_Normal7512_g116779;
				float2 appendResult58_g116880 = (float2(( (Normal_Packed45_g116880).x * (Normal_Packed45_g116880).w ) , (Normal_Packed45_g116880).y));
				half2 Normal_Default50_g116880 = appendResult58_g116880;
				half2 Normal_ASTC41_g116880 = (Normal_Packed45_g116880).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g116880 = Normal_ASTC41_g116880;
				#else
				float2 staticSwitch38_g116880 = Normal_Default50_g116880;
				#endif
				half2 Normal_NO_DTX544_g116880 = (Normal_Packed45_g116880).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g116880 = Normal_NO_DTX544_g116880;
				#else
				float2 staticSwitch37_g116880 = staticSwitch38_g116880;
				#endif
				half4 Weights52_g116782 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116782 = temp_output_6970_0_g116779;
				half4 Layer237_g116782 = temp_output_6977_0_g116779;
				half4 Layer338_g116782 = temp_output_6978_0_g116779;
				half4 Layer439_g116782 = temp_output_6983_0_g116779;
				float4 weightedBlendVar31_g116782 = Weights52_g116782;
				float4 weightedBlend31_g116782 = ( weightedBlendVar31_g116782.x*Layer133_g116782 + weightedBlendVar31_g116782.y*Layer237_g116782 + weightedBlendVar31_g116782.z*Layer338_g116782 + weightedBlendVar31_g116782.w*Layer439_g116782 );
				half4 Terrain_Shaders_047203_g116779 = weightedBlend31_g116782;
				half4 Layer_045_g116788 = Terrain_Shaders_047203_g116779;
				half4 Weights52_g116798 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116798 = temp_output_8714_0_g116779;
				half4 Layer237_g116798 = temp_output_8721_0_g116779;
				half4 Layer338_g116798 = temp_output_8724_0_g116779;
				half4 Layer439_g116798 = temp_output_8727_0_g116779;
				float4 weightedBlendVar31_g116798 = Weights52_g116798;
				float4 weightedBlend31_g116798 = ( weightedBlendVar31_g116798.x*Layer133_g116798 + weightedBlendVar31_g116798.y*Layer237_g116798 + weightedBlendVar31_g116798.z*Layer338_g116798 + weightedBlendVar31_g116798.w*Layer439_g116798 );
				half4 Terrain_Shaders_088730_g116779 = weightedBlend31_g116798;
				half4 Layer_0810_g116788 = Terrain_Shaders_088730_g116779;
				half4 Weights52_g116805 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116805 = temp_output_8815_0_g116779;
				half4 Layer237_g116805 = temp_output_8818_0_g116779;
				half4 Layer338_g116805 = temp_output_8819_0_g116779;
				half4 Layer439_g116805 = temp_output_8820_0_g116779;
				float4 weightedBlendVar31_g116805 = Weights52_g116805;
				float4 weightedBlend31_g116805 = ( weightedBlendVar31_g116805.x*Layer133_g116805 + weightedBlendVar31_g116805.y*Layer237_g116805 + weightedBlendVar31_g116805.z*Layer338_g116805 + weightedBlendVar31_g116805.w*Layer439_g116805 );
				half4 Terrain_Shaders_128871_g116779 = weightedBlend31_g116805;
				half4 Layer_1243_g116788 = Terrain_Shaders_128871_g116779;
				half4 Weights52_g116812 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116812 = temp_output_8931_0_g116779;
				half4 Layer237_g116812 = temp_output_8934_0_g116779;
				half4 Layer338_g116812 = temp_output_8935_0_g116779;
				half4 Layer439_g116812 = temp_output_8936_0_g116779;
				float4 weightedBlendVar31_g116812 = Weights52_g116812;
				float4 weightedBlend31_g116812 = ( weightedBlendVar31_g116812.x*Layer133_g116812 + weightedBlendVar31_g116812.y*Layer237_g116812 + weightedBlendVar31_g116812.z*Layer338_g116812 + weightedBlendVar31_g116812.w*Layer439_g116812 );
				half4 Terrain_Shaders_169014_g116779 = weightedBlend31_g116812;
				half4 Layer_1644_g116788 = Terrain_Shaders_169014_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116788 = Layer_045_g116788;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116788 = ( Layer_045_g116788 + Layer_0810_g116788 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116788 = ( Layer_045_g116788 + Layer_0810_g116788 + Layer_1243_g116788 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116788 = ( Layer_045_g116788 + Layer_0810_g116788 + Layer_1243_g116788 + Layer_1644_g116788 );
				#else
				float4 staticSwitch40_g116788 = Layer_045_g116788;
				#endif
				half4 Blend_Shaders7420_g116779 = staticSwitch40_g116788;
				half4 Normal_Packed45_g116879 = Blend_Shaders7420_g116779;
				half2 Normal_NO_DTX544_g116879 = (Normal_Packed45_g116879).wy;
				#ifdef TVE_TERRAIN_PACKED
				float2 staticSwitch9080_g116779 = (Normal_NO_DTX544_g116879*2.0 + -1.0);
				#else
				float2 staticSwitch9080_g116779 = (staticSwitch37_g116880*2.0 + -1.0);
				#endif
				half4 Weights52_g116783 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116783 = _TerrainParams1;
				half4 Layer237_g116783 = _TerrainParams2;
				half4 Layer338_g116783 = _TerrainParams3;
				half4 Layer439_g116783 = _TerrainParams4;
				float4 weightedBlendVar31_g116783 = Weights52_g116783;
				float4 weightedBlend31_g116783 = ( weightedBlendVar31_g116783.x*Layer133_g116783 + weightedBlendVar31_g116783.y*Layer237_g116783 + weightedBlendVar31_g116783.z*Layer338_g116783 + weightedBlendVar31_g116783.w*Layer439_g116783 );
				half4 Terrain_Params_047533_g116779 = weightedBlend31_g116783;
				half4 Layer_045_g116789 = Terrain_Params_047533_g116779;
				half4 Weights52_g116799 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116799 = _TerrainParams5;
				half4 Layer237_g116799 = _TerrainParams6;
				half4 Layer338_g116799 = _TerrainParams7;
				half4 Layer439_g116799 = _TerrainParams8;
				float4 weightedBlendVar31_g116799 = Weights52_g116799;
				float4 weightedBlend31_g116799 = ( weightedBlendVar31_g116799.x*Layer133_g116799 + weightedBlendVar31_g116799.y*Layer237_g116799 + weightedBlendVar31_g116799.z*Layer338_g116799 + weightedBlendVar31_g116799.w*Layer439_g116799 );
				half4 Terrain_Params_088739_g116779 = weightedBlend31_g116799;
				half4 Layer_0810_g116789 = Terrain_Params_088739_g116779;
				half4 Weights52_g116806 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116806 = _TerrainParams9;
				half4 Layer237_g116806 = _TerrainParams10;
				half4 Layer338_g116806 = _TerrainParams11;
				half4 Layer439_g116806 = _TerrainParams12;
				float4 weightedBlendVar31_g116806 = Weights52_g116806;
				float4 weightedBlend31_g116806 = ( weightedBlendVar31_g116806.x*Layer133_g116806 + weightedBlendVar31_g116806.y*Layer237_g116806 + weightedBlendVar31_g116806.z*Layer338_g116806 + weightedBlendVar31_g116806.w*Layer439_g116806 );
				half4 Terrain_Params_128867_g116779 = weightedBlend31_g116806;
				half4 Layer_1243_g116789 = Terrain_Params_128867_g116779;
				half4 Weights52_g116813 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116813 = _TerrainParams13;
				half4 Layer237_g116813 = _TerrainParams14;
				half4 Layer338_g116813 = _TerrainParams15;
				half4 Layer439_g116813 = _TerrainParams16;
				float4 weightedBlendVar31_g116813 = Weights52_g116813;
				float4 weightedBlend31_g116813 = ( weightedBlendVar31_g116813.x*Layer133_g116813 + weightedBlendVar31_g116813.y*Layer237_g116813 + weightedBlendVar31_g116813.z*Layer338_g116813 + weightedBlendVar31_g116813.w*Layer439_g116813 );
				half4 Terrain_Params_169017_g116779 = weightedBlend31_g116813;
				half4 Layer_1644_g116789 = Terrain_Params_169017_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116789 = Layer_045_g116789;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116789 = ( Layer_045_g116789 + Layer_0810_g116789 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116789 = ( Layer_045_g116789 + Layer_0810_g116789 + Layer_1243_g116789 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116789 = ( Layer_045_g116789 + Layer_0810_g116789 + Layer_1243_g116789 + Layer_1644_g116789 );
				#else
				float4 staticSwitch40_g116789 = Layer_045_g116789;
				#endif
				half4 Blend_Params7547_g116779 = staticSwitch40_g116789;
				half2 Normal_Planar45_g116881 = ( ( staticSwitch9080_g116779 * (Blend_Params7547_g116779).z ) * _TerrainNormalValue );
				float2 break71_g116881 = Normal_Planar45_g116881;
				float3 appendResult72_g116881 = (float3(break71_g116881.x , 0.0 , break71_g116881.y));
				half2 Final_NormalTS9145_g116779 = (mul( ase_worldToTangent, appendResult72_g116881 )).xy;
				half2 Local_Normal9200_g116777 = Final_NormalTS9145_g116779;
				float2 In_NormalTS3_g116778 = Local_Normal9200_g116777;
				float3 appendResult68_g116889 = (float3(Local_Normal9200_g116777 , 1.0));
				float3 tanToWorld0 = float3( ase_worldTangent.x, ase_worldBitangent.x, ase_worldNormal.x );
				float3 tanToWorld1 = float3( ase_worldTangent.y, ase_worldBitangent.y, ase_worldNormal.y );
				float3 tanToWorld2 = float3( ase_worldTangent.z, ase_worldBitangent.z, ase_worldNormal.z );
				float3 tanNormal74_g116889 = appendResult68_g116889;
				float3 worldNormal74_g116889 = normalize( float3(dot(tanToWorld0,tanNormal74_g116889), dot(tanToWorld1,tanNormal74_g116889), dot(tanToWorld2,tanNormal74_g116889)) );
				float3 In_NormalWS3_g116778 = worldNormal74_g116889;
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9139_g116779 = 0.0;
				#else
				float staticSwitch9139_g116779 = ( (Blend_Shaders7420_g116779).x * (Blend_Params7547_g116779).x * _TerrainMetallicValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9097_g116779 = 1.0;
				#else
				float staticSwitch9097_g116779 = ( (Blend_Shaders7420_g116779).y * _TerrainOcclusionValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9105_g116779 = (Blend_Shaders7420_g116779).x;
				#else
				float staticSwitch9105_g116779 = (Blend_Shaders7420_g116779).w;
				#endif
				float4 appendResult9147_g116779 = (float4(staticSwitch9139_g116779 , staticSwitch9097_g116779 , (Blend_Shaders7420_g116779).z , ( staticSwitch9105_g116779 * (Blend_Params7547_g116779).w * _TerrainSmoothnessValue )));
				half4 Final_Shaders9146_g116779 = appendResult9147_g116779;
				half4 Local_Shader9201_g116777 = Final_Shaders9146_g116779;
				float4 In_Shader3_g116778 = Local_Shader9201_g116777;
				half4 Weights52_g116872 = Terrain_Weights_046781_g116779;
				half4 Layer133_g116872 = _TerrainSpecular1;
				half4 Layer237_g116872 = _TerrainSpecular2;
				half4 Layer338_g116872 = _TerrainSpecular3;
				half4 Layer439_g116872 = _TerrainSpecular4;
				float4 weightedBlendVar31_g116872 = Weights52_g116872;
				float4 weightedBlend31_g116872 = ( weightedBlendVar31_g116872.x*Layer133_g116872 + weightedBlendVar31_g116872.y*Layer237_g116872 + weightedBlendVar31_g116872.z*Layer338_g116872 + weightedBlendVar31_g116872.w*Layer439_g116872 );
				half4 Terrain_Specular_047390_g116779 = weightedBlend31_g116872;
				half4 Layer_045_g116877 = Terrain_Specular_047390_g116779;
				half4 Weights52_g116800 = Terrain_Weights_087340_g116779;
				half4 Layer133_g116800 = _TerrainSpecular5;
				half4 Layer237_g116800 = _TerrainSpecular6;
				half4 Layer338_g116800 = _TerrainSpecular7;
				half4 Layer439_g116800 = _TerrainSpecular8;
				float4 weightedBlendVar31_g116800 = Weights52_g116800;
				float4 weightedBlend31_g116800 = ( weightedBlendVar31_g116800.x*Layer133_g116800 + weightedBlendVar31_g116800.y*Layer237_g116800 + weightedBlendVar31_g116800.z*Layer338_g116800 + weightedBlendVar31_g116800.w*Layer439_g116800 );
				half4 Terrain_Specular_088745_g116779 = weightedBlend31_g116800;
				half4 Layer_0810_g116877 = Terrain_Specular_088745_g116779;
				half4 Weights52_g116807 = Terrain_Weights_127710_g116779;
				half4 Layer133_g116807 = _TerrainSpecular9;
				half4 Layer237_g116807 = _TerrainSpecular10;
				half4 Layer338_g116807 = _TerrainSpecular11;
				half4 Layer439_g116807 = _TerrainSpecular12;
				float4 weightedBlendVar31_g116807 = Weights52_g116807;
				float4 weightedBlend31_g116807 = ( weightedBlendVar31_g116807.x*Layer133_g116807 + weightedBlendVar31_g116807.y*Layer237_g116807 + weightedBlendVar31_g116807.z*Layer338_g116807 + weightedBlendVar31_g116807.w*Layer439_g116807 );
				half4 Terrain_Specular_128869_g116779 = weightedBlend31_g116807;
				half4 Layer_1243_g116877 = Terrain_Specular_128869_g116779;
				half4 Weights52_g116814 = Terrain_Weights_167709_g116779;
				half4 Layer133_g116814 = _TerrainSpecular13;
				half4 Layer237_g116814 = _TerrainSpecular14;
				half4 Layer338_g116814 = _TerrainSpecular15;
				half4 Layer439_g116814 = _TerrainSpecular16;
				float4 weightedBlendVar31_g116814 = Weights52_g116814;
				float4 weightedBlend31_g116814 = ( weightedBlendVar31_g116814.x*Layer133_g116814 + weightedBlendVar31_g116814.y*Layer237_g116814 + weightedBlendVar31_g116814.z*Layer338_g116814 + weightedBlendVar31_g116814.w*Layer439_g116814 );
				half4 Terrain_Specular_169019_g116779 = weightedBlend31_g116814;
				half4 Layer_1644_g116877 = Terrain_Specular_169019_g116779;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g116877 = Layer_045_g116877;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g116877 = ( Layer_045_g116877 + Layer_0810_g116877 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g116877 = ( Layer_045_g116877 + Layer_0810_g116877 + Layer_1243_g116877 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g116877 = ( Layer_045_g116877 + Layer_0810_g116877 + Layer_1243_g116877 + Layer_1644_g116877 );
				#else
				float4 staticSwitch40_g116877 = Layer_045_g116877;
				#endif
				half4 Blend_TerrainSpecular7446_g116779 = staticSwitch40_g116877;
				float3 temp_output_9088_0_g116779 = (Blend_TerrainSpecular7446_g116779).rgb;
				float4 appendResult9189_g116779 = (float4(temp_output_9088_0_g116779 , 1.0));
				half4 Final_Emissive9151_g116779 = appendResult9189_g116779;
				half4 Local_EmissiveLDR9202_g116777 = Final_Emissive9151_g116779;
				float4 In_Emissive3_g116778 = Local_EmissiveLDR9202_g116777;
				float3 temp_output_3_0_g116890 = Local_Albedo9199_g116777;
				float dotResult20_g116890 = dot( temp_output_3_0_g116890 , float3(0.2126,0.7152,0.0722) );
				float temp_output_9165_0_g116777 = dotResult20_g116890;
				float In_Grayscale3_g116778 = temp_output_9165_0_g116777;
				float clampResult9168_g116777 = clamp( saturate( ( temp_output_9165_0_g116777 * 5.0 ) ) , 0.2 , 1.0 );
				float In_Luminosity3_g116778 = clampResult9168_g116777;
				half Final_MultiShader9150_g116779 = ( (Blend_TerrainSpecular7446_g116779).a * (Blend_Albedo7468_g116779).w );
				half Local_MultiMask9203_g116777 = Final_MultiShader9150_g116779;
				float In_MultiMask3_g116778 = Local_MultiMask9203_g116777;
				float4 temp_output_35_0_g116888 = appendResult9125_g116779;
				float2 InputScale48_g116888 = (temp_output_35_0_g116888).zw;
				half2 FinalScale53_g116888 = ( 1.0 / InputScale48_g116888 );
				float2 InputPosition52_g116888 = (temp_output_35_0_g116888).xy;
				half2 FinalPosition58_g116888 = -( FinalScale53_g116888 * InputPosition52_g116888 );
				float2 temp_output_65_0_g116888 = ( ( (ase_worldPos).xz * FinalScale53_g116888 ) + FinalPosition58_g116888 );
				float2 Terrain_Holes_UV9406_g116779 = temp_output_65_0_g116888;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch9188_g116779 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9406_g116779 ).r;
				#else
				float staticSwitch9188_g116779 = 1.0;
				#endif
				half Terrain_Holes7437_g116779 = staticSwitch9188_g116779;
				half Local_HoleMask9204_g116777 = Terrain_Holes7437_g116779;
				float In_AlphaClip3_g116778 = Local_HoleMask9204_g116777;
				float In_AlphaFade3_g116778 = 1.0;
				float3 temp_cast_9 = (1.0).xxx;
				float3 In_Translucency3_g116778 = temp_cast_9;
				float In_Transmission3_g116778 = 1.0;
				float In_Thickness3_g116778 = 0.0;
				float In_Diffusion3_g116778 = 0.0;
				Data3_g116778.Dummy = In_Dummy3_g116778;
				Data3_g116778.Albedo = In_Albedo3_g116778;
				Data3_g116778.AlbedoRaw = In_AlbedoRaw3_g116778;
				Data3_g116778.NormalTS = In_NormalTS3_g116778;
				Data3_g116778.NormalWS = In_NormalWS3_g116778;
				Data3_g116778.Shader = In_Shader3_g116778;
				Data3_g116778.Emissive= In_Emissive3_g116778;
				Data3_g116778.MultiMask = In_MultiMask3_g116778;
				Data3_g116778.Grayscale = In_Grayscale3_g116778;
				Data3_g116778.Luminosity = In_Luminosity3_g116778;
				Data3_g116778.AlphaClip = In_AlphaClip3_g116778;
				Data3_g116778.AlphaFade = In_AlphaFade3_g116778;
				Data3_g116778.Translucency = In_Translucency3_g116778;
				Data3_g116778.Transmission = In_Transmission3_g116778;
				Data3_g116778.Thickness = In_Thickness3_g116778;
				Data3_g116778.Diffusion = In_Diffusion3_g116778;
				TVEVisualData Data4_g116913 = Data3_g116778;
				float Out_Dummy4_g116913 = 0;
				float3 Out_Albedo4_g116913 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116913 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116913 = float2( 0,0 );
				float3 Out_NormalWS4_g116913 = float3( 0,0,0 );
				float4 Out_Shader4_g116913 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116913 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116913 = 0;
				float Out_Grayscale4_g116913 = 0;
				float Out_Luminosity4_g116913 = 0;
				float Out_AlphaClip4_g116913 = 0;
				float Out_AlphaFade4_g116913 = 0;
				float3 Out_Translucency4_g116913 = float3( 0,0,0 );
				float Out_Transmission4_g116913 = 0;
				float Out_Thickness4_g116913 = 0;
				float Out_Diffusion4_g116913 = 0;
				Out_Dummy4_g116913 = Data4_g116913.Dummy;
				Out_Albedo4_g116913 = Data4_g116913.Albedo;
				Out_AlbedoRaw4_g116913 = Data4_g116913.AlbedoRaw;
				Out_NormalTS4_g116913 = Data4_g116913.NormalTS;
				Out_NormalWS4_g116913 = Data4_g116913.NormalWS;
				Out_Shader4_g116913 = Data4_g116913.Shader;
				Out_Emissive4_g116913= Data4_g116913.Emissive;
				Out_MultiMask4_g116913 = Data4_g116913.MultiMask;
				Out_Grayscale4_g116913 = Data4_g116913.Grayscale;
				Out_Luminosity4_g116913= Data4_g116913.Luminosity;
				Out_AlphaClip4_g116913 = Data4_g116913.AlphaClip;
				Out_AlphaFade4_g116913 = Data4_g116913.AlphaFade;
				Out_Translucency4_g116913 = Data4_g116913.Translucency;
				Out_Transmission4_g116913 = Data4_g116913.Transmission;
				Out_Thickness4_g116913 = Data4_g116913.Thickness;
				Out_Diffusion4_g116913 = Data4_g116913.Diffusion;
				half3 Visual_Albedo139_g116891 = Out_Albedo4_g116913;
				float temp_output_200_12_g116891 = Out_Grayscale4_g116913;
				half Visual_Grayscale150_g116891 = temp_output_200_12_g116891;
				float3 temp_cast_10 = (Visual_Grayscale150_g116891).xxx;
				float localBuildGlobalData204_g115912 = ( 0.0 );
				TVEGlobalData Data204_g115912 = (TVEGlobalData)0;
				half Dummy211_g115912 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g115912 = Dummy211_g115912;
				half4 Coat_Params302_g115912 = TVE_CoatParams;
				float4 In_CoatParams204_g115912 = Coat_Params302_g115912;
				float temp_output_82_0_g115913 = _GlobalPaintLayerValue;
				float temp_output_19_0_g115915 = TVE_PaintLayers[(int)temp_output_82_0_g115913];
				TVEModelData Data16_g114321 = (TVEModelData)0;
				float In_Dummy16_g114321 = 0.0;
				float3 vertexToFrag73_g114306 = IN.ase_texcoord6.xyz;
				half3 PositionWS122_g114306 = vertexToFrag73_g114306;
				float3 In_PositionWS16_g114321 = PositionWS122_g114306;
				float4x4 break19_g114308 = unity_ObjectToWorld;
				float3 appendResult20_g114308 = (float3(break19_g114308[ 0 ][ 3 ] , break19_g114308[ 1 ][ 3 ] , break19_g114308[ 2 ][ 3 ]));
				half3 ObjectData20_g114310 = appendResult20_g114308;
				half3 WorldData19_g114310 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g114310 = WorldData19_g114310;
				#else
				float3 staticSwitch14_g114310 = ObjectData20_g114310;
				#endif
				float3 temp_output_124_0_g114308 = staticSwitch14_g114310;
				float3 temp_output_239_7_g114306 = temp_output_124_0_g114308;
				half3 PivotWS121_g114306 = temp_output_239_7_g114306;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
				#else
				float3 staticSwitch204_g114306 = PositionWS122_g114306;
				#endif
				half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
				float3 In_PositionWO16_g114321 = PositionWO132_g114306;
				float3 In_PivotWS16_g114321 = PivotWS121_g114306;
				half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
				float3 In_PivotWO16_g114321 = PivotWO133_g114306;
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g114306 = normalizedWorldNormal;
				float3 In_NormalWS16_g114321 = Normal_WS95_g114306;
				float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
				half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
				float3 In_ViewDirWS16_g114321 = ViewDirWS169_g114306;
				half4 VertexMasks171_g114306 = IN.ase_color;
				float4 In_VertexData16_g114321 = VertexMasks171_g114306;
				float4 In_BoundsData16_g114321 = float4( 1,1,1,1 );
				Data16_g114321.Dummy = In_Dummy16_g114321;
				Data16_g114321.PositionWS = In_PositionWS16_g114321;
				Data16_g114321.PositionWO = In_PositionWO16_g114321;
				Data16_g114321.PivotWS = In_PivotWS16_g114321;
				Data16_g114321.PivotWO = In_PivotWO16_g114321;
				Data16_g114321.NormalWS = In_NormalWS16_g114321;
				Data16_g114321.ViewDirWS = In_ViewDirWS16_g114321;
				Data16_g114321.VertexData = In_VertexData16_g114321;
				Data16_g114321.BoundsData = In_BoundsData16_g114321;
				TVEModelData Data15_g115994 = Data16_g114321;
				float Out_Dummy15_g115994 = 0;
				float3 Out_PositionWS15_g115994 = float3( 0,0,0 );
				float3 Out_PositionWO15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWS15_g115994 = float3( 0,0,0 );
				float3 Out_PivotWO15_g115994 = float3( 0,0,0 );
				float3 Out_NormalWS15_g115994 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g115994 = float3( 0,0,0 );
				float4 Out_VertexData15_g115994 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g115994 = float4( 0,0,0,0 );
				Out_Dummy15_g115994 = Data15_g115994.Dummy;
				Out_PositionWS15_g115994 = Data15_g115994.PositionWS;
				Out_PositionWO15_g115994 = Data15_g115994.PositionWO;
				Out_PivotWS15_g115994 = Data15_g115994.PivotWS;
				Out_PivotWO15_g115994 = Data15_g115994.PivotWO;
				Out_NormalWS15_g115994 = Data15_g115994.NormalWS;
				Out_ViewDirWS15_g115994 = Data15_g115994.ViewDirWS;
				Out_VertexData15_g115994 = Data15_g115994.VertexData;
				Out_BoundsData15_g115994 = Data15_g115994.BoundsData;
				half3 Model_PositionWS143_g115912 = Out_PositionWS15_g115994;
				half3 Input_Position180_g115916 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115916 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_82_0_g115916 = temp_output_82_0_g115913;
				float2 temp_output_119_0_g115916 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115916).xz ) );
				float temp_output_7_0_g115921 = 1.0;
				float temp_output_10_0_g115921 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115921 );
				float4 lerpResult131_g115916 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115916,temp_output_82_0_g115916), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115916,temp_output_82_0_g115916), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115916 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115921 ) / temp_output_10_0_g115921 ) ));
				float4 temp_output_17_0_g115915 = lerpResult131_g115916;
				float4 temp_output_3_0_g115915 = TVE_PaintParams;
				float4 ifLocalVar18_g115915 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115915 >= 0.5 )
				ifLocalVar18_g115915 = temp_output_17_0_g115915;
				else
				ifLocalVar18_g115915 = temp_output_3_0_g115915;
				float4 lerpResult22_g115915 = lerp( temp_output_3_0_g115915 , temp_output_17_0_g115915 , temp_output_19_0_g115915);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115915 = lerpResult22_g115915;
				#else
				float4 staticSwitch24_g115915 = ifLocalVar18_g115915;
				#endif
				half4 Paint_Params71_g115912 = staticSwitch24_g115915;
				float4 In_PaintParams204_g115912 = Paint_Params71_g115912;
				float temp_output_82_0_g115931 = _GlobalGlowLayerValue;
				float temp_output_19_0_g115933 = TVE_GlowLayers[(int)temp_output_82_0_g115931];
				half3 Input_Position180_g115934 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115934 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_82_0_g115934 = temp_output_82_0_g115931;
				float2 temp_output_119_0_g115934 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115934).xz ) );
				float temp_output_7_0_g115939 = 1.0;
				float temp_output_10_0_g115939 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115939 );
				float4 lerpResult131_g115934 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115934,temp_output_82_0_g115934), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115934,temp_output_82_0_g115934), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115934 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115939 ) / temp_output_10_0_g115939 ) ));
				float4 temp_output_17_0_g115933 = lerpResult131_g115934;
				float4 temp_output_3_0_g115933 = TVE_GlowParams;
				float4 ifLocalVar18_g115933 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115933 >= 0.5 )
				ifLocalVar18_g115933 = temp_output_17_0_g115933;
				else
				ifLocalVar18_g115933 = temp_output_3_0_g115933;
				float4 lerpResult22_g115933 = lerp( temp_output_3_0_g115933 , temp_output_17_0_g115933 , temp_output_19_0_g115933);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115933 = lerpResult22_g115933;
				#else
				float4 staticSwitch24_g115933 = ifLocalVar18_g115933;
				#endif
				half4 Glow_Params248_g115912 = staticSwitch24_g115933;
				float4 In_GlowParams204_g115912 = Glow_Params248_g115912;
				float temp_output_132_0_g115976 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g115978 = TVE_AtmoLayers[(int)temp_output_132_0_g115976];
				half3 Input_Position180_g115979 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115979 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_82_0_g115979 = temp_output_132_0_g115976;
				float2 temp_output_119_0_g115979 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115979).xz ) );
				float temp_output_7_0_g115984 = 1.0;
				float temp_output_10_0_g115984 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115984 );
				float4 lerpResult131_g115979 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115979,temp_output_82_0_g115979), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115979,temp_output_82_0_g115979), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115979 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115984 ) / temp_output_10_0_g115984 ) ));
				float4 temp_output_17_0_g115978 = lerpResult131_g115979;
				float4 temp_output_3_0_g115978 = TVE_AtmoParams;
				float4 ifLocalVar18_g115978 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115978 >= 0.5 )
				ifLocalVar18_g115978 = temp_output_17_0_g115978;
				else
				ifLocalVar18_g115978 = temp_output_3_0_g115978;
				float4 lerpResult22_g115978 = lerp( temp_output_3_0_g115978 , temp_output_17_0_g115978 , temp_output_19_0_g115978);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115978 = lerpResult22_g115978;
				#else
				float4 staticSwitch24_g115978 = ifLocalVar18_g115978;
				#endif
				half4 Atmo_Params80_g115912 = staticSwitch24_g115978;
				float4 In_AtmoParams204_g115912 = Atmo_Params80_g115912;
				float temp_output_132_0_g115985 = _GlobalFadeLayerValue;
				float temp_output_19_0_g115987 = TVE_FadeLayers[(int)temp_output_132_0_g115985];
				half3 Input_Position180_g115988 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115988 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_82_0_g115988 = temp_output_132_0_g115985;
				float2 temp_output_119_0_g115988 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115988).xz ) );
				float temp_output_7_0_g115993 = 1.0;
				float temp_output_10_0_g115993 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115993 );
				float4 lerpResult131_g115988 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115988,temp_output_82_0_g115988), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115988,temp_output_82_0_g115988), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115988 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115993 ) / temp_output_10_0_g115993 ) ));
				float4 temp_output_17_0_g115987 = lerpResult131_g115988;
				float4 temp_output_3_0_g115987 = TVE_FadeParams;
				float4 ifLocalVar18_g115987 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115987 >= 0.5 )
				ifLocalVar18_g115987 = temp_output_17_0_g115987;
				else
				ifLocalVar18_g115987 = temp_output_3_0_g115987;
				float4 lerpResult22_g115987 = lerp( temp_output_3_0_g115987 , temp_output_17_0_g115987 , temp_output_19_0_g115987);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115987 = lerpResult22_g115987;
				#else
				float4 staticSwitch24_g115987 = ifLocalVar18_g115987;
				#endif
				half4 Fade_Params387_g115912 = staticSwitch24_g115987;
				float4 In_FadeParams204_g115912 = Fade_Params387_g115912;
				half4 Form_Params112_g115912 = TVE_FormParams;
				float4 In_FormParams204_g115912 = Form_Params112_g115912;
				float temp_output_130_0_g115949 = _GlobalLandLayerValue;
				float temp_output_19_0_g115951 = TVE_LandLayers[(int)temp_output_130_0_g115949];
				half3 Input_Position180_g115952 = Model_PositionWS143_g115912;
				float2 temp_output_75_0_g115952 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_82_0_g115952 = temp_output_130_0_g115949;
				float2 temp_output_119_0_g115952 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g115952).xz ) );
				float temp_output_7_0_g115957 = 1.0;
				float temp_output_10_0_g115957 = ( TVE_RenderNearFadeValue - temp_output_7_0_g115957 );
				float4 lerpResult131_g115952 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g115952,temp_output_82_0_g115952), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g115952,temp_output_82_0_g115952), 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g115952 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g115957 ) / temp_output_10_0_g115957 ) ));
				float4 temp_output_17_0_g115951 = lerpResult131_g115952;
				float4 temp_output_3_0_g115951 = TVE_LandParams;
				float4 ifLocalVar18_g115951 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g115951 >= 0.5 )
				ifLocalVar18_g115951 = temp_output_17_0_g115951;
				else
				ifLocalVar18_g115951 = temp_output_3_0_g115951;
				float4 lerpResult22_g115951 = lerp( temp_output_3_0_g115951 , temp_output_17_0_g115951 , temp_output_19_0_g115951);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g115951 = lerpResult22_g115951;
				#else
				float4 staticSwitch24_g115951 = ifLocalVar18_g115951;
				#endif
				half4 Land_Params375_g115912 = staticSwitch24_g115951;
				float4 In_LandParams204_g115912 = Land_Params375_g115912;
				half4 Wind_Params88_g115912 = TVE_WindParams;
				float4 In_WindParams204_g115912 = Wind_Params88_g115912;
				half4 Push_Params335_g115912 = TVE_PushParams;
				float4 In_PushParams204_g115912 = Push_Params335_g115912;
				Data204_g115912.Dummy = In_Dummy204_g115912;
				Data204_g115912.CoatParams = In_CoatParams204_g115912;
				Data204_g115912.PaintParams = In_PaintParams204_g115912;
				Data204_g115912.GlowParams = In_GlowParams204_g115912;
				Data204_g115912.AtmoParams = In_AtmoParams204_g115912;
				Data204_g115912.FadeParams = In_FadeParams204_g115912;
				Data204_g115912.FormParams= In_FormParams204_g115912;
				Data204_g115912.LandParams = In_LandParams204_g115912;
				Data204_g115912.WindParams = In_WindParams204_g115912;
				Data204_g115912.PushParams = In_PushParams204_g115912;
				TVEGlobalData Data15_g116892 = Data204_g115912;
				float Out_Dummy15_g116892 = 0;
				float4 Out_CoatParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116892 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116892 = float4( 0,0,0,0 );
				Out_Dummy15_g116892 = Data15_g116892.Dummy;
				Out_CoatParams15_g116892 = Data15_g116892.CoatParams;
				Out_PaintParams15_g116892 = Data15_g116892.PaintParams;
				Out_GlowParams15_g116892 = Data15_g116892.GlowParams;
				Out_AtmoParams15_g116892= Data15_g116892.AtmoParams;
				Out_FadeParams15_g116892= Data15_g116892.FadeParams;
				Out_FormParams15_g116892 = Data15_g116892.FormParams;
				Out_LandParams15_g116892 = Data15_g116892.LandParams;
				Out_WindParams15_g116892 = Data15_g116892.WindParams;
				Out_PushParams15_g116892 = Data15_g116892.PushParams;
				half4 Global_PaintParams209_g116891 = Out_PaintParams15_g116892;
				float temp_output_6_0_g116893 = ( saturate( (Global_PaintParams209_g116891).w ) * TVE_IsEnabled );
				#ifdef TVE_REGISTER
				float staticSwitch14_g116893 = ( temp_output_6_0_g116893 + ( _TintingElementMode * 0.0 ) );
				#else
				float staticSwitch14_g116893 = temp_output_6_0_g116893;
				#endif
				#ifdef TVE_TINTING_ELEMENT
				float staticSwitch283_g116891 = staticSwitch14_g116893;
				#else
				float staticSwitch283_g116891 = 1.0;
				#endif
				half Tinting_GlobalValue285_g116891 = staticSwitch283_g116891;
				float3 lerpResult368_g116891 = lerp( Visual_Albedo139_g116891 , temp_cast_10 , ( Tinting_GlobalValue285_g116891 * _TintingGrayValue ));
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g116911 = 2.0;
				#else
				float staticSwitch1_g116911 = 4.594794;
				#endif
				float3 temp_cast_32 = (1.0).xxx;
				#ifdef TVE_TINTING_ELEMENT
				float3 staticSwitch288_g116891 = (Global_PaintParams209_g116891).xyz;
				#else
				float3 staticSwitch288_g116891 = temp_cast_32;
				#endif
				half3 Tinting_ColorGlobal290_g116891 = staticSwitch288_g116891;
				float temp_output_200_11_g116891 = Out_MultiMask4_g116913;
				half Visual_MultiMask181_g116891 = temp_output_200_11_g116891;
				float lerpResult147_g116891 = lerp( 1.0 , Visual_MultiMask181_g116891 , _TintingMultiValue);
				half Tinting_MutiMask121_g116891 = lerpResult147_g116891;
				half Tinting_TexMask385_g116891 = 1.0;
				float temp_output_200_15_g116891 = Out_Luminosity4_g116913;
				half Visual_Luminosity257_g116891 = temp_output_200_15_g116891;
				float clampResult17_g116905 = clamp( Visual_Luminosity257_g116891 , 0.0001 , 0.9999 );
				float temp_output_7_0_g116904 = _TintingLumaRemap.x;
				float temp_output_10_0_g116904 = ( _TintingLumaRemap.y - temp_output_7_0_g116904 );
				float lerpResult228_g116891 = lerp( 1.0 , saturate( ( ( clampResult17_g116905 - temp_output_7_0_g116904 ) / ( temp_output_10_0_g116904 + 0.0001 ) ) ) , _TintingLumaValue);
				half Tinting_LumaMask153_g116891 = lerpResult228_g116891;
				half Tinting_VertMask309_g116891 = 1.0;
				half Tinting_NoiseMask213_g116891 = 1.0;
				half Custom_Mask345_g116891 = 1.0;
				float temp_output_7_0_g116900 = _TintingBlendRemap.x;
				float temp_output_10_0_g116900 = ( _TintingBlendRemap.y - temp_output_7_0_g116900 );
				half Tinting_Mask242_g116891 = ( saturate( ( ( ( _TintingIntensityValue * Tinting_MutiMask121_g116891 * Tinting_TexMask385_g116891 * Tinting_LumaMask153_g116891 * Tinting_VertMask309_g116891 * Tinting_NoiseMask213_g116891 * Tinting_GlobalValue285_g116891 * Custom_Mask345_g116891 ) - temp_output_7_0_g116900 ) / ( temp_output_10_0_g116900 + 0.0001 ) ) ) * TVE_IsEnabled );
				float3 lerpResult90_g116891 = lerp( Visual_Albedo139_g116891 , ( lerpResult368_g116891 * staticSwitch1_g116911 * Tinting_ColorGlobal290_g116891 * (_TintingColor).rgb ) , Tinting_Mask242_g116891);
				#ifdef TVE_TINTING
				float3 staticSwitch286_g116891 = lerpResult90_g116891;
				#else
				float3 staticSwitch286_g116891 = Visual_Albedo139_g116891;
				#endif
				half3 Final_Albedo97_g116891 = staticSwitch286_g116891;
				float3 In_Albedo3_g116912 = Final_Albedo97_g116891;
				float3 In_AlbedoRaw3_g116912 = Out_AlbedoRaw4_g116913;
				float2 In_NormalTS3_g116912 = Out_NormalTS4_g116913;
				float3 In_NormalWS3_g116912 = Out_NormalWS4_g116913;
				float4 In_Shader3_g116912 = Out_Shader4_g116913;
				float4 In_Emissive3_g116912 = Out_Emissive4_g116913;
				float In_Grayscale3_g116912 = temp_output_200_12_g116891;
				float In_Luminosity3_g116912 = temp_output_200_15_g116891;
				float In_MultiMask3_g116912 = temp_output_200_11_g116891;
				float In_AlphaClip3_g116912 = Out_AlphaClip4_g116913;
				float In_AlphaFade3_g116912 = Out_AlphaFade4_g116913;
				float3 In_Translucency3_g116912 = Out_Translucency4_g116913;
				float In_Transmission3_g116912 = Out_Transmission4_g116913;
				float In_Thickness3_g116912 = Out_Thickness4_g116913;
				float In_Diffusion3_g116912 = Out_Diffusion4_g116913;
				Data3_g116912.Dummy = In_Dummy3_g116912;
				Data3_g116912.Albedo = In_Albedo3_g116912;
				Data3_g116912.AlbedoRaw = In_AlbedoRaw3_g116912;
				Data3_g116912.NormalTS = In_NormalTS3_g116912;
				Data3_g116912.NormalWS = In_NormalWS3_g116912;
				Data3_g116912.Shader = In_Shader3_g116912;
				Data3_g116912.Emissive= In_Emissive3_g116912;
				Data3_g116912.MultiMask = In_MultiMask3_g116912;
				Data3_g116912.Grayscale = In_Grayscale3_g116912;
				Data3_g116912.Luminosity = In_Luminosity3_g116912;
				Data3_g116912.AlphaClip = In_AlphaClip3_g116912;
				Data3_g116912.AlphaFade = In_AlphaFade3_g116912;
				Data3_g116912.Translucency = In_Translucency3_g116912;
				Data3_g116912.Transmission = In_Transmission3_g116912;
				Data3_g116912.Thickness = In_Thickness3_g116912;
				Data3_g116912.Diffusion = In_Diffusion3_g116912;
				TVEVisualData Data4_g116917 = Data3_g116912;
				float Out_Dummy4_g116917 = 0;
				float3 Out_Albedo4_g116917 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116917 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116917 = float2( 0,0 );
				float3 Out_NormalWS4_g116917 = float3( 0,0,0 );
				float4 Out_Shader4_g116917 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116917 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116917 = 0;
				float Out_Grayscale4_g116917 = 0;
				float Out_Luminosity4_g116917 = 0;
				float Out_AlphaClip4_g116917 = 0;
				float Out_AlphaFade4_g116917 = 0;
				float3 Out_Translucency4_g116917 = float3( 0,0,0 );
				float Out_Transmission4_g116917 = 0;
				float Out_Thickness4_g116917 = 0;
				float Out_Diffusion4_g116917 = 0;
				Out_Dummy4_g116917 = Data4_g116917.Dummy;
				Out_Albedo4_g116917 = Data4_g116917.Albedo;
				Out_AlbedoRaw4_g116917 = Data4_g116917.AlbedoRaw;
				Out_NormalTS4_g116917 = Data4_g116917.NormalTS;
				Out_NormalWS4_g116917 = Data4_g116917.NormalWS;
				Out_Shader4_g116917 = Data4_g116917.Shader;
				Out_Emissive4_g116917= Data4_g116917.Emissive;
				Out_MultiMask4_g116917 = Data4_g116917.MultiMask;
				Out_Grayscale4_g116917 = Data4_g116917.Grayscale;
				Out_Luminosity4_g116917= Data4_g116917.Luminosity;
				Out_AlphaClip4_g116917 = Data4_g116917.AlphaClip;
				Out_AlphaFade4_g116917 = Data4_g116917.AlphaFade;
				Out_Translucency4_g116917 = Data4_g116917.Translucency;
				Out_Transmission4_g116917 = Data4_g116917.Transmission;
				Out_Thickness4_g116917 = Data4_g116917.Thickness;
				Out_Diffusion4_g116917 = Data4_g116917.Diffusion;
				half3 Visual_Albedo292_g116915 = Out_Albedo4_g116917;
				float temp_output_280_12_g116915 = Out_Grayscale4_g116917;
				half Visual_Grayscale308_g116915 = temp_output_280_12_g116915;
				float3 temp_cast_33 = (Visual_Grayscale308_g116915).xxx;
				TVEGlobalData Data15_g116916 = Data204_g115912;
				float Out_Dummy15_g116916 = 0;
				float4 Out_CoatParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116916 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116916 = float4( 0,0,0,0 );
				Out_Dummy15_g116916 = Data15_g116916.Dummy;
				Out_CoatParams15_g116916 = Data15_g116916.CoatParams;
				Out_PaintParams15_g116916 = Data15_g116916.PaintParams;
				Out_GlowParams15_g116916 = Data15_g116916.GlowParams;
				Out_AtmoParams15_g116916= Data15_g116916.AtmoParams;
				Out_FadeParams15_g116916= Data15_g116916.FadeParams;
				Out_FormParams15_g116916 = Data15_g116916.FormParams;
				Out_LandParams15_g116916 = Data15_g116916.LandParams;
				Out_WindParams15_g116916 = Data15_g116916.WindParams;
				Out_PushParams15_g116916 = Data15_g116916.PushParams;
				half4 Global_AtmoParams314_g116915 = Out_AtmoParams15_g116916;
				#ifdef TVE_DRYNESS_ELEMENT
				float staticSwitch351_g116915 = ( (Global_AtmoParams314_g116915).x * TVE_IsEnabled );
				#else
				float staticSwitch351_g116915 = 1.0;
				#endif
				half Dryness_GlobalMask352_g116915 = staticSwitch351_g116915;
				float3 lerpResult485_g116915 = lerp( Visual_Albedo292_g116915 , temp_cast_33 , ( Dryness_GlobalMask352_g116915 * _DrynessGrayValue ));
				half3 hsvTorgb58_g116936 = RGBToHSV( lerpResult485_g116915 );
				half3 hsvTorgb61_g116936 = HSVToRGB( half3(( hsvTorgb58_g116936.x + _DrynessShiftValue ),hsvTorgb58_g116936.y,hsvTorgb58_g116936.z) );
				#ifdef TVE_DRYNESS_SHIFT
				float3 staticSwitch499_g116915 = hsvTorgb61_g116936;
				#else
				float3 staticSwitch499_g116915 = lerpResult485_g116915;
				#endif
				#ifdef UNITY_COLORSPACE_GAMMA
				float staticSwitch1_g116935 = 2.0;
				#else
				float staticSwitch1_g116935 = 4.594794;
				#endif
				half Dryness_TexMask478_g116915 = 1.0;
				float temp_output_280_11_g116915 = Out_MultiMask4_g116917;
				half Visual_MultiMask310_g116915 = temp_output_280_11_g116915;
				float lerpResult283_g116915 = lerp( 1.0 , Visual_MultiMask310_g116915 , _DrynessMultiValue);
				half Dryness_MultiMask302_g116915 = lerpResult283_g116915;
				float temp_output_280_15_g116915 = Out_Luminosity4_g116917;
				half Visual_Luminosity309_g116915 = temp_output_280_15_g116915;
				float clampResult17_g116931 = clamp( Visual_Luminosity309_g116915 , 0.0001 , 0.9999 );
				float temp_output_7_0_g116930 = _DrynessLumaRemap.x;
				float temp_output_10_0_g116930 = ( _DrynessLumaRemap.y - temp_output_7_0_g116930 );
				float lerpResult295_g116915 = lerp( 1.0 , saturate( ( ( clampResult17_g116931 - temp_output_7_0_g116930 ) / ( temp_output_10_0_g116930 + 0.0001 ) ) ) , _DrynessLumaValue);
				half Dryness_LumaMask301_g116915 = lerpResult295_g116915;
				half Dryness_VertMask378_g116915 = 1.0;
				half Dryness_MaskNoise291_g116915 = 1.0;
				half Custom_Mask411_g116915 = 1.0;
				float temp_output_7_0_g116929 = _DrynessBlendRemap.x;
				float temp_output_10_0_g116929 = ( _DrynessBlendRemap.y - temp_output_7_0_g116929 );
				half Dryness_Mask329_g116915 = saturate( ( ( ( _DrynessIntensityValue * Dryness_TexMask478_g116915 * Dryness_MultiMask302_g116915 * Dryness_LumaMask301_g116915 * Dryness_VertMask378_g116915 * Dryness_MaskNoise291_g116915 * Dryness_GlobalMask352_g116915 * Custom_Mask411_g116915 ) - temp_output_7_0_g116929 ) / ( temp_output_10_0_g116929 + 0.0001 ) ) );
				float3 lerpResult336_g116915 = lerp( Visual_Albedo292_g116915 , ( staticSwitch499_g116915 * staticSwitch1_g116935 * (_DrynessColor).rgb ) , Dryness_Mask329_g116915);
				#ifdef TVE_DRYNESS
				float3 staticSwitch356_g116915 = lerpResult336_g116915;
				#else
				float3 staticSwitch356_g116915 = Visual_Albedo292_g116915;
				#endif
				half3 Final_Albedo331_g116915 = staticSwitch356_g116915;
				float3 In_Albedo3_g116918 = Final_Albedo331_g116915;
				float3 In_AlbedoRaw3_g116918 = Out_AlbedoRaw4_g116917;
				float2 In_NormalTS3_g116918 = Out_NormalTS4_g116917;
				float3 In_NormalWS3_g116918 = Out_NormalWS4_g116917;
				half4 Visual_Shader415_g116915 = Out_Shader4_g116917;
				float4 break438_g116915 = Visual_Shader415_g116915;
				float4 appendResult439_g116915 = (float4(break438_g116915.x , break438_g116915.y , break438_g116915.z , ( break438_g116915.w * _DrynessSmoothnessValue )));
				float4 lerpResult427_g116915 = lerp( Visual_Shader415_g116915 , appendResult439_g116915 , Dryness_Mask329_g116915);
				#ifdef TVE_DRYNESS
				float4 staticSwitch426_g116915 = lerpResult427_g116915;
				#else
				float4 staticSwitch426_g116915 = Visual_Shader415_g116915;
				#endif
				half4 Final_Shader433_g116915 = staticSwitch426_g116915;
				float4 In_Shader3_g116918 = Final_Shader433_g116915;
				float4 In_Emissive3_g116918 = Out_Emissive4_g116917;
				float In_Grayscale3_g116918 = temp_output_280_12_g116915;
				float In_Luminosity3_g116918 = temp_output_280_15_g116915;
				float In_MultiMask3_g116918 = temp_output_280_11_g116915;
				float In_AlphaClip3_g116918 = Out_AlphaClip4_g116917;
				float In_AlphaFade3_g116918 = Out_AlphaFade4_g116917;
				float3 In_Translucency3_g116918 = Out_Translucency4_g116917;
				half Visual_Transmission416_g116915 = Out_Transmission4_g116917;
				float lerpResult421_g116915 = lerp( Visual_Transmission416_g116915 , ( Visual_Transmission416_g116915 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g116915);
				#ifdef TVE_DRYNESS
				float staticSwitch418_g116915 = lerpResult421_g116915;
				#else
				float staticSwitch418_g116915 = Visual_Transmission416_g116915;
				#endif
				half Final_Transmission425_g116915 = staticSwitch418_g116915;
				float In_Transmission3_g116918 = Final_Transmission425_g116915;
				float In_Thickness3_g116918 = Out_Thickness4_g116917;
				float In_Diffusion3_g116918 = Out_Diffusion4_g116917;
				Data3_g116918.Dummy = In_Dummy3_g116918;
				Data3_g116918.Albedo = In_Albedo3_g116918;
				Data3_g116918.AlbedoRaw = In_AlbedoRaw3_g116918;
				Data3_g116918.NormalTS = In_NormalTS3_g116918;
				Data3_g116918.NormalWS = In_NormalWS3_g116918;
				Data3_g116918.Shader = In_Shader3_g116918;
				Data3_g116918.Emissive= In_Emissive3_g116918;
				Data3_g116918.MultiMask = In_MultiMask3_g116918;
				Data3_g116918.Grayscale = In_Grayscale3_g116918;
				Data3_g116918.Luminosity = In_Luminosity3_g116918;
				Data3_g116918.AlphaClip = In_AlphaClip3_g116918;
				Data3_g116918.AlphaFade = In_AlphaFade3_g116918;
				Data3_g116918.Translucency = In_Translucency3_g116918;
				Data3_g116918.Transmission = In_Transmission3_g116918;
				Data3_g116918.Thickness = In_Thickness3_g116918;
				Data3_g116918.Diffusion = In_Diffusion3_g116918;
				TVEVisualData Data4_g116939 = Data3_g116918;
				float Out_Dummy4_g116939 = 0;
				float3 Out_Albedo4_g116939 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116939 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116939 = float2( 0,0 );
				float3 Out_NormalWS4_g116939 = float3( 0,0,0 );
				float4 Out_Shader4_g116939 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116939 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116939 = 0;
				float Out_Grayscale4_g116939 = 0;
				float Out_Luminosity4_g116939 = 0;
				float Out_AlphaClip4_g116939 = 0;
				float Out_AlphaFade4_g116939 = 0;
				float3 Out_Translucency4_g116939 = float3( 0,0,0 );
				float Out_Transmission4_g116939 = 0;
				float Out_Thickness4_g116939 = 0;
				float Out_Diffusion4_g116939 = 0;
				Out_Dummy4_g116939 = Data4_g116939.Dummy;
				Out_Albedo4_g116939 = Data4_g116939.Albedo;
				Out_AlbedoRaw4_g116939 = Data4_g116939.AlbedoRaw;
				Out_NormalTS4_g116939 = Data4_g116939.NormalTS;
				Out_NormalWS4_g116939 = Data4_g116939.NormalWS;
				Out_Shader4_g116939 = Data4_g116939.Shader;
				Out_Emissive4_g116939= Data4_g116939.Emissive;
				Out_MultiMask4_g116939 = Data4_g116939.MultiMask;
				Out_Grayscale4_g116939 = Data4_g116939.Grayscale;
				Out_Luminosity4_g116939= Data4_g116939.Luminosity;
				Out_AlphaClip4_g116939 = Data4_g116939.AlphaClip;
				Out_AlphaFade4_g116939 = Data4_g116939.AlphaFade;
				Out_Translucency4_g116939 = Data4_g116939.Translucency;
				Out_Transmission4_g116939 = Data4_g116939.Transmission;
				Out_Thickness4_g116939 = Data4_g116939.Thickness;
				Out_Diffusion4_g116939 = Data4_g116939.Diffusion;
				half3 Visual_Albedo127_g116938 = Out_Albedo4_g116939;
				float3 temp_output_622_0_g116938 = (_OverlayColor).rgb;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116942) = _OverlayAlbedoTex;
				float localFilterTexture19_g116971 = ( 0.0 );
				SamplerState SamplerDefault19_g116971 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g116971 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g116971 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g116971 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g116971 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g116971 = SamplerDefault19_g116971;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g116971 = SamplerDefault19_g116971;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g116971 = SamplerPoint19_g116971;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g116971 = SamplerLow19_g116971;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g116971 = SamplerMedium19_g116971;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g116971 = SamplerHigh19_g116971;
				#endif
				SamplerState Sampler238_g116942 = SS19_g116971;
				float4 temp_output_6_0_g116943 = _overlay_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g116943 = ( temp_output_6_0_g116943 + ( ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g116943 = temp_output_6_0_g116943;
				#endif
				half4 Overlay_Coords639_g116938 = staticSwitch14_g116943;
				float4 temp_output_37_0_g116942 = Overlay_Coords639_g116938;
				half4 Coords238_g116942 = temp_output_37_0_g116942;
				TVEModelData Data15_g116973 = Data16_g114321;
				float Out_Dummy15_g116973 = 0;
				float3 Out_PositionWS15_g116973 = float3( 0,0,0 );
				float3 Out_PositionWO15_g116973 = float3( 0,0,0 );
				float3 Out_PivotWS15_g116973 = float3( 0,0,0 );
				float3 Out_PivotWO15_g116973 = float3( 0,0,0 );
				float3 Out_NormalWS15_g116973 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g116973 = float3( 0,0,0 );
				float4 Out_VertexData15_g116973 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g116973 = float4( 0,0,0,0 );
				Out_Dummy15_g116973 = Data15_g116973.Dummy;
				Out_PositionWS15_g116973 = Data15_g116973.PositionWS;
				Out_PositionWO15_g116973 = Data15_g116973.PositionWO;
				Out_PivotWS15_g116973 = Data15_g116973.PivotWS;
				Out_PivotWO15_g116973 = Data15_g116973.PivotWO;
				Out_NormalWS15_g116973 = Data15_g116973.NormalWS;
				Out_ViewDirWS15_g116973 = Data15_g116973.ViewDirWS;
				Out_VertexData15_g116973 = Data15_g116973.VertexData;
				Out_BoundsData15_g116973 = Data15_g116973.BoundsData;
				half3 Model_PositionWO602_g116938 = Out_PositionWO15_g116973;
				float3 temp_output_279_0_g116942 = Model_PositionWO602_g116938;
				half3 WorldPosition238_g116942 = temp_output_279_0_g116942;
				half4 localSamplePlanar2D238_g116942 = SamplePlanar2D( Texture238_g116942 , Sampler238_g116942 , Coords238_g116942 , WorldPosition238_g116942 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116942) = _OverlayAlbedoTex;
				SamplerState Sampler246_g116942 = SS19_g116971;
				half4 Coords246_g116942 = temp_output_37_0_g116942;
				half3 WorldPosition246_g116942 = temp_output_279_0_g116942;
				half3 Model_NormalWS712_g116938 = Out_NormalWS15_g116973;
				float3 temp_output_280_0_g116942 = Model_NormalWS712_g116938;
				half3 WorldNormal246_g116942 = temp_output_280_0_g116942;
				half4 localSamplePlanar3D246_g116942 = SamplePlanar3D( Texture246_g116942 , Sampler246_g116942 , Coords246_g116942 , WorldPosition246_g116942 , WorldNormal246_g116942 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116942) = _OverlayAlbedoTex;
				SamplerState Sampler234_g116942 = SS19_g116971;
				float4 Coords234_g116942 = temp_output_37_0_g116942;
				float3 WorldPosition234_g116942 = temp_output_279_0_g116942;
				float4 localSampleStochastic2D234_g116942 = SampleStochastic2D( Texture234_g116942 , Sampler234_g116942 , Coords234_g116942 , WorldPosition234_g116942 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116942) = _OverlayAlbedoTex;
				SamplerState Sampler263_g116942 = SS19_g116971;
				half4 Coords263_g116942 = temp_output_37_0_g116942;
				half3 WorldPosition263_g116942 = temp_output_279_0_g116942;
				half3 WorldNormal263_g116942 = temp_output_280_0_g116942;
				half4 localSampleStochastic3D263_g116942 = SampleStochastic3D( Texture263_g116942 , Sampler263_g116942 , Coords263_g116942 , WorldPosition263_g116942 , WorldNormal263_g116942 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch676_g116938 = localSamplePlanar2D238_g116942;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch676_g116938 = localSamplePlanar3D246_g116942;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch676_g116938 = localSampleStochastic2D234_g116942;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch676_g116938 = localSampleStochastic3D263_g116942;
				#else
				float4 staticSwitch676_g116938 = localSamplePlanar2D238_g116942;
				#endif
				half3 Overlay_Albedo526_g116938 = (staticSwitch676_g116938).xyz;
				#ifdef TVE_OVERLAY_TEX
				float3 staticSwitch578_g116938 = ( temp_output_622_0_g116938 * Overlay_Albedo526_g116938 );
				#else
				float3 staticSwitch578_g116938 = temp_output_622_0_g116938;
				#endif
				float3 temp_output_6_0_g116949 = staticSwitch578_g116938;
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g116949 = ( temp_output_6_0_g116949 + ( _OverlayTextureMode * 0.0 ) );
				#else
				float3 staticSwitch14_g116949 = temp_output_6_0_g116949;
				#endif
				float3 temp_cast_34 = (0.0).xxx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116946) = _OverlayGlitterTexRT;
				SamplerState Sampler246_g116946 = sampler_Linear_Repeat;
				float4 appendResult863_g116938 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g116946 = appendResult863_g116938;
				half4 Coords246_g116946 = temp_output_37_0_g116946;
				float3 temp_output_279_0_g116946 = Model_PositionWO602_g116938;
				half3 WorldPosition246_g116946 = temp_output_279_0_g116946;
				float3 temp_output_280_0_g116946 = Model_NormalWS712_g116938;
				half3 WorldNormal246_g116946 = temp_output_280_0_g116946;
				half4 localSamplePlanar3D246_g116946 = SamplePlanar3D( Texture246_g116946 , Sampler246_g116946 , Coords246_g116946 , WorldPosition246_g116946 , WorldNormal246_g116946 );
				half Overlay_GlitterTex854_g116938 = (localSamplePlanar3D246_g116946).x;
				half3 Model_PositionWS879_g116938 = Out_PositionWS15_g116973;
				#ifdef TVE_OVERLAY_GLITTER
				float3 staticSwitch868_g116938 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g116938 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g116938 ) / _OverlayGlitterDistValue ) ) ) );
				#else
				float3 staticSwitch868_g116938 = temp_cast_34;
				#endif
				half3 Overlay_GlitterColor865_g116938 = staticSwitch868_g116938;
				half Overlay_TexMask908_g116938 = 1.0;
				float3 temp_output_739_21_g116938 = Out_NormalWS4_g116939;
				half3 Visual_NormalWS749_g116938 = temp_output_739_21_g116938;
				float clampResult17_g116959 = clamp( saturate( (Visual_NormalWS749_g116938).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g116958 = _OverlayProjRemap.x;
				float temp_output_10_0_g116958 = ( _OverlayProjRemap.y - temp_output_7_0_g116958 );
				float lerpResult842_g116938 = lerp( 1.0 , saturate( ( ( clampResult17_g116959 - temp_output_7_0_g116958 ) / ( temp_output_10_0_g116958 + 0.0001 ) ) ) , _OverlayProjValue);
				half Overlay_MaskProj457_g116938 = lerpResult842_g116938;
				float temp_output_739_15_g116938 = Out_Luminosity4_g116939;
				half Visual_Luminosity654_g116938 = temp_output_739_15_g116938;
				float clampResult17_g116961 = clamp( Visual_Luminosity654_g116938 , 0.0001 , 0.9999 );
				float temp_output_7_0_g116960 = _OverlayLumaRemap.x;
				float temp_output_10_0_g116960 = ( _OverlayLumaRemap.y - temp_output_7_0_g116960 );
				float lerpResult587_g116938 = lerp( 1.0 , saturate( ( ( clampResult17_g116961 - temp_output_7_0_g116960 ) / ( temp_output_10_0_g116960 + 0.0001 ) ) ) , _OverlayLumaValue);
				half Overlay_MaskLuma438_g116938 = lerpResult587_g116938;
				half Overlay_VertMask801_g116938 = 1.0;
				half Overlay_MaskNoise427_g116938 = 1.0;
				TVEGlobalData Data15_g116940 = Data204_g115912;
				float Out_Dummy15_g116940 = 0;
				float4 Out_CoatParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116940 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116940 = float4( 0,0,0,0 );
				Out_Dummy15_g116940 = Data15_g116940.Dummy;
				Out_CoatParams15_g116940 = Data15_g116940.CoatParams;
				Out_PaintParams15_g116940 = Data15_g116940.PaintParams;
				Out_GlowParams15_g116940 = Data15_g116940.GlowParams;
				Out_AtmoParams15_g116940= Data15_g116940.AtmoParams;
				Out_FadeParams15_g116940= Data15_g116940.FadeParams;
				Out_FormParams15_g116940 = Data15_g116940.FormParams;
				Out_LandParams15_g116940 = Data15_g116940.LandParams;
				Out_WindParams15_g116940 = Data15_g116940.WindParams;
				Out_PushParams15_g116940 = Data15_g116940.PushParams;
				half4 Global_AtmoParams516_g116938 = Out_AtmoParams15_g116940;
				#ifdef TVE_OVERLAY_ELEMENT
				float staticSwitch705_g116938 = ( (Global_AtmoParams516_g116938).z * TVE_IsEnabled );
				#else
				float staticSwitch705_g116938 = 1.0;
				#endif
				half Overlay_MaskGlobal429_g116938 = staticSwitch705_g116938;
				half Custom_Mask646_g116938 = 1.0;
				float temp_output_7_0_g116967 = _OverlayBlendRemap1.x;
				float temp_output_10_0_g116967 = ( _OverlayBlendRemap1.y - temp_output_7_0_g116967 );
				half Overlay_Mask494_g116938 = saturate( ( ( ( _OverlayIntensityValue * Overlay_TexMask908_g116938 * Overlay_MaskProj457_g116938 * Overlay_MaskLuma438_g116938 * Overlay_VertMask801_g116938 * Overlay_MaskNoise427_g116938 * Overlay_MaskGlobal429_g116938 * Custom_Mask646_g116938 ) - temp_output_7_0_g116967 ) / ( temp_output_10_0_g116967 + 0.0001 ) ) );
				float3 lerpResult467_g116938 = lerp( Visual_Albedo127_g116938 , ( staticSwitch14_g116949 + Overlay_GlitterColor865_g116938 ) , Overlay_Mask494_g116938);
				#ifdef TVE_OVERLAY
				float3 staticSwitch577_g116938 = lerpResult467_g116938;
				#else
				float3 staticSwitch577_g116938 = Visual_Albedo127_g116938;
				#endif
				half3 Final_Albedo493_g116938 = staticSwitch577_g116938;
				float3 In_Albedo3_g116941 = Final_Albedo493_g116938;
				float3 In_AlbedoRaw3_g116941 = Out_AlbedoRaw4_g116939;
				half2 Visual_NormalTS535_g116938 = Out_NormalTS4_g116939;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116944) = _OverlayNormalTex;
				float localFilterTexture29_g116972 = ( 0.0 );
				SamplerState SamplerDefault29_g116972 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g116972 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g116972 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g116972 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g116972 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g116972 = SamplerDefault29_g116972;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g116972 = SamplerDefault29_g116972;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g116972 = SamplerPoint29_g116972;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g116972 = SamplerLow29_g116972;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g116972 = SamplerMedium29_g116972;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g116972 = SamplerHigh29_g116972;
				#endif
				SamplerState Sampler238_g116944 = SS29_g116972;
				float4 temp_output_37_0_g116944 = Overlay_Coords639_g116938;
				half4 Coords238_g116944 = temp_output_37_0_g116944;
				float3 temp_output_279_0_g116944 = Model_PositionWO602_g116938;
				half3 WorldPosition238_g116944 = temp_output_279_0_g116944;
				half4 localSamplePlanar2D238_g116944 = SamplePlanar2D( Texture238_g116944 , Sampler238_g116944 , Coords238_g116944 , WorldPosition238_g116944 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g116944) = _OverlayNormalTex;
				SamplerState Sampler246_g116944 = SS29_g116972;
				half4 Coords246_g116944 = temp_output_37_0_g116944;
				half3 WorldPosition246_g116944 = temp_output_279_0_g116944;
				float3 temp_output_280_0_g116944 = Model_NormalWS712_g116938;
				half3 WorldNormal246_g116944 = temp_output_280_0_g116944;
				half4 localSamplePlanar3D246_g116944 = SamplePlanar3D( Texture246_g116944 , Sampler246_g116944 , Coords246_g116944 , WorldPosition246_g116944 , WorldNormal246_g116944 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g116944) = _OverlayNormalTex;
				SamplerState Sampler234_g116944 = SS29_g116972;
				float4 Coords234_g116944 = temp_output_37_0_g116944;
				float3 WorldPosition234_g116944 = temp_output_279_0_g116944;
				float4 localSampleStochastic2D234_g116944 = SampleStochastic2D( Texture234_g116944 , Sampler234_g116944 , Coords234_g116944 , WorldPosition234_g116944 );
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g116944) = _OverlayNormalTex;
				SamplerState Sampler263_g116944 = SS29_g116972;
				half4 Coords263_g116944 = temp_output_37_0_g116944;
				half3 WorldPosition263_g116944 = temp_output_279_0_g116944;
				half3 WorldNormal263_g116944 = temp_output_280_0_g116944;
				half4 localSampleStochastic3D263_g116944 = SampleStochastic3D( Texture263_g116944 , Sampler263_g116944 , Coords263_g116944 , WorldPosition263_g116944 , WorldNormal263_g116944 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch686_g116938 = localSamplePlanar2D238_g116944;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch686_g116938 = localSamplePlanar3D246_g116944;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch686_g116938 = localSampleStochastic2D234_g116944;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch686_g116938 = localSampleStochastic3D263_g116944;
				#else
				float4 staticSwitch686_g116938 = localSamplePlanar2D238_g116944;
				#endif
				half4 Normal_Packed45_g116948 = staticSwitch686_g116938;
				float2 appendResult58_g116948 = (float2(( (Normal_Packed45_g116948).x * (Normal_Packed45_g116948).w ) , (Normal_Packed45_g116948).y));
				half2 Normal_Default50_g116948 = appendResult58_g116948;
				half2 Normal_ASTC41_g116948 = (Normal_Packed45_g116948).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g116948 = Normal_ASTC41_g116948;
				#else
				float2 staticSwitch38_g116948 = Normal_Default50_g116948;
				#endif
				half2 Normal_NO_DTX544_g116948 = (Normal_Packed45_g116948).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g116948 = Normal_NO_DTX544_g116948;
				#else
				float2 staticSwitch37_g116948 = staticSwitch38_g116948;
				#endif
				half2 Normal_Planar45_g116947 = (staticSwitch37_g116948*2.0 + -1.0);
				float2 break71_g116947 = Normal_Planar45_g116947;
				float3 appendResult72_g116947 = (float3(break71_g116947.x , 0.0 , break71_g116947.y));
				half2 Overlay_Normal528_g116938 = (mul( ase_worldToTangent, appendResult72_g116947 )).xy;
				#ifdef TVE_OVERLAY_TEX
				float2 staticSwitch579_g116938 = Overlay_Normal528_g116938;
				#else
				float2 staticSwitch579_g116938 = Visual_NormalTS535_g116938;
				#endif
				float2 lerpResult551_g116938 = lerp( Visual_NormalTS535_g116938 , ( staticSwitch579_g116938 * _OverlayNormalValue ) , Overlay_Mask494_g116938);
				#ifdef TVE_OVERLAY
				float2 staticSwitch583_g116938 = lerpResult551_g116938;
				#else
				float2 staticSwitch583_g116938 = Visual_NormalTS535_g116938;
				#endif
				half2 Final_NormalTS499_g116938 = staticSwitch583_g116938;
				float2 In_NormalTS3_g116941 = Final_NormalTS499_g116938;
				float3 In_NormalWS3_g116941 = temp_output_739_21_g116938;
				half4 Visual_Masks536_g116938 = Out_Shader4_g116939;
				float4 appendResult585_g116938 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
				float4 lerpResult584_g116938 = lerp( Visual_Masks536_g116938 , appendResult585_g116938 , Overlay_Mask494_g116938);
				#ifdef TVE_OVERLAY
				float4 staticSwitch586_g116938 = lerpResult584_g116938;
				#else
				float4 staticSwitch586_g116938 = Visual_Masks536_g116938;
				#endif
				half4 Final_Masks482_g116938 = staticSwitch586_g116938;
				float4 In_Shader3_g116941 = Final_Masks482_g116938;
				float4 In_Emissive3_g116941 = Out_Emissive4_g116939;
				float temp_output_739_12_g116938 = Out_Grayscale4_g116939;
				float In_Grayscale3_g116941 = temp_output_739_12_g116938;
				float In_Luminosity3_g116941 = temp_output_739_15_g116938;
				float In_MultiMask3_g116941 = Out_MultiMask4_g116939;
				float In_AlphaClip3_g116941 = Out_AlphaClip4_g116939;
				float In_AlphaFade3_g116941 = Out_AlphaFade4_g116939;
				float3 In_Translucency3_g116941 = Out_Translucency4_g116939;
				half Visual_Transmission699_g116938 = Out_Transmission4_g116939;
				float lerpResult746_g116938 = lerp( Visual_Transmission699_g116938 , ( Visual_Transmission699_g116938 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g116938 * Overlay_MaskNoise427_g116938 * Overlay_MaskGlobal429_g116938 ));
				#ifdef TVE_OVERLAY
				float staticSwitch703_g116938 = lerpResult746_g116938;
				#else
				float staticSwitch703_g116938 = Visual_Transmission699_g116938;
				#endif
				half Final_Transmission702_g116938 = staticSwitch703_g116938;
				float In_Transmission3_g116941 = Final_Transmission702_g116938;
				float In_Thickness3_g116941 = Out_Thickness4_g116939;
				float In_Diffusion3_g116941 = Out_Diffusion4_g116939;
				Data3_g116941.Dummy = In_Dummy3_g116941;
				Data3_g116941.Albedo = In_Albedo3_g116941;
				Data3_g116941.AlbedoRaw = In_AlbedoRaw3_g116941;
				Data3_g116941.NormalTS = In_NormalTS3_g116941;
				Data3_g116941.NormalWS = In_NormalWS3_g116941;
				Data3_g116941.Shader = In_Shader3_g116941;
				Data3_g116941.Emissive= In_Emissive3_g116941;
				Data3_g116941.MultiMask = In_MultiMask3_g116941;
				Data3_g116941.Grayscale = In_Grayscale3_g116941;
				Data3_g116941.Luminosity = In_Luminosity3_g116941;
				Data3_g116941.AlphaClip = In_AlphaClip3_g116941;
				Data3_g116941.AlphaFade = In_AlphaFade3_g116941;
				Data3_g116941.Translucency = In_Translucency3_g116941;
				Data3_g116941.Transmission = In_Transmission3_g116941;
				Data3_g116941.Thickness = In_Thickness3_g116941;
				Data3_g116941.Diffusion = In_Diffusion3_g116941;
				TVEVisualData Data4_g116975 = Data3_g116941;
				float Out_Dummy4_g116975 = 0;
				float3 Out_Albedo4_g116975 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g116975 = float3( 0,0,0 );
				float2 Out_NormalTS4_g116975 = float2( 0,0 );
				float3 Out_NormalWS4_g116975 = float3( 0,0,0 );
				float4 Out_Shader4_g116975 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g116975 = float4( 0,0,0,0 );
				float Out_MultiMask4_g116975 = 0;
				float Out_Grayscale4_g116975 = 0;
				float Out_Luminosity4_g116975 = 0;
				float Out_AlphaClip4_g116975 = 0;
				float Out_AlphaFade4_g116975 = 0;
				float3 Out_Translucency4_g116975 = float3( 0,0,0 );
				float Out_Transmission4_g116975 = 0;
				float Out_Thickness4_g116975 = 0;
				float Out_Diffusion4_g116975 = 0;
				Out_Dummy4_g116975 = Data4_g116975.Dummy;
				Out_Albedo4_g116975 = Data4_g116975.Albedo;
				Out_AlbedoRaw4_g116975 = Data4_g116975.AlbedoRaw;
				Out_NormalTS4_g116975 = Data4_g116975.NormalTS;
				Out_NormalWS4_g116975 = Data4_g116975.NormalWS;
				Out_Shader4_g116975 = Data4_g116975.Shader;
				Out_Emissive4_g116975= Data4_g116975.Emissive;
				Out_MultiMask4_g116975 = Data4_g116975.MultiMask;
				Out_Grayscale4_g116975 = Data4_g116975.Grayscale;
				Out_Luminosity4_g116975= Data4_g116975.Luminosity;
				Out_AlphaClip4_g116975 = Data4_g116975.AlphaClip;
				Out_AlphaFade4_g116975 = Data4_g116975.AlphaFade;
				Out_Translucency4_g116975 = Data4_g116975.Translucency;
				Out_Transmission4_g116975 = Data4_g116975.Transmission;
				Out_Thickness4_g116975 = Data4_g116975.Thickness;
				Out_Diffusion4_g116975 = Data4_g116975.Diffusion;
				half3 Visual_Albedo127_g116974 = Out_Albedo4_g116975;
				TVEGlobalData Data15_g116980 = Data204_g115912;
				float Out_Dummy15_g116980 = 0;
				float4 Out_CoatParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g116980 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g116980 = float4( 0,0,0,0 );
				Out_Dummy15_g116980 = Data15_g116980.Dummy;
				Out_CoatParams15_g116980 = Data15_g116980.CoatParams;
				Out_PaintParams15_g116980 = Data15_g116980.PaintParams;
				Out_GlowParams15_g116980 = Data15_g116980.GlowParams;
				Out_AtmoParams15_g116980= Data15_g116980.AtmoParams;
				Out_FadeParams15_g116980= Data15_g116980.FadeParams;
				Out_FormParams15_g116980 = Data15_g116980.FormParams;
				Out_LandParams15_g116980 = Data15_g116980.LandParams;
				Out_WindParams15_g116980 = Data15_g116980.WindParams;
				Out_PushParams15_g116980 = Data15_g116980.PushParams;
				half4 Global_AtmoParams516_g116974 = Out_AtmoParams15_g116980;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch663_g116974 = ( (Global_AtmoParams516_g116974).y * TVE_IsEnabled );
				#else
				float staticSwitch663_g116974 = 1.0;
				#endif
				half Global_Wetness429_g116974 = staticSwitch663_g116974;
				half Wetness_Value1042_g116974 = ( _WetnessIntensityValue * Global_Wetness429_g116974 );
				half Wetness_VertMask1024_g116974 = 1.0;
				float temp_output_1043_0_g116974 = ( Wetness_Value1042_g116974 * Wetness_VertMask1024_g116974 );
				half Wetness_Mask866_g116974 = temp_output_1043_0_g116974;
				half Water_VertMask1094_g116974 = 1.0;
				half4 Visual_Masks536_g116974 = Out_Shader4_g116975;
				float lerpResult1013_g116974 = lerp( 1.0 , (Visual_Masks536_g116974).z , _WetnessWaterBaseValue);
				half Water_HeightMask782_g116974 = lerpResult1013_g116974;
				float clampResult17_g116989 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g116974 * Water_VertMask1094_g116974 ) - Water_HeightMask782_g116974 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g116990 = _WetnessWaterBlendRemap.x;
				float temp_output_10_0_g116990 = ( _WetnessWaterBlendRemap.y - temp_output_7_0_g116990 );
				TVEModelData Data15_g116988 = Data16_g114321;
				float Out_Dummy15_g116988 = 0;
				float3 Out_PositionWS15_g116988 = float3( 0,0,0 );
				float3 Out_PositionWO15_g116988 = float3( 0,0,0 );
				float3 Out_PivotWS15_g116988 = float3( 0,0,0 );
				float3 Out_PivotWO15_g116988 = float3( 0,0,0 );
				float3 Out_NormalWS15_g116988 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g116988 = float3( 0,0,0 );
				float4 Out_VertexData15_g116988 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g116988 = float4( 0,0,0,0 );
				Out_Dummy15_g116988 = Data15_g116988.Dummy;
				Out_PositionWS15_g116988 = Data15_g116988.PositionWS;
				Out_PositionWO15_g116988 = Data15_g116988.PositionWO;
				Out_PivotWS15_g116988 = Data15_g116988.PivotWS;
				Out_PivotWO15_g116988 = Data15_g116988.PivotWO;
				Out_NormalWS15_g116988 = Data15_g116988.NormalWS;
				Out_ViewDirWS15_g116988 = Data15_g116988.ViewDirWS;
				Out_VertexData15_g116988 = Data15_g116988.VertexData;
				Out_BoundsData15_g116988 = Data15_g116988.BoundsData;
				half3 Model_NormalWS798_g116974 = Out_NormalWS15_g116988;
				float temp_output_786_0_g116974 = saturate( (Model_NormalWS798_g116974).y );
				half Wetness_ProjMask790_g116974 = temp_output_786_0_g116974;
				half Water_Mask760_g116974 = ( saturate( ( ( clampResult17_g116989 - temp_output_7_0_g116990 ) / ( temp_output_10_0_g116990 + 0.0001 ) ) ) * Wetness_ProjMask790_g116974 );
				float3 lerpResult918_g116974 = lerp( Visual_Albedo127_g116974 , ( Visual_Albedo127_g116974 * (_WetnessWaterColor).rgb ) , Water_Mask760_g116974);
				#ifdef TVE_WETNESS_WATER
				float3 staticSwitch946_g116974 = lerpResult918_g116974;
				#else
				float3 staticSwitch946_g116974 = Visual_Albedo127_g116974;
				#endif
				float3 lerpResult768_g116974 = lerp( staticSwitch946_g116974 , ( staticSwitch946_g116974 * staticSwitch946_g116974 ) , _WetnessContrastValue);
				float3 lerpResult651_g116974 = lerp( Visual_Albedo127_g116974 , lerpResult768_g116974 , Wetness_Mask866_g116974);
				#ifdef TVE_WETNESS
				float3 staticSwitch577_g116974 = lerpResult651_g116974;
				#else
				float3 staticSwitch577_g116974 = Visual_Albedo127_g116974;
				#endif
				half3 Final_Albedo493_g116974 = staticSwitch577_g116974;
				float3 In_Albedo3_g116976 = Final_Albedo493_g116974;
				float3 In_AlbedoRaw3_g116976 = Out_AlbedoRaw4_g116975;
				half2 Visual_Normal535_g116974 = Out_NormalTS4_g116975;
				float lerpResult877_g116974 = lerp( 1.0 , 0.0 , ( Water_Mask760_g116974 * Water_Mask760_g116974 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch957_g116974 = ( Visual_Normal535_g116974 * lerpResult877_g116974 );
				#else
				float2 staticSwitch957_g116974 = Visual_Normal535_g116974;
				#endif
				float2 temp_cast_35 = (0.0).xx;
				UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g116986) = _WetnessDropsTexRT;
				SamplerState Sampler238_g116986 = sampler_Linear_Repeat_Aniso8;
				float4 appendResult924_g116974 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g116986 = appendResult924_g116974;
				half4 Coords238_g116986 = temp_output_37_0_g116986;
				half3 Model_PositionWO602_g116974 = Out_PositionWO15_g116988;
				float3 temp_output_279_0_g116986 = Model_PositionWO602_g116974;
				half3 WorldPosition238_g116986 = temp_output_279_0_g116986;
				half4 localSamplePlanar2D238_g116986 = SamplePlanar2D( Texture238_g116986 , Sampler238_g116986 , Coords238_g116986 , WorldPosition238_g116986 );
				float4 temp_output_1010_0_g116974 = localSamplePlanar2D238_g116986;
				half2 Rain_DropsNormal919_g116974 = (temp_output_1010_0_g116974).zw;
				float2 temp_output_903_0_g116974 = (Rain_DropsNormal919_g116974*2.0 + -1.0);
				half2 Rain_RingsNormal713_g116974 = (temp_output_1010_0_g116974).xy;
				float2 lerpResult904_g116974 = lerp( temp_output_903_0_g116974 , (Rain_RingsNormal713_g116974*2.0 + -1.0) , ( Water_Mask760_g116974 * Water_Mask760_g116974 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch960_g116974 = lerpResult904_g116974;
				#else
				float2 staticSwitch960_g116974 = temp_output_903_0_g116974;
				#endif
				half2 Rain_Drops1002_g116974 = ( staticSwitch960_g116974 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
				half3 Model_PositionWS823_g116974 = Out_PositionWS15_g116988;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch949_g116974 = ( (Global_AtmoParams516_g116974).w * TVE_IsEnabled );
				#else
				float staticSwitch949_g116974 = 1.0;
				#endif
				half Global_Rain955_g116974 = staticSwitch949_g116974;
				half Rain_Value1067_g116974 = Global_Rain955_g116974;
				half Rain_VertMask1108_g116974 = 1.0;
				half Rain_Mask999_g116974 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g116974 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g116974 * Rain_VertMask1108_g116974 );
				half2 Normal_Planar45_g116985 = ( Rain_Drops1002_g116974 * Rain_Mask999_g116974 * Wetness_ProjMask790_g116974 );
				float2 break71_g116985 = Normal_Planar45_g116985;
				float3 appendResult72_g116985 = (float3(break71_g116985.x , 0.0 , break71_g116985.y));
				half2 Wetness_Normal526_g116974 = (mul( ase_worldToTangent, appendResult72_g116985 )).xy;
				#ifdef TVE_WETNESS_DROPS
				float2 staticSwitch583_g116974 = Wetness_Normal526_g116974;
				#else
				float2 staticSwitch583_g116974 = temp_cast_35;
				#endif
				#ifdef TVE_WETNESS
				float2 staticSwitch774_g116974 = ( staticSwitch957_g116974 + staticSwitch583_g116974 );
				#else
				float2 staticSwitch774_g116974 = Visual_Normal535_g116974;
				#endif
				half2 Final_Normal499_g116974 = staticSwitch774_g116974;
				float2 In_NormalTS3_g116976 = Final_Normal499_g116974;
				float3 In_NormalWS3_g116976 = Out_NormalWS4_g116975;
				float4 break658_g116974 = Visual_Masks536_g116974;
				float temp_output_935_0_g116974 = ( Wetness_Mask866_g116974 * _WetnessSmoothnessValue );
				float lerpResult941_g116974 = lerp( temp_output_935_0_g116974 , 2.0 , Water_Mask760_g116974);
				#ifdef TVE_WETNESS_WATER
				float staticSwitch959_g116974 = lerpResult941_g116974;
				#else
				float staticSwitch959_g116974 = temp_output_935_0_g116974;
				#endif
				float4 appendResult661_g116974 = (float4(break658_g116974.x , break658_g116974.y , break658_g116974.z , saturate( ( break658_g116974.w + staticSwitch959_g116974 ) )));
				#ifdef TVE_WETNESS
				float4 staticSwitch586_g116974 = appendResult661_g116974;
				#else
				float4 staticSwitch586_g116974 = Visual_Masks536_g116974;
				#endif
				half4 Final_Masks482_g116974 = staticSwitch586_g116974;
				float4 In_Shader3_g116976 = Final_Masks482_g116974;
				float4 In_Emissive3_g116976 = Out_Emissive4_g116975;
				float In_Grayscale3_g116976 = Out_Grayscale4_g116975;
				float In_Luminosity3_g116976 = Out_Luminosity4_g116975;
				float In_MultiMask3_g116976 = Out_MultiMask4_g116975;
				float In_AlphaClip3_g116976 = Out_AlphaClip4_g116975;
				float In_AlphaFade3_g116976 = Out_AlphaFade4_g116975;
				float3 In_Translucency3_g116976 = Out_Translucency4_g116975;
				float In_Transmission3_g116976 = Out_Transmission4_g116975;
				float In_Thickness3_g116976 = Out_Thickness4_g116975;
				float In_Diffusion3_g116976 = Out_Diffusion4_g116975;
				Data3_g116976.Dummy = In_Dummy3_g116976;
				Data3_g116976.Albedo = In_Albedo3_g116976;
				Data3_g116976.AlbedoRaw = In_AlbedoRaw3_g116976;
				Data3_g116976.NormalTS = In_NormalTS3_g116976;
				Data3_g116976.NormalWS = In_NormalWS3_g116976;
				Data3_g116976.Shader = In_Shader3_g116976;
				Data3_g116976.Emissive= In_Emissive3_g116976;
				Data3_g116976.MultiMask = In_MultiMask3_g116976;
				Data3_g116976.Grayscale = In_Grayscale3_g116976;
				Data3_g116976.Luminosity = In_Luminosity3_g116976;
				Data3_g116976.AlphaClip = In_AlphaClip3_g116976;
				Data3_g116976.AlphaFade = In_AlphaFade3_g116976;
				Data3_g116976.Translucency = In_Translucency3_g116976;
				Data3_g116976.Transmission = In_Transmission3_g116976;
				Data3_g116976.Thickness = In_Thickness3_g116976;
				Data3_g116976.Diffusion = In_Diffusion3_g116976;
				TVEVisualData Data4_g117012 = Data3_g116976;
				float Out_Dummy4_g117012 = 0;
				float3 Out_Albedo4_g117012 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g117012 = float3( 0,0,0 );
				float2 Out_NormalTS4_g117012 = float2( 0,0 );
				float3 Out_NormalWS4_g117012 = float3( 0,0,0 );
				float4 Out_Shader4_g117012 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g117012 = float4( 0,0,0,0 );
				float Out_MultiMask4_g117012 = 0;
				float Out_Grayscale4_g117012 = 0;
				float Out_Luminosity4_g117012 = 0;
				float Out_AlphaClip4_g117012 = 0;
				float Out_AlphaFade4_g117012 = 0;
				float3 Out_Translucency4_g117012 = float3( 0,0,0 );
				float Out_Transmission4_g117012 = 0;
				float Out_Thickness4_g117012 = 0;
				float Out_Diffusion4_g117012 = 0;
				Out_Dummy4_g117012 = Data4_g117012.Dummy;
				Out_Albedo4_g117012 = Data4_g117012.Albedo;
				Out_AlbedoRaw4_g117012 = Data4_g117012.AlbedoRaw;
				Out_NormalTS4_g117012 = Data4_g117012.NormalTS;
				Out_NormalWS4_g117012 = Data4_g117012.NormalWS;
				Out_Shader4_g117012 = Data4_g117012.Shader;
				Out_Emissive4_g117012= Data4_g117012.Emissive;
				Out_MultiMask4_g117012 = Data4_g117012.MultiMask;
				Out_Grayscale4_g117012 = Data4_g117012.Grayscale;
				Out_Luminosity4_g117012= Data4_g117012.Luminosity;
				Out_AlphaClip4_g117012 = Data4_g117012.AlphaClip;
				Out_AlphaFade4_g117012 = Data4_g117012.AlphaFade;
				Out_Translucency4_g117012 = Data4_g117012.Translucency;
				Out_Transmission4_g117012 = Data4_g117012.Transmission;
				Out_Thickness4_g117012 = Data4_g117012.Thickness;
				Out_Diffusion4_g117012 = Data4_g117012.Diffusion;
				float3 temp_output_297_0_g117003 = Out_Albedo4_g117012;
				float3 In_Albedo3_g117013 = temp_output_297_0_g117003;
				float3 temp_output_297_23_g117003 = Out_AlbedoRaw4_g117012;
				float3 In_AlbedoRaw3_g117013 = temp_output_297_23_g117003;
				float2 In_NormalTS3_g117013 = Out_NormalTS4_g117012;
				float3 In_NormalWS3_g117013 = Out_NormalWS4_g117012;
				float4 In_Shader3_g117013 = Out_Shader4_g117012;
				float4 temp_cast_36 = (0.0).xxxx;
				half4 Visual_Emissive255_g117003 = Out_Emissive4_g117012;
				half Emissive_MeshMask221_g117003 = 1.0;
				half Emissive_Mask103_g117003 = 1.0;
				float temp_output_279_0_g117003 = ( Emissive_MeshMask221_g117003 * Emissive_Mask103_g117003 );
				float3 appendResult293_g117003 = (float3(temp_output_279_0_g117003 , temp_output_279_0_g117003 , temp_output_279_0_g117003));
				half3 Local_EmissiveColor278_g117003 = appendResult293_g117003;
				float3 temp_cast_37 = (1.0).xxx;
				TVEGlobalData Data15_g117004 = Data204_g115912;
				float Out_Dummy15_g117004 = 0;
				float4 Out_CoatParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g117004 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g117004 = float4( 0,0,0,0 );
				Out_Dummy15_g117004 = Data15_g117004.Dummy;
				Out_CoatParams15_g117004 = Data15_g117004.CoatParams;
				Out_PaintParams15_g117004 = Data15_g117004.PaintParams;
				Out_GlowParams15_g117004 = Data15_g117004.GlowParams;
				Out_AtmoParams15_g117004= Data15_g117004.AtmoParams;
				Out_FadeParams15_g117004= Data15_g117004.FadeParams;
				Out_FormParams15_g117004 = Data15_g117004.FormParams;
				Out_LandParams15_g117004 = Data15_g117004.LandParams;
				Out_WindParams15_g117004 = Data15_g117004.WindParams;
				Out_PushParams15_g117004 = Data15_g117004.PushParams;
				half4 Global_GlowParams179_g117003 = Out_GlowParams15_g117004;
				float3 lerpResult299_g117003 = lerp( float3( 1,1,1 ) , (Global_GlowParams179_g117003).xyz , TVE_IsEnabled);
				#ifdef TVE_EMISSIVE_ELEMENT
				float3 staticSwitch228_g117003 = lerpResult299_g117003;
				#else
				float3 staticSwitch228_g117003 = temp_cast_37;
				#endif
				half3 Emissive_GlobalMask248_g117003 = staticSwitch228_g117003;
				half3 Visual_AlbedoRaw306_g117003 = temp_output_297_23_g117003;
				float3 lerpResult307_g117003 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g117003 , _EmissiveColorMode);
				half3 Local_EmissiveValue88_g117003 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g117003 * lerpResult307_g117003 );
				half3 Emissive_Blend260_g117003 = ( ( (Visual_Emissive255_g117003).xyz * Local_EmissiveColor278_g117003 ) * Local_EmissiveValue88_g117003 );
				float3 temp_output_3_0_g117017 = Emissive_Blend260_g117003;
				float temp_output_15_0_g117017 = _emissive_power_value;
				float3 temp_output_23_0_g117017 = ( temp_output_3_0_g117017 * temp_output_15_0_g117017 );
				half Local_EmissiveMask294_g117003 = temp_output_279_0_g117003;
				float4 appendResult295_g117003 = (float4(temp_output_23_0_g117017 , Local_EmissiveMask294_g117003));
				#ifdef TVE_EMISSIVE
				float4 staticSwitch129_g117003 = appendResult295_g117003;
				#else
				float4 staticSwitch129_g117003 = temp_cast_36;
				#endif
				half4 Final_Emissive184_g117003 = staticSwitch129_g117003;
				float4 In_Emissive3_g117013 = Final_Emissive184_g117003;
				float In_Grayscale3_g117013 = Out_Grayscale4_g117012;
				float In_Luminosity3_g117013 = Out_Luminosity4_g117012;
				float temp_output_297_11_g117003 = Out_MultiMask4_g117012;
				float In_MultiMask3_g117013 = temp_output_297_11_g117003;
				float In_AlphaClip3_g117013 = Out_AlphaClip4_g117012;
				float In_AlphaFade3_g117013 = Out_AlphaFade4_g117012;
				float3 In_Translucency3_g117013 = Out_Translucency4_g117012;
				float In_Transmission3_g117013 = Out_Transmission4_g117012;
				float In_Thickness3_g117013 = Out_Thickness4_g117012;
				float In_Diffusion3_g117013 = Out_Diffusion4_g117012;
				Data3_g117013.Dummy = In_Dummy3_g117013;
				Data3_g117013.Albedo = In_Albedo3_g117013;
				Data3_g117013.AlbedoRaw = In_AlbedoRaw3_g117013;
				Data3_g117013.NormalTS = In_NormalTS3_g117013;
				Data3_g117013.NormalWS = In_NormalWS3_g117013;
				Data3_g117013.Shader = In_Shader3_g117013;
				Data3_g117013.Emissive= In_Emissive3_g117013;
				Data3_g117013.MultiMask = In_MultiMask3_g117013;
				Data3_g117013.Grayscale = In_Grayscale3_g117013;
				Data3_g117013.Luminosity = In_Luminosity3_g117013;
				Data3_g117013.AlphaClip = In_AlphaClip3_g117013;
				Data3_g117013.AlphaFade = In_AlphaFade3_g117013;
				Data3_g117013.Translucency = In_Translucency3_g117013;
				Data3_g117013.Transmission = In_Transmission3_g117013;
				Data3_g117013.Thickness = In_Thickness3_g117013;
				Data3_g117013.Diffusion = In_Diffusion3_g117013;
				TVEVisualData Data4_g117029 = Data3_g117013;
				float Out_Dummy4_g117029 = 0;
				float3 Out_Albedo4_g117029 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g117029 = float3( 0,0,0 );
				float2 Out_NormalTS4_g117029 = float2( 0,0 );
				float3 Out_NormalWS4_g117029 = float3( 0,0,0 );
				float4 Out_Shader4_g117029 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g117029 = float4( 0,0,0,0 );
				float Out_MultiMask4_g117029 = 0;
				float Out_Grayscale4_g117029 = 0;
				float Out_Luminosity4_g117029 = 0;
				float Out_AlphaClip4_g117029 = 0;
				float Out_AlphaFade4_g117029 = 0;
				float3 Out_Translucency4_g117029 = float3( 0,0,0 );
				float Out_Transmission4_g117029 = 0;
				float Out_Thickness4_g117029 = 0;
				float Out_Diffusion4_g117029 = 0;
				Out_Dummy4_g117029 = Data4_g117029.Dummy;
				Out_Albedo4_g117029 = Data4_g117029.Albedo;
				Out_AlbedoRaw4_g117029 = Data4_g117029.AlbedoRaw;
				Out_NormalTS4_g117029 = Data4_g117029.NormalTS;
				Out_NormalWS4_g117029 = Data4_g117029.NormalWS;
				Out_Shader4_g117029 = Data4_g117029.Shader;
				Out_Emissive4_g117029= Data4_g117029.Emissive;
				Out_MultiMask4_g117029 = Data4_g117029.MultiMask;
				Out_Grayscale4_g117029 = Data4_g117029.Grayscale;
				Out_Luminosity4_g117029= Data4_g117029.Luminosity;
				Out_AlphaClip4_g117029 = Data4_g117029.AlphaClip;
				Out_AlphaFade4_g117029 = Data4_g117029.AlphaFade;
				Out_Translucency4_g117029 = Data4_g117029.Translucency;
				Out_Transmission4_g117029 = Data4_g117029.Transmission;
				Out_Thickness4_g117029 = Data4_g117029.Thickness;
				Out_Diffusion4_g117029 = Data4_g117029.Diffusion;
				float3 In_Albedo3_g117019 = Out_Albedo4_g117029;
				float3 In_AlbedoRaw3_g117019 = Out_AlbedoRaw4_g117029;
				float2 In_NormalTS3_g117019 = Out_NormalTS4_g117029;
				float3 In_NormalWS3_g117019 = Out_NormalWS4_g117029;
				float4 In_Shader3_g117019 = Out_Shader4_g117029;
				float4 In_Emissive3_g117019 = Out_Emissive4_g117029;
				float In_Grayscale3_g117019 = Out_Grayscale4_g117029;
				float In_Luminosity3_g117019 = Out_Luminosity4_g117029;
				float temp_output_836_11_g117018 = Out_MultiMask4_g117029;
				float In_MultiMask3_g117019 = temp_output_836_11_g117018;
				half Visual_AlphaClip667_g117018 = Out_AlphaClip4_g117029;
				TVEGlobalData Data15_g117028 = Data204_g115912;
				float Out_Dummy15_g117028 = 0;
				float4 Out_CoatParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g117028 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g117028 = float4( 0,0,0,0 );
				Out_Dummy15_g117028 = Data15_g117028.Dummy;
				Out_CoatParams15_g117028 = Data15_g117028.CoatParams;
				Out_PaintParams15_g117028 = Data15_g117028.PaintParams;
				Out_GlowParams15_g117028 = Data15_g117028.GlowParams;
				Out_AtmoParams15_g117028= Data15_g117028.AtmoParams;
				Out_FadeParams15_g117028= Data15_g117028.FadeParams;
				Out_FormParams15_g117028 = Data15_g117028.FormParams;
				Out_LandParams15_g117028 = Data15_g117028.LandParams;
				Out_WindParams15_g117028 = Data15_g117028.WindParams;
				Out_PushParams15_g117028 = Data15_g117028.PushParams;
				half4 Global_FadeParams516_g117018 = Out_FadeParams15_g117028;
				#ifdef TVE_CUTOUT_ELEMENT
				float staticSwitch663_g117018 = saturate( (Global_FadeParams516_g117018).w );
				#else
				float staticSwitch663_g117018 = 1.0;
				#endif
				half Local_GlobalMask429_g117018 = staticSwitch663_g117018;
				half Local_AlphaMask814_g117018 = 1.0;
				half Local_NoiseMask678_g117018 = 1.0;
				half Local_VertMask766_g117018 = 1.0;
				half Local_MultiMask685_g117018 = 1.0;
				float lerpResult728_g117018 = lerp( Visual_AlphaClip667_g117018 , min( Visual_AlphaClip667_g117018 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g117018 ) - ( Local_AlphaMask814_g117018 * Local_NoiseMask678_g117018 * Local_VertMask766_g117018 ) ) ) ) , Local_MultiMask685_g117018);
				half Local_AlphaClip784_g117018 = lerpResult728_g117018;
				#ifdef TVE_CUTOUT
				float staticSwitch577_g117018 = Local_AlphaClip784_g117018;
				#else
				float staticSwitch577_g117018 = Visual_AlphaClip667_g117018;
				#endif
				half Final_AlphaClip795_g117018 = staticSwitch577_g117018;
				float In_AlphaClip3_g117019 = Final_AlphaClip795_g117018;
				float In_AlphaFade3_g117019 = Out_AlphaFade4_g117029;
				float3 In_Translucency3_g117019 = Out_Translucency4_g117029;
				float In_Transmission3_g117019 = Out_Transmission4_g117029;
				float In_Thickness3_g117019 = Out_Thickness4_g117029;
				float In_Diffusion3_g117019 = Out_Diffusion4_g117029;
				Data3_g117019.Dummy = In_Dummy3_g117019;
				Data3_g117019.Albedo = In_Albedo3_g117019;
				Data3_g117019.AlbedoRaw = In_AlbedoRaw3_g117019;
				Data3_g117019.NormalTS = In_NormalTS3_g117019;
				Data3_g117019.NormalWS = In_NormalWS3_g117019;
				Data3_g117019.Shader = In_Shader3_g117019;
				Data3_g117019.Emissive= In_Emissive3_g117019;
				Data3_g117019.MultiMask = In_MultiMask3_g117019;
				Data3_g117019.Grayscale = In_Grayscale3_g117019;
				Data3_g117019.Luminosity = In_Luminosity3_g117019;
				Data3_g117019.AlphaClip = In_AlphaClip3_g117019;
				Data3_g117019.AlphaFade = In_AlphaFade3_g117019;
				Data3_g117019.Translucency = In_Translucency3_g117019;
				Data3_g117019.Transmission = In_Transmission3_g117019;
				Data3_g117019.Thickness = In_Thickness3_g117019;
				Data3_g117019.Diffusion = In_Diffusion3_g117019;
				TVEVisualData Data4_g117042 = Data3_g117019;
				float Out_Dummy4_g117042 = 0;
				float3 Out_Albedo4_g117042 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g117042 = float3( 0,0,0 );
				float2 Out_NormalTS4_g117042 = float2( 0,0 );
				float3 Out_NormalWS4_g117042 = float3( 0,0,0 );
				float4 Out_Shader4_g117042 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g117042 = float4( 0,0,0,0 );
				float Out_MultiMask4_g117042 = 0;
				float Out_Grayscale4_g117042 = 0;
				float Out_Luminosity4_g117042 = 0;
				float Out_AlphaClip4_g117042 = 0;
				float Out_AlphaFade4_g117042 = 0;
				float3 Out_Translucency4_g117042 = float3( 0,0,0 );
				float Out_Transmission4_g117042 = 0;
				float Out_Thickness4_g117042 = 0;
				float Out_Diffusion4_g117042 = 0;
				Out_Dummy4_g117042 = Data4_g117042.Dummy;
				Out_Albedo4_g117042 = Data4_g117042.Albedo;
				Out_AlbedoRaw4_g117042 = Data4_g117042.AlbedoRaw;
				Out_NormalTS4_g117042 = Data4_g117042.NormalTS;
				Out_NormalWS4_g117042 = Data4_g117042.NormalWS;
				Out_Shader4_g117042 = Data4_g117042.Shader;
				Out_Emissive4_g117042= Data4_g117042.Emissive;
				Out_MultiMask4_g117042 = Data4_g117042.MultiMask;
				Out_Grayscale4_g117042 = Data4_g117042.Grayscale;
				Out_Luminosity4_g117042= Data4_g117042.Luminosity;
				Out_AlphaClip4_g117042 = Data4_g117042.AlphaClip;
				Out_AlphaFade4_g117042 = Data4_g117042.AlphaFade;
				Out_Translucency4_g117042 = Data4_g117042.Translucency;
				Out_Transmission4_g117042 = Data4_g117042.Transmission;
				Out_Thickness4_g117042 = Data4_g117042.Thickness;
				Out_Diffusion4_g117042 = Data4_g117042.Diffusion;
				float temp_output_3_0_g117044 = Out_AlphaClip4_g117042;
				float Alpha19_g117044 = temp_output_3_0_g117044;
				float temp_output_15_0_g117044 = 0.5;
				float Treshold19_g117044 = temp_output_15_0_g117044;
				#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_DITHER)
				#if defined ( TVE_PIPELINE_HD)
				#if !defined(SHADERPASS_FORWARD_BYPASS_ALPHA_TEST) && !defined(SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST)
				clip(Alpha19_g117044 - Treshold19_g117044);
				#endif
				#else
				clip(Alpha19_g117044 - Treshold19_g117044);
				#endif
				#endif
				
				o.Normal = fixed3( 0, 0, 1 );
				#if !defined(ASE_LIGHTING_SIMPLE)
					o.Occlusion = 1;
				#endif
				o.Alpha = Alpha19_g117044;
				float AlphaClipThreshold = 0.5;
				float AlphaClipThresholdShadow = 0.5;

				#ifdef _ALPHATEST_SHADOW_ON
					if (unity_LightShadowBias.z != 0.0)
						clip(o.Alpha - AlphaClipThresholdShadow);
					#ifdef _ALPHATEST_ON
					else
						clip(o.Alpha - AlphaClipThreshold);
					#endif
				#else
					#ifdef _ALPHATEST_ON
						clip(o.Alpha - AlphaClipThreshold);
					#endif
				#endif

				#if defined( CAN_SKIP_VPOS )
				float2 vpos = IN.pos;
				#endif

				#ifdef UNITY_STANDARD_USE_DITHER_MASK
					half alphaRef = tex3D(_DitherMaskLOD, float3(vpos.xy*0.25,o.Alpha*0.9375)).a;
					clip(alphaRef - 0.01);
				#endif

				#ifdef _DEPTHOFFSET_ON
					outputDepth = IN.pos.z;
				#endif

				SHADOW_CASTER_FRAGMENT(IN)
			}
			ENDCG
		}
		
	}
	CustomEditor "TVEShaderGUICore"
	
	Fallback Off
}
/*ASEBEGIN
Version=19603
Node;AmplifyShaderEditor.FunctionNode;1046;-4352,-384;Inherit;False;Block Model;471;;114306;7ad7765e793a6714babedee0033c36e9;14,289,0,240,0,290,0,291,0,181,0,183,0,185,0,188,0,190,0,184,0,192,0,189,0,300,0,193,0;10;102;FLOAT3;0,0,0;False;163;FLOAT3;0,0,0;False;186;FLOAT3;0,0,0;False;187;FLOAT3;0,0,0;False;166;FLOAT3;0,0,0;False;164;FLOAT3;0,0,0;False;301;FLOAT3;0,0,0;False;167;FLOAT4;0,0,0,0;False;172;FLOAT4;0,0,0,0;False;175;FLOAT4;0,0,0,0;False;2;OBJECT;128;OBJECT;314
Node;AmplifyShaderEditor.RegisterLocalVarNode;799;-4032,-320;Half;False;Model Frag;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;805;-3584,-384;Inherit;False;799;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1068;-3328,-384;Inherit;False;Block Global;36;;115912;212e17d4006dc88449d56ce0340cb5ff;20,315,0,311,1,388,1,317,1,321,1,319,0,376,1,323,0,337,0,282,0,371,0,349,0,385,0,287,0,285,0,276,0,283,0,308,0,348,1,289,1;1;206;OBJECT;0,0,0,0;False;1;OBJECT;151
Node;AmplifyShaderEditor.RegisterLocalVarNode;807;-3008,-384;Half;False;Global Data;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;816;-1536,-256;Inherit;False;807;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1084;-1536,-384;Inherit;False;Block Terrain Layers;85;;116777;ef8fd3ec282e419478dcf625231d8508;0;0;1;OBJECT;9091
Node;AmplifyShaderEditor.GetLocalVarNode;820;-1152,-256;Inherit;False;807;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1069;-1152,-384;Inherit;False;Block Tinting;272;;116891;9f39e156ea8d89e4997ea2a1e194137e;7,352,0,400,0,334,1,336,1,339,0,355,0,344,0;4;198;OBJECT;0,0,0,0;False;223;OBJECT;0,0,0,0;False;207;OBJECT;0,0,0,0;False;346;FLOAT;1;False;1;OBJECT;204
Node;AmplifyShaderEditor.GetLocalVarNode;825;-768,-192;Inherit;False;807;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1070;-768,-384;Inherit;False;Block Dryness;301;;116915;f05795de23f951c45bb73c8b4321e4b7;7,398,0,482,0,400,1,403,1,405,0,442,0,410,0;4;279;OBJECT;0,0,0,0;False;297;OBJECT;0,0,0,0;False;281;OBJECT;0,0,0,0;False;409;FLOAT;1;False;1;OBJECT;346
Node;AmplifyShaderEditor.GetLocalVarNode;824;-768,-256;Inherit;False;799;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;827;-384,-192;Inherit;False;807;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;828;-384,-256;Inherit;False;799;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1071;-384,-384;Inherit;False;Block Overlay;333;;116938;8ae9c8285a7817844a51243251284d21;9,821,1,819,1,813,0,910,0,826,1,823,1,828,0,844,0,447,0;4;572;OBJECT;0,0,0,0;False;596;OBJECT;0,0,0,0;False;600;OBJECT;0,0,0,0;False;445;FLOAT;1;False;1;OBJECT;566
Node;AmplifyShaderEditor.GetLocalVarNode;835;0,-256;Inherit;False;807;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1072;0,-384;Inherit;False;Block Wetness;379;;116974;52c5a1f52507fc44e926833b126e7855;8,850,0,1075,0,857,1,945,1,930,1,1092,0,851,1,1107,0;3;572;OBJECT;0,0,0,0;False;596;OBJECT;0,0,0,0;False;600;OBJECT;0,0,0,0;False;1;OBJECT;566
Node;AmplifyShaderEditor.RegisterLocalVarNode;804;-4032,-384;Half;False;Model Vert;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;1007;384,-256;Inherit;False;807;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1073;384,-384;Inherit;False;Block Emissive;438;;117003;64497f287b9096b43b688b52b4a0bf20;5,282,0,273,1,275,0,264,0,267,0;3;146;OBJECT;0,0,0,0;False;148;OBJECT;0,0,0,0;False;178;OBJECT;0,0,0,0;False;1;OBJECT;183
Node;AmplifyShaderEditor.GetLocalVarNode;800;-2560,-256;Inherit;False;807;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;801;-2560,-384;Inherit;False;804;Model Vert;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1074;768,-384;Inherit;False;Block Cutout;420;;117018;866b4a5fe67e7f34085520e1bb5be2b7;5,775,0,777,0,815,0,779,0,817,0;3;572;OBJECT;0,0,0,0;False;596;OBJECT;0,0,0,0;False;600;OBJECT;0,0,0,0;False;1;OBJECT;566
Node;AmplifyShaderEditor.FunctionNode;1077;-2304,-384;Inherit;False;Block Terrain Surface;462;;117031;96b819750ac2c854b90e8e52674e7c45;0;2;146;OBJECT;0,0,0,0;False;212;OBJECT;0,0,0,0;False;1;OBJECT;128
Node;AmplifyShaderEditor.RegisterLocalVarNode;1083;-1984,-384;Half;False;Model Data;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.RegisterLocalVarNode;836;1088,-384;Half;False;Visual Data;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;837;1792,-384;Inherit;False;836;Visual Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;810;1792,-320;Inherit;False;1083;Model Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.RangedFloatNode;1026;1792,-640;Half;False;Property;_IsTerrainShader;_IsTerrainShader;481;1;[HideInInspector];Create;True;0;2;Opaque;0;Transparent;1;0;True;0;False;1;1;0;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.FunctionNode;785;2560,-640;Inherit;False;Base Compile;-1;;117037;e67c8238031dbf04ab79a5d4d63d1b4f;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.FunctionNode;1082;2048,-384;Inherit;False;Block Terrain Render;0;;117038;494080da1e9aade47a313fe971224c33;0;2;17;OBJECT;;False;19;OBJECT;;False;15;FLOAT3;21;FLOAT3;22;FLOAT3;34;FLOAT3;77;FLOAT;26;FLOAT;27;FLOAT;109;FLOAT;108;FLOAT;72;FLOAT;28;FLOAT;71;FLOAT3;37;FLOAT3;30;FLOAT3;32;FLOAT4;33
Node;AmplifyShaderEditor.RangedFloatNode;1027;2016,-640;Half;False;Property;_IsSimpleShader;_IsSimpleShader;482;1;[HideInInspector];Create;True;0;2;Opaque;0;Transparent;1;0;True;0;False;1;1;0;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;777;1728,704;Float;False;False;-1;2;ASEMaterialInspector;0;15;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;ExtraPrePass;0;0;ExtraPrePass;6;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;2;False;0;False;True;1;1;False;;0;False;;0;1;False;;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;True;True;0;False;;0;False;;True;1;LightMode=ForwardBase;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;778;2560,-384;Float;False;True;-1;2;TVEShaderGUICore;0;15;BOXOPHOBIC/The Visual Engine/Landscape/Terrain Simple Lit;28cd5599e02859647ae1798e4fcaef6c;True;ForwardBase;0;1;ForwardBase;20;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;4;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=True=DisableBatching;TerrainCompatible=True;True;5;False;0;False;True;1;1;False;;0;False;;0;1;False;;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;1;LightMode=ForwardBase;False;False;0;;0;0;Standard;42;Category;1;638373972442289626;Workflow;2;638539631429617125;Surface;0;0;  Blend;0;0;  Refraction Model;0;0;  Dither Shadows;1;0;Two Sided;1;0;Deferred Pass;0;638541445037211954;Transmission;0;0;  Transmission Shadow;0.5,False,;0;Translucency;0;0;  Translucency Strength;1,False,;0;  Normal Distortion;0.5,False,;0;  Scattering;2,False,;0;  Direct;0.9,False,;0;  Ambient;0.1,False,;0;  Shadow;0.5,False,;0;Cast Shadows;1;0;  Use Shadow Threshold;0;0;Receive Shadows;1;0;Receive Specular;1;0;GPU Instancing;0;638536066641770925;LOD CrossFade;1;0;Built-in Fog;1;0;Ambient Light;1;0;Meta Pass;1;0;Add Pass;1;0;Override Baked GI;0;0;Extra Pre Pass;0;0;Tessellation;0;0;  Phong;0;0;  Strength;0.5,False,;0;  Type;0;0;  Tess;16,False,;0;  Min;10,False,;0;  Max;25,False,;0;  Edge Length;16,False,;0;  Max Displacement;25,False,;0;Fwd Specular Highlights Toggle;0;0;Fwd Reflections Toggle;0;0;Disable Batching;1;638373943661845087;Vertex Position,InvertActionOnDeselection;0;638373943651339933;0;6;False;True;True;False;True;True;True;;True;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;779;-480,0;Float;False;False;-1;2;ASEMaterialInspector;0;15;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;ForwardAdd;0;2;ForwardAdd;0;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;2;False;0;False;True;4;1;False;;1;False;;0;1;False;;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;2;False;;False;False;True;1;LightMode=ForwardAdd;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;780;-480,0;Float;False;False;-1;2;ASEMaterialInspector;0;15;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;Deferred;0;3;Deferred;0;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;2;False;0;False;False;False;False;False;False;False;False;False;False;False;False;True;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;1;LightMode=Deferred;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;781;-480,0;Float;False;False;-1;2;ASEMaterialInspector;0;15;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;Meta;0;4;Meta;0;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;2;False;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;2;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;1;LightMode=Meta;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;782;-480,0;Float;False;False;-1;2;ASEMaterialInspector;0;15;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;ShadowCaster;0;5;ShadowCaster;0;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;2;False;0;False;False;False;False;False;False;False;False;False;False;False;False;True;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;True;1;False;;True;3;False;;False;True;1;LightMode=ShadowCaster;False;False;0;;0;0;Standard;0;False;0
WireConnection;799;0;1046;314
WireConnection;1068;206;805;0
WireConnection;807;0;1068;151
WireConnection;1069;198;1084;9091
WireConnection;1069;207;816;0
WireConnection;1070;279;1069;204
WireConnection;1070;281;820;0
WireConnection;1071;572;1070;346
WireConnection;1071;596;824;0
WireConnection;1071;600;825;0
WireConnection;1072;572;1071;566
WireConnection;1072;596;828;0
WireConnection;1072;600;827;0
WireConnection;804;0;1046;128
WireConnection;1073;146;1072;566
WireConnection;1073;178;835;0
WireConnection;1074;572;1073;183
WireConnection;1074;600;1007;0
WireConnection;1077;146;801;0
WireConnection;1077;212;800;0
WireConnection;1083;0;1077;128
WireConnection;836;0;1074;566
WireConnection;1082;17;837;0
WireConnection;1082;19;810;0
WireConnection;778;0;1082;21
WireConnection;778;1;1082;22
WireConnection;778;2;1082;34
WireConnection;778;20;1082;109
WireConnection;778;21;1082;108
WireConnection;778;7;1082;28
WireConnection;778;15;1082;30
WireConnection;778;16;1082;32
WireConnection;778;17;1082;33
ASEEND*/
//CHKSM=B161CCB9C5A8FBC38431B8F4617EEF869D9EBF9D