// Made with Amplify Shader Editor v1.9.6.3
// Available at the Unity Asset Store - http://u3d.as/y3X 
Shader "BOXOPHOBIC/The Visual Engine/Landscape/Terrain Standard Lit"
{
	Properties
	{
		[HideInInspector] _AlphaCutoff("Alpha Cutoff ", Range(0, 1)) = 0.5
		[HideInInspector]_IsVersion("_IsVersion", Float) = 2040
		[HideInInspector]_IsTVEShader("_IsTVEShader", Float) = 1
		[HideInInspector]_IsShared("_IsShared", Float) = 0
		[HideInInspector]_IsIdentifier("_IsIdentifier", Float) = 0
		[HideInInspector]_IsCollected("_IsCollected", Float) = 0
		[HideInInspector]_IsConverted("_IsConverted", Float) = 0
		[HideInInspector]_IsCustomShader("_IsCustomShader", Float) = 0
		[HideInInspector]_HasDefaultTextures("_HasDefaultTextures", Float) = 0
		[StyledCategory(Render Settings, true, 0, 10)]_RenderCategory("[ Render Category ]", Float) = 1
		[Enum(Off,0,On,1)]_RenderSSR("Render SSR", Float) = 0
		[Enum(Off,0,On,1)]_RenderDecals("Render Decals", Float) = 0
		[Enum(Off,0,On,1)]_RenderSpecular("Render Specular", Float) = 1
		[Enum(Off,0,On,1)]_RenderShadow("Render Shadows", Float) = 1
		[Enum(Default,0,Point ,1,Low,2,Medium,3,High,4)]_RenderFilter("Render Filtering", Float) = 0
		[Enum(Off,0,On,1)]_RenderClip("Render Clipping", Float) = 0
		[StyledSpace(10)]_RenderEnd("[ Render End ]", Float) = 1
		[StyledCategory(Global Settings, true, 0, 10)]_GlobalCategory("[ Global Category ]", Float) = 1
		[StyledEnum(Paint Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalPaintLayerValue("Global Paint Layer", Float) = 0
		[StyledEnum(Atmo Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalAtmoLayerValue("Global Atmo Layer", Float) = 0
		[StyledEnum(Fade Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalFadeLayerValue("Global Fade Layer", Float) = 0
		[StyledEnum(Glow Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalGlowLayerValue("Global Glow Layer", Float) = 0
		[StyledEnum(Land Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)]_GlobalLandLayerValue("Global Land Layer", Float) = 0
		[StyledSpace(10)]_GlobalEnd("[ Global End ]", Float) = 1
		[StyledCategory(Terrain Settings, true, 0, 10)]_CategoryTerrain("[Category Terrain ]", Float) = 1
		[HideInInspector]_TerrainSize("Terrain Size", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainPosition("Terrain Position", Vector) = (0,0,0,0)
		[Enum(4 Layers,4,8 Layers,8,12 Layers,12,16 Layers,16)]_TerrainLayersMode("Terrain Layers", Float) = 4
		[Enum(Default,0,Packed,1)]_TerrainTextureMode("Terrain Maps", Float) = 0
		[HDR]_TerrainColor("Terrain Color", Color) = (1,1,1,1)
		_TerrainNormalValue("Terrain Normal", Range( -8 , 8)) = 1
		_TerrainMetallicValue("Terrain Metallic", Range( 0 , 1)) = 1
		_TerrainOcclusionValue("Terrain Occlusion", Range( 0 , 1)) = 1
		_TerrainSmoothnessValue("Terrain Smoothness", Range( 0 , 1)) = 1
		_TerrainHeightBlendValue("Terrain Height Blend", Range( 0 , 1)) = 1
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)][Space(10)]_TerrainSampleMode1("Terrain 01 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode2("Terrain 02 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode3("Terrain 03 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode4("Terrain 04 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode5("Terrain 05 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode6("Terrain 06 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode7("Terrain 07 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode8("Terrain 08 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode9("Terrain 09 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode10("Terrain 10 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode11("Terrain 11 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode12("Terrain 12 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode13("Terrain 13 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode14("Terrain 14 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode15("Terrain 15 Sampling", Float) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)]_TerrainSampleMode16("Terrain 16 Sampling", Float) = 0
		[HideInInspector]_TerrainHolesTex("Terrain Holes", 2D) = "white" {}
		[HideInInspector]_TerrainControlTex1("Terrain Control 01", 2D) = "black" {}
		[HideInInspector]_TerrainControlTex2("Terrain Control 02", 2D) = "black" {}
		[HideInInspector]_TerrainControlTex3("Terrain Control 03", 2D) = "black" {}
		[HideInInspector]_TerrainControlTex4("Terrain Control 04", 2D) = "black" {}
		[HideInInspector]_TerrainColor1("Terrain Color 01", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor2("Terrain Color 02", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor3("Terrain Color 03", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor4("Terrain Color 04", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor5("Terrain Color 05", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor6("Terrain Color 06", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor7("Terrain Color 07", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor8("Terrain Color 08", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor9("Terrain Color 09", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor10("Terrain Color 10", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor11("Terrain Color 11", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor12("Terrain Color 12", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor13("Terrain Color 13", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor14("Terrain Color 14", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor15("Terrain Color 15", Color) = (1,1,1,1)
		[HideInInspector]_TerrainColor16("Terrain Color 16", Color) = (1,1,1,1)
		[HideInInspector]_TerrainAlbedoTex1("Terrain Albedo 01", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex2("Terrain Albedo 02", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex3("Terrain Albedo 03", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex4("Terrain Albedo 04", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex5("Terrain Albedo 05", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex6("Terrain Albedo 06", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex7("Terrain Albedo 07", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex8("Terrain Albedo 08", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex9("Terrain Albedo 09", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex10("Terrain Albedo 10", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex11("Terrain Albedo 11", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex12("Terrain Albedo 12", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex13("Terrain Albedo 13", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex14("Terrain Albedo 14", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex15("Terrain Albedo 15", 2D) = "white" {}
		[HideInInspector]_TerrainAlbedoTex16("Terrain Albedo 16", 2D) = "white" {}
		[HideInInspector]_TerrainNormalTex1("Terrain Normal 01", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex2("Terrain Normal 02", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex3("Terrain Normal 03", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex4("Terrain Normal 04", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex5("Terrain Normal 05", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex6("Terrain Normal 06", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex7("Terrain Normal 07", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex8("Terrain Normal 08", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex13("Terrain Normal 13", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex9("Terrain Normal 09", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex10("Terrain Normal 10", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex11("Terrain Normal 11", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex12("Terrain Normal 12", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex14("Terrain Normal 14", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex15("Terrain Normal 15", 2D) = "gray" {}
		[HideInInspector]_TerrainNormalTex16("Terrain Normal 16", 2D) = "gray" {}
		[HideInInspector]_TerrainShaderTex1("Terrain Shader 01", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex2("Terrain Shader 02", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex3("Terrain Shader 03", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex4("Terrain Shader 04", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex5("Terrain Shader 05", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex6("Terrain Shader 06", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex7("Terrain Shader 07", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex8("Terrain Shader 08", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex9("Terrain Shader 09", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex10("Terrain Shader 10", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex11("Terrain Shader 11", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex12("Terrain Shader 12", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex13("Terrain Shader 13", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex14("Terrain Shader 14", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex15("Terrain Shader 15", 2D) = "white" {}
		[HideInInspector]_TerrainShaderTex16("Terrain Shader 16", 2D) = "white" {}
		[HideInInspector]_TerrainShaderMin1("Shader Min 01", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax1("Shader Max 01", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin2("Shader Min 02", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax2("Shader Max 02", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin3("Shader Min 03", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax3("Shader Max 03", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin4("Shader Min 04", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax4("Shader Max 04", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin5("Shader Min 05", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax5("Shader Max 05", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin6("Shader Min 06", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax6("Shader Max 06", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin7("Shader Min 07", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax7("Shader Max 07", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin8("Shader Min 08", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax8("Shader Max 08", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin9("Shader Min 09", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax9("Shader Max 09", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin10("Shader Min 10", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax10("Shader Max 10", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin11("Shader Min 11", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax11("Shader Max 11", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin12("Shader Min 12", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax12("Shader Max 12", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin13("Shader Min 13", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax13("Shader Max 13", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin14("Shader Min 14", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax14("Shader Max 14", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin15("Shader Min 15", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax15("Shader Max 15", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMin16("Shader Min 16", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainShaderMax16("Shader Max 16", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams1("Terrain Params 01", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams2("Terrain Params 02", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams3("Terrain Params 03", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams4("Terrain Params 04", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams5("Terrain Params 05", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams6("Terrain Params 06", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams7("Terrain Params 07", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams8("Terrain Params 08", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams9("Terrain Params 09", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams10("Terrain Params 10", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams11("Terrain Params 11", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams12("Terrain Params 12", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams13("Terrain Params 13", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams14("Terrain Params 14", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams15("Terrain Params 15", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainParams16("Terrain Params 16", Vector) = (0,0,0,0)
		[HideInInspector]_TerrainCoord1("Terrain Coords 01", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord2("Terrain Coords 02", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord3("Terrain Coords 03", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord5("Terrain Coords 05", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord4("Terrain Coords 04", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord6("Terrain Coords 06", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord7("Terrain Coords 07", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord8("Terrain Coords 08", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord9("Terrain Coords 09", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord10("Terrain Coords 10", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord11("Terrain Coords 11", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord12("Terrain Coords 12", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord13("Terrain Coords 13", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord14("Terrain Coords 14", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord15("Terrain Coords 15", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainCoord16("Terrain Coords 16", Vector) = (1,1,0,0)
		[HideInInspector]_TerrainSpecular1("Terrain Specular 01", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular2("Terrain Specular 02", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular3("Terrain Specular 03", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular4("Terrain Specular 04", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular5("Terrain Specular 05", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular6("Terrain Specular 06", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular7("Terrain Specular 07", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular8("Terrain Specular 08", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular9("Terrain Specular 09", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular10("Terrain Specular 10", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular11("Terrain Specular 11", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular12("Terrain Specular 12", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular13("Terrain Specular 13", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular14("Terrain Specular 14", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular15("Terrain Specular 15", Color) = (0,0,0,0)
		[HideInInspector]_TerrainSpecular16("Terrain Specular 16", Color) = (0,0,0,0)
		[StyledSpace(10)]_EndTerrain("[End Terrain ]", Float) = 1
		[StyledCategory(Tinting Settings, true, 0, 10)]_TintingCategory("[ Tinting Category ]", Float) = 1
		[StyledMessage(Info, The current settings are pre baked to the impostor., 0, 10)]_TintingBakeInfo("Tinting Baking Info", Float) = 0
		_TintingIntensityValue("Tinting Intensity", Range( 0 , 1)) = 0
		_TintingGrayValue("Tinting Gray", Range( 0 , 1)) = 1
		[HDR][Gamma]_TintingColor("Tinting Color", Color) = (1,1,1,1)
		[StyledSpace(10)]_TintingSpace("[ Tinting Space ]", Float) = 1
		_TintingMultiValue("Tinting Multi Mask", Range( 0 , 1)) = 1
		_TintingLumaValue("Tinting Luma Mask", Range( 0 , 1)) = 1
		[StyledRemapSlider]_TintingLumaRemap("Tinting Luma Mask", Vector) = (0,1,0,0)
		[StyledRemapSlider]_TintingBlendRemap("Tinting Blend Mask", Vector) = (0.1,0.2,0,0)
		[Space(10)][StyledToggle]_TintingElementMode("Use Paint Globals / Elements", Float) = 1
		[StyledSpace(10)]_TintingEnd("[ Tinting End]", Float) = 1
		[StyledCategory(Dryness Settings, true, 0, 10)]_DrynessCategory("[ Dryness Category ]", Float) = 1
		[StyledMessage(Info, The current settings are pre baked to the impostor., 0, 10)]_DrynessBakeInfo("Dryness Baking Info", Float) = 0
		_DrynessIntensityValue("Dryness Intensity", Range( 0 , 1)) = 0
		_DrynessGrayValue("Dryness Gray", Range( 0 , 1)) = 1
		_DrynessShiftValue("Dryness Shift", Range( 0 , 1)) = 0
		[HDR][Gamma]_DrynessColor("Dryness Color", Color) = (1,0.7083712,0.495283,1)
		_DrynessSubsurfaceValue("Dryness Subsurface", Range( 0 , 1)) = 0.5
		_DrynessSmoothnessValue("Dryness Smoothness", Range( 0 , 1)) = 0.5
		[StyledSpace(10)]_DrynessSpace("[ Dryness Space ]", Float) = 1
		_DrynessMultiValue("Dryness Multi Mask", Range( 0 , 1)) = 1
		_DrynessLumaValue("Dryness Luma Mask", Range( 0 , 1)) = 1
		[StyledRemapSlider]_DrynessLumaRemap("Dryness Luma Mask", Vector) = (0,1,0,0)
		[StyledRemapSlider]_DrynessBlendRemap("Dryness Blend Mask", Vector) = (0.1,0.2,0,0)
		[Space(10)][StyledToggle]_DrynessElementMode("Use Atmo Globals / Elements", Float) = 1
		[StyledSpace(10)]_DrynessEnd("[ Dryness End ]", Float) = 1
		[StyledCategory(Overlay Settings, true, 0, 10)]_OverlayCategory("[ Overlay Category ]", Float) = 1
		[StyledMessage(Info, The current settings are pre baked to the impostor., 0, 10)]_OverlayBakeInfo("Overlay Baking Info", Float) = 0
		_OverlayIntensityValue("Overlay Intensity", Range( 0 , 1)) = 0
		[Enum(Off,0,On,1)]_OverlayTextureMode("Overlay Maps", Float) = 0
		[Space(10)][StyledTextureSingleLine]_OverlayAlbedoTex("Overlay Albedo", 2D) = "white" {}
		[StyledTextureSingleLine]_OverlayNormalTex("Overlay Normal", 2D) = "bump" {}
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochastic Triplanar,3)][Space(10)]_OverlaySampleMode("Overlay Sampling", Float) = 0
		[Enum(Tilling And Offset,0,Scale And Offset,1)]_OverlayCoordMode("Overlay UV Mode", Float) = 0
		[StyledVector(9)]_OverlayCoordValue("Overlay UV Value", Vector) = (1,1,0,0)
		[HDR]_OverlayColor("Overlay Color", Color) = (0.2815503,0.4009458,0.5377358,1)
		_OverlayNormalValue("Overlay Normal", Range( -8 , 8)) = 1
		_OverlaySubsurfaceValue("Overlay Subsurface", Range( 0 , 1)) = 0.5
		_OverlaySmoothnessValue("Overlay Smoothness", Range( 0 , 1)) = 0.5
		[Space(10)][StyledTextureSingleLine]_OverlayGlitterTexRT("Overlay Glitter RT", 2D) = "black" {}
		[Space(10)]_OverlayGlitterIntensityValue("Overlay Glitter Intensity", Range( 0 , 1)) = 0
		[HDR]_OverlayGlitterColor("Overlay Glitter Color", Color) = (0.7215686,1.913725,2.996078,1)
		_OverlayGlitterTillingValue("Overlay Glitter Tilling", Range( 0 , 8)) = 4
		_OverlayGlitterDistValue("Overlay Glitter Limit", Range( 0 , 200)) = 100
		[StyledSpace(10)]_OverlaySpace("[ Overlay Space ]", Float) = 1
		_OverlayLumaValue("Overlay Luma Mask", Range( 0 , 1)) = 1
		[StyledRemapSlider]_OverlayLumaRemap("Overlay Luma Mask", Vector) = (0,1,0,0)
		_OverlayProjValue("Overlay ProjY Mask", Range( 0 , 1)) = 0.5
		[StyledRemapSlider]_OverlayProjRemap("Overlay ProjY Mask", Vector) = (0,1,0,0)
		[StyledRemapSlider]_OverlayBlendRemap1("Overlay Blend Mask", Vector) = (0.1,0.2,0,0)
		[Space(10)][StyledToggle]_OverlayElementMode("Use Atmo Globals / Elements", Float) = 1
		[HideInInspector]_overlay_coord_value("_overlay_coord_value", Vector) = (1,1,0,0)
		[StyledSpace(10)]_OverlayEnd("[ Overlay End ]", Float) = 1
		[StyledCategory(Wetness Settings, true, 0, 10)]_WetnessCategory("[ Wetness Category ]", Float) = 1
		[StyledMessage(Info, The current settings are pre baked to the impostor., 0, 10)]_WetnessBakeInfo("Wetness Baking Info", Float) = 0
		_WetnessIntensityValue("Wetness Intensity", Range( 0 , 1)) = 0
		_WetnessContrastValue("Wetness Contrast", Range( 0 , 1)) = 0.2
		_WetnessSmoothnessValue("Wetness Smoothness", Range( 0 , 1)) = 0.8
		[Space(10)]_WetnessWaterIntensityValue("Wetness Water Intensity", Range( 0 , 1)) = 0
		[HDR]_WetnessWaterColor("Wetness Water Color", Color) = (0.5420078,0.7924528,0.6068289,1)
		_WetnessWaterBaseValue("Wetness Water Base Mask", Range( 0 , 1)) = 1
		[StyledRemapSlider]_WetnessWaterBlendRemap("Wetness Water Blend Mask", Vector) = (0.1,0.2,0,0)
		[Space(10)][StyledTextureSingleLine]_WetnessDropsTexRT("Wetness Drops RT", 2D) = "white" {}
		[Space(10)]_WetnessDropsIntensityValue("Wetness Drops Intensity", Range( 0 , 1)) = 1
		_WetnessDropsNormalValue("Wetness Drops Normal", Range( -8 , 8)) = 1
		_WetnessDropsTillingValue("Wetness Drops Tilling", Range( 0 , 8)) = 0.25
		_WetnessDropsDistValue("Wetness Drops Limit", Range( 0 , 200)) = 50
		[Space(10)][StyledToggle]_WetnessElementMode("Use Atmo Globals / Elements", Float) = 1
		[StyledSpace(10)]_WetnessEnd("[ Wetness End ]", Float) = 1
		[StyledCategory(Cutout Settings, true, 0, 10)]_CutoutCategory("[ Cutout Category ]", Float) = 1
		[StyledMessage(Info, The current settings are pre baked to the impostor., 0, 10)]_CutoutBakeInfo("Cutout Baking Info", Float) = 0
		_CutoutIntensityValue("Cutout Intensity", Range( 0 , 1)) = 0
		[Enum(Off,0,Affect Shadow Pass,1)]_CutoutShadowMode("Cutout Shadow", Float) = 1
		[Space(10)][StyledToggle]_CutoutElementMode("Use Fade Globals / Elements", Float) = 1
		[StyledSpace(10)]_CutoutEnd("[ Cutout End ]", Float) = 1
		[StyledCategory(Emissive Settings, true, 0, 10)]_EmissiveCategory("[ Emissive Category ]", Float) = 1
		_EmissiveIntensityValue("Emissive Intensity", Range( 0 , 1)) = 0
		[Enum(None,0,Any,1,Baked,2,Realtime,3)]_EmissiveFlagMode("Emissive GI Mode", Float) = 0
		[Enum(Constant,0,Multiply With Base Albedo,1)]_EmissiveColorMode("Emissive Color", Float) = 0
		[HDR]_EmissiveColor("Emissive Color", Color) = (1,1,1,1)
		[Enum(Nits,0,EV100,1)]_EmissivePowerMode("Emissive Power", Float) = 0
		_EmissivePowerValue("Emissive Power", Float) = 1
		_EmissiveExposureValue("Emissive Weight", Range( 0 , 1)) = 0.5
		[Space(10)][StyledToggle]_EmissiveElementMode("Use Glow Globals / Elements", Float) = 0
		[StyledSpace(10)]_EmissiveEnd("[ Emissive End ]", Float) = 1
		[HideInInspector]_emissive_power_value("_emissive_power_value", Float) = 1
		[StyledCategory(Landscape Settings, true, 0, 10)]_LandscapeCategory("[ Landscape Category ]", Float) = 1
		[StyledMessage(Info, The Landscape feature require elements to work. Use Land Height elements to offset the terrain height. Please note__ the height effect is only visual and it does not affect the actual terrain height., 0, 10)]_LandscapeInfo("# Landscape Info", Float) = 0
		_LandscapeHeightValue("Landscape Height", Range( 0 , 1)) = 0
		[StyledSpace(10)]_LandscapeEnd("[ Landscape End ]", Float) = 1
		[HideInInspector]_object_phase_mode("_object_phase_mode", Vector) = (0,0,0,0)
		[HideInInspector]_IsTerrainShader("_IsTerrainShader", Float) = 1
		[HideInInspector]_IsStandardShader("_IsStandardShader", Float) = 1

		[HideInInspector] _RenderQueueType("Render Queue Type", Float) = 1
		//[HideInInspector][ToggleUI] _AddPrecomputedVelocity("Add Precomputed Velocity", Float) = 1
		[HideInInspector][ToggleUI] _SupportDecals("Support Decals", Float) = 1.0
		[HideInInspector] _StencilRef("Stencil Ref", Int) = 0 // StencilUsage.Clear
		[HideInInspector] _StencilWriteMask("Stencil Write Mask", Int) = 3 // StencilUsage.RequiresDeferredLighting | StencilUsage.SubsurfaceScattering
		[HideInInspector] _StencilRefDepth("Stencil Ref Depth", Int) = 0 // Nothing
		[HideInInspector] _StencilWriteMaskDepth("Stencil Write Mask Depth", Int) = 8 // StencilUsage.TraceReflectionRay
		[HideInInspector] _StencilRefMV("Stencil Ref MV", Int) = 32 // StencilUsage.ObjectMotionVector
		[HideInInspector] _StencilWriteMaskMV("Stencil Write Mask MV", Int) = 32 // StencilUsage.ObjectMotionVector
		[HideInInspector] _StencilRefDistortionVec("Stencil Ref Distortion Vec", Int) = 4 				// DEPRECATED
		[HideInInspector] _StencilWriteMaskDistortionVec("Stencil Write Mask Distortion Vec", Int) = 4	// DEPRECATED
		[HideInInspector] _StencilWriteMaskGBuffer("Stencil Write Mask GBuffer", Int) = 3 // StencilUsage.RequiresDeferredLighting | StencilUsage.SubsurfaceScattering
		[HideInInspector] _StencilRefGBuffer("Stencil Ref GBuffer", Int) = 2 // StencilUsage.RequiresDeferredLighting
		[HideInInspector] _ZTestGBuffer("ZTest GBuffer", Int) = 4
		[HideInInspector][ToggleUI] _RequireSplitLighting("Require Split Lighting", Float) = 0
		[HideInInspector][ToggleUI] _ReceivesSSR("Receives SSR", Float) = 1
		[HideInInspector][ToggleUI] _ReceivesSSRTransparent("Receives SSR Transparent", Float) = 0
		[HideInInspector] _SurfaceType("Surface Type", Float) = 0
		[HideInInspector] _BlendMode("Blend Mode", Float) = 0
		[HideInInspector] _SrcBlend("Src Blend", Float) = 1
		[HideInInspector] _DstBlend("Dst Blend", Float) = 0
		[HideInInspector] _DstBlend2("__dst2", Float) = 0
		[HideInInspector] _AlphaSrcBlend("Alpha Src Blend", Float) = 1
		[HideInInspector] _AlphaDstBlend("Alpha Dst Blend", Float) = 0
		[HideInInspector][ToggleUI] _ZWrite("ZWrite", Float) = 1
		[HideInInspector][ToggleUI] _TransparentZWrite("Transparent ZWrite", Float) = 0
		[HideInInspector] _CullMode("Cull Mode", Float) = 2
		[HideInInspector] _TransparentSortPriority("Transparent Sort Priority", Float) = 0
		[HideInInspector][ToggleUI] _EnableFogOnTransparent("Enable Fog", Float) = 1
		[HideInInspector] _CullModeForward("Cull Mode Forward", Float) = 2 // This mode is dedicated to Forward to correctly handle backface then front face rendering thin transparent
		[HideInInspector][Enum(UnityEngine.Rendering.HighDefinition.TransparentCullMode)] _TransparentCullMode("Transparent Cull Mode", Int) = 2 // Back culling by default
		[HideInInspector] _ZTestDepthEqualForOpaque("ZTest Depth Equal For Opaque", Int) = 4 // Less equal
		[HideInInspector][Enum(UnityEngine.Rendering.CompareFunction)] _ZTestTransparent("ZTest Transparent", Int) = 4 // Less equal
		[HideInInspector][ToggleUI] _TransparentBackfaceEnable("Transparent Backface Enable", Float) = 0
		[HideInInspector][ToggleUI] _AlphaCutoffEnable("Alpha Cutoff Enable", Float) = 0
		[HideInInspector][ToggleUI] _UseShadowThreshold("Use Shadow Threshold", Float) = 0
		[HideInInspector][ToggleUI] _DoubleSidedEnable("Double Sided Enable", Float) = 0
		[HideInInspector][Enum(Flip, 0, Mirror, 1, None, 2)] _DoubleSidedNormalMode("Double Sided Normal Mode", Float) = 2
		[HideInInspector] _DoubleSidedConstants("DoubleSidedConstants", Vector) = (1,1,-1,0)

		//_TessPhongStrength( "Tess Phong Strength", Range( 0, 1 ) ) = 0.5
		//_TessValue( "Tess Max Tessellation", Range( 1, 32 ) ) = 16
		//_TessMin( "Tess Min Distance", Float ) = 10
		//_TessMax( "Tess Max Distance", Float ) = 25
		//_TessEdgeLength ( "Tess Edge length", Range( 2, 50 ) ) = 16
		//_TessMaxDisp( "Tess Max Displacement", Float ) = 25

		[HideInInspector][ToggleUI] _TransparentWritingMotionVec("Transparent Writing MotionVec", Float) = 0
		[HideInInspector][ToggleUI] _PerPixelSorting("_PerPixelSorting", Float) = 0.0
		[HideInInspector][Enum(UnityEngine.Rendering.HighDefinition.OpaqueCullMode)] _OpaqueCullMode("Opaque Cull Mode", Int) = 2 // Back culling by default
		[HideInInspector][ToggleUI] _EnableBlendModePreserveSpecularLighting("Enable Blend Mode Preserve Specular Lighting", Float) = 1
		[HideInInspector] _EmissionColor("Color", Color) = (1, 1, 1)

		[HideInInspector][NoScaleOffset] unity_Lightmaps("unity_Lightmaps", 2DArray) = "" {}
        [HideInInspector][NoScaleOffset] unity_LightmapsInd("unity_LightmapsInd", 2DArray) = "" {}
        [HideInInspector][NoScaleOffset] unity_ShadowMasks("unity_ShadowMasks", 2DArray) = "" {}

		[HideInInspector][Enum(Auto, 0, On, 1, Off, 2)] _DoubleSidedGIMode("Double sided GI mode", Float) = 0

		[HideInInspector][ToggleUI] _AlphaToMaskInspectorValue("_AlphaToMaskInspectorValue", Float) = 0 // Property used to save the alpha to mask state in the inspector
        [HideInInspector][ToggleUI] _AlphaToMask("__alphaToMask", Float) = 0

		//_Refrac ( "Refraction Model", Float) = 0
        [HideInInspector][ToggleUI]_DepthOffsetEnable("Boolean", Float) = 1
        [HideInInspector][ToggleUI]_ConservativeDepthOffsetEnable("Boolean", Float) = 1
	}

	SubShader
	{
		LOD 0

		

		Tags { "RenderPipeline"="HDRenderPipeline" "RenderType"="Opaque" "Queue"="Geometry" "TerrainCompatible"="True" }

		HLSLINCLUDE
		#pragma target 4.5
		#pragma exclude_renderers glcore gles gles3 

		#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
		#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Filtering.hlsl"

		struct GlobalSurfaceDescription // GBuffer Forward META TransparentBackface
		{
			float3 BaseColor;
			float3 Normal;
			float3 BentNormal;
			float3 Specular;
			float CoatMask;
			float Metallic;
			float3 Emission;
			float Smoothness;
			float Occlusion;
			float Alpha;
			float AlphaClipThreshold;
			float AlphaClipThresholdShadow;
			float AlphaClipThresholdDepthPrepass;
			float AlphaClipThresholdDepthPostpass;
			float SpecularOcclusion;
			float SpecularAAScreenSpaceVariance;
			float SpecularAAThreshold;
			float RefractionIndex;
			float3 RefractionColor;
			float RefractionDistance;
			float DiffusionProfile;
			float TransmissionMask;
			float Thickness;
			float SubsurfaceMask;
			float Anisotropy;
			float3 Tangent;
			float IridescenceMask;
			float IridescenceThickness;
			float3 BakedGI;
			float3 BakedBackGI;
			float DepthOffset;
			float4 VTPackedFeedback;
		};

		struct AlphaSurfaceDescription // ShadowCaster
		{
			float3 Emission;
			float Alpha;
			float AlphaClipThreshold;
			float AlphaClipThresholdShadow;
			float3 BakedGI;
			float3 BakedBackGI;
			float DepthOffset;
			float4 VTPackedFeedback;
		};

		struct SceneSurfaceDescription // SceneSelection
		{
		    float3 Emission;
			float Alpha;
			float AlphaClipThreshold;
			float AlphaClipThresholdShadow;
			float RefractionIndex;
			float3 RefractionColor;
			float RefractionDistance;
			float3 BakedGI;
			float3 BakedBackGI;
			float DepthOffset;
			float4 VTPackedFeedback;
		};

		struct PrePassSurfaceDescription // DepthPrePass
		{
			float3 Normal;
			float3 Emission;
			float Smoothness;
			float Alpha;
			float AlphaClipThreshold;
			float AlphaClipThresholdShadow;
			float AlphaClipThresholdDepthPrepass;
			float3 BakedGI;
			float3 BakedBackGI;
			float DepthOffset;
			float4 VTPackedFeedback;
		};

		struct PostPassSurfaceDescription //DepthPostPass
		{
			float3 Emission;
			float Alpha;
			float AlphaClipThreshold;
			float AlphaClipThresholdShadow;
			float AlphaClipThresholdDepthPostpass;
			float3 BakedGI;
			float3 BakedBackGI;
			float DepthOffset;
			float4 VTPackedFeedback;
		};

		struct SmoothSurfaceDescription // MotionVectors DepthOnly
		{
			float3 Normal;
			float3 Emission;
			float Smoothness;
			float Alpha;
			float AlphaClipThreshold;
			float AlphaClipThresholdShadow;
			float3 BakedGI;
			float3 BakedBackGI;
			float DepthOffset;
			float4 VTPackedFeedback;
		};

        struct PickingSurfaceDescription //Picking
		{
            float3 BentNormal;
			float3 Emission;
			float Alpha;
			float AlphaClipThreshold;
			float AlphaClipThresholdShadow;
			float3 BakedGI;
			float3 BakedBackGI;
			float DepthOffset;
			float4 VTPackedFeedback;

			float3 ObjectSpaceNormal;
			float3 WorldSpaceNormal;
			float3 TangentSpaceNormal;
			float3 ObjectSpaceViewDirection;
			float3 WorldSpaceViewDirection;
			float3 ObjectSpacePosition;
		};

		#ifndef ASE_TESS_FUNCS
		#define ASE_TESS_FUNCS
		float4 FixedTess( float tessValue )
		{
			return tessValue;
		}

		float CalcDistanceTessFactor (float4 vertex, float minDist, float maxDist, float tess, float4x4 o2w, float3 cameraPos )
		{
			float3 wpos = mul(o2w,vertex).xyz;
			float dist = distance (wpos, cameraPos);
			float f = clamp(1.0 - (dist - minDist) / (maxDist - minDist), 0.01, 1.0) * tess;
			return f;
		}

		float4 CalcTriEdgeTessFactors (float3 triVertexFactors)
		{
			float4 tess;
			tess.x = 0.5 * (triVertexFactors.y + triVertexFactors.z);
			tess.y = 0.5 * (triVertexFactors.x + triVertexFactors.z);
			tess.z = 0.5 * (triVertexFactors.x + triVertexFactors.y);
			tess.w = (triVertexFactors.x + triVertexFactors.y + triVertexFactors.z) / 3.0f;
			return tess;
		}

		float CalcEdgeTessFactor (float3 wpos0, float3 wpos1, float edgeLen, float3 cameraPos, float4 scParams )
		{
			float dist = distance (0.5 * (wpos0+wpos1), cameraPos);
			float len = distance(wpos0, wpos1);
			float f = max(len * scParams.y / (edgeLen * dist), 1.0);
			return f;
		}

		float DistanceFromPlaneASE (float3 pos, float4 plane)
		{
			return dot (float4(pos,1.0f), plane);
		}

		bool WorldViewFrustumCull (float3 wpos0, float3 wpos1, float3 wpos2, float cullEps, float4 planes[6] )
		{
			float4 planeTest;
			planeTest.x = (( DistanceFromPlaneASE(wpos0, planes[0]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlaneASE(wpos1, planes[0]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlaneASE(wpos2, planes[0]) > -cullEps) ? 1.0f : 0.0f );
			planeTest.y = (( DistanceFromPlaneASE(wpos0, planes[1]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlaneASE(wpos1, planes[1]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlaneASE(wpos2, planes[1]) > -cullEps) ? 1.0f : 0.0f );
			planeTest.z = (( DistanceFromPlaneASE(wpos0, planes[2]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlaneASE(wpos1, planes[2]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlaneASE(wpos2, planes[2]) > -cullEps) ? 1.0f : 0.0f );
			planeTest.w = (( DistanceFromPlaneASE(wpos0, planes[3]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlaneASE(wpos1, planes[3]) > -cullEps) ? 1.0f : 0.0f ) +
						  (( DistanceFromPlaneASE(wpos2, planes[3]) > -cullEps) ? 1.0f : 0.0f );
			return !all (planeTest);
		}

		float4 DistanceBasedTess( float4 v0, float4 v1, float4 v2, float tess, float minDist, float maxDist, float4x4 o2w, float3 cameraPos )
		{
			float3 f;
			f.x = CalcDistanceTessFactor (v0,minDist,maxDist,tess,o2w,cameraPos);
			f.y = CalcDistanceTessFactor (v1,minDist,maxDist,tess,o2w,cameraPos);
			f.z = CalcDistanceTessFactor (v2,minDist,maxDist,tess,o2w,cameraPos);

			return CalcTriEdgeTessFactors (f);
		}

		float4 EdgeLengthBasedTess( float4 v0, float4 v1, float4 v2, float edgeLength, float4x4 o2w, float3 cameraPos, float4 scParams )
		{
			float3 pos0 = mul(o2w,v0).xyz;
			float3 pos1 = mul(o2w,v1).xyz;
			float3 pos2 = mul(o2w,v2).xyz;
			float4 tess;
			tess.x = CalcEdgeTessFactor (pos1, pos2, edgeLength, cameraPos, scParams);
			tess.y = CalcEdgeTessFactor (pos2, pos0, edgeLength, cameraPos, scParams);
			tess.z = CalcEdgeTessFactor (pos0, pos1, edgeLength, cameraPos, scParams);
			tess.w = (tess.x + tess.y + tess.z) / 3.0f;
			return tess;
		}

		float4 EdgeLengthBasedTessCull( float4 v0, float4 v1, float4 v2, float edgeLength, float maxDisplacement, float4x4 o2w, float3 cameraPos, float4 scParams, float4 planes[6] )
		{
			float3 pos0 = mul(o2w,v0).xyz;
			float3 pos1 = mul(o2w,v1).xyz;
			float3 pos2 = mul(o2w,v2).xyz;
			float4 tess;

			if (WorldViewFrustumCull(pos0, pos1, pos2, maxDisplacement, planes))
			{
				tess = 0.0f;
			}
			else
			{
				tess.x = CalcEdgeTessFactor (pos1, pos2, edgeLength, cameraPos, scParams);
				tess.y = CalcEdgeTessFactor (pos2, pos0, edgeLength, cameraPos, scParams);
				tess.z = CalcEdgeTessFactor (pos0, pos1, edgeLength, cameraPos, scParams);
				tess.w = (tess.x + tess.y + tess.z) / 3.0f;
			}
			return tess;
		}
		#endif //ASE_TESS_FUNCS
		ENDHLSL

		UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
	UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"

		Pass
		{
			
			Name "GBuffer"
			Tags { "LightMode"="GBuffer" }

			Cull [_CullMode]
			ZTest [_ZTestGBuffer]

			Stencil
			{
				Ref [_StencilRefGBuffer]
				WriteMask [_StencilWriteMaskGBuffer]
				Comp Always
				Pass Replace
			}


			HLSLPROGRAM
            #define _ENERGY_CONSERVING_SPECULAR 1
            #define SUPPORT_BLENDMODE_PRESERVE_SPECULAR_LIGHTING
            #pragma shader_feature_local_fragment _ _DISABLE_DECALS
            #define _SPECULAR_OCCLUSION_FROM_AO 1
            #define ASE_ABSOLUTE_VERTEX_POS 1
            #define _MATERIAL_FEATURE_SPECULAR_COLOR 1
            #define _AMBIENT_OCCLUSION 1
            #define HAVE_MESH_MODIFICATION
            #define ASE_SRP_VERSION 170003
            #define ASE_USING_SAMPLING_MACROS 1

            #pragma multi_compile _ DOTS_INSTANCING_ON

            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
            #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC _TRANSPARENT_REFRACTIVE_SORT
            #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT

			#pragma multi_compile_fragment _ RENDERING_LAYERS
            #pragma multi_compile_fragment _ SHADOWS_SHADOWMASK
            #pragma multi_compile _ DEBUG_DISPLAY
            #pragma multi_compile _ LIGHTMAP_ON
            #pragma multi_compile _ DIRLIGHTMAP_COMBINED
            #pragma multi_compile_fragment _ PROBE_VOLUMES_L1 PROBE_VOLUMES_L2
            #pragma multi_compile _ DYNAMICLIGHTMAP_ON
            #pragma multi_compile_fragment DECALS_OFF DECALS_3RT DECALS_4RT
            #pragma multi_compile_fragment _ DECAL_SURFACE_GRADIENT
            #pragma multi_compile _ USE_LEGACY_LIGHTMAPS

			#pragma vertex Vert
			#pragma fragment Frag

			#define SHADERPASS SHADERPASS_GBUFFER

			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/DebugMipmapStreamingMacros.hlsl"
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl"

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"

            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
                #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif

            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
                #define RAYTRACING_SHADER_GRAPH_LOW
            #endif

            #ifndef SHADER_UNLIT
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif

			#if defined(_DOUBLESIDED_ON) && !defined(ASE_NEED_CULLFACE)
			    #define ASE_NEED_CULLFACE 1
			#endif

            #if _MATERIAL_FEATURE_COLORED_TRANSMISSION
            #undef _MATERIAL_FEATURE_CLEAR_COAT
            #endif

		    #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
			#define OUTPUT_SPLIT_LIGHTING
		    #endif

		    #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
			#undef  _REFRACTION_PLANE
			#undef  _REFRACTION_SPHERE
			#define _REFRACTION_THIN
		    #endif

            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif

            #if SHADERPASS == SHADERPASS_MOTION_VECTORS && defined(WRITE_DECAL_BUFFER_AND_RENDERING_LAYER)
                #define WRITE_DECAL_BUFFER
            #endif

            #ifndef DEBUG_DISPLAY
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif

            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            #if (defined(_TRANSPARENT_WRITES_MOTION_VEC) || defined(_TRANSPARENT_REFRACTIVE_SORT)) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif

			CBUFFER_START( UnityPerMaterial )
			half4 _TerrainShaderMax13;
			half4 _TerrainCoord8;
			half4 _TerrainShaderMin8;
			half4 _TerrainShaderMax8;
			half4 _TerrainCoord9;
			half4 _TerrainShaderMin9;
			half4 _TerrainShaderMax9;
			half4 _TerrainCoord10;
			half4 _TerrainShaderMax7;
			half4 _TerrainShaderMin10;
			half4 _TerrainCoord11;
			half4 _TerrainShaderMin11;
			half4 _TerrainShaderMax11;
			half4 _TerrainCoord12;
			half4 _TerrainShaderMin12;
			half4 _TerrainShaderMax12;
			half4 _TerrainCoord13;
			half4 _TerrainShaderMax10;
			half4 _TerrainShaderMin13;
			half4 _TerrainShaderMin7;
			half4 _TerrainShaderMax6;
			half4 _TerrainShaderMin1;
			half4 _TerrainShaderMax1;
			half4 _TerrainCoord2;
			half4 _TerrainShaderMin2;
			half4 _TerrainShaderMax2;
			half4 _TerrainCoord3;
			half4 _TerrainShaderMin3;
			half4 _TerrainCoord7;
			half4 _TerrainShaderMax3;
			half4 _TerrainShaderMin4;
			half4 _TerrainShaderMax4;
			half4 _TerrainCoord5;
			half4 _TerrainShaderMin5;
			half4 _TerrainShaderMax5;
			half4 _TerrainCoord6;
			half4 _TerrainShaderMin6;
			half4 _TerrainCoord4;
			half4 _TerrainCoord1;
			half4 _TerrainParams15;
			half4 _TerrainShaderMin14;
			half4 _TerrainColor13;
			half4 _TerrainColor14;
			half4 _TerrainColor15;
			half4 _TerrainColor16;
			half4 _TerrainColor;
			half4 _TerrainParams1;
			half4 _TerrainParams2;
			half4 _TerrainColor12;
			half4 _TerrainParams3;
			half4 _TerrainParams5;
			half4 _TerrainParams6;
			half4 _TerrainParams7;
			half4 _TerrainParams8;
			half4 _TerrainParams9;
			half4 _TerrainParams10;
			half4 _TerrainParams11;
			half4 _TerrainParams4;
			half4 _TerrainCoord14;
			half4 _TerrainColor11;
			half4 _TerrainColor9;
			half4 _TerrainShaderMax14;
			half4 _TerrainCoord15;
			half4 _TerrainShaderMin15;
			half4 _TerrainShaderMax15;
			half4 _TerrainCoord16;
			half4 _TerrainShaderMin16;
			half4 _TerrainShaderMax16;
			half4 _TerrainColor10;
			half4 _TerrainParams14;
			half4 _TerrainColor2;
			half4 _TerrainColor3;
			half4 _TerrainColor4;
			half4 _TerrainColor5;
			half4 _TerrainColor6;
			half4 _TerrainColor7;
			half4 _TerrainColor8;
			half4 _TerrainColor1;
			half4 _TerrainParams12;
			float4 _TerrainControlTex1_TexelSize;
			half4 _TerrainPosition;
			float4 _TintingColor;
			half4 _TintingLumaRemap;
			half4 _TintingBlendRemap;
			float4 _DrynessColor;
			half4 _DrynessLumaRemap;
			half4 _DrynessBlendRemap;
			half4 _TerrainSize;
			half4 _OverlayColor;
			half4 _overlay_coord_value;
			half4 _OverlayCoordValue;
			half4 _OverlayGlitterColor;
			half4 _OverlayProjRemap;
			half4 _OverlayLumaRemap;
			half4 _OverlayBlendRemap1;
			half4 _WetnessWaterColor;
			half4 _WetnessWaterBlendRemap;
			half4 _EmissiveColor;
			half4 _TerrainSpecular16;
			half4 _TerrainSpecular15;
			half4 _object_phase_mode;
			half4 _TerrainSpecular13;
			half4 _TerrainParams16;
			half4 _TerrainSpecular1;
			half4 _TerrainSpecular14;
			half4 _TerrainSpecular2;
			half4 _TerrainSpecular3;
			half4 _TerrainSpecular4;
			half4 _TerrainSpecular5;
			half4 _TerrainSpecular6;
			half4 _TerrainSpecular7;
			half4 _TerrainSpecular8;
			half4 _TerrainParams13;
			half4 _TerrainSpecular10;
			half4 _TerrainSpecular12;
			half4 _TerrainSpecular11;
			half4 _TerrainSpecular9;
			half _DrynessIntensityValue;
			half _OverlaySubsurfaceValue;
			half _TerrainMetallicValue;
			half _WetnessWaterIntensityValue;
			half _WetnessIntensityValue;
			half _WetnessWaterBaseValue;
			half _TerrainNormalValue;
			half _WetnessContrastValue;
			half _WetnessDropsTillingValue;
			half _WetnessDropsNormalValue;
			half _WetnessDropsDistValue;
			half _WetnessSmoothnessValue;
			half _EmissiveIntensityValue;
			half _TintingElementMode;
			half _EmissiveColorMode;
			float _emissive_power_value;
			half _EmissiveExposureValue;
			half _CutoutIntensityValue;
			half _WetnessDropsIntensityValue;
			half _OverlaySmoothnessValue;
			half _OverlayLumaValue;
			half _TerrainOcclusionValue;
			half _DrynessMultiValue;
			half _DrynessShiftValue;
			half _DrynessLumaValue;
			half _DrynessGrayValue;
			half _DrynessSmoothnessValue;
			half _DrynessSubsurfaceValue;
			half _TintingLumaValue;
			half _OverlaySampleMode;
			half _OverlayNormalValue;
			half _OverlayCoordMode;
			half _OverlayTextureMode;
			half _OverlayGlitterIntensityValue;
			half _TintingIntensityValue;
			half _OverlayGlitterDistValue;
			half _OverlayIntensityValue;
			half _TintingGrayValue;
			half _OverlayProjValue;
			half _TerrainSmoothnessValue;
			half _TintingMultiValue;
			half _OverlayGlitterTillingValue;
			half _TerrainLayersMode;
			half _CutoutShadowMode;
			half _RenderEnd;
			half _IsTVEShader;
			half _IsCustomShader;
			half _IsShared;
			half _HasDefaultTextures;
			half _IsCollected;
			half _IsConverted;
			half _IsIdentifier;
			half _RenderDecals;
			half _RenderSSR;
			half _RenderClip;
			half _IsVersion;
			half _RenderShadow;
			half _RenderFilter;
			half _LandscapeCategory;
			half _RenderCategory;
			half _IsStandardShader;
			half _IsTerrainShader;
			half _TerrainTextureMode;
			half _TerrainSampleMode1;
			half _TerrainSampleMode2;
			half _TerrainSampleMode3;
			half _TerrainSampleMode4;
			half _TerrainSampleMode5;
			half _TerrainSampleMode6;
			half _TerrainSampleMode7;
			half _LandscapeEnd;
			half _TerrainSampleMode8;
			half _TerrainSampleMode10;
			half _TerrainSampleMode11;
			half _TerrainSampleMode12;
			half _TerrainSampleMode13;
			half _TerrainSampleMode14;
			half _TerrainSampleMode15;
			half _TerrainSampleMode16;
			half _TerrainSampleMode9;
			half _LandscapeInfo;
			half _GlobalCategory;
			half _GlobalEnd;
			half _OverlayCategory;
			half _OverlayEnd;
			half _OverlaySpace;
			half _OverlayElementMode;
			half _OverlayBakeInfo;
			half _DrynessCategory;
			half _DrynessEnd;
			half _WetnessBakeInfo;
			half _DrynessSpace;
			half _DrynessBakeInfo;
			half _TintingCategory;
			half _TintingEnd;
			half _TintingSpace;
			half _TintingBakeInfo;
			half _CategoryTerrain;
			half _EndTerrain;
			half _DrynessElementMode;
			half _TerrainHeightBlendValue;
			half _WetnessElementMode;
			half _WetnessCategory;
			half _GlobalPaintLayerValue;
			half _GlobalGlowLayerValue;
			half _GlobalAtmoLayerValue;
			half _GlobalFadeLayerValue;
			half _GlobalLandLayerValue;
			half _LandscapeHeightValue;
			half _CutoutCategory;
			half _WetnessEnd;
			half _CutoutEnd;
			half _CutoutBakeInfo;
			half _EmissiveCategory;
			half _EmissiveEnd;
			half _EmissivePowerMode;
			half _EmissivePowerValue;
			half _EmissiveElementMode;
			half _EmissiveFlagMode;
			half _CutoutElementMode;
			half _RenderSpecular;
			float4 _EmissionColor;
			float _AlphaCutoff;
			float _RenderQueueType;
			#ifdef _ADD_PRECOMPUTED_VELOCITY
			    float _AddPrecomputedVelocity;
			#endif
			float _StencilRef;
			float _StencilWriteMask;
			float _StencilRefDepth;
			float _StencilWriteMaskDepth;
			float _StencilRefMV;
			float _StencilWriteMaskMV;
			float _StencilRefDistortionVec;
			float _StencilWriteMaskDistortionVec;
			float _StencilWriteMaskGBuffer;
			float _StencilRefGBuffer;
			float _ZTestGBuffer;
			float _RequireSplitLighting;
			float _ReceivesSSR;
			float _SurfaceType;
			float _BlendMode;
            #ifdef SUPPORT_BLENDMODE_PRESERVE_SPECULAR_LIGHTING
			    float _EnableBlendModePreserveSpecularLighting;
            #endif
			float _SrcBlend;
			float _DstBlend;
			float _DstBlend2;
			float _AlphaSrcBlend;
			float _AlphaDstBlend;
			float _ZWrite;
			float _TransparentZWrite;
			float _CullMode;
			float _TransparentSortPriority;
			float _EnableFogOnTransparent;
			float _CullModeForward;
			float _TransparentCullMode;
			float _ZTestDepthEqualForOpaque;
			float _ZTestTransparent;
			float _TransparentBackfaceEnable;
			float _AlphaCutoffEnable;
			float _UseShadowThreshold;
			float _DoubleSidedEnable;
			float _DoubleSidedNormalMode;
			float4 _DoubleSidedConstants;
			#ifdef ASE_TESSELLATION
			    float _TessPhongStrength;
			    float _TessValue;
			    float _TessMin;
			    float _TessMax;
			    float _TessEdgeLength;
			    float _TessMaxDisp;
			#endif
			UNITY_TEXTURE_STREAMING_DEBUG_VARS;
			CBUFFER_END

            #ifdef SCENEPICKINGPASS
			float4 _SelectionID;
            #endif

            #ifdef SCENESELECTIONPASS
			int _ObjectId;
			int _PassValue;
            #endif

			float3 TVE_WorldOrigin;
			float4x4 unity_CameraProjection;
			float4x4 unity_CameraInvProjection;
			float4x4 unity_WorldToCamera;
			float4x4 unity_CameraToWorld;
			half4 TVE_CoatParams;
			float TVE_PaintLayers[10];
			TEXTURE2D_ARRAY(TVE_PaintBaseTex);
			half4 TVE_RenderBaseCoords;
			SAMPLER(sampler_Linear_Clamp);
			TEXTURE2D_ARRAY(TVE_PaintNearTex);
			half4 TVE_RenderNearCoords;
			SAMPLER(sampler_Linear_Repeat);
			float4 TVE_RenderNearPositionR;
			half TVE_RenderNearFadeValue;
			half4 TVE_PaintParams;
			float TVE_GlowLayers[10];
			TEXTURE2D_ARRAY(TVE_GlowBaseTex);
			TEXTURE2D_ARRAY(TVE_GlowNearTex);
			half4 TVE_GlowParams;
			float TVE_AtmoLayers[10];
			TEXTURE2D_ARRAY(TVE_AtmoBaseTex);
			TEXTURE2D_ARRAY(TVE_AtmoNearTex);
			half4 TVE_AtmoParams;
			float TVE_FadeLayers[10];
			TEXTURE2D_ARRAY(TVE_FadeBaseTex);
			TEXTURE2D_ARRAY(TVE_FadeNearTex);
			half4 TVE_FadeParams;
			half4 TVE_FormParams;
			float TVE_LandLayers[10];
			TEXTURE2D_ARRAY(TVE_LandBaseTex);
			TEXTURE2D_ARRAY(TVE_LandNearTex);
			half4 TVE_LandParams;
			half4 TVE_WindParams;
			half4 TVE_PushParams;
			half TVE_IsEnabled;
			TEXTURE2D(_TerrainControlTex1);
			TEXTURE2D(_TerrainControlTex2);
			TEXTURE2D(_TerrainControlTex3);
			TEXTURE2D(_TerrainControlTex4);
			TEXTURE2D(_TerrainShaderTex1);
			SAMPLER(sampler_Point_Repeat);
			SAMPLER(sampler_Linear_Repeat_Aniso8);
			TEXTURE2D(_TerrainShaderTex2);
			TEXTURE2D(_TerrainShaderTex3);
			TEXTURE2D(_TerrainShaderTex4);
			TEXTURE2D(_TerrainShaderTex5);
			TEXTURE2D(_TerrainShaderTex6);
			TEXTURE2D(_TerrainShaderTex7);
			TEXTURE2D(_TerrainShaderTex8);
			TEXTURE2D(_TerrainShaderTex9);
			TEXTURE2D(_TerrainShaderTex10);
			TEXTURE2D(_TerrainShaderTex11);
			TEXTURE2D(_TerrainShaderTex12);
			TEXTURE2D(_TerrainShaderTex13);
			TEXTURE2D(_TerrainShaderTex14);
			TEXTURE2D(_TerrainShaderTex15);
			TEXTURE2D(_TerrainShaderTex16);
			TEXTURE2D(_TerrainAlbedoTex1);
			TEXTURE2D(_TerrainAlbedoTex2);
			TEXTURE2D(_TerrainAlbedoTex3);
			TEXTURE2D(_TerrainAlbedoTex4);
			TEXTURE2D(_TerrainAlbedoTex5);
			TEXTURE2D(_TerrainAlbedoTex6);
			TEXTURE2D(_TerrainAlbedoTex7);
			TEXTURE2D(_TerrainAlbedoTex8);
			TEXTURE2D(_TerrainAlbedoTex9);
			TEXTURE2D(_TerrainAlbedoTex10);
			TEXTURE2D(_TerrainAlbedoTex11);
			TEXTURE2D(_TerrainAlbedoTex12);
			TEXTURE2D(_TerrainAlbedoTex13);
			TEXTURE2D(_TerrainAlbedoTex14);
			TEXTURE2D(_TerrainAlbedoTex15);
			TEXTURE2D(_TerrainAlbedoTex16);
			TEXTURE2D(_TerrainNormalTex1);
			TEXTURE2D(_TerrainNormalTex2);
			TEXTURE2D(_TerrainNormalTex3);
			TEXTURE2D(_TerrainNormalTex4);
			TEXTURE2D(_TerrainNormalTex5);
			TEXTURE2D(_TerrainNormalTex6);
			TEXTURE2D(_TerrainNormalTex7);
			TEXTURE2D(_TerrainNormalTex8);
			TEXTURE2D(_TerrainNormalTex9);
			TEXTURE2D(_TerrainNormalTex10);
			TEXTURE2D(_TerrainNormalTex11);
			TEXTURE2D(_TerrainNormalTex12);
			TEXTURE2D(_TerrainNormalTex13);
			TEXTURE2D(_TerrainNormalTex14);
			TEXTURE2D(_TerrainNormalTex15);
			TEXTURE2D(_TerrainNormalTex16);
			TEXTURE2D(_TerrainHolesTex);
			TEXTURE2D(_OverlayAlbedoTex);
			TEXTURE2D(_OverlayGlitterTexRT);
			TEXTURE2D(_OverlayNormalTex);
			TEXTURE2D(_WetnessDropsTexRT);
			#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
				TEXTURE2D(_TerrainHeightmapTexture);//ASE Terrain Instancing
				TEXTURE2D( _TerrainNormalmapTexture);//ASE Terrain Instancing
				SAMPLER(sampler_TerrainNormalmapTexture);//ASE Terrain Instancing
			#endif//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_START( Terrain )//ASE Terrain Instancing
				UNITY_DEFINE_INSTANCED_PROP( float4, _TerrainPatchInstanceData )//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_END( Terrain)//ASE Terrain Instancing
			CBUFFER_START( UnityTerrain)//ASE Terrain Instancing
				#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
					float4 _TerrainHeightmapRecipSize;//ASE Terrain Instancing
					float4 _TerrainHeightmapScale;//ASE Terrain Instancing
				#endif//ASE Terrain Instancing
			CBUFFER_END//ASE Terrain Instancing


            #ifdef DEBUG_DISPLAY
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
            #endif

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"

            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitDecalData.hlsl"

			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/CommonLighting.hlsl"
			#define ASE_NEEDS_VERT_POSITION
			#define ASE_NEEDS_VERT_NORMAL
			#define ASE_NEEDS_VERT_TANGENT
			#define ASE_NEEDS_FRAG_RELATIVE_WORLD_POS
			#define ASE_NEEDS_FRAG_WORLD_NORMAL
			#define ASE_NEEDS_FRAG_WORLD_TANGENT
			#pragma shader_feature_local_fragment TVE_PIPELINE_STANDARD TVE_PIPELINE_UNIVERSAL TVE_PIPELINE_HD
			#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
			#pragma shader_feature_local_vertex TVE_LANDSCAPE
			#pragma shader_feature_local_fragment TVE_WETNESS
			#pragma shader_feature_local_fragment TVE_OVERLAY
			#pragma shader_feature_local_fragment TVE_DRYNESS
			#pragma shader_feature_local_fragment TVE_TINTING
			#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
			#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
			#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
			#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
			#pragma shader_feature_local_fragment TVE_DRYNESS_SHIFT
			#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
			#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
			#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_WATER
			#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
			#pragma shader_feature_local_fragment TVE_EMISSIVE
			#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
			#pragma shader_feature_local_fragment TVE_CUTOUT
			#pragma shader_feature_local_fragment TVE_CUTOUT_SHADOW
			#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
			#pragma multi_compile_instancing
			#pragma instancing_options assumeuniformscaling nomatrices nolightprobe nolightmap
			  
			struct TVEVisualData
			{  
				half Dummy;  
				half3 Albedo;
				half3 AlbedoRaw;
				half2 NormalTS;
				half3 NormalWS; 
				half4 Shader;
				half4 Emissive;
				half AlphaClip;
				half AlphaFade;
				half MultiMask;
				half Grayscale;
				half Luminosity;
				half3 Translucency;
				half Transmission;
				half Thickness;
				float Diffusion;
			};  
			    
			struct TVEModelData
			{    
				half Dummy;    
				half3 PositionOS;
				half3 PositionWS;
				half3 PositionWO;
				half3 PositionRawOS;
				half3 PositionAddOS;
				half3 PivotOS;
				half3 PivotWS;
				half3 PivotWO;
				half3 NormalOS;
				half3 NormalWS;
				half3 NormalRawOS;
				half3 NormalRawWS;
				half4 TangentOS;
				half3 ViewDirWS;
				half4 VertexData;
				half4 MotionData;
				half4 BoundsData;
				half4 RotationData;
			};    
			      
			struct TVEGlobalData
			{      
				half Dummy;      
				half4 CoatParams;
				half4 PaintParams;
				half4 GlowParams;
				half4 AtmoParams;
				half4 FadeParams;
				half4 FormParams;
				half4 LandParams;
				half4 WindParams;
				half4 PushParams;
			};      
			        
			//#pragma editor_sync_compilation


			struct AttributesMesh
			{
				float3 positionOS : POSITION;
				float3 normalOS : NORMAL;
				float4 tangentOS : TANGENT;
				float4 uv1 : TEXCOORD1;
				float4 uv2 : TEXCOORD2;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;
				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct PackedVaryingsMeshToPS
			{
				SV_POSITION_QUALIFIERS float4 positionCS : SV_Position;
				float3 positionRWS : TEXCOORD0;
				float3 normalWS : TEXCOORD1;
				float4 tangentWS : TEXCOORD2;
				float4 uv1 : TEXCOORD3;
				float4 uv2 : TEXCOORD4;
				float4 ase_texcoord5 : TEXCOORD5;
				float4 ase_texcoord6 : TEXCOORD6;
				float4 ase_color : COLOR;
				float4 ase_texcoord7 : TEXCOORD7;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				UNITY_VERTEX_OUTPUT_STEREO
				#if defined(SHADER_STAGE_FRAGMENT) && defined(ASE_NEED_CULLFACE)
				FRONT_FACE_TYPE cullFace : FRONT_FACE_SEMANTIC;
				#endif
			};


			float3 ObjectPosition_UNITY_MATRIX_M(  )
			{
				return float3(UNITY_MATRIX_M[0].w, UNITY_MATRIX_M[1].w, UNITY_MATRIX_M[2].w );
			}
			
			void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
			{
				ZX = WorldPosition.xz * Coords.xx - Coords.zz;
				ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
				XY = WorldPosition.xy * Coords.xy - Coords.zw;
			}
			
			half4 SamplePlanar2D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
			{
				half3 powNormal = abs( WorldNormal.xyz );
				half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
				weights /= ( weights.x + weights.y + weights.z ).xxx;
				T1 = weights.y;
				T2 = weights.x;
				T3 = weights.z;
			}
			
			half4 SamplePlanar3D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
				half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
				half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
				return tex1 * T1 + tex2 * T2 + tex3 * T3;
			}
			
			void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
			{
				half2 vertex1, vertex2, vertex3;
				// Scaling of the input
				half2 uv = UV * 3.464; // 2 * sqrt (3)
				// Skew input space into simplex triangle grid
				const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
				half2 skewedCoord = mul( gridToSkewedGrid, uv );
				// Compute local triangle vertex IDs and local barycentric coordinates
				int2 baseId = int2( floor( skewedCoord ) );
				half3 temp = half3( frac( skewedCoord ), 0 );
				temp.z = 1.0 - temp.x - temp.y;
				if ( temp.z > 0.0 )
				{
					W1 = temp.z;
					W2 = temp.y;
					W3 = temp.x;
					vertex1 = baseId;
					vertex2 = baseId + int2( 0, 1 );
					vertex3 = baseId + int2( 1, 0 );
				}
				else
				{
					W1 = -temp.z;
					W2 = 1.0 - temp.y;
					W3 = 1.0 - temp.x;
					vertex1 = baseId + int2( 1, 1 );
					vertex2 = baseId + int2( 1, 0 );
					vertex3 = baseId + int2( 0, 1 );
				}
				UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
				UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
				UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
				return;
			}
			
			float4 SampleStochastic2D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
				half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
				half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
				half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
				return tex1 * W1 + tex2 * W2 + tex3 * W3;
			}
			
			half4 SampleStochastic3D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				half4 tex1, tex2, tex3;
				ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
				half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
				half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
				half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				return texZX * T1 + texZY * T2 + texXY * T3;
			}
			
			half3 HSVToRGB( half3 c )
			{
				half4 K = half4( 1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0 );
				half3 p = abs( frac( c.xxx + K.xyz ) * 6.0 - K.www );
				return c.z * lerp( K.xxx, saturate( p - K.xxx ), c.y );
			}
			
			half3 RGBToHSV(half3 c)
			{
				half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
				half4 p = lerp( half4( c.bg, K.wz ), half4( c.gb, K.xy ), step( c.b, c.g ) );
				half4 q = lerp( half4( p.xyw, c.r ), half4( c.r, p.yzx ), step( p.x, c.r ) );
				half d = q.x - min( q.w, q.y );
				half e = 1.0e-10;
				return half3( abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
			}
			float3 ASEGetEmissionHDRColor(float3 ldrColor, float luminanceIntensity, float exposureWeight, float inverseCurrentExposureMultiplier)
			{
				float3 hdrColor = ldrColor * luminanceIntensity;
				hdrColor = lerp( hdrColor* inverseCurrentExposureMultiplier, hdrColor, exposureWeight);
				return hdrColor;
			}
			
			half ShadowPassCheck36_g118142( half True, half False )
			{
				half result;
				#if defined(SHADERPASS) && (SHADERPASS  == SHADERPASS_SHADOWS)
					result = True;
				#else
					result = False;
				#endif
				return result;
			}
			
			AttributesMesh ApplyMeshModification( AttributesMesh inputMesh )
			{
			#ifdef UNITY_INSTANCING_ENABLED
				float2 patchVertex = inputMesh.positionOS.xy;
				float4 instanceData = UNITY_ACCESS_INSTANCED_PROP( Terrain, _TerrainPatchInstanceData );
				float2 sampleCoords = ( patchVertex.xy + instanceData.xy ) * instanceData.z;
				float height = UnpackHeightmap( _TerrainHeightmapTexture.Load( int3( sampleCoords, 0 ) ) );
				inputMesh.positionOS.xz = sampleCoords* _TerrainHeightmapScale.xz;
				inputMesh.positionOS.y = height* _TerrainHeightmapScale.y;
				#ifdef ENABLE_TERRAIN_PERPIXEL_NORMAL
					inputMesh.normalOS = float3(0, 1, 0);
				#else
					inputMesh.normalOS = _TerrainNormalmapTexture.Load(int3(sampleCoords, 0)).rgb* 2 - 1;
				#endif
				inputMesh.ase_texcoord.xy = sampleCoords* _TerrainHeightmapRecipSize.zw;
			#endif
				return inputMesh;
			}
			

			void BuildSurfaceData(FragInputs fragInputs, inout GlobalSurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
			{
				ZERO_INITIALIZE(SurfaceData, surfaceData);

				surfaceData.specularOcclusion = 1.0;
				surfaceData.thickness = 0.0;

				surfaceData.baseColor =					surfaceDescription.BaseColor;
				surfaceData.perceptualSmoothness =		surfaceDescription.Smoothness;
				surfaceData.ambientOcclusion =			surfaceDescription.Occlusion;
				surfaceData.metallic =					surfaceDescription.Metallic;
				surfaceData.coatMask =					surfaceDescription.CoatMask;

				#ifdef _SPECULAR_OCCLUSION_CUSTOM
				surfaceData.specularOcclusion =			surfaceDescription.SpecularOcclusion;
				#endif

				#ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
				surfaceData.subsurfaceMask =			surfaceDescription.SubsurfaceMask;
				#endif

				#if defined(_HAS_REFRACTION) || defined(_MATERIAL_FEATURE_TRANSMISSION)
				surfaceData.thickness =					surfaceDescription.Thickness;
				#endif

				#ifdef _MATERIAL_FEATURE_TRANSMISSION
				surfaceData.transmissionMask =			surfaceDescription.TransmissionMask;
				#endif

				#if defined( _MATERIAL_FEATURE_SUBSURFACE_SCATTERING ) || defined( _MATERIAL_FEATURE_TRANSMISSION )
				surfaceData.diffusionProfileHash =		asuint(surfaceDescription.DiffusionProfile);
				#endif

				#ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
				surfaceData.specularColor =				surfaceDescription.Specular;
				#endif

				#ifdef _MATERIAL_FEATURE_ANISOTROPY
				surfaceData.anisotropy =				surfaceDescription.Anisotropy;
				#endif

				#ifdef _MATERIAL_FEATURE_IRIDESCENCE
				surfaceData.iridescenceMask =			surfaceDescription.IridescenceMask;
				surfaceData.iridescenceThickness =		surfaceDescription.IridescenceThickness;
				#endif

				// refraction
                #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                    if (_EnableSSRefraction)
                    {
                        surfaceData.ior =                       surfaceDescription.RefractionIndex;
                        surfaceData.transmittanceColor =        surfaceDescription.RefractionColor;
                        surfaceData.atDistance =                surfaceDescription.RefractionDistance;
        
                        surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                        surfaceDescription.Alpha = 1.0;
                    }
                    else
                    {
                        surfaceData.ior = 1.0;
                        surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                        surfaceData.atDistance = 1.0;
                        surfaceData.transmittanceMask = 0.0;
                        surfaceDescription.Alpha = 1.0;
                    }
                #else
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                #endif

				surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;

				#ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
				#endif

				#ifdef _MATERIAL_FEATURE_TRANSMISSION
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
				#endif

				#ifdef _MATERIAL_FEATURE_COLORED_TRANSMISSION
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_COLORED_TRANSMISSION;
				#endif

                #ifdef _MATERIAL_FEATURE_ANISOTROPY
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
                    surfaceData.normalWS = float3(0, 1, 0);
                #endif

				#ifdef _MATERIAL_FEATURE_CLEAR_COAT
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
				#endif

				#ifdef _MATERIAL_FEATURE_IRIDESCENCE
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
				#endif

				#ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
				#endif

				#if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                    surfaceData.baseColor *= ( 1.0 - Max3( surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b ) );
				#endif

				#ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
				#else
                    float3 doubleSidedConstants = float3( 1.0, 1.0, 1.0 );
				#endif

				float3 normalTS = float3(0.0f, 0.0f, 1.0f);
				normalTS = surfaceDescription.Normal;

                #ifdef DECAL_NORMAL_BLENDING
					normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(normalTS, fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);

                    #if HAVE_DECALS
                    if (_EnableDecals)
                    {
                        float alpha = 1.0;
                        alpha = surfaceDescription.Alpha;

                        DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                        ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                        ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
                     }
                    #endif

                    GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
                #else
					GetNormalWS(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);

                    #if HAVE_DECALS
                    if (_EnableDecals)
                    {
                        float alpha = 1.0;
                        alpha = surfaceDescription.Alpha;
        
                        DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                        ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                        ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
                    }
                    #endif
                #endif

				surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
                surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz );
                surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);

				bentNormalWS = surfaceData.normalWS;

				#ifdef ASE_BENT_NORMAL
                    GetNormalWS( fragInputs, surfaceDescription.BentNormal, bentNormalWS, doubleSidedConstants );
				#endif

				#ifdef _MATERIAL_FEATURE_ANISOTROPY
                    surfaceData.tangentWS = TransformTangentToWorld(surfaceDescription.Tangent, fragInputs.tangentToWorld);
				#endif

				#if defined(DEBUG_DISPLAY)
				    #if !defined(SHADER_STAGE_RAY_TRACING)
				    if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
				    {
					   #ifdef FRAG_INPUTS_USE_TEXCOORD0
                           surfaceData.baseColor = GET_TEXTURE_STREAMING_DEBUG(posInput.positionSS, fragInputs.texCoord0);
                       #else
                           surfaceData.baseColor = GET_TEXTURE_STREAMING_DEBUG_NO_UV(posInput.positionSS);
                       #endif
					   surfaceData.metallic = 0;
				    }
					#endif
				    ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData); 
				#endif

                #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                    surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
                #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                    surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
                #endif

                #ifdef _ENABLE_GEOMETRIC_SPECULAR_AA
                    surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
                #endif
			}

			// Get Surface And BuiltinData
			void GetSurfaceAndBuiltinData(GlobalSurfaceDescription surfaceDescription, FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData)
			{
				#ifdef LOD_FADE_CROSSFADE
                    LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
				#endif

                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif  
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants);

				#ifdef _ALPHATEST_ON
                    DoAlphaTest( surfaceDescription.Alpha, surfaceDescription.AlphaClipThreshold );
				#endif

				#ifdef _ALPHATEST_SHADOW_ON
                    DoAlphaTest( surfaceDescription.Alpha, surfaceDescription.AlphaClipThresholdShadow);
				#endif

				#ifdef _DEPTHOFFSET_ON
                    ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
				#endif

				float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], fragInputs.texCoord1, fragInputs.texCoord2, builtinData);

				#ifdef _DEPTHOFFSET_ON
                    builtinData.depthOffset = surfaceDescription.DepthOffset;
				#endif

                #ifdef _ALPHATEST_ON
                    builtinData.alphaClipTreshold = surfaceDescription.AlphaClipThreshold;
                #endif

                #ifdef UNITY_VIRTUAL_TEXTURING
                    builtinData.vtPackedFeedback = surfaceDescription.VTPackedFeedback;
                #endif

				#ifdef ASE_BAKEDGI
                    builtinData.bakeDiffuseLighting = surfaceDescription.BakedGI;
				#endif

				#ifdef ASE_BAKEDBACKGI
                    builtinData.backBakeDiffuseLighting = surfaceDescription.BakedBackGI;
				#endif

                builtinData.emissiveColor = surfaceDescription.Emission;

				PostInitBuiltinData(V, posInput, surfaceData, builtinData);
			}

			PackedVaryingsMeshToPS VertexFunction(AttributesMesh inputMesh )
			{
				PackedVaryingsMeshToPS outputPackedVaryingsMeshToPS;

				UNITY_SETUP_INSTANCE_ID(inputMesh);
				UNITY_TRANSFER_INSTANCE_ID(inputMesh, outputPackedVaryingsMeshToPS);
				UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO( outputPackedVaryingsMeshToPS );

				inputMesh = ApplyMeshModification(inputMesh);
				TVEModelData Data16_g118149 = (TVEModelData)0;
				half Dummy181_g118147 = ( _LandscapeCategory + _LandscapeEnd + _LandscapeInfo );
				float In_Dummy16_g118149 = Dummy181_g118147;
				TVEModelData Data16_g117808 = (TVEModelData)0;
				half Dummy207_g117794 = 0.0;
				float In_Dummy16_g117808 = Dummy207_g117794;
				half3 PositionOS131_g117794 = inputMesh.positionOS;
				float3 In_PositionOS16_g117808 = PositionOS131_g117794;
				float3 ase_worldPos = GetAbsolutePositionWS( TransformObjectToWorld( (inputMesh.positionOS).xyz ) );
				float3 vertexToFrag73_g117794 = ase_worldPos;
				half3 PositionWS122_g117794 = vertexToFrag73_g117794;
				float3 In_PositionWS16_g117808 = PositionWS122_g117794;
				float3 localObjectPosition_UNITY_MATRIX_M14_g117796 = ObjectPosition_UNITY_MATRIX_M();
				#ifdef SHADEROPTIONS_CAMERA_RELATIVE_RENDERING
				float3 staticSwitch13_g117796 = ( localObjectPosition_UNITY_MATRIX_M14_g117796 + _WorldSpaceCameraPos );
				#else
				float3 staticSwitch13_g117796 = localObjectPosition_UNITY_MATRIX_M14_g117796;
				#endif
				half3 ObjectData20_g117798 = staticSwitch13_g117796;
				half3 WorldData19_g117798 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g117798 = WorldData19_g117798;
				#else
				float3 staticSwitch14_g117798 = ObjectData20_g117798;
				#endif
				float3 temp_output_124_0_g117796 = staticSwitch14_g117798;
				float3 temp_output_239_7_g117794 = temp_output_124_0_g117796;
				half3 PivotWS121_g117794 = temp_output_239_7_g117794;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g117794 = ( PositionWS122_g117794 - PivotWS121_g117794 );
				#else
				float3 staticSwitch204_g117794 = PositionWS122_g117794;
				#endif
				half3 PositionWO132_g117794 = ( staticSwitch204_g117794 - TVE_WorldOrigin );
				float3 In_PositionWO16_g117808 = PositionWO132_g117794;
				float3 In_PositionRawOS16_g117808 = PositionOS131_g117794;
				float3 In_PositionAddOS16_g117808 = float3( 0,0,0 );
				float3 _Vector0 = float3(0,0,0);
				half3 PivotOS149_g117794 = _Vector0;
				float3 In_PivotOS16_g117808 = PivotOS149_g117794;
				float3 In_PivotWS16_g117808 = PivotWS121_g117794;
				half3 PivotWO133_g117794 = ( PivotWS121_g117794 - TVE_WorldOrigin );
				float3 In_PivotWO16_g117808 = PivotWO133_g117794;
				half3 NormalOS134_g117794 = inputMesh.normalOS;
				float3 In_NormalOS16_g117808 = NormalOS134_g117794;
				float3 ase_worldNormal = TransformObjectToWorldNormal(inputMesh.normalOS);
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g117794 = normalizedWorldNormal;
				float3 In_NormalWS16_g117808 = Normal_WS95_g117794;
				float3 In_NormalRawOS16_g117808 = NormalOS134_g117794;
				float3 objToWorldDir298_g117794 = normalize( mul( GetObjectToWorldMatrix(), float4( inputMesh.normalOS, 0 ) ).xyz );
				half3 Normal_RawWS136_g117794 = objToWorldDir298_g117794;
				float3 In_NormalRawWS16_g117808 = Normal_RawWS136_g117794;
				half4 TangentlOS153_g117794 = inputMesh.tangentOS;
				float4 In_TangentOS16_g117808 = TangentlOS153_g117794;
				float3 normalizeResult296_g117794 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g117794 ) );
				half3 ViewDirWS169_g117794 = normalizeResult296_g117794;
				float3 In_ViewDirWS16_g117808 = ViewDirWS169_g117794;
				half4 VertexMasks171_g117794 = inputMesh.ase_color;
				float4 In_VertexData16_g117808 = VertexMasks171_g117794;
				float4 break33_g117807 = _object_phase_mode;
				float temp_output_30_0_g117807 = ( inputMesh.ase_color.r * break33_g117807.x );
				float temp_output_29_0_g117807 = ( inputMesh.ase_color.g * break33_g117807.y );
				float temp_output_31_0_g117807 = ( inputMesh.ase_color.b * break33_g117807.z );
				float temp_output_28_0_g117807 = ( temp_output_30_0_g117807 + temp_output_29_0_g117807 + temp_output_31_0_g117807 + ( inputMesh.ase_color.a * break33_g117807.w ) );
				float3 break243_g117794 = PivotWO133_g117794;
				float temp_output_315_0_g117794 = (frac( ( temp_output_28_0_g117807 + ( break243_g117794.x + break243_g117794.z ) ) )*2.0 + -1.0);
				float4 appendResult177_g117794 = (float4(1.0 , 1.0 , temp_output_315_0_g117794 , 1.0));
				half4 MotionMasks176_g117794 = appendResult177_g117794;
				float4 In_MotionData16_g117808 = MotionMasks176_g117794;
				half4 BoundsData254_g117794 = float4( 0,0,0,0 );
				float4 In_BoundsData16_g117808 = BoundsData254_g117794;
				float4 In_RotationData16_g117808 = float4( 0,0,0,0 );
				Data16_g117808.Dummy = In_Dummy16_g117808;
				Data16_g117808.PositionOS = In_PositionOS16_g117808;
				Data16_g117808.PositionWS = In_PositionWS16_g117808;
				Data16_g117808.PositionWO = In_PositionWO16_g117808;
				Data16_g117808.PositionRawOS = In_PositionRawOS16_g117808;
				Data16_g117808.PositionAddOS = In_PositionAddOS16_g117808;
				Data16_g117808.PivotOS = In_PivotOS16_g117808;
				Data16_g117808.PivotWS = In_PivotWS16_g117808;
				Data16_g117808.PivotWO = In_PivotWO16_g117808;
				Data16_g117808.NormalOS = In_NormalOS16_g117808;
				Data16_g117808.NormalWS = In_NormalWS16_g117808;
				Data16_g117808.NormalRawOS = In_NormalRawOS16_g117808;
				Data16_g117808.NormalRawWS = In_NormalRawWS16_g117808;
				Data16_g117808.TangentOS = In_TangentOS16_g117808;
				Data16_g117808.ViewDirWS = In_ViewDirWS16_g117808;
				Data16_g117808.VertexData = In_VertexData16_g117808;
				Data16_g117808.MotionData = In_MotionData16_g117808;
				Data16_g117808.BoundsData = In_BoundsData16_g117808;
				Data16_g117808.RotationData = In_RotationData16_g117808;
				TVEModelData Data15_g118148 = Data16_g117808;
				float Out_Dummy15_g118148 = 0;
				float3 Out_PositionOS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionWS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118148 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotOS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118148 = float3( 0,0,0 );
				float3 Out_NormalOS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g118148 = float3( 0,0,0 );
				float4 Out_TangentOS15_g118148 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g118148 = float3( 0,0,0 );
				float4 Out_VertexData15_g118148 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g118148 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118148 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g118148 = float4( 0,0,0,0 );
				Out_Dummy15_g118148 = Data15_g118148.Dummy;
				Out_PositionOS15_g118148 = Data15_g118148.PositionOS;
				Out_PositionWS15_g118148 = Data15_g118148.PositionWS;
				Out_PositionWO15_g118148 = Data15_g118148.PositionWO;
				Out_PositionRawOS15_g118148 = Data15_g118148.PositionRawOS;
				Out_PositionAddOS15_g118148 = Data15_g118148.PositionAddOS;
				Out_PivotOS15_g118148 = Data15_g118148.PivotOS;
				Out_PivotWS15_g118148 = Data15_g118148.PivotWS;
				Out_PivotWO15_g118148 = Data15_g118148.PivotWO;
				Out_NormalOS15_g118148 = Data15_g118148.NormalOS;
				Out_NormalWS15_g118148 = Data15_g118148.NormalWS;
				Out_NormalRawOS15_g118148 = Data15_g118148.NormalRawOS;
				Out_NormalRawWS15_g118148 = Data15_g118148.NormalRawWS;
				Out_TangentOS15_g118148 = Data15_g118148.TangentOS;
				Out_ViewDirWS15_g118148 = Data15_g118148.ViewDirWS;
				Out_VertexData15_g118148 = Data15_g118148.VertexData;
				Out_MotionData15_g118148 = Data15_g118148.MotionData;
				Out_BoundsData15_g118148 = Data15_g118148.BoundsData;
				Out_RotationData15_g118148 = Data15_g118148.RotationData;
				half3 Input_PositionOS147_g118147 = Out_PositionOS15_g118148;
				float3 break592_g118147 = Input_PositionOS147_g118147;
				float localBuildGlobalData204_g117810 = ( 0.0 );
				TVEGlobalData Data204_g117810 = (TVEGlobalData)0;
				half Dummy211_g117810 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g117810 = Dummy211_g117810;
				half4 Coat_Params302_g117810 = TVE_CoatParams;
				float4 In_CoatParams204_g117810 = Coat_Params302_g117810;
				float temp_output_82_0_g117811 = _GlobalPaintLayerValue;
				float temp_output_19_0_g117813 = TVE_PaintLayers[(int)temp_output_82_0_g117811];
				TVEModelData Data16_g117809 = (TVEModelData)0;
				float In_Dummy16_g117809 = 0.0;
				float3 In_PositionWS16_g117809 = PositionWS122_g117794;
				float3 In_PositionWO16_g117809 = PositionWO132_g117794;
				float3 In_PivotWS16_g117809 = PivotWS121_g117794;
				float3 In_PivotWO16_g117809 = PivotWO133_g117794;
				float3 In_NormalWS16_g117809 = Normal_WS95_g117794;
				float3 In_ViewDirWS16_g117809 = ViewDirWS169_g117794;
				float4 In_VertexData16_g117809 = VertexMasks171_g117794;
				float4 In_BoundsData16_g117809 = float4( 1,1,1,1 );
				Data16_g117809.Dummy = In_Dummy16_g117809;
				Data16_g117809.PositionWS = In_PositionWS16_g117809;
				Data16_g117809.PositionWO = In_PositionWO16_g117809;
				Data16_g117809.PivotWS = In_PivotWS16_g117809;
				Data16_g117809.PivotWO = In_PivotWO16_g117809;
				Data16_g117809.NormalWS = In_NormalWS16_g117809;
				Data16_g117809.ViewDirWS = In_ViewDirWS16_g117809;
				Data16_g117809.VertexData = In_VertexData16_g117809;
				Data16_g117809.BoundsData = In_BoundsData16_g117809;
				TVEModelData Data15_g117892 = Data16_g117809;
				float Out_Dummy15_g117892 = 0;
				float3 Out_PositionWS15_g117892 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117892 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117892 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g117892 = float3( 0,0,0 );
				float4 Out_VertexData15_g117892 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117892 = float4( 0,0,0,0 );
				Out_Dummy15_g117892 = Data15_g117892.Dummy;
				Out_PositionWS15_g117892 = Data15_g117892.PositionWS;
				Out_PositionWO15_g117892 = Data15_g117892.PositionWO;
				Out_PivotWS15_g117892 = Data15_g117892.PivotWS;
				Out_PivotWO15_g117892 = Data15_g117892.PivotWO;
				Out_NormalWS15_g117892 = Data15_g117892.NormalWS;
				Out_ViewDirWS15_g117892 = Data15_g117892.ViewDirWS;
				Out_VertexData15_g117892 = Data15_g117892.VertexData;
				Out_BoundsData15_g117892 = Data15_g117892.BoundsData;
				half3 Model_PositionWS143_g117810 = Out_PositionWS15_g117892;
				half3 Input_Position180_g117814 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117814 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_82_0_g117814 = temp_output_82_0_g117811;
				float2 temp_output_119_0_g117814 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_7_0_g117819 = 1.0;
				float temp_output_10_0_g117819 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117819 );
				float4 lerpResult131_g117814 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117814,temp_output_82_0_g117814, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, temp_output_119_0_g117814,temp_output_82_0_g117814, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117814 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117819 ) / temp_output_10_0_g117819 ) ));
				float4 temp_output_17_0_g117813 = lerpResult131_g117814;
				float4 temp_output_3_0_g117813 = TVE_PaintParams;
				float4 ifLocalVar18_g117813 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117813 >= 0.5 )
				ifLocalVar18_g117813 = temp_output_17_0_g117813;
				else
				ifLocalVar18_g117813 = temp_output_3_0_g117813;
				float4 lerpResult22_g117813 = lerp( temp_output_3_0_g117813 , temp_output_17_0_g117813 , temp_output_19_0_g117813);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117813 = lerpResult22_g117813;
				#else
				float4 staticSwitch24_g117813 = ifLocalVar18_g117813;
				#endif
				half4 Paint_Params71_g117810 = staticSwitch24_g117813;
				float4 In_PaintParams204_g117810 = Paint_Params71_g117810;
				float temp_output_82_0_g117829 = _GlobalGlowLayerValue;
				float temp_output_19_0_g117831 = TVE_GlowLayers[(int)temp_output_82_0_g117829];
				half3 Input_Position180_g117832 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117832 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_82_0_g117832 = temp_output_82_0_g117829;
				float2 temp_output_119_0_g117832 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_7_0_g117837 = 1.0;
				float temp_output_10_0_g117837 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117837 );
				float4 lerpResult131_g117832 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117832,temp_output_82_0_g117832, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, temp_output_119_0_g117832,temp_output_82_0_g117832, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117832 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117837 ) / temp_output_10_0_g117837 ) ));
				float4 temp_output_17_0_g117831 = lerpResult131_g117832;
				float4 temp_output_3_0_g117831 = TVE_GlowParams;
				float4 ifLocalVar18_g117831 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117831 >= 0.5 )
				ifLocalVar18_g117831 = temp_output_17_0_g117831;
				else
				ifLocalVar18_g117831 = temp_output_3_0_g117831;
				float4 lerpResult22_g117831 = lerp( temp_output_3_0_g117831 , temp_output_17_0_g117831 , temp_output_19_0_g117831);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117831 = lerpResult22_g117831;
				#else
				float4 staticSwitch24_g117831 = ifLocalVar18_g117831;
				#endif
				half4 Glow_Params248_g117810 = staticSwitch24_g117831;
				float4 In_GlowParams204_g117810 = Glow_Params248_g117810;
				float temp_output_132_0_g117874 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g117876 = TVE_AtmoLayers[(int)temp_output_132_0_g117874];
				half3 Input_Position180_g117877 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117877 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_82_0_g117877 = temp_output_132_0_g117874;
				float2 temp_output_119_0_g117877 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_7_0_g117882 = 1.0;
				float temp_output_10_0_g117882 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117882 );
				float4 lerpResult131_g117877 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117877,temp_output_82_0_g117877, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, temp_output_119_0_g117877,temp_output_82_0_g117877, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117877 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117882 ) / temp_output_10_0_g117882 ) ));
				float4 temp_output_17_0_g117876 = lerpResult131_g117877;
				float4 temp_output_3_0_g117876 = TVE_AtmoParams;
				float4 ifLocalVar18_g117876 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117876 >= 0.5 )
				ifLocalVar18_g117876 = temp_output_17_0_g117876;
				else
				ifLocalVar18_g117876 = temp_output_3_0_g117876;
				float4 lerpResult22_g117876 = lerp( temp_output_3_0_g117876 , temp_output_17_0_g117876 , temp_output_19_0_g117876);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117876 = lerpResult22_g117876;
				#else
				float4 staticSwitch24_g117876 = ifLocalVar18_g117876;
				#endif
				half4 Atmo_Params80_g117810 = staticSwitch24_g117876;
				float4 In_AtmoParams204_g117810 = Atmo_Params80_g117810;
				float temp_output_132_0_g117883 = _GlobalFadeLayerValue;
				float temp_output_19_0_g117885 = TVE_FadeLayers[(int)temp_output_132_0_g117883];
				half3 Input_Position180_g117886 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117886 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_82_0_g117886 = temp_output_132_0_g117883;
				float2 temp_output_119_0_g117886 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_7_0_g117891 = 1.0;
				float temp_output_10_0_g117891 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117891 );
				float4 lerpResult131_g117886 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117886,temp_output_82_0_g117886, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, temp_output_119_0_g117886,temp_output_82_0_g117886, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117886 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117891 ) / temp_output_10_0_g117891 ) ));
				float4 temp_output_17_0_g117885 = lerpResult131_g117886;
				float4 temp_output_3_0_g117885 = TVE_FadeParams;
				float4 ifLocalVar18_g117885 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117885 >= 0.5 )
				ifLocalVar18_g117885 = temp_output_17_0_g117885;
				else
				ifLocalVar18_g117885 = temp_output_3_0_g117885;
				float4 lerpResult22_g117885 = lerp( temp_output_3_0_g117885 , temp_output_17_0_g117885 , temp_output_19_0_g117885);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117885 = lerpResult22_g117885;
				#else
				float4 staticSwitch24_g117885 = ifLocalVar18_g117885;
				#endif
				half4 Fade_Params387_g117810 = staticSwitch24_g117885;
				float4 In_FadeParams204_g117810 = Fade_Params387_g117810;
				half4 Form_Params112_g117810 = TVE_FormParams;
				float4 In_FormParams204_g117810 = Form_Params112_g117810;
				float temp_output_130_0_g117847 = _GlobalLandLayerValue;
				float temp_output_19_0_g117849 = TVE_LandLayers[(int)temp_output_130_0_g117847];
				half3 Input_Position180_g117850 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117850 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_82_0_g117850 = temp_output_130_0_g117847;
				float2 temp_output_119_0_g117850 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_7_0_g117855 = 1.0;
				float temp_output_10_0_g117855 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117855 );
				float4 lerpResult131_g117850 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117850,temp_output_82_0_g117850, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, temp_output_119_0_g117850,temp_output_82_0_g117850, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117850 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117855 ) / temp_output_10_0_g117855 ) ));
				float4 temp_output_17_0_g117849 = lerpResult131_g117850;
				float4 temp_output_3_0_g117849 = TVE_LandParams;
				float4 ifLocalVar18_g117849 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117849 >= 0.5 )
				ifLocalVar18_g117849 = temp_output_17_0_g117849;
				else
				ifLocalVar18_g117849 = temp_output_3_0_g117849;
				float4 lerpResult22_g117849 = lerp( temp_output_3_0_g117849 , temp_output_17_0_g117849 , temp_output_19_0_g117849);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117849 = lerpResult22_g117849;
				#else
				float4 staticSwitch24_g117849 = ifLocalVar18_g117849;
				#endif
				half4 Land_Params375_g117810 = staticSwitch24_g117849;
				float4 In_LandParams204_g117810 = Land_Params375_g117810;
				half4 Wind_Params88_g117810 = TVE_WindParams;
				float4 In_WindParams204_g117810 = Wind_Params88_g117810;
				half4 Push_Params335_g117810 = TVE_PushParams;
				float4 In_PushParams204_g117810 = Push_Params335_g117810;
				Data204_g117810.Dummy = In_Dummy204_g117810;
				Data204_g117810.CoatParams = In_CoatParams204_g117810;
				Data204_g117810.PaintParams = In_PaintParams204_g117810;
				Data204_g117810.GlowParams = In_GlowParams204_g117810;
				Data204_g117810.AtmoParams = In_AtmoParams204_g117810;
				Data204_g117810.FadeParams = In_FadeParams204_g117810;
				Data204_g117810.FormParams= In_FormParams204_g117810;
				Data204_g117810.LandParams = In_LandParams204_g117810;
				Data204_g117810.WindParams = In_WindParams204_g117810;
				Data204_g117810.PushParams = In_PushParams204_g117810;
				TVEGlobalData Data15_g118150 = Data204_g117810;
				float Out_Dummy15_g118150 = 0;
				float4 Out_CoatParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118150 = float4( 0,0,0,0 );
				Out_Dummy15_g118150 = Data15_g118150.Dummy;
				Out_CoatParams15_g118150 = Data15_g118150.CoatParams;
				Out_PaintParams15_g118150 = Data15_g118150.PaintParams;
				Out_GlowParams15_g118150 = Data15_g118150.GlowParams;
				Out_AtmoParams15_g118150= Data15_g118150.AtmoParams;
				Out_FadeParams15_g118150= Data15_g118150.FadeParams;
				Out_FormParams15_g118150 = Data15_g118150.FormParams;
				Out_LandParams15_g118150 = Data15_g118150.LandParams;
				Out_WindParams15_g118150 = Data15_g118150.WindParams;
				Out_PushParams15_g118150 = Data15_g118150.PushParams;
				half4 Input_FormParams214_g118147 = Out_LandParams15_g118150;
				float temp_output_572_0_g118147 = (Input_FormParams214_g118147).z;
				float temp_output_595_0_g118147 = ( break592_g118147.y + temp_output_572_0_g118147 );
				float lerpResult604_g118147 = lerp( break592_g118147.y , temp_output_595_0_g118147 , ( _LandscapeHeightValue * TVE_IsEnabled ));
				float3 appendResult593_g118147 = (float3(break592_g118147.x , lerpResult604_g118147 , break592_g118147.z));
				#ifdef TVE_LANDSCAPE
				float3 staticSwitch575_g118147 = appendResult593_g118147;
				#else
				float3 staticSwitch575_g118147 = Input_PositionOS147_g118147;
				#endif
				half3 Final_PositionOS580_g118147 = staticSwitch575_g118147;
				float3 In_PositionOS16_g118149 = Final_PositionOS580_g118147;
				float3 In_PositionWS16_g118149 = Out_PositionWS15_g118148;
				float3 In_PositionWO16_g118149 = Out_PositionWO15_g118148;
				float3 In_PositionRawOS16_g118149 = Out_PositionRawOS15_g118148;
				float3 In_PositionAddOS16_g118149 = Out_PositionAddOS15_g118148;
				float3 In_PivotOS16_g118149 = Out_PivotOS15_g118148;
				float3 In_PivotWS16_g118149 = Out_PivotWS15_g118148;
				float3 temp_output_481_19_g118147 = Out_PivotWO15_g118148;
				float3 In_PivotWO16_g118149 = temp_output_481_19_g118147;
				float3 temp_output_481_20_g118147 = Out_NormalOS15_g118148;
				float3 In_NormalOS16_g118149 = temp_output_481_20_g118147;
				float3 In_NormalWS16_g118149 = Out_NormalWS15_g118148;
				float3 In_NormalRawOS16_g118149 = Out_NormalRawOS15_g118148;
				float3 In_NormalRawWS16_g118149 = Out_NormalRawWS15_g118148;
				float4 In_TangentOS16_g118149 = Out_TangentOS15_g118148;
				float3 In_ViewDirWS16_g118149 = Out_ViewDirWS15_g118148;
				float4 In_VertexData16_g118149 = Out_VertexData15_g118148;
				float4 In_MotionData16_g118149 = Out_MotionData15_g118148;
				float4 In_BoundsData16_g118149 = Out_BoundsData15_g118148;
				float4 In_RotationData16_g118149 = Out_RotationData15_g118148;
				Data16_g118149.Dummy = In_Dummy16_g118149;
				Data16_g118149.PositionOS = In_PositionOS16_g118149;
				Data16_g118149.PositionWS = In_PositionWS16_g118149;
				Data16_g118149.PositionWO = In_PositionWO16_g118149;
				Data16_g118149.PositionRawOS = In_PositionRawOS16_g118149;
				Data16_g118149.PositionAddOS = In_PositionAddOS16_g118149;
				Data16_g118149.PivotOS = In_PivotOS16_g118149;
				Data16_g118149.PivotWS = In_PivotWS16_g118149;
				Data16_g118149.PivotWO = In_PivotWO16_g118149;
				Data16_g118149.NormalOS = In_NormalOS16_g118149;
				Data16_g118149.NormalWS = In_NormalWS16_g118149;
				Data16_g118149.NormalRawOS = In_NormalRawOS16_g118149;
				Data16_g118149.NormalRawWS = In_NormalRawWS16_g118149;
				Data16_g118149.TangentOS = In_TangentOS16_g118149;
				Data16_g118149.ViewDirWS = In_ViewDirWS16_g118149;
				Data16_g118149.VertexData = In_VertexData16_g118149;
				Data16_g118149.MotionData = In_MotionData16_g118149;
				Data16_g118149.BoundsData = In_BoundsData16_g118149;
				Data16_g118149.RotationData = In_RotationData16_g118149;
				TVEModelData Data15_g118156 = Data16_g118149;
				float Out_Dummy15_g118156 = 0;
				float3 Out_PositionOS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionWS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118156 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotOS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118156 = float3( 0,0,0 );
				float3 Out_NormalOS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g118156 = float3( 0,0,0 );
				float4 Out_TangentOS15_g118156 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g118156 = float3( 0,0,0 );
				float4 Out_VertexData15_g118156 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g118156 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118156 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g118156 = float4( 0,0,0,0 );
				Out_Dummy15_g118156 = Data15_g118156.Dummy;
				Out_PositionOS15_g118156 = Data15_g118156.PositionOS;
				Out_PositionWS15_g118156 = Data15_g118156.PositionWS;
				Out_PositionWO15_g118156 = Data15_g118156.PositionWO;
				Out_PositionRawOS15_g118156 = Data15_g118156.PositionRawOS;
				Out_PositionAddOS15_g118156 = Data15_g118156.PositionAddOS;
				Out_PivotOS15_g118156 = Data15_g118156.PivotOS;
				Out_PivotWS15_g118156 = Data15_g118156.PivotWS;
				Out_PivotWO15_g118156 = Data15_g118156.PivotWO;
				Out_NormalOS15_g118156 = Data15_g118156.NormalOS;
				Out_NormalWS15_g118156 = Data15_g118156.NormalWS;
				Out_NormalRawOS15_g118156 = Data15_g118156.NormalRawOS;
				Out_NormalRawWS15_g118156 = Data15_g118156.NormalRawWS;
				Out_TangentOS15_g118156 = Data15_g118156.TangentOS;
				Out_ViewDirWS15_g118156 = Data15_g118156.ViewDirWS;
				Out_VertexData15_g118156 = Data15_g118156.VertexData;
				Out_MotionData15_g118156 = Data15_g118156.MotionData;
				Out_BoundsData15_g118156 = Data15_g118156.BoundsData;
				Out_RotationData15_g118156 = Data15_g118156.RotationData;
				float3 temp_output_31_0_g118154 = Out_PositionOS15_g118156;
				
				float3 ase_worldTangent = TransformObjectToWorldDir(inputMesh.tangentOS.xyz);
				float ase_vertexTangentSign = inputMesh.tangentOS.w * ( unity_WorldTransformParams.w >= 0.0 ? 1.0 : -1.0 );
				float3 ase_worldBitangent = cross( ase_worldNormal, ase_worldTangent ) * ase_vertexTangentSign;
				outputPackedVaryingsMeshToPS.ase_texcoord5.xyz = ase_worldBitangent;
				outputPackedVaryingsMeshToPS.ase_texcoord6.xyz = vertexToFrag73_g117794;
				
				outputPackedVaryingsMeshToPS.ase_color = inputMesh.ase_color;
				outputPackedVaryingsMeshToPS.ase_texcoord7 = inputMesh.ase_texcoord;
				
				//setting value to unused interpolator channels and avoid initialization warnings
				outputPackedVaryingsMeshToPS.ase_texcoord5.w = 0;
				outputPackedVaryingsMeshToPS.ase_texcoord6.w = 0;

				#ifdef ASE_ABSOLUTE_VERTEX_POS
				float3 defaultVertexValue = inputMesh.positionOS.xyz;
				#else
				float3 defaultVertexValue = float3( 0, 0, 0 );
				#endif
				float3 vertexValue = temp_output_31_0_g118154;

				#ifdef ASE_ABSOLUTE_VERTEX_POS
				inputMesh.positionOS.xyz = vertexValue;
				#else
				inputMesh.positionOS.xyz += vertexValue;
				#endif

				inputMesh.normalOS = Out_NormalOS15_g118156;
				inputMesh.tangentOS = Out_TangentOS15_g118156;

				float3 positionRWS = TransformObjectToWorld(inputMesh.positionOS);
				float3 normalWS = TransformObjectToWorldNormal(inputMesh.normalOS);
				float4 tangentWS = float4(TransformObjectToWorldDir(inputMesh.tangentOS.xyz), inputMesh.tangentOS.w);

				outputPackedVaryingsMeshToPS.positionCS = TransformWorldToHClip(positionRWS);
				outputPackedVaryingsMeshToPS.positionRWS.xyz = positionRWS;
				outputPackedVaryingsMeshToPS.normalWS.xyz = normalWS;
				outputPackedVaryingsMeshToPS.tangentWS.xyzw = tangentWS;
				outputPackedVaryingsMeshToPS.uv1.xyzw = inputMesh.uv1;
				outputPackedVaryingsMeshToPS.uv2.xyzw = inputMesh.uv2;
				return outputPackedVaryingsMeshToPS;
			}

			#if defined(ASE_TESSELLATION)
			struct VertexControl
			{
				float3 positionOS : INTERNALTESSPOS;
				float3 normalOS : NORMAL;
				float4 tangentOS : TANGENT;
				float4 uv1 : TEXCOORD1;
				float4 uv2 : TEXCOORD2;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;

				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct TessellationFactors
			{
				float edge[3] : SV_TessFactor;
				float inside : SV_InsideTessFactor;
			};

			VertexControl Vert ( AttributesMesh v )
			{
				VertexControl o;
				UNITY_SETUP_INSTANCE_ID(v);
				UNITY_TRANSFER_INSTANCE_ID(v, o);
				o.positionOS = v.positionOS;
				o.normalOS = v.normalOS;
				o.tangentOS = v.tangentOS;
				o.uv1 = v.uv1;
				o.uv2 = v.uv2;
				o.ase_color = v.ase_color;
				o.ase_texcoord = v.ase_texcoord;
				return o;
			}

			TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
			{
				TessellationFactors o;
				float4 tf = 1;
				float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
				float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
				#if (SHADEROPTIONS_CAMERA_RELATIVE_RENDERING != 0)
				float3 cameraPos = 0;
				#else
				float3 cameraPos = _WorldSpaceCameraPos;
				#endif
				#if defined(ASE_FIXED_TESSELLATION)
				tf = FixedTess( tessValue );
				#elif defined(ASE_DISTANCE_TESSELLATION)
				tf = DistanceBasedTess(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), tessValue, tessMin, tessMax, GetObjectToWorldMatrix(), cameraPos );
				#elif defined(ASE_LENGTH_TESSELLATION)
				tf = EdgeLengthBasedTess(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), edgeLength, GetObjectToWorldMatrix(), cameraPos, _ScreenParams );
				#elif defined(ASE_LENGTH_CULL_TESSELLATION)
				tf = EdgeLengthBasedTessCull(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), edgeLength, tessMaxDisp, GetObjectToWorldMatrix(), cameraPos, _ScreenParams, _FrustumPlanes );
				#endif
				o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
				return o;
			}

			[domain("tri")]
			[partitioning("fractional_odd")]
			[outputtopology("triangle_cw")]
			[patchconstantfunc("TessellationFunction")]
			[outputcontrolpoints(3)]
			VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
			{
			   return patch[id];
			}

			[domain("tri")]
			PackedVaryingsMeshToPS DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
			{
				AttributesMesh o = (AttributesMesh) 0;
				o.positionOS = patch[0].positionOS * bary.x + patch[1].positionOS * bary.y + patch[2].positionOS * bary.z;
				o.normalOS = patch[0].normalOS * bary.x + patch[1].normalOS * bary.y + patch[2].normalOS * bary.z;
				o.tangentOS = patch[0].tangentOS * bary.x + patch[1].tangentOS * bary.y + patch[2].tangentOS * bary.z;
				o.uv1 = patch[0].uv1 * bary.x + patch[1].uv1 * bary.y + patch[2].uv1 * bary.z;
				o.uv2 = patch[0].uv2 * bary.x + patch[1].uv2 * bary.y + patch[2].uv2 * bary.z;
				o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
				o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
				#if defined(ASE_PHONG_TESSELLATION)
				float3 pp[3];
				for (int i = 0; i < 3; ++i)
					pp[i] = o.positionOS.xyz - patch[i].normalOS * (dot(o.positionOS.xyz, patch[i].normalOS) - dot(patch[i].positionOS.xyz, patch[i].normalOS));
				float phongStrength = _TessPhongStrength;
				o.positionOS.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.positionOS.xyz;
				#endif
				UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
				return VertexFunction(o);
			}
			#else
			PackedVaryingsMeshToPS Vert ( AttributesMesh v )
			{
				return VertexFunction( v );
			}
			#endif

			void Frag( PackedVaryingsMeshToPS packedInput,
						OUTPUT_GBUFFER(outGBuffer)
						#ifdef _DEPTHOFFSET_ON
						, out float outputDepth : DEPTH_OFFSET_SEMANTIC
						#endif
						
						)
			{

				UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX( packedInput );
				UNITY_SETUP_INSTANCE_ID( packedInput );
				FragInputs input;
				ZERO_INITIALIZE(FragInputs, input);
				input.tangentToWorld = k_identity3x3;
				float3 positionRWS = packedInput.positionRWS.xyz;
				float3 normalWS = packedInput.normalWS.xyz;
				float4 tangentWS = packedInput.tangentWS.xyzw;

				input.positionSS = packedInput.positionCS;
				input.positionRWS = positionRWS;
				input.tangentToWorld = BuildTangentToWorld(tangentWS, normalWS);
				input.texCoord1 = packedInput.uv1.xyzw;
				input.texCoord2 = packedInput.uv2.xyzw;

				#if _DOUBLESIDED_ON && SHADER_STAGE_FRAGMENT
				input.isFrontFace = IS_FRONT_VFACE( packedInput.cullFace, true, false);
				#elif SHADER_STAGE_FRAGMENT
				#if defined(ASE_NEED_CULLFACE)
				input.isFrontFace = IS_FRONT_VFACE( packedInput.cullFace, true, false );
				#endif
				#endif
				half isFrontFace = input.isFrontFace;

				PositionInputs posInput = GetPositionInput(input.positionSS.xy, _ScreenSize.zw, input.positionSS.z, input.positionSS.w, input.positionRWS);
				float3 V = GetWorldSpaceNormalizeViewDir(input.positionRWS);
				SurfaceData surfaceData;
				BuiltinData builtinData;

				GlobalSurfaceDescription surfaceDescription = (GlobalSurfaceDescription)0;
				float localBreakData4_g118158 = ( 0.0 );
				float localCompData3_g118135 = ( 0.0 );
				TVEVisualData Data3_g118135 = (TVEVisualData)0;
				half Dummy594_g118134 = ( _CutoutCategory + _CutoutEnd + _CutoutElementMode + _CutoutBakeInfo );
				float In_Dummy3_g118135 = Dummy594_g118134;
				float localBreakData4_g118145 = ( 0.0 );
				float localCompData3_g118129 = ( 0.0 );
				TVEVisualData Data3_g118129 = (TVEVisualData)0;
				half Dummy145_g118119 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveElementMode + _EmissiveFlagMode );
				float In_Dummy3_g118129 = Dummy145_g118119;
				float localBreakData4_g118128 = ( 0.0 );
				float localCompData3_g118092 = ( 0.0 );
				TVEVisualData Data3_g118092 = (TVEVisualData)0;
				half Dummy594_g118090 = ( _WetnessCategory + _WetnessEnd + _WetnessElementMode + _WetnessBakeInfo );
				float In_Dummy3_g118092 = Dummy594_g118090;
				float localBreakData4_g118091 = ( 0.0 );
				float localCompData3_g118057 = ( 0.0 );
				TVEVisualData Data3_g118057 = (TVEVisualData)0;
				half Dummy594_g118054 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayElementMode + _OverlayBakeInfo );
				float In_Dummy3_g118057 = Dummy594_g118054;
				float localBreakData4_g118055 = ( 0.0 );
				float localCompData3_g118034 = ( 0.0 );
				TVEVisualData Data3_g118034 = (TVEVisualData)0;
				half Dummy205_g118031 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessElementMode + _DrynessBakeInfo );
				float In_Dummy3_g118034 = Dummy205_g118031;
				float localBreakData4_g118033 = ( 0.0 );
				float localCompData3_g118028 = ( 0.0 );
				TVEVisualData Data3_g118028 = (TVEVisualData)0;
				half Dummy205_g118007 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeInfo );
				float In_Dummy3_g118028 = Dummy205_g118007;
				float localBreakData4_g118029 = ( 0.0 );
				float localCompData3_g117894 = ( 0.0 );
				TVEVisualData Data3_g117894 = (TVEVisualData)0;
				half Dummy9163_g117893 = ( _CategoryTerrain + _EndTerrain );
				float In_Dummy3_g117894 = Dummy9163_g117893;
				float localHeightBasedBlending7362_g117895 = ( 0.0 );
				float3 ase_worldPos = GetAbsolutePositionWS( positionRWS );
				float4 appendResult9125_g117895 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
				float4 temp_output_35_0_g118003 = appendResult9125_g117895;
				float2 InputScale48_g118003 = (temp_output_35_0_g118003).zw;
				half2 FinalScale53_g118003 = ( 1.0 / InputScale48_g118003 );
				float2 InputPosition52_g118003 = (temp_output_35_0_g118003).xy;
				half2 FinalPosition58_g118003 = -( FinalScale53_g118003 * InputPosition52_g118003 );
				float2 temp_output_65_0_g118003 = ( ( (ase_worldPos).xz * FinalScale53_g118003 ) + FinalPosition58_g118003 );
				float4 temp_output_70_0_g118003 = _TerrainControlTex1_TexelSize;
				float2 InputTexelSize68_g118003 = (temp_output_70_0_g118003).zw;
				float2 temp_cast_0 = (1.0).xx;
				float2 InputTexelRecip69_g118003 = (temp_output_70_0_g118003).xy;
				float2 Terrain_Control_UV7873_g117895 = ( ( ( temp_output_65_0_g118003 / ( 1.0 / ( InputTexelSize68_g118003 - temp_cast_0 ) ) ) + 0.5 ) * InputTexelRecip69_g118003 );
				half4 Terrain_Control_047365_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_047362_g117895 = Terrain_Control_047365_g117895;
				half4 Terrain_Control_087366_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_087362_g117895 = Terrain_Control_087366_g117895;
				half4 Terrain_Control_127712_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_127362_g117895 = Terrain_Control_127712_g117895;
				half4 Terrain_Control_167711_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_167362_g117895 = Terrain_Control_167711_g117895;
				TEXTURE2D(Texture238_g117940) = _TerrainShaderTex1;
				float localFilterTexture30_g118001 = ( 0.0 );
				SamplerState SamplerDefault30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g118001 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g118001 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g118001 = SamplerDefault30_g118001;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g118001 = SamplerDefault30_g118001;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g118001 = SamplerPoint30_g118001;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g118001 = SamplerLow30_g118001;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g118001 = SamplerMedium30_g118001;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g118001 = SamplerHigh30_g118001;
				#endif
				SamplerState Sampler238_g117940 = SS30_g118001;
				half4 Input_Terrain_Coords_016785_g117895 = _TerrainCoord1;
				float4 temp_output_37_0_g117940 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117940 = temp_output_37_0_g117940;
				half3 Input_Position9197_g117895 = ase_worldPos;
				float3 temp_output_279_0_g117940 = Input_Position9197_g117895;
				half3 WorldPosition238_g117940 = temp_output_279_0_g117940;
				half4 localSamplePlanar2D238_g117940 = SamplePlanar2D( Texture238_g117940 , Sampler238_g117940 , Coords238_g117940 , WorldPosition238_g117940 );
				TEXTURE2D(Texture246_g117940) = _TerrainShaderTex1;
				SamplerState Sampler246_g117940 = SS30_g118001;
				half4 Coords246_g117940 = temp_output_37_0_g117940;
				half3 WorldPosition246_g117940 = temp_output_279_0_g117940;
				half3 Input_Normal9199_g117895 = normalWS;
				float3 temp_output_280_0_g117940 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117940 = temp_output_280_0_g117940;
				half4 localSamplePlanar3D246_g117940 = SamplePlanar3D( Texture246_g117940 , Sampler246_g117940 , Coords246_g117940 , WorldPosition246_g117940 , WorldNormal246_g117940 );
				TEXTURE2D(Texture234_g117940) = _TerrainShaderTex1;
				SamplerState Sampler234_g117940 = SS30_g118001;
				float4 Coords234_g117940 = temp_output_37_0_g117940;
				float3 WorldPosition234_g117940 = temp_output_279_0_g117940;
				float4 localSampleStochastic2D234_g117940 = SampleStochastic2D( Texture234_g117940 , Sampler234_g117940 , Coords234_g117940 , WorldPosition234_g117940 );
				TEXTURE2D(Texture263_g117940) = _TerrainShaderTex1;
				SamplerState Sampler263_g117940 = SS30_g118001;
				half4 Coords263_g117940 = temp_output_37_0_g117940;
				half3 WorldPosition263_g117940 = temp_output_279_0_g117940;
				half3 WorldNormal263_g117940 = temp_output_280_0_g117940;
				half4 localSampleStochastic3D263_g117940 = SampleStochastic3D( Texture263_g117940 , Sampler263_g117940 , Coords263_g117940 , WorldPosition263_g117940 , WorldNormal263_g117940 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8639_g117895 = localSamplePlanar2D238_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8639_g117895 = localSamplePlanar3D246_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8639_g117895 = localSampleStochastic2D234_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8639_g117895 = localSampleStochastic3D263_g117940;
				#else
				float4 staticSwitch8639_g117895 = localSamplePlanar2D238_g117940;
				#endif
				float4 temp_output_7_0_g117897 = _TerrainShaderMin1;
				float4 temp_output_10_0_g117897 = ( _TerrainShaderMax1 - temp_output_7_0_g117897 );
				float4 temp_output_6970_0_g117895 = saturate( ( ( staticSwitch8639_g117895 - temp_output_7_0_g117897 ) / ( temp_output_10_0_g117897 + 0.0001 ) ) );
				half4 Masks_015_g117901 = temp_output_6970_0_g117895;
				TEXTURE2D(Texture238_g117944) = _TerrainShaderTex2;
				SamplerState Sampler238_g117944 = SS30_g118001;
				half4 Input_Terrain_Coords_026787_g117895 = _TerrainCoord2;
				float4 temp_output_37_0_g117944 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117944 = temp_output_37_0_g117944;
				float3 temp_output_279_0_g117944 = Input_Position9197_g117895;
				half3 WorldPosition238_g117944 = temp_output_279_0_g117944;
				half4 localSamplePlanar2D238_g117944 = SamplePlanar2D( Texture238_g117944 , Sampler238_g117944 , Coords238_g117944 , WorldPosition238_g117944 );
				TEXTURE2D(Texture246_g117944) = _TerrainShaderTex2;
				SamplerState Sampler246_g117944 = SS30_g118001;
				half4 Coords246_g117944 = temp_output_37_0_g117944;
				half3 WorldPosition246_g117944 = temp_output_279_0_g117944;
				float3 temp_output_280_0_g117944 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117944 = temp_output_280_0_g117944;
				half4 localSamplePlanar3D246_g117944 = SamplePlanar3D( Texture246_g117944 , Sampler246_g117944 , Coords246_g117944 , WorldPosition246_g117944 , WorldNormal246_g117944 );
				TEXTURE2D(Texture234_g117944) = _TerrainShaderTex2;
				SamplerState Sampler234_g117944 = SS30_g118001;
				float4 Coords234_g117944 = temp_output_37_0_g117944;
				float3 WorldPosition234_g117944 = temp_output_279_0_g117944;
				float4 localSampleStochastic2D234_g117944 = SampleStochastic2D( Texture234_g117944 , Sampler234_g117944 , Coords234_g117944 , WorldPosition234_g117944 );
				TEXTURE2D(Texture263_g117944) = _TerrainShaderTex2;
				SamplerState Sampler263_g117944 = SS30_g118001;
				half4 Coords263_g117944 = temp_output_37_0_g117944;
				half3 WorldPosition263_g117944 = temp_output_279_0_g117944;
				half3 WorldNormal263_g117944 = temp_output_280_0_g117944;
				half4 localSampleStochastic3D263_g117944 = SampleStochastic3D( Texture263_g117944 , Sampler263_g117944 , Coords263_g117944 , WorldPosition263_g117944 , WorldNormal263_g117944 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8640_g117895 = localSamplePlanar2D238_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8640_g117895 = localSamplePlanar3D246_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8640_g117895 = localSampleStochastic2D234_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8640_g117895 = localSampleStochastic3D263_g117944;
				#else
				float4 staticSwitch8640_g117895 = localSamplePlanar2D238_g117944;
				#endif
				float4 temp_output_7_0_g117907 = _TerrainShaderMin2;
				float4 temp_output_10_0_g117907 = ( _TerrainShaderMax2 - temp_output_7_0_g117907 );
				float4 temp_output_6977_0_g117895 = saturate( ( ( staticSwitch8640_g117895 - temp_output_7_0_g117907 ) / ( temp_output_10_0_g117907 + 0.0001 ) ) );
				half4 Masks_0210_g117901 = temp_output_6977_0_g117895;
				TEXTURE2D(Texture238_g117949) = _TerrainShaderTex3;
				SamplerState Sampler238_g117949 = SS30_g118001;
				half4 Input_Terrain_Coords_036789_g117895 = _TerrainCoord3;
				float4 temp_output_37_0_g117949 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117949 = temp_output_37_0_g117949;
				float3 temp_output_279_0_g117949 = Input_Position9197_g117895;
				half3 WorldPosition238_g117949 = temp_output_279_0_g117949;
				half4 localSamplePlanar2D238_g117949 = SamplePlanar2D( Texture238_g117949 , Sampler238_g117949 , Coords238_g117949 , WorldPosition238_g117949 );
				TEXTURE2D(Texture246_g117949) = _TerrainShaderTex3;
				SamplerState Sampler246_g117949 = SS30_g118001;
				half4 Coords246_g117949 = temp_output_37_0_g117949;
				half3 WorldPosition246_g117949 = temp_output_279_0_g117949;
				float3 temp_output_280_0_g117949 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117949 = temp_output_280_0_g117949;
				half4 localSamplePlanar3D246_g117949 = SamplePlanar3D( Texture246_g117949 , Sampler246_g117949 , Coords246_g117949 , WorldPosition246_g117949 , WorldNormal246_g117949 );
				TEXTURE2D(Texture234_g117949) = _TerrainShaderTex3;
				SamplerState Sampler234_g117949 = SS30_g118001;
				float4 Coords234_g117949 = temp_output_37_0_g117949;
				float3 WorldPosition234_g117949 = temp_output_279_0_g117949;
				float4 localSampleStochastic2D234_g117949 = SampleStochastic2D( Texture234_g117949 , Sampler234_g117949 , Coords234_g117949 , WorldPosition234_g117949 );
				TEXTURE2D(Texture263_g117949) = _TerrainShaderTex3;
				SamplerState Sampler263_g117949 = SS30_g118001;
				half4 Coords263_g117949 = temp_output_37_0_g117949;
				half3 WorldPosition263_g117949 = temp_output_279_0_g117949;
				half3 WorldNormal263_g117949 = temp_output_280_0_g117949;
				half4 localSampleStochastic3D263_g117949 = SampleStochastic3D( Texture263_g117949 , Sampler263_g117949 , Coords263_g117949 , WorldPosition263_g117949 , WorldNormal263_g117949 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8641_g117895 = localSamplePlanar2D238_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8641_g117895 = localSamplePlanar3D246_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8641_g117895 = localSampleStochastic2D234_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8641_g117895 = localSampleStochastic3D263_g117949;
				#else
				float4 staticSwitch8641_g117895 = localSamplePlanar2D238_g117949;
				#endif
				float4 temp_output_7_0_g117908 = _TerrainShaderMin3;
				float4 temp_output_10_0_g117908 = ( _TerrainShaderMax3 - temp_output_7_0_g117908 );
				float4 temp_output_6978_0_g117895 = saturate( ( ( staticSwitch8641_g117895 - temp_output_7_0_g117908 ) / ( temp_output_10_0_g117908 + 0.0001 ) ) );
				half4 Masks_0312_g117901 = temp_output_6978_0_g117895;
				TEXTURE2D(Texture238_g117950) = _TerrainShaderTex4;
				SamplerState Sampler238_g117950 = SS30_g118001;
				half4 Input_Terrain_Coords_046791_g117895 = _TerrainCoord4;
				float4 temp_output_37_0_g117950 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117950 = temp_output_37_0_g117950;
				float3 temp_output_279_0_g117950 = Input_Position9197_g117895;
				half3 WorldPosition238_g117950 = temp_output_279_0_g117950;
				half4 localSamplePlanar2D238_g117950 = SamplePlanar2D( Texture238_g117950 , Sampler238_g117950 , Coords238_g117950 , WorldPosition238_g117950 );
				TEXTURE2D(Texture246_g117950) = _TerrainShaderTex4;
				SamplerState Sampler246_g117950 = SS30_g118001;
				half4 Coords246_g117950 = temp_output_37_0_g117950;
				half3 WorldPosition246_g117950 = temp_output_279_0_g117950;
				float3 temp_output_280_0_g117950 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117950 = temp_output_280_0_g117950;
				half4 localSamplePlanar3D246_g117950 = SamplePlanar3D( Texture246_g117950 , Sampler246_g117950 , Coords246_g117950 , WorldPosition246_g117950 , WorldNormal246_g117950 );
				TEXTURE2D(Texture234_g117950) = _TerrainShaderTex4;
				SamplerState Sampler234_g117950 = SS30_g118001;
				float4 Coords234_g117950 = temp_output_37_0_g117950;
				float3 WorldPosition234_g117950 = temp_output_279_0_g117950;
				float4 localSampleStochastic2D234_g117950 = SampleStochastic2D( Texture234_g117950 , Sampler234_g117950 , Coords234_g117950 , WorldPosition234_g117950 );
				TEXTURE2D(Texture263_g117950) = _TerrainShaderTex4;
				SamplerState Sampler263_g117950 = SS30_g118001;
				half4 Coords263_g117950 = temp_output_37_0_g117950;
				half3 WorldPosition263_g117950 = temp_output_279_0_g117950;
				half3 WorldNormal263_g117950 = temp_output_280_0_g117950;
				half4 localSampleStochastic3D263_g117950 = SampleStochastic3D( Texture263_g117950 , Sampler263_g117950 , Coords263_g117950 , WorldPosition263_g117950 , WorldNormal263_g117950 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8642_g117895 = localSamplePlanar2D238_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8642_g117895 = localSamplePlanar3D246_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8642_g117895 = localSampleStochastic2D234_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8642_g117895 = localSampleStochastic3D263_g117950;
				#else
				float4 staticSwitch8642_g117895 = localSamplePlanar2D238_g117950;
				#endif
				float4 temp_output_7_0_g117909 = _TerrainShaderMin4;
				float4 temp_output_10_0_g117909 = ( _TerrainShaderMax4 - temp_output_7_0_g117909 );
				float4 temp_output_6983_0_g117895 = saturate( ( ( staticSwitch8642_g117895 - temp_output_7_0_g117909 ) / ( temp_output_10_0_g117909 + 0.0001 ) ) );
				half4 Masks_0414_g117901 = temp_output_6983_0_g117895;
				float4 appendResult29_g117901 = (float4((Masks_015_g117901).z , (Masks_0210_g117901).z , (Masks_0312_g117901).z , (Masks_0414_g117901).z));
				half4 Control31_g117901 = Terrain_Control_047365_g117895;
				half4 Terrain_Height_047210_g117895 = ( appendResult29_g117901 * Control31_g117901 );
				float4 heights_047362_g117895 = Terrain_Height_047210_g117895;
				TEXTURE2D(Texture238_g117953) = _TerrainShaderTex5;
				SamplerState Sampler238_g117953 = SS30_g118001;
				half4 Input_Terrain_Coords_058750_g117895 = _TerrainCoord5;
				float4 temp_output_37_0_g117953 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117953 = temp_output_37_0_g117953;
				float3 temp_output_279_0_g117953 = Input_Position9197_g117895;
				half3 WorldPosition238_g117953 = temp_output_279_0_g117953;
				half4 localSamplePlanar2D238_g117953 = SamplePlanar2D( Texture238_g117953 , Sampler238_g117953 , Coords238_g117953 , WorldPosition238_g117953 );
				TEXTURE2D(Texture246_g117953) = _TerrainShaderTex5;
				SamplerState Sampler246_g117953 = SS30_g118001;
				half4 Coords246_g117953 = temp_output_37_0_g117953;
				half3 WorldPosition246_g117953 = temp_output_279_0_g117953;
				float3 temp_output_280_0_g117953 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117953 = temp_output_280_0_g117953;
				half4 localSamplePlanar3D246_g117953 = SamplePlanar3D( Texture246_g117953 , Sampler246_g117953 , Coords246_g117953 , WorldPosition246_g117953 , WorldNormal246_g117953 );
				TEXTURE2D(Texture234_g117953) = _TerrainShaderTex5;
				SamplerState Sampler234_g117953 = SS30_g118001;
				float4 Coords234_g117953 = temp_output_37_0_g117953;
				float3 WorldPosition234_g117953 = temp_output_279_0_g117953;
				float4 localSampleStochastic2D234_g117953 = SampleStochastic2D( Texture234_g117953 , Sampler234_g117953 , Coords234_g117953 , WorldPosition234_g117953 );
				TEXTURE2D(Texture263_g117953) = _TerrainShaderTex5;
				SamplerState Sampler263_g117953 = SS30_g118001;
				half4 Coords263_g117953 = temp_output_37_0_g117953;
				half3 WorldPosition263_g117953 = temp_output_279_0_g117953;
				half3 WorldNormal263_g117953 = temp_output_280_0_g117953;
				half4 localSampleStochastic3D263_g117953 = SampleStochastic3D( Texture263_g117953 , Sampler263_g117953 , Coords263_g117953 , WorldPosition263_g117953 , WorldNormal263_g117953 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8710_g117895 = localSamplePlanar2D238_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8710_g117895 = localSamplePlanar3D246_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8710_g117895 = localSampleStochastic2D234_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8710_g117895 = localSampleStochastic3D263_g117953;
				#else
				float4 staticSwitch8710_g117895 = localSamplePlanar2D238_g117953;
				#endif
				float4 temp_output_7_0_g117912 = _TerrainShaderMin5;
				float4 temp_output_10_0_g117912 = ( _TerrainShaderMax5 - temp_output_7_0_g117912 );
				float4 temp_output_8714_0_g117895 = saturate( ( ( staticSwitch8710_g117895 - temp_output_7_0_g117912 ) / ( temp_output_10_0_g117912 + 0.0001 ) ) );
				half4 Masks_015_g117913 = temp_output_8714_0_g117895;
				TEXTURE2D(Texture238_g117984) = _TerrainShaderTex6;
				SamplerState Sampler238_g117984 = SS30_g118001;
				half4 Input_Terrain_Coords_068751_g117895 = _TerrainCoord6;
				float4 temp_output_37_0_g117984 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117984 = temp_output_37_0_g117984;
				float3 temp_output_279_0_g117984 = Input_Position9197_g117895;
				half3 WorldPosition238_g117984 = temp_output_279_0_g117984;
				half4 localSamplePlanar2D238_g117984 = SamplePlanar2D( Texture238_g117984 , Sampler238_g117984 , Coords238_g117984 , WorldPosition238_g117984 );
				TEXTURE2D(Texture246_g117984) = _TerrainShaderTex6;
				SamplerState Sampler246_g117984 = SS30_g118001;
				half4 Coords246_g117984 = temp_output_37_0_g117984;
				half3 WorldPosition246_g117984 = temp_output_279_0_g117984;
				float3 temp_output_280_0_g117984 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117984 = temp_output_280_0_g117984;
				half4 localSamplePlanar3D246_g117984 = SamplePlanar3D( Texture246_g117984 , Sampler246_g117984 , Coords246_g117984 , WorldPosition246_g117984 , WorldNormal246_g117984 );
				TEXTURE2D(Texture234_g117984) = _TerrainShaderTex6;
				SamplerState Sampler234_g117984 = SS30_g118001;
				float4 Coords234_g117984 = temp_output_37_0_g117984;
				float3 WorldPosition234_g117984 = temp_output_279_0_g117984;
				float4 localSampleStochastic2D234_g117984 = SampleStochastic2D( Texture234_g117984 , Sampler234_g117984 , Coords234_g117984 , WorldPosition234_g117984 );
				TEXTURE2D(Texture263_g117984) = _TerrainShaderTex6;
				SamplerState Sampler263_g117984 = SS30_g118001;
				half4 Coords263_g117984 = temp_output_37_0_g117984;
				half3 WorldPosition263_g117984 = temp_output_279_0_g117984;
				half3 WorldNormal263_g117984 = temp_output_280_0_g117984;
				half4 localSampleStochastic3D263_g117984 = SampleStochastic3D( Texture263_g117984 , Sampler263_g117984 , Coords263_g117984 , WorldPosition263_g117984 , WorldNormal263_g117984 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8711_g117895 = localSamplePlanar2D238_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8711_g117895 = localSamplePlanar3D246_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8711_g117895 = localSampleStochastic2D234_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8711_g117895 = localSampleStochastic3D263_g117984;
				#else
				float4 staticSwitch8711_g117895 = localSamplePlanar2D238_g117984;
				#endif
				float4 temp_output_7_0_g117937 = _TerrainShaderMin6;
				float4 temp_output_10_0_g117937 = ( _TerrainShaderMax6 - temp_output_7_0_g117937 );
				float4 temp_output_8721_0_g117895 = saturate( ( ( staticSwitch8711_g117895 - temp_output_7_0_g117937 ) / ( temp_output_10_0_g117937 + 0.0001 ) ) );
				half4 Masks_0210_g117913 = temp_output_8721_0_g117895;
				TEXTURE2D(Texture238_g117985) = _TerrainShaderTex7;
				SamplerState Sampler238_g117985 = SS30_g118001;
				half4 Input_Terrain_Coords_078752_g117895 = _TerrainCoord7;
				float4 temp_output_37_0_g117985 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117985 = temp_output_37_0_g117985;
				float3 temp_output_279_0_g117985 = Input_Position9197_g117895;
				half3 WorldPosition238_g117985 = temp_output_279_0_g117985;
				half4 localSamplePlanar2D238_g117985 = SamplePlanar2D( Texture238_g117985 , Sampler238_g117985 , Coords238_g117985 , WorldPosition238_g117985 );
				TEXTURE2D(Texture246_g117985) = _TerrainShaderTex7;
				SamplerState Sampler246_g117985 = SS30_g118001;
				half4 Coords246_g117985 = temp_output_37_0_g117985;
				half3 WorldPosition246_g117985 = temp_output_279_0_g117985;
				float3 temp_output_280_0_g117985 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117985 = temp_output_280_0_g117985;
				half4 localSamplePlanar3D246_g117985 = SamplePlanar3D( Texture246_g117985 , Sampler246_g117985 , Coords246_g117985 , WorldPosition246_g117985 , WorldNormal246_g117985 );
				TEXTURE2D(Texture234_g117985) = _TerrainShaderTex7;
				SamplerState Sampler234_g117985 = SS30_g118001;
				float4 Coords234_g117985 = temp_output_37_0_g117985;
				float3 WorldPosition234_g117985 = temp_output_279_0_g117985;
				float4 localSampleStochastic2D234_g117985 = SampleStochastic2D( Texture234_g117985 , Sampler234_g117985 , Coords234_g117985 , WorldPosition234_g117985 );
				TEXTURE2D(Texture263_g117985) = _TerrainShaderTex7;
				SamplerState Sampler263_g117985 = SS30_g118001;
				half4 Coords263_g117985 = temp_output_37_0_g117985;
				half3 WorldPosition263_g117985 = temp_output_279_0_g117985;
				half3 WorldNormal263_g117985 = temp_output_280_0_g117985;
				half4 localSampleStochastic3D263_g117985 = SampleStochastic3D( Texture263_g117985 , Sampler263_g117985 , Coords263_g117985 , WorldPosition263_g117985 , WorldNormal263_g117985 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8712_g117895 = localSamplePlanar2D238_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8712_g117895 = localSamplePlanar3D246_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8712_g117895 = localSampleStochastic2D234_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8712_g117895 = localSampleStochastic3D263_g117985;
				#else
				float4 staticSwitch8712_g117895 = localSamplePlanar2D238_g117985;
				#endif
				float4 temp_output_7_0_g117938 = _TerrainShaderMin7;
				float4 temp_output_10_0_g117938 = ( _TerrainShaderMax7 - temp_output_7_0_g117938 );
				float4 temp_output_8724_0_g117895 = saturate( ( ( staticSwitch8712_g117895 - temp_output_7_0_g117938 ) / ( temp_output_10_0_g117938 + 0.0001 ) ) );
				half4 Masks_0312_g117913 = temp_output_8724_0_g117895;
				TEXTURE2D(Texture238_g117986) = _TerrainShaderTex8;
				SamplerState Sampler238_g117986 = SS30_g118001;
				half4 Input_Terrain_Coords_088749_g117895 = _TerrainCoord8;
				float4 temp_output_37_0_g117986 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117986 = temp_output_37_0_g117986;
				float3 temp_output_279_0_g117986 = Input_Position9197_g117895;
				half3 WorldPosition238_g117986 = temp_output_279_0_g117986;
				half4 localSamplePlanar2D238_g117986 = SamplePlanar2D( Texture238_g117986 , Sampler238_g117986 , Coords238_g117986 , WorldPosition238_g117986 );
				TEXTURE2D(Texture246_g117986) = _TerrainShaderTex8;
				SamplerState Sampler246_g117986 = SS30_g118001;
				half4 Coords246_g117986 = temp_output_37_0_g117986;
				half3 WorldPosition246_g117986 = temp_output_279_0_g117986;
				float3 temp_output_280_0_g117986 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117986 = temp_output_280_0_g117986;
				half4 localSamplePlanar3D246_g117986 = SamplePlanar3D( Texture246_g117986 , Sampler246_g117986 , Coords246_g117986 , WorldPosition246_g117986 , WorldNormal246_g117986 );
				TEXTURE2D(Texture234_g117986) = _TerrainShaderTex8;
				SamplerState Sampler234_g117986 = SS30_g118001;
				float4 Coords234_g117986 = temp_output_37_0_g117986;
				float3 WorldPosition234_g117986 = temp_output_279_0_g117986;
				float4 localSampleStochastic2D234_g117986 = SampleStochastic2D( Texture234_g117986 , Sampler234_g117986 , Coords234_g117986 , WorldPosition234_g117986 );
				TEXTURE2D(Texture263_g117986) = _TerrainShaderTex8;
				SamplerState Sampler263_g117986 = SS30_g118001;
				half4 Coords263_g117986 = temp_output_37_0_g117986;
				half3 WorldPosition263_g117986 = temp_output_279_0_g117986;
				half3 WorldNormal263_g117986 = temp_output_280_0_g117986;
				half4 localSampleStochastic3D263_g117986 = SampleStochastic3D( Texture263_g117986 , Sampler263_g117986 , Coords263_g117986 , WorldPosition263_g117986 , WorldNormal263_g117986 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8713_g117895 = localSamplePlanar2D238_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8713_g117895 = localSamplePlanar3D246_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8713_g117895 = localSampleStochastic2D234_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8713_g117895 = localSampleStochastic3D263_g117986;
				#else
				float4 staticSwitch8713_g117895 = localSamplePlanar2D238_g117986;
				#endif
				float4 temp_output_7_0_g117939 = _TerrainShaderMin8;
				float4 temp_output_10_0_g117939 = ( _TerrainShaderMax8 - temp_output_7_0_g117939 );
				float4 temp_output_8727_0_g117895 = saturate( ( ( staticSwitch8713_g117895 - temp_output_7_0_g117939 ) / ( temp_output_10_0_g117939 + 0.0001 ) ) );
				half4 Masks_0414_g117913 = temp_output_8727_0_g117895;
				float4 appendResult29_g117913 = (float4((Masks_015_g117913).z , (Masks_0210_g117913).z , (Masks_0312_g117913).z , (Masks_0414_g117913).z));
				half4 Control31_g117913 = Terrain_Control_087366_g117895;
				half4 Terrain_Height_088731_g117895 = ( appendResult29_g117913 * Control31_g117913 );
				float4 heights_087362_g117895 = Terrain_Height_088731_g117895;
				TEXTURE2D(Texture238_g117956) = _TerrainShaderTex9;
				SamplerState Sampler238_g117956 = SS30_g118001;
				half4 Input_Terrain_Coords_098833_g117895 = _TerrainCoord9;
				float4 temp_output_37_0_g117956 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117956 = temp_output_37_0_g117956;
				float3 temp_output_279_0_g117956 = Input_Position9197_g117895;
				half3 WorldPosition238_g117956 = temp_output_279_0_g117956;
				half4 localSamplePlanar2D238_g117956 = SamplePlanar2D( Texture238_g117956 , Sampler238_g117956 , Coords238_g117956 , WorldPosition238_g117956 );
				TEXTURE2D(Texture246_g117956) = _TerrainShaderTex9;
				SamplerState Sampler246_g117956 = SS30_g118001;
				half4 Coords246_g117956 = temp_output_37_0_g117956;
				half3 WorldPosition246_g117956 = temp_output_279_0_g117956;
				float3 temp_output_280_0_g117956 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117956 = temp_output_280_0_g117956;
				half4 localSamplePlanar3D246_g117956 = SamplePlanar3D( Texture246_g117956 , Sampler246_g117956 , Coords246_g117956 , WorldPosition246_g117956 , WorldNormal246_g117956 );
				TEXTURE2D(Texture234_g117956) = _TerrainShaderTex9;
				SamplerState Sampler234_g117956 = SS30_g118001;
				float4 Coords234_g117956 = temp_output_37_0_g117956;
				float3 WorldPosition234_g117956 = temp_output_279_0_g117956;
				float4 localSampleStochastic2D234_g117956 = SampleStochastic2D( Texture234_g117956 , Sampler234_g117956 , Coords234_g117956 , WorldPosition234_g117956 );
				TEXTURE2D(Texture263_g117956) = _TerrainShaderTex9;
				SamplerState Sampler263_g117956 = SS30_g118001;
				half4 Coords263_g117956 = temp_output_37_0_g117956;
				half3 WorldPosition263_g117956 = temp_output_279_0_g117956;
				half3 WorldNormal263_g117956 = temp_output_280_0_g117956;
				half4 localSampleStochastic3D263_g117956 = SampleStochastic3D( Texture263_g117956 , Sampler263_g117956 , Coords263_g117956 , WorldPosition263_g117956 , WorldNormal263_g117956 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8878_g117895 = localSamplePlanar2D238_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8878_g117895 = localSamplePlanar3D246_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8878_g117895 = localSampleStochastic2D234_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8878_g117895 = localSampleStochastic3D263_g117956;
				#else
				float4 staticSwitch8878_g117895 = localSamplePlanar2D238_g117956;
				#endif
				float4 temp_output_7_0_g117919 = _TerrainShaderMin9;
				float4 temp_output_10_0_g117919 = ( _TerrainShaderMax9 - temp_output_7_0_g117919 );
				float4 temp_output_8815_0_g117895 = saturate( ( ( staticSwitch8878_g117895 - temp_output_7_0_g117919 ) / ( temp_output_10_0_g117919 + 0.0001 ) ) );
				half4 Masks_015_g117920 = temp_output_8815_0_g117895;
				TEXTURE2D(Texture238_g117966) = _TerrainShaderTex10;
				SamplerState Sampler238_g117966 = SS30_g118001;
				half4 Input_Terrain_Coords_108834_g117895 = _TerrainCoord10;
				float4 temp_output_37_0_g117966 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117966 = temp_output_37_0_g117966;
				float3 temp_output_279_0_g117966 = Input_Position9197_g117895;
				half3 WorldPosition238_g117966 = temp_output_279_0_g117966;
				half4 localSamplePlanar2D238_g117966 = SamplePlanar2D( Texture238_g117966 , Sampler238_g117966 , Coords238_g117966 , WorldPosition238_g117966 );
				TEXTURE2D(Texture246_g117966) = _TerrainShaderTex10;
				SamplerState Sampler246_g117966 = SS30_g118001;
				half4 Coords246_g117966 = temp_output_37_0_g117966;
				half3 WorldPosition246_g117966 = temp_output_279_0_g117966;
				float3 temp_output_280_0_g117966 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117966 = temp_output_280_0_g117966;
				half4 localSamplePlanar3D246_g117966 = SamplePlanar3D( Texture246_g117966 , Sampler246_g117966 , Coords246_g117966 , WorldPosition246_g117966 , WorldNormal246_g117966 );
				TEXTURE2D(Texture234_g117966) = _TerrainShaderTex10;
				SamplerState Sampler234_g117966 = SS30_g118001;
				float4 Coords234_g117966 = temp_output_37_0_g117966;
				float3 WorldPosition234_g117966 = temp_output_279_0_g117966;
				float4 localSampleStochastic2D234_g117966 = SampleStochastic2D( Texture234_g117966 , Sampler234_g117966 , Coords234_g117966 , WorldPosition234_g117966 );
				TEXTURE2D(Texture263_g117966) = _TerrainShaderTex10;
				SamplerState Sampler263_g117966 = SS30_g118001;
				half4 Coords263_g117966 = temp_output_37_0_g117966;
				half3 WorldPosition263_g117966 = temp_output_279_0_g117966;
				half3 WorldNormal263_g117966 = temp_output_280_0_g117966;
				half4 localSampleStochastic3D263_g117966 = SampleStochastic3D( Texture263_g117966 , Sampler263_g117966 , Coords263_g117966 , WorldPosition263_g117966 , WorldNormal263_g117966 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8860_g117895 = localSamplePlanar2D238_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8860_g117895 = localSamplePlanar3D246_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8860_g117895 = localSampleStochastic2D234_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8860_g117895 = localSampleStochastic3D263_g117966;
				#else
				float4 staticSwitch8860_g117895 = localSamplePlanar2D238_g117966;
				#endif
				float4 temp_output_7_0_g117931 = _TerrainShaderMin10;
				float4 temp_output_10_0_g117931 = ( _TerrainShaderMax10 - temp_output_7_0_g117931 );
				float4 temp_output_8818_0_g117895 = saturate( ( ( staticSwitch8860_g117895 - temp_output_7_0_g117931 ) / ( temp_output_10_0_g117931 + 0.0001 ) ) );
				half4 Masks_0210_g117920 = temp_output_8818_0_g117895;
				TEXTURE2D(Texture238_g117967) = _TerrainShaderTex11;
				SamplerState Sampler238_g117967 = SS30_g118001;
				half4 Input_Terrain_Coords_118835_g117895 = _TerrainCoord11;
				float4 temp_output_37_0_g117967 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117967 = temp_output_37_0_g117967;
				float3 temp_output_279_0_g117967 = Input_Position9197_g117895;
				half3 WorldPosition238_g117967 = temp_output_279_0_g117967;
				half4 localSamplePlanar2D238_g117967 = SamplePlanar2D( Texture238_g117967 , Sampler238_g117967 , Coords238_g117967 , WorldPosition238_g117967 );
				TEXTURE2D(Texture246_g117967) = _TerrainShaderTex11;
				SamplerState Sampler246_g117967 = SS30_g118001;
				half4 Coords246_g117967 = temp_output_37_0_g117967;
				half3 WorldPosition246_g117967 = temp_output_279_0_g117967;
				float3 temp_output_280_0_g117967 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117967 = temp_output_280_0_g117967;
				half4 localSamplePlanar3D246_g117967 = SamplePlanar3D( Texture246_g117967 , Sampler246_g117967 , Coords246_g117967 , WorldPosition246_g117967 , WorldNormal246_g117967 );
				TEXTURE2D(Texture234_g117967) = _TerrainShaderTex11;
				SamplerState Sampler234_g117967 = SS30_g118001;
				float4 Coords234_g117967 = temp_output_37_0_g117967;
				float3 WorldPosition234_g117967 = temp_output_279_0_g117967;
				float4 localSampleStochastic2D234_g117967 = SampleStochastic2D( Texture234_g117967 , Sampler234_g117967 , Coords234_g117967 , WorldPosition234_g117967 );
				TEXTURE2D(Texture263_g117967) = _TerrainShaderTex11;
				SamplerState Sampler263_g117967 = SS30_g118001;
				half4 Coords263_g117967 = temp_output_37_0_g117967;
				half3 WorldPosition263_g117967 = temp_output_279_0_g117967;
				half3 WorldNormal263_g117967 = temp_output_280_0_g117967;
				half4 localSampleStochastic3D263_g117967 = SampleStochastic3D( Texture263_g117967 , Sampler263_g117967 , Coords263_g117967 , WorldPosition263_g117967 , WorldNormal263_g117967 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8861_g117895 = localSamplePlanar2D238_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8861_g117895 = localSamplePlanar3D246_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8861_g117895 = localSampleStochastic2D234_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8861_g117895 = localSampleStochastic3D263_g117967;
				#else
				float4 staticSwitch8861_g117895 = localSamplePlanar2D238_g117967;
				#endif
				float4 temp_output_7_0_g117932 = _TerrainShaderMin11;
				float4 temp_output_10_0_g117932 = ( _TerrainShaderMax11 - temp_output_7_0_g117932 );
				float4 temp_output_8819_0_g117895 = saturate( ( ( staticSwitch8861_g117895 - temp_output_7_0_g117932 ) / ( temp_output_10_0_g117932 + 0.0001 ) ) );
				half4 Masks_0312_g117920 = temp_output_8819_0_g117895;
				TEXTURE2D(Texture238_g117968) = _TerrainShaderTex12;
				SamplerState Sampler238_g117968 = SS30_g118001;
				half4 Input_Terrain_Coords_128836_g117895 = _TerrainCoord12;
				float4 temp_output_37_0_g117968 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117968 = temp_output_37_0_g117968;
				float3 temp_output_279_0_g117968 = Input_Position9197_g117895;
				half3 WorldPosition238_g117968 = temp_output_279_0_g117968;
				half4 localSamplePlanar2D238_g117968 = SamplePlanar2D( Texture238_g117968 , Sampler238_g117968 , Coords238_g117968 , WorldPosition238_g117968 );
				TEXTURE2D(Texture246_g117968) = _TerrainShaderTex12;
				SamplerState Sampler246_g117968 = SS30_g118001;
				half4 Coords246_g117968 = temp_output_37_0_g117968;
				half3 WorldPosition246_g117968 = temp_output_279_0_g117968;
				float3 temp_output_280_0_g117968 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117968 = temp_output_280_0_g117968;
				half4 localSamplePlanar3D246_g117968 = SamplePlanar3D( Texture246_g117968 , Sampler246_g117968 , Coords246_g117968 , WorldPosition246_g117968 , WorldNormal246_g117968 );
				TEXTURE2D(Texture234_g117968) = _TerrainShaderTex12;
				SamplerState Sampler234_g117968 = SS30_g118001;
				float4 Coords234_g117968 = temp_output_37_0_g117968;
				float3 WorldPosition234_g117968 = temp_output_279_0_g117968;
				float4 localSampleStochastic2D234_g117968 = SampleStochastic2D( Texture234_g117968 , Sampler234_g117968 , Coords234_g117968 , WorldPosition234_g117968 );
				TEXTURE2D(Texture263_g117968) = _TerrainShaderTex12;
				SamplerState Sampler263_g117968 = SS30_g118001;
				half4 Coords263_g117968 = temp_output_37_0_g117968;
				half3 WorldPosition263_g117968 = temp_output_279_0_g117968;
				half3 WorldNormal263_g117968 = temp_output_280_0_g117968;
				half4 localSampleStochastic3D263_g117968 = SampleStochastic3D( Texture263_g117968 , Sampler263_g117968 , Coords263_g117968 , WorldPosition263_g117968 , WorldNormal263_g117968 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8879_g117895 = localSamplePlanar2D238_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8879_g117895 = localSamplePlanar3D246_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8879_g117895 = localSampleStochastic2D234_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8879_g117895 = localSampleStochastic3D263_g117968;
				#else
				float4 staticSwitch8879_g117895 = localSamplePlanar2D238_g117968;
				#endif
				float4 temp_output_7_0_g117933 = _TerrainShaderMin12;
				float4 temp_output_10_0_g117933 = ( _TerrainShaderMax12 - temp_output_7_0_g117933 );
				float4 temp_output_8820_0_g117895 = saturate( ( ( staticSwitch8879_g117895 - temp_output_7_0_g117933 ) / ( temp_output_10_0_g117933 + 0.0001 ) ) );
				half4 Masks_0414_g117920 = temp_output_8820_0_g117895;
				float4 appendResult29_g117920 = (float4((Masks_015_g117920).z , (Masks_0210_g117920).z , (Masks_0312_g117920).z , (Masks_0414_g117920).z));
				half4 Control31_g117920 = Terrain_Control_127712_g117895;
				half4 Terrain_Height_128870_g117895 = ( appendResult29_g117920 * Control31_g117920 );
				float4 heights_127362_g117895 = Terrain_Height_128870_g117895;
				TEXTURE2D(Texture238_g117964) = _TerrainShaderTex13;
				SamplerState Sampler238_g117964 = SS30_g118001;
				half4 Input_Terrain_Coords_138960_g117895 = _TerrainCoord13;
				float4 temp_output_37_0_g117964 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117964 = temp_output_37_0_g117964;
				float3 temp_output_279_0_g117964 = Input_Position9197_g117895;
				half3 WorldPosition238_g117964 = temp_output_279_0_g117964;
				half4 localSamplePlanar2D238_g117964 = SamplePlanar2D( Texture238_g117964 , Sampler238_g117964 , Coords238_g117964 , WorldPosition238_g117964 );
				TEXTURE2D(Texture246_g117964) = _TerrainShaderTex13;
				SamplerState Sampler246_g117964 = SS30_g118001;
				half4 Coords246_g117964 = temp_output_37_0_g117964;
				half3 WorldPosition246_g117964 = temp_output_279_0_g117964;
				float3 temp_output_280_0_g117964 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117964 = temp_output_280_0_g117964;
				half4 localSamplePlanar3D246_g117964 = SamplePlanar3D( Texture246_g117964 , Sampler246_g117964 , Coords246_g117964 , WorldPosition246_g117964 , WorldNormal246_g117964 );
				TEXTURE2D(Texture234_g117964) = _TerrainShaderTex13;
				SamplerState Sampler234_g117964 = SS30_g118001;
				float4 Coords234_g117964 = temp_output_37_0_g117964;
				float3 WorldPosition234_g117964 = temp_output_279_0_g117964;
				float4 localSampleStochastic2D234_g117964 = SampleStochastic2D( Texture234_g117964 , Sampler234_g117964 , Coords234_g117964 , WorldPosition234_g117964 );
				TEXTURE2D(Texture263_g117964) = _TerrainShaderTex13;
				SamplerState Sampler263_g117964 = SS30_g118001;
				half4 Coords263_g117964 = temp_output_37_0_g117964;
				half3 WorldPosition263_g117964 = temp_output_279_0_g117964;
				half3 WorldNormal263_g117964 = temp_output_280_0_g117964;
				half4 localSampleStochastic3D263_g117964 = SampleStochastic3D( Texture263_g117964 , Sampler263_g117964 , Coords263_g117964 , WorldPosition263_g117964 , WorldNormal263_g117964 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch9000_g117895 = localSamplePlanar2D238_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch9000_g117895 = localSamplePlanar3D246_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch9000_g117895 = localSampleStochastic2D234_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch9000_g117895 = localSampleStochastic3D263_g117964;
				#else
				float4 staticSwitch9000_g117895 = localSamplePlanar2D238_g117964;
				#endif
				float4 temp_output_7_0_g117926 = _TerrainShaderMin13;
				float4 temp_output_10_0_g117926 = ( _TerrainShaderMax13 - temp_output_7_0_g117926 );
				float4 temp_output_8931_0_g117895 = saturate( ( ( staticSwitch9000_g117895 - temp_output_7_0_g117926 ) / ( temp_output_10_0_g117926 + 0.0001 ) ) );
				half4 Masks_015_g117927 = temp_output_8931_0_g117895;
				TEXTURE2D(Texture238_g117975) = _TerrainShaderTex14;
				SamplerState Sampler238_g117975 = SS30_g118001;
				half4 Input_Terrain_Coords_148961_g117895 = _TerrainCoord14;
				float4 temp_output_37_0_g117975 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117975 = temp_output_37_0_g117975;
				float3 temp_output_279_0_g117975 = Input_Position9197_g117895;
				half3 WorldPosition238_g117975 = temp_output_279_0_g117975;
				half4 localSamplePlanar2D238_g117975 = SamplePlanar2D( Texture238_g117975 , Sampler238_g117975 , Coords238_g117975 , WorldPosition238_g117975 );
				TEXTURE2D(Texture246_g117975) = _TerrainShaderTex14;
				SamplerState Sampler246_g117975 = SS30_g118001;
				half4 Coords246_g117975 = temp_output_37_0_g117975;
				half3 WorldPosition246_g117975 = temp_output_279_0_g117975;
				float3 temp_output_280_0_g117975 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117975 = temp_output_280_0_g117975;
				half4 localSamplePlanar3D246_g117975 = SamplePlanar3D( Texture246_g117975 , Sampler246_g117975 , Coords246_g117975 , WorldPosition246_g117975 , WorldNormal246_g117975 );
				TEXTURE2D(Texture234_g117975) = _TerrainShaderTex14;
				SamplerState Sampler234_g117975 = SS30_g118001;
				float4 Coords234_g117975 = temp_output_37_0_g117975;
				float3 WorldPosition234_g117975 = temp_output_279_0_g117975;
				float4 localSampleStochastic2D234_g117975 = SampleStochastic2D( Texture234_g117975 , Sampler234_g117975 , Coords234_g117975 , WorldPosition234_g117975 );
				TEXTURE2D(Texture263_g117975) = _TerrainShaderTex14;
				SamplerState Sampler263_g117975 = SS30_g118001;
				half4 Coords263_g117975 = temp_output_37_0_g117975;
				half3 WorldPosition263_g117975 = temp_output_279_0_g117975;
				half3 WorldNormal263_g117975 = temp_output_280_0_g117975;
				half4 localSampleStochastic3D263_g117975 = SampleStochastic3D( Texture263_g117975 , Sampler263_g117975 , Coords263_g117975 , WorldPosition263_g117975 , WorldNormal263_g117975 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch9001_g117895 = localSamplePlanar2D238_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch9001_g117895 = localSamplePlanar3D246_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch9001_g117895 = localSampleStochastic2D234_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch9001_g117895 = localSampleStochastic3D263_g117975;
				#else
				float4 staticSwitch9001_g117895 = localSamplePlanar2D238_g117975;
				#endif
				float4 temp_output_7_0_g117934 = _TerrainShaderMin14;
				float4 temp_output_10_0_g117934 = ( _TerrainShaderMax14 - temp_output_7_0_g117934 );
				float4 temp_output_8934_0_g117895 = saturate( ( ( staticSwitch9001_g117895 - temp_output_7_0_g117934 ) / ( temp_output_10_0_g117934 + 0.0001 ) ) );
				half4 Masks_0210_g117927 = temp_output_8934_0_g117895;
				TEXTURE2D(Texture238_g117976) = _TerrainShaderTex15;
				SamplerState Sampler238_g117976 = SS30_g118001;
				half4 Input_Terrain_Coords_158962_g117895 = _TerrainCoord15;
				float4 temp_output_37_0_g117976 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117976 = temp_output_37_0_g117976;
				float3 temp_output_279_0_g117976 = Input_Position9197_g117895;
				half3 WorldPosition238_g117976 = temp_output_279_0_g117976;
				half4 localSamplePlanar2D238_g117976 = SamplePlanar2D( Texture238_g117976 , Sampler238_g117976 , Coords238_g117976 , WorldPosition238_g117976 );
				TEXTURE2D(Texture246_g117976) = _TerrainShaderTex15;
				SamplerState Sampler246_g117976 = SS30_g118001;
				half4 Coords246_g117976 = temp_output_37_0_g117976;
				half3 WorldPosition246_g117976 = temp_output_279_0_g117976;
				float3 temp_output_280_0_g117976 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117976 = temp_output_280_0_g117976;
				half4 localSamplePlanar3D246_g117976 = SamplePlanar3D( Texture246_g117976 , Sampler246_g117976 , Coords246_g117976 , WorldPosition246_g117976 , WorldNormal246_g117976 );
				TEXTURE2D(Texture234_g117976) = _TerrainShaderTex15;
				SamplerState Sampler234_g117976 = SS30_g118001;
				float4 Coords234_g117976 = temp_output_37_0_g117976;
				float3 WorldPosition234_g117976 = temp_output_279_0_g117976;
				float4 localSampleStochastic2D234_g117976 = SampleStochastic2D( Texture234_g117976 , Sampler234_g117976 , Coords234_g117976 , WorldPosition234_g117976 );
				TEXTURE2D(Texture263_g117976) = _TerrainShaderTex15;
				SamplerState Sampler263_g117976 = SS30_g118001;
				half4 Coords263_g117976 = temp_output_37_0_g117976;
				half3 WorldPosition263_g117976 = temp_output_279_0_g117976;
				half3 WorldNormal263_g117976 = temp_output_280_0_g117976;
				half4 localSampleStochastic3D263_g117976 = SampleStochastic3D( Texture263_g117976 , Sampler263_g117976 , Coords263_g117976 , WorldPosition263_g117976 , WorldNormal263_g117976 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch9002_g117895 = localSamplePlanar2D238_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch9002_g117895 = localSamplePlanar3D246_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch9002_g117895 = localSampleStochastic2D234_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch9002_g117895 = localSampleStochastic3D263_g117976;
				#else
				float4 staticSwitch9002_g117895 = localSamplePlanar2D238_g117976;
				#endif
				float4 temp_output_7_0_g117935 = _TerrainShaderMin15;
				float4 temp_output_10_0_g117935 = ( _TerrainShaderMax15 - temp_output_7_0_g117935 );
				float4 temp_output_8935_0_g117895 = saturate( ( ( staticSwitch9002_g117895 - temp_output_7_0_g117935 ) / ( temp_output_10_0_g117935 + 0.0001 ) ) );
				half4 Masks_0312_g117927 = temp_output_8935_0_g117895;
				TEXTURE2D(Texture238_g117977) = _TerrainShaderTex16;
				SamplerState Sampler238_g117977 = SS30_g118001;
				half4 Input_Terrain_Coords_168959_g117895 = _TerrainCoord16;
				float4 temp_output_37_0_g117977 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117977 = temp_output_37_0_g117977;
				float3 temp_output_279_0_g117977 = Input_Position9197_g117895;
				half3 WorldPosition238_g117977 = temp_output_279_0_g117977;
				half4 localSamplePlanar2D238_g117977 = SamplePlanar2D( Texture238_g117977 , Sampler238_g117977 , Coords238_g117977 , WorldPosition238_g117977 );
				TEXTURE2D(Texture246_g117977) = _TerrainShaderTex16;
				SamplerState Sampler246_g117977 = SS30_g118001;
				half4 Coords246_g117977 = temp_output_37_0_g117977;
				half3 WorldPosition246_g117977 = temp_output_279_0_g117977;
				float3 temp_output_280_0_g117977 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117977 = temp_output_280_0_g117977;
				half4 localSamplePlanar3D246_g117977 = SamplePlanar3D( Texture246_g117977 , Sampler246_g117977 , Coords246_g117977 , WorldPosition246_g117977 , WorldNormal246_g117977 );
				TEXTURE2D(Texture234_g117977) = _TerrainShaderTex16;
				SamplerState Sampler234_g117977 = SS30_g118001;
				float4 Coords234_g117977 = temp_output_37_0_g117977;
				float3 WorldPosition234_g117977 = temp_output_279_0_g117977;
				float4 localSampleStochastic2D234_g117977 = SampleStochastic2D( Texture234_g117977 , Sampler234_g117977 , Coords234_g117977 , WorldPosition234_g117977 );
				TEXTURE2D(Texture263_g117977) = _TerrainShaderTex16;
				SamplerState Sampler263_g117977 = SS30_g118001;
				half4 Coords263_g117977 = temp_output_37_0_g117977;
				half3 WorldPosition263_g117977 = temp_output_279_0_g117977;
				half3 WorldNormal263_g117977 = temp_output_280_0_g117977;
				half4 localSampleStochastic3D263_g117977 = SampleStochastic3D( Texture263_g117977 , Sampler263_g117977 , Coords263_g117977 , WorldPosition263_g117977 , WorldNormal263_g117977 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch9003_g117895 = localSamplePlanar2D238_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch9003_g117895 = localSamplePlanar3D246_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch9003_g117895 = localSampleStochastic2D234_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch9003_g117895 = localSampleStochastic3D263_g117977;
				#else
				float4 staticSwitch9003_g117895 = localSamplePlanar2D238_g117977;
				#endif
				float4 temp_output_7_0_g117936 = _TerrainShaderMin16;
				float4 temp_output_10_0_g117936 = ( _TerrainShaderMax16 - temp_output_7_0_g117936 );
				float4 temp_output_8936_0_g117895 = saturate( ( ( staticSwitch9003_g117895 - temp_output_7_0_g117936 ) / ( temp_output_10_0_g117936 + 0.0001 ) ) );
				half4 Masks_0414_g117927 = temp_output_8936_0_g117895;
				float4 appendResult29_g117927 = (float4((Masks_015_g117927).z , (Masks_0210_g117927).z , (Masks_0312_g117927).z , (Masks_0414_g117927).z));
				half4 Control31_g117927 = Terrain_Control_167711_g117895;
				half4 Terrain_Height_169015_g117895 = ( appendResult29_g117927 * Control31_g117927 );
				float4 heights_167362_g117895 = Terrain_Height_169015_g117895;
				float heightTransition7362_g117895 = ( 1.0 - _TerrainHeightBlendValue );
				float4 weights_047362_g117895 = float4( 0,0,0,0 );
				float4 weights_087362_g117895 = float4( 0,0,0,0 );
				float4 weights_127362_g117895 = float4( 0,0,0,0 );
				float4 weights_167362_g117895 = float4( 0,0,0,0 );
				//Modified version of the HDRP terrain height based blending
				float maxHeight = 0;
				float4 weightedHeights_04 = float4( 0,0,0,0 );
				float4 weightedHeights_08 = float4( 0,0,0,0 );
				float4 weightedHeights_12 = float4( 0,0,0,0 );
				float4 weightedHeights_16 = float4( 0,0,0,0 );
				maxHeight = heights_047362_g117895.x;
				maxHeight = max(maxHeight, heights_047362_g117895.y);
				maxHeight = max(maxHeight, heights_047362_g117895.z);
				maxHeight = max(maxHeight, heights_047362_g117895.w);
				#ifdef TVE_TERRAIN_08
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				#endif
				#ifdef TVE_TERRAIN_12
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				maxHeight = max(maxHeight, heights_127362_g117895.x);
				maxHeight = max(maxHeight, heights_127362_g117895.y);
				maxHeight = max(maxHeight, heights_127362_g117895.z);
				maxHeight = max(maxHeight, heights_127362_g117895.w);
				#endif
				#ifdef TVE_TERRAIN_16
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				maxHeight = max(maxHeight, heights_127362_g117895.x);
				maxHeight = max(maxHeight, heights_127362_g117895.y);
				maxHeight = max(maxHeight, heights_127362_g117895.z);
				maxHeight = max(maxHeight, heights_127362_g117895.w);
				maxHeight = max(maxHeight, heights_167362_g117895.x);
				maxHeight = max(maxHeight, heights_167362_g117895.y);
				maxHeight = max(maxHeight, heights_167362_g117895.z);
				maxHeight = max(maxHeight, heights_167362_g117895.w);
				#endif
				float transition = max(heightTransition7362_g117895, 0.01);
				weightedHeights_04 = float4 ( heights_047362_g117895.x, heights_047362_g117895.y, heights_047362_g117895.z, heights_047362_g117895.w );
				weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
				weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g117895;
				#ifdef TVE_TERRAIN_08
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				#endif
				#ifdef TVE_TERRAIN_12
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				weightedHeights_12 = float4 ( heights_127362_g117895.x, heights_127362_g117895.y, heights_127362_g117895.z, heights_127362_g117895.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g117895;
				#endif
				#ifdef TVE_TERRAIN_16
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				weightedHeights_12 = float4 ( heights_127362_g117895.x, heights_127362_g117895.y, heights_127362_g117895.z, heights_127362_g117895.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g117895;
				weightedHeights_16 = float4 ( heights_167362_g117895.x, heights_167362_g117895.y, heights_167362_g117895.z, heights_167362_g117895.w );
				weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
				weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g117895;
				#endif
				float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
				float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
				float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
				float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
				float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
				weights_047362_g117895 = weightedHeights_04 / sumHeight.xxxx;
				#ifdef TVE_TERRAIN_08
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_12
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g117895 = weightedHeights_12 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_16
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g117895 = weightedHeights_12 / sumHeight.xxxx;
				weights_167362_g117895 = weightedHeights_16 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8792_g117895 = weights_047362_g117895;
				#else
				float4 staticSwitch8792_g117895 = control_047362_g117895;
				#endif
				half4 Terrain_Weights_046781_g117895 = staticSwitch8792_g117895;
				half4 Weights52_g117900 = Terrain_Weights_046781_g117895;
				TEXTURE2D(Texture238_g117941) = _TerrainAlbedoTex1;
				float localFilterTexture19_g117998 = ( 0.0 );
				SamplerState SamplerDefault19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g117998 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g117998 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g117998 = SamplerDefault19_g117998;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g117998 = SamplerDefault19_g117998;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g117998 = SamplerPoint19_g117998;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g117998 = SamplerLow19_g117998;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g117998 = SamplerMedium19_g117998;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g117998 = SamplerHigh19_g117998;
				#endif
				SamplerState Sampler238_g117941 = SS19_g117998;
				float4 temp_output_37_0_g117941 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117941 = temp_output_37_0_g117941;
				float3 temp_output_279_0_g117941 = Input_Position9197_g117895;
				half3 WorldPosition238_g117941 = temp_output_279_0_g117941;
				half4 localSamplePlanar2D238_g117941 = SamplePlanar2D( Texture238_g117941 , Sampler238_g117941 , Coords238_g117941 , WorldPosition238_g117941 );
				TEXTURE2D(Texture246_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler246_g117941 = SS19_g117998;
				half4 Coords246_g117941 = temp_output_37_0_g117941;
				half3 WorldPosition246_g117941 = temp_output_279_0_g117941;
				float3 temp_output_280_0_g117941 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117941 = temp_output_280_0_g117941;
				half4 localSamplePlanar3D246_g117941 = SamplePlanar3D( Texture246_g117941 , Sampler246_g117941 , Coords246_g117941 , WorldPosition246_g117941 , WorldNormal246_g117941 );
				TEXTURE2D(Texture234_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler234_g117941 = SS19_g117998;
				float4 Coords234_g117941 = temp_output_37_0_g117941;
				float3 WorldPosition234_g117941 = temp_output_279_0_g117941;
				float4 localSampleStochastic2D234_g117941 = SampleStochastic2D( Texture234_g117941 , Sampler234_g117941 , Coords234_g117941 , WorldPosition234_g117941 );
				TEXTURE2D(Texture263_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler263_g117941 = SS19_g117998;
				half4 Coords263_g117941 = temp_output_37_0_g117941;
				half3 WorldPosition263_g117941 = temp_output_279_0_g117941;
				half3 WorldNormal263_g117941 = temp_output_280_0_g117941;
				half4 localSampleStochastic3D263_g117941 = SampleStochastic3D( Texture263_g117941 , Sampler263_g117941 , Coords263_g117941 , WorldPosition263_g117941 , WorldNormal263_g117941 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8614_g117895 = localSamplePlanar2D238_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8614_g117895 = localSamplePlanar3D246_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8614_g117895 = localSampleStochastic2D234_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8614_g117895 = localSampleStochastic3D263_g117941;
				#else
				float4 staticSwitch8614_g117895 = localSamplePlanar2D238_g117941;
				#endif
				half4 Layer133_g117900 = staticSwitch8614_g117895;
				TEXTURE2D(Texture238_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler238_g117942 = SS19_g117998;
				float4 temp_output_37_0_g117942 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117942 = temp_output_37_0_g117942;
				float3 temp_output_279_0_g117942 = Input_Position9197_g117895;
				half3 WorldPosition238_g117942 = temp_output_279_0_g117942;
				half4 localSamplePlanar2D238_g117942 = SamplePlanar2D( Texture238_g117942 , Sampler238_g117942 , Coords238_g117942 , WorldPosition238_g117942 );
				TEXTURE2D(Texture246_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler246_g117942 = SS19_g117998;
				half4 Coords246_g117942 = temp_output_37_0_g117942;
				half3 WorldPosition246_g117942 = temp_output_279_0_g117942;
				float3 temp_output_280_0_g117942 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117942 = temp_output_280_0_g117942;
				half4 localSamplePlanar3D246_g117942 = SamplePlanar3D( Texture246_g117942 , Sampler246_g117942 , Coords246_g117942 , WorldPosition246_g117942 , WorldNormal246_g117942 );
				TEXTURE2D(Texture234_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler234_g117942 = SS19_g117998;
				float4 Coords234_g117942 = temp_output_37_0_g117942;
				float3 WorldPosition234_g117942 = temp_output_279_0_g117942;
				float4 localSampleStochastic2D234_g117942 = SampleStochastic2D( Texture234_g117942 , Sampler234_g117942 , Coords234_g117942 , WorldPosition234_g117942 );
				TEXTURE2D(Texture263_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler263_g117942 = SS19_g117998;
				half4 Coords263_g117942 = temp_output_37_0_g117942;
				half3 WorldPosition263_g117942 = temp_output_279_0_g117942;
				half3 WorldNormal263_g117942 = temp_output_280_0_g117942;
				half4 localSampleStochastic3D263_g117942 = SampleStochastic3D( Texture263_g117942 , Sampler263_g117942 , Coords263_g117942 , WorldPosition263_g117942 , WorldNormal263_g117942 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8629_g117895 = localSamplePlanar2D238_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8629_g117895 = localSamplePlanar3D246_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8629_g117895 = localSampleStochastic2D234_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8629_g117895 = localSampleStochastic3D263_g117942;
				#else
				float4 staticSwitch8629_g117895 = localSamplePlanar2D238_g117942;
				#endif
				half4 Layer237_g117900 = staticSwitch8629_g117895;
				TEXTURE2D(Texture238_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler238_g117945 = SS19_g117998;
				float4 temp_output_37_0_g117945 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117945 = temp_output_37_0_g117945;
				float3 temp_output_279_0_g117945 = Input_Position9197_g117895;
				half3 WorldPosition238_g117945 = temp_output_279_0_g117945;
				half4 localSamplePlanar2D238_g117945 = SamplePlanar2D( Texture238_g117945 , Sampler238_g117945 , Coords238_g117945 , WorldPosition238_g117945 );
				TEXTURE2D(Texture246_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler246_g117945 = SS19_g117998;
				half4 Coords246_g117945 = temp_output_37_0_g117945;
				half3 WorldPosition246_g117945 = temp_output_279_0_g117945;
				float3 temp_output_280_0_g117945 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117945 = temp_output_280_0_g117945;
				half4 localSamplePlanar3D246_g117945 = SamplePlanar3D( Texture246_g117945 , Sampler246_g117945 , Coords246_g117945 , WorldPosition246_g117945 , WorldNormal246_g117945 );
				TEXTURE2D(Texture234_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler234_g117945 = SS19_g117998;
				float4 Coords234_g117945 = temp_output_37_0_g117945;
				float3 WorldPosition234_g117945 = temp_output_279_0_g117945;
				float4 localSampleStochastic2D234_g117945 = SampleStochastic2D( Texture234_g117945 , Sampler234_g117945 , Coords234_g117945 , WorldPosition234_g117945 );
				TEXTURE2D(Texture263_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler263_g117945 = SS19_g117998;
				half4 Coords263_g117945 = temp_output_37_0_g117945;
				half3 WorldPosition263_g117945 = temp_output_279_0_g117945;
				half3 WorldNormal263_g117945 = temp_output_280_0_g117945;
				half4 localSampleStochastic3D263_g117945 = SampleStochastic3D( Texture263_g117945 , Sampler263_g117945 , Coords263_g117945 , WorldPosition263_g117945 , WorldNormal263_g117945 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8630_g117895 = localSamplePlanar2D238_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8630_g117895 = localSamplePlanar3D246_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8630_g117895 = localSampleStochastic2D234_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8630_g117895 = localSampleStochastic3D263_g117945;
				#else
				float4 staticSwitch8630_g117895 = localSamplePlanar2D238_g117945;
				#endif
				half4 Layer338_g117900 = staticSwitch8630_g117895;
				TEXTURE2D(Texture238_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler238_g117947 = SS19_g117998;
				float4 temp_output_37_0_g117947 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117947 = temp_output_37_0_g117947;
				float3 temp_output_279_0_g117947 = Input_Position9197_g117895;
				half3 WorldPosition238_g117947 = temp_output_279_0_g117947;
				half4 localSamplePlanar2D238_g117947 = SamplePlanar2D( Texture238_g117947 , Sampler238_g117947 , Coords238_g117947 , WorldPosition238_g117947 );
				TEXTURE2D(Texture246_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler246_g117947 = SS19_g117998;
				half4 Coords246_g117947 = temp_output_37_0_g117947;
				half3 WorldPosition246_g117947 = temp_output_279_0_g117947;
				float3 temp_output_280_0_g117947 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117947 = temp_output_280_0_g117947;
				half4 localSamplePlanar3D246_g117947 = SamplePlanar3D( Texture246_g117947 , Sampler246_g117947 , Coords246_g117947 , WorldPosition246_g117947 , WorldNormal246_g117947 );
				TEXTURE2D(Texture234_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler234_g117947 = SS19_g117998;
				float4 Coords234_g117947 = temp_output_37_0_g117947;
				float3 WorldPosition234_g117947 = temp_output_279_0_g117947;
				float4 localSampleStochastic2D234_g117947 = SampleStochastic2D( Texture234_g117947 , Sampler234_g117947 , Coords234_g117947 , WorldPosition234_g117947 );
				TEXTURE2D(Texture263_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler263_g117947 = SS19_g117998;
				half4 Coords263_g117947 = temp_output_37_0_g117947;
				half3 WorldPosition263_g117947 = temp_output_279_0_g117947;
				half3 WorldNormal263_g117947 = temp_output_280_0_g117947;
				half4 localSampleStochastic3D263_g117947 = SampleStochastic3D( Texture263_g117947 , Sampler263_g117947 , Coords263_g117947 , WorldPosition263_g117947 , WorldNormal263_g117947 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8631_g117895 = localSamplePlanar2D238_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8631_g117895 = localSamplePlanar3D246_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8631_g117895 = localSampleStochastic2D234_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8631_g117895 = localSampleStochastic3D263_g117947;
				#else
				float4 staticSwitch8631_g117895 = localSamplePlanar2D238_g117947;
				#endif
				half4 Layer439_g117900 = staticSwitch8631_g117895;
				float4 weightedBlendVar31_g117900 = Weights52_g117900;
				float4 weightedBlend31_g117900 = ( weightedBlendVar31_g117900.x*Layer133_g117900 + weightedBlendVar31_g117900.y*Layer237_g117900 + weightedBlendVar31_g117900.z*Layer338_g117900 + weightedBlendVar31_g117900.w*Layer439_g117900 );
				half4 Terrain_AAAA_047200_g117895 = weightedBlend31_g117900;
				half4 Layer_045_g117903 = Terrain_AAAA_047200_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8793_g117895 = weights_087362_g117895;
				#else
				float4 staticSwitch8793_g117895 = control_087362_g117895;
				#endif
				half4 Terrain_Weights_087340_g117895 = staticSwitch8793_g117895;
				half4 Weights52_g117910 = Terrain_Weights_087340_g117895;
				TEXTURE2D(Texture238_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler238_g117951 = SS19_g117998;
				float4 temp_output_37_0_g117951 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117951 = temp_output_37_0_g117951;
				float3 temp_output_279_0_g117951 = Input_Position9197_g117895;
				half3 WorldPosition238_g117951 = temp_output_279_0_g117951;
				half4 localSamplePlanar2D238_g117951 = SamplePlanar2D( Texture238_g117951 , Sampler238_g117951 , Coords238_g117951 , WorldPosition238_g117951 );
				TEXTURE2D(Texture246_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler246_g117951 = SS19_g117998;
				half4 Coords246_g117951 = temp_output_37_0_g117951;
				half3 WorldPosition246_g117951 = temp_output_279_0_g117951;
				float3 temp_output_280_0_g117951 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117951 = temp_output_280_0_g117951;
				half4 localSamplePlanar3D246_g117951 = SamplePlanar3D( Texture246_g117951 , Sampler246_g117951 , Coords246_g117951 , WorldPosition246_g117951 , WorldNormal246_g117951 );
				TEXTURE2D(Texture234_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler234_g117951 = SS19_g117998;
				float4 Coords234_g117951 = temp_output_37_0_g117951;
				float3 WorldPosition234_g117951 = temp_output_279_0_g117951;
				float4 localSampleStochastic2D234_g117951 = SampleStochastic2D( Texture234_g117951 , Sampler234_g117951 , Coords234_g117951 , WorldPosition234_g117951 );
				TEXTURE2D(Texture263_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler263_g117951 = SS19_g117998;
				half4 Coords263_g117951 = temp_output_37_0_g117951;
				half3 WorldPosition263_g117951 = temp_output_279_0_g117951;
				half3 WorldNormal263_g117951 = temp_output_280_0_g117951;
				half4 localSampleStochastic3D263_g117951 = SampleStochastic3D( Texture263_g117951 , Sampler263_g117951 , Coords263_g117951 , WorldPosition263_g117951 , WorldNormal263_g117951 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8690_g117895 = localSamplePlanar2D238_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8690_g117895 = localSamplePlanar3D246_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8690_g117895 = localSampleStochastic2D234_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8690_g117895 = localSampleStochastic3D263_g117951;
				#else
				float4 staticSwitch8690_g117895 = localSamplePlanar2D238_g117951;
				#endif
				half4 Layer133_g117910 = staticSwitch8690_g117895;
				TEXTURE2D(Texture238_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler238_g117978 = SS19_g117998;
				float4 temp_output_37_0_g117978 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117978 = temp_output_37_0_g117978;
				float3 temp_output_279_0_g117978 = Input_Position9197_g117895;
				half3 WorldPosition238_g117978 = temp_output_279_0_g117978;
				half4 localSamplePlanar2D238_g117978 = SamplePlanar2D( Texture238_g117978 , Sampler238_g117978 , Coords238_g117978 , WorldPosition238_g117978 );
				TEXTURE2D(Texture246_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler246_g117978 = SS19_g117998;
				half4 Coords246_g117978 = temp_output_37_0_g117978;
				half3 WorldPosition246_g117978 = temp_output_279_0_g117978;
				float3 temp_output_280_0_g117978 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117978 = temp_output_280_0_g117978;
				half4 localSamplePlanar3D246_g117978 = SamplePlanar3D( Texture246_g117978 , Sampler246_g117978 , Coords246_g117978 , WorldPosition246_g117978 , WorldNormal246_g117978 );
				TEXTURE2D(Texture234_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler234_g117978 = SS19_g117998;
				float4 Coords234_g117978 = temp_output_37_0_g117978;
				float3 WorldPosition234_g117978 = temp_output_279_0_g117978;
				float4 localSampleStochastic2D234_g117978 = SampleStochastic2D( Texture234_g117978 , Sampler234_g117978 , Coords234_g117978 , WorldPosition234_g117978 );
				TEXTURE2D(Texture263_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler263_g117978 = SS19_g117998;
				half4 Coords263_g117978 = temp_output_37_0_g117978;
				half3 WorldPosition263_g117978 = temp_output_279_0_g117978;
				half3 WorldNormal263_g117978 = temp_output_280_0_g117978;
				half4 localSampleStochastic3D263_g117978 = SampleStochastic3D( Texture263_g117978 , Sampler263_g117978 , Coords263_g117978 , WorldPosition263_g117978 , WorldNormal263_g117978 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8691_g117895 = localSamplePlanar2D238_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8691_g117895 = localSamplePlanar3D246_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8691_g117895 = localSampleStochastic2D234_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8691_g117895 = localSampleStochastic3D263_g117978;
				#else
				float4 staticSwitch8691_g117895 = localSamplePlanar2D238_g117978;
				#endif
				half4 Layer237_g117910 = staticSwitch8691_g117895;
				TEXTURE2D(Texture238_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler238_g117979 = SS19_g117998;
				float4 temp_output_37_0_g117979 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117979 = temp_output_37_0_g117979;
				float3 temp_output_279_0_g117979 = Input_Position9197_g117895;
				half3 WorldPosition238_g117979 = temp_output_279_0_g117979;
				half4 localSamplePlanar2D238_g117979 = SamplePlanar2D( Texture238_g117979 , Sampler238_g117979 , Coords238_g117979 , WorldPosition238_g117979 );
				TEXTURE2D(Texture246_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler246_g117979 = SS19_g117998;
				half4 Coords246_g117979 = temp_output_37_0_g117979;
				half3 WorldPosition246_g117979 = temp_output_279_0_g117979;
				float3 temp_output_280_0_g117979 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117979 = temp_output_280_0_g117979;
				half4 localSamplePlanar3D246_g117979 = SamplePlanar3D( Texture246_g117979 , Sampler246_g117979 , Coords246_g117979 , WorldPosition246_g117979 , WorldNormal246_g117979 );
				TEXTURE2D(Texture234_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler234_g117979 = SS19_g117998;
				float4 Coords234_g117979 = temp_output_37_0_g117979;
				float3 WorldPosition234_g117979 = temp_output_279_0_g117979;
				float4 localSampleStochastic2D234_g117979 = SampleStochastic2D( Texture234_g117979 , Sampler234_g117979 , Coords234_g117979 , WorldPosition234_g117979 );
				TEXTURE2D(Texture263_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler263_g117979 = SS19_g117998;
				half4 Coords263_g117979 = temp_output_37_0_g117979;
				half3 WorldPosition263_g117979 = temp_output_279_0_g117979;
				half3 WorldNormal263_g117979 = temp_output_280_0_g117979;
				half4 localSampleStochastic3D263_g117979 = SampleStochastic3D( Texture263_g117979 , Sampler263_g117979 , Coords263_g117979 , WorldPosition263_g117979 , WorldNormal263_g117979 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8692_g117895 = localSamplePlanar2D238_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8692_g117895 = localSamplePlanar3D246_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8692_g117895 = localSampleStochastic2D234_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8692_g117895 = localSampleStochastic3D263_g117979;
				#else
				float4 staticSwitch8692_g117895 = localSamplePlanar2D238_g117979;
				#endif
				half4 Layer338_g117910 = staticSwitch8692_g117895;
				TEXTURE2D(Texture238_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler238_g117980 = SS19_g117998;
				float4 temp_output_37_0_g117980 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117980 = temp_output_37_0_g117980;
				float3 temp_output_279_0_g117980 = Input_Position9197_g117895;
				half3 WorldPosition238_g117980 = temp_output_279_0_g117980;
				half4 localSamplePlanar2D238_g117980 = SamplePlanar2D( Texture238_g117980 , Sampler238_g117980 , Coords238_g117980 , WorldPosition238_g117980 );
				TEXTURE2D(Texture246_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler246_g117980 = SS19_g117998;
				half4 Coords246_g117980 = temp_output_37_0_g117980;
				half3 WorldPosition246_g117980 = temp_output_279_0_g117980;
				float3 temp_output_280_0_g117980 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117980 = temp_output_280_0_g117980;
				half4 localSamplePlanar3D246_g117980 = SamplePlanar3D( Texture246_g117980 , Sampler246_g117980 , Coords246_g117980 , WorldPosition246_g117980 , WorldNormal246_g117980 );
				TEXTURE2D(Texture234_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler234_g117980 = SS19_g117998;
				float4 Coords234_g117980 = temp_output_37_0_g117980;
				float3 WorldPosition234_g117980 = temp_output_279_0_g117980;
				float4 localSampleStochastic2D234_g117980 = SampleStochastic2D( Texture234_g117980 , Sampler234_g117980 , Coords234_g117980 , WorldPosition234_g117980 );
				TEXTURE2D(Texture263_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler263_g117980 = SS19_g117998;
				half4 Coords263_g117980 = temp_output_37_0_g117980;
				half3 WorldPosition263_g117980 = temp_output_279_0_g117980;
				half3 WorldNormal263_g117980 = temp_output_280_0_g117980;
				half4 localSampleStochastic3D263_g117980 = SampleStochastic3D( Texture263_g117980 , Sampler263_g117980 , Coords263_g117980 , WorldPosition263_g117980 , WorldNormal263_g117980 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8693_g117895 = localSamplePlanar2D238_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8693_g117895 = localSamplePlanar3D246_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8693_g117895 = localSampleStochastic2D234_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8693_g117895 = localSampleStochastic3D263_g117980;
				#else
				float4 staticSwitch8693_g117895 = localSamplePlanar2D238_g117980;
				#endif
				half4 Layer439_g117910 = staticSwitch8693_g117895;
				float4 weightedBlendVar31_g117910 = Weights52_g117910;
				float4 weightedBlend31_g117910 = ( weightedBlendVar31_g117910.x*Layer133_g117910 + weightedBlendVar31_g117910.y*Layer237_g117910 + weightedBlendVar31_g117910.z*Layer338_g117910 + weightedBlendVar31_g117910.w*Layer439_g117910 );
				half4 Terrain_AAAA_088665_g117895 = weightedBlend31_g117910;
				half4 Layer_0810_g117903 = Terrain_AAAA_088665_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8794_g117895 = weights_127362_g117895;
				#else
				float4 staticSwitch8794_g117895 = control_127362_g117895;
				#endif
				half4 Terrain_Weights_127710_g117895 = staticSwitch8794_g117895;
				half4 Weights52_g117917 = Terrain_Weights_127710_g117895;
				TEXTURE2D(Texture238_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler238_g117954 = SS19_g117998;
				float4 temp_output_37_0_g117954 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117954 = temp_output_37_0_g117954;
				float3 temp_output_279_0_g117954 = Input_Position9197_g117895;
				half3 WorldPosition238_g117954 = temp_output_279_0_g117954;
				half4 localSamplePlanar2D238_g117954 = SamplePlanar2D( Texture238_g117954 , Sampler238_g117954 , Coords238_g117954 , WorldPosition238_g117954 );
				TEXTURE2D(Texture246_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler246_g117954 = SS19_g117998;
				half4 Coords246_g117954 = temp_output_37_0_g117954;
				half3 WorldPosition246_g117954 = temp_output_279_0_g117954;
				float3 temp_output_280_0_g117954 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117954 = temp_output_280_0_g117954;
				half4 localSamplePlanar3D246_g117954 = SamplePlanar3D( Texture246_g117954 , Sampler246_g117954 , Coords246_g117954 , WorldPosition246_g117954 , WorldNormal246_g117954 );
				TEXTURE2D(Texture234_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler234_g117954 = SS19_g117998;
				float4 Coords234_g117954 = temp_output_37_0_g117954;
				float3 WorldPosition234_g117954 = temp_output_279_0_g117954;
				float4 localSampleStochastic2D234_g117954 = SampleStochastic2D( Texture234_g117954 , Sampler234_g117954 , Coords234_g117954 , WorldPosition234_g117954 );
				TEXTURE2D(Texture263_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler263_g117954 = SS19_g117998;
				half4 Coords263_g117954 = temp_output_37_0_g117954;
				half3 WorldPosition263_g117954 = temp_output_279_0_g117954;
				half3 WorldNormal263_g117954 = temp_output_280_0_g117954;
				half4 localSampleStochastic3D263_g117954 = SampleStochastic3D( Texture263_g117954 , Sampler263_g117954 , Coords263_g117954 , WorldPosition263_g117954 , WorldNormal263_g117954 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8872_g117895 = localSamplePlanar2D238_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8872_g117895 = localSamplePlanar3D246_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8872_g117895 = localSampleStochastic2D234_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8872_g117895 = localSampleStochastic3D263_g117954;
				#else
				float4 staticSwitch8872_g117895 = localSamplePlanar2D238_g117954;
				#endif
				half4 Layer133_g117917 = staticSwitch8872_g117895;
				TEXTURE2D(Texture238_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler238_g117957 = SS19_g117998;
				float4 temp_output_37_0_g117957 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117957 = temp_output_37_0_g117957;
				float3 temp_output_279_0_g117957 = Input_Position9197_g117895;
				half3 WorldPosition238_g117957 = temp_output_279_0_g117957;
				half4 localSamplePlanar2D238_g117957 = SamplePlanar2D( Texture238_g117957 , Sampler238_g117957 , Coords238_g117957 , WorldPosition238_g117957 );
				TEXTURE2D(Texture246_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler246_g117957 = SS19_g117998;
				half4 Coords246_g117957 = temp_output_37_0_g117957;
				half3 WorldPosition246_g117957 = temp_output_279_0_g117957;
				float3 temp_output_280_0_g117957 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117957 = temp_output_280_0_g117957;
				half4 localSamplePlanar3D246_g117957 = SamplePlanar3D( Texture246_g117957 , Sampler246_g117957 , Coords246_g117957 , WorldPosition246_g117957 , WorldNormal246_g117957 );
				TEXTURE2D(Texture234_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler234_g117957 = SS19_g117998;
				float4 Coords234_g117957 = temp_output_37_0_g117957;
				float3 WorldPosition234_g117957 = temp_output_279_0_g117957;
				float4 localSampleStochastic2D234_g117957 = SampleStochastic2D( Texture234_g117957 , Sampler234_g117957 , Coords234_g117957 , WorldPosition234_g117957 );
				TEXTURE2D(Texture263_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler263_g117957 = SS19_g117998;
				half4 Coords263_g117957 = temp_output_37_0_g117957;
				half3 WorldPosition263_g117957 = temp_output_279_0_g117957;
				half3 WorldNormal263_g117957 = temp_output_280_0_g117957;
				half4 localSampleStochastic3D263_g117957 = SampleStochastic3D( Texture263_g117957 , Sampler263_g117957 , Coords263_g117957 , WorldPosition263_g117957 , WorldNormal263_g117957 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8873_g117895 = localSamplePlanar2D238_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8873_g117895 = localSamplePlanar3D246_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8873_g117895 = localSampleStochastic2D234_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8873_g117895 = localSampleStochastic3D263_g117957;
				#else
				float4 staticSwitch8873_g117895 = localSamplePlanar2D238_g117957;
				#endif
				half4 Layer237_g117917 = staticSwitch8873_g117895;
				TEXTURE2D(Texture238_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler238_g117958 = SS19_g117998;
				float4 temp_output_37_0_g117958 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117958 = temp_output_37_0_g117958;
				float3 temp_output_279_0_g117958 = Input_Position9197_g117895;
				half3 WorldPosition238_g117958 = temp_output_279_0_g117958;
				half4 localSamplePlanar2D238_g117958 = SamplePlanar2D( Texture238_g117958 , Sampler238_g117958 , Coords238_g117958 , WorldPosition238_g117958 );
				TEXTURE2D(Texture246_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler246_g117958 = SS19_g117998;
				half4 Coords246_g117958 = temp_output_37_0_g117958;
				half3 WorldPosition246_g117958 = temp_output_279_0_g117958;
				float3 temp_output_280_0_g117958 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117958 = temp_output_280_0_g117958;
				half4 localSamplePlanar3D246_g117958 = SamplePlanar3D( Texture246_g117958 , Sampler246_g117958 , Coords246_g117958 , WorldPosition246_g117958 , WorldNormal246_g117958 );
				TEXTURE2D(Texture234_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler234_g117958 = SS19_g117998;
				float4 Coords234_g117958 = temp_output_37_0_g117958;
				float3 WorldPosition234_g117958 = temp_output_279_0_g117958;
				float4 localSampleStochastic2D234_g117958 = SampleStochastic2D( Texture234_g117958 , Sampler234_g117958 , Coords234_g117958 , WorldPosition234_g117958 );
				TEXTURE2D(Texture263_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler263_g117958 = SS19_g117998;
				half4 Coords263_g117958 = temp_output_37_0_g117958;
				half3 WorldPosition263_g117958 = temp_output_279_0_g117958;
				half3 WorldNormal263_g117958 = temp_output_280_0_g117958;
				half4 localSampleStochastic3D263_g117958 = SampleStochastic3D( Texture263_g117958 , Sampler263_g117958 , Coords263_g117958 , WorldPosition263_g117958 , WorldNormal263_g117958 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8874_g117895 = localSamplePlanar2D238_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8874_g117895 = localSamplePlanar3D246_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8874_g117895 = localSampleStochastic2D234_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8874_g117895 = localSampleStochastic3D263_g117958;
				#else
				float4 staticSwitch8874_g117895 = localSamplePlanar2D238_g117958;
				#endif
				half4 Layer338_g117917 = staticSwitch8874_g117895;
				TEXTURE2D(Texture238_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler238_g117959 = SS19_g117998;
				float4 temp_output_37_0_g117959 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117959 = temp_output_37_0_g117959;
				float3 temp_output_279_0_g117959 = Input_Position9197_g117895;
				half3 WorldPosition238_g117959 = temp_output_279_0_g117959;
				half4 localSamplePlanar2D238_g117959 = SamplePlanar2D( Texture238_g117959 , Sampler238_g117959 , Coords238_g117959 , WorldPosition238_g117959 );
				TEXTURE2D(Texture246_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler246_g117959 = SS19_g117998;
				half4 Coords246_g117959 = temp_output_37_0_g117959;
				half3 WorldPosition246_g117959 = temp_output_279_0_g117959;
				float3 temp_output_280_0_g117959 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117959 = temp_output_280_0_g117959;
				half4 localSamplePlanar3D246_g117959 = SamplePlanar3D( Texture246_g117959 , Sampler246_g117959 , Coords246_g117959 , WorldPosition246_g117959 , WorldNormal246_g117959 );
				TEXTURE2D(Texture234_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler234_g117959 = SS19_g117998;
				float4 Coords234_g117959 = temp_output_37_0_g117959;
				float3 WorldPosition234_g117959 = temp_output_279_0_g117959;
				float4 localSampleStochastic2D234_g117959 = SampleStochastic2D( Texture234_g117959 , Sampler234_g117959 , Coords234_g117959 , WorldPosition234_g117959 );
				TEXTURE2D(Texture263_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler263_g117959 = SS19_g117998;
				half4 Coords263_g117959 = temp_output_37_0_g117959;
				half3 WorldPosition263_g117959 = temp_output_279_0_g117959;
				half3 WorldNormal263_g117959 = temp_output_280_0_g117959;
				half4 localSampleStochastic3D263_g117959 = SampleStochastic3D( Texture263_g117959 , Sampler263_g117959 , Coords263_g117959 , WorldPosition263_g117959 , WorldNormal263_g117959 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8875_g117895 = localSamplePlanar2D238_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8875_g117895 = localSamplePlanar3D246_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8875_g117895 = localSampleStochastic2D234_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8875_g117895 = localSampleStochastic3D263_g117959;
				#else
				float4 staticSwitch8875_g117895 = localSamplePlanar2D238_g117959;
				#endif
				half4 Layer439_g117917 = staticSwitch8875_g117895;
				float4 weightedBlendVar31_g117917 = Weights52_g117917;
				float4 weightedBlend31_g117917 = ( weightedBlendVar31_g117917.x*Layer133_g117917 + weightedBlendVar31_g117917.y*Layer237_g117917 + weightedBlendVar31_g117917.z*Layer338_g117917 + weightedBlendVar31_g117917.w*Layer439_g117917 );
				half4 Terrain_AAAA_128851_g117895 = weightedBlend31_g117917;
				half4 Layer_1243_g117903 = Terrain_AAAA_128851_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8795_g117895 = weights_167362_g117895;
				#else
				float4 staticSwitch8795_g117895 = control_167362_g117895;
				#endif
				half4 Terrain_Weights_167709_g117895 = staticSwitch8795_g117895;
				half4 Weights52_g117924 = Terrain_Weights_167709_g117895;
				TEXTURE2D(Texture238_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler238_g117963 = SS19_g117998;
				float4 temp_output_37_0_g117963 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117963 = temp_output_37_0_g117963;
				float3 temp_output_279_0_g117963 = Input_Position9197_g117895;
				half3 WorldPosition238_g117963 = temp_output_279_0_g117963;
				half4 localSamplePlanar2D238_g117963 = SamplePlanar2D( Texture238_g117963 , Sampler238_g117963 , Coords238_g117963 , WorldPosition238_g117963 );
				TEXTURE2D(Texture246_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler246_g117963 = SS19_g117998;
				half4 Coords246_g117963 = temp_output_37_0_g117963;
				half3 WorldPosition246_g117963 = temp_output_279_0_g117963;
				float3 temp_output_280_0_g117963 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117963 = temp_output_280_0_g117963;
				half4 localSamplePlanar3D246_g117963 = SamplePlanar3D( Texture246_g117963 , Sampler246_g117963 , Coords246_g117963 , WorldPosition246_g117963 , WorldNormal246_g117963 );
				TEXTURE2D(Texture234_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler234_g117963 = SS19_g117998;
				float4 Coords234_g117963 = temp_output_37_0_g117963;
				float3 WorldPosition234_g117963 = temp_output_279_0_g117963;
				float4 localSampleStochastic2D234_g117963 = SampleStochastic2D( Texture234_g117963 , Sampler234_g117963 , Coords234_g117963 , WorldPosition234_g117963 );
				TEXTURE2D(Texture263_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler263_g117963 = SS19_g117998;
				half4 Coords263_g117963 = temp_output_37_0_g117963;
				half3 WorldPosition263_g117963 = temp_output_279_0_g117963;
				half3 WorldNormal263_g117963 = temp_output_280_0_g117963;
				half4 localSampleStochastic3D263_g117963 = SampleStochastic3D( Texture263_g117963 , Sampler263_g117963 , Coords263_g117963 , WorldPosition263_g117963 , WorldNormal263_g117963 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8972_g117895 = localSamplePlanar2D238_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8972_g117895 = localSamplePlanar3D246_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8972_g117895 = localSampleStochastic2D234_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8972_g117895 = localSampleStochastic3D263_g117963;
				#else
				float4 staticSwitch8972_g117895 = localSamplePlanar2D238_g117963;
				#endif
				half4 Layer133_g117924 = staticSwitch8972_g117895;
				TEXTURE2D(Texture238_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler238_g117969 = SS19_g117998;
				float4 temp_output_37_0_g117969 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117969 = temp_output_37_0_g117969;
				float3 temp_output_279_0_g117969 = Input_Position9197_g117895;
				half3 WorldPosition238_g117969 = temp_output_279_0_g117969;
				half4 localSamplePlanar2D238_g117969 = SamplePlanar2D( Texture238_g117969 , Sampler238_g117969 , Coords238_g117969 , WorldPosition238_g117969 );
				TEXTURE2D(Texture246_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler246_g117969 = SS19_g117998;
				half4 Coords246_g117969 = temp_output_37_0_g117969;
				half3 WorldPosition246_g117969 = temp_output_279_0_g117969;
				float3 temp_output_280_0_g117969 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117969 = temp_output_280_0_g117969;
				half4 localSamplePlanar3D246_g117969 = SamplePlanar3D( Texture246_g117969 , Sampler246_g117969 , Coords246_g117969 , WorldPosition246_g117969 , WorldNormal246_g117969 );
				TEXTURE2D(Texture234_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler234_g117969 = SS19_g117998;
				float4 Coords234_g117969 = temp_output_37_0_g117969;
				float3 WorldPosition234_g117969 = temp_output_279_0_g117969;
				float4 localSampleStochastic2D234_g117969 = SampleStochastic2D( Texture234_g117969 , Sampler234_g117969 , Coords234_g117969 , WorldPosition234_g117969 );
				TEXTURE2D(Texture263_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler263_g117969 = SS19_g117998;
				half4 Coords263_g117969 = temp_output_37_0_g117969;
				half3 WorldPosition263_g117969 = temp_output_279_0_g117969;
				half3 WorldNormal263_g117969 = temp_output_280_0_g117969;
				half4 localSampleStochastic3D263_g117969 = SampleStochastic3D( Texture263_g117969 , Sampler263_g117969 , Coords263_g117969 , WorldPosition263_g117969 , WorldNormal263_g117969 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8973_g117895 = localSamplePlanar2D238_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8973_g117895 = localSamplePlanar3D246_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8973_g117895 = localSampleStochastic2D234_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8973_g117895 = localSampleStochastic3D263_g117969;
				#else
				float4 staticSwitch8973_g117895 = localSamplePlanar2D238_g117969;
				#endif
				half4 Layer237_g117924 = staticSwitch8973_g117895;
				TEXTURE2D(Texture238_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler238_g117970 = SS19_g117998;
				float4 temp_output_37_0_g117970 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117970 = temp_output_37_0_g117970;
				float3 temp_output_279_0_g117970 = Input_Position9197_g117895;
				half3 WorldPosition238_g117970 = temp_output_279_0_g117970;
				half4 localSamplePlanar2D238_g117970 = SamplePlanar2D( Texture238_g117970 , Sampler238_g117970 , Coords238_g117970 , WorldPosition238_g117970 );
				TEXTURE2D(Texture246_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler246_g117970 = SS19_g117998;
				half4 Coords246_g117970 = temp_output_37_0_g117970;
				half3 WorldPosition246_g117970 = temp_output_279_0_g117970;
				float3 temp_output_280_0_g117970 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117970 = temp_output_280_0_g117970;
				half4 localSamplePlanar3D246_g117970 = SamplePlanar3D( Texture246_g117970 , Sampler246_g117970 , Coords246_g117970 , WorldPosition246_g117970 , WorldNormal246_g117970 );
				TEXTURE2D(Texture234_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler234_g117970 = SS19_g117998;
				float4 Coords234_g117970 = temp_output_37_0_g117970;
				float3 WorldPosition234_g117970 = temp_output_279_0_g117970;
				float4 localSampleStochastic2D234_g117970 = SampleStochastic2D( Texture234_g117970 , Sampler234_g117970 , Coords234_g117970 , WorldPosition234_g117970 );
				TEXTURE2D(Texture263_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler263_g117970 = SS19_g117998;
				half4 Coords263_g117970 = temp_output_37_0_g117970;
				half3 WorldPosition263_g117970 = temp_output_279_0_g117970;
				half3 WorldNormal263_g117970 = temp_output_280_0_g117970;
				half4 localSampleStochastic3D263_g117970 = SampleStochastic3D( Texture263_g117970 , Sampler263_g117970 , Coords263_g117970 , WorldPosition263_g117970 , WorldNormal263_g117970 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8974_g117895 = localSamplePlanar2D238_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8974_g117895 = localSamplePlanar3D246_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8974_g117895 = localSampleStochastic2D234_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8974_g117895 = localSampleStochastic3D263_g117970;
				#else
				float4 staticSwitch8974_g117895 = localSamplePlanar2D238_g117970;
				#endif
				half4 Layer338_g117924 = staticSwitch8974_g117895;
				TEXTURE2D(Texture238_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler238_g117971 = SS19_g117998;
				float4 temp_output_37_0_g117971 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117971 = temp_output_37_0_g117971;
				float3 temp_output_279_0_g117971 = Input_Position9197_g117895;
				half3 WorldPosition238_g117971 = temp_output_279_0_g117971;
				half4 localSamplePlanar2D238_g117971 = SamplePlanar2D( Texture238_g117971 , Sampler238_g117971 , Coords238_g117971 , WorldPosition238_g117971 );
				TEXTURE2D(Texture246_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler246_g117971 = SS19_g117998;
				half4 Coords246_g117971 = temp_output_37_0_g117971;
				half3 WorldPosition246_g117971 = temp_output_279_0_g117971;
				float3 temp_output_280_0_g117971 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117971 = temp_output_280_0_g117971;
				half4 localSamplePlanar3D246_g117971 = SamplePlanar3D( Texture246_g117971 , Sampler246_g117971 , Coords246_g117971 , WorldPosition246_g117971 , WorldNormal246_g117971 );
				TEXTURE2D(Texture234_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler234_g117971 = SS19_g117998;
				float4 Coords234_g117971 = temp_output_37_0_g117971;
				float3 WorldPosition234_g117971 = temp_output_279_0_g117971;
				float4 localSampleStochastic2D234_g117971 = SampleStochastic2D( Texture234_g117971 , Sampler234_g117971 , Coords234_g117971 , WorldPosition234_g117971 );
				TEXTURE2D(Texture263_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler263_g117971 = SS19_g117998;
				half4 Coords263_g117971 = temp_output_37_0_g117971;
				half3 WorldPosition263_g117971 = temp_output_279_0_g117971;
				half3 WorldNormal263_g117971 = temp_output_280_0_g117971;
				half4 localSampleStochastic3D263_g117971 = SampleStochastic3D( Texture263_g117971 , Sampler263_g117971 , Coords263_g117971 , WorldPosition263_g117971 , WorldNormal263_g117971 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8975_g117895 = localSamplePlanar2D238_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8975_g117895 = localSamplePlanar3D246_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8975_g117895 = localSampleStochastic2D234_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8975_g117895 = localSampleStochastic3D263_g117971;
				#else
				float4 staticSwitch8975_g117895 = localSamplePlanar2D238_g117971;
				#endif
				half4 Layer439_g117924 = staticSwitch8975_g117895;
				float4 weightedBlendVar31_g117924 = Weights52_g117924;
				float4 weightedBlend31_g117924 = ( weightedBlendVar31_g117924.x*Layer133_g117924 + weightedBlendVar31_g117924.y*Layer237_g117924 + weightedBlendVar31_g117924.z*Layer338_g117924 + weightedBlendVar31_g117924.w*Layer439_g117924 );
				half4 Terrain_AAAA_168986_g117895 = weightedBlend31_g117924;
				half4 Layer_1644_g117903 = Terrain_AAAA_168986_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117903 = Layer_045_g117903;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 + Layer_1243_g117903 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 + Layer_1243_g117903 + Layer_1644_g117903 );
				#else
				float4 staticSwitch40_g117903 = Layer_045_g117903;
				#endif
				half4 Blend_Albedo7468_g117895 = staticSwitch40_g117903;
				half4 Weights52_g117989 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117989 = _TerrainColor1;
				half4 Layer237_g117989 = _TerrainColor2;
				half4 Layer338_g117989 = _TerrainColor3;
				half4 Layer439_g117989 = _TerrainColor4;
				float4 weightedBlendVar31_g117989 = Weights52_g117989;
				float4 weightedBlend31_g117989 = ( weightedBlendVar31_g117989.x*Layer133_g117989 + weightedBlendVar31_g117989.y*Layer237_g117989 + weightedBlendVar31_g117989.z*Layer338_g117989 + weightedBlendVar31_g117989.w*Layer439_g117989 );
				half4 Terrain_Color_049349_g117895 = weightedBlend31_g117989;
				half4 Layer_045_g117994 = Terrain_Color_049349_g117895;
				half4 Weights52_g117990 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117990 = _TerrainColor5;
				half4 Layer237_g117990 = _TerrainColor6;
				half4 Layer338_g117990 = _TerrainColor7;
				half4 Layer439_g117990 = _TerrainColor8;
				float4 weightedBlendVar31_g117990 = Weights52_g117990;
				float4 weightedBlend31_g117990 = ( weightedBlendVar31_g117990.x*Layer133_g117990 + weightedBlendVar31_g117990.y*Layer237_g117990 + weightedBlendVar31_g117990.z*Layer338_g117990 + weightedBlendVar31_g117990.w*Layer439_g117990 );
				half4 Terrain_Color_089361_g117895 = weightedBlend31_g117990;
				half4 Layer_0810_g117994 = Terrain_Color_089361_g117895;
				half4 Weights52_g117991 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117991 = _TerrainColor9;
				half4 Layer237_g117991 = _TerrainColor10;
				half4 Layer338_g117991 = _TerrainColor11;
				half4 Layer439_g117991 = _TerrainColor12;
				float4 weightedBlendVar31_g117991 = Weights52_g117991;
				float4 weightedBlend31_g117991 = ( weightedBlendVar31_g117991.x*Layer133_g117991 + weightedBlendVar31_g117991.y*Layer237_g117991 + weightedBlendVar31_g117991.z*Layer338_g117991 + weightedBlendVar31_g117991.w*Layer439_g117991 );
				half4 Terrain_Color_129373_g117895 = weightedBlend31_g117991;
				half4 Layer_1243_g117994 = Terrain_Color_129373_g117895;
				half4 Weights52_g117992 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117992 = _TerrainColor13;
				half4 Layer237_g117992 = _TerrainColor14;
				half4 Layer338_g117992 = _TerrainColor15;
				half4 Layer439_g117992 = _TerrainColor16;
				float4 weightedBlendVar31_g117992 = Weights52_g117992;
				float4 weightedBlend31_g117992 = ( weightedBlendVar31_g117992.x*Layer133_g117992 + weightedBlendVar31_g117992.y*Layer237_g117992 + weightedBlendVar31_g117992.z*Layer338_g117992 + weightedBlendVar31_g117992.w*Layer439_g117992 );
				half4 Terrain_Color_169381_g117895 = weightedBlend31_g117992;
				half4 Layer_1644_g117994 = Terrain_Color_169381_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117994 = Layer_045_g117994;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 + Layer_1243_g117994 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 + Layer_1243_g117994 + Layer_1644_g117994 );
				#else
				float4 staticSwitch40_g117994 = Layer_045_g117994;
				#endif
				half4 Blend_TerrainColor9387_g117895 = staticSwitch40_g117994;
				half3 Final_Albedo9144_g117895 = ( (Blend_Albedo7468_g117895).xyz * (Blend_TerrainColor9387_g117895).rgb * (_TerrainColor).rgb );
				half3 Local_Albedo9199_g117893 = Final_Albedo9144_g117895;
				float3 In_Albedo3_g117894 = Local_Albedo9199_g117893;
				float3 In_AlbedoRaw3_g117894 = Local_Albedo9199_g117893;
				float3 ase_worldBitangent = packedInput.ase_texcoord5.xyz;
				float3x3 ase_worldToTangent = float3x3(tangentWS.xyz,ase_worldBitangent,normalWS);
				half4 Weights52_g117896 = Terrain_Weights_046781_g117895;
				TEXTURE2D(Texture238_g117987) = _TerrainNormalTex1;
				float localFilterTexture29_g118002 = ( 0.0 );
				SamplerState SamplerDefault29_g118002 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g118002 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g118002 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g118002 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g118002 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g118002 = SamplerDefault29_g118002;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g118002 = SamplerDefault29_g118002;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g118002 = SamplerPoint29_g118002;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g118002 = SamplerLow29_g118002;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g118002 = SamplerMedium29_g118002;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g118002 = SamplerHigh29_g118002;
				#endif
				SamplerState Sampler238_g117987 = SS29_g118002;
				float4 temp_output_37_0_g117987 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117987 = temp_output_37_0_g117987;
				float3 temp_output_279_0_g117987 = Input_Position9197_g117895;
				half3 WorldPosition238_g117987 = temp_output_279_0_g117987;
				half4 localSamplePlanar2D238_g117987 = SamplePlanar2D( Texture238_g117987 , Sampler238_g117987 , Coords238_g117987 , WorldPosition238_g117987 );
				TEXTURE2D(Texture246_g117987) = _TerrainNormalTex1;
				SamplerState Sampler246_g117987 = SS29_g118002;
				half4 Coords246_g117987 = temp_output_37_0_g117987;
				half3 WorldPosition246_g117987 = temp_output_279_0_g117987;
				float3 temp_output_280_0_g117987 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117987 = temp_output_280_0_g117987;
				half4 localSamplePlanar3D246_g117987 = SamplePlanar3D( Texture246_g117987 , Sampler246_g117987 , Coords246_g117987 , WorldPosition246_g117987 , WorldNormal246_g117987 );
				TEXTURE2D(Texture234_g117987) = _TerrainNormalTex1;
				SamplerState Sampler234_g117987 = SS29_g118002;
				float4 Coords234_g117987 = temp_output_37_0_g117987;
				float3 WorldPosition234_g117987 = temp_output_279_0_g117987;
				float4 localSampleStochastic2D234_g117987 = SampleStochastic2D( Texture234_g117987 , Sampler234_g117987 , Coords234_g117987 , WorldPosition234_g117987 );
				TEXTURE2D(Texture263_g117987) = _TerrainNormalTex1;
				SamplerState Sampler263_g117987 = SS29_g118002;
				half4 Coords263_g117987 = temp_output_37_0_g117987;
				half3 WorldPosition263_g117987 = temp_output_279_0_g117987;
				half3 WorldNormal263_g117987 = temp_output_280_0_g117987;
				half4 localSampleStochastic3D263_g117987 = SampleStochastic3D( Texture263_g117987 , Sampler263_g117987 , Coords263_g117987 , WorldPosition263_g117987 , WorldNormal263_g117987 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8635_g117895 = localSamplePlanar2D238_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8635_g117895 = localSamplePlanar3D246_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8635_g117895 = localSampleStochastic2D234_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8635_g117895 = localSampleStochastic3D263_g117987;
				#else
				float4 staticSwitch8635_g117895 = localSamplePlanar2D238_g117987;
				#endif
				half4 Layer133_g117896 = staticSwitch8635_g117895;
				TEXTURE2D(Texture238_g117943) = _TerrainNormalTex2;
				SamplerState Sampler238_g117943 = SS29_g118002;
				float4 temp_output_37_0_g117943 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117943 = temp_output_37_0_g117943;
				float3 temp_output_279_0_g117943 = Input_Position9197_g117895;
				half3 WorldPosition238_g117943 = temp_output_279_0_g117943;
				half4 localSamplePlanar2D238_g117943 = SamplePlanar2D( Texture238_g117943 , Sampler238_g117943 , Coords238_g117943 , WorldPosition238_g117943 );
				TEXTURE2D(Texture246_g117943) = _TerrainNormalTex2;
				SamplerState Sampler246_g117943 = SS29_g118002;
				half4 Coords246_g117943 = temp_output_37_0_g117943;
				half3 WorldPosition246_g117943 = temp_output_279_0_g117943;
				float3 temp_output_280_0_g117943 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117943 = temp_output_280_0_g117943;
				half4 localSamplePlanar3D246_g117943 = SamplePlanar3D( Texture246_g117943 , Sampler246_g117943 , Coords246_g117943 , WorldPosition246_g117943 , WorldNormal246_g117943 );
				TEXTURE2D(Texture234_g117943) = _TerrainNormalTex2;
				SamplerState Sampler234_g117943 = SS29_g118002;
				float4 Coords234_g117943 = temp_output_37_0_g117943;
				float3 WorldPosition234_g117943 = temp_output_279_0_g117943;
				float4 localSampleStochastic2D234_g117943 = SampleStochastic2D( Texture234_g117943 , Sampler234_g117943 , Coords234_g117943 , WorldPosition234_g117943 );
				TEXTURE2D(Texture263_g117943) = _TerrainNormalTex2;
				SamplerState Sampler263_g117943 = SS29_g118002;
				half4 Coords263_g117943 = temp_output_37_0_g117943;
				half3 WorldPosition263_g117943 = temp_output_279_0_g117943;
				half3 WorldNormal263_g117943 = temp_output_280_0_g117943;
				half4 localSampleStochastic3D263_g117943 = SampleStochastic3D( Texture263_g117943 , Sampler263_g117943 , Coords263_g117943 , WorldPosition263_g117943 , WorldNormal263_g117943 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8636_g117895 = localSamplePlanar2D238_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8636_g117895 = localSamplePlanar3D246_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8636_g117895 = localSampleStochastic2D234_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8636_g117895 = localSampleStochastic3D263_g117943;
				#else
				float4 staticSwitch8636_g117895 = localSamplePlanar2D238_g117943;
				#endif
				half4 Layer237_g117896 = staticSwitch8636_g117895;
				TEXTURE2D(Texture238_g117946) = _TerrainNormalTex3;
				SamplerState Sampler238_g117946 = SS29_g118002;
				float4 temp_output_37_0_g117946 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117946 = temp_output_37_0_g117946;
				float3 temp_output_279_0_g117946 = Input_Position9197_g117895;
				half3 WorldPosition238_g117946 = temp_output_279_0_g117946;
				half4 localSamplePlanar2D238_g117946 = SamplePlanar2D( Texture238_g117946 , Sampler238_g117946 , Coords238_g117946 , WorldPosition238_g117946 );
				TEXTURE2D(Texture246_g117946) = _TerrainNormalTex3;
				SamplerState Sampler246_g117946 = SS29_g118002;
				half4 Coords246_g117946 = temp_output_37_0_g117946;
				half3 WorldPosition246_g117946 = temp_output_279_0_g117946;
				float3 temp_output_280_0_g117946 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117946 = temp_output_280_0_g117946;
				half4 localSamplePlanar3D246_g117946 = SamplePlanar3D( Texture246_g117946 , Sampler246_g117946 , Coords246_g117946 , WorldPosition246_g117946 , WorldNormal246_g117946 );
				TEXTURE2D(Texture234_g117946) = _TerrainNormalTex3;
				SamplerState Sampler234_g117946 = SS29_g118002;
				float4 Coords234_g117946 = temp_output_37_0_g117946;
				float3 WorldPosition234_g117946 = temp_output_279_0_g117946;
				float4 localSampleStochastic2D234_g117946 = SampleStochastic2D( Texture234_g117946 , Sampler234_g117946 , Coords234_g117946 , WorldPosition234_g117946 );
				TEXTURE2D(Texture263_g117946) = _TerrainNormalTex3;
				SamplerState Sampler263_g117946 = SS29_g118002;
				half4 Coords263_g117946 = temp_output_37_0_g117946;
				half3 WorldPosition263_g117946 = temp_output_279_0_g117946;
				half3 WorldNormal263_g117946 = temp_output_280_0_g117946;
				half4 localSampleStochastic3D263_g117946 = SampleStochastic3D( Texture263_g117946 , Sampler263_g117946 , Coords263_g117946 , WorldPosition263_g117946 , WorldNormal263_g117946 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8637_g117895 = localSamplePlanar2D238_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8637_g117895 = localSamplePlanar3D246_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8637_g117895 = localSampleStochastic2D234_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8637_g117895 = localSampleStochastic3D263_g117946;
				#else
				float4 staticSwitch8637_g117895 = localSamplePlanar2D238_g117946;
				#endif
				half4 Layer338_g117896 = staticSwitch8637_g117895;
				TEXTURE2D(Texture238_g117948) = _TerrainNormalTex4;
				SamplerState Sampler238_g117948 = SS29_g118002;
				float4 temp_output_37_0_g117948 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117948 = temp_output_37_0_g117948;
				float3 temp_output_279_0_g117948 = Input_Position9197_g117895;
				half3 WorldPosition238_g117948 = temp_output_279_0_g117948;
				half4 localSamplePlanar2D238_g117948 = SamplePlanar2D( Texture238_g117948 , Sampler238_g117948 , Coords238_g117948 , WorldPosition238_g117948 );
				TEXTURE2D(Texture246_g117948) = _TerrainNormalTex4;
				SamplerState Sampler246_g117948 = SS29_g118002;
				half4 Coords246_g117948 = temp_output_37_0_g117948;
				half3 WorldPosition246_g117948 = temp_output_279_0_g117948;
				float3 temp_output_280_0_g117948 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117948 = temp_output_280_0_g117948;
				half4 localSamplePlanar3D246_g117948 = SamplePlanar3D( Texture246_g117948 , Sampler246_g117948 , Coords246_g117948 , WorldPosition246_g117948 , WorldNormal246_g117948 );
				TEXTURE2D(Texture234_g117948) = _TerrainNormalTex4;
				SamplerState Sampler234_g117948 = SS29_g118002;
				float4 Coords234_g117948 = temp_output_37_0_g117948;
				float3 WorldPosition234_g117948 = temp_output_279_0_g117948;
				float4 localSampleStochastic2D234_g117948 = SampleStochastic2D( Texture234_g117948 , Sampler234_g117948 , Coords234_g117948 , WorldPosition234_g117948 );
				TEXTURE2D(Texture263_g117948) = _TerrainNormalTex4;
				SamplerState Sampler263_g117948 = SS29_g118002;
				half4 Coords263_g117948 = temp_output_37_0_g117948;
				half3 WorldPosition263_g117948 = temp_output_279_0_g117948;
				half3 WorldNormal263_g117948 = temp_output_280_0_g117948;
				half4 localSampleStochastic3D263_g117948 = SampleStochastic3D( Texture263_g117948 , Sampler263_g117948 , Coords263_g117948 , WorldPosition263_g117948 , WorldNormal263_g117948 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8638_g117895 = localSamplePlanar2D238_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8638_g117895 = localSamplePlanar3D246_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8638_g117895 = localSampleStochastic2D234_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8638_g117895 = localSampleStochastic3D263_g117948;
				#else
				float4 staticSwitch8638_g117895 = localSamplePlanar2D238_g117948;
				#endif
				half4 Layer439_g117896 = staticSwitch8638_g117895;
				float4 weightedBlendVar31_g117896 = Weights52_g117896;
				float4 weightedBlend31_g117896 = ( weightedBlendVar31_g117896.x*Layer133_g117896 + weightedBlendVar31_g117896.y*Layer237_g117896 + weightedBlendVar31_g117896.z*Layer338_g117896 + weightedBlendVar31_g117896.w*Layer439_g117896 );
				half4 Terrain_B_047202_g117895 = weightedBlend31_g117896;
				half4 Layer_045_g117902 = Terrain_B_047202_g117895;
				half4 Weights52_g117911 = Terrain_Weights_087340_g117895;
				TEXTURE2D(Texture238_g117952) = _TerrainNormalTex5;
				SamplerState Sampler238_g117952 = SS29_g118002;
				float4 temp_output_37_0_g117952 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117952 = temp_output_37_0_g117952;
				float3 temp_output_279_0_g117952 = Input_Position9197_g117895;
				half3 WorldPosition238_g117952 = temp_output_279_0_g117952;
				half4 localSamplePlanar2D238_g117952 = SamplePlanar2D( Texture238_g117952 , Sampler238_g117952 , Coords238_g117952 , WorldPosition238_g117952 );
				TEXTURE2D(Texture246_g117952) = _TerrainNormalTex5;
				SamplerState Sampler246_g117952 = SS29_g118002;
				half4 Coords246_g117952 = temp_output_37_0_g117952;
				half3 WorldPosition246_g117952 = temp_output_279_0_g117952;
				float3 temp_output_280_0_g117952 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117952 = temp_output_280_0_g117952;
				half4 localSamplePlanar3D246_g117952 = SamplePlanar3D( Texture246_g117952 , Sampler246_g117952 , Coords246_g117952 , WorldPosition246_g117952 , WorldNormal246_g117952 );
				TEXTURE2D(Texture234_g117952) = _TerrainNormalTex5;
				SamplerState Sampler234_g117952 = SS29_g118002;
				float4 Coords234_g117952 = temp_output_37_0_g117952;
				float3 WorldPosition234_g117952 = temp_output_279_0_g117952;
				float4 localSampleStochastic2D234_g117952 = SampleStochastic2D( Texture234_g117952 , Sampler234_g117952 , Coords234_g117952 , WorldPosition234_g117952 );
				TEXTURE2D(Texture263_g117952) = _TerrainNormalTex5;
				SamplerState Sampler263_g117952 = SS29_g118002;
				half4 Coords263_g117952 = temp_output_37_0_g117952;
				half3 WorldPosition263_g117952 = temp_output_279_0_g117952;
				half3 WorldNormal263_g117952 = temp_output_280_0_g117952;
				half4 localSampleStochastic3D263_g117952 = SampleStochastic3D( Texture263_g117952 , Sampler263_g117952 , Coords263_g117952 , WorldPosition263_g117952 , WorldNormal263_g117952 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8686_g117895 = localSamplePlanar2D238_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8686_g117895 = localSamplePlanar3D246_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8686_g117895 = localSampleStochastic2D234_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8686_g117895 = localSampleStochastic3D263_g117952;
				#else
				float4 staticSwitch8686_g117895 = localSamplePlanar2D238_g117952;
				#endif
				half4 Layer133_g117911 = staticSwitch8686_g117895;
				TEXTURE2D(Texture238_g117981) = _TerrainNormalTex6;
				SamplerState Sampler238_g117981 = SS29_g118002;
				float4 temp_output_37_0_g117981 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117981 = temp_output_37_0_g117981;
				float3 temp_output_279_0_g117981 = Input_Position9197_g117895;
				half3 WorldPosition238_g117981 = temp_output_279_0_g117981;
				half4 localSamplePlanar2D238_g117981 = SamplePlanar2D( Texture238_g117981 , Sampler238_g117981 , Coords238_g117981 , WorldPosition238_g117981 );
				TEXTURE2D(Texture246_g117981) = _TerrainNormalTex6;
				SamplerState Sampler246_g117981 = SS29_g118002;
				half4 Coords246_g117981 = temp_output_37_0_g117981;
				half3 WorldPosition246_g117981 = temp_output_279_0_g117981;
				float3 temp_output_280_0_g117981 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117981 = temp_output_280_0_g117981;
				half4 localSamplePlanar3D246_g117981 = SamplePlanar3D( Texture246_g117981 , Sampler246_g117981 , Coords246_g117981 , WorldPosition246_g117981 , WorldNormal246_g117981 );
				TEXTURE2D(Texture234_g117981) = _TerrainNormalTex6;
				SamplerState Sampler234_g117981 = SS29_g118002;
				float4 Coords234_g117981 = temp_output_37_0_g117981;
				float3 WorldPosition234_g117981 = temp_output_279_0_g117981;
				float4 localSampleStochastic2D234_g117981 = SampleStochastic2D( Texture234_g117981 , Sampler234_g117981 , Coords234_g117981 , WorldPosition234_g117981 );
				TEXTURE2D(Texture263_g117981) = _TerrainNormalTex6;
				SamplerState Sampler263_g117981 = SS29_g118002;
				half4 Coords263_g117981 = temp_output_37_0_g117981;
				half3 WorldPosition263_g117981 = temp_output_279_0_g117981;
				half3 WorldNormal263_g117981 = temp_output_280_0_g117981;
				half4 localSampleStochastic3D263_g117981 = SampleStochastic3D( Texture263_g117981 , Sampler263_g117981 , Coords263_g117981 , WorldPosition263_g117981 , WorldNormal263_g117981 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8687_g117895 = localSamplePlanar2D238_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8687_g117895 = localSamplePlanar3D246_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8687_g117895 = localSampleStochastic2D234_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8687_g117895 = localSampleStochastic3D263_g117981;
				#else
				float4 staticSwitch8687_g117895 = localSamplePlanar2D238_g117981;
				#endif
				half4 Layer237_g117911 = staticSwitch8687_g117895;
				TEXTURE2D(Texture238_g117982) = _TerrainNormalTex7;
				SamplerState Sampler238_g117982 = SS29_g118002;
				float4 temp_output_37_0_g117982 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117982 = temp_output_37_0_g117982;
				float3 temp_output_279_0_g117982 = Input_Position9197_g117895;
				half3 WorldPosition238_g117982 = temp_output_279_0_g117982;
				half4 localSamplePlanar2D238_g117982 = SamplePlanar2D( Texture238_g117982 , Sampler238_g117982 , Coords238_g117982 , WorldPosition238_g117982 );
				TEXTURE2D(Texture246_g117982) = _TerrainNormalTex7;
				SamplerState Sampler246_g117982 = SS29_g118002;
				half4 Coords246_g117982 = temp_output_37_0_g117982;
				half3 WorldPosition246_g117982 = temp_output_279_0_g117982;
				float3 temp_output_280_0_g117982 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117982 = temp_output_280_0_g117982;
				half4 localSamplePlanar3D246_g117982 = SamplePlanar3D( Texture246_g117982 , Sampler246_g117982 , Coords246_g117982 , WorldPosition246_g117982 , WorldNormal246_g117982 );
				TEXTURE2D(Texture234_g117982) = _TerrainNormalTex7;
				SamplerState Sampler234_g117982 = SS29_g118002;
				float4 Coords234_g117982 = temp_output_37_0_g117982;
				float3 WorldPosition234_g117982 = temp_output_279_0_g117982;
				float4 localSampleStochastic2D234_g117982 = SampleStochastic2D( Texture234_g117982 , Sampler234_g117982 , Coords234_g117982 , WorldPosition234_g117982 );
				TEXTURE2D(Texture263_g117982) = _TerrainNormalTex7;
				SamplerState Sampler263_g117982 = SS29_g118002;
				half4 Coords263_g117982 = temp_output_37_0_g117982;
				half3 WorldPosition263_g117982 = temp_output_279_0_g117982;
				half3 WorldNormal263_g117982 = temp_output_280_0_g117982;
				half4 localSampleStochastic3D263_g117982 = SampleStochastic3D( Texture263_g117982 , Sampler263_g117982 , Coords263_g117982 , WorldPosition263_g117982 , WorldNormal263_g117982 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8688_g117895 = localSamplePlanar2D238_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8688_g117895 = localSamplePlanar3D246_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8688_g117895 = localSampleStochastic2D234_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8688_g117895 = localSampleStochastic3D263_g117982;
				#else
				float4 staticSwitch8688_g117895 = localSamplePlanar2D238_g117982;
				#endif
				half4 Layer338_g117911 = staticSwitch8688_g117895;
				TEXTURE2D(Texture238_g117983) = _TerrainNormalTex8;
				SamplerState Sampler238_g117983 = SS29_g118002;
				float4 temp_output_37_0_g117983 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117983 = temp_output_37_0_g117983;
				float3 temp_output_279_0_g117983 = Input_Position9197_g117895;
				half3 WorldPosition238_g117983 = temp_output_279_0_g117983;
				half4 localSamplePlanar2D238_g117983 = SamplePlanar2D( Texture238_g117983 , Sampler238_g117983 , Coords238_g117983 , WorldPosition238_g117983 );
				TEXTURE2D(Texture246_g117983) = _TerrainNormalTex8;
				SamplerState Sampler246_g117983 = SS29_g118002;
				half4 Coords246_g117983 = temp_output_37_0_g117983;
				half3 WorldPosition246_g117983 = temp_output_279_0_g117983;
				float3 temp_output_280_0_g117983 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117983 = temp_output_280_0_g117983;
				half4 localSamplePlanar3D246_g117983 = SamplePlanar3D( Texture246_g117983 , Sampler246_g117983 , Coords246_g117983 , WorldPosition246_g117983 , WorldNormal246_g117983 );
				TEXTURE2D(Texture234_g117983) = _TerrainNormalTex8;
				SamplerState Sampler234_g117983 = SS29_g118002;
				float4 Coords234_g117983 = temp_output_37_0_g117983;
				float3 WorldPosition234_g117983 = temp_output_279_0_g117983;
				float4 localSampleStochastic2D234_g117983 = SampleStochastic2D( Texture234_g117983 , Sampler234_g117983 , Coords234_g117983 , WorldPosition234_g117983 );
				TEXTURE2D(Texture263_g117983) = _TerrainNormalTex8;
				SamplerState Sampler263_g117983 = SS29_g118002;
				half4 Coords263_g117983 = temp_output_37_0_g117983;
				half3 WorldPosition263_g117983 = temp_output_279_0_g117983;
				half3 WorldNormal263_g117983 = temp_output_280_0_g117983;
				half4 localSampleStochastic3D263_g117983 = SampleStochastic3D( Texture263_g117983 , Sampler263_g117983 , Coords263_g117983 , WorldPosition263_g117983 , WorldNormal263_g117983 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8689_g117895 = localSamplePlanar2D238_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8689_g117895 = localSamplePlanar3D246_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8689_g117895 = localSampleStochastic2D234_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8689_g117895 = localSampleStochastic3D263_g117983;
				#else
				float4 staticSwitch8689_g117895 = localSamplePlanar2D238_g117983;
				#endif
				half4 Layer439_g117911 = staticSwitch8689_g117895;
				float4 weightedBlendVar31_g117911 = Weights52_g117911;
				float4 weightedBlend31_g117911 = ( weightedBlendVar31_g117911.x*Layer133_g117911 + weightedBlendVar31_g117911.y*Layer237_g117911 + weightedBlendVar31_g117911.z*Layer338_g117911 + weightedBlendVar31_g117911.w*Layer439_g117911 );
				half4 Terrain_B_088684_g117895 = weightedBlend31_g117911;
				half4 Layer_0810_g117902 = Terrain_B_088684_g117895;
				half4 Weights52_g117918 = Terrain_Weights_127710_g117895;
				TEXTURE2D(Texture238_g117955) = _TerrainNormalTex9;
				SamplerState Sampler238_g117955 = SS29_g118002;
				float4 temp_output_37_0_g117955 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117955 = temp_output_37_0_g117955;
				float3 temp_output_279_0_g117955 = Input_Position9197_g117895;
				half3 WorldPosition238_g117955 = temp_output_279_0_g117955;
				half4 localSamplePlanar2D238_g117955 = SamplePlanar2D( Texture238_g117955 , Sampler238_g117955 , Coords238_g117955 , WorldPosition238_g117955 );
				TEXTURE2D(Texture246_g117955) = _TerrainNormalTex9;
				SamplerState Sampler246_g117955 = SS29_g118002;
				half4 Coords246_g117955 = temp_output_37_0_g117955;
				half3 WorldPosition246_g117955 = temp_output_279_0_g117955;
				float3 temp_output_280_0_g117955 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117955 = temp_output_280_0_g117955;
				half4 localSamplePlanar3D246_g117955 = SamplePlanar3D( Texture246_g117955 , Sampler246_g117955 , Coords246_g117955 , WorldPosition246_g117955 , WorldNormal246_g117955 );
				TEXTURE2D(Texture234_g117955) = _TerrainNormalTex9;
				SamplerState Sampler234_g117955 = SS29_g118002;
				float4 Coords234_g117955 = temp_output_37_0_g117955;
				float3 WorldPosition234_g117955 = temp_output_279_0_g117955;
				float4 localSampleStochastic2D234_g117955 = SampleStochastic2D( Texture234_g117955 , Sampler234_g117955 , Coords234_g117955 , WorldPosition234_g117955 );
				TEXTURE2D(Texture263_g117955) = _TerrainNormalTex9;
				SamplerState Sampler263_g117955 = SS29_g118002;
				half4 Coords263_g117955 = temp_output_37_0_g117955;
				half3 WorldPosition263_g117955 = temp_output_279_0_g117955;
				half3 WorldNormal263_g117955 = temp_output_280_0_g117955;
				half4 localSampleStochastic3D263_g117955 = SampleStochastic3D( Texture263_g117955 , Sampler263_g117955 , Coords263_g117955 , WorldPosition263_g117955 , WorldNormal263_g117955 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8849_g117895 = localSamplePlanar2D238_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8849_g117895 = localSamplePlanar3D246_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8849_g117895 = localSampleStochastic2D234_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8849_g117895 = localSampleStochastic3D263_g117955;
				#else
				float4 staticSwitch8849_g117895 = localSamplePlanar2D238_g117955;
				#endif
				half4 Layer133_g117918 = staticSwitch8849_g117895;
				TEXTURE2D(Texture238_g117960) = _TerrainNormalTex10;
				SamplerState Sampler238_g117960 = SS29_g118002;
				float4 temp_output_37_0_g117960 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117960 = temp_output_37_0_g117960;
				float3 temp_output_279_0_g117960 = Input_Position9197_g117895;
				half3 WorldPosition238_g117960 = temp_output_279_0_g117960;
				half4 localSamplePlanar2D238_g117960 = SamplePlanar2D( Texture238_g117960 , Sampler238_g117960 , Coords238_g117960 , WorldPosition238_g117960 );
				TEXTURE2D(Texture246_g117960) = _TerrainNormalTex10;
				SamplerState Sampler246_g117960 = SS29_g118002;
				half4 Coords246_g117960 = temp_output_37_0_g117960;
				half3 WorldPosition246_g117960 = temp_output_279_0_g117960;
				float3 temp_output_280_0_g117960 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117960 = temp_output_280_0_g117960;
				half4 localSamplePlanar3D246_g117960 = SamplePlanar3D( Texture246_g117960 , Sampler246_g117960 , Coords246_g117960 , WorldPosition246_g117960 , WorldNormal246_g117960 );
				TEXTURE2D(Texture234_g117960) = _TerrainNormalTex10;
				SamplerState Sampler234_g117960 = SS29_g118002;
				float4 Coords234_g117960 = temp_output_37_0_g117960;
				float3 WorldPosition234_g117960 = temp_output_279_0_g117960;
				float4 localSampleStochastic2D234_g117960 = SampleStochastic2D( Texture234_g117960 , Sampler234_g117960 , Coords234_g117960 , WorldPosition234_g117960 );
				TEXTURE2D(Texture263_g117960) = _TerrainNormalTex10;
				SamplerState Sampler263_g117960 = SS29_g118002;
				half4 Coords263_g117960 = temp_output_37_0_g117960;
				half3 WorldPosition263_g117960 = temp_output_279_0_g117960;
				half3 WorldNormal263_g117960 = temp_output_280_0_g117960;
				half4 localSampleStochastic3D263_g117960 = SampleStochastic3D( Texture263_g117960 , Sampler263_g117960 , Coords263_g117960 , WorldPosition263_g117960 , WorldNormal263_g117960 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8876_g117895 = localSamplePlanar2D238_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8876_g117895 = localSamplePlanar3D246_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8876_g117895 = localSampleStochastic2D234_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8876_g117895 = localSampleStochastic3D263_g117960;
				#else
				float4 staticSwitch8876_g117895 = localSamplePlanar2D238_g117960;
				#endif
				half4 Layer237_g117918 = staticSwitch8876_g117895;
				TEXTURE2D(Texture238_g117961) = _TerrainNormalTex11;
				SamplerState Sampler238_g117961 = SS29_g118002;
				float4 temp_output_37_0_g117961 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117961 = temp_output_37_0_g117961;
				float3 temp_output_279_0_g117961 = Input_Position9197_g117895;
				half3 WorldPosition238_g117961 = temp_output_279_0_g117961;
				half4 localSamplePlanar2D238_g117961 = SamplePlanar2D( Texture238_g117961 , Sampler238_g117961 , Coords238_g117961 , WorldPosition238_g117961 );
				TEXTURE2D(Texture246_g117961) = _TerrainNormalTex11;
				SamplerState Sampler246_g117961 = SS29_g118002;
				half4 Coords246_g117961 = temp_output_37_0_g117961;
				half3 WorldPosition246_g117961 = temp_output_279_0_g117961;
				float3 temp_output_280_0_g117961 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117961 = temp_output_280_0_g117961;
				half4 localSamplePlanar3D246_g117961 = SamplePlanar3D( Texture246_g117961 , Sampler246_g117961 , Coords246_g117961 , WorldPosition246_g117961 , WorldNormal246_g117961 );
				TEXTURE2D(Texture234_g117961) = _TerrainNormalTex11;
				SamplerState Sampler234_g117961 = SS29_g118002;
				float4 Coords234_g117961 = temp_output_37_0_g117961;
				float3 WorldPosition234_g117961 = temp_output_279_0_g117961;
				float4 localSampleStochastic2D234_g117961 = SampleStochastic2D( Texture234_g117961 , Sampler234_g117961 , Coords234_g117961 , WorldPosition234_g117961 );
				TEXTURE2D(Texture263_g117961) = _TerrainNormalTex11;
				SamplerState Sampler263_g117961 = SS29_g118002;
				half4 Coords263_g117961 = temp_output_37_0_g117961;
				half3 WorldPosition263_g117961 = temp_output_279_0_g117961;
				half3 WorldNormal263_g117961 = temp_output_280_0_g117961;
				half4 localSampleStochastic3D263_g117961 = SampleStochastic3D( Texture263_g117961 , Sampler263_g117961 , Coords263_g117961 , WorldPosition263_g117961 , WorldNormal263_g117961 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8850_g117895 = localSamplePlanar2D238_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8850_g117895 = localSamplePlanar3D246_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8850_g117895 = localSampleStochastic2D234_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8850_g117895 = localSampleStochastic3D263_g117961;
				#else
				float4 staticSwitch8850_g117895 = localSamplePlanar2D238_g117961;
				#endif
				half4 Layer338_g117918 = staticSwitch8850_g117895;
				TEXTURE2D(Texture238_g117962) = _TerrainNormalTex12;
				SamplerState Sampler238_g117962 = SS29_g118002;
				float4 temp_output_37_0_g117962 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117962 = temp_output_37_0_g117962;
				float3 temp_output_279_0_g117962 = Input_Position9197_g117895;
				half3 WorldPosition238_g117962 = temp_output_279_0_g117962;
				half4 localSamplePlanar2D238_g117962 = SamplePlanar2D( Texture238_g117962 , Sampler238_g117962 , Coords238_g117962 , WorldPosition238_g117962 );
				TEXTURE2D(Texture246_g117962) = _TerrainNormalTex12;
				SamplerState Sampler246_g117962 = SS29_g118002;
				half4 Coords246_g117962 = temp_output_37_0_g117962;
				half3 WorldPosition246_g117962 = temp_output_279_0_g117962;
				float3 temp_output_280_0_g117962 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117962 = temp_output_280_0_g117962;
				half4 localSamplePlanar3D246_g117962 = SamplePlanar3D( Texture246_g117962 , Sampler246_g117962 , Coords246_g117962 , WorldPosition246_g117962 , WorldNormal246_g117962 );
				TEXTURE2D(Texture234_g117962) = _TerrainNormalTex12;
				SamplerState Sampler234_g117962 = SS29_g118002;
				float4 Coords234_g117962 = temp_output_37_0_g117962;
				float3 WorldPosition234_g117962 = temp_output_279_0_g117962;
				float4 localSampleStochastic2D234_g117962 = SampleStochastic2D( Texture234_g117962 , Sampler234_g117962 , Coords234_g117962 , WorldPosition234_g117962 );
				TEXTURE2D(Texture263_g117962) = _TerrainNormalTex12;
				SamplerState Sampler263_g117962 = SS29_g118002;
				half4 Coords263_g117962 = temp_output_37_0_g117962;
				half3 WorldPosition263_g117962 = temp_output_279_0_g117962;
				half3 WorldNormal263_g117962 = temp_output_280_0_g117962;
				half4 localSampleStochastic3D263_g117962 = SampleStochastic3D( Texture263_g117962 , Sampler263_g117962 , Coords263_g117962 , WorldPosition263_g117962 , WorldNormal263_g117962 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8877_g117895 = localSamplePlanar2D238_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8877_g117895 = localSamplePlanar3D246_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8877_g117895 = localSampleStochastic2D234_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8877_g117895 = localSampleStochastic3D263_g117962;
				#else
				float4 staticSwitch8877_g117895 = localSamplePlanar2D238_g117962;
				#endif
				half4 Layer439_g117918 = staticSwitch8877_g117895;
				float4 weightedBlendVar31_g117918 = Weights52_g117918;
				float4 weightedBlend31_g117918 = ( weightedBlendVar31_g117918.x*Layer133_g117918 + weightedBlendVar31_g117918.y*Layer237_g117918 + weightedBlendVar31_g117918.z*Layer338_g117918 + weightedBlendVar31_g117918.w*Layer439_g117918 );
				half4 Terrain_B_128865_g117895 = weightedBlend31_g117918;
				half4 Layer_1243_g117902 = Terrain_B_128865_g117895;
				half4 Weights52_g117925 = Terrain_Weights_167709_g117895;
				TEXTURE2D(Texture238_g117965) = _TerrainNormalTex13;
				SamplerState Sampler238_g117965 = SS29_g118002;
				float4 temp_output_37_0_g117965 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117965 = temp_output_37_0_g117965;
				float3 temp_output_279_0_g117965 = Input_Position9197_g117895;
				half3 WorldPosition238_g117965 = temp_output_279_0_g117965;
				half4 localSamplePlanar2D238_g117965 = SamplePlanar2D( Texture238_g117965 , Sampler238_g117965 , Coords238_g117965 , WorldPosition238_g117965 );
				TEXTURE2D(Texture246_g117965) = _TerrainNormalTex13;
				SamplerState Sampler246_g117965 = SS29_g118002;
				half4 Coords246_g117965 = temp_output_37_0_g117965;
				half3 WorldPosition246_g117965 = temp_output_279_0_g117965;
				float3 temp_output_280_0_g117965 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117965 = temp_output_280_0_g117965;
				half4 localSamplePlanar3D246_g117965 = SamplePlanar3D( Texture246_g117965 , Sampler246_g117965 , Coords246_g117965 , WorldPosition246_g117965 , WorldNormal246_g117965 );
				TEXTURE2D(Texture234_g117965) = _TerrainNormalTex13;
				SamplerState Sampler234_g117965 = SS29_g118002;
				float4 Coords234_g117965 = temp_output_37_0_g117965;
				float3 WorldPosition234_g117965 = temp_output_279_0_g117965;
				float4 localSampleStochastic2D234_g117965 = SampleStochastic2D( Texture234_g117965 , Sampler234_g117965 , Coords234_g117965 , WorldPosition234_g117965 );
				TEXTURE2D(Texture263_g117965) = _TerrainNormalTex13;
				SamplerState Sampler263_g117965 = SS29_g118002;
				half4 Coords263_g117965 = temp_output_37_0_g117965;
				half3 WorldPosition263_g117965 = temp_output_279_0_g117965;
				half3 WorldNormal263_g117965 = temp_output_280_0_g117965;
				half4 localSampleStochastic3D263_g117965 = SampleStochastic3D( Texture263_g117965 , Sampler263_g117965 , Coords263_g117965 , WorldPosition263_g117965 , WorldNormal263_g117965 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8991_g117895 = localSamplePlanar2D238_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8991_g117895 = localSamplePlanar3D246_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8991_g117895 = localSampleStochastic2D234_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8991_g117895 = localSampleStochastic3D263_g117965;
				#else
				float4 staticSwitch8991_g117895 = localSamplePlanar2D238_g117965;
				#endif
				half4 Layer133_g117925 = staticSwitch8991_g117895;
				TEXTURE2D(Texture238_g117972) = _TerrainNormalTex14;
				SamplerState Sampler238_g117972 = SS29_g118002;
				float4 temp_output_37_0_g117972 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117972 = temp_output_37_0_g117972;
				float3 temp_output_279_0_g117972 = Input_Position9197_g117895;
				half3 WorldPosition238_g117972 = temp_output_279_0_g117972;
				half4 localSamplePlanar2D238_g117972 = SamplePlanar2D( Texture238_g117972 , Sampler238_g117972 , Coords238_g117972 , WorldPosition238_g117972 );
				TEXTURE2D(Texture246_g117972) = _TerrainNormalTex14;
				SamplerState Sampler246_g117972 = SS29_g118002;
				half4 Coords246_g117972 = temp_output_37_0_g117972;
				half3 WorldPosition246_g117972 = temp_output_279_0_g117972;
				float3 temp_output_280_0_g117972 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117972 = temp_output_280_0_g117972;
				half4 localSamplePlanar3D246_g117972 = SamplePlanar3D( Texture246_g117972 , Sampler246_g117972 , Coords246_g117972 , WorldPosition246_g117972 , WorldNormal246_g117972 );
				TEXTURE2D(Texture234_g117972) = _TerrainNormalTex14;
				SamplerState Sampler234_g117972 = SS29_g118002;
				float4 Coords234_g117972 = temp_output_37_0_g117972;
				float3 WorldPosition234_g117972 = temp_output_279_0_g117972;
				float4 localSampleStochastic2D234_g117972 = SampleStochastic2D( Texture234_g117972 , Sampler234_g117972 , Coords234_g117972 , WorldPosition234_g117972 );
				TEXTURE2D(Texture263_g117972) = _TerrainNormalTex14;
				SamplerState Sampler263_g117972 = SS29_g118002;
				half4 Coords263_g117972 = temp_output_37_0_g117972;
				half3 WorldPosition263_g117972 = temp_output_279_0_g117972;
				half3 WorldNormal263_g117972 = temp_output_280_0_g117972;
				half4 localSampleStochastic3D263_g117972 = SampleStochastic3D( Texture263_g117972 , Sampler263_g117972 , Coords263_g117972 , WorldPosition263_g117972 , WorldNormal263_g117972 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8990_g117895 = localSamplePlanar2D238_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8990_g117895 = localSamplePlanar3D246_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8990_g117895 = localSampleStochastic2D234_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8990_g117895 = localSampleStochastic3D263_g117972;
				#else
				float4 staticSwitch8990_g117895 = localSamplePlanar2D238_g117972;
				#endif
				half4 Layer237_g117925 = staticSwitch8990_g117895;
				TEXTURE2D(Texture238_g117973) = _TerrainNormalTex15;
				SamplerState Sampler238_g117973 = SS29_g118002;
				float4 temp_output_37_0_g117973 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117973 = temp_output_37_0_g117973;
				float3 temp_output_279_0_g117973 = Input_Position9197_g117895;
				half3 WorldPosition238_g117973 = temp_output_279_0_g117973;
				half4 localSamplePlanar2D238_g117973 = SamplePlanar2D( Texture238_g117973 , Sampler238_g117973 , Coords238_g117973 , WorldPosition238_g117973 );
				TEXTURE2D(Texture246_g117973) = _TerrainNormalTex15;
				SamplerState Sampler246_g117973 = SS29_g118002;
				half4 Coords246_g117973 = temp_output_37_0_g117973;
				half3 WorldPosition246_g117973 = temp_output_279_0_g117973;
				float3 temp_output_280_0_g117973 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117973 = temp_output_280_0_g117973;
				half4 localSamplePlanar3D246_g117973 = SamplePlanar3D( Texture246_g117973 , Sampler246_g117973 , Coords246_g117973 , WorldPosition246_g117973 , WorldNormal246_g117973 );
				TEXTURE2D(Texture234_g117973) = _TerrainNormalTex15;
				SamplerState Sampler234_g117973 = SS29_g118002;
				float4 Coords234_g117973 = temp_output_37_0_g117973;
				float3 WorldPosition234_g117973 = temp_output_279_0_g117973;
				float4 localSampleStochastic2D234_g117973 = SampleStochastic2D( Texture234_g117973 , Sampler234_g117973 , Coords234_g117973 , WorldPosition234_g117973 );
				TEXTURE2D(Texture263_g117973) = _TerrainNormalTex15;
				SamplerState Sampler263_g117973 = SS29_g118002;
				half4 Coords263_g117973 = temp_output_37_0_g117973;
				half3 WorldPosition263_g117973 = temp_output_279_0_g117973;
				half3 WorldNormal263_g117973 = temp_output_280_0_g117973;
				half4 localSampleStochastic3D263_g117973 = SampleStochastic3D( Texture263_g117973 , Sampler263_g117973 , Coords263_g117973 , WorldPosition263_g117973 , WorldNormal263_g117973 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8989_g117895 = localSamplePlanar2D238_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8989_g117895 = localSamplePlanar3D246_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8989_g117895 = localSampleStochastic2D234_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8989_g117895 = localSampleStochastic3D263_g117973;
				#else
				float4 staticSwitch8989_g117895 = localSamplePlanar2D238_g117973;
				#endif
				half4 Layer338_g117925 = staticSwitch8989_g117895;
				TEXTURE2D(Texture238_g117974) = _TerrainNormalTex16;
				SamplerState Sampler238_g117974 = SS29_g118002;
				float4 temp_output_37_0_g117974 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117974 = temp_output_37_0_g117974;
				float3 temp_output_279_0_g117974 = Input_Position9197_g117895;
				half3 WorldPosition238_g117974 = temp_output_279_0_g117974;
				half4 localSamplePlanar2D238_g117974 = SamplePlanar2D( Texture238_g117974 , Sampler238_g117974 , Coords238_g117974 , WorldPosition238_g117974 );
				TEXTURE2D(Texture246_g117974) = _TerrainNormalTex16;
				SamplerState Sampler246_g117974 = SS29_g118002;
				half4 Coords246_g117974 = temp_output_37_0_g117974;
				half3 WorldPosition246_g117974 = temp_output_279_0_g117974;
				float3 temp_output_280_0_g117974 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117974 = temp_output_280_0_g117974;
				half4 localSamplePlanar3D246_g117974 = SamplePlanar3D( Texture246_g117974 , Sampler246_g117974 , Coords246_g117974 , WorldPosition246_g117974 , WorldNormal246_g117974 );
				TEXTURE2D(Texture234_g117974) = _TerrainNormalTex16;
				SamplerState Sampler234_g117974 = SS29_g118002;
				float4 Coords234_g117974 = temp_output_37_0_g117974;
				float3 WorldPosition234_g117974 = temp_output_279_0_g117974;
				float4 localSampleStochastic2D234_g117974 = SampleStochastic2D( Texture234_g117974 , Sampler234_g117974 , Coords234_g117974 , WorldPosition234_g117974 );
				TEXTURE2D(Texture263_g117974) = _TerrainNormalTex16;
				SamplerState Sampler263_g117974 = SS29_g118002;
				half4 Coords263_g117974 = temp_output_37_0_g117974;
				half3 WorldPosition263_g117974 = temp_output_279_0_g117974;
				half3 WorldNormal263_g117974 = temp_output_280_0_g117974;
				half4 localSampleStochastic3D263_g117974 = SampleStochastic3D( Texture263_g117974 , Sampler263_g117974 , Coords263_g117974 , WorldPosition263_g117974 , WorldNormal263_g117974 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8988_g117895 = localSamplePlanar2D238_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8988_g117895 = localSamplePlanar3D246_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8988_g117895 = localSampleStochastic2D234_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8988_g117895 = localSampleStochastic3D263_g117974;
				#else
				float4 staticSwitch8988_g117895 = localSamplePlanar2D238_g117974;
				#endif
				half4 Layer439_g117925 = staticSwitch8988_g117895;
				float4 weightedBlendVar31_g117925 = Weights52_g117925;
				float4 weightedBlend31_g117925 = ( weightedBlendVar31_g117925.x*Layer133_g117925 + weightedBlendVar31_g117925.y*Layer237_g117925 + weightedBlendVar31_g117925.z*Layer338_g117925 + weightedBlendVar31_g117925.w*Layer439_g117925 );
				half4 Terrain_B_168987_g117895 = weightedBlend31_g117925;
				half4 Layer_1644_g117902 = Terrain_B_168987_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117902 = Layer_045_g117902;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 + Layer_1243_g117902 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 + Layer_1243_g117902 + Layer_1644_g117902 );
				#else
				float4 staticSwitch40_g117902 = Layer_045_g117902;
				#endif
				half4 Blend_Normal7512_g117895 = staticSwitch40_g117902;
				half4 Normal_Packed45_g117996 = Blend_Normal7512_g117895;
				float2 appendResult58_g117996 = (float2(( (Normal_Packed45_g117996).x * (Normal_Packed45_g117996).w ) , (Normal_Packed45_g117996).y));
				half2 Normal_Default50_g117996 = appendResult58_g117996;
				half2 Normal_ASTC41_g117996 = (Normal_Packed45_g117996).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g117996 = Normal_ASTC41_g117996;
				#else
				float2 staticSwitch38_g117996 = Normal_Default50_g117996;
				#endif
				half2 Normal_NO_DTX544_g117996 = (Normal_Packed45_g117996).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g117996 = Normal_NO_DTX544_g117996;
				#else
				float2 staticSwitch37_g117996 = staticSwitch38_g117996;
				#endif
				half4 Weights52_g117898 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117898 = temp_output_6970_0_g117895;
				half4 Layer237_g117898 = temp_output_6977_0_g117895;
				half4 Layer338_g117898 = temp_output_6978_0_g117895;
				half4 Layer439_g117898 = temp_output_6983_0_g117895;
				float4 weightedBlendVar31_g117898 = Weights52_g117898;
				float4 weightedBlend31_g117898 = ( weightedBlendVar31_g117898.x*Layer133_g117898 + weightedBlendVar31_g117898.y*Layer237_g117898 + weightedBlendVar31_g117898.z*Layer338_g117898 + weightedBlendVar31_g117898.w*Layer439_g117898 );
				half4 Terrain_Shaders_047203_g117895 = weightedBlend31_g117898;
				half4 Layer_045_g117904 = Terrain_Shaders_047203_g117895;
				half4 Weights52_g117914 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117914 = temp_output_8714_0_g117895;
				half4 Layer237_g117914 = temp_output_8721_0_g117895;
				half4 Layer338_g117914 = temp_output_8724_0_g117895;
				half4 Layer439_g117914 = temp_output_8727_0_g117895;
				float4 weightedBlendVar31_g117914 = Weights52_g117914;
				float4 weightedBlend31_g117914 = ( weightedBlendVar31_g117914.x*Layer133_g117914 + weightedBlendVar31_g117914.y*Layer237_g117914 + weightedBlendVar31_g117914.z*Layer338_g117914 + weightedBlendVar31_g117914.w*Layer439_g117914 );
				half4 Terrain_Shaders_088730_g117895 = weightedBlend31_g117914;
				half4 Layer_0810_g117904 = Terrain_Shaders_088730_g117895;
				half4 Weights52_g117921 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117921 = temp_output_8815_0_g117895;
				half4 Layer237_g117921 = temp_output_8818_0_g117895;
				half4 Layer338_g117921 = temp_output_8819_0_g117895;
				half4 Layer439_g117921 = temp_output_8820_0_g117895;
				float4 weightedBlendVar31_g117921 = Weights52_g117921;
				float4 weightedBlend31_g117921 = ( weightedBlendVar31_g117921.x*Layer133_g117921 + weightedBlendVar31_g117921.y*Layer237_g117921 + weightedBlendVar31_g117921.z*Layer338_g117921 + weightedBlendVar31_g117921.w*Layer439_g117921 );
				half4 Terrain_Shaders_128871_g117895 = weightedBlend31_g117921;
				half4 Layer_1243_g117904 = Terrain_Shaders_128871_g117895;
				half4 Weights52_g117928 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117928 = temp_output_8931_0_g117895;
				half4 Layer237_g117928 = temp_output_8934_0_g117895;
				half4 Layer338_g117928 = temp_output_8935_0_g117895;
				half4 Layer439_g117928 = temp_output_8936_0_g117895;
				float4 weightedBlendVar31_g117928 = Weights52_g117928;
				float4 weightedBlend31_g117928 = ( weightedBlendVar31_g117928.x*Layer133_g117928 + weightedBlendVar31_g117928.y*Layer237_g117928 + weightedBlendVar31_g117928.z*Layer338_g117928 + weightedBlendVar31_g117928.w*Layer439_g117928 );
				half4 Terrain_Shaders_169014_g117895 = weightedBlend31_g117928;
				half4 Layer_1644_g117904 = Terrain_Shaders_169014_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117904 = Layer_045_g117904;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 + Layer_1243_g117904 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 + Layer_1243_g117904 + Layer_1644_g117904 );
				#else
				float4 staticSwitch40_g117904 = Layer_045_g117904;
				#endif
				half4 Blend_Shaders7420_g117895 = staticSwitch40_g117904;
				half4 Normal_Packed45_g117995 = Blend_Shaders7420_g117895;
				half2 Normal_NO_DTX544_g117995 = (Normal_Packed45_g117995).wy;
				#ifdef TVE_TERRAIN_PACKED
				float2 staticSwitch9080_g117895 = (Normal_NO_DTX544_g117995*2.0 + -1.0);
				#else
				float2 staticSwitch9080_g117895 = (staticSwitch37_g117996*2.0 + -1.0);
				#endif
				half4 Weights52_g117899 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117899 = _TerrainParams1;
				half4 Layer237_g117899 = _TerrainParams2;
				half4 Layer338_g117899 = _TerrainParams3;
				half4 Layer439_g117899 = _TerrainParams4;
				float4 weightedBlendVar31_g117899 = Weights52_g117899;
				float4 weightedBlend31_g117899 = ( weightedBlendVar31_g117899.x*Layer133_g117899 + weightedBlendVar31_g117899.y*Layer237_g117899 + weightedBlendVar31_g117899.z*Layer338_g117899 + weightedBlendVar31_g117899.w*Layer439_g117899 );
				half4 Terrain_Params_047533_g117895 = weightedBlend31_g117899;
				half4 Layer_045_g117905 = Terrain_Params_047533_g117895;
				half4 Weights52_g117915 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117915 = _TerrainParams5;
				half4 Layer237_g117915 = _TerrainParams6;
				half4 Layer338_g117915 = _TerrainParams7;
				half4 Layer439_g117915 = _TerrainParams8;
				float4 weightedBlendVar31_g117915 = Weights52_g117915;
				float4 weightedBlend31_g117915 = ( weightedBlendVar31_g117915.x*Layer133_g117915 + weightedBlendVar31_g117915.y*Layer237_g117915 + weightedBlendVar31_g117915.z*Layer338_g117915 + weightedBlendVar31_g117915.w*Layer439_g117915 );
				half4 Terrain_Params_088739_g117895 = weightedBlend31_g117915;
				half4 Layer_0810_g117905 = Terrain_Params_088739_g117895;
				half4 Weights52_g117922 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117922 = _TerrainParams9;
				half4 Layer237_g117922 = _TerrainParams10;
				half4 Layer338_g117922 = _TerrainParams11;
				half4 Layer439_g117922 = _TerrainParams12;
				float4 weightedBlendVar31_g117922 = Weights52_g117922;
				float4 weightedBlend31_g117922 = ( weightedBlendVar31_g117922.x*Layer133_g117922 + weightedBlendVar31_g117922.y*Layer237_g117922 + weightedBlendVar31_g117922.z*Layer338_g117922 + weightedBlendVar31_g117922.w*Layer439_g117922 );
				half4 Terrain_Params_128867_g117895 = weightedBlend31_g117922;
				half4 Layer_1243_g117905 = Terrain_Params_128867_g117895;
				half4 Weights52_g117929 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117929 = _TerrainParams13;
				half4 Layer237_g117929 = _TerrainParams14;
				half4 Layer338_g117929 = _TerrainParams15;
				half4 Layer439_g117929 = _TerrainParams16;
				float4 weightedBlendVar31_g117929 = Weights52_g117929;
				float4 weightedBlend31_g117929 = ( weightedBlendVar31_g117929.x*Layer133_g117929 + weightedBlendVar31_g117929.y*Layer237_g117929 + weightedBlendVar31_g117929.z*Layer338_g117929 + weightedBlendVar31_g117929.w*Layer439_g117929 );
				half4 Terrain_Params_169017_g117895 = weightedBlend31_g117929;
				half4 Layer_1644_g117905 = Terrain_Params_169017_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117905 = Layer_045_g117905;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 + Layer_1243_g117905 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 + Layer_1243_g117905 + Layer_1644_g117905 );
				#else
				float4 staticSwitch40_g117905 = Layer_045_g117905;
				#endif
				half4 Blend_Params7547_g117895 = staticSwitch40_g117905;
				half2 Normal_Planar45_g117997 = ( ( staticSwitch9080_g117895 * (Blend_Params7547_g117895).z ) * _TerrainNormalValue );
				float2 break71_g117997 = Normal_Planar45_g117997;
				float3 appendResult72_g117997 = (float3(break71_g117997.x , 0.0 , break71_g117997.y));
				half2 Final_NormalTS9145_g117895 = (mul( ase_worldToTangent, appendResult72_g117997 )).xy;
				half2 Local_Normal9200_g117893 = Final_NormalTS9145_g117895;
				float2 In_NormalTS3_g117894 = Local_Normal9200_g117893;
				float3 appendResult68_g118005 = (float3(Local_Normal9200_g117893 , 1.0));
				float3 tanToWorld0 = float3( tangentWS.xyz.x, ase_worldBitangent.x, normalWS.x );
				float3 tanToWorld1 = float3( tangentWS.xyz.y, ase_worldBitangent.y, normalWS.y );
				float3 tanToWorld2 = float3( tangentWS.xyz.z, ase_worldBitangent.z, normalWS.z );
				float3 tanNormal74_g118005 = appendResult68_g118005;
				float3 worldNormal74_g118005 = normalize( float3(dot(tanToWorld0,tanNormal74_g118005), dot(tanToWorld1,tanNormal74_g118005), dot(tanToWorld2,tanNormal74_g118005)) );
				float3 In_NormalWS3_g117894 = worldNormal74_g118005;
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9139_g117895 = 0.0;
				#else
				float staticSwitch9139_g117895 = ( (Blend_Shaders7420_g117895).x * (Blend_Params7547_g117895).x * _TerrainMetallicValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9097_g117895 = 1.0;
				#else
				float staticSwitch9097_g117895 = ( (Blend_Shaders7420_g117895).y * _TerrainOcclusionValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9105_g117895 = (Blend_Shaders7420_g117895).x;
				#else
				float staticSwitch9105_g117895 = (Blend_Shaders7420_g117895).w;
				#endif
				float4 appendResult9147_g117895 = (float4(staticSwitch9139_g117895 , staticSwitch9097_g117895 , (Blend_Shaders7420_g117895).z , ( staticSwitch9105_g117895 * (Blend_Params7547_g117895).w * _TerrainSmoothnessValue )));
				half4 Final_Shaders9146_g117895 = appendResult9147_g117895;
				half4 Local_Shader9201_g117893 = Final_Shaders9146_g117895;
				float4 In_Shader3_g117894 = Local_Shader9201_g117893;
				half4 Weights52_g117988 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117988 = _TerrainSpecular1;
				half4 Layer237_g117988 = _TerrainSpecular2;
				half4 Layer338_g117988 = _TerrainSpecular3;
				half4 Layer439_g117988 = _TerrainSpecular4;
				float4 weightedBlendVar31_g117988 = Weights52_g117988;
				float4 weightedBlend31_g117988 = ( weightedBlendVar31_g117988.x*Layer133_g117988 + weightedBlendVar31_g117988.y*Layer237_g117988 + weightedBlendVar31_g117988.z*Layer338_g117988 + weightedBlendVar31_g117988.w*Layer439_g117988 );
				half4 Terrain_Specular_047390_g117895 = weightedBlend31_g117988;
				half4 Layer_045_g117993 = Terrain_Specular_047390_g117895;
				half4 Weights52_g117916 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117916 = _TerrainSpecular5;
				half4 Layer237_g117916 = _TerrainSpecular6;
				half4 Layer338_g117916 = _TerrainSpecular7;
				half4 Layer439_g117916 = _TerrainSpecular8;
				float4 weightedBlendVar31_g117916 = Weights52_g117916;
				float4 weightedBlend31_g117916 = ( weightedBlendVar31_g117916.x*Layer133_g117916 + weightedBlendVar31_g117916.y*Layer237_g117916 + weightedBlendVar31_g117916.z*Layer338_g117916 + weightedBlendVar31_g117916.w*Layer439_g117916 );
				half4 Terrain_Specular_088745_g117895 = weightedBlend31_g117916;
				half4 Layer_0810_g117993 = Terrain_Specular_088745_g117895;
				half4 Weights52_g117923 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117923 = _TerrainSpecular9;
				half4 Layer237_g117923 = _TerrainSpecular10;
				half4 Layer338_g117923 = _TerrainSpecular11;
				half4 Layer439_g117923 = _TerrainSpecular12;
				float4 weightedBlendVar31_g117923 = Weights52_g117923;
				float4 weightedBlend31_g117923 = ( weightedBlendVar31_g117923.x*Layer133_g117923 + weightedBlendVar31_g117923.y*Layer237_g117923 + weightedBlendVar31_g117923.z*Layer338_g117923 + weightedBlendVar31_g117923.w*Layer439_g117923 );
				half4 Terrain_Specular_128869_g117895 = weightedBlend31_g117923;
				half4 Layer_1243_g117993 = Terrain_Specular_128869_g117895;
				half4 Weights52_g117930 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117930 = _TerrainSpecular13;
				half4 Layer237_g117930 = _TerrainSpecular14;
				half4 Layer338_g117930 = _TerrainSpecular15;
				half4 Layer439_g117930 = _TerrainSpecular16;
				float4 weightedBlendVar31_g117930 = Weights52_g117930;
				float4 weightedBlend31_g117930 = ( weightedBlendVar31_g117930.x*Layer133_g117930 + weightedBlendVar31_g117930.y*Layer237_g117930 + weightedBlendVar31_g117930.z*Layer338_g117930 + weightedBlendVar31_g117930.w*Layer439_g117930 );
				half4 Terrain_Specular_169019_g117895 = weightedBlend31_g117930;
				half4 Layer_1644_g117993 = Terrain_Specular_169019_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117993 = Layer_045_g117993;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 + Layer_1243_g117993 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 + Layer_1243_g117993 + Layer_1644_g117993 );
				#else
				float4 staticSwitch40_g117993 = Layer_045_g117993;
				#endif
				half4 Blend_TerrainSpecular7446_g117895 = staticSwitch40_g117993;
				float3 temp_output_9088_0_g117895 = (Blend_TerrainSpecular7446_g117895).rgb;
				float4 appendResult9189_g117895 = (float4(temp_output_9088_0_g117895 , 1.0));
				half4 Final_Emissive9151_g117895 = appendResult9189_g117895;
				half4 Local_EmissiveLDR9202_g117893 = Final_Emissive9151_g117895;
				float4 In_Emissive3_g117894 = Local_EmissiveLDR9202_g117893;
				float3 temp_output_3_0_g118006 = Local_Albedo9199_g117893;
				float dotResult20_g118006 = dot( temp_output_3_0_g118006 , float3(0.2126,0.7152,0.0722) );
				float temp_output_9165_0_g117893 = dotResult20_g118006;
				float In_Grayscale3_g117894 = temp_output_9165_0_g117893;
				float clampResult9168_g117893 = clamp( saturate( ( temp_output_9165_0_g117893 * 5.0 ) ) , 0.2 , 1.0 );
				float In_Luminosity3_g117894 = clampResult9168_g117893;
				half Final_MultiShader9150_g117895 = ( (Blend_TerrainSpecular7446_g117895).a * (Blend_Albedo7468_g117895).w );
				half Local_MultiMask9203_g117893 = Final_MultiShader9150_g117895;
				float In_MultiMask3_g117894 = Local_MultiMask9203_g117893;
				float4 temp_output_35_0_g118004 = appendResult9125_g117895;
				float2 InputScale48_g118004 = (temp_output_35_0_g118004).zw;
				half2 FinalScale53_g118004 = ( 1.0 / InputScale48_g118004 );
				float2 InputPosition52_g118004 = (temp_output_35_0_g118004).xy;
				half2 FinalPosition58_g118004 = -( FinalScale53_g118004 * InputPosition52_g118004 );
				float2 temp_output_65_0_g118004 = ( ( (ase_worldPos).xz * FinalScale53_g118004 ) + FinalPosition58_g118004 );
				float2 Terrain_Holes_UV9406_g117895 = temp_output_65_0_g118004;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch9188_g117895 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9406_g117895 ).r;
				#else
				float staticSwitch9188_g117895 = 1.0;
				#endif
				half Terrain_Holes7437_g117895 = staticSwitch9188_g117895;
				half Local_HoleMask9204_g117893 = Terrain_Holes7437_g117895;
				float In_AlphaClip3_g117894 = Local_HoleMask9204_g117893;
				float In_AlphaFade3_g117894 = 1.0;
				float3 temp_cast_9 = (1.0).xxx;
				float3 In_Translucency3_g117894 = temp_cast_9;
				float In_Transmission3_g117894 = 1.0;
				float In_Thickness3_g117894 = 0.0;
				float In_Diffusion3_g117894 = 0.0;
				Data3_g117894.Dummy = In_Dummy3_g117894;
				Data3_g117894.Albedo = In_Albedo3_g117894;
				Data3_g117894.AlbedoRaw = In_AlbedoRaw3_g117894;
				Data3_g117894.NormalTS = In_NormalTS3_g117894;
				Data3_g117894.NormalWS = In_NormalWS3_g117894;
				Data3_g117894.Shader = In_Shader3_g117894;
				Data3_g117894.Emissive= In_Emissive3_g117894;
				Data3_g117894.MultiMask = In_MultiMask3_g117894;
				Data3_g117894.Grayscale = In_Grayscale3_g117894;
				Data3_g117894.Luminosity = In_Luminosity3_g117894;
				Data3_g117894.AlphaClip = In_AlphaClip3_g117894;
				Data3_g117894.AlphaFade = In_AlphaFade3_g117894;
				Data3_g117894.Translucency = In_Translucency3_g117894;
				Data3_g117894.Transmission = In_Transmission3_g117894;
				Data3_g117894.Thickness = In_Thickness3_g117894;
				Data3_g117894.Diffusion = In_Diffusion3_g117894;
				TVEVisualData Data4_g118029 = Data3_g117894;
				float Out_Dummy4_g118029 = 0;
				float3 Out_Albedo4_g118029 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118029 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118029 = float2( 0,0 );
				float3 Out_NormalWS4_g118029 = float3( 0,0,0 );
				float4 Out_Shader4_g118029 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118029 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118029 = 0;
				float Out_Grayscale4_g118029 = 0;
				float Out_Luminosity4_g118029 = 0;
				float Out_AlphaClip4_g118029 = 0;
				float Out_AlphaFade4_g118029 = 0;
				float3 Out_Translucency4_g118029 = float3( 0,0,0 );
				float Out_Transmission4_g118029 = 0;
				float Out_Thickness4_g118029 = 0;
				float Out_Diffusion4_g118029 = 0;
				Out_Dummy4_g118029 = Data4_g118029.Dummy;
				Out_Albedo4_g118029 = Data4_g118029.Albedo;
				Out_AlbedoRaw4_g118029 = Data4_g118029.AlbedoRaw;
				Out_NormalTS4_g118029 = Data4_g118029.NormalTS;
				Out_NormalWS4_g118029 = Data4_g118029.NormalWS;
				Out_Shader4_g118029 = Data4_g118029.Shader;
				Out_Emissive4_g118029= Data4_g118029.Emissive;
				Out_MultiMask4_g118029 = Data4_g118029.MultiMask;
				Out_Grayscale4_g118029 = Data4_g118029.Grayscale;
				Out_Luminosity4_g118029= Data4_g118029.Luminosity;
				Out_AlphaClip4_g118029 = Data4_g118029.AlphaClip;
				Out_AlphaFade4_g118029 = Data4_g118029.AlphaFade;
				Out_Translucency4_g118029 = Data4_g118029.Translucency;
				Out_Transmission4_g118029 = Data4_g118029.Transmission;
				Out_Thickness4_g118029 = Data4_g118029.Thickness;
				Out_Diffusion4_g118029 = Data4_g118029.Diffusion;
				half3 Visual_Albedo139_g118007 = Out_Albedo4_g118029;
				float temp_output_200_12_g118007 = Out_Grayscale4_g118029;
				half Visual_Grayscale150_g118007 = temp_output_200_12_g118007;
				float3 temp_cast_10 = (Visual_Grayscale150_g118007).xxx;
				float localBuildGlobalData204_g117810 = ( 0.0 );
				TVEGlobalData Data204_g117810 = (TVEGlobalData)0;
				half Dummy211_g117810 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g117810 = Dummy211_g117810;
				half4 Coat_Params302_g117810 = TVE_CoatParams;
				float4 In_CoatParams204_g117810 = Coat_Params302_g117810;
				float temp_output_82_0_g117811 = _GlobalPaintLayerValue;
				float temp_output_19_0_g117813 = TVE_PaintLayers[(int)temp_output_82_0_g117811];
				TVEModelData Data16_g117809 = (TVEModelData)0;
				float In_Dummy16_g117809 = 0.0;
				float3 vertexToFrag73_g117794 = packedInput.ase_texcoord6.xyz;
				half3 PositionWS122_g117794 = vertexToFrag73_g117794;
				float3 In_PositionWS16_g117809 = PositionWS122_g117794;
				float3 localObjectPosition_UNITY_MATRIX_M14_g117796 = ObjectPosition_UNITY_MATRIX_M();
				#ifdef SHADEROPTIONS_CAMERA_RELATIVE_RENDERING
				float3 staticSwitch13_g117796 = ( localObjectPosition_UNITY_MATRIX_M14_g117796 + _WorldSpaceCameraPos );
				#else
				float3 staticSwitch13_g117796 = localObjectPosition_UNITY_MATRIX_M14_g117796;
				#endif
				half3 ObjectData20_g117798 = staticSwitch13_g117796;
				half3 WorldData19_g117798 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g117798 = WorldData19_g117798;
				#else
				float3 staticSwitch14_g117798 = ObjectData20_g117798;
				#endif
				float3 temp_output_124_0_g117796 = staticSwitch14_g117798;
				float3 temp_output_239_7_g117794 = temp_output_124_0_g117796;
				half3 PivotWS121_g117794 = temp_output_239_7_g117794;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g117794 = ( PositionWS122_g117794 - PivotWS121_g117794 );
				#else
				float3 staticSwitch204_g117794 = PositionWS122_g117794;
				#endif
				half3 PositionWO132_g117794 = ( staticSwitch204_g117794 - TVE_WorldOrigin );
				float3 In_PositionWO16_g117809 = PositionWO132_g117794;
				float3 In_PivotWS16_g117809 = PivotWS121_g117794;
				half3 PivotWO133_g117794 = ( PivotWS121_g117794 - TVE_WorldOrigin );
				float3 In_PivotWO16_g117809 = PivotWO133_g117794;
				float3 normalizedWorldNormal = normalize( normalWS );
				half3 Normal_WS95_g117794 = normalizedWorldNormal;
				float3 In_NormalWS16_g117809 = Normal_WS95_g117794;
				float3 normalizeResult296_g117794 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g117794 ) );
				half3 ViewDirWS169_g117794 = normalizeResult296_g117794;
				float3 In_ViewDirWS16_g117809 = ViewDirWS169_g117794;
				half4 VertexMasks171_g117794 = packedInput.ase_color;
				float4 In_VertexData16_g117809 = VertexMasks171_g117794;
				float4 In_BoundsData16_g117809 = float4( 1,1,1,1 );
				Data16_g117809.Dummy = In_Dummy16_g117809;
				Data16_g117809.PositionWS = In_PositionWS16_g117809;
				Data16_g117809.PositionWO = In_PositionWO16_g117809;
				Data16_g117809.PivotWS = In_PivotWS16_g117809;
				Data16_g117809.PivotWO = In_PivotWO16_g117809;
				Data16_g117809.NormalWS = In_NormalWS16_g117809;
				Data16_g117809.ViewDirWS = In_ViewDirWS16_g117809;
				Data16_g117809.VertexData = In_VertexData16_g117809;
				Data16_g117809.BoundsData = In_BoundsData16_g117809;
				TVEModelData Data15_g117892 = Data16_g117809;
				float Out_Dummy15_g117892 = 0;
				float3 Out_PositionWS15_g117892 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117892 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117892 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g117892 = float3( 0,0,0 );
				float4 Out_VertexData15_g117892 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117892 = float4( 0,0,0,0 );
				Out_Dummy15_g117892 = Data15_g117892.Dummy;
				Out_PositionWS15_g117892 = Data15_g117892.PositionWS;
				Out_PositionWO15_g117892 = Data15_g117892.PositionWO;
				Out_PivotWS15_g117892 = Data15_g117892.PivotWS;
				Out_PivotWO15_g117892 = Data15_g117892.PivotWO;
				Out_NormalWS15_g117892 = Data15_g117892.NormalWS;
				Out_ViewDirWS15_g117892 = Data15_g117892.ViewDirWS;
				Out_VertexData15_g117892 = Data15_g117892.VertexData;
				Out_BoundsData15_g117892 = Data15_g117892.BoundsData;
				half3 Model_PositionWS143_g117810 = Out_PositionWS15_g117892;
				half3 Input_Position180_g117814 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117814 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_82_0_g117814 = temp_output_82_0_g117811;
				float2 temp_output_119_0_g117814 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_7_0_g117819 = 1.0;
				float temp_output_10_0_g117819 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117819 );
				float4 lerpResult131_g117814 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117814,temp_output_82_0_g117814, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, temp_output_119_0_g117814,temp_output_82_0_g117814, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117814 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117819 ) / temp_output_10_0_g117819 ) ));
				float4 temp_output_17_0_g117813 = lerpResult131_g117814;
				float4 temp_output_3_0_g117813 = TVE_PaintParams;
				float4 ifLocalVar18_g117813 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117813 >= 0.5 )
				ifLocalVar18_g117813 = temp_output_17_0_g117813;
				else
				ifLocalVar18_g117813 = temp_output_3_0_g117813;
				float4 lerpResult22_g117813 = lerp( temp_output_3_0_g117813 , temp_output_17_0_g117813 , temp_output_19_0_g117813);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117813 = lerpResult22_g117813;
				#else
				float4 staticSwitch24_g117813 = ifLocalVar18_g117813;
				#endif
				half4 Paint_Params71_g117810 = staticSwitch24_g117813;
				float4 In_PaintParams204_g117810 = Paint_Params71_g117810;
				float temp_output_82_0_g117829 = _GlobalGlowLayerValue;
				float temp_output_19_0_g117831 = TVE_GlowLayers[(int)temp_output_82_0_g117829];
				half3 Input_Position180_g117832 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117832 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_82_0_g117832 = temp_output_82_0_g117829;
				float2 temp_output_119_0_g117832 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_7_0_g117837 = 1.0;
				float temp_output_10_0_g117837 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117837 );
				float4 lerpResult131_g117832 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117832,temp_output_82_0_g117832, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, temp_output_119_0_g117832,temp_output_82_0_g117832, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117832 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117837 ) / temp_output_10_0_g117837 ) ));
				float4 temp_output_17_0_g117831 = lerpResult131_g117832;
				float4 temp_output_3_0_g117831 = TVE_GlowParams;
				float4 ifLocalVar18_g117831 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117831 >= 0.5 )
				ifLocalVar18_g117831 = temp_output_17_0_g117831;
				else
				ifLocalVar18_g117831 = temp_output_3_0_g117831;
				float4 lerpResult22_g117831 = lerp( temp_output_3_0_g117831 , temp_output_17_0_g117831 , temp_output_19_0_g117831);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117831 = lerpResult22_g117831;
				#else
				float4 staticSwitch24_g117831 = ifLocalVar18_g117831;
				#endif
				half4 Glow_Params248_g117810 = staticSwitch24_g117831;
				float4 In_GlowParams204_g117810 = Glow_Params248_g117810;
				float temp_output_132_0_g117874 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g117876 = TVE_AtmoLayers[(int)temp_output_132_0_g117874];
				half3 Input_Position180_g117877 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117877 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_82_0_g117877 = temp_output_132_0_g117874;
				float2 temp_output_119_0_g117877 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_7_0_g117882 = 1.0;
				float temp_output_10_0_g117882 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117882 );
				float4 lerpResult131_g117877 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117877,temp_output_82_0_g117877, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, temp_output_119_0_g117877,temp_output_82_0_g117877, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117877 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117882 ) / temp_output_10_0_g117882 ) ));
				float4 temp_output_17_0_g117876 = lerpResult131_g117877;
				float4 temp_output_3_0_g117876 = TVE_AtmoParams;
				float4 ifLocalVar18_g117876 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117876 >= 0.5 )
				ifLocalVar18_g117876 = temp_output_17_0_g117876;
				else
				ifLocalVar18_g117876 = temp_output_3_0_g117876;
				float4 lerpResult22_g117876 = lerp( temp_output_3_0_g117876 , temp_output_17_0_g117876 , temp_output_19_0_g117876);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117876 = lerpResult22_g117876;
				#else
				float4 staticSwitch24_g117876 = ifLocalVar18_g117876;
				#endif
				half4 Atmo_Params80_g117810 = staticSwitch24_g117876;
				float4 In_AtmoParams204_g117810 = Atmo_Params80_g117810;
				float temp_output_132_0_g117883 = _GlobalFadeLayerValue;
				float temp_output_19_0_g117885 = TVE_FadeLayers[(int)temp_output_132_0_g117883];
				half3 Input_Position180_g117886 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117886 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_82_0_g117886 = temp_output_132_0_g117883;
				float2 temp_output_119_0_g117886 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_7_0_g117891 = 1.0;
				float temp_output_10_0_g117891 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117891 );
				float4 lerpResult131_g117886 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117886,temp_output_82_0_g117886, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, temp_output_119_0_g117886,temp_output_82_0_g117886, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117886 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117891 ) / temp_output_10_0_g117891 ) ));
				float4 temp_output_17_0_g117885 = lerpResult131_g117886;
				float4 temp_output_3_0_g117885 = TVE_FadeParams;
				float4 ifLocalVar18_g117885 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117885 >= 0.5 )
				ifLocalVar18_g117885 = temp_output_17_0_g117885;
				else
				ifLocalVar18_g117885 = temp_output_3_0_g117885;
				float4 lerpResult22_g117885 = lerp( temp_output_3_0_g117885 , temp_output_17_0_g117885 , temp_output_19_0_g117885);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117885 = lerpResult22_g117885;
				#else
				float4 staticSwitch24_g117885 = ifLocalVar18_g117885;
				#endif
				half4 Fade_Params387_g117810 = staticSwitch24_g117885;
				float4 In_FadeParams204_g117810 = Fade_Params387_g117810;
				half4 Form_Params112_g117810 = TVE_FormParams;
				float4 In_FormParams204_g117810 = Form_Params112_g117810;
				float temp_output_130_0_g117847 = _GlobalLandLayerValue;
				float temp_output_19_0_g117849 = TVE_LandLayers[(int)temp_output_130_0_g117847];
				half3 Input_Position180_g117850 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117850 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_82_0_g117850 = temp_output_130_0_g117847;
				float2 temp_output_119_0_g117850 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_7_0_g117855 = 1.0;
				float temp_output_10_0_g117855 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117855 );
				float4 lerpResult131_g117850 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117850,temp_output_82_0_g117850, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, temp_output_119_0_g117850,temp_output_82_0_g117850, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117850 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117855 ) / temp_output_10_0_g117855 ) ));
				float4 temp_output_17_0_g117849 = lerpResult131_g117850;
				float4 temp_output_3_0_g117849 = TVE_LandParams;
				float4 ifLocalVar18_g117849 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117849 >= 0.5 )
				ifLocalVar18_g117849 = temp_output_17_0_g117849;
				else
				ifLocalVar18_g117849 = temp_output_3_0_g117849;
				float4 lerpResult22_g117849 = lerp( temp_output_3_0_g117849 , temp_output_17_0_g117849 , temp_output_19_0_g117849);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117849 = lerpResult22_g117849;
				#else
				float4 staticSwitch24_g117849 = ifLocalVar18_g117849;
				#endif
				half4 Land_Params375_g117810 = staticSwitch24_g117849;
				float4 In_LandParams204_g117810 = Land_Params375_g117810;
				half4 Wind_Params88_g117810 = TVE_WindParams;
				float4 In_WindParams204_g117810 = Wind_Params88_g117810;
				half4 Push_Params335_g117810 = TVE_PushParams;
				float4 In_PushParams204_g117810 = Push_Params335_g117810;
				Data204_g117810.Dummy = In_Dummy204_g117810;
				Data204_g117810.CoatParams = In_CoatParams204_g117810;
				Data204_g117810.PaintParams = In_PaintParams204_g117810;
				Data204_g117810.GlowParams = In_GlowParams204_g117810;
				Data204_g117810.AtmoParams = In_AtmoParams204_g117810;
				Data204_g117810.FadeParams = In_FadeParams204_g117810;
				Data204_g117810.FormParams= In_FormParams204_g117810;
				Data204_g117810.LandParams = In_LandParams204_g117810;
				Data204_g117810.WindParams = In_WindParams204_g117810;
				Data204_g117810.PushParams = In_PushParams204_g117810;
				TVEGlobalData Data15_g118008 = Data204_g117810;
				float Out_Dummy15_g118008 = 0;
				float4 Out_CoatParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118008 = float4( 0,0,0,0 );
				Out_Dummy15_g118008 = Data15_g118008.Dummy;
				Out_CoatParams15_g118008 = Data15_g118008.CoatParams;
				Out_PaintParams15_g118008 = Data15_g118008.PaintParams;
				Out_GlowParams15_g118008 = Data15_g118008.GlowParams;
				Out_AtmoParams15_g118008= Data15_g118008.AtmoParams;
				Out_FadeParams15_g118008= Data15_g118008.FadeParams;
				Out_FormParams15_g118008 = Data15_g118008.FormParams;
				Out_LandParams15_g118008 = Data15_g118008.LandParams;
				Out_WindParams15_g118008 = Data15_g118008.WindParams;
				Out_PushParams15_g118008 = Data15_g118008.PushParams;
				half4 Global_PaintParams209_g118007 = Out_PaintParams15_g118008;
				float temp_output_6_0_g118009 = ( saturate( (Global_PaintParams209_g118007).w ) * TVE_IsEnabled );
				#ifdef TVE_REGISTER
				float staticSwitch14_g118009 = ( temp_output_6_0_g118009 + ( _TintingElementMode * 0.0 ) );
				#else
				float staticSwitch14_g118009 = temp_output_6_0_g118009;
				#endif
				#ifdef TVE_TINTING_ELEMENT
				float staticSwitch283_g118007 = staticSwitch14_g118009;
				#else
				float staticSwitch283_g118007 = 1.0;
				#endif
				half Tinting_GlobalValue285_g118007 = staticSwitch283_g118007;
				float3 lerpResult368_g118007 = lerp( Visual_Albedo139_g118007 , temp_cast_10 , ( Tinting_GlobalValue285_g118007 * _TintingGrayValue ));
				float3 temp_cast_32 = (1.0).xxx;
				#ifdef TVE_TINTING_ELEMENT
				float3 staticSwitch288_g118007 = (Global_PaintParams209_g118007).xyz;
				#else
				float3 staticSwitch288_g118007 = temp_cast_32;
				#endif
				half3 Tinting_ColorGlobal290_g118007 = staticSwitch288_g118007;
				float temp_output_200_11_g118007 = Out_MultiMask4_g118029;
				half Visual_MultiMask181_g118007 = temp_output_200_11_g118007;
				float lerpResult147_g118007 = lerp( 1.0 , Visual_MultiMask181_g118007 , _TintingMultiValue);
				half Tinting_MutiMask121_g118007 = lerpResult147_g118007;
				half Tinting_TexMask385_g118007 = 1.0;
				float temp_output_200_15_g118007 = Out_Luminosity4_g118029;
				half Visual_Luminosity257_g118007 = temp_output_200_15_g118007;
				float clampResult17_g118021 = clamp( Visual_Luminosity257_g118007 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118020 = _TintingLumaRemap.x;
				float temp_output_10_0_g118020 = ( _TintingLumaRemap.y - temp_output_7_0_g118020 );
				float lerpResult228_g118007 = lerp( 1.0 , saturate( ( ( clampResult17_g118021 - temp_output_7_0_g118020 ) / ( temp_output_10_0_g118020 + 0.0001 ) ) ) , _TintingLumaValue);
				half Tinting_LumaMask153_g118007 = lerpResult228_g118007;
				half Tinting_VertMask309_g118007 = 1.0;
				half Tinting_NoiseMask213_g118007 = 1.0;
				half Custom_Mask345_g118007 = 1.0;
				float temp_output_7_0_g118016 = _TintingBlendRemap.x;
				float temp_output_10_0_g118016 = ( _TintingBlendRemap.y - temp_output_7_0_g118016 );
				half Tinting_Mask242_g118007 = ( saturate( ( ( ( _TintingIntensityValue * Tinting_MutiMask121_g118007 * Tinting_TexMask385_g118007 * Tinting_LumaMask153_g118007 * Tinting_VertMask309_g118007 * Tinting_NoiseMask213_g118007 * Tinting_GlobalValue285_g118007 * Custom_Mask345_g118007 ) - temp_output_7_0_g118016 ) / ( temp_output_10_0_g118016 + 0.0001 ) ) ) * TVE_IsEnabled );
				float3 lerpResult90_g118007 = lerp( Visual_Albedo139_g118007 , ( lerpResult368_g118007 * 4.594794 * Tinting_ColorGlobal290_g118007 * (_TintingColor).rgb ) , Tinting_Mask242_g118007);
				#ifdef TVE_TINTING
				float3 staticSwitch286_g118007 = lerpResult90_g118007;
				#else
				float3 staticSwitch286_g118007 = Visual_Albedo139_g118007;
				#endif
				half3 Final_Albedo97_g118007 = staticSwitch286_g118007;
				float3 In_Albedo3_g118028 = Final_Albedo97_g118007;
				float3 In_AlbedoRaw3_g118028 = Out_AlbedoRaw4_g118029;
				float2 In_NormalTS3_g118028 = Out_NormalTS4_g118029;
				float3 In_NormalWS3_g118028 = Out_NormalWS4_g118029;
				float4 In_Shader3_g118028 = Out_Shader4_g118029;
				float4 In_Emissive3_g118028 = Out_Emissive4_g118029;
				float In_Grayscale3_g118028 = temp_output_200_12_g118007;
				float In_Luminosity3_g118028 = temp_output_200_15_g118007;
				float In_MultiMask3_g118028 = temp_output_200_11_g118007;
				float In_AlphaClip3_g118028 = Out_AlphaClip4_g118029;
				float In_AlphaFade3_g118028 = Out_AlphaFade4_g118029;
				float3 In_Translucency3_g118028 = Out_Translucency4_g118029;
				float In_Transmission3_g118028 = Out_Transmission4_g118029;
				float In_Thickness3_g118028 = Out_Thickness4_g118029;
				float In_Diffusion3_g118028 = Out_Diffusion4_g118029;
				Data3_g118028.Dummy = In_Dummy3_g118028;
				Data3_g118028.Albedo = In_Albedo3_g118028;
				Data3_g118028.AlbedoRaw = In_AlbedoRaw3_g118028;
				Data3_g118028.NormalTS = In_NormalTS3_g118028;
				Data3_g118028.NormalWS = In_NormalWS3_g118028;
				Data3_g118028.Shader = In_Shader3_g118028;
				Data3_g118028.Emissive= In_Emissive3_g118028;
				Data3_g118028.MultiMask = In_MultiMask3_g118028;
				Data3_g118028.Grayscale = In_Grayscale3_g118028;
				Data3_g118028.Luminosity = In_Luminosity3_g118028;
				Data3_g118028.AlphaClip = In_AlphaClip3_g118028;
				Data3_g118028.AlphaFade = In_AlphaFade3_g118028;
				Data3_g118028.Translucency = In_Translucency3_g118028;
				Data3_g118028.Transmission = In_Transmission3_g118028;
				Data3_g118028.Thickness = In_Thickness3_g118028;
				Data3_g118028.Diffusion = In_Diffusion3_g118028;
				TVEVisualData Data4_g118033 = Data3_g118028;
				float Out_Dummy4_g118033 = 0;
				float3 Out_Albedo4_g118033 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118033 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118033 = float2( 0,0 );
				float3 Out_NormalWS4_g118033 = float3( 0,0,0 );
				float4 Out_Shader4_g118033 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118033 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118033 = 0;
				float Out_Grayscale4_g118033 = 0;
				float Out_Luminosity4_g118033 = 0;
				float Out_AlphaClip4_g118033 = 0;
				float Out_AlphaFade4_g118033 = 0;
				float3 Out_Translucency4_g118033 = float3( 0,0,0 );
				float Out_Transmission4_g118033 = 0;
				float Out_Thickness4_g118033 = 0;
				float Out_Diffusion4_g118033 = 0;
				Out_Dummy4_g118033 = Data4_g118033.Dummy;
				Out_Albedo4_g118033 = Data4_g118033.Albedo;
				Out_AlbedoRaw4_g118033 = Data4_g118033.AlbedoRaw;
				Out_NormalTS4_g118033 = Data4_g118033.NormalTS;
				Out_NormalWS4_g118033 = Data4_g118033.NormalWS;
				Out_Shader4_g118033 = Data4_g118033.Shader;
				Out_Emissive4_g118033= Data4_g118033.Emissive;
				Out_MultiMask4_g118033 = Data4_g118033.MultiMask;
				Out_Grayscale4_g118033 = Data4_g118033.Grayscale;
				Out_Luminosity4_g118033= Data4_g118033.Luminosity;
				Out_AlphaClip4_g118033 = Data4_g118033.AlphaClip;
				Out_AlphaFade4_g118033 = Data4_g118033.AlphaFade;
				Out_Translucency4_g118033 = Data4_g118033.Translucency;
				Out_Transmission4_g118033 = Data4_g118033.Transmission;
				Out_Thickness4_g118033 = Data4_g118033.Thickness;
				Out_Diffusion4_g118033 = Data4_g118033.Diffusion;
				half3 Visual_Albedo292_g118031 = Out_Albedo4_g118033;
				float temp_output_280_12_g118031 = Out_Grayscale4_g118033;
				half Visual_Grayscale308_g118031 = temp_output_280_12_g118031;
				float3 temp_cast_33 = (Visual_Grayscale308_g118031).xxx;
				TVEGlobalData Data15_g118032 = Data204_g117810;
				float Out_Dummy15_g118032 = 0;
				float4 Out_CoatParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118032 = float4( 0,0,0,0 );
				Out_Dummy15_g118032 = Data15_g118032.Dummy;
				Out_CoatParams15_g118032 = Data15_g118032.CoatParams;
				Out_PaintParams15_g118032 = Data15_g118032.PaintParams;
				Out_GlowParams15_g118032 = Data15_g118032.GlowParams;
				Out_AtmoParams15_g118032= Data15_g118032.AtmoParams;
				Out_FadeParams15_g118032= Data15_g118032.FadeParams;
				Out_FormParams15_g118032 = Data15_g118032.FormParams;
				Out_LandParams15_g118032 = Data15_g118032.LandParams;
				Out_WindParams15_g118032 = Data15_g118032.WindParams;
				Out_PushParams15_g118032 = Data15_g118032.PushParams;
				half4 Global_AtmoParams314_g118031 = Out_AtmoParams15_g118032;
				#ifdef TVE_DRYNESS_ELEMENT
				float staticSwitch351_g118031 = ( (Global_AtmoParams314_g118031).x * TVE_IsEnabled );
				#else
				float staticSwitch351_g118031 = 1.0;
				#endif
				half Dryness_GlobalMask352_g118031 = staticSwitch351_g118031;
				float3 lerpResult485_g118031 = lerp( Visual_Albedo292_g118031 , temp_cast_33 , ( Dryness_GlobalMask352_g118031 * _DrynessGrayValue ));
				half3 hsvTorgb58_g118052 = RGBToHSV( lerpResult485_g118031 );
				half3 hsvTorgb61_g118052 = HSVToRGB( half3(( hsvTorgb58_g118052.x + _DrynessShiftValue ),hsvTorgb58_g118052.y,hsvTorgb58_g118052.z) );
				#ifdef TVE_DRYNESS_SHIFT
				float3 staticSwitch499_g118031 = hsvTorgb61_g118052;
				#else
				float3 staticSwitch499_g118031 = lerpResult485_g118031;
				#endif
				half Dryness_TexMask478_g118031 = 1.0;
				float temp_output_280_11_g118031 = Out_MultiMask4_g118033;
				half Visual_MultiMask310_g118031 = temp_output_280_11_g118031;
				float lerpResult283_g118031 = lerp( 1.0 , Visual_MultiMask310_g118031 , _DrynessMultiValue);
				half Dryness_MultiMask302_g118031 = lerpResult283_g118031;
				float temp_output_280_15_g118031 = Out_Luminosity4_g118033;
				half Visual_Luminosity309_g118031 = temp_output_280_15_g118031;
				float clampResult17_g118047 = clamp( Visual_Luminosity309_g118031 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118046 = _DrynessLumaRemap.x;
				float temp_output_10_0_g118046 = ( _DrynessLumaRemap.y - temp_output_7_0_g118046 );
				float lerpResult295_g118031 = lerp( 1.0 , saturate( ( ( clampResult17_g118047 - temp_output_7_0_g118046 ) / ( temp_output_10_0_g118046 + 0.0001 ) ) ) , _DrynessLumaValue);
				half Dryness_LumaMask301_g118031 = lerpResult295_g118031;
				half Dryness_VertMask378_g118031 = 1.0;
				half Dryness_MaskNoise291_g118031 = 1.0;
				half Custom_Mask411_g118031 = 1.0;
				float temp_output_7_0_g118045 = _DrynessBlendRemap.x;
				float temp_output_10_0_g118045 = ( _DrynessBlendRemap.y - temp_output_7_0_g118045 );
				half Dryness_Mask329_g118031 = saturate( ( ( ( _DrynessIntensityValue * Dryness_TexMask478_g118031 * Dryness_MultiMask302_g118031 * Dryness_LumaMask301_g118031 * Dryness_VertMask378_g118031 * Dryness_MaskNoise291_g118031 * Dryness_GlobalMask352_g118031 * Custom_Mask411_g118031 ) - temp_output_7_0_g118045 ) / ( temp_output_10_0_g118045 + 0.0001 ) ) );
				float3 lerpResult336_g118031 = lerp( Visual_Albedo292_g118031 , ( staticSwitch499_g118031 * 4.594794 * (_DrynessColor).rgb ) , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float3 staticSwitch356_g118031 = lerpResult336_g118031;
				#else
				float3 staticSwitch356_g118031 = Visual_Albedo292_g118031;
				#endif
				half3 Final_Albedo331_g118031 = staticSwitch356_g118031;
				float3 In_Albedo3_g118034 = Final_Albedo331_g118031;
				float3 In_AlbedoRaw3_g118034 = Out_AlbedoRaw4_g118033;
				float2 In_NormalTS3_g118034 = Out_NormalTS4_g118033;
				float3 In_NormalWS3_g118034 = Out_NormalWS4_g118033;
				half4 Visual_Shader415_g118031 = Out_Shader4_g118033;
				float4 break438_g118031 = Visual_Shader415_g118031;
				float4 appendResult439_g118031 = (float4(break438_g118031.x , break438_g118031.y , break438_g118031.z , ( break438_g118031.w * _DrynessSmoothnessValue )));
				float4 lerpResult427_g118031 = lerp( Visual_Shader415_g118031 , appendResult439_g118031 , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float4 staticSwitch426_g118031 = lerpResult427_g118031;
				#else
				float4 staticSwitch426_g118031 = Visual_Shader415_g118031;
				#endif
				half4 Final_Shader433_g118031 = staticSwitch426_g118031;
				float4 In_Shader3_g118034 = Final_Shader433_g118031;
				float4 In_Emissive3_g118034 = Out_Emissive4_g118033;
				float In_Grayscale3_g118034 = temp_output_280_12_g118031;
				float In_Luminosity3_g118034 = temp_output_280_15_g118031;
				float In_MultiMask3_g118034 = temp_output_280_11_g118031;
				float In_AlphaClip3_g118034 = Out_AlphaClip4_g118033;
				float In_AlphaFade3_g118034 = Out_AlphaFade4_g118033;
				float3 In_Translucency3_g118034 = Out_Translucency4_g118033;
				half Visual_Transmission416_g118031 = Out_Transmission4_g118033;
				float lerpResult421_g118031 = lerp( Visual_Transmission416_g118031 , ( Visual_Transmission416_g118031 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float staticSwitch418_g118031 = lerpResult421_g118031;
				#else
				float staticSwitch418_g118031 = Visual_Transmission416_g118031;
				#endif
				half Final_Transmission425_g118031 = staticSwitch418_g118031;
				float In_Transmission3_g118034 = Final_Transmission425_g118031;
				float In_Thickness3_g118034 = Out_Thickness4_g118033;
				float In_Diffusion3_g118034 = Out_Diffusion4_g118033;
				Data3_g118034.Dummy = In_Dummy3_g118034;
				Data3_g118034.Albedo = In_Albedo3_g118034;
				Data3_g118034.AlbedoRaw = In_AlbedoRaw3_g118034;
				Data3_g118034.NormalTS = In_NormalTS3_g118034;
				Data3_g118034.NormalWS = In_NormalWS3_g118034;
				Data3_g118034.Shader = In_Shader3_g118034;
				Data3_g118034.Emissive= In_Emissive3_g118034;
				Data3_g118034.MultiMask = In_MultiMask3_g118034;
				Data3_g118034.Grayscale = In_Grayscale3_g118034;
				Data3_g118034.Luminosity = In_Luminosity3_g118034;
				Data3_g118034.AlphaClip = In_AlphaClip3_g118034;
				Data3_g118034.AlphaFade = In_AlphaFade3_g118034;
				Data3_g118034.Translucency = In_Translucency3_g118034;
				Data3_g118034.Transmission = In_Transmission3_g118034;
				Data3_g118034.Thickness = In_Thickness3_g118034;
				Data3_g118034.Diffusion = In_Diffusion3_g118034;
				TVEVisualData Data4_g118055 = Data3_g118034;
				float Out_Dummy4_g118055 = 0;
				float3 Out_Albedo4_g118055 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118055 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118055 = float2( 0,0 );
				float3 Out_NormalWS4_g118055 = float3( 0,0,0 );
				float4 Out_Shader4_g118055 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118055 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118055 = 0;
				float Out_Grayscale4_g118055 = 0;
				float Out_Luminosity4_g118055 = 0;
				float Out_AlphaClip4_g118055 = 0;
				float Out_AlphaFade4_g118055 = 0;
				float3 Out_Translucency4_g118055 = float3( 0,0,0 );
				float Out_Transmission4_g118055 = 0;
				float Out_Thickness4_g118055 = 0;
				float Out_Diffusion4_g118055 = 0;
				Out_Dummy4_g118055 = Data4_g118055.Dummy;
				Out_Albedo4_g118055 = Data4_g118055.Albedo;
				Out_AlbedoRaw4_g118055 = Data4_g118055.AlbedoRaw;
				Out_NormalTS4_g118055 = Data4_g118055.NormalTS;
				Out_NormalWS4_g118055 = Data4_g118055.NormalWS;
				Out_Shader4_g118055 = Data4_g118055.Shader;
				Out_Emissive4_g118055= Data4_g118055.Emissive;
				Out_MultiMask4_g118055 = Data4_g118055.MultiMask;
				Out_Grayscale4_g118055 = Data4_g118055.Grayscale;
				Out_Luminosity4_g118055= Data4_g118055.Luminosity;
				Out_AlphaClip4_g118055 = Data4_g118055.AlphaClip;
				Out_AlphaFade4_g118055 = Data4_g118055.AlphaFade;
				Out_Translucency4_g118055 = Data4_g118055.Translucency;
				Out_Transmission4_g118055 = Data4_g118055.Transmission;
				Out_Thickness4_g118055 = Data4_g118055.Thickness;
				Out_Diffusion4_g118055 = Data4_g118055.Diffusion;
				half3 Visual_Albedo127_g118054 = Out_Albedo4_g118055;
				float3 temp_output_622_0_g118054 = (_OverlayColor).rgb;
				TEXTURE2D(Texture238_g118058) = _OverlayAlbedoTex;
				float localFilterTexture19_g118087 = ( 0.0 );
				SamplerState SamplerDefault19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g118087 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g118087 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g118087 = SamplerDefault19_g118087;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g118087 = SamplerDefault19_g118087;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g118087 = SamplerPoint19_g118087;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g118087 = SamplerLow19_g118087;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g118087 = SamplerMedium19_g118087;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g118087 = SamplerHigh19_g118087;
				#endif
				SamplerState Sampler238_g118058 = SS19_g118087;
				float4 temp_output_6_0_g118059 = _overlay_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g118059 = ( temp_output_6_0_g118059 + ( ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g118059 = temp_output_6_0_g118059;
				#endif
				half4 Overlay_Coords639_g118054 = staticSwitch14_g118059;
				float4 temp_output_37_0_g118058 = Overlay_Coords639_g118054;
				half4 Coords238_g118058 = temp_output_37_0_g118058;
				TVEModelData Data15_g118089 = Data16_g117809;
				float Out_Dummy15_g118089 = 0;
				float3 Out_PositionWS15_g118089 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118089 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118089 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118089 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118089 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g118089 = float3( 0,0,0 );
				float4 Out_VertexData15_g118089 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118089 = float4( 0,0,0,0 );
				Out_Dummy15_g118089 = Data15_g118089.Dummy;
				Out_PositionWS15_g118089 = Data15_g118089.PositionWS;
				Out_PositionWO15_g118089 = Data15_g118089.PositionWO;
				Out_PivotWS15_g118089 = Data15_g118089.PivotWS;
				Out_PivotWO15_g118089 = Data15_g118089.PivotWO;
				Out_NormalWS15_g118089 = Data15_g118089.NormalWS;
				Out_ViewDirWS15_g118089 = Data15_g118089.ViewDirWS;
				Out_VertexData15_g118089 = Data15_g118089.VertexData;
				Out_BoundsData15_g118089 = Data15_g118089.BoundsData;
				half3 Model_PositionWO602_g118054 = Out_PositionWO15_g118089;
				float3 temp_output_279_0_g118058 = Model_PositionWO602_g118054;
				half3 WorldPosition238_g118058 = temp_output_279_0_g118058;
				half4 localSamplePlanar2D238_g118058 = SamplePlanar2D( Texture238_g118058 , Sampler238_g118058 , Coords238_g118058 , WorldPosition238_g118058 );
				TEXTURE2D(Texture246_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler246_g118058 = SS19_g118087;
				half4 Coords246_g118058 = temp_output_37_0_g118058;
				half3 WorldPosition246_g118058 = temp_output_279_0_g118058;
				half3 Model_NormalWS712_g118054 = Out_NormalWS15_g118089;
				float3 temp_output_280_0_g118058 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118058 = temp_output_280_0_g118058;
				half4 localSamplePlanar3D246_g118058 = SamplePlanar3D( Texture246_g118058 , Sampler246_g118058 , Coords246_g118058 , WorldPosition246_g118058 , WorldNormal246_g118058 );
				TEXTURE2D(Texture234_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler234_g118058 = SS19_g118087;
				float4 Coords234_g118058 = temp_output_37_0_g118058;
				float3 WorldPosition234_g118058 = temp_output_279_0_g118058;
				float4 localSampleStochastic2D234_g118058 = SampleStochastic2D( Texture234_g118058 , Sampler234_g118058 , Coords234_g118058 , WorldPosition234_g118058 );
				TEXTURE2D(Texture263_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler263_g118058 = SS19_g118087;
				half4 Coords263_g118058 = temp_output_37_0_g118058;
				half3 WorldPosition263_g118058 = temp_output_279_0_g118058;
				half3 WorldNormal263_g118058 = temp_output_280_0_g118058;
				half4 localSampleStochastic3D263_g118058 = SampleStochastic3D( Texture263_g118058 , Sampler263_g118058 , Coords263_g118058 , WorldPosition263_g118058 , WorldNormal263_g118058 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch676_g118054 = localSamplePlanar2D238_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch676_g118054 = localSamplePlanar3D246_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch676_g118054 = localSampleStochastic2D234_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch676_g118054 = localSampleStochastic3D263_g118058;
				#else
				float4 staticSwitch676_g118054 = localSamplePlanar2D238_g118058;
				#endif
				half3 Overlay_Albedo526_g118054 = (staticSwitch676_g118054).xyz;
				#ifdef TVE_OVERLAY_TEX
				float3 staticSwitch578_g118054 = ( temp_output_622_0_g118054 * Overlay_Albedo526_g118054 );
				#else
				float3 staticSwitch578_g118054 = temp_output_622_0_g118054;
				#endif
				float3 temp_output_6_0_g118065 = staticSwitch578_g118054;
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g118065 = ( temp_output_6_0_g118065 + ( _OverlayTextureMode * 0.0 ) );
				#else
				float3 staticSwitch14_g118065 = temp_output_6_0_g118065;
				#endif
				float3 temp_cast_34 = (0.0).xxx;
				TEXTURE2D(Texture246_g118062) = _OverlayGlitterTexRT;
				SamplerState Sampler246_g118062 = sampler_Linear_Repeat;
				float4 appendResult863_g118054 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g118062 = appendResult863_g118054;
				half4 Coords246_g118062 = temp_output_37_0_g118062;
				float3 temp_output_279_0_g118062 = Model_PositionWO602_g118054;
				half3 WorldPosition246_g118062 = temp_output_279_0_g118062;
				float3 temp_output_280_0_g118062 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118062 = temp_output_280_0_g118062;
				half4 localSamplePlanar3D246_g118062 = SamplePlanar3D( Texture246_g118062 , Sampler246_g118062 , Coords246_g118062 , WorldPosition246_g118062 , WorldNormal246_g118062 );
				half Overlay_GlitterTex854_g118054 = (localSamplePlanar3D246_g118062).x;
				half3 Model_PositionWS879_g118054 = Out_PositionWS15_g118089;
				#ifdef TVE_OVERLAY_GLITTER
				float3 staticSwitch868_g118054 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g118054 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g118054 ) / _OverlayGlitterDistValue ) ) ) );
				#else
				float3 staticSwitch868_g118054 = temp_cast_34;
				#endif
				half3 Overlay_GlitterColor865_g118054 = staticSwitch868_g118054;
				half Overlay_TexMask908_g118054 = 1.0;
				float3 temp_output_739_21_g118054 = Out_NormalWS4_g118055;
				half3 Visual_NormalWS749_g118054 = temp_output_739_21_g118054;
				float clampResult17_g118075 = clamp( saturate( (Visual_NormalWS749_g118054).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g118074 = _OverlayProjRemap.x;
				float temp_output_10_0_g118074 = ( _OverlayProjRemap.y - temp_output_7_0_g118074 );
				float lerpResult842_g118054 = lerp( 1.0 , saturate( ( ( clampResult17_g118075 - temp_output_7_0_g118074 ) / ( temp_output_10_0_g118074 + 0.0001 ) ) ) , _OverlayProjValue);
				half Overlay_MaskProj457_g118054 = lerpResult842_g118054;
				float temp_output_739_15_g118054 = Out_Luminosity4_g118055;
				half Visual_Luminosity654_g118054 = temp_output_739_15_g118054;
				float clampResult17_g118077 = clamp( Visual_Luminosity654_g118054 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118076 = _OverlayLumaRemap.x;
				float temp_output_10_0_g118076 = ( _OverlayLumaRemap.y - temp_output_7_0_g118076 );
				float lerpResult587_g118054 = lerp( 1.0 , saturate( ( ( clampResult17_g118077 - temp_output_7_0_g118076 ) / ( temp_output_10_0_g118076 + 0.0001 ) ) ) , _OverlayLumaValue);
				half Overlay_MaskLuma438_g118054 = lerpResult587_g118054;
				half Overlay_VertMask801_g118054 = 1.0;
				half Overlay_MaskNoise427_g118054 = 1.0;
				TVEGlobalData Data15_g118056 = Data204_g117810;
				float Out_Dummy15_g118056 = 0;
				float4 Out_CoatParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118056 = float4( 0,0,0,0 );
				Out_Dummy15_g118056 = Data15_g118056.Dummy;
				Out_CoatParams15_g118056 = Data15_g118056.CoatParams;
				Out_PaintParams15_g118056 = Data15_g118056.PaintParams;
				Out_GlowParams15_g118056 = Data15_g118056.GlowParams;
				Out_AtmoParams15_g118056= Data15_g118056.AtmoParams;
				Out_FadeParams15_g118056= Data15_g118056.FadeParams;
				Out_FormParams15_g118056 = Data15_g118056.FormParams;
				Out_LandParams15_g118056 = Data15_g118056.LandParams;
				Out_WindParams15_g118056 = Data15_g118056.WindParams;
				Out_PushParams15_g118056 = Data15_g118056.PushParams;
				half4 Global_AtmoParams516_g118054 = Out_AtmoParams15_g118056;
				#ifdef TVE_OVERLAY_ELEMENT
				float staticSwitch705_g118054 = ( (Global_AtmoParams516_g118054).z * TVE_IsEnabled );
				#else
				float staticSwitch705_g118054 = 1.0;
				#endif
				half Overlay_MaskGlobal429_g118054 = staticSwitch705_g118054;
				half Custom_Mask646_g118054 = 1.0;
				float temp_output_7_0_g118083 = _OverlayBlendRemap1.x;
				float temp_output_10_0_g118083 = ( _OverlayBlendRemap1.y - temp_output_7_0_g118083 );
				half Overlay_Mask494_g118054 = saturate( ( ( ( _OverlayIntensityValue * Overlay_TexMask908_g118054 * Overlay_MaskProj457_g118054 * Overlay_MaskLuma438_g118054 * Overlay_VertMask801_g118054 * Overlay_MaskNoise427_g118054 * Overlay_MaskGlobal429_g118054 * Custom_Mask646_g118054 ) - temp_output_7_0_g118083 ) / ( temp_output_10_0_g118083 + 0.0001 ) ) );
				float3 lerpResult467_g118054 = lerp( Visual_Albedo127_g118054 , ( staticSwitch14_g118065 + Overlay_GlitterColor865_g118054 ) , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float3 staticSwitch577_g118054 = lerpResult467_g118054;
				#else
				float3 staticSwitch577_g118054 = Visual_Albedo127_g118054;
				#endif
				half3 Final_Albedo493_g118054 = staticSwitch577_g118054;
				float3 In_Albedo3_g118057 = Final_Albedo493_g118054;
				float3 In_AlbedoRaw3_g118057 = Out_AlbedoRaw4_g118055;
				half2 Visual_NormalTS535_g118054 = Out_NormalTS4_g118055;
				TEXTURE2D(Texture238_g118060) = _OverlayNormalTex;
				float localFilterTexture29_g118088 = ( 0.0 );
				SamplerState SamplerDefault29_g118088 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g118088 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g118088 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g118088 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g118088 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g118088 = SamplerDefault29_g118088;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g118088 = SamplerDefault29_g118088;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g118088 = SamplerPoint29_g118088;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g118088 = SamplerLow29_g118088;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g118088 = SamplerMedium29_g118088;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g118088 = SamplerHigh29_g118088;
				#endif
				SamplerState Sampler238_g118060 = SS29_g118088;
				float4 temp_output_37_0_g118060 = Overlay_Coords639_g118054;
				half4 Coords238_g118060 = temp_output_37_0_g118060;
				float3 temp_output_279_0_g118060 = Model_PositionWO602_g118054;
				half3 WorldPosition238_g118060 = temp_output_279_0_g118060;
				half4 localSamplePlanar2D238_g118060 = SamplePlanar2D( Texture238_g118060 , Sampler238_g118060 , Coords238_g118060 , WorldPosition238_g118060 );
				TEXTURE2D(Texture246_g118060) = _OverlayNormalTex;
				SamplerState Sampler246_g118060 = SS29_g118088;
				half4 Coords246_g118060 = temp_output_37_0_g118060;
				half3 WorldPosition246_g118060 = temp_output_279_0_g118060;
				float3 temp_output_280_0_g118060 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118060 = temp_output_280_0_g118060;
				half4 localSamplePlanar3D246_g118060 = SamplePlanar3D( Texture246_g118060 , Sampler246_g118060 , Coords246_g118060 , WorldPosition246_g118060 , WorldNormal246_g118060 );
				TEXTURE2D(Texture234_g118060) = _OverlayNormalTex;
				SamplerState Sampler234_g118060 = SS29_g118088;
				float4 Coords234_g118060 = temp_output_37_0_g118060;
				float3 WorldPosition234_g118060 = temp_output_279_0_g118060;
				float4 localSampleStochastic2D234_g118060 = SampleStochastic2D( Texture234_g118060 , Sampler234_g118060 , Coords234_g118060 , WorldPosition234_g118060 );
				TEXTURE2D(Texture263_g118060) = _OverlayNormalTex;
				SamplerState Sampler263_g118060 = SS29_g118088;
				half4 Coords263_g118060 = temp_output_37_0_g118060;
				half3 WorldPosition263_g118060 = temp_output_279_0_g118060;
				half3 WorldNormal263_g118060 = temp_output_280_0_g118060;
				half4 localSampleStochastic3D263_g118060 = SampleStochastic3D( Texture263_g118060 , Sampler263_g118060 , Coords263_g118060 , WorldPosition263_g118060 , WorldNormal263_g118060 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch686_g118054 = localSamplePlanar2D238_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch686_g118054 = localSamplePlanar3D246_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch686_g118054 = localSampleStochastic2D234_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch686_g118054 = localSampleStochastic3D263_g118060;
				#else
				float4 staticSwitch686_g118054 = localSamplePlanar2D238_g118060;
				#endif
				half4 Normal_Packed45_g118064 = staticSwitch686_g118054;
				float2 appendResult58_g118064 = (float2(( (Normal_Packed45_g118064).x * (Normal_Packed45_g118064).w ) , (Normal_Packed45_g118064).y));
				half2 Normal_Default50_g118064 = appendResult58_g118064;
				half2 Normal_ASTC41_g118064 = (Normal_Packed45_g118064).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g118064 = Normal_ASTC41_g118064;
				#else
				float2 staticSwitch38_g118064 = Normal_Default50_g118064;
				#endif
				half2 Normal_NO_DTX544_g118064 = (Normal_Packed45_g118064).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g118064 = Normal_NO_DTX544_g118064;
				#else
				float2 staticSwitch37_g118064 = staticSwitch38_g118064;
				#endif
				half2 Normal_Planar45_g118063 = (staticSwitch37_g118064*2.0 + -1.0);
				float2 break71_g118063 = Normal_Planar45_g118063;
				float3 appendResult72_g118063 = (float3(break71_g118063.x , 0.0 , break71_g118063.y));
				half2 Overlay_Normal528_g118054 = (mul( ase_worldToTangent, appendResult72_g118063 )).xy;
				#ifdef TVE_OVERLAY_TEX
				float2 staticSwitch579_g118054 = Overlay_Normal528_g118054;
				#else
				float2 staticSwitch579_g118054 = Visual_NormalTS535_g118054;
				#endif
				float2 lerpResult551_g118054 = lerp( Visual_NormalTS535_g118054 , ( staticSwitch579_g118054 * _OverlayNormalValue ) , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float2 staticSwitch583_g118054 = lerpResult551_g118054;
				#else
				float2 staticSwitch583_g118054 = Visual_NormalTS535_g118054;
				#endif
				half2 Final_NormalTS499_g118054 = staticSwitch583_g118054;
				float2 In_NormalTS3_g118057 = Final_NormalTS499_g118054;
				float3 In_NormalWS3_g118057 = temp_output_739_21_g118054;
				half4 Visual_Masks536_g118054 = Out_Shader4_g118055;
				float4 appendResult585_g118054 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
				float4 lerpResult584_g118054 = lerp( Visual_Masks536_g118054 , appendResult585_g118054 , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float4 staticSwitch586_g118054 = lerpResult584_g118054;
				#else
				float4 staticSwitch586_g118054 = Visual_Masks536_g118054;
				#endif
				half4 Final_Masks482_g118054 = staticSwitch586_g118054;
				float4 In_Shader3_g118057 = Final_Masks482_g118054;
				float4 In_Emissive3_g118057 = Out_Emissive4_g118055;
				float temp_output_739_12_g118054 = Out_Grayscale4_g118055;
				float In_Grayscale3_g118057 = temp_output_739_12_g118054;
				float In_Luminosity3_g118057 = temp_output_739_15_g118054;
				float In_MultiMask3_g118057 = Out_MultiMask4_g118055;
				float In_AlphaClip3_g118057 = Out_AlphaClip4_g118055;
				float In_AlphaFade3_g118057 = Out_AlphaFade4_g118055;
				float3 In_Translucency3_g118057 = Out_Translucency4_g118055;
				half Visual_Transmission699_g118054 = Out_Transmission4_g118055;
				float lerpResult746_g118054 = lerp( Visual_Transmission699_g118054 , ( Visual_Transmission699_g118054 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g118054 * Overlay_MaskNoise427_g118054 * Overlay_MaskGlobal429_g118054 ));
				#ifdef TVE_OVERLAY
				float staticSwitch703_g118054 = lerpResult746_g118054;
				#else
				float staticSwitch703_g118054 = Visual_Transmission699_g118054;
				#endif
				half Final_Transmission702_g118054 = staticSwitch703_g118054;
				float In_Transmission3_g118057 = Final_Transmission702_g118054;
				float In_Thickness3_g118057 = Out_Thickness4_g118055;
				float In_Diffusion3_g118057 = Out_Diffusion4_g118055;
				Data3_g118057.Dummy = In_Dummy3_g118057;
				Data3_g118057.Albedo = In_Albedo3_g118057;
				Data3_g118057.AlbedoRaw = In_AlbedoRaw3_g118057;
				Data3_g118057.NormalTS = In_NormalTS3_g118057;
				Data3_g118057.NormalWS = In_NormalWS3_g118057;
				Data3_g118057.Shader = In_Shader3_g118057;
				Data3_g118057.Emissive= In_Emissive3_g118057;
				Data3_g118057.MultiMask = In_MultiMask3_g118057;
				Data3_g118057.Grayscale = In_Grayscale3_g118057;
				Data3_g118057.Luminosity = In_Luminosity3_g118057;
				Data3_g118057.AlphaClip = In_AlphaClip3_g118057;
				Data3_g118057.AlphaFade = In_AlphaFade3_g118057;
				Data3_g118057.Translucency = In_Translucency3_g118057;
				Data3_g118057.Transmission = In_Transmission3_g118057;
				Data3_g118057.Thickness = In_Thickness3_g118057;
				Data3_g118057.Diffusion = In_Diffusion3_g118057;
				TVEVisualData Data4_g118091 = Data3_g118057;
				float Out_Dummy4_g118091 = 0;
				float3 Out_Albedo4_g118091 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118091 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118091 = float2( 0,0 );
				float3 Out_NormalWS4_g118091 = float3( 0,0,0 );
				float4 Out_Shader4_g118091 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118091 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118091 = 0;
				float Out_Grayscale4_g118091 = 0;
				float Out_Luminosity4_g118091 = 0;
				float Out_AlphaClip4_g118091 = 0;
				float Out_AlphaFade4_g118091 = 0;
				float3 Out_Translucency4_g118091 = float3( 0,0,0 );
				float Out_Transmission4_g118091 = 0;
				float Out_Thickness4_g118091 = 0;
				float Out_Diffusion4_g118091 = 0;
				Out_Dummy4_g118091 = Data4_g118091.Dummy;
				Out_Albedo4_g118091 = Data4_g118091.Albedo;
				Out_AlbedoRaw4_g118091 = Data4_g118091.AlbedoRaw;
				Out_NormalTS4_g118091 = Data4_g118091.NormalTS;
				Out_NormalWS4_g118091 = Data4_g118091.NormalWS;
				Out_Shader4_g118091 = Data4_g118091.Shader;
				Out_Emissive4_g118091= Data4_g118091.Emissive;
				Out_MultiMask4_g118091 = Data4_g118091.MultiMask;
				Out_Grayscale4_g118091 = Data4_g118091.Grayscale;
				Out_Luminosity4_g118091= Data4_g118091.Luminosity;
				Out_AlphaClip4_g118091 = Data4_g118091.AlphaClip;
				Out_AlphaFade4_g118091 = Data4_g118091.AlphaFade;
				Out_Translucency4_g118091 = Data4_g118091.Translucency;
				Out_Transmission4_g118091 = Data4_g118091.Transmission;
				Out_Thickness4_g118091 = Data4_g118091.Thickness;
				Out_Diffusion4_g118091 = Data4_g118091.Diffusion;
				half3 Visual_Albedo127_g118090 = Out_Albedo4_g118091;
				TVEGlobalData Data15_g118096 = Data204_g117810;
				float Out_Dummy15_g118096 = 0;
				float4 Out_CoatParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118096 = float4( 0,0,0,0 );
				Out_Dummy15_g118096 = Data15_g118096.Dummy;
				Out_CoatParams15_g118096 = Data15_g118096.CoatParams;
				Out_PaintParams15_g118096 = Data15_g118096.PaintParams;
				Out_GlowParams15_g118096 = Data15_g118096.GlowParams;
				Out_AtmoParams15_g118096= Data15_g118096.AtmoParams;
				Out_FadeParams15_g118096= Data15_g118096.FadeParams;
				Out_FormParams15_g118096 = Data15_g118096.FormParams;
				Out_LandParams15_g118096 = Data15_g118096.LandParams;
				Out_WindParams15_g118096 = Data15_g118096.WindParams;
				Out_PushParams15_g118096 = Data15_g118096.PushParams;
				half4 Global_AtmoParams516_g118090 = Out_AtmoParams15_g118096;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch663_g118090 = ( (Global_AtmoParams516_g118090).y * TVE_IsEnabled );
				#else
				float staticSwitch663_g118090 = 1.0;
				#endif
				half Global_Wetness429_g118090 = staticSwitch663_g118090;
				half Wetness_Value1042_g118090 = ( _WetnessIntensityValue * Global_Wetness429_g118090 );
				half Wetness_VertMask1024_g118090 = 1.0;
				float temp_output_1043_0_g118090 = ( Wetness_Value1042_g118090 * Wetness_VertMask1024_g118090 );
				half Wetness_Mask866_g118090 = temp_output_1043_0_g118090;
				half Water_VertMask1094_g118090 = 1.0;
				half4 Visual_Masks536_g118090 = Out_Shader4_g118091;
				float lerpResult1013_g118090 = lerp( 1.0 , (Visual_Masks536_g118090).z , _WetnessWaterBaseValue);
				half Water_HeightMask782_g118090 = lerpResult1013_g118090;
				float clampResult17_g118105 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g118090 * Water_VertMask1094_g118090 ) - Water_HeightMask782_g118090 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g118106 = _WetnessWaterBlendRemap.x;
				float temp_output_10_0_g118106 = ( _WetnessWaterBlendRemap.y - temp_output_7_0_g118106 );
				TVEModelData Data15_g118104 = Data16_g117809;
				float Out_Dummy15_g118104 = 0;
				float3 Out_PositionWS15_g118104 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118104 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118104 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118104 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118104 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g118104 = float3( 0,0,0 );
				float4 Out_VertexData15_g118104 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118104 = float4( 0,0,0,0 );
				Out_Dummy15_g118104 = Data15_g118104.Dummy;
				Out_PositionWS15_g118104 = Data15_g118104.PositionWS;
				Out_PositionWO15_g118104 = Data15_g118104.PositionWO;
				Out_PivotWS15_g118104 = Data15_g118104.PivotWS;
				Out_PivotWO15_g118104 = Data15_g118104.PivotWO;
				Out_NormalWS15_g118104 = Data15_g118104.NormalWS;
				Out_ViewDirWS15_g118104 = Data15_g118104.ViewDirWS;
				Out_VertexData15_g118104 = Data15_g118104.VertexData;
				Out_BoundsData15_g118104 = Data15_g118104.BoundsData;
				half3 Model_NormalWS798_g118090 = Out_NormalWS15_g118104;
				float temp_output_786_0_g118090 = saturate( (Model_NormalWS798_g118090).y );
				half Wetness_ProjMask790_g118090 = temp_output_786_0_g118090;
				half Water_Mask760_g118090 = ( saturate( ( ( clampResult17_g118105 - temp_output_7_0_g118106 ) / ( temp_output_10_0_g118106 + 0.0001 ) ) ) * Wetness_ProjMask790_g118090 );
				float3 lerpResult918_g118090 = lerp( Visual_Albedo127_g118090 , ( Visual_Albedo127_g118090 * (_WetnessWaterColor).rgb ) , Water_Mask760_g118090);
				#ifdef TVE_WETNESS_WATER
				float3 staticSwitch946_g118090 = lerpResult918_g118090;
				#else
				float3 staticSwitch946_g118090 = Visual_Albedo127_g118090;
				#endif
				float3 lerpResult768_g118090 = lerp( staticSwitch946_g118090 , ( staticSwitch946_g118090 * staticSwitch946_g118090 ) , _WetnessContrastValue);
				float3 lerpResult651_g118090 = lerp( Visual_Albedo127_g118090 , lerpResult768_g118090 , Wetness_Mask866_g118090);
				#ifdef TVE_WETNESS
				float3 staticSwitch577_g118090 = lerpResult651_g118090;
				#else
				float3 staticSwitch577_g118090 = Visual_Albedo127_g118090;
				#endif
				half3 Final_Albedo493_g118090 = staticSwitch577_g118090;
				float3 In_Albedo3_g118092 = Final_Albedo493_g118090;
				float3 In_AlbedoRaw3_g118092 = Out_AlbedoRaw4_g118091;
				half2 Visual_Normal535_g118090 = Out_NormalTS4_g118091;
				float lerpResult877_g118090 = lerp( 1.0 , 0.0 , ( Water_Mask760_g118090 * Water_Mask760_g118090 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch957_g118090 = ( Visual_Normal535_g118090 * lerpResult877_g118090 );
				#else
				float2 staticSwitch957_g118090 = Visual_Normal535_g118090;
				#endif
				float2 temp_cast_35 = (0.0).xx;
				TEXTURE2D(Texture238_g118102) = _WetnessDropsTexRT;
				SamplerState Sampler238_g118102 = sampler_Linear_Repeat_Aniso8;
				float4 appendResult924_g118090 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g118102 = appendResult924_g118090;
				half4 Coords238_g118102 = temp_output_37_0_g118102;
				half3 Model_PositionWO602_g118090 = Out_PositionWO15_g118104;
				float3 temp_output_279_0_g118102 = Model_PositionWO602_g118090;
				half3 WorldPosition238_g118102 = temp_output_279_0_g118102;
				half4 localSamplePlanar2D238_g118102 = SamplePlanar2D( Texture238_g118102 , Sampler238_g118102 , Coords238_g118102 , WorldPosition238_g118102 );
				float4 temp_output_1010_0_g118090 = localSamplePlanar2D238_g118102;
				half2 Rain_DropsNormal919_g118090 = (temp_output_1010_0_g118090).zw;
				float2 temp_output_903_0_g118090 = (Rain_DropsNormal919_g118090*2.0 + -1.0);
				half2 Rain_RingsNormal713_g118090 = (temp_output_1010_0_g118090).xy;
				float2 lerpResult904_g118090 = lerp( temp_output_903_0_g118090 , (Rain_RingsNormal713_g118090*2.0 + -1.0) , ( Water_Mask760_g118090 * Water_Mask760_g118090 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch960_g118090 = lerpResult904_g118090;
				#else
				float2 staticSwitch960_g118090 = temp_output_903_0_g118090;
				#endif
				half2 Rain_Drops1002_g118090 = ( staticSwitch960_g118090 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
				half3 Model_PositionWS823_g118090 = Out_PositionWS15_g118104;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch949_g118090 = ( (Global_AtmoParams516_g118090).w * TVE_IsEnabled );
				#else
				float staticSwitch949_g118090 = 1.0;
				#endif
				half Global_Rain955_g118090 = staticSwitch949_g118090;
				half Rain_Value1067_g118090 = Global_Rain955_g118090;
				half Rain_VertMask1108_g118090 = 1.0;
				half Rain_Mask999_g118090 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g118090 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g118090 * Rain_VertMask1108_g118090 );
				half2 Normal_Planar45_g118101 = ( Rain_Drops1002_g118090 * Rain_Mask999_g118090 * Wetness_ProjMask790_g118090 );
				float2 break71_g118101 = Normal_Planar45_g118101;
				float3 appendResult72_g118101 = (float3(break71_g118101.x , 0.0 , break71_g118101.y));
				half2 Wetness_Normal526_g118090 = (mul( ase_worldToTangent, appendResult72_g118101 )).xy;
				#ifdef TVE_WETNESS_DROPS
				float2 staticSwitch583_g118090 = Wetness_Normal526_g118090;
				#else
				float2 staticSwitch583_g118090 = temp_cast_35;
				#endif
				#ifdef TVE_WETNESS
				float2 staticSwitch774_g118090 = ( staticSwitch957_g118090 + staticSwitch583_g118090 );
				#else
				float2 staticSwitch774_g118090 = Visual_Normal535_g118090;
				#endif
				half2 Final_Normal499_g118090 = staticSwitch774_g118090;
				float2 In_NormalTS3_g118092 = Final_Normal499_g118090;
				float3 In_NormalWS3_g118092 = Out_NormalWS4_g118091;
				float4 break658_g118090 = Visual_Masks536_g118090;
				float temp_output_935_0_g118090 = ( Wetness_Mask866_g118090 * _WetnessSmoothnessValue );
				float lerpResult941_g118090 = lerp( temp_output_935_0_g118090 , 2.0 , Water_Mask760_g118090);
				#ifdef TVE_WETNESS_WATER
				float staticSwitch959_g118090 = lerpResult941_g118090;
				#else
				float staticSwitch959_g118090 = temp_output_935_0_g118090;
				#endif
				float4 appendResult661_g118090 = (float4(break658_g118090.x , break658_g118090.y , break658_g118090.z , saturate( ( break658_g118090.w + staticSwitch959_g118090 ) )));
				#ifdef TVE_WETNESS
				float4 staticSwitch586_g118090 = appendResult661_g118090;
				#else
				float4 staticSwitch586_g118090 = Visual_Masks536_g118090;
				#endif
				half4 Final_Masks482_g118090 = staticSwitch586_g118090;
				float4 In_Shader3_g118092 = Final_Masks482_g118090;
				float4 In_Emissive3_g118092 = Out_Emissive4_g118091;
				float In_Grayscale3_g118092 = Out_Grayscale4_g118091;
				float In_Luminosity3_g118092 = Out_Luminosity4_g118091;
				float In_MultiMask3_g118092 = Out_MultiMask4_g118091;
				float In_AlphaClip3_g118092 = Out_AlphaClip4_g118091;
				float In_AlphaFade3_g118092 = Out_AlphaFade4_g118091;
				float3 In_Translucency3_g118092 = Out_Translucency4_g118091;
				float In_Transmission3_g118092 = Out_Transmission4_g118091;
				float In_Thickness3_g118092 = Out_Thickness4_g118091;
				float In_Diffusion3_g118092 = Out_Diffusion4_g118091;
				Data3_g118092.Dummy = In_Dummy3_g118092;
				Data3_g118092.Albedo = In_Albedo3_g118092;
				Data3_g118092.AlbedoRaw = In_AlbedoRaw3_g118092;
				Data3_g118092.NormalTS = In_NormalTS3_g118092;
				Data3_g118092.NormalWS = In_NormalWS3_g118092;
				Data3_g118092.Shader = In_Shader3_g118092;
				Data3_g118092.Emissive= In_Emissive3_g118092;
				Data3_g118092.MultiMask = In_MultiMask3_g118092;
				Data3_g118092.Grayscale = In_Grayscale3_g118092;
				Data3_g118092.Luminosity = In_Luminosity3_g118092;
				Data3_g118092.AlphaClip = In_AlphaClip3_g118092;
				Data3_g118092.AlphaFade = In_AlphaFade3_g118092;
				Data3_g118092.Translucency = In_Translucency3_g118092;
				Data3_g118092.Transmission = In_Transmission3_g118092;
				Data3_g118092.Thickness = In_Thickness3_g118092;
				Data3_g118092.Diffusion = In_Diffusion3_g118092;
				TVEVisualData Data4_g118128 = Data3_g118092;
				float Out_Dummy4_g118128 = 0;
				float3 Out_Albedo4_g118128 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118128 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118128 = float2( 0,0 );
				float3 Out_NormalWS4_g118128 = float3( 0,0,0 );
				float4 Out_Shader4_g118128 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118128 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118128 = 0;
				float Out_Grayscale4_g118128 = 0;
				float Out_Luminosity4_g118128 = 0;
				float Out_AlphaClip4_g118128 = 0;
				float Out_AlphaFade4_g118128 = 0;
				float3 Out_Translucency4_g118128 = float3( 0,0,0 );
				float Out_Transmission4_g118128 = 0;
				float Out_Thickness4_g118128 = 0;
				float Out_Diffusion4_g118128 = 0;
				Out_Dummy4_g118128 = Data4_g118128.Dummy;
				Out_Albedo4_g118128 = Data4_g118128.Albedo;
				Out_AlbedoRaw4_g118128 = Data4_g118128.AlbedoRaw;
				Out_NormalTS4_g118128 = Data4_g118128.NormalTS;
				Out_NormalWS4_g118128 = Data4_g118128.NormalWS;
				Out_Shader4_g118128 = Data4_g118128.Shader;
				Out_Emissive4_g118128= Data4_g118128.Emissive;
				Out_MultiMask4_g118128 = Data4_g118128.MultiMask;
				Out_Grayscale4_g118128 = Data4_g118128.Grayscale;
				Out_Luminosity4_g118128= Data4_g118128.Luminosity;
				Out_AlphaClip4_g118128 = Data4_g118128.AlphaClip;
				Out_AlphaFade4_g118128 = Data4_g118128.AlphaFade;
				Out_Translucency4_g118128 = Data4_g118128.Translucency;
				Out_Transmission4_g118128 = Data4_g118128.Transmission;
				Out_Thickness4_g118128 = Data4_g118128.Thickness;
				Out_Diffusion4_g118128 = Data4_g118128.Diffusion;
				float3 temp_output_297_0_g118119 = Out_Albedo4_g118128;
				float3 In_Albedo3_g118129 = temp_output_297_0_g118119;
				float3 temp_output_297_23_g118119 = Out_AlbedoRaw4_g118128;
				float3 In_AlbedoRaw3_g118129 = temp_output_297_23_g118119;
				float2 In_NormalTS3_g118129 = Out_NormalTS4_g118128;
				float3 In_NormalWS3_g118129 = Out_NormalWS4_g118128;
				float4 In_Shader3_g118129 = Out_Shader4_g118128;
				float4 temp_cast_36 = (0.0).xxxx;
				half4 Visual_Emissive255_g118119 = Out_Emissive4_g118128;
				half Emissive_MeshMask221_g118119 = 1.0;
				half Emissive_Mask103_g118119 = 1.0;
				float temp_output_279_0_g118119 = ( Emissive_MeshMask221_g118119 * Emissive_Mask103_g118119 );
				float3 appendResult293_g118119 = (float3(temp_output_279_0_g118119 , temp_output_279_0_g118119 , temp_output_279_0_g118119));
				half3 Local_EmissiveColor278_g118119 = appendResult293_g118119;
				float3 temp_cast_37 = (1.0).xxx;
				TVEGlobalData Data15_g118120 = Data204_g117810;
				float Out_Dummy15_g118120 = 0;
				float4 Out_CoatParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118120 = float4( 0,0,0,0 );
				Out_Dummy15_g118120 = Data15_g118120.Dummy;
				Out_CoatParams15_g118120 = Data15_g118120.CoatParams;
				Out_PaintParams15_g118120 = Data15_g118120.PaintParams;
				Out_GlowParams15_g118120 = Data15_g118120.GlowParams;
				Out_AtmoParams15_g118120= Data15_g118120.AtmoParams;
				Out_FadeParams15_g118120= Data15_g118120.FadeParams;
				Out_FormParams15_g118120 = Data15_g118120.FormParams;
				Out_LandParams15_g118120 = Data15_g118120.LandParams;
				Out_WindParams15_g118120 = Data15_g118120.WindParams;
				Out_PushParams15_g118120 = Data15_g118120.PushParams;
				half4 Global_GlowParams179_g118119 = Out_GlowParams15_g118120;
				float3 lerpResult299_g118119 = lerp( float3( 1,1,1 ) , (Global_GlowParams179_g118119).xyz , TVE_IsEnabled);
				#ifdef TVE_EMISSIVE_ELEMENT
				float3 staticSwitch228_g118119 = lerpResult299_g118119;
				#else
				float3 staticSwitch228_g118119 = temp_cast_37;
				#endif
				half3 Emissive_GlobalMask248_g118119 = staticSwitch228_g118119;
				half3 Visual_AlbedoRaw306_g118119 = temp_output_297_23_g118119;
				float3 lerpResult307_g118119 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g118119 , _EmissiveColorMode);
				half3 Local_EmissiveValue88_g118119 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g118119 * lerpResult307_g118119 );
				half3 Emissive_Blend260_g118119 = ( ( (Visual_Emissive255_g118119).xyz * Local_EmissiveColor278_g118119 ) * Local_EmissiveValue88_g118119 );
				float3 temp_output_3_0_g118133 = Emissive_Blend260_g118119;
				float temp_output_15_0_g118133 = _emissive_power_value;
				float3 hdEmission22_g118133 = ASEGetEmissionHDRColor(temp_output_3_0_g118133,temp_output_15_0_g118133,_EmissiveExposureValue,GetInverseCurrentExposureMultiplier());
				half Local_EmissiveMask294_g118119 = temp_output_279_0_g118119;
				float4 appendResult295_g118119 = (float4(hdEmission22_g118133 , Local_EmissiveMask294_g118119));
				#ifdef TVE_EMISSIVE
				float4 staticSwitch129_g118119 = appendResult295_g118119;
				#else
				float4 staticSwitch129_g118119 = temp_cast_36;
				#endif
				half4 Final_Emissive184_g118119 = staticSwitch129_g118119;
				float4 In_Emissive3_g118129 = Final_Emissive184_g118119;
				float In_Grayscale3_g118129 = Out_Grayscale4_g118128;
				float In_Luminosity3_g118129 = Out_Luminosity4_g118128;
				float temp_output_297_11_g118119 = Out_MultiMask4_g118128;
				float In_MultiMask3_g118129 = temp_output_297_11_g118119;
				float In_AlphaClip3_g118129 = Out_AlphaClip4_g118128;
				float In_AlphaFade3_g118129 = Out_AlphaFade4_g118128;
				float3 In_Translucency3_g118129 = Out_Translucency4_g118128;
				float In_Transmission3_g118129 = Out_Transmission4_g118128;
				float In_Thickness3_g118129 = Out_Thickness4_g118128;
				float In_Diffusion3_g118129 = Out_Diffusion4_g118128;
				Data3_g118129.Dummy = In_Dummy3_g118129;
				Data3_g118129.Albedo = In_Albedo3_g118129;
				Data3_g118129.AlbedoRaw = In_AlbedoRaw3_g118129;
				Data3_g118129.NormalTS = In_NormalTS3_g118129;
				Data3_g118129.NormalWS = In_NormalWS3_g118129;
				Data3_g118129.Shader = In_Shader3_g118129;
				Data3_g118129.Emissive= In_Emissive3_g118129;
				Data3_g118129.MultiMask = In_MultiMask3_g118129;
				Data3_g118129.Grayscale = In_Grayscale3_g118129;
				Data3_g118129.Luminosity = In_Luminosity3_g118129;
				Data3_g118129.AlphaClip = In_AlphaClip3_g118129;
				Data3_g118129.AlphaFade = In_AlphaFade3_g118129;
				Data3_g118129.Translucency = In_Translucency3_g118129;
				Data3_g118129.Transmission = In_Transmission3_g118129;
				Data3_g118129.Thickness = In_Thickness3_g118129;
				Data3_g118129.Diffusion = In_Diffusion3_g118129;
				TVEVisualData Data4_g118145 = Data3_g118129;
				float Out_Dummy4_g118145 = 0;
				float3 Out_Albedo4_g118145 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118145 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118145 = float2( 0,0 );
				float3 Out_NormalWS4_g118145 = float3( 0,0,0 );
				float4 Out_Shader4_g118145 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118145 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118145 = 0;
				float Out_Grayscale4_g118145 = 0;
				float Out_Luminosity4_g118145 = 0;
				float Out_AlphaClip4_g118145 = 0;
				float Out_AlphaFade4_g118145 = 0;
				float3 Out_Translucency4_g118145 = float3( 0,0,0 );
				float Out_Transmission4_g118145 = 0;
				float Out_Thickness4_g118145 = 0;
				float Out_Diffusion4_g118145 = 0;
				Out_Dummy4_g118145 = Data4_g118145.Dummy;
				Out_Albedo4_g118145 = Data4_g118145.Albedo;
				Out_AlbedoRaw4_g118145 = Data4_g118145.AlbedoRaw;
				Out_NormalTS4_g118145 = Data4_g118145.NormalTS;
				Out_NormalWS4_g118145 = Data4_g118145.NormalWS;
				Out_Shader4_g118145 = Data4_g118145.Shader;
				Out_Emissive4_g118145= Data4_g118145.Emissive;
				Out_MultiMask4_g118145 = Data4_g118145.MultiMask;
				Out_Grayscale4_g118145 = Data4_g118145.Grayscale;
				Out_Luminosity4_g118145= Data4_g118145.Luminosity;
				Out_AlphaClip4_g118145 = Data4_g118145.AlphaClip;
				Out_AlphaFade4_g118145 = Data4_g118145.AlphaFade;
				Out_Translucency4_g118145 = Data4_g118145.Translucency;
				Out_Transmission4_g118145 = Data4_g118145.Transmission;
				Out_Thickness4_g118145 = Data4_g118145.Thickness;
				Out_Diffusion4_g118145 = Data4_g118145.Diffusion;
				float3 In_Albedo3_g118135 = Out_Albedo4_g118145;
				float3 In_AlbedoRaw3_g118135 = Out_AlbedoRaw4_g118145;
				float2 In_NormalTS3_g118135 = Out_NormalTS4_g118145;
				float3 In_NormalWS3_g118135 = Out_NormalWS4_g118145;
				float4 In_Shader3_g118135 = Out_Shader4_g118145;
				float4 In_Emissive3_g118135 = Out_Emissive4_g118145;
				float In_Grayscale3_g118135 = Out_Grayscale4_g118145;
				float In_Luminosity3_g118135 = Out_Luminosity4_g118145;
				float temp_output_836_11_g118134 = Out_MultiMask4_g118145;
				float In_MultiMask3_g118135 = temp_output_836_11_g118134;
				half Visual_AlphaClip667_g118134 = Out_AlphaClip4_g118145;
				half Input_True57_g118142 = Visual_AlphaClip667_g118134;
				half True36_g118142 = Input_True57_g118142;
				TVEGlobalData Data15_g118144 = Data204_g117810;
				float Out_Dummy15_g118144 = 0;
				float4 Out_CoatParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118144 = float4( 0,0,0,0 );
				Out_Dummy15_g118144 = Data15_g118144.Dummy;
				Out_CoatParams15_g118144 = Data15_g118144.CoatParams;
				Out_PaintParams15_g118144 = Data15_g118144.PaintParams;
				Out_GlowParams15_g118144 = Data15_g118144.GlowParams;
				Out_AtmoParams15_g118144= Data15_g118144.AtmoParams;
				Out_FadeParams15_g118144= Data15_g118144.FadeParams;
				Out_FormParams15_g118144 = Data15_g118144.FormParams;
				Out_LandParams15_g118144 = Data15_g118144.LandParams;
				Out_WindParams15_g118144 = Data15_g118144.WindParams;
				Out_PushParams15_g118144 = Data15_g118144.PushParams;
				half4 Global_FadeParams516_g118134 = Out_FadeParams15_g118144;
				#ifdef TVE_CUTOUT_ELEMENT
				float staticSwitch663_g118134 = saturate( (Global_FadeParams516_g118134).w );
				#else
				float staticSwitch663_g118134 = 1.0;
				#endif
				half Local_GlobalMask429_g118134 = staticSwitch663_g118134;
				half Local_AlphaMask814_g118134 = 1.0;
				half Local_NoiseMask678_g118134 = 1.0;
				half Local_VertMask766_g118134 = 1.0;
				half Local_MultiMask685_g118134 = 1.0;
				float lerpResult728_g118134 = lerp( Visual_AlphaClip667_g118134 , min( Visual_AlphaClip667_g118134 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g118134 ) - ( Local_AlphaMask814_g118134 * Local_NoiseMask678_g118134 * Local_VertMask766_g118134 ) ) ) ) , Local_MultiMask685_g118134);
				half Local_AlphaClip784_g118134 = lerpResult728_g118134;
				half Input_False58_g118142 = Local_AlphaClip784_g118134;
				half False36_g118142 = Input_False58_g118142;
				half localShadowPassCheck36_g118142 = ShadowPassCheck36_g118142( True36_g118142 , False36_g118142 );
				#ifdef TVE_CUTOUT_SHADOW
				float staticSwitch791_g118134 = Local_AlphaClip784_g118134;
				#else
				float staticSwitch791_g118134 = localShadowPassCheck36_g118142;
				#endif
				float temp_output_6_0_g118143 = staticSwitch791_g118134;
				#ifdef TVE_REGISTER
				float staticSwitch14_g118143 = ( temp_output_6_0_g118143 + ( _CutoutShadowMode * 0.0 ) );
				#else
				float staticSwitch14_g118143 = temp_output_6_0_g118143;
				#endif
				float temp_output_798_0_g118134 = staticSwitch14_g118143;
				#ifdef TVE_CUTOUT
				float staticSwitch577_g118134 = temp_output_798_0_g118134;
				#else
				float staticSwitch577_g118134 = Visual_AlphaClip667_g118134;
				#endif
				half Final_AlphaClip795_g118134 = staticSwitch577_g118134;
				float In_AlphaClip3_g118135 = Final_AlphaClip795_g118134;
				float In_AlphaFade3_g118135 = Out_AlphaFade4_g118145;
				float3 In_Translucency3_g118135 = Out_Translucency4_g118145;
				float In_Transmission3_g118135 = Out_Transmission4_g118145;
				float In_Thickness3_g118135 = Out_Thickness4_g118145;
				float In_Diffusion3_g118135 = Out_Diffusion4_g118145;
				Data3_g118135.Dummy = In_Dummy3_g118135;
				Data3_g118135.Albedo = In_Albedo3_g118135;
				Data3_g118135.AlbedoRaw = In_AlbedoRaw3_g118135;
				Data3_g118135.NormalTS = In_NormalTS3_g118135;
				Data3_g118135.NormalWS = In_NormalWS3_g118135;
				Data3_g118135.Shader = In_Shader3_g118135;
				Data3_g118135.Emissive= In_Emissive3_g118135;
				Data3_g118135.MultiMask = In_MultiMask3_g118135;
				Data3_g118135.Grayscale = In_Grayscale3_g118135;
				Data3_g118135.Luminosity = In_Luminosity3_g118135;
				Data3_g118135.AlphaClip = In_AlphaClip3_g118135;
				Data3_g118135.AlphaFade = In_AlphaFade3_g118135;
				Data3_g118135.Translucency = In_Translucency3_g118135;
				Data3_g118135.Transmission = In_Transmission3_g118135;
				Data3_g118135.Thickness = In_Thickness3_g118135;
				Data3_g118135.Diffusion = In_Diffusion3_g118135;
				TVEVisualData Data4_g118158 = Data3_g118135;
				float Out_Dummy4_g118158 = 0;
				float3 Out_Albedo4_g118158 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118158 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118158 = float2( 0,0 );
				float3 Out_NormalWS4_g118158 = float3( 0,0,0 );
				float4 Out_Shader4_g118158 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118158 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118158 = 0;
				float Out_Grayscale4_g118158 = 0;
				float Out_Luminosity4_g118158 = 0;
				float Out_AlphaClip4_g118158 = 0;
				float Out_AlphaFade4_g118158 = 0;
				float3 Out_Translucency4_g118158 = float3( 0,0,0 );
				float Out_Transmission4_g118158 = 0;
				float Out_Thickness4_g118158 = 0;
				float Out_Diffusion4_g118158 = 0;
				Out_Dummy4_g118158 = Data4_g118158.Dummy;
				Out_Albedo4_g118158 = Data4_g118158.Albedo;
				Out_AlbedoRaw4_g118158 = Data4_g118158.AlbedoRaw;
				Out_NormalTS4_g118158 = Data4_g118158.NormalTS;
				Out_NormalWS4_g118158 = Data4_g118158.NormalWS;
				Out_Shader4_g118158 = Data4_g118158.Shader;
				Out_Emissive4_g118158= Data4_g118158.Emissive;
				Out_MultiMask4_g118158 = Data4_g118158.MultiMask;
				Out_Grayscale4_g118158 = Data4_g118158.Grayscale;
				Out_Luminosity4_g118158= Data4_g118158.Luminosity;
				Out_AlphaClip4_g118158 = Data4_g118158.AlphaClip;
				Out_AlphaFade4_g118158 = Data4_g118158.AlphaFade;
				Out_Translucency4_g118158 = Data4_g118158.Translucency;
				Out_Transmission4_g118158 = Data4_g118158.Transmission;
				Out_Thickness4_g118158 = Data4_g118158.Thickness;
				Out_Diffusion4_g118158 = Data4_g118158.Diffusion;
				half3 Input_Albedo24_g118157 = Out_Albedo4_g118158;
				#ifdef UNITY_COLORSPACE_GAMMA
				float4 staticSwitch22_g118157 = half4(0.2209163,0.2209163,0.2209163,0.7790837);
				#else
				float4 staticSwitch22_g118157 = half4(0.04,0.04,0.04,0.96);
				#endif
				half4 ColorSpaceDielectricSpec23_g118157 = staticSwitch22_g118157;
				float4 break24_g118154 = Out_Shader4_g118158;
				half Metallic95_g118154 = break24_g118154.x;
				half Input_Metallic25_g118157 = Metallic95_g118154;
				half OneMinusReflectivity31_g118157 = ( (ColorSpaceDielectricSpec23_g118157).w - ( (ColorSpaceDielectricSpec23_g118157).w * Input_Metallic25_g118157 ) );
				
				float3 appendResult23_g118154 = (float3(Out_NormalTS4_g118158 , 1.0));
				
				float3 lerpResult28_g118157 = lerp( (ColorSpaceDielectricSpec23_g118157).xyz , Input_Albedo24_g118157 , Input_Metallic25_g118157);
				half Render_Specualr110_g118154 = _RenderSpecular;
				
				float localCustomAlphaClip19_g118160 = ( 0.0 );
				float temp_output_3_0_g118160 = Out_AlphaClip4_g118158;
				float Alpha19_g118160 = temp_output_3_0_g118160;
				float temp_output_15_0_g118160 = 0.5;
				float Treshold19_g118160 = temp_output_15_0_g118160;
				#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_DITHER)
				#if defined ( TVE_PIPELINE_HD)
				#if !defined(SHADERPASS_FORWARD_BYPASS_ALPHA_TEST) && !defined(SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST)
				clip(Alpha19_g118160 - Treshold19_g118160);
				#endif
				#else
				clip(Alpha19_g118160 - Treshold19_g118160);
				#endif
				#endif
				
				surfaceDescription.BaseColor = ( Input_Albedo24_g118157 * OneMinusReflectivity31_g118157 );
				surfaceDescription.Normal = appendResult23_g118154;
				surfaceDescription.BentNormal = float3( 0, 0, 1 );
				surfaceDescription.CoatMask = 0;
				surfaceDescription.Metallic = 0;

				#ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
				surfaceDescription.Specular = ( lerpResult28_g118157 * Render_Specualr110_g118154 );
				#endif

				surfaceDescription.Emission = (Out_Emissive4_g118158).xyz;
				surfaceDescription.Smoothness = break24_g118154.w;
				surfaceDescription.Occlusion = break24_g118154.y;
				surfaceDescription.Alpha = Alpha19_g118160;

				#ifdef _ALPHATEST_ON
				surfaceDescription.AlphaClipThreshold = _AlphaCutoff;
				#endif

				#ifdef _ALPHATEST_SHADOW_ON
				surfaceDescription.AlphaClipThresholdShadow = 0.5;
				#endif

				surfaceDescription.AlphaClipThresholdDepthPrepass = 0.5;
				surfaceDescription.AlphaClipThresholdDepthPostpass = 0.5;

				#ifdef _ENABLE_GEOMETRIC_SPECULAR_AA
				surfaceDescription.SpecularAAScreenSpaceVariance = 0;
				surfaceDescription.SpecularAAThreshold = 0;
				#endif

				#ifdef _SPECULAR_OCCLUSION_CUSTOM
				surfaceDescription.SpecularOcclusion = 0;
				#endif

				#if defined(_HAS_REFRACTION) || defined(_MATERIAL_FEATURE_TRANSMISSION)
				surfaceDescription.Thickness = 0;
				#endif

				#ifdef _HAS_REFRACTION
				surfaceDescription.RefractionIndex = 1;
				surfaceDescription.RefractionColor = float3( 1, 1, 1 );
				surfaceDescription.RefractionDistance = 0;
				#endif

				#ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
				surfaceDescription.SubsurfaceMask = 1;
				#endif

				#ifdef _MATERIAL_FEATURE_TRANSMISSION
				surfaceDescription.TransmissionMask = 1;
				#endif

				#if defined( _MATERIAL_FEATURE_SUBSURFACE_SCATTERING ) || defined( _MATERIAL_FEATURE_TRANSMISSION )
				surfaceDescription.DiffusionProfile = 0;
				#endif

				#ifdef _MATERIAL_FEATURE_ANISOTROPY
				surfaceDescription.Anisotropy = 1;
				surfaceDescription.Tangent = float3( 1, 0, 0 );
				#endif

				#ifdef _MATERIAL_FEATURE_IRIDESCENCE
				surfaceDescription.IridescenceMask = 0;
				surfaceDescription.IridescenceThickness = 0;
				#endif

				#ifdef ASE_BAKEDGI
				surfaceDescription.BakedGI = 0;
				#endif
				#ifdef ASE_BAKEDBACKGI
				surfaceDescription.BakedBackGI = 0;
				#endif

				#ifdef _DEPTHOFFSET_ON
				surfaceDescription.DepthOffset = 0;
				#endif

				#ifdef UNITY_VIRTUAL_TEXTURING
				surfaceDescription.VTPackedFeedback = float4(1.0f,1.0f,1.0f,1.0f);
				#endif

				GetSurfaceAndBuiltinData( surfaceDescription, input, V, posInput, surfaceData, builtinData );
				ENCODE_INTO_GBUFFER( surfaceData, builtinData, posInput.positionSS, outGBuffer );
				#ifdef _DEPTHOFFSET_ON
				outputDepth = posInput.deviceDepth;
				#endif
			}

			ENDHLSL
		}

		UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
	UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"

		Pass
		{
			
			Name "META"
			Tags { "LightMode"="Meta" }

			Cull Off

			HLSLPROGRAM
			#define _ENERGY_CONSERVING_SPECULAR 1
			#define SUPPORT_BLENDMODE_PRESERVE_SPECULAR_LIGHTING
			#pragma shader_feature_local_fragment _ _DISABLE_DECALS
			#define _SPECULAR_OCCLUSION_FROM_AO 1
			#define ASE_ABSOLUTE_VERTEX_POS 1
			#define _MATERIAL_FEATURE_SPECULAR_COLOR 1
			#define _AMBIENT_OCCLUSION 1
			#define HAVE_MESH_MODIFICATION
			#define ASE_SRP_VERSION 170003
			#define ASE_USING_SAMPLING_MACROS 1

			#pragma shader_feature _ EDITOR_VISUALIZATION
			#pragma multi_compile _ DOTS_INSTANCING_ON

            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
            #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC _TRANSPARENT_REFRACTIVE_SORT
            #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT

			#pragma vertex Vert
			#pragma fragment Frag

            #define SHADERPASS SHADERPASS_LIGHT_TRANSPORT
            #define SCENEPICKINGPASS 1

			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/DebugMipmapStreamingMacros.hlsl"
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl"

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/PickingSpaceTransforms.hlsl"

            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
                #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
                #define RAYTRACING_SHADER_GRAPH_LOW
            #endif

            #ifndef SHADER_UNLIT
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif

			#if defined(_DOUBLESIDED_ON) && !defined(ASE_NEED_CULLFACE)
			    #define ASE_NEED_CULLFACE 1
			#endif

            #if _MATERIAL_FEATURE_COLORED_TRANSMISSION
            #undef _MATERIAL_FEATURE_CLEAR_COAT
            #endif

		    #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
			#define OUTPUT_SPLIT_LIGHTING
		    #endif

            #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
            #endif

            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif

            #if SHADERPASS == SHADERPASS_MOTION_VECTORS && defined(WRITE_DECAL_BUFFER_AND_RENDERING_LAYER)
                #define WRITE_DECAL_BUFFER
            #endif

            #ifndef DEBUG_DISPLAY
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif

            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            #if (defined(_TRANSPARENT_WRITES_MOTION_VEC) || defined(_TRANSPARENT_REFRACTIVE_SORT)) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif

			CBUFFER_START( UnityPerMaterial )
			half4 _TerrainShaderMax13;
			half4 _TerrainCoord8;
			half4 _TerrainShaderMin8;
			half4 _TerrainShaderMax8;
			half4 _TerrainCoord9;
			half4 _TerrainShaderMin9;
			half4 _TerrainShaderMax9;
			half4 _TerrainCoord10;
			half4 _TerrainShaderMax7;
			half4 _TerrainShaderMin10;
			half4 _TerrainCoord11;
			half4 _TerrainShaderMin11;
			half4 _TerrainShaderMax11;
			half4 _TerrainCoord12;
			half4 _TerrainShaderMin12;
			half4 _TerrainShaderMax12;
			half4 _TerrainCoord13;
			half4 _TerrainShaderMax10;
			half4 _TerrainShaderMin13;
			half4 _TerrainShaderMin7;
			half4 _TerrainShaderMax6;
			half4 _TerrainShaderMin1;
			half4 _TerrainShaderMax1;
			half4 _TerrainCoord2;
			half4 _TerrainShaderMin2;
			half4 _TerrainShaderMax2;
			half4 _TerrainCoord3;
			half4 _TerrainShaderMin3;
			half4 _TerrainCoord7;
			half4 _TerrainShaderMax3;
			half4 _TerrainShaderMin4;
			half4 _TerrainShaderMax4;
			half4 _TerrainCoord5;
			half4 _TerrainShaderMin5;
			half4 _TerrainShaderMax5;
			half4 _TerrainCoord6;
			half4 _TerrainShaderMin6;
			half4 _TerrainCoord4;
			half4 _TerrainCoord1;
			half4 _TerrainParams15;
			half4 _TerrainShaderMin14;
			half4 _TerrainColor13;
			half4 _TerrainColor14;
			half4 _TerrainColor15;
			half4 _TerrainColor16;
			half4 _TerrainColor;
			half4 _TerrainParams1;
			half4 _TerrainParams2;
			half4 _TerrainColor12;
			half4 _TerrainParams3;
			half4 _TerrainParams5;
			half4 _TerrainParams6;
			half4 _TerrainParams7;
			half4 _TerrainParams8;
			half4 _TerrainParams9;
			half4 _TerrainParams10;
			half4 _TerrainParams11;
			half4 _TerrainParams4;
			half4 _TerrainCoord14;
			half4 _TerrainColor11;
			half4 _TerrainColor9;
			half4 _TerrainShaderMax14;
			half4 _TerrainCoord15;
			half4 _TerrainShaderMin15;
			half4 _TerrainShaderMax15;
			half4 _TerrainCoord16;
			half4 _TerrainShaderMin16;
			half4 _TerrainShaderMax16;
			half4 _TerrainColor10;
			half4 _TerrainParams14;
			half4 _TerrainColor2;
			half4 _TerrainColor3;
			half4 _TerrainColor4;
			half4 _TerrainColor5;
			half4 _TerrainColor6;
			half4 _TerrainColor7;
			half4 _TerrainColor8;
			half4 _TerrainColor1;
			half4 _TerrainParams12;
			float4 _TerrainControlTex1_TexelSize;
			half4 _TerrainPosition;
			float4 _TintingColor;
			half4 _TintingLumaRemap;
			half4 _TintingBlendRemap;
			float4 _DrynessColor;
			half4 _DrynessLumaRemap;
			half4 _DrynessBlendRemap;
			half4 _TerrainSize;
			half4 _OverlayColor;
			half4 _overlay_coord_value;
			half4 _OverlayCoordValue;
			half4 _OverlayGlitterColor;
			half4 _OverlayProjRemap;
			half4 _OverlayLumaRemap;
			half4 _OverlayBlendRemap1;
			half4 _WetnessWaterColor;
			half4 _WetnessWaterBlendRemap;
			half4 _EmissiveColor;
			half4 _TerrainSpecular16;
			half4 _TerrainSpecular15;
			half4 _object_phase_mode;
			half4 _TerrainSpecular13;
			half4 _TerrainParams16;
			half4 _TerrainSpecular1;
			half4 _TerrainSpecular14;
			half4 _TerrainSpecular2;
			half4 _TerrainSpecular3;
			half4 _TerrainSpecular4;
			half4 _TerrainSpecular5;
			half4 _TerrainSpecular6;
			half4 _TerrainSpecular7;
			half4 _TerrainSpecular8;
			half4 _TerrainParams13;
			half4 _TerrainSpecular10;
			half4 _TerrainSpecular12;
			half4 _TerrainSpecular11;
			half4 _TerrainSpecular9;
			half _DrynessIntensityValue;
			half _OverlaySubsurfaceValue;
			half _TerrainMetallicValue;
			half _WetnessWaterIntensityValue;
			half _WetnessIntensityValue;
			half _WetnessWaterBaseValue;
			half _TerrainNormalValue;
			half _WetnessContrastValue;
			half _WetnessDropsTillingValue;
			half _WetnessDropsNormalValue;
			half _WetnessDropsDistValue;
			half _WetnessSmoothnessValue;
			half _EmissiveIntensityValue;
			half _TintingElementMode;
			half _EmissiveColorMode;
			float _emissive_power_value;
			half _EmissiveExposureValue;
			half _CutoutIntensityValue;
			half _WetnessDropsIntensityValue;
			half _OverlaySmoothnessValue;
			half _OverlayLumaValue;
			half _TerrainOcclusionValue;
			half _DrynessMultiValue;
			half _DrynessShiftValue;
			half _DrynessLumaValue;
			half _DrynessGrayValue;
			half _DrynessSmoothnessValue;
			half _DrynessSubsurfaceValue;
			half _TintingLumaValue;
			half _OverlaySampleMode;
			half _OverlayNormalValue;
			half _OverlayCoordMode;
			half _OverlayTextureMode;
			half _OverlayGlitterIntensityValue;
			half _TintingIntensityValue;
			half _OverlayGlitterDistValue;
			half _OverlayIntensityValue;
			half _TintingGrayValue;
			half _OverlayProjValue;
			half _TerrainSmoothnessValue;
			half _TintingMultiValue;
			half _OverlayGlitterTillingValue;
			half _TerrainLayersMode;
			half _CutoutShadowMode;
			half _RenderEnd;
			half _IsTVEShader;
			half _IsCustomShader;
			half _IsShared;
			half _HasDefaultTextures;
			half _IsCollected;
			half _IsConverted;
			half _IsIdentifier;
			half _RenderDecals;
			half _RenderSSR;
			half _RenderClip;
			half _IsVersion;
			half _RenderShadow;
			half _RenderFilter;
			half _LandscapeCategory;
			half _RenderCategory;
			half _IsStandardShader;
			half _IsTerrainShader;
			half _TerrainTextureMode;
			half _TerrainSampleMode1;
			half _TerrainSampleMode2;
			half _TerrainSampleMode3;
			half _TerrainSampleMode4;
			half _TerrainSampleMode5;
			half _TerrainSampleMode6;
			half _TerrainSampleMode7;
			half _LandscapeEnd;
			half _TerrainSampleMode8;
			half _TerrainSampleMode10;
			half _TerrainSampleMode11;
			half _TerrainSampleMode12;
			half _TerrainSampleMode13;
			half _TerrainSampleMode14;
			half _TerrainSampleMode15;
			half _TerrainSampleMode16;
			half _TerrainSampleMode9;
			half _LandscapeInfo;
			half _GlobalCategory;
			half _GlobalEnd;
			half _OverlayCategory;
			half _OverlayEnd;
			half _OverlaySpace;
			half _OverlayElementMode;
			half _OverlayBakeInfo;
			half _DrynessCategory;
			half _DrynessEnd;
			half _WetnessBakeInfo;
			half _DrynessSpace;
			half _DrynessBakeInfo;
			half _TintingCategory;
			half _TintingEnd;
			half _TintingSpace;
			half _TintingBakeInfo;
			half _CategoryTerrain;
			half _EndTerrain;
			half _DrynessElementMode;
			half _TerrainHeightBlendValue;
			half _WetnessElementMode;
			half _WetnessCategory;
			half _GlobalPaintLayerValue;
			half _GlobalGlowLayerValue;
			half _GlobalAtmoLayerValue;
			half _GlobalFadeLayerValue;
			half _GlobalLandLayerValue;
			half _LandscapeHeightValue;
			half _CutoutCategory;
			half _WetnessEnd;
			half _CutoutEnd;
			half _CutoutBakeInfo;
			half _EmissiveCategory;
			half _EmissiveEnd;
			half _EmissivePowerMode;
			half _EmissivePowerValue;
			half _EmissiveElementMode;
			half _EmissiveFlagMode;
			half _CutoutElementMode;
			half _RenderSpecular;
			float4 _EmissionColor;
			float _AlphaCutoff;
			float _RenderQueueType;
			#ifdef _ADD_PRECOMPUTED_VELOCITY
			    float _AddPrecomputedVelocity;
			#endif
			float _StencilRef;
			float _StencilWriteMask;
			float _StencilRefDepth;
			float _StencilWriteMaskDepth;
			float _StencilRefMV;
			float _StencilWriteMaskMV;
			float _StencilRefDistortionVec;
			float _StencilWriteMaskDistortionVec;
			float _StencilWriteMaskGBuffer;
			float _StencilRefGBuffer;
			float _ZTestGBuffer;
			float _RequireSplitLighting;
			float _ReceivesSSR;
			float _SurfaceType;
			float _BlendMode;
            #ifdef SUPPORT_BLENDMODE_PRESERVE_SPECULAR_LIGHTING
			    float _EnableBlendModePreserveSpecularLighting;
            #endif
			float _SrcBlend;
			float _DstBlend;
			float _DstBlend2;
			float _AlphaSrcBlend;
			float _AlphaDstBlend;
			float _ZWrite;
			float _TransparentZWrite;
			float _CullMode;
			float _TransparentSortPriority;
			float _EnableFogOnTransparent;
			float _CullModeForward;
			float _TransparentCullMode;
			float _ZTestDepthEqualForOpaque;
			float _ZTestTransparent;
			float _TransparentBackfaceEnable;
			float _AlphaCutoffEnable;
			float _UseShadowThreshold;
			float _DoubleSidedEnable;
			float _DoubleSidedNormalMode;
			float4 _DoubleSidedConstants;
			#ifdef ASE_TESSELLATION
			    float _TessPhongStrength;
			    float _TessValue;
			    float _TessMin;
			    float _TessMax;
			    float _TessEdgeLength;
			    float _TessMaxDisp;
			#endif
			UNITY_TEXTURE_STREAMING_DEBUG_VARS;
			CBUFFER_END

            #ifdef SCENEPICKINGPASS
			float4 _SelectionID;
            #endif

            #ifdef SCENESELECTIONPASS
			int _ObjectId;
			int _PassValue;
            #endif

			float3 TVE_WorldOrigin;
			float4x4 unity_CameraProjection;
			float4x4 unity_CameraInvProjection;
			float4x4 unity_WorldToCamera;
			float4x4 unity_CameraToWorld;
			half4 TVE_CoatParams;
			float TVE_PaintLayers[10];
			TEXTURE2D_ARRAY(TVE_PaintBaseTex);
			half4 TVE_RenderBaseCoords;
			SAMPLER(sampler_Linear_Clamp);
			TEXTURE2D_ARRAY(TVE_PaintNearTex);
			half4 TVE_RenderNearCoords;
			SAMPLER(sampler_Linear_Repeat);
			float4 TVE_RenderNearPositionR;
			half TVE_RenderNearFadeValue;
			half4 TVE_PaintParams;
			float TVE_GlowLayers[10];
			TEXTURE2D_ARRAY(TVE_GlowBaseTex);
			TEXTURE2D_ARRAY(TVE_GlowNearTex);
			half4 TVE_GlowParams;
			float TVE_AtmoLayers[10];
			TEXTURE2D_ARRAY(TVE_AtmoBaseTex);
			TEXTURE2D_ARRAY(TVE_AtmoNearTex);
			half4 TVE_AtmoParams;
			float TVE_FadeLayers[10];
			TEXTURE2D_ARRAY(TVE_FadeBaseTex);
			TEXTURE2D_ARRAY(TVE_FadeNearTex);
			half4 TVE_FadeParams;
			half4 TVE_FormParams;
			float TVE_LandLayers[10];
			TEXTURE2D_ARRAY(TVE_LandBaseTex);
			TEXTURE2D_ARRAY(TVE_LandNearTex);
			half4 TVE_LandParams;
			half4 TVE_WindParams;
			half4 TVE_PushParams;
			half TVE_IsEnabled;
			TEXTURE2D(_TerrainControlTex1);
			TEXTURE2D(_TerrainControlTex2);
			TEXTURE2D(_TerrainControlTex3);
			TEXTURE2D(_TerrainControlTex4);
			TEXTURE2D(_TerrainShaderTex1);
			SAMPLER(sampler_Point_Repeat);
			SAMPLER(sampler_Linear_Repeat_Aniso8);
			TEXTURE2D(_TerrainShaderTex2);
			TEXTURE2D(_TerrainShaderTex3);
			TEXTURE2D(_TerrainShaderTex4);
			TEXTURE2D(_TerrainShaderTex5);
			TEXTURE2D(_TerrainShaderTex6);
			TEXTURE2D(_TerrainShaderTex7);
			TEXTURE2D(_TerrainShaderTex8);
			TEXTURE2D(_TerrainShaderTex9);
			TEXTURE2D(_TerrainShaderTex10);
			TEXTURE2D(_TerrainShaderTex11);
			TEXTURE2D(_TerrainShaderTex12);
			TEXTURE2D(_TerrainShaderTex13);
			TEXTURE2D(_TerrainShaderTex14);
			TEXTURE2D(_TerrainShaderTex15);
			TEXTURE2D(_TerrainShaderTex16);
			TEXTURE2D(_TerrainAlbedoTex1);
			TEXTURE2D(_TerrainAlbedoTex2);
			TEXTURE2D(_TerrainAlbedoTex3);
			TEXTURE2D(_TerrainAlbedoTex4);
			TEXTURE2D(_TerrainAlbedoTex5);
			TEXTURE2D(_TerrainAlbedoTex6);
			TEXTURE2D(_TerrainAlbedoTex7);
			TEXTURE2D(_TerrainAlbedoTex8);
			TEXTURE2D(_TerrainAlbedoTex9);
			TEXTURE2D(_TerrainAlbedoTex10);
			TEXTURE2D(_TerrainAlbedoTex11);
			TEXTURE2D(_TerrainAlbedoTex12);
			TEXTURE2D(_TerrainAlbedoTex13);
			TEXTURE2D(_TerrainAlbedoTex14);
			TEXTURE2D(_TerrainAlbedoTex15);
			TEXTURE2D(_TerrainAlbedoTex16);
			TEXTURE2D(_TerrainNormalTex1);
			TEXTURE2D(_TerrainNormalTex2);
			TEXTURE2D(_TerrainNormalTex3);
			TEXTURE2D(_TerrainNormalTex4);
			TEXTURE2D(_TerrainNormalTex5);
			TEXTURE2D(_TerrainNormalTex6);
			TEXTURE2D(_TerrainNormalTex7);
			TEXTURE2D(_TerrainNormalTex8);
			TEXTURE2D(_TerrainNormalTex9);
			TEXTURE2D(_TerrainNormalTex10);
			TEXTURE2D(_TerrainNormalTex11);
			TEXTURE2D(_TerrainNormalTex12);
			TEXTURE2D(_TerrainNormalTex13);
			TEXTURE2D(_TerrainNormalTex14);
			TEXTURE2D(_TerrainNormalTex15);
			TEXTURE2D(_TerrainNormalTex16);
			TEXTURE2D(_TerrainHolesTex);
			TEXTURE2D(_OverlayAlbedoTex);
			TEXTURE2D(_OverlayGlitterTexRT);
			TEXTURE2D(_OverlayNormalTex);
			TEXTURE2D(_WetnessDropsTexRT);
			#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
				TEXTURE2D(_TerrainHeightmapTexture);//ASE Terrain Instancing
				TEXTURE2D( _TerrainNormalmapTexture);//ASE Terrain Instancing
				SAMPLER(sampler_TerrainNormalmapTexture);//ASE Terrain Instancing
			#endif//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_START( Terrain )//ASE Terrain Instancing
				UNITY_DEFINE_INSTANCED_PROP( float4, _TerrainPatchInstanceData )//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_END( Terrain)//ASE Terrain Instancing
			CBUFFER_START( UnityTerrain)//ASE Terrain Instancing
				#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
					float4 _TerrainHeightmapRecipSize;//ASE Terrain Instancing
					float4 _TerrainHeightmapScale;//ASE Terrain Instancing
				#endif//ASE Terrain Instancing
			CBUFFER_END//ASE Terrain Instancing


            #ifdef DEBUG_DISPLAY
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
            #endif

			#if SHADERPASS == SHADERPASS_LIGHT_TRANSPORT
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/PickingSpaceTransforms.hlsl"
			#endif

			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/MetaPass.hlsl"

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"

            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitDecalData.hlsl"

        	#ifdef HAVE_VFX_MODIFICATION
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif

			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/CommonLighting.hlsl"
			#define ASE_NEEDS_VERT_POSITION
			#define ASE_NEEDS_VERT_NORMAL
			#define ASE_NEEDS_VERT_TANGENT
			#pragma shader_feature_local_fragment TVE_PIPELINE_STANDARD TVE_PIPELINE_UNIVERSAL TVE_PIPELINE_HD
			#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
			#pragma shader_feature_local_vertex TVE_LANDSCAPE
			#pragma shader_feature_local_fragment TVE_WETNESS
			#pragma shader_feature_local_fragment TVE_OVERLAY
			#pragma shader_feature_local_fragment TVE_DRYNESS
			#pragma shader_feature_local_fragment TVE_TINTING
			#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
			#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
			#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
			#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
			#pragma shader_feature_local_fragment TVE_DRYNESS_SHIFT
			#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
			#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
			#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_WATER
			#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
			#pragma shader_feature_local_fragment TVE_EMISSIVE
			#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
			#pragma shader_feature_local_fragment TVE_CUTOUT
			#pragma shader_feature_local_fragment TVE_CUTOUT_SHADOW
			#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
			#pragma multi_compile_instancing
			#pragma instancing_options assumeuniformscaling nomatrices nolightprobe nolightmap
			  
			struct TVEVisualData
			{  
				half Dummy;  
				half3 Albedo;
				half3 AlbedoRaw;
				half2 NormalTS;
				half3 NormalWS; 
				half4 Shader;
				half4 Emissive;
				half AlphaClip;
				half AlphaFade;
				half MultiMask;
				half Grayscale;
				half Luminosity;
				half3 Translucency;
				half Transmission;
				half Thickness;
				float Diffusion;
			};  
			    
			struct TVEModelData
			{    
				half Dummy;    
				half3 PositionOS;
				half3 PositionWS;
				half3 PositionWO;
				half3 PositionRawOS;
				half3 PositionAddOS;
				half3 PivotOS;
				half3 PivotWS;
				half3 PivotWO;
				half3 NormalOS;
				half3 NormalWS;
				half3 NormalRawOS;
				half3 NormalRawWS;
				half4 TangentOS;
				half3 ViewDirWS;
				half4 VertexData;
				half4 MotionData;
				half4 BoundsData;
				half4 RotationData;
			};    
			      
			struct TVEGlobalData
			{      
				half Dummy;      
				half4 CoatParams;
				half4 PaintParams;
				half4 GlowParams;
				half4 AtmoParams;
				half4 FadeParams;
				half4 FormParams;
				half4 LandParams;
				half4 WindParams;
				half4 PushParams;
			};      
			        
			//#pragma editor_sync_compilation


			struct AttributesMesh
			{
				float3 positionOS : POSITION;
				float3 normalOS : NORMAL;
				float4 tangentOS : TANGENT;
				float4 uv0 : TEXCOORD0;
				float4 uv1 : TEXCOORD1;
				float4 uv2 : TEXCOORD2;
				float4 uv3 : TEXCOORD3;
				float4 ase_color : COLOR;
				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct PackedVaryingsMeshToPS
			{
				SV_POSITION_QUALIFIERS float4 positionCS : SV_Position;
				#ifdef EDITOR_VISUALIZATION
				float2 VizUV : TEXCOORD0;
				float4 LightCoord : TEXCOORD1;
				#endif
				float4 ase_texcoord2 : TEXCOORD2;
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_texcoord4 : TEXCOORD4;
				float4 ase_texcoord5 : TEXCOORD5;
				float4 ase_texcoord6 : TEXCOORD6;
				float4 ase_color : COLOR;
				float4 ase_texcoord7 : TEXCOORD7;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				#if defined(SHADER_STAGE_FRAGMENT) && defined(ASE_NEED_CULLFACE)
				FRONT_FACE_TYPE cullFace : FRONT_FACE_SEMANTIC;
				#endif
			};

			float3 ObjectPosition_UNITY_MATRIX_M(  )
			{
				return float3(UNITY_MATRIX_M[0].w, UNITY_MATRIX_M[1].w, UNITY_MATRIX_M[2].w );
			}
			
			void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
			{
				ZX = WorldPosition.xz * Coords.xx - Coords.zz;
				ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
				XY = WorldPosition.xy * Coords.xy - Coords.zw;
			}
			
			half4 SamplePlanar2D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
			{
				half3 powNormal = abs( WorldNormal.xyz );
				half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
				weights /= ( weights.x + weights.y + weights.z ).xxx;
				T1 = weights.y;
				T2 = weights.x;
				T3 = weights.z;
			}
			
			half4 SamplePlanar3D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
				half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
				half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
				return tex1 * T1 + tex2 * T2 + tex3 * T3;
			}
			
			void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
			{
				half2 vertex1, vertex2, vertex3;
				// Scaling of the input
				half2 uv = UV * 3.464; // 2 * sqrt (3)
				// Skew input space into simplex triangle grid
				const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
				half2 skewedCoord = mul( gridToSkewedGrid, uv );
				// Compute local triangle vertex IDs and local barycentric coordinates
				int2 baseId = int2( floor( skewedCoord ) );
				half3 temp = half3( frac( skewedCoord ), 0 );
				temp.z = 1.0 - temp.x - temp.y;
				if ( temp.z > 0.0 )
				{
					W1 = temp.z;
					W2 = temp.y;
					W3 = temp.x;
					vertex1 = baseId;
					vertex2 = baseId + int2( 0, 1 );
					vertex3 = baseId + int2( 1, 0 );
				}
				else
				{
					W1 = -temp.z;
					W2 = 1.0 - temp.y;
					W3 = 1.0 - temp.x;
					vertex1 = baseId + int2( 1, 1 );
					vertex2 = baseId + int2( 1, 0 );
					vertex3 = baseId + int2( 0, 1 );
				}
				UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
				UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
				UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
				return;
			}
			
			float4 SampleStochastic2D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
				half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
				half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
				half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
				return tex1 * W1 + tex2 * W2 + tex3 * W3;
			}
			
			half4 SampleStochastic3D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				half4 tex1, tex2, tex3;
				ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
				half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
				half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
				half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				return texZX * T1 + texZY * T2 + texXY * T3;
			}
			
			half3 HSVToRGB( half3 c )
			{
				half4 K = half4( 1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0 );
				half3 p = abs( frac( c.xxx + K.xyz ) * 6.0 - K.www );
				return c.z * lerp( K.xxx, saturate( p - K.xxx ), c.y );
			}
			
			half3 RGBToHSV(half3 c)
			{
				half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
				half4 p = lerp( half4( c.bg, K.wz ), half4( c.gb, K.xy ), step( c.b, c.g ) );
				half4 q = lerp( half4( p.xyw, c.r ), half4( c.r, p.yzx ), step( p.x, c.r ) );
				half d = q.x - min( q.w, q.y );
				half e = 1.0e-10;
				return half3( abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
			}
			float3 ASEGetEmissionHDRColor(float3 ldrColor, float luminanceIntensity, float exposureWeight, float inverseCurrentExposureMultiplier)
			{
				float3 hdrColor = ldrColor * luminanceIntensity;
				hdrColor = lerp( hdrColor* inverseCurrentExposureMultiplier, hdrColor, exposureWeight);
				return hdrColor;
			}
			
			half ShadowPassCheck36_g118142( half True, half False )
			{
				half result;
				#if defined(SHADERPASS) && (SHADERPASS  == SHADERPASS_SHADOWS)
					result = True;
				#else
					result = False;
				#endif
				return result;
			}
			
			AttributesMesh ApplyMeshModification( AttributesMesh inputMesh )
			{
			#ifdef UNITY_INSTANCING_ENABLED
				float2 patchVertex = inputMesh.positionOS.xy;
				float4 instanceData = UNITY_ACCESS_INSTANCED_PROP( Terrain, _TerrainPatchInstanceData );
				float2 sampleCoords = ( patchVertex.xy + instanceData.xy ) * instanceData.z;
				float height = UnpackHeightmap( _TerrainHeightmapTexture.Load( int3( sampleCoords, 0 ) ) );
				inputMesh.positionOS.xz = sampleCoords* _TerrainHeightmapScale.xz;
				inputMesh.positionOS.y = height* _TerrainHeightmapScale.y;
				#ifdef ENABLE_TERRAIN_PERPIXEL_NORMAL
					inputMesh.normalOS = float3(0, 1, 0);
				#else
					inputMesh.normalOS = _TerrainNormalmapTexture.Load(int3(sampleCoords, 0)).rgb* 2 - 1;
				#endif
				inputMesh.uv0.xy = sampleCoords* _TerrainHeightmapRecipSize.zw;
			#endif
				return inputMesh;
			}
			

			void BuildSurfaceData(FragInputs fragInputs, inout GlobalSurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
			{
				ZERO_INITIALIZE(SurfaceData, surfaceData);

				surfaceData.specularOcclusion = 1.0;
				surfaceData.thickness = 0.0;

				surfaceData.baseColor =					surfaceDescription.BaseColor;
				surfaceData.perceptualSmoothness =		surfaceDescription.Smoothness;
				surfaceData.ambientOcclusion =			surfaceDescription.Occlusion;
				surfaceData.metallic =					surfaceDescription.Metallic;
				surfaceData.coatMask =					surfaceDescription.CoatMask;

				#ifdef _SPECULAR_OCCLUSION_CUSTOM
				surfaceData.specularOcclusion =			surfaceDescription.SpecularOcclusion;
				#endif

				#ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
				surfaceData.subsurfaceMask =			surfaceDescription.SubsurfaceMask;
				#endif

				#if defined(_HAS_REFRACTION) || defined(_MATERIAL_FEATURE_TRANSMISSION)
				surfaceData.thickness = 				surfaceDescription.Thickness;
				#endif

				#ifdef _MATERIAL_FEATURE_TRANSMISSION
				surfaceData.transmissionMask =			surfaceDescription.TransmissionMask;
				#endif

				#ifdef _MATERIAL_FEATURE_COLORED_TRANSMISSION
				surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
				surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_COLORED_TRANSMISSION;
				#endif

				#if defined( _MATERIAL_FEATURE_SUBSURFACE_SCATTERING ) || defined( _MATERIAL_FEATURE_TRANSMISSION )
				surfaceData.diffusionProfileHash =		asuint(surfaceDescription.DiffusionProfile);
				#endif

				#ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
				surfaceData.specularColor =				surfaceDescription.Specular;
				#endif

				#ifdef _MATERIAL_FEATURE_ANISOTROPY
				surfaceData.anisotropy =				surfaceDescription.Anisotropy;
				#endif

				#ifdef _MATERIAL_FEATURE_IRIDESCENCE
				surfaceData.iridescenceMask =			surfaceDescription.IridescenceMask;
				surfaceData.iridescenceThickness =		surfaceDescription.IridescenceThickness;
				#endif

				// refraction
                #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                    if (_EnableSSRefraction)
                    {
                        surfaceData.ior =                       surfaceDescription.RefractionIndex;
                        surfaceData.transmittanceColor =        surfaceDescription.RefractionColor;
                        surfaceData.atDistance =                surfaceDescription.RefractionDistance;
        
                        surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                        surfaceDescription.Alpha = 1.0;
                    }
                    else
                    {
                        surfaceData.ior = 1.0;
                        surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                        surfaceData.atDistance = 1.0;
                        surfaceData.transmittanceMask = 0.0;
                        surfaceDescription.Alpha = 1.0;
                    }
                #else
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                #endif

				surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;

                #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
				#endif

				#ifdef _MATERIAL_FEATURE_TRANSMISSION
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
				#endif

				#ifdef _MATERIAL_FEATURE_COLORED_TRANSMISSION
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_COLORED_TRANSMISSION;
				#endif

                #ifdef _MATERIAL_FEATURE_ANISOTROPY
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
                    surfaceData.normalWS = float3(0, 1, 0);
                #endif

				#ifdef _MATERIAL_FEATURE_CLEAR_COAT
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
				#endif

				#ifdef _MATERIAL_FEATURE_IRIDESCENCE
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
				#endif

                #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
                #endif

				#if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                    surfaceData.baseColor *= ( 1.0 - Max3( surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b ) );
				#endif

				#ifdef _DOUBLESIDED_ON
				float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
				#else
				float3 doubleSidedConstants = float3( 1.0, 1.0, 1.0 );
				#endif

				float3 normalTS = float3(0.0f, 0.0f, 1.0f);
				normalTS = surfaceDescription.Normal;

                #ifdef DECAL_NORMAL_BLENDING
					normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(normalTS, fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);

                    #if HAVE_DECALS
                    if (_EnableDecals)
                    {
                        float alpha = 1.0;
                        alpha = surfaceDescription.Alpha;

                        DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                        ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                        ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
                     }
                    #endif

                    GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
                #else
					GetNormalWS(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);

                    #if HAVE_DECALS
                    if (_EnableDecals)
                    {
                        float alpha = 1.0;
                        alpha = surfaceDescription.Alpha;
        
                        DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                        ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                        ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
                    }
                    #endif
                #endif

				surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
                surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz );
                surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);

				bentNormalWS = surfaceData.normalWS;

				#ifdef ASE_BENT_NORMAL
                    GetNormalWS( fragInputs, surfaceDescription.BentNormal, bentNormalWS, doubleSidedConstants );
				#endif

				#ifdef _MATERIAL_FEATURE_ANISOTROPY
                    surfaceData.tangentWS = TransformTangentToWorld(surfaceDescription.Tangent, fragInputs.tangentToWorld);
				#endif

				#if defined(DEBUG_DISPLAY)
				    #if !defined(SHADER_STAGE_RAY_TRACING)
				    if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
				    {
					   #ifdef FRAG_INPUTS_USE_TEXCOORD0
                           surfaceData.baseColor = GET_TEXTURE_STREAMING_DEBUG(posInput.positionSS, fragInputs.texCoord0);
                       #else
                           surfaceData.baseColor = GET_TEXTURE_STREAMING_DEBUG_NO_UV(posInput.positionSS);
                       #endif
					   surfaceData.metallic = 0;
				    }
					#endif
				    ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData); 
				#endif

                #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                    surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
                #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                    surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
                #endif

                #ifdef _ENABLE_GEOMETRIC_SPECULAR_AA
                    surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
                #endif
			}

			// Get Surface And BuiltinData
			void GetSurfaceAndBuiltinData(GlobalSurfaceDescription surfaceDescription, FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData)
			{
				#ifdef LOD_FADE_CROSSFADE
                    LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
				#endif

                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants);

				#ifdef _ALPHATEST_ON
                    DoAlphaTest( surfaceDescription.Alpha, surfaceDescription.AlphaClipThreshold );
				#endif

				#ifdef _ALPHATEST_SHADOW_ON
                    DoAlphaTest( surfaceDescription.Alpha, surfaceDescription.AlphaClipThresholdShadow);
				#endif

				#ifdef _DEPTHOFFSET_ON
                    ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
				#endif

                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], fragInputs.texCoord1, fragInputs.texCoord2, builtinData);

				#ifdef _DEPTHOFFSET_ON
                    builtinData.depthOffset = surfaceDescription.DepthOffset;
				#endif

                #ifdef _ALPHATEST_ON
                    builtinData.alphaClipTreshold = surfaceDescription.AlphaClipThreshold;
                #endif

                #ifdef UNITY_VIRTUAL_TEXTURING
                    builtinData.vtPackedFeedback = surfaceDescription.VTPackedFeedback;
                #endif

				#ifdef ASE_BAKEDGI
                    builtinData.bakeDiffuseLighting = surfaceDescription.BakedGI;
				#endif

				#ifdef ASE_BAKEDBACKGI
                    builtinData.backBakeDiffuseLighting = surfaceDescription.BakedBackGI;
				#endif

                builtinData.emissiveColor = surfaceDescription.Emission;

                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
			}

			PackedVaryingsMeshToPS VertexFunction(AttributesMesh inputMesh  )
			{
				PackedVaryingsMeshToPS outputPackedVaryingsMeshToPS;

				UNITY_SETUP_INSTANCE_ID(inputMesh);
				UNITY_TRANSFER_INSTANCE_ID(inputMesh, outputPackedVaryingsMeshToPS);

				inputMesh = ApplyMeshModification(inputMesh);
				TVEModelData Data16_g118149 = (TVEModelData)0;
				half Dummy181_g118147 = ( _LandscapeCategory + _LandscapeEnd + _LandscapeInfo );
				float In_Dummy16_g118149 = Dummy181_g118147;
				TVEModelData Data16_g117808 = (TVEModelData)0;
				half Dummy207_g117794 = 0.0;
				float In_Dummy16_g117808 = Dummy207_g117794;
				half3 PositionOS131_g117794 = inputMesh.positionOS;
				float3 In_PositionOS16_g117808 = PositionOS131_g117794;
				float3 ase_worldPos = GetAbsolutePositionWS( TransformObjectToWorld( (inputMesh.positionOS).xyz ) );
				float3 vertexToFrag73_g117794 = ase_worldPos;
				half3 PositionWS122_g117794 = vertexToFrag73_g117794;
				float3 In_PositionWS16_g117808 = PositionWS122_g117794;
				float3 localObjectPosition_UNITY_MATRIX_M14_g117796 = ObjectPosition_UNITY_MATRIX_M();
				#ifdef SHADEROPTIONS_CAMERA_RELATIVE_RENDERING
				float3 staticSwitch13_g117796 = ( localObjectPosition_UNITY_MATRIX_M14_g117796 + _WorldSpaceCameraPos );
				#else
				float3 staticSwitch13_g117796 = localObjectPosition_UNITY_MATRIX_M14_g117796;
				#endif
				half3 ObjectData20_g117798 = staticSwitch13_g117796;
				half3 WorldData19_g117798 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g117798 = WorldData19_g117798;
				#else
				float3 staticSwitch14_g117798 = ObjectData20_g117798;
				#endif
				float3 temp_output_124_0_g117796 = staticSwitch14_g117798;
				float3 temp_output_239_7_g117794 = temp_output_124_0_g117796;
				half3 PivotWS121_g117794 = temp_output_239_7_g117794;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g117794 = ( PositionWS122_g117794 - PivotWS121_g117794 );
				#else
				float3 staticSwitch204_g117794 = PositionWS122_g117794;
				#endif
				half3 PositionWO132_g117794 = ( staticSwitch204_g117794 - TVE_WorldOrigin );
				float3 In_PositionWO16_g117808 = PositionWO132_g117794;
				float3 In_PositionRawOS16_g117808 = PositionOS131_g117794;
				float3 In_PositionAddOS16_g117808 = float3( 0,0,0 );
				float3 _Vector0 = float3(0,0,0);
				half3 PivotOS149_g117794 = _Vector0;
				float3 In_PivotOS16_g117808 = PivotOS149_g117794;
				float3 In_PivotWS16_g117808 = PivotWS121_g117794;
				half3 PivotWO133_g117794 = ( PivotWS121_g117794 - TVE_WorldOrigin );
				float3 In_PivotWO16_g117808 = PivotWO133_g117794;
				half3 NormalOS134_g117794 = inputMesh.normalOS;
				float3 In_NormalOS16_g117808 = NormalOS134_g117794;
				float3 ase_worldNormal = TransformObjectToWorldNormal(inputMesh.normalOS);
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g117794 = normalizedWorldNormal;
				float3 In_NormalWS16_g117808 = Normal_WS95_g117794;
				float3 In_NormalRawOS16_g117808 = NormalOS134_g117794;
				float3 objToWorldDir298_g117794 = normalize( mul( GetObjectToWorldMatrix(), float4( inputMesh.normalOS, 0 ) ).xyz );
				half3 Normal_RawWS136_g117794 = objToWorldDir298_g117794;
				float3 In_NormalRawWS16_g117808 = Normal_RawWS136_g117794;
				half4 TangentlOS153_g117794 = inputMesh.tangentOS;
				float4 In_TangentOS16_g117808 = TangentlOS153_g117794;
				float3 normalizeResult296_g117794 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g117794 ) );
				half3 ViewDirWS169_g117794 = normalizeResult296_g117794;
				float3 In_ViewDirWS16_g117808 = ViewDirWS169_g117794;
				half4 VertexMasks171_g117794 = inputMesh.ase_color;
				float4 In_VertexData16_g117808 = VertexMasks171_g117794;
				float4 break33_g117807 = _object_phase_mode;
				float temp_output_30_0_g117807 = ( inputMesh.ase_color.r * break33_g117807.x );
				float temp_output_29_0_g117807 = ( inputMesh.ase_color.g * break33_g117807.y );
				float temp_output_31_0_g117807 = ( inputMesh.ase_color.b * break33_g117807.z );
				float temp_output_28_0_g117807 = ( temp_output_30_0_g117807 + temp_output_29_0_g117807 + temp_output_31_0_g117807 + ( inputMesh.ase_color.a * break33_g117807.w ) );
				float3 break243_g117794 = PivotWO133_g117794;
				float temp_output_315_0_g117794 = (frac( ( temp_output_28_0_g117807 + ( break243_g117794.x + break243_g117794.z ) ) )*2.0 + -1.0);
				float4 appendResult177_g117794 = (float4(1.0 , 1.0 , temp_output_315_0_g117794 , 1.0));
				half4 MotionMasks176_g117794 = appendResult177_g117794;
				float4 In_MotionData16_g117808 = MotionMasks176_g117794;
				half4 BoundsData254_g117794 = float4( 0,0,0,0 );
				float4 In_BoundsData16_g117808 = BoundsData254_g117794;
				float4 In_RotationData16_g117808 = float4( 0,0,0,0 );
				Data16_g117808.Dummy = In_Dummy16_g117808;
				Data16_g117808.PositionOS = In_PositionOS16_g117808;
				Data16_g117808.PositionWS = In_PositionWS16_g117808;
				Data16_g117808.PositionWO = In_PositionWO16_g117808;
				Data16_g117808.PositionRawOS = In_PositionRawOS16_g117808;
				Data16_g117808.PositionAddOS = In_PositionAddOS16_g117808;
				Data16_g117808.PivotOS = In_PivotOS16_g117808;
				Data16_g117808.PivotWS = In_PivotWS16_g117808;
				Data16_g117808.PivotWO = In_PivotWO16_g117808;
				Data16_g117808.NormalOS = In_NormalOS16_g117808;
				Data16_g117808.NormalWS = In_NormalWS16_g117808;
				Data16_g117808.NormalRawOS = In_NormalRawOS16_g117808;
				Data16_g117808.NormalRawWS = In_NormalRawWS16_g117808;
				Data16_g117808.TangentOS = In_TangentOS16_g117808;
				Data16_g117808.ViewDirWS = In_ViewDirWS16_g117808;
				Data16_g117808.VertexData = In_VertexData16_g117808;
				Data16_g117808.MotionData = In_MotionData16_g117808;
				Data16_g117808.BoundsData = In_BoundsData16_g117808;
				Data16_g117808.RotationData = In_RotationData16_g117808;
				TVEModelData Data15_g118148 = Data16_g117808;
				float Out_Dummy15_g118148 = 0;
				float3 Out_PositionOS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionWS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118148 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotOS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118148 = float3( 0,0,0 );
				float3 Out_NormalOS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g118148 = float3( 0,0,0 );
				float4 Out_TangentOS15_g118148 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g118148 = float3( 0,0,0 );
				float4 Out_VertexData15_g118148 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g118148 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118148 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g118148 = float4( 0,0,0,0 );
				Out_Dummy15_g118148 = Data15_g118148.Dummy;
				Out_PositionOS15_g118148 = Data15_g118148.PositionOS;
				Out_PositionWS15_g118148 = Data15_g118148.PositionWS;
				Out_PositionWO15_g118148 = Data15_g118148.PositionWO;
				Out_PositionRawOS15_g118148 = Data15_g118148.PositionRawOS;
				Out_PositionAddOS15_g118148 = Data15_g118148.PositionAddOS;
				Out_PivotOS15_g118148 = Data15_g118148.PivotOS;
				Out_PivotWS15_g118148 = Data15_g118148.PivotWS;
				Out_PivotWO15_g118148 = Data15_g118148.PivotWO;
				Out_NormalOS15_g118148 = Data15_g118148.NormalOS;
				Out_NormalWS15_g118148 = Data15_g118148.NormalWS;
				Out_NormalRawOS15_g118148 = Data15_g118148.NormalRawOS;
				Out_NormalRawWS15_g118148 = Data15_g118148.NormalRawWS;
				Out_TangentOS15_g118148 = Data15_g118148.TangentOS;
				Out_ViewDirWS15_g118148 = Data15_g118148.ViewDirWS;
				Out_VertexData15_g118148 = Data15_g118148.VertexData;
				Out_MotionData15_g118148 = Data15_g118148.MotionData;
				Out_BoundsData15_g118148 = Data15_g118148.BoundsData;
				Out_RotationData15_g118148 = Data15_g118148.RotationData;
				half3 Input_PositionOS147_g118147 = Out_PositionOS15_g118148;
				float3 break592_g118147 = Input_PositionOS147_g118147;
				float localBuildGlobalData204_g117810 = ( 0.0 );
				TVEGlobalData Data204_g117810 = (TVEGlobalData)0;
				half Dummy211_g117810 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g117810 = Dummy211_g117810;
				half4 Coat_Params302_g117810 = TVE_CoatParams;
				float4 In_CoatParams204_g117810 = Coat_Params302_g117810;
				float temp_output_82_0_g117811 = _GlobalPaintLayerValue;
				float temp_output_19_0_g117813 = TVE_PaintLayers[(int)temp_output_82_0_g117811];
				TVEModelData Data16_g117809 = (TVEModelData)0;
				float In_Dummy16_g117809 = 0.0;
				float3 In_PositionWS16_g117809 = PositionWS122_g117794;
				float3 In_PositionWO16_g117809 = PositionWO132_g117794;
				float3 In_PivotWS16_g117809 = PivotWS121_g117794;
				float3 In_PivotWO16_g117809 = PivotWO133_g117794;
				float3 In_NormalWS16_g117809 = Normal_WS95_g117794;
				float3 In_ViewDirWS16_g117809 = ViewDirWS169_g117794;
				float4 In_VertexData16_g117809 = VertexMasks171_g117794;
				float4 In_BoundsData16_g117809 = float4( 1,1,1,1 );
				Data16_g117809.Dummy = In_Dummy16_g117809;
				Data16_g117809.PositionWS = In_PositionWS16_g117809;
				Data16_g117809.PositionWO = In_PositionWO16_g117809;
				Data16_g117809.PivotWS = In_PivotWS16_g117809;
				Data16_g117809.PivotWO = In_PivotWO16_g117809;
				Data16_g117809.NormalWS = In_NormalWS16_g117809;
				Data16_g117809.ViewDirWS = In_ViewDirWS16_g117809;
				Data16_g117809.VertexData = In_VertexData16_g117809;
				Data16_g117809.BoundsData = In_BoundsData16_g117809;
				TVEModelData Data15_g117892 = Data16_g117809;
				float Out_Dummy15_g117892 = 0;
				float3 Out_PositionWS15_g117892 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117892 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117892 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g117892 = float3( 0,0,0 );
				float4 Out_VertexData15_g117892 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117892 = float4( 0,0,0,0 );
				Out_Dummy15_g117892 = Data15_g117892.Dummy;
				Out_PositionWS15_g117892 = Data15_g117892.PositionWS;
				Out_PositionWO15_g117892 = Data15_g117892.PositionWO;
				Out_PivotWS15_g117892 = Data15_g117892.PivotWS;
				Out_PivotWO15_g117892 = Data15_g117892.PivotWO;
				Out_NormalWS15_g117892 = Data15_g117892.NormalWS;
				Out_ViewDirWS15_g117892 = Data15_g117892.ViewDirWS;
				Out_VertexData15_g117892 = Data15_g117892.VertexData;
				Out_BoundsData15_g117892 = Data15_g117892.BoundsData;
				half3 Model_PositionWS143_g117810 = Out_PositionWS15_g117892;
				half3 Input_Position180_g117814 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117814 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_82_0_g117814 = temp_output_82_0_g117811;
				float2 temp_output_119_0_g117814 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_7_0_g117819 = 1.0;
				float temp_output_10_0_g117819 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117819 );
				float4 lerpResult131_g117814 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117814,temp_output_82_0_g117814, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, temp_output_119_0_g117814,temp_output_82_0_g117814, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117814 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117819 ) / temp_output_10_0_g117819 ) ));
				float4 temp_output_17_0_g117813 = lerpResult131_g117814;
				float4 temp_output_3_0_g117813 = TVE_PaintParams;
				float4 ifLocalVar18_g117813 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117813 >= 0.5 )
				ifLocalVar18_g117813 = temp_output_17_0_g117813;
				else
				ifLocalVar18_g117813 = temp_output_3_0_g117813;
				float4 lerpResult22_g117813 = lerp( temp_output_3_0_g117813 , temp_output_17_0_g117813 , temp_output_19_0_g117813);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117813 = lerpResult22_g117813;
				#else
				float4 staticSwitch24_g117813 = ifLocalVar18_g117813;
				#endif
				half4 Paint_Params71_g117810 = staticSwitch24_g117813;
				float4 In_PaintParams204_g117810 = Paint_Params71_g117810;
				float temp_output_82_0_g117829 = _GlobalGlowLayerValue;
				float temp_output_19_0_g117831 = TVE_GlowLayers[(int)temp_output_82_0_g117829];
				half3 Input_Position180_g117832 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117832 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_82_0_g117832 = temp_output_82_0_g117829;
				float2 temp_output_119_0_g117832 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_7_0_g117837 = 1.0;
				float temp_output_10_0_g117837 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117837 );
				float4 lerpResult131_g117832 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117832,temp_output_82_0_g117832, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, temp_output_119_0_g117832,temp_output_82_0_g117832, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117832 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117837 ) / temp_output_10_0_g117837 ) ));
				float4 temp_output_17_0_g117831 = lerpResult131_g117832;
				float4 temp_output_3_0_g117831 = TVE_GlowParams;
				float4 ifLocalVar18_g117831 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117831 >= 0.5 )
				ifLocalVar18_g117831 = temp_output_17_0_g117831;
				else
				ifLocalVar18_g117831 = temp_output_3_0_g117831;
				float4 lerpResult22_g117831 = lerp( temp_output_3_0_g117831 , temp_output_17_0_g117831 , temp_output_19_0_g117831);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117831 = lerpResult22_g117831;
				#else
				float4 staticSwitch24_g117831 = ifLocalVar18_g117831;
				#endif
				half4 Glow_Params248_g117810 = staticSwitch24_g117831;
				float4 In_GlowParams204_g117810 = Glow_Params248_g117810;
				float temp_output_132_0_g117874 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g117876 = TVE_AtmoLayers[(int)temp_output_132_0_g117874];
				half3 Input_Position180_g117877 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117877 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_82_0_g117877 = temp_output_132_0_g117874;
				float2 temp_output_119_0_g117877 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_7_0_g117882 = 1.0;
				float temp_output_10_0_g117882 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117882 );
				float4 lerpResult131_g117877 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117877,temp_output_82_0_g117877, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, temp_output_119_0_g117877,temp_output_82_0_g117877, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117877 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117882 ) / temp_output_10_0_g117882 ) ));
				float4 temp_output_17_0_g117876 = lerpResult131_g117877;
				float4 temp_output_3_0_g117876 = TVE_AtmoParams;
				float4 ifLocalVar18_g117876 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117876 >= 0.5 )
				ifLocalVar18_g117876 = temp_output_17_0_g117876;
				else
				ifLocalVar18_g117876 = temp_output_3_0_g117876;
				float4 lerpResult22_g117876 = lerp( temp_output_3_0_g117876 , temp_output_17_0_g117876 , temp_output_19_0_g117876);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117876 = lerpResult22_g117876;
				#else
				float4 staticSwitch24_g117876 = ifLocalVar18_g117876;
				#endif
				half4 Atmo_Params80_g117810 = staticSwitch24_g117876;
				float4 In_AtmoParams204_g117810 = Atmo_Params80_g117810;
				float temp_output_132_0_g117883 = _GlobalFadeLayerValue;
				float temp_output_19_0_g117885 = TVE_FadeLayers[(int)temp_output_132_0_g117883];
				half3 Input_Position180_g117886 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117886 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_82_0_g117886 = temp_output_132_0_g117883;
				float2 temp_output_119_0_g117886 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_7_0_g117891 = 1.0;
				float temp_output_10_0_g117891 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117891 );
				float4 lerpResult131_g117886 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117886,temp_output_82_0_g117886, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, temp_output_119_0_g117886,temp_output_82_0_g117886, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117886 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117891 ) / temp_output_10_0_g117891 ) ));
				float4 temp_output_17_0_g117885 = lerpResult131_g117886;
				float4 temp_output_3_0_g117885 = TVE_FadeParams;
				float4 ifLocalVar18_g117885 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117885 >= 0.5 )
				ifLocalVar18_g117885 = temp_output_17_0_g117885;
				else
				ifLocalVar18_g117885 = temp_output_3_0_g117885;
				float4 lerpResult22_g117885 = lerp( temp_output_3_0_g117885 , temp_output_17_0_g117885 , temp_output_19_0_g117885);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117885 = lerpResult22_g117885;
				#else
				float4 staticSwitch24_g117885 = ifLocalVar18_g117885;
				#endif
				half4 Fade_Params387_g117810 = staticSwitch24_g117885;
				float4 In_FadeParams204_g117810 = Fade_Params387_g117810;
				half4 Form_Params112_g117810 = TVE_FormParams;
				float4 In_FormParams204_g117810 = Form_Params112_g117810;
				float temp_output_130_0_g117847 = _GlobalLandLayerValue;
				float temp_output_19_0_g117849 = TVE_LandLayers[(int)temp_output_130_0_g117847];
				half3 Input_Position180_g117850 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117850 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_82_0_g117850 = temp_output_130_0_g117847;
				float2 temp_output_119_0_g117850 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_7_0_g117855 = 1.0;
				float temp_output_10_0_g117855 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117855 );
				float4 lerpResult131_g117850 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117850,temp_output_82_0_g117850, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, temp_output_119_0_g117850,temp_output_82_0_g117850, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117850 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117855 ) / temp_output_10_0_g117855 ) ));
				float4 temp_output_17_0_g117849 = lerpResult131_g117850;
				float4 temp_output_3_0_g117849 = TVE_LandParams;
				float4 ifLocalVar18_g117849 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117849 >= 0.5 )
				ifLocalVar18_g117849 = temp_output_17_0_g117849;
				else
				ifLocalVar18_g117849 = temp_output_3_0_g117849;
				float4 lerpResult22_g117849 = lerp( temp_output_3_0_g117849 , temp_output_17_0_g117849 , temp_output_19_0_g117849);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117849 = lerpResult22_g117849;
				#else
				float4 staticSwitch24_g117849 = ifLocalVar18_g117849;
				#endif
				half4 Land_Params375_g117810 = staticSwitch24_g117849;
				float4 In_LandParams204_g117810 = Land_Params375_g117810;
				half4 Wind_Params88_g117810 = TVE_WindParams;
				float4 In_WindParams204_g117810 = Wind_Params88_g117810;
				half4 Push_Params335_g117810 = TVE_PushParams;
				float4 In_PushParams204_g117810 = Push_Params335_g117810;
				Data204_g117810.Dummy = In_Dummy204_g117810;
				Data204_g117810.CoatParams = In_CoatParams204_g117810;
				Data204_g117810.PaintParams = In_PaintParams204_g117810;
				Data204_g117810.GlowParams = In_GlowParams204_g117810;
				Data204_g117810.AtmoParams = In_AtmoParams204_g117810;
				Data204_g117810.FadeParams = In_FadeParams204_g117810;
				Data204_g117810.FormParams= In_FormParams204_g117810;
				Data204_g117810.LandParams = In_LandParams204_g117810;
				Data204_g117810.WindParams = In_WindParams204_g117810;
				Data204_g117810.PushParams = In_PushParams204_g117810;
				TVEGlobalData Data15_g118150 = Data204_g117810;
				float Out_Dummy15_g118150 = 0;
				float4 Out_CoatParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118150 = float4( 0,0,0,0 );
				Out_Dummy15_g118150 = Data15_g118150.Dummy;
				Out_CoatParams15_g118150 = Data15_g118150.CoatParams;
				Out_PaintParams15_g118150 = Data15_g118150.PaintParams;
				Out_GlowParams15_g118150 = Data15_g118150.GlowParams;
				Out_AtmoParams15_g118150= Data15_g118150.AtmoParams;
				Out_FadeParams15_g118150= Data15_g118150.FadeParams;
				Out_FormParams15_g118150 = Data15_g118150.FormParams;
				Out_LandParams15_g118150 = Data15_g118150.LandParams;
				Out_WindParams15_g118150 = Data15_g118150.WindParams;
				Out_PushParams15_g118150 = Data15_g118150.PushParams;
				half4 Input_FormParams214_g118147 = Out_LandParams15_g118150;
				float temp_output_572_0_g118147 = (Input_FormParams214_g118147).z;
				float temp_output_595_0_g118147 = ( break592_g118147.y + temp_output_572_0_g118147 );
				float lerpResult604_g118147 = lerp( break592_g118147.y , temp_output_595_0_g118147 , ( _LandscapeHeightValue * TVE_IsEnabled ));
				float3 appendResult593_g118147 = (float3(break592_g118147.x , lerpResult604_g118147 , break592_g118147.z));
				#ifdef TVE_LANDSCAPE
				float3 staticSwitch575_g118147 = appendResult593_g118147;
				#else
				float3 staticSwitch575_g118147 = Input_PositionOS147_g118147;
				#endif
				half3 Final_PositionOS580_g118147 = staticSwitch575_g118147;
				float3 In_PositionOS16_g118149 = Final_PositionOS580_g118147;
				float3 In_PositionWS16_g118149 = Out_PositionWS15_g118148;
				float3 In_PositionWO16_g118149 = Out_PositionWO15_g118148;
				float3 In_PositionRawOS16_g118149 = Out_PositionRawOS15_g118148;
				float3 In_PositionAddOS16_g118149 = Out_PositionAddOS15_g118148;
				float3 In_PivotOS16_g118149 = Out_PivotOS15_g118148;
				float3 In_PivotWS16_g118149 = Out_PivotWS15_g118148;
				float3 temp_output_481_19_g118147 = Out_PivotWO15_g118148;
				float3 In_PivotWO16_g118149 = temp_output_481_19_g118147;
				float3 temp_output_481_20_g118147 = Out_NormalOS15_g118148;
				float3 In_NormalOS16_g118149 = temp_output_481_20_g118147;
				float3 In_NormalWS16_g118149 = Out_NormalWS15_g118148;
				float3 In_NormalRawOS16_g118149 = Out_NormalRawOS15_g118148;
				float3 In_NormalRawWS16_g118149 = Out_NormalRawWS15_g118148;
				float4 In_TangentOS16_g118149 = Out_TangentOS15_g118148;
				float3 In_ViewDirWS16_g118149 = Out_ViewDirWS15_g118148;
				float4 In_VertexData16_g118149 = Out_VertexData15_g118148;
				float4 In_MotionData16_g118149 = Out_MotionData15_g118148;
				float4 In_BoundsData16_g118149 = Out_BoundsData15_g118148;
				float4 In_RotationData16_g118149 = Out_RotationData15_g118148;
				Data16_g118149.Dummy = In_Dummy16_g118149;
				Data16_g118149.PositionOS = In_PositionOS16_g118149;
				Data16_g118149.PositionWS = In_PositionWS16_g118149;
				Data16_g118149.PositionWO = In_PositionWO16_g118149;
				Data16_g118149.PositionRawOS = In_PositionRawOS16_g118149;
				Data16_g118149.PositionAddOS = In_PositionAddOS16_g118149;
				Data16_g118149.PivotOS = In_PivotOS16_g118149;
				Data16_g118149.PivotWS = In_PivotWS16_g118149;
				Data16_g118149.PivotWO = In_PivotWO16_g118149;
				Data16_g118149.NormalOS = In_NormalOS16_g118149;
				Data16_g118149.NormalWS = In_NormalWS16_g118149;
				Data16_g118149.NormalRawOS = In_NormalRawOS16_g118149;
				Data16_g118149.NormalRawWS = In_NormalRawWS16_g118149;
				Data16_g118149.TangentOS = In_TangentOS16_g118149;
				Data16_g118149.ViewDirWS = In_ViewDirWS16_g118149;
				Data16_g118149.VertexData = In_VertexData16_g118149;
				Data16_g118149.MotionData = In_MotionData16_g118149;
				Data16_g118149.BoundsData = In_BoundsData16_g118149;
				Data16_g118149.RotationData = In_RotationData16_g118149;
				TVEModelData Data15_g118156 = Data16_g118149;
				float Out_Dummy15_g118156 = 0;
				float3 Out_PositionOS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionWS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118156 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotOS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118156 = float3( 0,0,0 );
				float3 Out_NormalOS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g118156 = float3( 0,0,0 );
				float4 Out_TangentOS15_g118156 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g118156 = float3( 0,0,0 );
				float4 Out_VertexData15_g118156 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g118156 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118156 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g118156 = float4( 0,0,0,0 );
				Out_Dummy15_g118156 = Data15_g118156.Dummy;
				Out_PositionOS15_g118156 = Data15_g118156.PositionOS;
				Out_PositionWS15_g118156 = Data15_g118156.PositionWS;
				Out_PositionWO15_g118156 = Data15_g118156.PositionWO;
				Out_PositionRawOS15_g118156 = Data15_g118156.PositionRawOS;
				Out_PositionAddOS15_g118156 = Data15_g118156.PositionAddOS;
				Out_PivotOS15_g118156 = Data15_g118156.PivotOS;
				Out_PivotWS15_g118156 = Data15_g118156.PivotWS;
				Out_PivotWO15_g118156 = Data15_g118156.PivotWO;
				Out_NormalOS15_g118156 = Data15_g118156.NormalOS;
				Out_NormalWS15_g118156 = Data15_g118156.NormalWS;
				Out_NormalRawOS15_g118156 = Data15_g118156.NormalRawOS;
				Out_NormalRawWS15_g118156 = Data15_g118156.NormalRawWS;
				Out_TangentOS15_g118156 = Data15_g118156.TangentOS;
				Out_ViewDirWS15_g118156 = Data15_g118156.ViewDirWS;
				Out_VertexData15_g118156 = Data15_g118156.VertexData;
				Out_MotionData15_g118156 = Data15_g118156.MotionData;
				Out_BoundsData15_g118156 = Data15_g118156.BoundsData;
				Out_RotationData15_g118156 = Data15_g118156.RotationData;
				float3 temp_output_31_0_g118154 = Out_PositionOS15_g118156;
				
				outputPackedVaryingsMeshToPS.ase_texcoord2.xyz = ase_worldPos;
				outputPackedVaryingsMeshToPS.ase_texcoord3.xyz = ase_worldNormal;
				float3 ase_worldTangent = TransformObjectToWorldDir(inputMesh.tangentOS.xyz);
				outputPackedVaryingsMeshToPS.ase_texcoord4.xyz = ase_worldTangent;
				float ase_vertexTangentSign = inputMesh.tangentOS.w * ( unity_WorldTransformParams.w >= 0.0 ? 1.0 : -1.0 );
				float3 ase_worldBitangent = cross( ase_worldNormal, ase_worldTangent ) * ase_vertexTangentSign;
				outputPackedVaryingsMeshToPS.ase_texcoord5.xyz = ase_worldBitangent;
				outputPackedVaryingsMeshToPS.ase_texcoord6.xyz = vertexToFrag73_g117794;
				
				outputPackedVaryingsMeshToPS.ase_color = inputMesh.ase_color;
				outputPackedVaryingsMeshToPS.ase_texcoord7 = inputMesh.uv0;
				
				//setting value to unused interpolator channels and avoid initialization warnings
				outputPackedVaryingsMeshToPS.ase_texcoord2.w = 0;
				outputPackedVaryingsMeshToPS.ase_texcoord3.w = 0;
				outputPackedVaryingsMeshToPS.ase_texcoord4.w = 0;
				outputPackedVaryingsMeshToPS.ase_texcoord5.w = 0;
				outputPackedVaryingsMeshToPS.ase_texcoord6.w = 0;

				#ifdef ASE_ABSOLUTE_VERTEX_POS
				float3 defaultVertexValue = inputMesh.positionOS.xyz;
				#else
				float3 defaultVertexValue = float3( 0, 0, 0 );
				#endif
				float3 vertexValue = temp_output_31_0_g118154;

				#ifdef ASE_ABSOLUTE_VERTEX_POS
				inputMesh.positionOS.xyz = vertexValue;
				#else
				inputMesh.positionOS.xyz += vertexValue;
				#endif

				inputMesh.normalOS = Out_NormalOS15_g118156;
				inputMesh.tangentOS = Out_TangentOS15_g118156;

				outputPackedVaryingsMeshToPS.positionCS = UnityMetaVertexPosition(inputMesh.positionOS, inputMesh.uv1.xy, inputMesh.uv2.xy, unity_LightmapST, unity_DynamicLightmapST);

				#ifdef EDITOR_VISUALIZATION
					float2 vizUV = 0;
					float4 lightCoord = 0;
					UnityEditorVizData(inputMesh.positionOS.xyz, inputMesh.uv0.xy, inputMesh.uv1.xy, inputMesh.uv2.xy, vizUV, lightCoord);

					outputPackedVaryingsMeshToPS.VizUV.xy = vizUV;
					outputPackedVaryingsMeshToPS.LightCoord = lightCoord;
				#endif

				return outputPackedVaryingsMeshToPS;
			}

			#if defined(ASE_TESSELLATION)
			struct VertexControl
			{
				float3 positionOS : INTERNALTESSPOS;
				float3 normalOS : NORMAL;
				float4 tangentOS : TANGENT;
				float4 uv0 : TEXCOORD0;
				float4 uv1 : TEXCOORD1;
				float4 uv2 : TEXCOORD2;
				float4 uv3 : TEXCOORD3;
				float4 ase_color : COLOR;

				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct TessellationFactors
			{
				float edge[3] : SV_TessFactor;
				float inside : SV_InsideTessFactor;
			};

			VertexControl Vert ( AttributesMesh v )
			{
				VertexControl o;
				UNITY_SETUP_INSTANCE_ID(v);
				UNITY_TRANSFER_INSTANCE_ID(v, o);
				o.positionOS = v.positionOS;
				o.normalOS = v.normalOS;
				o.tangentOS = v.tangentOS;
				o.uv0 = v.uv0;
				o.uv1 = v.uv1;
				o.uv2 = v.uv2;
				o.uv3 = v.uv3;
				o.ase_color = v.ase_color;
				return o;
			}

			TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
			{
				TessellationFactors o;
				float4 tf = 1;
				float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
				float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
				#if (SHADEROPTIONS_CAMERA_RELATIVE_RENDERING != 0)
				float3 cameraPos = 0;
				#else
				float3 cameraPos = _WorldSpaceCameraPos;
				#endif
				#if defined(ASE_FIXED_TESSELLATION)
				tf = FixedTess( tessValue );
				#elif defined(ASE_DISTANCE_TESSELLATION)
				tf = DistanceBasedTess(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), tessValue, tessMin, tessMax, GetObjectToWorldMatrix(), cameraPos );
				#elif defined(ASE_LENGTH_TESSELLATION)
				tf = EdgeLengthBasedTess(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), edgeLength, GetObjectToWorldMatrix(), cameraPos, _ScreenParams );
				#elif defined(ASE_LENGTH_CULL_TESSELLATION)
				tf = EdgeLengthBasedTessCull(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), edgeLength, tessMaxDisp, GetObjectToWorldMatrix(), cameraPos, _ScreenParams, _FrustumPlanes );
				#endif
				o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
				return o;
			}

			[domain("tri")]
			[partitioning("fractional_odd")]
			[outputtopology("triangle_cw")]
			[patchconstantfunc("TessellationFunction")]
			[outputcontrolpoints(3)]
			VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
			{
			   return patch[id];
			}

			[domain("tri")]
			PackedVaryingsMeshToPS DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
			{
				AttributesMesh o = (AttributesMesh) 0;
				o.positionOS = patch[0].positionOS * bary.x + patch[1].positionOS * bary.y + patch[2].positionOS * bary.z;
				o.normalOS = patch[0].normalOS * bary.x + patch[1].normalOS * bary.y + patch[2].normalOS * bary.z;
				o.tangentOS = patch[0].tangentOS * bary.x + patch[1].tangentOS * bary.y + patch[2].tangentOS * bary.z;
				o.uv0 = patch[0].uv0 * bary.x + patch[1].uv0 * bary.y + patch[2].uv0 * bary.z;
				o.uv1 = patch[0].uv1 * bary.x + patch[1].uv1 * bary.y + patch[2].uv1 * bary.z;
				o.uv2 = patch[0].uv2 * bary.x + patch[1].uv2 * bary.y + patch[2].uv2 * bary.z;
				o.uv3 = patch[0].uv3 * bary.x + patch[1].uv3 * bary.y + patch[2].uv3 * bary.z;
				o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
				#if defined(ASE_PHONG_TESSELLATION)
				float3 pp[3];
				for (int i = 0; i < 3; ++i)
					pp[i] = o.positionOS.xyz - patch[i].normalOS * (dot(o.positionOS.xyz, patch[i].normalOS) - dot(patch[i].positionOS.xyz, patch[i].normalOS));
				float phongStrength = _TessPhongStrength;
				o.positionOS.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.positionOS.xyz;
				#endif
				UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
				return VertexFunction(o);
			}
			#else
			PackedVaryingsMeshToPS Vert ( AttributesMesh v )
			{
				return VertexFunction( v );
			}
			#endif

			float4 Frag(PackedVaryingsMeshToPS packedInput  ) : SV_Target
			{
				UNITY_SETUP_INSTANCE_ID( packedInput );
				FragInputs input;
				ZERO_INITIALIZE(FragInputs, input);
				input.tangentToWorld = k_identity3x3;
				input.positionSS = packedInput.positionCS;

				#if _DOUBLESIDED_ON && SHADER_STAGE_FRAGMENT
				input.isFrontFace = IS_FRONT_VFACE( packedInput.cullFace, true, false);
				#elif SHADER_STAGE_FRAGMENT
				#if defined(ASE_NEED_CULLFACE)
				input.isFrontFace = IS_FRONT_VFACE(packedInput.cullFace, true, false);
				#endif
				#endif
				half isFrontFace = input.isFrontFace;

				PositionInputs posInput = GetPositionInput(input.positionSS.xy, _ScreenSize.zw, input.positionSS.z, input.positionSS.w, input.positionRWS);
				float3 V = float3(1.0, 1.0, 1.0);

				SurfaceData surfaceData;
				BuiltinData builtinData;
				GlobalSurfaceDescription surfaceDescription = (GlobalSurfaceDescription)0;
				float localBreakData4_g118158 = ( 0.0 );
				float localCompData3_g118135 = ( 0.0 );
				TVEVisualData Data3_g118135 = (TVEVisualData)0;
				half Dummy594_g118134 = ( _CutoutCategory + _CutoutEnd + _CutoutElementMode + _CutoutBakeInfo );
				float In_Dummy3_g118135 = Dummy594_g118134;
				float localBreakData4_g118145 = ( 0.0 );
				float localCompData3_g118129 = ( 0.0 );
				TVEVisualData Data3_g118129 = (TVEVisualData)0;
				half Dummy145_g118119 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveElementMode + _EmissiveFlagMode );
				float In_Dummy3_g118129 = Dummy145_g118119;
				float localBreakData4_g118128 = ( 0.0 );
				float localCompData3_g118092 = ( 0.0 );
				TVEVisualData Data3_g118092 = (TVEVisualData)0;
				half Dummy594_g118090 = ( _WetnessCategory + _WetnessEnd + _WetnessElementMode + _WetnessBakeInfo );
				float In_Dummy3_g118092 = Dummy594_g118090;
				float localBreakData4_g118091 = ( 0.0 );
				float localCompData3_g118057 = ( 0.0 );
				TVEVisualData Data3_g118057 = (TVEVisualData)0;
				half Dummy594_g118054 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayElementMode + _OverlayBakeInfo );
				float In_Dummy3_g118057 = Dummy594_g118054;
				float localBreakData4_g118055 = ( 0.0 );
				float localCompData3_g118034 = ( 0.0 );
				TVEVisualData Data3_g118034 = (TVEVisualData)0;
				half Dummy205_g118031 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessElementMode + _DrynessBakeInfo );
				float In_Dummy3_g118034 = Dummy205_g118031;
				float localBreakData4_g118033 = ( 0.0 );
				float localCompData3_g118028 = ( 0.0 );
				TVEVisualData Data3_g118028 = (TVEVisualData)0;
				half Dummy205_g118007 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeInfo );
				float In_Dummy3_g118028 = Dummy205_g118007;
				float localBreakData4_g118029 = ( 0.0 );
				float localCompData3_g117894 = ( 0.0 );
				TVEVisualData Data3_g117894 = (TVEVisualData)0;
				half Dummy9163_g117893 = ( _CategoryTerrain + _EndTerrain );
				float In_Dummy3_g117894 = Dummy9163_g117893;
				float localHeightBasedBlending7362_g117895 = ( 0.0 );
				float3 ase_worldPos = packedInput.ase_texcoord2.xyz;
				float4 appendResult9125_g117895 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
				float4 temp_output_35_0_g118003 = appendResult9125_g117895;
				float2 InputScale48_g118003 = (temp_output_35_0_g118003).zw;
				half2 FinalScale53_g118003 = ( 1.0 / InputScale48_g118003 );
				float2 InputPosition52_g118003 = (temp_output_35_0_g118003).xy;
				half2 FinalPosition58_g118003 = -( FinalScale53_g118003 * InputPosition52_g118003 );
				float2 temp_output_65_0_g118003 = ( ( (ase_worldPos).xz * FinalScale53_g118003 ) + FinalPosition58_g118003 );
				float4 temp_output_70_0_g118003 = _TerrainControlTex1_TexelSize;
				float2 InputTexelSize68_g118003 = (temp_output_70_0_g118003).zw;
				float2 temp_cast_0 = (1.0).xx;
				float2 InputTexelRecip69_g118003 = (temp_output_70_0_g118003).xy;
				float2 Terrain_Control_UV7873_g117895 = ( ( ( temp_output_65_0_g118003 / ( 1.0 / ( InputTexelSize68_g118003 - temp_cast_0 ) ) ) + 0.5 ) * InputTexelRecip69_g118003 );
				half4 Terrain_Control_047365_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_047362_g117895 = Terrain_Control_047365_g117895;
				half4 Terrain_Control_087366_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_087362_g117895 = Terrain_Control_087366_g117895;
				half4 Terrain_Control_127712_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_127362_g117895 = Terrain_Control_127712_g117895;
				half4 Terrain_Control_167711_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_167362_g117895 = Terrain_Control_167711_g117895;
				TEXTURE2D(Texture238_g117940) = _TerrainShaderTex1;
				float localFilterTexture30_g118001 = ( 0.0 );
				SamplerState SamplerDefault30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g118001 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g118001 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g118001 = SamplerDefault30_g118001;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g118001 = SamplerDefault30_g118001;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g118001 = SamplerPoint30_g118001;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g118001 = SamplerLow30_g118001;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g118001 = SamplerMedium30_g118001;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g118001 = SamplerHigh30_g118001;
				#endif
				SamplerState Sampler238_g117940 = SS30_g118001;
				half4 Input_Terrain_Coords_016785_g117895 = _TerrainCoord1;
				float4 temp_output_37_0_g117940 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117940 = temp_output_37_0_g117940;
				half3 Input_Position9197_g117895 = ase_worldPos;
				float3 temp_output_279_0_g117940 = Input_Position9197_g117895;
				half3 WorldPosition238_g117940 = temp_output_279_0_g117940;
				half4 localSamplePlanar2D238_g117940 = SamplePlanar2D( Texture238_g117940 , Sampler238_g117940 , Coords238_g117940 , WorldPosition238_g117940 );
				TEXTURE2D(Texture246_g117940) = _TerrainShaderTex1;
				SamplerState Sampler246_g117940 = SS30_g118001;
				half4 Coords246_g117940 = temp_output_37_0_g117940;
				half3 WorldPosition246_g117940 = temp_output_279_0_g117940;
				float3 ase_worldNormal = packedInput.ase_texcoord3.xyz;
				half3 Input_Normal9199_g117895 = ase_worldNormal;
				float3 temp_output_280_0_g117940 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117940 = temp_output_280_0_g117940;
				half4 localSamplePlanar3D246_g117940 = SamplePlanar3D( Texture246_g117940 , Sampler246_g117940 , Coords246_g117940 , WorldPosition246_g117940 , WorldNormal246_g117940 );
				TEXTURE2D(Texture234_g117940) = _TerrainShaderTex1;
				SamplerState Sampler234_g117940 = SS30_g118001;
				float4 Coords234_g117940 = temp_output_37_0_g117940;
				float3 WorldPosition234_g117940 = temp_output_279_0_g117940;
				float4 localSampleStochastic2D234_g117940 = SampleStochastic2D( Texture234_g117940 , Sampler234_g117940 , Coords234_g117940 , WorldPosition234_g117940 );
				TEXTURE2D(Texture263_g117940) = _TerrainShaderTex1;
				SamplerState Sampler263_g117940 = SS30_g118001;
				half4 Coords263_g117940 = temp_output_37_0_g117940;
				half3 WorldPosition263_g117940 = temp_output_279_0_g117940;
				half3 WorldNormal263_g117940 = temp_output_280_0_g117940;
				half4 localSampleStochastic3D263_g117940 = SampleStochastic3D( Texture263_g117940 , Sampler263_g117940 , Coords263_g117940 , WorldPosition263_g117940 , WorldNormal263_g117940 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8639_g117895 = localSamplePlanar2D238_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8639_g117895 = localSamplePlanar3D246_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8639_g117895 = localSampleStochastic2D234_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8639_g117895 = localSampleStochastic3D263_g117940;
				#else
				float4 staticSwitch8639_g117895 = localSamplePlanar2D238_g117940;
				#endif
				float4 temp_output_7_0_g117897 = _TerrainShaderMin1;
				float4 temp_output_10_0_g117897 = ( _TerrainShaderMax1 - temp_output_7_0_g117897 );
				float4 temp_output_6970_0_g117895 = saturate( ( ( staticSwitch8639_g117895 - temp_output_7_0_g117897 ) / ( temp_output_10_0_g117897 + 0.0001 ) ) );
				half4 Masks_015_g117901 = temp_output_6970_0_g117895;
				TEXTURE2D(Texture238_g117944) = _TerrainShaderTex2;
				SamplerState Sampler238_g117944 = SS30_g118001;
				half4 Input_Terrain_Coords_026787_g117895 = _TerrainCoord2;
				float4 temp_output_37_0_g117944 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117944 = temp_output_37_0_g117944;
				float3 temp_output_279_0_g117944 = Input_Position9197_g117895;
				half3 WorldPosition238_g117944 = temp_output_279_0_g117944;
				half4 localSamplePlanar2D238_g117944 = SamplePlanar2D( Texture238_g117944 , Sampler238_g117944 , Coords238_g117944 , WorldPosition238_g117944 );
				TEXTURE2D(Texture246_g117944) = _TerrainShaderTex2;
				SamplerState Sampler246_g117944 = SS30_g118001;
				half4 Coords246_g117944 = temp_output_37_0_g117944;
				half3 WorldPosition246_g117944 = temp_output_279_0_g117944;
				float3 temp_output_280_0_g117944 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117944 = temp_output_280_0_g117944;
				half4 localSamplePlanar3D246_g117944 = SamplePlanar3D( Texture246_g117944 , Sampler246_g117944 , Coords246_g117944 , WorldPosition246_g117944 , WorldNormal246_g117944 );
				TEXTURE2D(Texture234_g117944) = _TerrainShaderTex2;
				SamplerState Sampler234_g117944 = SS30_g118001;
				float4 Coords234_g117944 = temp_output_37_0_g117944;
				float3 WorldPosition234_g117944 = temp_output_279_0_g117944;
				float4 localSampleStochastic2D234_g117944 = SampleStochastic2D( Texture234_g117944 , Sampler234_g117944 , Coords234_g117944 , WorldPosition234_g117944 );
				TEXTURE2D(Texture263_g117944) = _TerrainShaderTex2;
				SamplerState Sampler263_g117944 = SS30_g118001;
				half4 Coords263_g117944 = temp_output_37_0_g117944;
				half3 WorldPosition263_g117944 = temp_output_279_0_g117944;
				half3 WorldNormal263_g117944 = temp_output_280_0_g117944;
				half4 localSampleStochastic3D263_g117944 = SampleStochastic3D( Texture263_g117944 , Sampler263_g117944 , Coords263_g117944 , WorldPosition263_g117944 , WorldNormal263_g117944 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8640_g117895 = localSamplePlanar2D238_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8640_g117895 = localSamplePlanar3D246_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8640_g117895 = localSampleStochastic2D234_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8640_g117895 = localSampleStochastic3D263_g117944;
				#else
				float4 staticSwitch8640_g117895 = localSamplePlanar2D238_g117944;
				#endif
				float4 temp_output_7_0_g117907 = _TerrainShaderMin2;
				float4 temp_output_10_0_g117907 = ( _TerrainShaderMax2 - temp_output_7_0_g117907 );
				float4 temp_output_6977_0_g117895 = saturate( ( ( staticSwitch8640_g117895 - temp_output_7_0_g117907 ) / ( temp_output_10_0_g117907 + 0.0001 ) ) );
				half4 Masks_0210_g117901 = temp_output_6977_0_g117895;
				TEXTURE2D(Texture238_g117949) = _TerrainShaderTex3;
				SamplerState Sampler238_g117949 = SS30_g118001;
				half4 Input_Terrain_Coords_036789_g117895 = _TerrainCoord3;
				float4 temp_output_37_0_g117949 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117949 = temp_output_37_0_g117949;
				float3 temp_output_279_0_g117949 = Input_Position9197_g117895;
				half3 WorldPosition238_g117949 = temp_output_279_0_g117949;
				half4 localSamplePlanar2D238_g117949 = SamplePlanar2D( Texture238_g117949 , Sampler238_g117949 , Coords238_g117949 , WorldPosition238_g117949 );
				TEXTURE2D(Texture246_g117949) = _TerrainShaderTex3;
				SamplerState Sampler246_g117949 = SS30_g118001;
				half4 Coords246_g117949 = temp_output_37_0_g117949;
				half3 WorldPosition246_g117949 = temp_output_279_0_g117949;
				float3 temp_output_280_0_g117949 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117949 = temp_output_280_0_g117949;
				half4 localSamplePlanar3D246_g117949 = SamplePlanar3D( Texture246_g117949 , Sampler246_g117949 , Coords246_g117949 , WorldPosition246_g117949 , WorldNormal246_g117949 );
				TEXTURE2D(Texture234_g117949) = _TerrainShaderTex3;
				SamplerState Sampler234_g117949 = SS30_g118001;
				float4 Coords234_g117949 = temp_output_37_0_g117949;
				float3 WorldPosition234_g117949 = temp_output_279_0_g117949;
				float4 localSampleStochastic2D234_g117949 = SampleStochastic2D( Texture234_g117949 , Sampler234_g117949 , Coords234_g117949 , WorldPosition234_g117949 );
				TEXTURE2D(Texture263_g117949) = _TerrainShaderTex3;
				SamplerState Sampler263_g117949 = SS30_g118001;
				half4 Coords263_g117949 = temp_output_37_0_g117949;
				half3 WorldPosition263_g117949 = temp_output_279_0_g117949;
				half3 WorldNormal263_g117949 = temp_output_280_0_g117949;
				half4 localSampleStochastic3D263_g117949 = SampleStochastic3D( Texture263_g117949 , Sampler263_g117949 , Coords263_g117949 , WorldPosition263_g117949 , WorldNormal263_g117949 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8641_g117895 = localSamplePlanar2D238_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8641_g117895 = localSamplePlanar3D246_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8641_g117895 = localSampleStochastic2D234_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8641_g117895 = localSampleStochastic3D263_g117949;
				#else
				float4 staticSwitch8641_g117895 = localSamplePlanar2D238_g117949;
				#endif
				float4 temp_output_7_0_g117908 = _TerrainShaderMin3;
				float4 temp_output_10_0_g117908 = ( _TerrainShaderMax3 - temp_output_7_0_g117908 );
				float4 temp_output_6978_0_g117895 = saturate( ( ( staticSwitch8641_g117895 - temp_output_7_0_g117908 ) / ( temp_output_10_0_g117908 + 0.0001 ) ) );
				half4 Masks_0312_g117901 = temp_output_6978_0_g117895;
				TEXTURE2D(Texture238_g117950) = _TerrainShaderTex4;
				SamplerState Sampler238_g117950 = SS30_g118001;
				half4 Input_Terrain_Coords_046791_g117895 = _TerrainCoord4;
				float4 temp_output_37_0_g117950 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117950 = temp_output_37_0_g117950;
				float3 temp_output_279_0_g117950 = Input_Position9197_g117895;
				half3 WorldPosition238_g117950 = temp_output_279_0_g117950;
				half4 localSamplePlanar2D238_g117950 = SamplePlanar2D( Texture238_g117950 , Sampler238_g117950 , Coords238_g117950 , WorldPosition238_g117950 );
				TEXTURE2D(Texture246_g117950) = _TerrainShaderTex4;
				SamplerState Sampler246_g117950 = SS30_g118001;
				half4 Coords246_g117950 = temp_output_37_0_g117950;
				half3 WorldPosition246_g117950 = temp_output_279_0_g117950;
				float3 temp_output_280_0_g117950 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117950 = temp_output_280_0_g117950;
				half4 localSamplePlanar3D246_g117950 = SamplePlanar3D( Texture246_g117950 , Sampler246_g117950 , Coords246_g117950 , WorldPosition246_g117950 , WorldNormal246_g117950 );
				TEXTURE2D(Texture234_g117950) = _TerrainShaderTex4;
				SamplerState Sampler234_g117950 = SS30_g118001;
				float4 Coords234_g117950 = temp_output_37_0_g117950;
				float3 WorldPosition234_g117950 = temp_output_279_0_g117950;
				float4 localSampleStochastic2D234_g117950 = SampleStochastic2D( Texture234_g117950 , Sampler234_g117950 , Coords234_g117950 , WorldPosition234_g117950 );
				TEXTURE2D(Texture263_g117950) = _TerrainShaderTex4;
				SamplerState Sampler263_g117950 = SS30_g118001;
				half4 Coords263_g117950 = temp_output_37_0_g117950;
				half3 WorldPosition263_g117950 = temp_output_279_0_g117950;
				half3 WorldNormal263_g117950 = temp_output_280_0_g117950;
				half4 localSampleStochastic3D263_g117950 = SampleStochastic3D( Texture263_g117950 , Sampler263_g117950 , Coords263_g117950 , WorldPosition263_g117950 , WorldNormal263_g117950 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8642_g117895 = localSamplePlanar2D238_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8642_g117895 = localSamplePlanar3D246_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8642_g117895 = localSampleStochastic2D234_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8642_g117895 = localSampleStochastic3D263_g117950;
				#else
				float4 staticSwitch8642_g117895 = localSamplePlanar2D238_g117950;
				#endif
				float4 temp_output_7_0_g117909 = _TerrainShaderMin4;
				float4 temp_output_10_0_g117909 = ( _TerrainShaderMax4 - temp_output_7_0_g117909 );
				float4 temp_output_6983_0_g117895 = saturate( ( ( staticSwitch8642_g117895 - temp_output_7_0_g117909 ) / ( temp_output_10_0_g117909 + 0.0001 ) ) );
				half4 Masks_0414_g117901 = temp_output_6983_0_g117895;
				float4 appendResult29_g117901 = (float4((Masks_015_g117901).z , (Masks_0210_g117901).z , (Masks_0312_g117901).z , (Masks_0414_g117901).z));
				half4 Control31_g117901 = Terrain_Control_047365_g117895;
				half4 Terrain_Height_047210_g117895 = ( appendResult29_g117901 * Control31_g117901 );
				float4 heights_047362_g117895 = Terrain_Height_047210_g117895;
				TEXTURE2D(Texture238_g117953) = _TerrainShaderTex5;
				SamplerState Sampler238_g117953 = SS30_g118001;
				half4 Input_Terrain_Coords_058750_g117895 = _TerrainCoord5;
				float4 temp_output_37_0_g117953 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117953 = temp_output_37_0_g117953;
				float3 temp_output_279_0_g117953 = Input_Position9197_g117895;
				half3 WorldPosition238_g117953 = temp_output_279_0_g117953;
				half4 localSamplePlanar2D238_g117953 = SamplePlanar2D( Texture238_g117953 , Sampler238_g117953 , Coords238_g117953 , WorldPosition238_g117953 );
				TEXTURE2D(Texture246_g117953) = _TerrainShaderTex5;
				SamplerState Sampler246_g117953 = SS30_g118001;
				half4 Coords246_g117953 = temp_output_37_0_g117953;
				half3 WorldPosition246_g117953 = temp_output_279_0_g117953;
				float3 temp_output_280_0_g117953 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117953 = temp_output_280_0_g117953;
				half4 localSamplePlanar3D246_g117953 = SamplePlanar3D( Texture246_g117953 , Sampler246_g117953 , Coords246_g117953 , WorldPosition246_g117953 , WorldNormal246_g117953 );
				TEXTURE2D(Texture234_g117953) = _TerrainShaderTex5;
				SamplerState Sampler234_g117953 = SS30_g118001;
				float4 Coords234_g117953 = temp_output_37_0_g117953;
				float3 WorldPosition234_g117953 = temp_output_279_0_g117953;
				float4 localSampleStochastic2D234_g117953 = SampleStochastic2D( Texture234_g117953 , Sampler234_g117953 , Coords234_g117953 , WorldPosition234_g117953 );
				TEXTURE2D(Texture263_g117953) = _TerrainShaderTex5;
				SamplerState Sampler263_g117953 = SS30_g118001;
				half4 Coords263_g117953 = temp_output_37_0_g117953;
				half3 WorldPosition263_g117953 = temp_output_279_0_g117953;
				half3 WorldNormal263_g117953 = temp_output_280_0_g117953;
				half4 localSampleStochastic3D263_g117953 = SampleStochastic3D( Texture263_g117953 , Sampler263_g117953 , Coords263_g117953 , WorldPosition263_g117953 , WorldNormal263_g117953 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8710_g117895 = localSamplePlanar2D238_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8710_g117895 = localSamplePlanar3D246_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8710_g117895 = localSampleStochastic2D234_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8710_g117895 = localSampleStochastic3D263_g117953;
				#else
				float4 staticSwitch8710_g117895 = localSamplePlanar2D238_g117953;
				#endif
				float4 temp_output_7_0_g117912 = _TerrainShaderMin5;
				float4 temp_output_10_0_g117912 = ( _TerrainShaderMax5 - temp_output_7_0_g117912 );
				float4 temp_output_8714_0_g117895 = saturate( ( ( staticSwitch8710_g117895 - temp_output_7_0_g117912 ) / ( temp_output_10_0_g117912 + 0.0001 ) ) );
				half4 Masks_015_g117913 = temp_output_8714_0_g117895;
				TEXTURE2D(Texture238_g117984) = _TerrainShaderTex6;
				SamplerState Sampler238_g117984 = SS30_g118001;
				half4 Input_Terrain_Coords_068751_g117895 = _TerrainCoord6;
				float4 temp_output_37_0_g117984 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117984 = temp_output_37_0_g117984;
				float3 temp_output_279_0_g117984 = Input_Position9197_g117895;
				half3 WorldPosition238_g117984 = temp_output_279_0_g117984;
				half4 localSamplePlanar2D238_g117984 = SamplePlanar2D( Texture238_g117984 , Sampler238_g117984 , Coords238_g117984 , WorldPosition238_g117984 );
				TEXTURE2D(Texture246_g117984) = _TerrainShaderTex6;
				SamplerState Sampler246_g117984 = SS30_g118001;
				half4 Coords246_g117984 = temp_output_37_0_g117984;
				half3 WorldPosition246_g117984 = temp_output_279_0_g117984;
				float3 temp_output_280_0_g117984 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117984 = temp_output_280_0_g117984;
				half4 localSamplePlanar3D246_g117984 = SamplePlanar3D( Texture246_g117984 , Sampler246_g117984 , Coords246_g117984 , WorldPosition246_g117984 , WorldNormal246_g117984 );
				TEXTURE2D(Texture234_g117984) = _TerrainShaderTex6;
				SamplerState Sampler234_g117984 = SS30_g118001;
				float4 Coords234_g117984 = temp_output_37_0_g117984;
				float3 WorldPosition234_g117984 = temp_output_279_0_g117984;
				float4 localSampleStochastic2D234_g117984 = SampleStochastic2D( Texture234_g117984 , Sampler234_g117984 , Coords234_g117984 , WorldPosition234_g117984 );
				TEXTURE2D(Texture263_g117984) = _TerrainShaderTex6;
				SamplerState Sampler263_g117984 = SS30_g118001;
				half4 Coords263_g117984 = temp_output_37_0_g117984;
				half3 WorldPosition263_g117984 = temp_output_279_0_g117984;
				half3 WorldNormal263_g117984 = temp_output_280_0_g117984;
				half4 localSampleStochastic3D263_g117984 = SampleStochastic3D( Texture263_g117984 , Sampler263_g117984 , Coords263_g117984 , WorldPosition263_g117984 , WorldNormal263_g117984 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8711_g117895 = localSamplePlanar2D238_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8711_g117895 = localSamplePlanar3D246_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8711_g117895 = localSampleStochastic2D234_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8711_g117895 = localSampleStochastic3D263_g117984;
				#else
				float4 staticSwitch8711_g117895 = localSamplePlanar2D238_g117984;
				#endif
				float4 temp_output_7_0_g117937 = _TerrainShaderMin6;
				float4 temp_output_10_0_g117937 = ( _TerrainShaderMax6 - temp_output_7_0_g117937 );
				float4 temp_output_8721_0_g117895 = saturate( ( ( staticSwitch8711_g117895 - temp_output_7_0_g117937 ) / ( temp_output_10_0_g117937 + 0.0001 ) ) );
				half4 Masks_0210_g117913 = temp_output_8721_0_g117895;
				TEXTURE2D(Texture238_g117985) = _TerrainShaderTex7;
				SamplerState Sampler238_g117985 = SS30_g118001;
				half4 Input_Terrain_Coords_078752_g117895 = _TerrainCoord7;
				float4 temp_output_37_0_g117985 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117985 = temp_output_37_0_g117985;
				float3 temp_output_279_0_g117985 = Input_Position9197_g117895;
				half3 WorldPosition238_g117985 = temp_output_279_0_g117985;
				half4 localSamplePlanar2D238_g117985 = SamplePlanar2D( Texture238_g117985 , Sampler238_g117985 , Coords238_g117985 , WorldPosition238_g117985 );
				TEXTURE2D(Texture246_g117985) = _TerrainShaderTex7;
				SamplerState Sampler246_g117985 = SS30_g118001;
				half4 Coords246_g117985 = temp_output_37_0_g117985;
				half3 WorldPosition246_g117985 = temp_output_279_0_g117985;
				float3 temp_output_280_0_g117985 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117985 = temp_output_280_0_g117985;
				half4 localSamplePlanar3D246_g117985 = SamplePlanar3D( Texture246_g117985 , Sampler246_g117985 , Coords246_g117985 , WorldPosition246_g117985 , WorldNormal246_g117985 );
				TEXTURE2D(Texture234_g117985) = _TerrainShaderTex7;
				SamplerState Sampler234_g117985 = SS30_g118001;
				float4 Coords234_g117985 = temp_output_37_0_g117985;
				float3 WorldPosition234_g117985 = temp_output_279_0_g117985;
				float4 localSampleStochastic2D234_g117985 = SampleStochastic2D( Texture234_g117985 , Sampler234_g117985 , Coords234_g117985 , WorldPosition234_g117985 );
				TEXTURE2D(Texture263_g117985) = _TerrainShaderTex7;
				SamplerState Sampler263_g117985 = SS30_g118001;
				half4 Coords263_g117985 = temp_output_37_0_g117985;
				half3 WorldPosition263_g117985 = temp_output_279_0_g117985;
				half3 WorldNormal263_g117985 = temp_output_280_0_g117985;
				half4 localSampleStochastic3D263_g117985 = SampleStochastic3D( Texture263_g117985 , Sampler263_g117985 , Coords263_g117985 , WorldPosition263_g117985 , WorldNormal263_g117985 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8712_g117895 = localSamplePlanar2D238_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8712_g117895 = localSamplePlanar3D246_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8712_g117895 = localSampleStochastic2D234_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8712_g117895 = localSampleStochastic3D263_g117985;
				#else
				float4 staticSwitch8712_g117895 = localSamplePlanar2D238_g117985;
				#endif
				float4 temp_output_7_0_g117938 = _TerrainShaderMin7;
				float4 temp_output_10_0_g117938 = ( _TerrainShaderMax7 - temp_output_7_0_g117938 );
				float4 temp_output_8724_0_g117895 = saturate( ( ( staticSwitch8712_g117895 - temp_output_7_0_g117938 ) / ( temp_output_10_0_g117938 + 0.0001 ) ) );
				half4 Masks_0312_g117913 = temp_output_8724_0_g117895;
				TEXTURE2D(Texture238_g117986) = _TerrainShaderTex8;
				SamplerState Sampler238_g117986 = SS30_g118001;
				half4 Input_Terrain_Coords_088749_g117895 = _TerrainCoord8;
				float4 temp_output_37_0_g117986 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117986 = temp_output_37_0_g117986;
				float3 temp_output_279_0_g117986 = Input_Position9197_g117895;
				half3 WorldPosition238_g117986 = temp_output_279_0_g117986;
				half4 localSamplePlanar2D238_g117986 = SamplePlanar2D( Texture238_g117986 , Sampler238_g117986 , Coords238_g117986 , WorldPosition238_g117986 );
				TEXTURE2D(Texture246_g117986) = _TerrainShaderTex8;
				SamplerState Sampler246_g117986 = SS30_g118001;
				half4 Coords246_g117986 = temp_output_37_0_g117986;
				half3 WorldPosition246_g117986 = temp_output_279_0_g117986;
				float3 temp_output_280_0_g117986 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117986 = temp_output_280_0_g117986;
				half4 localSamplePlanar3D246_g117986 = SamplePlanar3D( Texture246_g117986 , Sampler246_g117986 , Coords246_g117986 , WorldPosition246_g117986 , WorldNormal246_g117986 );
				TEXTURE2D(Texture234_g117986) = _TerrainShaderTex8;
				SamplerState Sampler234_g117986 = SS30_g118001;
				float4 Coords234_g117986 = temp_output_37_0_g117986;
				float3 WorldPosition234_g117986 = temp_output_279_0_g117986;
				float4 localSampleStochastic2D234_g117986 = SampleStochastic2D( Texture234_g117986 , Sampler234_g117986 , Coords234_g117986 , WorldPosition234_g117986 );
				TEXTURE2D(Texture263_g117986) = _TerrainShaderTex8;
				SamplerState Sampler263_g117986 = SS30_g118001;
				half4 Coords263_g117986 = temp_output_37_0_g117986;
				half3 WorldPosition263_g117986 = temp_output_279_0_g117986;
				half3 WorldNormal263_g117986 = temp_output_280_0_g117986;
				half4 localSampleStochastic3D263_g117986 = SampleStochastic3D( Texture263_g117986 , Sampler263_g117986 , Coords263_g117986 , WorldPosition263_g117986 , WorldNormal263_g117986 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8713_g117895 = localSamplePlanar2D238_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8713_g117895 = localSamplePlanar3D246_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8713_g117895 = localSampleStochastic2D234_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8713_g117895 = localSampleStochastic3D263_g117986;
				#else
				float4 staticSwitch8713_g117895 = localSamplePlanar2D238_g117986;
				#endif
				float4 temp_output_7_0_g117939 = _TerrainShaderMin8;
				float4 temp_output_10_0_g117939 = ( _TerrainShaderMax8 - temp_output_7_0_g117939 );
				float4 temp_output_8727_0_g117895 = saturate( ( ( staticSwitch8713_g117895 - temp_output_7_0_g117939 ) / ( temp_output_10_0_g117939 + 0.0001 ) ) );
				half4 Masks_0414_g117913 = temp_output_8727_0_g117895;
				float4 appendResult29_g117913 = (float4((Masks_015_g117913).z , (Masks_0210_g117913).z , (Masks_0312_g117913).z , (Masks_0414_g117913).z));
				half4 Control31_g117913 = Terrain_Control_087366_g117895;
				half4 Terrain_Height_088731_g117895 = ( appendResult29_g117913 * Control31_g117913 );
				float4 heights_087362_g117895 = Terrain_Height_088731_g117895;
				TEXTURE2D(Texture238_g117956) = _TerrainShaderTex9;
				SamplerState Sampler238_g117956 = SS30_g118001;
				half4 Input_Terrain_Coords_098833_g117895 = _TerrainCoord9;
				float4 temp_output_37_0_g117956 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117956 = temp_output_37_0_g117956;
				float3 temp_output_279_0_g117956 = Input_Position9197_g117895;
				half3 WorldPosition238_g117956 = temp_output_279_0_g117956;
				half4 localSamplePlanar2D238_g117956 = SamplePlanar2D( Texture238_g117956 , Sampler238_g117956 , Coords238_g117956 , WorldPosition238_g117956 );
				TEXTURE2D(Texture246_g117956) = _TerrainShaderTex9;
				SamplerState Sampler246_g117956 = SS30_g118001;
				half4 Coords246_g117956 = temp_output_37_0_g117956;
				half3 WorldPosition246_g117956 = temp_output_279_0_g117956;
				float3 temp_output_280_0_g117956 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117956 = temp_output_280_0_g117956;
				half4 localSamplePlanar3D246_g117956 = SamplePlanar3D( Texture246_g117956 , Sampler246_g117956 , Coords246_g117956 , WorldPosition246_g117956 , WorldNormal246_g117956 );
				TEXTURE2D(Texture234_g117956) = _TerrainShaderTex9;
				SamplerState Sampler234_g117956 = SS30_g118001;
				float4 Coords234_g117956 = temp_output_37_0_g117956;
				float3 WorldPosition234_g117956 = temp_output_279_0_g117956;
				float4 localSampleStochastic2D234_g117956 = SampleStochastic2D( Texture234_g117956 , Sampler234_g117956 , Coords234_g117956 , WorldPosition234_g117956 );
				TEXTURE2D(Texture263_g117956) = _TerrainShaderTex9;
				SamplerState Sampler263_g117956 = SS30_g118001;
				half4 Coords263_g117956 = temp_output_37_0_g117956;
				half3 WorldPosition263_g117956 = temp_output_279_0_g117956;
				half3 WorldNormal263_g117956 = temp_output_280_0_g117956;
				half4 localSampleStochastic3D263_g117956 = SampleStochastic3D( Texture263_g117956 , Sampler263_g117956 , Coords263_g117956 , WorldPosition263_g117956 , WorldNormal263_g117956 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8878_g117895 = localSamplePlanar2D238_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8878_g117895 = localSamplePlanar3D246_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8878_g117895 = localSampleStochastic2D234_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8878_g117895 = localSampleStochastic3D263_g117956;
				#else
				float4 staticSwitch8878_g117895 = localSamplePlanar2D238_g117956;
				#endif
				float4 temp_output_7_0_g117919 = _TerrainShaderMin9;
				float4 temp_output_10_0_g117919 = ( _TerrainShaderMax9 - temp_output_7_0_g117919 );
				float4 temp_output_8815_0_g117895 = saturate( ( ( staticSwitch8878_g117895 - temp_output_7_0_g117919 ) / ( temp_output_10_0_g117919 + 0.0001 ) ) );
				half4 Masks_015_g117920 = temp_output_8815_0_g117895;
				TEXTURE2D(Texture238_g117966) = _TerrainShaderTex10;
				SamplerState Sampler238_g117966 = SS30_g118001;
				half4 Input_Terrain_Coords_108834_g117895 = _TerrainCoord10;
				float4 temp_output_37_0_g117966 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117966 = temp_output_37_0_g117966;
				float3 temp_output_279_0_g117966 = Input_Position9197_g117895;
				half3 WorldPosition238_g117966 = temp_output_279_0_g117966;
				half4 localSamplePlanar2D238_g117966 = SamplePlanar2D( Texture238_g117966 , Sampler238_g117966 , Coords238_g117966 , WorldPosition238_g117966 );
				TEXTURE2D(Texture246_g117966) = _TerrainShaderTex10;
				SamplerState Sampler246_g117966 = SS30_g118001;
				half4 Coords246_g117966 = temp_output_37_0_g117966;
				half3 WorldPosition246_g117966 = temp_output_279_0_g117966;
				float3 temp_output_280_0_g117966 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117966 = temp_output_280_0_g117966;
				half4 localSamplePlanar3D246_g117966 = SamplePlanar3D( Texture246_g117966 , Sampler246_g117966 , Coords246_g117966 , WorldPosition246_g117966 , WorldNormal246_g117966 );
				TEXTURE2D(Texture234_g117966) = _TerrainShaderTex10;
				SamplerState Sampler234_g117966 = SS30_g118001;
				float4 Coords234_g117966 = temp_output_37_0_g117966;
				float3 WorldPosition234_g117966 = temp_output_279_0_g117966;
				float4 localSampleStochastic2D234_g117966 = SampleStochastic2D( Texture234_g117966 , Sampler234_g117966 , Coords234_g117966 , WorldPosition234_g117966 );
				TEXTURE2D(Texture263_g117966) = _TerrainShaderTex10;
				SamplerState Sampler263_g117966 = SS30_g118001;
				half4 Coords263_g117966 = temp_output_37_0_g117966;
				half3 WorldPosition263_g117966 = temp_output_279_0_g117966;
				half3 WorldNormal263_g117966 = temp_output_280_0_g117966;
				half4 localSampleStochastic3D263_g117966 = SampleStochastic3D( Texture263_g117966 , Sampler263_g117966 , Coords263_g117966 , WorldPosition263_g117966 , WorldNormal263_g117966 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8860_g117895 = localSamplePlanar2D238_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8860_g117895 = localSamplePlanar3D246_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8860_g117895 = localSampleStochastic2D234_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8860_g117895 = localSampleStochastic3D263_g117966;
				#else
				float4 staticSwitch8860_g117895 = localSamplePlanar2D238_g117966;
				#endif
				float4 temp_output_7_0_g117931 = _TerrainShaderMin10;
				float4 temp_output_10_0_g117931 = ( _TerrainShaderMax10 - temp_output_7_0_g117931 );
				float4 temp_output_8818_0_g117895 = saturate( ( ( staticSwitch8860_g117895 - temp_output_7_0_g117931 ) / ( temp_output_10_0_g117931 + 0.0001 ) ) );
				half4 Masks_0210_g117920 = temp_output_8818_0_g117895;
				TEXTURE2D(Texture238_g117967) = _TerrainShaderTex11;
				SamplerState Sampler238_g117967 = SS30_g118001;
				half4 Input_Terrain_Coords_118835_g117895 = _TerrainCoord11;
				float4 temp_output_37_0_g117967 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117967 = temp_output_37_0_g117967;
				float3 temp_output_279_0_g117967 = Input_Position9197_g117895;
				half3 WorldPosition238_g117967 = temp_output_279_0_g117967;
				half4 localSamplePlanar2D238_g117967 = SamplePlanar2D( Texture238_g117967 , Sampler238_g117967 , Coords238_g117967 , WorldPosition238_g117967 );
				TEXTURE2D(Texture246_g117967) = _TerrainShaderTex11;
				SamplerState Sampler246_g117967 = SS30_g118001;
				half4 Coords246_g117967 = temp_output_37_0_g117967;
				half3 WorldPosition246_g117967 = temp_output_279_0_g117967;
				float3 temp_output_280_0_g117967 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117967 = temp_output_280_0_g117967;
				half4 localSamplePlanar3D246_g117967 = SamplePlanar3D( Texture246_g117967 , Sampler246_g117967 , Coords246_g117967 , WorldPosition246_g117967 , WorldNormal246_g117967 );
				TEXTURE2D(Texture234_g117967) = _TerrainShaderTex11;
				SamplerState Sampler234_g117967 = SS30_g118001;
				float4 Coords234_g117967 = temp_output_37_0_g117967;
				float3 WorldPosition234_g117967 = temp_output_279_0_g117967;
				float4 localSampleStochastic2D234_g117967 = SampleStochastic2D( Texture234_g117967 , Sampler234_g117967 , Coords234_g117967 , WorldPosition234_g117967 );
				TEXTURE2D(Texture263_g117967) = _TerrainShaderTex11;
				SamplerState Sampler263_g117967 = SS30_g118001;
				half4 Coords263_g117967 = temp_output_37_0_g117967;
				half3 WorldPosition263_g117967 = temp_output_279_0_g117967;
				half3 WorldNormal263_g117967 = temp_output_280_0_g117967;
				half4 localSampleStochastic3D263_g117967 = SampleStochastic3D( Texture263_g117967 , Sampler263_g117967 , Coords263_g117967 , WorldPosition263_g117967 , WorldNormal263_g117967 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8861_g117895 = localSamplePlanar2D238_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8861_g117895 = localSamplePlanar3D246_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8861_g117895 = localSampleStochastic2D234_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8861_g117895 = localSampleStochastic3D263_g117967;
				#else
				float4 staticSwitch8861_g117895 = localSamplePlanar2D238_g117967;
				#endif
				float4 temp_output_7_0_g117932 = _TerrainShaderMin11;
				float4 temp_output_10_0_g117932 = ( _TerrainShaderMax11 - temp_output_7_0_g117932 );
				float4 temp_output_8819_0_g117895 = saturate( ( ( staticSwitch8861_g117895 - temp_output_7_0_g117932 ) / ( temp_output_10_0_g117932 + 0.0001 ) ) );
				half4 Masks_0312_g117920 = temp_output_8819_0_g117895;
				TEXTURE2D(Texture238_g117968) = _TerrainShaderTex12;
				SamplerState Sampler238_g117968 = SS30_g118001;
				half4 Input_Terrain_Coords_128836_g117895 = _TerrainCoord12;
				float4 temp_output_37_0_g117968 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117968 = temp_output_37_0_g117968;
				float3 temp_output_279_0_g117968 = Input_Position9197_g117895;
				half3 WorldPosition238_g117968 = temp_output_279_0_g117968;
				half4 localSamplePlanar2D238_g117968 = SamplePlanar2D( Texture238_g117968 , Sampler238_g117968 , Coords238_g117968 , WorldPosition238_g117968 );
				TEXTURE2D(Texture246_g117968) = _TerrainShaderTex12;
				SamplerState Sampler246_g117968 = SS30_g118001;
				half4 Coords246_g117968 = temp_output_37_0_g117968;
				half3 WorldPosition246_g117968 = temp_output_279_0_g117968;
				float3 temp_output_280_0_g117968 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117968 = temp_output_280_0_g117968;
				half4 localSamplePlanar3D246_g117968 = SamplePlanar3D( Texture246_g117968 , Sampler246_g117968 , Coords246_g117968 , WorldPosition246_g117968 , WorldNormal246_g117968 );
				TEXTURE2D(Texture234_g117968) = _TerrainShaderTex12;
				SamplerState Sampler234_g117968 = SS30_g118001;
				float4 Coords234_g117968 = temp_output_37_0_g117968;
				float3 WorldPosition234_g117968 = temp_output_279_0_g117968;
				float4 localSampleStochastic2D234_g117968 = SampleStochastic2D( Texture234_g117968 , Sampler234_g117968 , Coords234_g117968 , WorldPosition234_g117968 );
				TEXTURE2D(Texture263_g117968) = _TerrainShaderTex12;
				SamplerState Sampler263_g117968 = SS30_g118001;
				half4 Coords263_g117968 = temp_output_37_0_g117968;
				half3 WorldPosition263_g117968 = temp_output_279_0_g117968;
				half3 WorldNormal263_g117968 = temp_output_280_0_g117968;
				half4 localSampleStochastic3D263_g117968 = SampleStochastic3D( Texture263_g117968 , Sampler263_g117968 , Coords263_g117968 , WorldPosition263_g117968 , WorldNormal263_g117968 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8879_g117895 = localSamplePlanar2D238_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8879_g117895 = localSamplePlanar3D246_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8879_g117895 = localSampleStochastic2D234_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8879_g117895 = localSampleStochastic3D263_g117968;
				#else
				float4 staticSwitch8879_g117895 = localSamplePlanar2D238_g117968;
				#endif
				float4 temp_output_7_0_g117933 = _TerrainShaderMin12;
				float4 temp_output_10_0_g117933 = ( _TerrainShaderMax12 - temp_output_7_0_g117933 );
				float4 temp_output_8820_0_g117895 = saturate( ( ( staticSwitch8879_g117895 - temp_output_7_0_g117933 ) / ( temp_output_10_0_g117933 + 0.0001 ) ) );
				half4 Masks_0414_g117920 = temp_output_8820_0_g117895;
				float4 appendResult29_g117920 = (float4((Masks_015_g117920).z , (Masks_0210_g117920).z , (Masks_0312_g117920).z , (Masks_0414_g117920).z));
				half4 Control31_g117920 = Terrain_Control_127712_g117895;
				half4 Terrain_Height_128870_g117895 = ( appendResult29_g117920 * Control31_g117920 );
				float4 heights_127362_g117895 = Terrain_Height_128870_g117895;
				TEXTURE2D(Texture238_g117964) = _TerrainShaderTex13;
				SamplerState Sampler238_g117964 = SS30_g118001;
				half4 Input_Terrain_Coords_138960_g117895 = _TerrainCoord13;
				float4 temp_output_37_0_g117964 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117964 = temp_output_37_0_g117964;
				float3 temp_output_279_0_g117964 = Input_Position9197_g117895;
				half3 WorldPosition238_g117964 = temp_output_279_0_g117964;
				half4 localSamplePlanar2D238_g117964 = SamplePlanar2D( Texture238_g117964 , Sampler238_g117964 , Coords238_g117964 , WorldPosition238_g117964 );
				TEXTURE2D(Texture246_g117964) = _TerrainShaderTex13;
				SamplerState Sampler246_g117964 = SS30_g118001;
				half4 Coords246_g117964 = temp_output_37_0_g117964;
				half3 WorldPosition246_g117964 = temp_output_279_0_g117964;
				float3 temp_output_280_0_g117964 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117964 = temp_output_280_0_g117964;
				half4 localSamplePlanar3D246_g117964 = SamplePlanar3D( Texture246_g117964 , Sampler246_g117964 , Coords246_g117964 , WorldPosition246_g117964 , WorldNormal246_g117964 );
				TEXTURE2D(Texture234_g117964) = _TerrainShaderTex13;
				SamplerState Sampler234_g117964 = SS30_g118001;
				float4 Coords234_g117964 = temp_output_37_0_g117964;
				float3 WorldPosition234_g117964 = temp_output_279_0_g117964;
				float4 localSampleStochastic2D234_g117964 = SampleStochastic2D( Texture234_g117964 , Sampler234_g117964 , Coords234_g117964 , WorldPosition234_g117964 );
				TEXTURE2D(Texture263_g117964) = _TerrainShaderTex13;
				SamplerState Sampler263_g117964 = SS30_g118001;
				half4 Coords263_g117964 = temp_output_37_0_g117964;
				half3 WorldPosition263_g117964 = temp_output_279_0_g117964;
				half3 WorldNormal263_g117964 = temp_output_280_0_g117964;
				half4 localSampleStochastic3D263_g117964 = SampleStochastic3D( Texture263_g117964 , Sampler263_g117964 , Coords263_g117964 , WorldPosition263_g117964 , WorldNormal263_g117964 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch9000_g117895 = localSamplePlanar2D238_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch9000_g117895 = localSamplePlanar3D246_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch9000_g117895 = localSampleStochastic2D234_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch9000_g117895 = localSampleStochastic3D263_g117964;
				#else
				float4 staticSwitch9000_g117895 = localSamplePlanar2D238_g117964;
				#endif
				float4 temp_output_7_0_g117926 = _TerrainShaderMin13;
				float4 temp_output_10_0_g117926 = ( _TerrainShaderMax13 - temp_output_7_0_g117926 );
				float4 temp_output_8931_0_g117895 = saturate( ( ( staticSwitch9000_g117895 - temp_output_7_0_g117926 ) / ( temp_output_10_0_g117926 + 0.0001 ) ) );
				half4 Masks_015_g117927 = temp_output_8931_0_g117895;
				TEXTURE2D(Texture238_g117975) = _TerrainShaderTex14;
				SamplerState Sampler238_g117975 = SS30_g118001;
				half4 Input_Terrain_Coords_148961_g117895 = _TerrainCoord14;
				float4 temp_output_37_0_g117975 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117975 = temp_output_37_0_g117975;
				float3 temp_output_279_0_g117975 = Input_Position9197_g117895;
				half3 WorldPosition238_g117975 = temp_output_279_0_g117975;
				half4 localSamplePlanar2D238_g117975 = SamplePlanar2D( Texture238_g117975 , Sampler238_g117975 , Coords238_g117975 , WorldPosition238_g117975 );
				TEXTURE2D(Texture246_g117975) = _TerrainShaderTex14;
				SamplerState Sampler246_g117975 = SS30_g118001;
				half4 Coords246_g117975 = temp_output_37_0_g117975;
				half3 WorldPosition246_g117975 = temp_output_279_0_g117975;
				float3 temp_output_280_0_g117975 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117975 = temp_output_280_0_g117975;
				half4 localSamplePlanar3D246_g117975 = SamplePlanar3D( Texture246_g117975 , Sampler246_g117975 , Coords246_g117975 , WorldPosition246_g117975 , WorldNormal246_g117975 );
				TEXTURE2D(Texture234_g117975) = _TerrainShaderTex14;
				SamplerState Sampler234_g117975 = SS30_g118001;
				float4 Coords234_g117975 = temp_output_37_0_g117975;
				float3 WorldPosition234_g117975 = temp_output_279_0_g117975;
				float4 localSampleStochastic2D234_g117975 = SampleStochastic2D( Texture234_g117975 , Sampler234_g117975 , Coords234_g117975 , WorldPosition234_g117975 );
				TEXTURE2D(Texture263_g117975) = _TerrainShaderTex14;
				SamplerState Sampler263_g117975 = SS30_g118001;
				half4 Coords263_g117975 = temp_output_37_0_g117975;
				half3 WorldPosition263_g117975 = temp_output_279_0_g117975;
				half3 WorldNormal263_g117975 = temp_output_280_0_g117975;
				half4 localSampleStochastic3D263_g117975 = SampleStochastic3D( Texture263_g117975 , Sampler263_g117975 , Coords263_g117975 , WorldPosition263_g117975 , WorldNormal263_g117975 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch9001_g117895 = localSamplePlanar2D238_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch9001_g117895 = localSamplePlanar3D246_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch9001_g117895 = localSampleStochastic2D234_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch9001_g117895 = localSampleStochastic3D263_g117975;
				#else
				float4 staticSwitch9001_g117895 = localSamplePlanar2D238_g117975;
				#endif
				float4 temp_output_7_0_g117934 = _TerrainShaderMin14;
				float4 temp_output_10_0_g117934 = ( _TerrainShaderMax14 - temp_output_7_0_g117934 );
				float4 temp_output_8934_0_g117895 = saturate( ( ( staticSwitch9001_g117895 - temp_output_7_0_g117934 ) / ( temp_output_10_0_g117934 + 0.0001 ) ) );
				half4 Masks_0210_g117927 = temp_output_8934_0_g117895;
				TEXTURE2D(Texture238_g117976) = _TerrainShaderTex15;
				SamplerState Sampler238_g117976 = SS30_g118001;
				half4 Input_Terrain_Coords_158962_g117895 = _TerrainCoord15;
				float4 temp_output_37_0_g117976 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117976 = temp_output_37_0_g117976;
				float3 temp_output_279_0_g117976 = Input_Position9197_g117895;
				half3 WorldPosition238_g117976 = temp_output_279_0_g117976;
				half4 localSamplePlanar2D238_g117976 = SamplePlanar2D( Texture238_g117976 , Sampler238_g117976 , Coords238_g117976 , WorldPosition238_g117976 );
				TEXTURE2D(Texture246_g117976) = _TerrainShaderTex15;
				SamplerState Sampler246_g117976 = SS30_g118001;
				half4 Coords246_g117976 = temp_output_37_0_g117976;
				half3 WorldPosition246_g117976 = temp_output_279_0_g117976;
				float3 temp_output_280_0_g117976 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117976 = temp_output_280_0_g117976;
				half4 localSamplePlanar3D246_g117976 = SamplePlanar3D( Texture246_g117976 , Sampler246_g117976 , Coords246_g117976 , WorldPosition246_g117976 , WorldNormal246_g117976 );
				TEXTURE2D(Texture234_g117976) = _TerrainShaderTex15;
				SamplerState Sampler234_g117976 = SS30_g118001;
				float4 Coords234_g117976 = temp_output_37_0_g117976;
				float3 WorldPosition234_g117976 = temp_output_279_0_g117976;
				float4 localSampleStochastic2D234_g117976 = SampleStochastic2D( Texture234_g117976 , Sampler234_g117976 , Coords234_g117976 , WorldPosition234_g117976 );
				TEXTURE2D(Texture263_g117976) = _TerrainShaderTex15;
				SamplerState Sampler263_g117976 = SS30_g118001;
				half4 Coords263_g117976 = temp_output_37_0_g117976;
				half3 WorldPosition263_g117976 = temp_output_279_0_g117976;
				half3 WorldNormal263_g117976 = temp_output_280_0_g117976;
				half4 localSampleStochastic3D263_g117976 = SampleStochastic3D( Texture263_g117976 , Sampler263_g117976 , Coords263_g117976 , WorldPosition263_g117976 , WorldNormal263_g117976 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch9002_g117895 = localSamplePlanar2D238_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch9002_g117895 = localSamplePlanar3D246_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch9002_g117895 = localSampleStochastic2D234_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch9002_g117895 = localSampleStochastic3D263_g117976;
				#else
				float4 staticSwitch9002_g117895 = localSamplePlanar2D238_g117976;
				#endif
				float4 temp_output_7_0_g117935 = _TerrainShaderMin15;
				float4 temp_output_10_0_g117935 = ( _TerrainShaderMax15 - temp_output_7_0_g117935 );
				float4 temp_output_8935_0_g117895 = saturate( ( ( staticSwitch9002_g117895 - temp_output_7_0_g117935 ) / ( temp_output_10_0_g117935 + 0.0001 ) ) );
				half4 Masks_0312_g117927 = temp_output_8935_0_g117895;
				TEXTURE2D(Texture238_g117977) = _TerrainShaderTex16;
				SamplerState Sampler238_g117977 = SS30_g118001;
				half4 Input_Terrain_Coords_168959_g117895 = _TerrainCoord16;
				float4 temp_output_37_0_g117977 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117977 = temp_output_37_0_g117977;
				float3 temp_output_279_0_g117977 = Input_Position9197_g117895;
				half3 WorldPosition238_g117977 = temp_output_279_0_g117977;
				half4 localSamplePlanar2D238_g117977 = SamplePlanar2D( Texture238_g117977 , Sampler238_g117977 , Coords238_g117977 , WorldPosition238_g117977 );
				TEXTURE2D(Texture246_g117977) = _TerrainShaderTex16;
				SamplerState Sampler246_g117977 = SS30_g118001;
				half4 Coords246_g117977 = temp_output_37_0_g117977;
				half3 WorldPosition246_g117977 = temp_output_279_0_g117977;
				float3 temp_output_280_0_g117977 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117977 = temp_output_280_0_g117977;
				half4 localSamplePlanar3D246_g117977 = SamplePlanar3D( Texture246_g117977 , Sampler246_g117977 , Coords246_g117977 , WorldPosition246_g117977 , WorldNormal246_g117977 );
				TEXTURE2D(Texture234_g117977) = _TerrainShaderTex16;
				SamplerState Sampler234_g117977 = SS30_g118001;
				float4 Coords234_g117977 = temp_output_37_0_g117977;
				float3 WorldPosition234_g117977 = temp_output_279_0_g117977;
				float4 localSampleStochastic2D234_g117977 = SampleStochastic2D( Texture234_g117977 , Sampler234_g117977 , Coords234_g117977 , WorldPosition234_g117977 );
				TEXTURE2D(Texture263_g117977) = _TerrainShaderTex16;
				SamplerState Sampler263_g117977 = SS30_g118001;
				half4 Coords263_g117977 = temp_output_37_0_g117977;
				half3 WorldPosition263_g117977 = temp_output_279_0_g117977;
				half3 WorldNormal263_g117977 = temp_output_280_0_g117977;
				half4 localSampleStochastic3D263_g117977 = SampleStochastic3D( Texture263_g117977 , Sampler263_g117977 , Coords263_g117977 , WorldPosition263_g117977 , WorldNormal263_g117977 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch9003_g117895 = localSamplePlanar2D238_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch9003_g117895 = localSamplePlanar3D246_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch9003_g117895 = localSampleStochastic2D234_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch9003_g117895 = localSampleStochastic3D263_g117977;
				#else
				float4 staticSwitch9003_g117895 = localSamplePlanar2D238_g117977;
				#endif
				float4 temp_output_7_0_g117936 = _TerrainShaderMin16;
				float4 temp_output_10_0_g117936 = ( _TerrainShaderMax16 - temp_output_7_0_g117936 );
				float4 temp_output_8936_0_g117895 = saturate( ( ( staticSwitch9003_g117895 - temp_output_7_0_g117936 ) / ( temp_output_10_0_g117936 + 0.0001 ) ) );
				half4 Masks_0414_g117927 = temp_output_8936_0_g117895;
				float4 appendResult29_g117927 = (float4((Masks_015_g117927).z , (Masks_0210_g117927).z , (Masks_0312_g117927).z , (Masks_0414_g117927).z));
				half4 Control31_g117927 = Terrain_Control_167711_g117895;
				half4 Terrain_Height_169015_g117895 = ( appendResult29_g117927 * Control31_g117927 );
				float4 heights_167362_g117895 = Terrain_Height_169015_g117895;
				float heightTransition7362_g117895 = ( 1.0 - _TerrainHeightBlendValue );
				float4 weights_047362_g117895 = float4( 0,0,0,0 );
				float4 weights_087362_g117895 = float4( 0,0,0,0 );
				float4 weights_127362_g117895 = float4( 0,0,0,0 );
				float4 weights_167362_g117895 = float4( 0,0,0,0 );
				//Modified version of the HDRP terrain height based blending
				float maxHeight = 0;
				float4 weightedHeights_04 = float4( 0,0,0,0 );
				float4 weightedHeights_08 = float4( 0,0,0,0 );
				float4 weightedHeights_12 = float4( 0,0,0,0 );
				float4 weightedHeights_16 = float4( 0,0,0,0 );
				maxHeight = heights_047362_g117895.x;
				maxHeight = max(maxHeight, heights_047362_g117895.y);
				maxHeight = max(maxHeight, heights_047362_g117895.z);
				maxHeight = max(maxHeight, heights_047362_g117895.w);
				#ifdef TVE_TERRAIN_08
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				#endif
				#ifdef TVE_TERRAIN_12
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				maxHeight = max(maxHeight, heights_127362_g117895.x);
				maxHeight = max(maxHeight, heights_127362_g117895.y);
				maxHeight = max(maxHeight, heights_127362_g117895.z);
				maxHeight = max(maxHeight, heights_127362_g117895.w);
				#endif
				#ifdef TVE_TERRAIN_16
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				maxHeight = max(maxHeight, heights_127362_g117895.x);
				maxHeight = max(maxHeight, heights_127362_g117895.y);
				maxHeight = max(maxHeight, heights_127362_g117895.z);
				maxHeight = max(maxHeight, heights_127362_g117895.w);
				maxHeight = max(maxHeight, heights_167362_g117895.x);
				maxHeight = max(maxHeight, heights_167362_g117895.y);
				maxHeight = max(maxHeight, heights_167362_g117895.z);
				maxHeight = max(maxHeight, heights_167362_g117895.w);
				#endif
				float transition = max(heightTransition7362_g117895, 0.01);
				weightedHeights_04 = float4 ( heights_047362_g117895.x, heights_047362_g117895.y, heights_047362_g117895.z, heights_047362_g117895.w );
				weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
				weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g117895;
				#ifdef TVE_TERRAIN_08
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				#endif
				#ifdef TVE_TERRAIN_12
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				weightedHeights_12 = float4 ( heights_127362_g117895.x, heights_127362_g117895.y, heights_127362_g117895.z, heights_127362_g117895.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g117895;
				#endif
				#ifdef TVE_TERRAIN_16
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				weightedHeights_12 = float4 ( heights_127362_g117895.x, heights_127362_g117895.y, heights_127362_g117895.z, heights_127362_g117895.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g117895;
				weightedHeights_16 = float4 ( heights_167362_g117895.x, heights_167362_g117895.y, heights_167362_g117895.z, heights_167362_g117895.w );
				weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
				weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g117895;
				#endif
				float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
				float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
				float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
				float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
				float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
				weights_047362_g117895 = weightedHeights_04 / sumHeight.xxxx;
				#ifdef TVE_TERRAIN_08
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_12
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g117895 = weightedHeights_12 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_16
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g117895 = weightedHeights_12 / sumHeight.xxxx;
				weights_167362_g117895 = weightedHeights_16 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8792_g117895 = weights_047362_g117895;
				#else
				float4 staticSwitch8792_g117895 = control_047362_g117895;
				#endif
				half4 Terrain_Weights_046781_g117895 = staticSwitch8792_g117895;
				half4 Weights52_g117900 = Terrain_Weights_046781_g117895;
				TEXTURE2D(Texture238_g117941) = _TerrainAlbedoTex1;
				float localFilterTexture19_g117998 = ( 0.0 );
				SamplerState SamplerDefault19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g117998 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g117998 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g117998 = SamplerDefault19_g117998;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g117998 = SamplerDefault19_g117998;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g117998 = SamplerPoint19_g117998;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g117998 = SamplerLow19_g117998;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g117998 = SamplerMedium19_g117998;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g117998 = SamplerHigh19_g117998;
				#endif
				SamplerState Sampler238_g117941 = SS19_g117998;
				float4 temp_output_37_0_g117941 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117941 = temp_output_37_0_g117941;
				float3 temp_output_279_0_g117941 = Input_Position9197_g117895;
				half3 WorldPosition238_g117941 = temp_output_279_0_g117941;
				half4 localSamplePlanar2D238_g117941 = SamplePlanar2D( Texture238_g117941 , Sampler238_g117941 , Coords238_g117941 , WorldPosition238_g117941 );
				TEXTURE2D(Texture246_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler246_g117941 = SS19_g117998;
				half4 Coords246_g117941 = temp_output_37_0_g117941;
				half3 WorldPosition246_g117941 = temp_output_279_0_g117941;
				float3 temp_output_280_0_g117941 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117941 = temp_output_280_0_g117941;
				half4 localSamplePlanar3D246_g117941 = SamplePlanar3D( Texture246_g117941 , Sampler246_g117941 , Coords246_g117941 , WorldPosition246_g117941 , WorldNormal246_g117941 );
				TEXTURE2D(Texture234_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler234_g117941 = SS19_g117998;
				float4 Coords234_g117941 = temp_output_37_0_g117941;
				float3 WorldPosition234_g117941 = temp_output_279_0_g117941;
				float4 localSampleStochastic2D234_g117941 = SampleStochastic2D( Texture234_g117941 , Sampler234_g117941 , Coords234_g117941 , WorldPosition234_g117941 );
				TEXTURE2D(Texture263_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler263_g117941 = SS19_g117998;
				half4 Coords263_g117941 = temp_output_37_0_g117941;
				half3 WorldPosition263_g117941 = temp_output_279_0_g117941;
				half3 WorldNormal263_g117941 = temp_output_280_0_g117941;
				half4 localSampleStochastic3D263_g117941 = SampleStochastic3D( Texture263_g117941 , Sampler263_g117941 , Coords263_g117941 , WorldPosition263_g117941 , WorldNormal263_g117941 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8614_g117895 = localSamplePlanar2D238_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8614_g117895 = localSamplePlanar3D246_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8614_g117895 = localSampleStochastic2D234_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8614_g117895 = localSampleStochastic3D263_g117941;
				#else
				float4 staticSwitch8614_g117895 = localSamplePlanar2D238_g117941;
				#endif
				half4 Layer133_g117900 = staticSwitch8614_g117895;
				TEXTURE2D(Texture238_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler238_g117942 = SS19_g117998;
				float4 temp_output_37_0_g117942 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117942 = temp_output_37_0_g117942;
				float3 temp_output_279_0_g117942 = Input_Position9197_g117895;
				half3 WorldPosition238_g117942 = temp_output_279_0_g117942;
				half4 localSamplePlanar2D238_g117942 = SamplePlanar2D( Texture238_g117942 , Sampler238_g117942 , Coords238_g117942 , WorldPosition238_g117942 );
				TEXTURE2D(Texture246_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler246_g117942 = SS19_g117998;
				half4 Coords246_g117942 = temp_output_37_0_g117942;
				half3 WorldPosition246_g117942 = temp_output_279_0_g117942;
				float3 temp_output_280_0_g117942 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117942 = temp_output_280_0_g117942;
				half4 localSamplePlanar3D246_g117942 = SamplePlanar3D( Texture246_g117942 , Sampler246_g117942 , Coords246_g117942 , WorldPosition246_g117942 , WorldNormal246_g117942 );
				TEXTURE2D(Texture234_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler234_g117942 = SS19_g117998;
				float4 Coords234_g117942 = temp_output_37_0_g117942;
				float3 WorldPosition234_g117942 = temp_output_279_0_g117942;
				float4 localSampleStochastic2D234_g117942 = SampleStochastic2D( Texture234_g117942 , Sampler234_g117942 , Coords234_g117942 , WorldPosition234_g117942 );
				TEXTURE2D(Texture263_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler263_g117942 = SS19_g117998;
				half4 Coords263_g117942 = temp_output_37_0_g117942;
				half3 WorldPosition263_g117942 = temp_output_279_0_g117942;
				half3 WorldNormal263_g117942 = temp_output_280_0_g117942;
				half4 localSampleStochastic3D263_g117942 = SampleStochastic3D( Texture263_g117942 , Sampler263_g117942 , Coords263_g117942 , WorldPosition263_g117942 , WorldNormal263_g117942 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8629_g117895 = localSamplePlanar2D238_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8629_g117895 = localSamplePlanar3D246_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8629_g117895 = localSampleStochastic2D234_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8629_g117895 = localSampleStochastic3D263_g117942;
				#else
				float4 staticSwitch8629_g117895 = localSamplePlanar2D238_g117942;
				#endif
				half4 Layer237_g117900 = staticSwitch8629_g117895;
				TEXTURE2D(Texture238_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler238_g117945 = SS19_g117998;
				float4 temp_output_37_0_g117945 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117945 = temp_output_37_0_g117945;
				float3 temp_output_279_0_g117945 = Input_Position9197_g117895;
				half3 WorldPosition238_g117945 = temp_output_279_0_g117945;
				half4 localSamplePlanar2D238_g117945 = SamplePlanar2D( Texture238_g117945 , Sampler238_g117945 , Coords238_g117945 , WorldPosition238_g117945 );
				TEXTURE2D(Texture246_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler246_g117945 = SS19_g117998;
				half4 Coords246_g117945 = temp_output_37_0_g117945;
				half3 WorldPosition246_g117945 = temp_output_279_0_g117945;
				float3 temp_output_280_0_g117945 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117945 = temp_output_280_0_g117945;
				half4 localSamplePlanar3D246_g117945 = SamplePlanar3D( Texture246_g117945 , Sampler246_g117945 , Coords246_g117945 , WorldPosition246_g117945 , WorldNormal246_g117945 );
				TEXTURE2D(Texture234_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler234_g117945 = SS19_g117998;
				float4 Coords234_g117945 = temp_output_37_0_g117945;
				float3 WorldPosition234_g117945 = temp_output_279_0_g117945;
				float4 localSampleStochastic2D234_g117945 = SampleStochastic2D( Texture234_g117945 , Sampler234_g117945 , Coords234_g117945 , WorldPosition234_g117945 );
				TEXTURE2D(Texture263_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler263_g117945 = SS19_g117998;
				half4 Coords263_g117945 = temp_output_37_0_g117945;
				half3 WorldPosition263_g117945 = temp_output_279_0_g117945;
				half3 WorldNormal263_g117945 = temp_output_280_0_g117945;
				half4 localSampleStochastic3D263_g117945 = SampleStochastic3D( Texture263_g117945 , Sampler263_g117945 , Coords263_g117945 , WorldPosition263_g117945 , WorldNormal263_g117945 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8630_g117895 = localSamplePlanar2D238_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8630_g117895 = localSamplePlanar3D246_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8630_g117895 = localSampleStochastic2D234_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8630_g117895 = localSampleStochastic3D263_g117945;
				#else
				float4 staticSwitch8630_g117895 = localSamplePlanar2D238_g117945;
				#endif
				half4 Layer338_g117900 = staticSwitch8630_g117895;
				TEXTURE2D(Texture238_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler238_g117947 = SS19_g117998;
				float4 temp_output_37_0_g117947 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117947 = temp_output_37_0_g117947;
				float3 temp_output_279_0_g117947 = Input_Position9197_g117895;
				half3 WorldPosition238_g117947 = temp_output_279_0_g117947;
				half4 localSamplePlanar2D238_g117947 = SamplePlanar2D( Texture238_g117947 , Sampler238_g117947 , Coords238_g117947 , WorldPosition238_g117947 );
				TEXTURE2D(Texture246_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler246_g117947 = SS19_g117998;
				half4 Coords246_g117947 = temp_output_37_0_g117947;
				half3 WorldPosition246_g117947 = temp_output_279_0_g117947;
				float3 temp_output_280_0_g117947 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117947 = temp_output_280_0_g117947;
				half4 localSamplePlanar3D246_g117947 = SamplePlanar3D( Texture246_g117947 , Sampler246_g117947 , Coords246_g117947 , WorldPosition246_g117947 , WorldNormal246_g117947 );
				TEXTURE2D(Texture234_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler234_g117947 = SS19_g117998;
				float4 Coords234_g117947 = temp_output_37_0_g117947;
				float3 WorldPosition234_g117947 = temp_output_279_0_g117947;
				float4 localSampleStochastic2D234_g117947 = SampleStochastic2D( Texture234_g117947 , Sampler234_g117947 , Coords234_g117947 , WorldPosition234_g117947 );
				TEXTURE2D(Texture263_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler263_g117947 = SS19_g117998;
				half4 Coords263_g117947 = temp_output_37_0_g117947;
				half3 WorldPosition263_g117947 = temp_output_279_0_g117947;
				half3 WorldNormal263_g117947 = temp_output_280_0_g117947;
				half4 localSampleStochastic3D263_g117947 = SampleStochastic3D( Texture263_g117947 , Sampler263_g117947 , Coords263_g117947 , WorldPosition263_g117947 , WorldNormal263_g117947 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8631_g117895 = localSamplePlanar2D238_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8631_g117895 = localSamplePlanar3D246_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8631_g117895 = localSampleStochastic2D234_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8631_g117895 = localSampleStochastic3D263_g117947;
				#else
				float4 staticSwitch8631_g117895 = localSamplePlanar2D238_g117947;
				#endif
				half4 Layer439_g117900 = staticSwitch8631_g117895;
				float4 weightedBlendVar31_g117900 = Weights52_g117900;
				float4 weightedBlend31_g117900 = ( weightedBlendVar31_g117900.x*Layer133_g117900 + weightedBlendVar31_g117900.y*Layer237_g117900 + weightedBlendVar31_g117900.z*Layer338_g117900 + weightedBlendVar31_g117900.w*Layer439_g117900 );
				half4 Terrain_AAAA_047200_g117895 = weightedBlend31_g117900;
				half4 Layer_045_g117903 = Terrain_AAAA_047200_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8793_g117895 = weights_087362_g117895;
				#else
				float4 staticSwitch8793_g117895 = control_087362_g117895;
				#endif
				half4 Terrain_Weights_087340_g117895 = staticSwitch8793_g117895;
				half4 Weights52_g117910 = Terrain_Weights_087340_g117895;
				TEXTURE2D(Texture238_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler238_g117951 = SS19_g117998;
				float4 temp_output_37_0_g117951 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117951 = temp_output_37_0_g117951;
				float3 temp_output_279_0_g117951 = Input_Position9197_g117895;
				half3 WorldPosition238_g117951 = temp_output_279_0_g117951;
				half4 localSamplePlanar2D238_g117951 = SamplePlanar2D( Texture238_g117951 , Sampler238_g117951 , Coords238_g117951 , WorldPosition238_g117951 );
				TEXTURE2D(Texture246_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler246_g117951 = SS19_g117998;
				half4 Coords246_g117951 = temp_output_37_0_g117951;
				half3 WorldPosition246_g117951 = temp_output_279_0_g117951;
				float3 temp_output_280_0_g117951 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117951 = temp_output_280_0_g117951;
				half4 localSamplePlanar3D246_g117951 = SamplePlanar3D( Texture246_g117951 , Sampler246_g117951 , Coords246_g117951 , WorldPosition246_g117951 , WorldNormal246_g117951 );
				TEXTURE2D(Texture234_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler234_g117951 = SS19_g117998;
				float4 Coords234_g117951 = temp_output_37_0_g117951;
				float3 WorldPosition234_g117951 = temp_output_279_0_g117951;
				float4 localSampleStochastic2D234_g117951 = SampleStochastic2D( Texture234_g117951 , Sampler234_g117951 , Coords234_g117951 , WorldPosition234_g117951 );
				TEXTURE2D(Texture263_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler263_g117951 = SS19_g117998;
				half4 Coords263_g117951 = temp_output_37_0_g117951;
				half3 WorldPosition263_g117951 = temp_output_279_0_g117951;
				half3 WorldNormal263_g117951 = temp_output_280_0_g117951;
				half4 localSampleStochastic3D263_g117951 = SampleStochastic3D( Texture263_g117951 , Sampler263_g117951 , Coords263_g117951 , WorldPosition263_g117951 , WorldNormal263_g117951 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8690_g117895 = localSamplePlanar2D238_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8690_g117895 = localSamplePlanar3D246_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8690_g117895 = localSampleStochastic2D234_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8690_g117895 = localSampleStochastic3D263_g117951;
				#else
				float4 staticSwitch8690_g117895 = localSamplePlanar2D238_g117951;
				#endif
				half4 Layer133_g117910 = staticSwitch8690_g117895;
				TEXTURE2D(Texture238_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler238_g117978 = SS19_g117998;
				float4 temp_output_37_0_g117978 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117978 = temp_output_37_0_g117978;
				float3 temp_output_279_0_g117978 = Input_Position9197_g117895;
				half3 WorldPosition238_g117978 = temp_output_279_0_g117978;
				half4 localSamplePlanar2D238_g117978 = SamplePlanar2D( Texture238_g117978 , Sampler238_g117978 , Coords238_g117978 , WorldPosition238_g117978 );
				TEXTURE2D(Texture246_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler246_g117978 = SS19_g117998;
				half4 Coords246_g117978 = temp_output_37_0_g117978;
				half3 WorldPosition246_g117978 = temp_output_279_0_g117978;
				float3 temp_output_280_0_g117978 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117978 = temp_output_280_0_g117978;
				half4 localSamplePlanar3D246_g117978 = SamplePlanar3D( Texture246_g117978 , Sampler246_g117978 , Coords246_g117978 , WorldPosition246_g117978 , WorldNormal246_g117978 );
				TEXTURE2D(Texture234_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler234_g117978 = SS19_g117998;
				float4 Coords234_g117978 = temp_output_37_0_g117978;
				float3 WorldPosition234_g117978 = temp_output_279_0_g117978;
				float4 localSampleStochastic2D234_g117978 = SampleStochastic2D( Texture234_g117978 , Sampler234_g117978 , Coords234_g117978 , WorldPosition234_g117978 );
				TEXTURE2D(Texture263_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler263_g117978 = SS19_g117998;
				half4 Coords263_g117978 = temp_output_37_0_g117978;
				half3 WorldPosition263_g117978 = temp_output_279_0_g117978;
				half3 WorldNormal263_g117978 = temp_output_280_0_g117978;
				half4 localSampleStochastic3D263_g117978 = SampleStochastic3D( Texture263_g117978 , Sampler263_g117978 , Coords263_g117978 , WorldPosition263_g117978 , WorldNormal263_g117978 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8691_g117895 = localSamplePlanar2D238_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8691_g117895 = localSamplePlanar3D246_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8691_g117895 = localSampleStochastic2D234_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8691_g117895 = localSampleStochastic3D263_g117978;
				#else
				float4 staticSwitch8691_g117895 = localSamplePlanar2D238_g117978;
				#endif
				half4 Layer237_g117910 = staticSwitch8691_g117895;
				TEXTURE2D(Texture238_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler238_g117979 = SS19_g117998;
				float4 temp_output_37_0_g117979 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117979 = temp_output_37_0_g117979;
				float3 temp_output_279_0_g117979 = Input_Position9197_g117895;
				half3 WorldPosition238_g117979 = temp_output_279_0_g117979;
				half4 localSamplePlanar2D238_g117979 = SamplePlanar2D( Texture238_g117979 , Sampler238_g117979 , Coords238_g117979 , WorldPosition238_g117979 );
				TEXTURE2D(Texture246_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler246_g117979 = SS19_g117998;
				half4 Coords246_g117979 = temp_output_37_0_g117979;
				half3 WorldPosition246_g117979 = temp_output_279_0_g117979;
				float3 temp_output_280_0_g117979 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117979 = temp_output_280_0_g117979;
				half4 localSamplePlanar3D246_g117979 = SamplePlanar3D( Texture246_g117979 , Sampler246_g117979 , Coords246_g117979 , WorldPosition246_g117979 , WorldNormal246_g117979 );
				TEXTURE2D(Texture234_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler234_g117979 = SS19_g117998;
				float4 Coords234_g117979 = temp_output_37_0_g117979;
				float3 WorldPosition234_g117979 = temp_output_279_0_g117979;
				float4 localSampleStochastic2D234_g117979 = SampleStochastic2D( Texture234_g117979 , Sampler234_g117979 , Coords234_g117979 , WorldPosition234_g117979 );
				TEXTURE2D(Texture263_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler263_g117979 = SS19_g117998;
				half4 Coords263_g117979 = temp_output_37_0_g117979;
				half3 WorldPosition263_g117979 = temp_output_279_0_g117979;
				half3 WorldNormal263_g117979 = temp_output_280_0_g117979;
				half4 localSampleStochastic3D263_g117979 = SampleStochastic3D( Texture263_g117979 , Sampler263_g117979 , Coords263_g117979 , WorldPosition263_g117979 , WorldNormal263_g117979 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8692_g117895 = localSamplePlanar2D238_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8692_g117895 = localSamplePlanar3D246_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8692_g117895 = localSampleStochastic2D234_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8692_g117895 = localSampleStochastic3D263_g117979;
				#else
				float4 staticSwitch8692_g117895 = localSamplePlanar2D238_g117979;
				#endif
				half4 Layer338_g117910 = staticSwitch8692_g117895;
				TEXTURE2D(Texture238_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler238_g117980 = SS19_g117998;
				float4 temp_output_37_0_g117980 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117980 = temp_output_37_0_g117980;
				float3 temp_output_279_0_g117980 = Input_Position9197_g117895;
				half3 WorldPosition238_g117980 = temp_output_279_0_g117980;
				half4 localSamplePlanar2D238_g117980 = SamplePlanar2D( Texture238_g117980 , Sampler238_g117980 , Coords238_g117980 , WorldPosition238_g117980 );
				TEXTURE2D(Texture246_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler246_g117980 = SS19_g117998;
				half4 Coords246_g117980 = temp_output_37_0_g117980;
				half3 WorldPosition246_g117980 = temp_output_279_0_g117980;
				float3 temp_output_280_0_g117980 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117980 = temp_output_280_0_g117980;
				half4 localSamplePlanar3D246_g117980 = SamplePlanar3D( Texture246_g117980 , Sampler246_g117980 , Coords246_g117980 , WorldPosition246_g117980 , WorldNormal246_g117980 );
				TEXTURE2D(Texture234_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler234_g117980 = SS19_g117998;
				float4 Coords234_g117980 = temp_output_37_0_g117980;
				float3 WorldPosition234_g117980 = temp_output_279_0_g117980;
				float4 localSampleStochastic2D234_g117980 = SampleStochastic2D( Texture234_g117980 , Sampler234_g117980 , Coords234_g117980 , WorldPosition234_g117980 );
				TEXTURE2D(Texture263_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler263_g117980 = SS19_g117998;
				half4 Coords263_g117980 = temp_output_37_0_g117980;
				half3 WorldPosition263_g117980 = temp_output_279_0_g117980;
				half3 WorldNormal263_g117980 = temp_output_280_0_g117980;
				half4 localSampleStochastic3D263_g117980 = SampleStochastic3D( Texture263_g117980 , Sampler263_g117980 , Coords263_g117980 , WorldPosition263_g117980 , WorldNormal263_g117980 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8693_g117895 = localSamplePlanar2D238_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8693_g117895 = localSamplePlanar3D246_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8693_g117895 = localSampleStochastic2D234_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8693_g117895 = localSampleStochastic3D263_g117980;
				#else
				float4 staticSwitch8693_g117895 = localSamplePlanar2D238_g117980;
				#endif
				half4 Layer439_g117910 = staticSwitch8693_g117895;
				float4 weightedBlendVar31_g117910 = Weights52_g117910;
				float4 weightedBlend31_g117910 = ( weightedBlendVar31_g117910.x*Layer133_g117910 + weightedBlendVar31_g117910.y*Layer237_g117910 + weightedBlendVar31_g117910.z*Layer338_g117910 + weightedBlendVar31_g117910.w*Layer439_g117910 );
				half4 Terrain_AAAA_088665_g117895 = weightedBlend31_g117910;
				half4 Layer_0810_g117903 = Terrain_AAAA_088665_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8794_g117895 = weights_127362_g117895;
				#else
				float4 staticSwitch8794_g117895 = control_127362_g117895;
				#endif
				half4 Terrain_Weights_127710_g117895 = staticSwitch8794_g117895;
				half4 Weights52_g117917 = Terrain_Weights_127710_g117895;
				TEXTURE2D(Texture238_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler238_g117954 = SS19_g117998;
				float4 temp_output_37_0_g117954 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117954 = temp_output_37_0_g117954;
				float3 temp_output_279_0_g117954 = Input_Position9197_g117895;
				half3 WorldPosition238_g117954 = temp_output_279_0_g117954;
				half4 localSamplePlanar2D238_g117954 = SamplePlanar2D( Texture238_g117954 , Sampler238_g117954 , Coords238_g117954 , WorldPosition238_g117954 );
				TEXTURE2D(Texture246_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler246_g117954 = SS19_g117998;
				half4 Coords246_g117954 = temp_output_37_0_g117954;
				half3 WorldPosition246_g117954 = temp_output_279_0_g117954;
				float3 temp_output_280_0_g117954 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117954 = temp_output_280_0_g117954;
				half4 localSamplePlanar3D246_g117954 = SamplePlanar3D( Texture246_g117954 , Sampler246_g117954 , Coords246_g117954 , WorldPosition246_g117954 , WorldNormal246_g117954 );
				TEXTURE2D(Texture234_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler234_g117954 = SS19_g117998;
				float4 Coords234_g117954 = temp_output_37_0_g117954;
				float3 WorldPosition234_g117954 = temp_output_279_0_g117954;
				float4 localSampleStochastic2D234_g117954 = SampleStochastic2D( Texture234_g117954 , Sampler234_g117954 , Coords234_g117954 , WorldPosition234_g117954 );
				TEXTURE2D(Texture263_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler263_g117954 = SS19_g117998;
				half4 Coords263_g117954 = temp_output_37_0_g117954;
				half3 WorldPosition263_g117954 = temp_output_279_0_g117954;
				half3 WorldNormal263_g117954 = temp_output_280_0_g117954;
				half4 localSampleStochastic3D263_g117954 = SampleStochastic3D( Texture263_g117954 , Sampler263_g117954 , Coords263_g117954 , WorldPosition263_g117954 , WorldNormal263_g117954 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8872_g117895 = localSamplePlanar2D238_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8872_g117895 = localSamplePlanar3D246_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8872_g117895 = localSampleStochastic2D234_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8872_g117895 = localSampleStochastic3D263_g117954;
				#else
				float4 staticSwitch8872_g117895 = localSamplePlanar2D238_g117954;
				#endif
				half4 Layer133_g117917 = staticSwitch8872_g117895;
				TEXTURE2D(Texture238_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler238_g117957 = SS19_g117998;
				float4 temp_output_37_0_g117957 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117957 = temp_output_37_0_g117957;
				float3 temp_output_279_0_g117957 = Input_Position9197_g117895;
				half3 WorldPosition238_g117957 = temp_output_279_0_g117957;
				half4 localSamplePlanar2D238_g117957 = SamplePlanar2D( Texture238_g117957 , Sampler238_g117957 , Coords238_g117957 , WorldPosition238_g117957 );
				TEXTURE2D(Texture246_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler246_g117957 = SS19_g117998;
				half4 Coords246_g117957 = temp_output_37_0_g117957;
				half3 WorldPosition246_g117957 = temp_output_279_0_g117957;
				float3 temp_output_280_0_g117957 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117957 = temp_output_280_0_g117957;
				half4 localSamplePlanar3D246_g117957 = SamplePlanar3D( Texture246_g117957 , Sampler246_g117957 , Coords246_g117957 , WorldPosition246_g117957 , WorldNormal246_g117957 );
				TEXTURE2D(Texture234_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler234_g117957 = SS19_g117998;
				float4 Coords234_g117957 = temp_output_37_0_g117957;
				float3 WorldPosition234_g117957 = temp_output_279_0_g117957;
				float4 localSampleStochastic2D234_g117957 = SampleStochastic2D( Texture234_g117957 , Sampler234_g117957 , Coords234_g117957 , WorldPosition234_g117957 );
				TEXTURE2D(Texture263_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler263_g117957 = SS19_g117998;
				half4 Coords263_g117957 = temp_output_37_0_g117957;
				half3 WorldPosition263_g117957 = temp_output_279_0_g117957;
				half3 WorldNormal263_g117957 = temp_output_280_0_g117957;
				half4 localSampleStochastic3D263_g117957 = SampleStochastic3D( Texture263_g117957 , Sampler263_g117957 , Coords263_g117957 , WorldPosition263_g117957 , WorldNormal263_g117957 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8873_g117895 = localSamplePlanar2D238_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8873_g117895 = localSamplePlanar3D246_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8873_g117895 = localSampleStochastic2D234_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8873_g117895 = localSampleStochastic3D263_g117957;
				#else
				float4 staticSwitch8873_g117895 = localSamplePlanar2D238_g117957;
				#endif
				half4 Layer237_g117917 = staticSwitch8873_g117895;
				TEXTURE2D(Texture238_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler238_g117958 = SS19_g117998;
				float4 temp_output_37_0_g117958 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117958 = temp_output_37_0_g117958;
				float3 temp_output_279_0_g117958 = Input_Position9197_g117895;
				half3 WorldPosition238_g117958 = temp_output_279_0_g117958;
				half4 localSamplePlanar2D238_g117958 = SamplePlanar2D( Texture238_g117958 , Sampler238_g117958 , Coords238_g117958 , WorldPosition238_g117958 );
				TEXTURE2D(Texture246_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler246_g117958 = SS19_g117998;
				half4 Coords246_g117958 = temp_output_37_0_g117958;
				half3 WorldPosition246_g117958 = temp_output_279_0_g117958;
				float3 temp_output_280_0_g117958 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117958 = temp_output_280_0_g117958;
				half4 localSamplePlanar3D246_g117958 = SamplePlanar3D( Texture246_g117958 , Sampler246_g117958 , Coords246_g117958 , WorldPosition246_g117958 , WorldNormal246_g117958 );
				TEXTURE2D(Texture234_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler234_g117958 = SS19_g117998;
				float4 Coords234_g117958 = temp_output_37_0_g117958;
				float3 WorldPosition234_g117958 = temp_output_279_0_g117958;
				float4 localSampleStochastic2D234_g117958 = SampleStochastic2D( Texture234_g117958 , Sampler234_g117958 , Coords234_g117958 , WorldPosition234_g117958 );
				TEXTURE2D(Texture263_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler263_g117958 = SS19_g117998;
				half4 Coords263_g117958 = temp_output_37_0_g117958;
				half3 WorldPosition263_g117958 = temp_output_279_0_g117958;
				half3 WorldNormal263_g117958 = temp_output_280_0_g117958;
				half4 localSampleStochastic3D263_g117958 = SampleStochastic3D( Texture263_g117958 , Sampler263_g117958 , Coords263_g117958 , WorldPosition263_g117958 , WorldNormal263_g117958 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8874_g117895 = localSamplePlanar2D238_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8874_g117895 = localSamplePlanar3D246_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8874_g117895 = localSampleStochastic2D234_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8874_g117895 = localSampleStochastic3D263_g117958;
				#else
				float4 staticSwitch8874_g117895 = localSamplePlanar2D238_g117958;
				#endif
				half4 Layer338_g117917 = staticSwitch8874_g117895;
				TEXTURE2D(Texture238_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler238_g117959 = SS19_g117998;
				float4 temp_output_37_0_g117959 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117959 = temp_output_37_0_g117959;
				float3 temp_output_279_0_g117959 = Input_Position9197_g117895;
				half3 WorldPosition238_g117959 = temp_output_279_0_g117959;
				half4 localSamplePlanar2D238_g117959 = SamplePlanar2D( Texture238_g117959 , Sampler238_g117959 , Coords238_g117959 , WorldPosition238_g117959 );
				TEXTURE2D(Texture246_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler246_g117959 = SS19_g117998;
				half4 Coords246_g117959 = temp_output_37_0_g117959;
				half3 WorldPosition246_g117959 = temp_output_279_0_g117959;
				float3 temp_output_280_0_g117959 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117959 = temp_output_280_0_g117959;
				half4 localSamplePlanar3D246_g117959 = SamplePlanar3D( Texture246_g117959 , Sampler246_g117959 , Coords246_g117959 , WorldPosition246_g117959 , WorldNormal246_g117959 );
				TEXTURE2D(Texture234_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler234_g117959 = SS19_g117998;
				float4 Coords234_g117959 = temp_output_37_0_g117959;
				float3 WorldPosition234_g117959 = temp_output_279_0_g117959;
				float4 localSampleStochastic2D234_g117959 = SampleStochastic2D( Texture234_g117959 , Sampler234_g117959 , Coords234_g117959 , WorldPosition234_g117959 );
				TEXTURE2D(Texture263_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler263_g117959 = SS19_g117998;
				half4 Coords263_g117959 = temp_output_37_0_g117959;
				half3 WorldPosition263_g117959 = temp_output_279_0_g117959;
				half3 WorldNormal263_g117959 = temp_output_280_0_g117959;
				half4 localSampleStochastic3D263_g117959 = SampleStochastic3D( Texture263_g117959 , Sampler263_g117959 , Coords263_g117959 , WorldPosition263_g117959 , WorldNormal263_g117959 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8875_g117895 = localSamplePlanar2D238_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8875_g117895 = localSamplePlanar3D246_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8875_g117895 = localSampleStochastic2D234_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8875_g117895 = localSampleStochastic3D263_g117959;
				#else
				float4 staticSwitch8875_g117895 = localSamplePlanar2D238_g117959;
				#endif
				half4 Layer439_g117917 = staticSwitch8875_g117895;
				float4 weightedBlendVar31_g117917 = Weights52_g117917;
				float4 weightedBlend31_g117917 = ( weightedBlendVar31_g117917.x*Layer133_g117917 + weightedBlendVar31_g117917.y*Layer237_g117917 + weightedBlendVar31_g117917.z*Layer338_g117917 + weightedBlendVar31_g117917.w*Layer439_g117917 );
				half4 Terrain_AAAA_128851_g117895 = weightedBlend31_g117917;
				half4 Layer_1243_g117903 = Terrain_AAAA_128851_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8795_g117895 = weights_167362_g117895;
				#else
				float4 staticSwitch8795_g117895 = control_167362_g117895;
				#endif
				half4 Terrain_Weights_167709_g117895 = staticSwitch8795_g117895;
				half4 Weights52_g117924 = Terrain_Weights_167709_g117895;
				TEXTURE2D(Texture238_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler238_g117963 = SS19_g117998;
				float4 temp_output_37_0_g117963 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117963 = temp_output_37_0_g117963;
				float3 temp_output_279_0_g117963 = Input_Position9197_g117895;
				half3 WorldPosition238_g117963 = temp_output_279_0_g117963;
				half4 localSamplePlanar2D238_g117963 = SamplePlanar2D( Texture238_g117963 , Sampler238_g117963 , Coords238_g117963 , WorldPosition238_g117963 );
				TEXTURE2D(Texture246_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler246_g117963 = SS19_g117998;
				half4 Coords246_g117963 = temp_output_37_0_g117963;
				half3 WorldPosition246_g117963 = temp_output_279_0_g117963;
				float3 temp_output_280_0_g117963 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117963 = temp_output_280_0_g117963;
				half4 localSamplePlanar3D246_g117963 = SamplePlanar3D( Texture246_g117963 , Sampler246_g117963 , Coords246_g117963 , WorldPosition246_g117963 , WorldNormal246_g117963 );
				TEXTURE2D(Texture234_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler234_g117963 = SS19_g117998;
				float4 Coords234_g117963 = temp_output_37_0_g117963;
				float3 WorldPosition234_g117963 = temp_output_279_0_g117963;
				float4 localSampleStochastic2D234_g117963 = SampleStochastic2D( Texture234_g117963 , Sampler234_g117963 , Coords234_g117963 , WorldPosition234_g117963 );
				TEXTURE2D(Texture263_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler263_g117963 = SS19_g117998;
				half4 Coords263_g117963 = temp_output_37_0_g117963;
				half3 WorldPosition263_g117963 = temp_output_279_0_g117963;
				half3 WorldNormal263_g117963 = temp_output_280_0_g117963;
				half4 localSampleStochastic3D263_g117963 = SampleStochastic3D( Texture263_g117963 , Sampler263_g117963 , Coords263_g117963 , WorldPosition263_g117963 , WorldNormal263_g117963 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8972_g117895 = localSamplePlanar2D238_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8972_g117895 = localSamplePlanar3D246_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8972_g117895 = localSampleStochastic2D234_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8972_g117895 = localSampleStochastic3D263_g117963;
				#else
				float4 staticSwitch8972_g117895 = localSamplePlanar2D238_g117963;
				#endif
				half4 Layer133_g117924 = staticSwitch8972_g117895;
				TEXTURE2D(Texture238_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler238_g117969 = SS19_g117998;
				float4 temp_output_37_0_g117969 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117969 = temp_output_37_0_g117969;
				float3 temp_output_279_0_g117969 = Input_Position9197_g117895;
				half3 WorldPosition238_g117969 = temp_output_279_0_g117969;
				half4 localSamplePlanar2D238_g117969 = SamplePlanar2D( Texture238_g117969 , Sampler238_g117969 , Coords238_g117969 , WorldPosition238_g117969 );
				TEXTURE2D(Texture246_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler246_g117969 = SS19_g117998;
				half4 Coords246_g117969 = temp_output_37_0_g117969;
				half3 WorldPosition246_g117969 = temp_output_279_0_g117969;
				float3 temp_output_280_0_g117969 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117969 = temp_output_280_0_g117969;
				half4 localSamplePlanar3D246_g117969 = SamplePlanar3D( Texture246_g117969 , Sampler246_g117969 , Coords246_g117969 , WorldPosition246_g117969 , WorldNormal246_g117969 );
				TEXTURE2D(Texture234_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler234_g117969 = SS19_g117998;
				float4 Coords234_g117969 = temp_output_37_0_g117969;
				float3 WorldPosition234_g117969 = temp_output_279_0_g117969;
				float4 localSampleStochastic2D234_g117969 = SampleStochastic2D( Texture234_g117969 , Sampler234_g117969 , Coords234_g117969 , WorldPosition234_g117969 );
				TEXTURE2D(Texture263_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler263_g117969 = SS19_g117998;
				half4 Coords263_g117969 = temp_output_37_0_g117969;
				half3 WorldPosition263_g117969 = temp_output_279_0_g117969;
				half3 WorldNormal263_g117969 = temp_output_280_0_g117969;
				half4 localSampleStochastic3D263_g117969 = SampleStochastic3D( Texture263_g117969 , Sampler263_g117969 , Coords263_g117969 , WorldPosition263_g117969 , WorldNormal263_g117969 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8973_g117895 = localSamplePlanar2D238_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8973_g117895 = localSamplePlanar3D246_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8973_g117895 = localSampleStochastic2D234_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8973_g117895 = localSampleStochastic3D263_g117969;
				#else
				float4 staticSwitch8973_g117895 = localSamplePlanar2D238_g117969;
				#endif
				half4 Layer237_g117924 = staticSwitch8973_g117895;
				TEXTURE2D(Texture238_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler238_g117970 = SS19_g117998;
				float4 temp_output_37_0_g117970 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117970 = temp_output_37_0_g117970;
				float3 temp_output_279_0_g117970 = Input_Position9197_g117895;
				half3 WorldPosition238_g117970 = temp_output_279_0_g117970;
				half4 localSamplePlanar2D238_g117970 = SamplePlanar2D( Texture238_g117970 , Sampler238_g117970 , Coords238_g117970 , WorldPosition238_g117970 );
				TEXTURE2D(Texture246_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler246_g117970 = SS19_g117998;
				half4 Coords246_g117970 = temp_output_37_0_g117970;
				half3 WorldPosition246_g117970 = temp_output_279_0_g117970;
				float3 temp_output_280_0_g117970 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117970 = temp_output_280_0_g117970;
				half4 localSamplePlanar3D246_g117970 = SamplePlanar3D( Texture246_g117970 , Sampler246_g117970 , Coords246_g117970 , WorldPosition246_g117970 , WorldNormal246_g117970 );
				TEXTURE2D(Texture234_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler234_g117970 = SS19_g117998;
				float4 Coords234_g117970 = temp_output_37_0_g117970;
				float3 WorldPosition234_g117970 = temp_output_279_0_g117970;
				float4 localSampleStochastic2D234_g117970 = SampleStochastic2D( Texture234_g117970 , Sampler234_g117970 , Coords234_g117970 , WorldPosition234_g117970 );
				TEXTURE2D(Texture263_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler263_g117970 = SS19_g117998;
				half4 Coords263_g117970 = temp_output_37_0_g117970;
				half3 WorldPosition263_g117970 = temp_output_279_0_g117970;
				half3 WorldNormal263_g117970 = temp_output_280_0_g117970;
				half4 localSampleStochastic3D263_g117970 = SampleStochastic3D( Texture263_g117970 , Sampler263_g117970 , Coords263_g117970 , WorldPosition263_g117970 , WorldNormal263_g117970 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8974_g117895 = localSamplePlanar2D238_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8974_g117895 = localSamplePlanar3D246_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8974_g117895 = localSampleStochastic2D234_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8974_g117895 = localSampleStochastic3D263_g117970;
				#else
				float4 staticSwitch8974_g117895 = localSamplePlanar2D238_g117970;
				#endif
				half4 Layer338_g117924 = staticSwitch8974_g117895;
				TEXTURE2D(Texture238_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler238_g117971 = SS19_g117998;
				float4 temp_output_37_0_g117971 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117971 = temp_output_37_0_g117971;
				float3 temp_output_279_0_g117971 = Input_Position9197_g117895;
				half3 WorldPosition238_g117971 = temp_output_279_0_g117971;
				half4 localSamplePlanar2D238_g117971 = SamplePlanar2D( Texture238_g117971 , Sampler238_g117971 , Coords238_g117971 , WorldPosition238_g117971 );
				TEXTURE2D(Texture246_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler246_g117971 = SS19_g117998;
				half4 Coords246_g117971 = temp_output_37_0_g117971;
				half3 WorldPosition246_g117971 = temp_output_279_0_g117971;
				float3 temp_output_280_0_g117971 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117971 = temp_output_280_0_g117971;
				half4 localSamplePlanar3D246_g117971 = SamplePlanar3D( Texture246_g117971 , Sampler246_g117971 , Coords246_g117971 , WorldPosition246_g117971 , WorldNormal246_g117971 );
				TEXTURE2D(Texture234_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler234_g117971 = SS19_g117998;
				float4 Coords234_g117971 = temp_output_37_0_g117971;
				float3 WorldPosition234_g117971 = temp_output_279_0_g117971;
				float4 localSampleStochastic2D234_g117971 = SampleStochastic2D( Texture234_g117971 , Sampler234_g117971 , Coords234_g117971 , WorldPosition234_g117971 );
				TEXTURE2D(Texture263_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler263_g117971 = SS19_g117998;
				half4 Coords263_g117971 = temp_output_37_0_g117971;
				half3 WorldPosition263_g117971 = temp_output_279_0_g117971;
				half3 WorldNormal263_g117971 = temp_output_280_0_g117971;
				half4 localSampleStochastic3D263_g117971 = SampleStochastic3D( Texture263_g117971 , Sampler263_g117971 , Coords263_g117971 , WorldPosition263_g117971 , WorldNormal263_g117971 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8975_g117895 = localSamplePlanar2D238_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8975_g117895 = localSamplePlanar3D246_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8975_g117895 = localSampleStochastic2D234_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8975_g117895 = localSampleStochastic3D263_g117971;
				#else
				float4 staticSwitch8975_g117895 = localSamplePlanar2D238_g117971;
				#endif
				half4 Layer439_g117924 = staticSwitch8975_g117895;
				float4 weightedBlendVar31_g117924 = Weights52_g117924;
				float4 weightedBlend31_g117924 = ( weightedBlendVar31_g117924.x*Layer133_g117924 + weightedBlendVar31_g117924.y*Layer237_g117924 + weightedBlendVar31_g117924.z*Layer338_g117924 + weightedBlendVar31_g117924.w*Layer439_g117924 );
				half4 Terrain_AAAA_168986_g117895 = weightedBlend31_g117924;
				half4 Layer_1644_g117903 = Terrain_AAAA_168986_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117903 = Layer_045_g117903;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 + Layer_1243_g117903 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 + Layer_1243_g117903 + Layer_1644_g117903 );
				#else
				float4 staticSwitch40_g117903 = Layer_045_g117903;
				#endif
				half4 Blend_Albedo7468_g117895 = staticSwitch40_g117903;
				half4 Weights52_g117989 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117989 = _TerrainColor1;
				half4 Layer237_g117989 = _TerrainColor2;
				half4 Layer338_g117989 = _TerrainColor3;
				half4 Layer439_g117989 = _TerrainColor4;
				float4 weightedBlendVar31_g117989 = Weights52_g117989;
				float4 weightedBlend31_g117989 = ( weightedBlendVar31_g117989.x*Layer133_g117989 + weightedBlendVar31_g117989.y*Layer237_g117989 + weightedBlendVar31_g117989.z*Layer338_g117989 + weightedBlendVar31_g117989.w*Layer439_g117989 );
				half4 Terrain_Color_049349_g117895 = weightedBlend31_g117989;
				half4 Layer_045_g117994 = Terrain_Color_049349_g117895;
				half4 Weights52_g117990 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117990 = _TerrainColor5;
				half4 Layer237_g117990 = _TerrainColor6;
				half4 Layer338_g117990 = _TerrainColor7;
				half4 Layer439_g117990 = _TerrainColor8;
				float4 weightedBlendVar31_g117990 = Weights52_g117990;
				float4 weightedBlend31_g117990 = ( weightedBlendVar31_g117990.x*Layer133_g117990 + weightedBlendVar31_g117990.y*Layer237_g117990 + weightedBlendVar31_g117990.z*Layer338_g117990 + weightedBlendVar31_g117990.w*Layer439_g117990 );
				half4 Terrain_Color_089361_g117895 = weightedBlend31_g117990;
				half4 Layer_0810_g117994 = Terrain_Color_089361_g117895;
				half4 Weights52_g117991 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117991 = _TerrainColor9;
				half4 Layer237_g117991 = _TerrainColor10;
				half4 Layer338_g117991 = _TerrainColor11;
				half4 Layer439_g117991 = _TerrainColor12;
				float4 weightedBlendVar31_g117991 = Weights52_g117991;
				float4 weightedBlend31_g117991 = ( weightedBlendVar31_g117991.x*Layer133_g117991 + weightedBlendVar31_g117991.y*Layer237_g117991 + weightedBlendVar31_g117991.z*Layer338_g117991 + weightedBlendVar31_g117991.w*Layer439_g117991 );
				half4 Terrain_Color_129373_g117895 = weightedBlend31_g117991;
				half4 Layer_1243_g117994 = Terrain_Color_129373_g117895;
				half4 Weights52_g117992 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117992 = _TerrainColor13;
				half4 Layer237_g117992 = _TerrainColor14;
				half4 Layer338_g117992 = _TerrainColor15;
				half4 Layer439_g117992 = _TerrainColor16;
				float4 weightedBlendVar31_g117992 = Weights52_g117992;
				float4 weightedBlend31_g117992 = ( weightedBlendVar31_g117992.x*Layer133_g117992 + weightedBlendVar31_g117992.y*Layer237_g117992 + weightedBlendVar31_g117992.z*Layer338_g117992 + weightedBlendVar31_g117992.w*Layer439_g117992 );
				half4 Terrain_Color_169381_g117895 = weightedBlend31_g117992;
				half4 Layer_1644_g117994 = Terrain_Color_169381_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117994 = Layer_045_g117994;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 + Layer_1243_g117994 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 + Layer_1243_g117994 + Layer_1644_g117994 );
				#else
				float4 staticSwitch40_g117994 = Layer_045_g117994;
				#endif
				half4 Blend_TerrainColor9387_g117895 = staticSwitch40_g117994;
				half3 Final_Albedo9144_g117895 = ( (Blend_Albedo7468_g117895).xyz * (Blend_TerrainColor9387_g117895).rgb * (_TerrainColor).rgb );
				half3 Local_Albedo9199_g117893 = Final_Albedo9144_g117895;
				float3 In_Albedo3_g117894 = Local_Albedo9199_g117893;
				float3 In_AlbedoRaw3_g117894 = Local_Albedo9199_g117893;
				float3 ase_worldTangent = packedInput.ase_texcoord4.xyz;
				float3 ase_worldBitangent = packedInput.ase_texcoord5.xyz;
				float3x3 ase_worldToTangent = float3x3(ase_worldTangent,ase_worldBitangent,ase_worldNormal);
				half4 Weights52_g117896 = Terrain_Weights_046781_g117895;
				TEXTURE2D(Texture238_g117987) = _TerrainNormalTex1;
				float localFilterTexture29_g118002 = ( 0.0 );
				SamplerState SamplerDefault29_g118002 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g118002 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g118002 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g118002 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g118002 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g118002 = SamplerDefault29_g118002;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g118002 = SamplerDefault29_g118002;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g118002 = SamplerPoint29_g118002;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g118002 = SamplerLow29_g118002;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g118002 = SamplerMedium29_g118002;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g118002 = SamplerHigh29_g118002;
				#endif
				SamplerState Sampler238_g117987 = SS29_g118002;
				float4 temp_output_37_0_g117987 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117987 = temp_output_37_0_g117987;
				float3 temp_output_279_0_g117987 = Input_Position9197_g117895;
				half3 WorldPosition238_g117987 = temp_output_279_0_g117987;
				half4 localSamplePlanar2D238_g117987 = SamplePlanar2D( Texture238_g117987 , Sampler238_g117987 , Coords238_g117987 , WorldPosition238_g117987 );
				TEXTURE2D(Texture246_g117987) = _TerrainNormalTex1;
				SamplerState Sampler246_g117987 = SS29_g118002;
				half4 Coords246_g117987 = temp_output_37_0_g117987;
				half3 WorldPosition246_g117987 = temp_output_279_0_g117987;
				float3 temp_output_280_0_g117987 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117987 = temp_output_280_0_g117987;
				half4 localSamplePlanar3D246_g117987 = SamplePlanar3D( Texture246_g117987 , Sampler246_g117987 , Coords246_g117987 , WorldPosition246_g117987 , WorldNormal246_g117987 );
				TEXTURE2D(Texture234_g117987) = _TerrainNormalTex1;
				SamplerState Sampler234_g117987 = SS29_g118002;
				float4 Coords234_g117987 = temp_output_37_0_g117987;
				float3 WorldPosition234_g117987 = temp_output_279_0_g117987;
				float4 localSampleStochastic2D234_g117987 = SampleStochastic2D( Texture234_g117987 , Sampler234_g117987 , Coords234_g117987 , WorldPosition234_g117987 );
				TEXTURE2D(Texture263_g117987) = _TerrainNormalTex1;
				SamplerState Sampler263_g117987 = SS29_g118002;
				half4 Coords263_g117987 = temp_output_37_0_g117987;
				half3 WorldPosition263_g117987 = temp_output_279_0_g117987;
				half3 WorldNormal263_g117987 = temp_output_280_0_g117987;
				half4 localSampleStochastic3D263_g117987 = SampleStochastic3D( Texture263_g117987 , Sampler263_g117987 , Coords263_g117987 , WorldPosition263_g117987 , WorldNormal263_g117987 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8635_g117895 = localSamplePlanar2D238_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8635_g117895 = localSamplePlanar3D246_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8635_g117895 = localSampleStochastic2D234_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8635_g117895 = localSampleStochastic3D263_g117987;
				#else
				float4 staticSwitch8635_g117895 = localSamplePlanar2D238_g117987;
				#endif
				half4 Layer133_g117896 = staticSwitch8635_g117895;
				TEXTURE2D(Texture238_g117943) = _TerrainNormalTex2;
				SamplerState Sampler238_g117943 = SS29_g118002;
				float4 temp_output_37_0_g117943 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117943 = temp_output_37_0_g117943;
				float3 temp_output_279_0_g117943 = Input_Position9197_g117895;
				half3 WorldPosition238_g117943 = temp_output_279_0_g117943;
				half4 localSamplePlanar2D238_g117943 = SamplePlanar2D( Texture238_g117943 , Sampler238_g117943 , Coords238_g117943 , WorldPosition238_g117943 );
				TEXTURE2D(Texture246_g117943) = _TerrainNormalTex2;
				SamplerState Sampler246_g117943 = SS29_g118002;
				half4 Coords246_g117943 = temp_output_37_0_g117943;
				half3 WorldPosition246_g117943 = temp_output_279_0_g117943;
				float3 temp_output_280_0_g117943 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117943 = temp_output_280_0_g117943;
				half4 localSamplePlanar3D246_g117943 = SamplePlanar3D( Texture246_g117943 , Sampler246_g117943 , Coords246_g117943 , WorldPosition246_g117943 , WorldNormal246_g117943 );
				TEXTURE2D(Texture234_g117943) = _TerrainNormalTex2;
				SamplerState Sampler234_g117943 = SS29_g118002;
				float4 Coords234_g117943 = temp_output_37_0_g117943;
				float3 WorldPosition234_g117943 = temp_output_279_0_g117943;
				float4 localSampleStochastic2D234_g117943 = SampleStochastic2D( Texture234_g117943 , Sampler234_g117943 , Coords234_g117943 , WorldPosition234_g117943 );
				TEXTURE2D(Texture263_g117943) = _TerrainNormalTex2;
				SamplerState Sampler263_g117943 = SS29_g118002;
				half4 Coords263_g117943 = temp_output_37_0_g117943;
				half3 WorldPosition263_g117943 = temp_output_279_0_g117943;
				half3 WorldNormal263_g117943 = temp_output_280_0_g117943;
				half4 localSampleStochastic3D263_g117943 = SampleStochastic3D( Texture263_g117943 , Sampler263_g117943 , Coords263_g117943 , WorldPosition263_g117943 , WorldNormal263_g117943 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8636_g117895 = localSamplePlanar2D238_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8636_g117895 = localSamplePlanar3D246_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8636_g117895 = localSampleStochastic2D234_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8636_g117895 = localSampleStochastic3D263_g117943;
				#else
				float4 staticSwitch8636_g117895 = localSamplePlanar2D238_g117943;
				#endif
				half4 Layer237_g117896 = staticSwitch8636_g117895;
				TEXTURE2D(Texture238_g117946) = _TerrainNormalTex3;
				SamplerState Sampler238_g117946 = SS29_g118002;
				float4 temp_output_37_0_g117946 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117946 = temp_output_37_0_g117946;
				float3 temp_output_279_0_g117946 = Input_Position9197_g117895;
				half3 WorldPosition238_g117946 = temp_output_279_0_g117946;
				half4 localSamplePlanar2D238_g117946 = SamplePlanar2D( Texture238_g117946 , Sampler238_g117946 , Coords238_g117946 , WorldPosition238_g117946 );
				TEXTURE2D(Texture246_g117946) = _TerrainNormalTex3;
				SamplerState Sampler246_g117946 = SS29_g118002;
				half4 Coords246_g117946 = temp_output_37_0_g117946;
				half3 WorldPosition246_g117946 = temp_output_279_0_g117946;
				float3 temp_output_280_0_g117946 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117946 = temp_output_280_0_g117946;
				half4 localSamplePlanar3D246_g117946 = SamplePlanar3D( Texture246_g117946 , Sampler246_g117946 , Coords246_g117946 , WorldPosition246_g117946 , WorldNormal246_g117946 );
				TEXTURE2D(Texture234_g117946) = _TerrainNormalTex3;
				SamplerState Sampler234_g117946 = SS29_g118002;
				float4 Coords234_g117946 = temp_output_37_0_g117946;
				float3 WorldPosition234_g117946 = temp_output_279_0_g117946;
				float4 localSampleStochastic2D234_g117946 = SampleStochastic2D( Texture234_g117946 , Sampler234_g117946 , Coords234_g117946 , WorldPosition234_g117946 );
				TEXTURE2D(Texture263_g117946) = _TerrainNormalTex3;
				SamplerState Sampler263_g117946 = SS29_g118002;
				half4 Coords263_g117946 = temp_output_37_0_g117946;
				half3 WorldPosition263_g117946 = temp_output_279_0_g117946;
				half3 WorldNormal263_g117946 = temp_output_280_0_g117946;
				half4 localSampleStochastic3D263_g117946 = SampleStochastic3D( Texture263_g117946 , Sampler263_g117946 , Coords263_g117946 , WorldPosition263_g117946 , WorldNormal263_g117946 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8637_g117895 = localSamplePlanar2D238_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8637_g117895 = localSamplePlanar3D246_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8637_g117895 = localSampleStochastic2D234_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8637_g117895 = localSampleStochastic3D263_g117946;
				#else
				float4 staticSwitch8637_g117895 = localSamplePlanar2D238_g117946;
				#endif
				half4 Layer338_g117896 = staticSwitch8637_g117895;
				TEXTURE2D(Texture238_g117948) = _TerrainNormalTex4;
				SamplerState Sampler238_g117948 = SS29_g118002;
				float4 temp_output_37_0_g117948 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117948 = temp_output_37_0_g117948;
				float3 temp_output_279_0_g117948 = Input_Position9197_g117895;
				half3 WorldPosition238_g117948 = temp_output_279_0_g117948;
				half4 localSamplePlanar2D238_g117948 = SamplePlanar2D( Texture238_g117948 , Sampler238_g117948 , Coords238_g117948 , WorldPosition238_g117948 );
				TEXTURE2D(Texture246_g117948) = _TerrainNormalTex4;
				SamplerState Sampler246_g117948 = SS29_g118002;
				half4 Coords246_g117948 = temp_output_37_0_g117948;
				half3 WorldPosition246_g117948 = temp_output_279_0_g117948;
				float3 temp_output_280_0_g117948 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117948 = temp_output_280_0_g117948;
				half4 localSamplePlanar3D246_g117948 = SamplePlanar3D( Texture246_g117948 , Sampler246_g117948 , Coords246_g117948 , WorldPosition246_g117948 , WorldNormal246_g117948 );
				TEXTURE2D(Texture234_g117948) = _TerrainNormalTex4;
				SamplerState Sampler234_g117948 = SS29_g118002;
				float4 Coords234_g117948 = temp_output_37_0_g117948;
				float3 WorldPosition234_g117948 = temp_output_279_0_g117948;
				float4 localSampleStochastic2D234_g117948 = SampleStochastic2D( Texture234_g117948 , Sampler234_g117948 , Coords234_g117948 , WorldPosition234_g117948 );
				TEXTURE2D(Texture263_g117948) = _TerrainNormalTex4;
				SamplerState Sampler263_g117948 = SS29_g118002;
				half4 Coords263_g117948 = temp_output_37_0_g117948;
				half3 WorldPosition263_g117948 = temp_output_279_0_g117948;
				half3 WorldNormal263_g117948 = temp_output_280_0_g117948;
				half4 localSampleStochastic3D263_g117948 = SampleStochastic3D( Texture263_g117948 , Sampler263_g117948 , Coords263_g117948 , WorldPosition263_g117948 , WorldNormal263_g117948 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8638_g117895 = localSamplePlanar2D238_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8638_g117895 = localSamplePlanar3D246_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8638_g117895 = localSampleStochastic2D234_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8638_g117895 = localSampleStochastic3D263_g117948;
				#else
				float4 staticSwitch8638_g117895 = localSamplePlanar2D238_g117948;
				#endif
				half4 Layer439_g117896 = staticSwitch8638_g117895;
				float4 weightedBlendVar31_g117896 = Weights52_g117896;
				float4 weightedBlend31_g117896 = ( weightedBlendVar31_g117896.x*Layer133_g117896 + weightedBlendVar31_g117896.y*Layer237_g117896 + weightedBlendVar31_g117896.z*Layer338_g117896 + weightedBlendVar31_g117896.w*Layer439_g117896 );
				half4 Terrain_B_047202_g117895 = weightedBlend31_g117896;
				half4 Layer_045_g117902 = Terrain_B_047202_g117895;
				half4 Weights52_g117911 = Terrain_Weights_087340_g117895;
				TEXTURE2D(Texture238_g117952) = _TerrainNormalTex5;
				SamplerState Sampler238_g117952 = SS29_g118002;
				float4 temp_output_37_0_g117952 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117952 = temp_output_37_0_g117952;
				float3 temp_output_279_0_g117952 = Input_Position9197_g117895;
				half3 WorldPosition238_g117952 = temp_output_279_0_g117952;
				half4 localSamplePlanar2D238_g117952 = SamplePlanar2D( Texture238_g117952 , Sampler238_g117952 , Coords238_g117952 , WorldPosition238_g117952 );
				TEXTURE2D(Texture246_g117952) = _TerrainNormalTex5;
				SamplerState Sampler246_g117952 = SS29_g118002;
				half4 Coords246_g117952 = temp_output_37_0_g117952;
				half3 WorldPosition246_g117952 = temp_output_279_0_g117952;
				float3 temp_output_280_0_g117952 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117952 = temp_output_280_0_g117952;
				half4 localSamplePlanar3D246_g117952 = SamplePlanar3D( Texture246_g117952 , Sampler246_g117952 , Coords246_g117952 , WorldPosition246_g117952 , WorldNormal246_g117952 );
				TEXTURE2D(Texture234_g117952) = _TerrainNormalTex5;
				SamplerState Sampler234_g117952 = SS29_g118002;
				float4 Coords234_g117952 = temp_output_37_0_g117952;
				float3 WorldPosition234_g117952 = temp_output_279_0_g117952;
				float4 localSampleStochastic2D234_g117952 = SampleStochastic2D( Texture234_g117952 , Sampler234_g117952 , Coords234_g117952 , WorldPosition234_g117952 );
				TEXTURE2D(Texture263_g117952) = _TerrainNormalTex5;
				SamplerState Sampler263_g117952 = SS29_g118002;
				half4 Coords263_g117952 = temp_output_37_0_g117952;
				half3 WorldPosition263_g117952 = temp_output_279_0_g117952;
				half3 WorldNormal263_g117952 = temp_output_280_0_g117952;
				half4 localSampleStochastic3D263_g117952 = SampleStochastic3D( Texture263_g117952 , Sampler263_g117952 , Coords263_g117952 , WorldPosition263_g117952 , WorldNormal263_g117952 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8686_g117895 = localSamplePlanar2D238_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8686_g117895 = localSamplePlanar3D246_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8686_g117895 = localSampleStochastic2D234_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8686_g117895 = localSampleStochastic3D263_g117952;
				#else
				float4 staticSwitch8686_g117895 = localSamplePlanar2D238_g117952;
				#endif
				half4 Layer133_g117911 = staticSwitch8686_g117895;
				TEXTURE2D(Texture238_g117981) = _TerrainNormalTex6;
				SamplerState Sampler238_g117981 = SS29_g118002;
				float4 temp_output_37_0_g117981 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117981 = temp_output_37_0_g117981;
				float3 temp_output_279_0_g117981 = Input_Position9197_g117895;
				half3 WorldPosition238_g117981 = temp_output_279_0_g117981;
				half4 localSamplePlanar2D238_g117981 = SamplePlanar2D( Texture238_g117981 , Sampler238_g117981 , Coords238_g117981 , WorldPosition238_g117981 );
				TEXTURE2D(Texture246_g117981) = _TerrainNormalTex6;
				SamplerState Sampler246_g117981 = SS29_g118002;
				half4 Coords246_g117981 = temp_output_37_0_g117981;
				half3 WorldPosition246_g117981 = temp_output_279_0_g117981;
				float3 temp_output_280_0_g117981 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117981 = temp_output_280_0_g117981;
				half4 localSamplePlanar3D246_g117981 = SamplePlanar3D( Texture246_g117981 , Sampler246_g117981 , Coords246_g117981 , WorldPosition246_g117981 , WorldNormal246_g117981 );
				TEXTURE2D(Texture234_g117981) = _TerrainNormalTex6;
				SamplerState Sampler234_g117981 = SS29_g118002;
				float4 Coords234_g117981 = temp_output_37_0_g117981;
				float3 WorldPosition234_g117981 = temp_output_279_0_g117981;
				float4 localSampleStochastic2D234_g117981 = SampleStochastic2D( Texture234_g117981 , Sampler234_g117981 , Coords234_g117981 , WorldPosition234_g117981 );
				TEXTURE2D(Texture263_g117981) = _TerrainNormalTex6;
				SamplerState Sampler263_g117981 = SS29_g118002;
				half4 Coords263_g117981 = temp_output_37_0_g117981;
				half3 WorldPosition263_g117981 = temp_output_279_0_g117981;
				half3 WorldNormal263_g117981 = temp_output_280_0_g117981;
				half4 localSampleStochastic3D263_g117981 = SampleStochastic3D( Texture263_g117981 , Sampler263_g117981 , Coords263_g117981 , WorldPosition263_g117981 , WorldNormal263_g117981 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8687_g117895 = localSamplePlanar2D238_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8687_g117895 = localSamplePlanar3D246_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8687_g117895 = localSampleStochastic2D234_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8687_g117895 = localSampleStochastic3D263_g117981;
				#else
				float4 staticSwitch8687_g117895 = localSamplePlanar2D238_g117981;
				#endif
				half4 Layer237_g117911 = staticSwitch8687_g117895;
				TEXTURE2D(Texture238_g117982) = _TerrainNormalTex7;
				SamplerState Sampler238_g117982 = SS29_g118002;
				float4 temp_output_37_0_g117982 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117982 = temp_output_37_0_g117982;
				float3 temp_output_279_0_g117982 = Input_Position9197_g117895;
				half3 WorldPosition238_g117982 = temp_output_279_0_g117982;
				half4 localSamplePlanar2D238_g117982 = SamplePlanar2D( Texture238_g117982 , Sampler238_g117982 , Coords238_g117982 , WorldPosition238_g117982 );
				TEXTURE2D(Texture246_g117982) = _TerrainNormalTex7;
				SamplerState Sampler246_g117982 = SS29_g118002;
				half4 Coords246_g117982 = temp_output_37_0_g117982;
				half3 WorldPosition246_g117982 = temp_output_279_0_g117982;
				float3 temp_output_280_0_g117982 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117982 = temp_output_280_0_g117982;
				half4 localSamplePlanar3D246_g117982 = SamplePlanar3D( Texture246_g117982 , Sampler246_g117982 , Coords246_g117982 , WorldPosition246_g117982 , WorldNormal246_g117982 );
				TEXTURE2D(Texture234_g117982) = _TerrainNormalTex7;
				SamplerState Sampler234_g117982 = SS29_g118002;
				float4 Coords234_g117982 = temp_output_37_0_g117982;
				float3 WorldPosition234_g117982 = temp_output_279_0_g117982;
				float4 localSampleStochastic2D234_g117982 = SampleStochastic2D( Texture234_g117982 , Sampler234_g117982 , Coords234_g117982 , WorldPosition234_g117982 );
				TEXTURE2D(Texture263_g117982) = _TerrainNormalTex7;
				SamplerState Sampler263_g117982 = SS29_g118002;
				half4 Coords263_g117982 = temp_output_37_0_g117982;
				half3 WorldPosition263_g117982 = temp_output_279_0_g117982;
				half3 WorldNormal263_g117982 = temp_output_280_0_g117982;
				half4 localSampleStochastic3D263_g117982 = SampleStochastic3D( Texture263_g117982 , Sampler263_g117982 , Coords263_g117982 , WorldPosition263_g117982 , WorldNormal263_g117982 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8688_g117895 = localSamplePlanar2D238_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8688_g117895 = localSamplePlanar3D246_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8688_g117895 = localSampleStochastic2D234_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8688_g117895 = localSampleStochastic3D263_g117982;
				#else
				float4 staticSwitch8688_g117895 = localSamplePlanar2D238_g117982;
				#endif
				half4 Layer338_g117911 = staticSwitch8688_g117895;
				TEXTURE2D(Texture238_g117983) = _TerrainNormalTex8;
				SamplerState Sampler238_g117983 = SS29_g118002;
				float4 temp_output_37_0_g117983 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117983 = temp_output_37_0_g117983;
				float3 temp_output_279_0_g117983 = Input_Position9197_g117895;
				half3 WorldPosition238_g117983 = temp_output_279_0_g117983;
				half4 localSamplePlanar2D238_g117983 = SamplePlanar2D( Texture238_g117983 , Sampler238_g117983 , Coords238_g117983 , WorldPosition238_g117983 );
				TEXTURE2D(Texture246_g117983) = _TerrainNormalTex8;
				SamplerState Sampler246_g117983 = SS29_g118002;
				half4 Coords246_g117983 = temp_output_37_0_g117983;
				half3 WorldPosition246_g117983 = temp_output_279_0_g117983;
				float3 temp_output_280_0_g117983 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117983 = temp_output_280_0_g117983;
				half4 localSamplePlanar3D246_g117983 = SamplePlanar3D( Texture246_g117983 , Sampler246_g117983 , Coords246_g117983 , WorldPosition246_g117983 , WorldNormal246_g117983 );
				TEXTURE2D(Texture234_g117983) = _TerrainNormalTex8;
				SamplerState Sampler234_g117983 = SS29_g118002;
				float4 Coords234_g117983 = temp_output_37_0_g117983;
				float3 WorldPosition234_g117983 = temp_output_279_0_g117983;
				float4 localSampleStochastic2D234_g117983 = SampleStochastic2D( Texture234_g117983 , Sampler234_g117983 , Coords234_g117983 , WorldPosition234_g117983 );
				TEXTURE2D(Texture263_g117983) = _TerrainNormalTex8;
				SamplerState Sampler263_g117983 = SS29_g118002;
				half4 Coords263_g117983 = temp_output_37_0_g117983;
				half3 WorldPosition263_g117983 = temp_output_279_0_g117983;
				half3 WorldNormal263_g117983 = temp_output_280_0_g117983;
				half4 localSampleStochastic3D263_g117983 = SampleStochastic3D( Texture263_g117983 , Sampler263_g117983 , Coords263_g117983 , WorldPosition263_g117983 , WorldNormal263_g117983 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8689_g117895 = localSamplePlanar2D238_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8689_g117895 = localSamplePlanar3D246_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8689_g117895 = localSampleStochastic2D234_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8689_g117895 = localSampleStochastic3D263_g117983;
				#else
				float4 staticSwitch8689_g117895 = localSamplePlanar2D238_g117983;
				#endif
				half4 Layer439_g117911 = staticSwitch8689_g117895;
				float4 weightedBlendVar31_g117911 = Weights52_g117911;
				float4 weightedBlend31_g117911 = ( weightedBlendVar31_g117911.x*Layer133_g117911 + weightedBlendVar31_g117911.y*Layer237_g117911 + weightedBlendVar31_g117911.z*Layer338_g117911 + weightedBlendVar31_g117911.w*Layer439_g117911 );
				half4 Terrain_B_088684_g117895 = weightedBlend31_g117911;
				half4 Layer_0810_g117902 = Terrain_B_088684_g117895;
				half4 Weights52_g117918 = Terrain_Weights_127710_g117895;
				TEXTURE2D(Texture238_g117955) = _TerrainNormalTex9;
				SamplerState Sampler238_g117955 = SS29_g118002;
				float4 temp_output_37_0_g117955 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117955 = temp_output_37_0_g117955;
				float3 temp_output_279_0_g117955 = Input_Position9197_g117895;
				half3 WorldPosition238_g117955 = temp_output_279_0_g117955;
				half4 localSamplePlanar2D238_g117955 = SamplePlanar2D( Texture238_g117955 , Sampler238_g117955 , Coords238_g117955 , WorldPosition238_g117955 );
				TEXTURE2D(Texture246_g117955) = _TerrainNormalTex9;
				SamplerState Sampler246_g117955 = SS29_g118002;
				half4 Coords246_g117955 = temp_output_37_0_g117955;
				half3 WorldPosition246_g117955 = temp_output_279_0_g117955;
				float3 temp_output_280_0_g117955 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117955 = temp_output_280_0_g117955;
				half4 localSamplePlanar3D246_g117955 = SamplePlanar3D( Texture246_g117955 , Sampler246_g117955 , Coords246_g117955 , WorldPosition246_g117955 , WorldNormal246_g117955 );
				TEXTURE2D(Texture234_g117955) = _TerrainNormalTex9;
				SamplerState Sampler234_g117955 = SS29_g118002;
				float4 Coords234_g117955 = temp_output_37_0_g117955;
				float3 WorldPosition234_g117955 = temp_output_279_0_g117955;
				float4 localSampleStochastic2D234_g117955 = SampleStochastic2D( Texture234_g117955 , Sampler234_g117955 , Coords234_g117955 , WorldPosition234_g117955 );
				TEXTURE2D(Texture263_g117955) = _TerrainNormalTex9;
				SamplerState Sampler263_g117955 = SS29_g118002;
				half4 Coords263_g117955 = temp_output_37_0_g117955;
				half3 WorldPosition263_g117955 = temp_output_279_0_g117955;
				half3 WorldNormal263_g117955 = temp_output_280_0_g117955;
				half4 localSampleStochastic3D263_g117955 = SampleStochastic3D( Texture263_g117955 , Sampler263_g117955 , Coords263_g117955 , WorldPosition263_g117955 , WorldNormal263_g117955 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8849_g117895 = localSamplePlanar2D238_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8849_g117895 = localSamplePlanar3D246_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8849_g117895 = localSampleStochastic2D234_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8849_g117895 = localSampleStochastic3D263_g117955;
				#else
				float4 staticSwitch8849_g117895 = localSamplePlanar2D238_g117955;
				#endif
				half4 Layer133_g117918 = staticSwitch8849_g117895;
				TEXTURE2D(Texture238_g117960) = _TerrainNormalTex10;
				SamplerState Sampler238_g117960 = SS29_g118002;
				float4 temp_output_37_0_g117960 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117960 = temp_output_37_0_g117960;
				float3 temp_output_279_0_g117960 = Input_Position9197_g117895;
				half3 WorldPosition238_g117960 = temp_output_279_0_g117960;
				half4 localSamplePlanar2D238_g117960 = SamplePlanar2D( Texture238_g117960 , Sampler238_g117960 , Coords238_g117960 , WorldPosition238_g117960 );
				TEXTURE2D(Texture246_g117960) = _TerrainNormalTex10;
				SamplerState Sampler246_g117960 = SS29_g118002;
				half4 Coords246_g117960 = temp_output_37_0_g117960;
				half3 WorldPosition246_g117960 = temp_output_279_0_g117960;
				float3 temp_output_280_0_g117960 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117960 = temp_output_280_0_g117960;
				half4 localSamplePlanar3D246_g117960 = SamplePlanar3D( Texture246_g117960 , Sampler246_g117960 , Coords246_g117960 , WorldPosition246_g117960 , WorldNormal246_g117960 );
				TEXTURE2D(Texture234_g117960) = _TerrainNormalTex10;
				SamplerState Sampler234_g117960 = SS29_g118002;
				float4 Coords234_g117960 = temp_output_37_0_g117960;
				float3 WorldPosition234_g117960 = temp_output_279_0_g117960;
				float4 localSampleStochastic2D234_g117960 = SampleStochastic2D( Texture234_g117960 , Sampler234_g117960 , Coords234_g117960 , WorldPosition234_g117960 );
				TEXTURE2D(Texture263_g117960) = _TerrainNormalTex10;
				SamplerState Sampler263_g117960 = SS29_g118002;
				half4 Coords263_g117960 = temp_output_37_0_g117960;
				half3 WorldPosition263_g117960 = temp_output_279_0_g117960;
				half3 WorldNormal263_g117960 = temp_output_280_0_g117960;
				half4 localSampleStochastic3D263_g117960 = SampleStochastic3D( Texture263_g117960 , Sampler263_g117960 , Coords263_g117960 , WorldPosition263_g117960 , WorldNormal263_g117960 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8876_g117895 = localSamplePlanar2D238_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8876_g117895 = localSamplePlanar3D246_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8876_g117895 = localSampleStochastic2D234_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8876_g117895 = localSampleStochastic3D263_g117960;
				#else
				float4 staticSwitch8876_g117895 = localSamplePlanar2D238_g117960;
				#endif
				half4 Layer237_g117918 = staticSwitch8876_g117895;
				TEXTURE2D(Texture238_g117961) = _TerrainNormalTex11;
				SamplerState Sampler238_g117961 = SS29_g118002;
				float4 temp_output_37_0_g117961 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117961 = temp_output_37_0_g117961;
				float3 temp_output_279_0_g117961 = Input_Position9197_g117895;
				half3 WorldPosition238_g117961 = temp_output_279_0_g117961;
				half4 localSamplePlanar2D238_g117961 = SamplePlanar2D( Texture238_g117961 , Sampler238_g117961 , Coords238_g117961 , WorldPosition238_g117961 );
				TEXTURE2D(Texture246_g117961) = _TerrainNormalTex11;
				SamplerState Sampler246_g117961 = SS29_g118002;
				half4 Coords246_g117961 = temp_output_37_0_g117961;
				half3 WorldPosition246_g117961 = temp_output_279_0_g117961;
				float3 temp_output_280_0_g117961 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117961 = temp_output_280_0_g117961;
				half4 localSamplePlanar3D246_g117961 = SamplePlanar3D( Texture246_g117961 , Sampler246_g117961 , Coords246_g117961 , WorldPosition246_g117961 , WorldNormal246_g117961 );
				TEXTURE2D(Texture234_g117961) = _TerrainNormalTex11;
				SamplerState Sampler234_g117961 = SS29_g118002;
				float4 Coords234_g117961 = temp_output_37_0_g117961;
				float3 WorldPosition234_g117961 = temp_output_279_0_g117961;
				float4 localSampleStochastic2D234_g117961 = SampleStochastic2D( Texture234_g117961 , Sampler234_g117961 , Coords234_g117961 , WorldPosition234_g117961 );
				TEXTURE2D(Texture263_g117961) = _TerrainNormalTex11;
				SamplerState Sampler263_g117961 = SS29_g118002;
				half4 Coords263_g117961 = temp_output_37_0_g117961;
				half3 WorldPosition263_g117961 = temp_output_279_0_g117961;
				half3 WorldNormal263_g117961 = temp_output_280_0_g117961;
				half4 localSampleStochastic3D263_g117961 = SampleStochastic3D( Texture263_g117961 , Sampler263_g117961 , Coords263_g117961 , WorldPosition263_g117961 , WorldNormal263_g117961 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8850_g117895 = localSamplePlanar2D238_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8850_g117895 = localSamplePlanar3D246_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8850_g117895 = localSampleStochastic2D234_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8850_g117895 = localSampleStochastic3D263_g117961;
				#else
				float4 staticSwitch8850_g117895 = localSamplePlanar2D238_g117961;
				#endif
				half4 Layer338_g117918 = staticSwitch8850_g117895;
				TEXTURE2D(Texture238_g117962) = _TerrainNormalTex12;
				SamplerState Sampler238_g117962 = SS29_g118002;
				float4 temp_output_37_0_g117962 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117962 = temp_output_37_0_g117962;
				float3 temp_output_279_0_g117962 = Input_Position9197_g117895;
				half3 WorldPosition238_g117962 = temp_output_279_0_g117962;
				half4 localSamplePlanar2D238_g117962 = SamplePlanar2D( Texture238_g117962 , Sampler238_g117962 , Coords238_g117962 , WorldPosition238_g117962 );
				TEXTURE2D(Texture246_g117962) = _TerrainNormalTex12;
				SamplerState Sampler246_g117962 = SS29_g118002;
				half4 Coords246_g117962 = temp_output_37_0_g117962;
				half3 WorldPosition246_g117962 = temp_output_279_0_g117962;
				float3 temp_output_280_0_g117962 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117962 = temp_output_280_0_g117962;
				half4 localSamplePlanar3D246_g117962 = SamplePlanar3D( Texture246_g117962 , Sampler246_g117962 , Coords246_g117962 , WorldPosition246_g117962 , WorldNormal246_g117962 );
				TEXTURE2D(Texture234_g117962) = _TerrainNormalTex12;
				SamplerState Sampler234_g117962 = SS29_g118002;
				float4 Coords234_g117962 = temp_output_37_0_g117962;
				float3 WorldPosition234_g117962 = temp_output_279_0_g117962;
				float4 localSampleStochastic2D234_g117962 = SampleStochastic2D( Texture234_g117962 , Sampler234_g117962 , Coords234_g117962 , WorldPosition234_g117962 );
				TEXTURE2D(Texture263_g117962) = _TerrainNormalTex12;
				SamplerState Sampler263_g117962 = SS29_g118002;
				half4 Coords263_g117962 = temp_output_37_0_g117962;
				half3 WorldPosition263_g117962 = temp_output_279_0_g117962;
				half3 WorldNormal263_g117962 = temp_output_280_0_g117962;
				half4 localSampleStochastic3D263_g117962 = SampleStochastic3D( Texture263_g117962 , Sampler263_g117962 , Coords263_g117962 , WorldPosition263_g117962 , WorldNormal263_g117962 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8877_g117895 = localSamplePlanar2D238_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8877_g117895 = localSamplePlanar3D246_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8877_g117895 = localSampleStochastic2D234_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8877_g117895 = localSampleStochastic3D263_g117962;
				#else
				float4 staticSwitch8877_g117895 = localSamplePlanar2D238_g117962;
				#endif
				half4 Layer439_g117918 = staticSwitch8877_g117895;
				float4 weightedBlendVar31_g117918 = Weights52_g117918;
				float4 weightedBlend31_g117918 = ( weightedBlendVar31_g117918.x*Layer133_g117918 + weightedBlendVar31_g117918.y*Layer237_g117918 + weightedBlendVar31_g117918.z*Layer338_g117918 + weightedBlendVar31_g117918.w*Layer439_g117918 );
				half4 Terrain_B_128865_g117895 = weightedBlend31_g117918;
				half4 Layer_1243_g117902 = Terrain_B_128865_g117895;
				half4 Weights52_g117925 = Terrain_Weights_167709_g117895;
				TEXTURE2D(Texture238_g117965) = _TerrainNormalTex13;
				SamplerState Sampler238_g117965 = SS29_g118002;
				float4 temp_output_37_0_g117965 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117965 = temp_output_37_0_g117965;
				float3 temp_output_279_0_g117965 = Input_Position9197_g117895;
				half3 WorldPosition238_g117965 = temp_output_279_0_g117965;
				half4 localSamplePlanar2D238_g117965 = SamplePlanar2D( Texture238_g117965 , Sampler238_g117965 , Coords238_g117965 , WorldPosition238_g117965 );
				TEXTURE2D(Texture246_g117965) = _TerrainNormalTex13;
				SamplerState Sampler246_g117965 = SS29_g118002;
				half4 Coords246_g117965 = temp_output_37_0_g117965;
				half3 WorldPosition246_g117965 = temp_output_279_0_g117965;
				float3 temp_output_280_0_g117965 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117965 = temp_output_280_0_g117965;
				half4 localSamplePlanar3D246_g117965 = SamplePlanar3D( Texture246_g117965 , Sampler246_g117965 , Coords246_g117965 , WorldPosition246_g117965 , WorldNormal246_g117965 );
				TEXTURE2D(Texture234_g117965) = _TerrainNormalTex13;
				SamplerState Sampler234_g117965 = SS29_g118002;
				float4 Coords234_g117965 = temp_output_37_0_g117965;
				float3 WorldPosition234_g117965 = temp_output_279_0_g117965;
				float4 localSampleStochastic2D234_g117965 = SampleStochastic2D( Texture234_g117965 , Sampler234_g117965 , Coords234_g117965 , WorldPosition234_g117965 );
				TEXTURE2D(Texture263_g117965) = _TerrainNormalTex13;
				SamplerState Sampler263_g117965 = SS29_g118002;
				half4 Coords263_g117965 = temp_output_37_0_g117965;
				half3 WorldPosition263_g117965 = temp_output_279_0_g117965;
				half3 WorldNormal263_g117965 = temp_output_280_0_g117965;
				half4 localSampleStochastic3D263_g117965 = SampleStochastic3D( Texture263_g117965 , Sampler263_g117965 , Coords263_g117965 , WorldPosition263_g117965 , WorldNormal263_g117965 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8991_g117895 = localSamplePlanar2D238_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8991_g117895 = localSamplePlanar3D246_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8991_g117895 = localSampleStochastic2D234_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8991_g117895 = localSampleStochastic3D263_g117965;
				#else
				float4 staticSwitch8991_g117895 = localSamplePlanar2D238_g117965;
				#endif
				half4 Layer133_g117925 = staticSwitch8991_g117895;
				TEXTURE2D(Texture238_g117972) = _TerrainNormalTex14;
				SamplerState Sampler238_g117972 = SS29_g118002;
				float4 temp_output_37_0_g117972 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117972 = temp_output_37_0_g117972;
				float3 temp_output_279_0_g117972 = Input_Position9197_g117895;
				half3 WorldPosition238_g117972 = temp_output_279_0_g117972;
				half4 localSamplePlanar2D238_g117972 = SamplePlanar2D( Texture238_g117972 , Sampler238_g117972 , Coords238_g117972 , WorldPosition238_g117972 );
				TEXTURE2D(Texture246_g117972) = _TerrainNormalTex14;
				SamplerState Sampler246_g117972 = SS29_g118002;
				half4 Coords246_g117972 = temp_output_37_0_g117972;
				half3 WorldPosition246_g117972 = temp_output_279_0_g117972;
				float3 temp_output_280_0_g117972 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117972 = temp_output_280_0_g117972;
				half4 localSamplePlanar3D246_g117972 = SamplePlanar3D( Texture246_g117972 , Sampler246_g117972 , Coords246_g117972 , WorldPosition246_g117972 , WorldNormal246_g117972 );
				TEXTURE2D(Texture234_g117972) = _TerrainNormalTex14;
				SamplerState Sampler234_g117972 = SS29_g118002;
				float4 Coords234_g117972 = temp_output_37_0_g117972;
				float3 WorldPosition234_g117972 = temp_output_279_0_g117972;
				float4 localSampleStochastic2D234_g117972 = SampleStochastic2D( Texture234_g117972 , Sampler234_g117972 , Coords234_g117972 , WorldPosition234_g117972 );
				TEXTURE2D(Texture263_g117972) = _TerrainNormalTex14;
				SamplerState Sampler263_g117972 = SS29_g118002;
				half4 Coords263_g117972 = temp_output_37_0_g117972;
				half3 WorldPosition263_g117972 = temp_output_279_0_g117972;
				half3 WorldNormal263_g117972 = temp_output_280_0_g117972;
				half4 localSampleStochastic3D263_g117972 = SampleStochastic3D( Texture263_g117972 , Sampler263_g117972 , Coords263_g117972 , WorldPosition263_g117972 , WorldNormal263_g117972 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8990_g117895 = localSamplePlanar2D238_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8990_g117895 = localSamplePlanar3D246_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8990_g117895 = localSampleStochastic2D234_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8990_g117895 = localSampleStochastic3D263_g117972;
				#else
				float4 staticSwitch8990_g117895 = localSamplePlanar2D238_g117972;
				#endif
				half4 Layer237_g117925 = staticSwitch8990_g117895;
				TEXTURE2D(Texture238_g117973) = _TerrainNormalTex15;
				SamplerState Sampler238_g117973 = SS29_g118002;
				float4 temp_output_37_0_g117973 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117973 = temp_output_37_0_g117973;
				float3 temp_output_279_0_g117973 = Input_Position9197_g117895;
				half3 WorldPosition238_g117973 = temp_output_279_0_g117973;
				half4 localSamplePlanar2D238_g117973 = SamplePlanar2D( Texture238_g117973 , Sampler238_g117973 , Coords238_g117973 , WorldPosition238_g117973 );
				TEXTURE2D(Texture246_g117973) = _TerrainNormalTex15;
				SamplerState Sampler246_g117973 = SS29_g118002;
				half4 Coords246_g117973 = temp_output_37_0_g117973;
				half3 WorldPosition246_g117973 = temp_output_279_0_g117973;
				float3 temp_output_280_0_g117973 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117973 = temp_output_280_0_g117973;
				half4 localSamplePlanar3D246_g117973 = SamplePlanar3D( Texture246_g117973 , Sampler246_g117973 , Coords246_g117973 , WorldPosition246_g117973 , WorldNormal246_g117973 );
				TEXTURE2D(Texture234_g117973) = _TerrainNormalTex15;
				SamplerState Sampler234_g117973 = SS29_g118002;
				float4 Coords234_g117973 = temp_output_37_0_g117973;
				float3 WorldPosition234_g117973 = temp_output_279_0_g117973;
				float4 localSampleStochastic2D234_g117973 = SampleStochastic2D( Texture234_g117973 , Sampler234_g117973 , Coords234_g117973 , WorldPosition234_g117973 );
				TEXTURE2D(Texture263_g117973) = _TerrainNormalTex15;
				SamplerState Sampler263_g117973 = SS29_g118002;
				half4 Coords263_g117973 = temp_output_37_0_g117973;
				half3 WorldPosition263_g117973 = temp_output_279_0_g117973;
				half3 WorldNormal263_g117973 = temp_output_280_0_g117973;
				half4 localSampleStochastic3D263_g117973 = SampleStochastic3D( Texture263_g117973 , Sampler263_g117973 , Coords263_g117973 , WorldPosition263_g117973 , WorldNormal263_g117973 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8989_g117895 = localSamplePlanar2D238_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8989_g117895 = localSamplePlanar3D246_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8989_g117895 = localSampleStochastic2D234_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8989_g117895 = localSampleStochastic3D263_g117973;
				#else
				float4 staticSwitch8989_g117895 = localSamplePlanar2D238_g117973;
				#endif
				half4 Layer338_g117925 = staticSwitch8989_g117895;
				TEXTURE2D(Texture238_g117974) = _TerrainNormalTex16;
				SamplerState Sampler238_g117974 = SS29_g118002;
				float4 temp_output_37_0_g117974 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117974 = temp_output_37_0_g117974;
				float3 temp_output_279_0_g117974 = Input_Position9197_g117895;
				half3 WorldPosition238_g117974 = temp_output_279_0_g117974;
				half4 localSamplePlanar2D238_g117974 = SamplePlanar2D( Texture238_g117974 , Sampler238_g117974 , Coords238_g117974 , WorldPosition238_g117974 );
				TEXTURE2D(Texture246_g117974) = _TerrainNormalTex16;
				SamplerState Sampler246_g117974 = SS29_g118002;
				half4 Coords246_g117974 = temp_output_37_0_g117974;
				half3 WorldPosition246_g117974 = temp_output_279_0_g117974;
				float3 temp_output_280_0_g117974 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117974 = temp_output_280_0_g117974;
				half4 localSamplePlanar3D246_g117974 = SamplePlanar3D( Texture246_g117974 , Sampler246_g117974 , Coords246_g117974 , WorldPosition246_g117974 , WorldNormal246_g117974 );
				TEXTURE2D(Texture234_g117974) = _TerrainNormalTex16;
				SamplerState Sampler234_g117974 = SS29_g118002;
				float4 Coords234_g117974 = temp_output_37_0_g117974;
				float3 WorldPosition234_g117974 = temp_output_279_0_g117974;
				float4 localSampleStochastic2D234_g117974 = SampleStochastic2D( Texture234_g117974 , Sampler234_g117974 , Coords234_g117974 , WorldPosition234_g117974 );
				TEXTURE2D(Texture263_g117974) = _TerrainNormalTex16;
				SamplerState Sampler263_g117974 = SS29_g118002;
				half4 Coords263_g117974 = temp_output_37_0_g117974;
				half3 WorldPosition263_g117974 = temp_output_279_0_g117974;
				half3 WorldNormal263_g117974 = temp_output_280_0_g117974;
				half4 localSampleStochastic3D263_g117974 = SampleStochastic3D( Texture263_g117974 , Sampler263_g117974 , Coords263_g117974 , WorldPosition263_g117974 , WorldNormal263_g117974 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8988_g117895 = localSamplePlanar2D238_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8988_g117895 = localSamplePlanar3D246_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8988_g117895 = localSampleStochastic2D234_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8988_g117895 = localSampleStochastic3D263_g117974;
				#else
				float4 staticSwitch8988_g117895 = localSamplePlanar2D238_g117974;
				#endif
				half4 Layer439_g117925 = staticSwitch8988_g117895;
				float4 weightedBlendVar31_g117925 = Weights52_g117925;
				float4 weightedBlend31_g117925 = ( weightedBlendVar31_g117925.x*Layer133_g117925 + weightedBlendVar31_g117925.y*Layer237_g117925 + weightedBlendVar31_g117925.z*Layer338_g117925 + weightedBlendVar31_g117925.w*Layer439_g117925 );
				half4 Terrain_B_168987_g117895 = weightedBlend31_g117925;
				half4 Layer_1644_g117902 = Terrain_B_168987_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117902 = Layer_045_g117902;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 + Layer_1243_g117902 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 + Layer_1243_g117902 + Layer_1644_g117902 );
				#else
				float4 staticSwitch40_g117902 = Layer_045_g117902;
				#endif
				half4 Blend_Normal7512_g117895 = staticSwitch40_g117902;
				half4 Normal_Packed45_g117996 = Blend_Normal7512_g117895;
				float2 appendResult58_g117996 = (float2(( (Normal_Packed45_g117996).x * (Normal_Packed45_g117996).w ) , (Normal_Packed45_g117996).y));
				half2 Normal_Default50_g117996 = appendResult58_g117996;
				half2 Normal_ASTC41_g117996 = (Normal_Packed45_g117996).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g117996 = Normal_ASTC41_g117996;
				#else
				float2 staticSwitch38_g117996 = Normal_Default50_g117996;
				#endif
				half2 Normal_NO_DTX544_g117996 = (Normal_Packed45_g117996).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g117996 = Normal_NO_DTX544_g117996;
				#else
				float2 staticSwitch37_g117996 = staticSwitch38_g117996;
				#endif
				half4 Weights52_g117898 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117898 = temp_output_6970_0_g117895;
				half4 Layer237_g117898 = temp_output_6977_0_g117895;
				half4 Layer338_g117898 = temp_output_6978_0_g117895;
				half4 Layer439_g117898 = temp_output_6983_0_g117895;
				float4 weightedBlendVar31_g117898 = Weights52_g117898;
				float4 weightedBlend31_g117898 = ( weightedBlendVar31_g117898.x*Layer133_g117898 + weightedBlendVar31_g117898.y*Layer237_g117898 + weightedBlendVar31_g117898.z*Layer338_g117898 + weightedBlendVar31_g117898.w*Layer439_g117898 );
				half4 Terrain_Shaders_047203_g117895 = weightedBlend31_g117898;
				half4 Layer_045_g117904 = Terrain_Shaders_047203_g117895;
				half4 Weights52_g117914 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117914 = temp_output_8714_0_g117895;
				half4 Layer237_g117914 = temp_output_8721_0_g117895;
				half4 Layer338_g117914 = temp_output_8724_0_g117895;
				half4 Layer439_g117914 = temp_output_8727_0_g117895;
				float4 weightedBlendVar31_g117914 = Weights52_g117914;
				float4 weightedBlend31_g117914 = ( weightedBlendVar31_g117914.x*Layer133_g117914 + weightedBlendVar31_g117914.y*Layer237_g117914 + weightedBlendVar31_g117914.z*Layer338_g117914 + weightedBlendVar31_g117914.w*Layer439_g117914 );
				half4 Terrain_Shaders_088730_g117895 = weightedBlend31_g117914;
				half4 Layer_0810_g117904 = Terrain_Shaders_088730_g117895;
				half4 Weights52_g117921 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117921 = temp_output_8815_0_g117895;
				half4 Layer237_g117921 = temp_output_8818_0_g117895;
				half4 Layer338_g117921 = temp_output_8819_0_g117895;
				half4 Layer439_g117921 = temp_output_8820_0_g117895;
				float4 weightedBlendVar31_g117921 = Weights52_g117921;
				float4 weightedBlend31_g117921 = ( weightedBlendVar31_g117921.x*Layer133_g117921 + weightedBlendVar31_g117921.y*Layer237_g117921 + weightedBlendVar31_g117921.z*Layer338_g117921 + weightedBlendVar31_g117921.w*Layer439_g117921 );
				half4 Terrain_Shaders_128871_g117895 = weightedBlend31_g117921;
				half4 Layer_1243_g117904 = Terrain_Shaders_128871_g117895;
				half4 Weights52_g117928 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117928 = temp_output_8931_0_g117895;
				half4 Layer237_g117928 = temp_output_8934_0_g117895;
				half4 Layer338_g117928 = temp_output_8935_0_g117895;
				half4 Layer439_g117928 = temp_output_8936_0_g117895;
				float4 weightedBlendVar31_g117928 = Weights52_g117928;
				float4 weightedBlend31_g117928 = ( weightedBlendVar31_g117928.x*Layer133_g117928 + weightedBlendVar31_g117928.y*Layer237_g117928 + weightedBlendVar31_g117928.z*Layer338_g117928 + weightedBlendVar31_g117928.w*Layer439_g117928 );
				half4 Terrain_Shaders_169014_g117895 = weightedBlend31_g117928;
				half4 Layer_1644_g117904 = Terrain_Shaders_169014_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117904 = Layer_045_g117904;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 + Layer_1243_g117904 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 + Layer_1243_g117904 + Layer_1644_g117904 );
				#else
				float4 staticSwitch40_g117904 = Layer_045_g117904;
				#endif
				half4 Blend_Shaders7420_g117895 = staticSwitch40_g117904;
				half4 Normal_Packed45_g117995 = Blend_Shaders7420_g117895;
				half2 Normal_NO_DTX544_g117995 = (Normal_Packed45_g117995).wy;
				#ifdef TVE_TERRAIN_PACKED
				float2 staticSwitch9080_g117895 = (Normal_NO_DTX544_g117995*2.0 + -1.0);
				#else
				float2 staticSwitch9080_g117895 = (staticSwitch37_g117996*2.0 + -1.0);
				#endif
				half4 Weights52_g117899 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117899 = _TerrainParams1;
				half4 Layer237_g117899 = _TerrainParams2;
				half4 Layer338_g117899 = _TerrainParams3;
				half4 Layer439_g117899 = _TerrainParams4;
				float4 weightedBlendVar31_g117899 = Weights52_g117899;
				float4 weightedBlend31_g117899 = ( weightedBlendVar31_g117899.x*Layer133_g117899 + weightedBlendVar31_g117899.y*Layer237_g117899 + weightedBlendVar31_g117899.z*Layer338_g117899 + weightedBlendVar31_g117899.w*Layer439_g117899 );
				half4 Terrain_Params_047533_g117895 = weightedBlend31_g117899;
				half4 Layer_045_g117905 = Terrain_Params_047533_g117895;
				half4 Weights52_g117915 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117915 = _TerrainParams5;
				half4 Layer237_g117915 = _TerrainParams6;
				half4 Layer338_g117915 = _TerrainParams7;
				half4 Layer439_g117915 = _TerrainParams8;
				float4 weightedBlendVar31_g117915 = Weights52_g117915;
				float4 weightedBlend31_g117915 = ( weightedBlendVar31_g117915.x*Layer133_g117915 + weightedBlendVar31_g117915.y*Layer237_g117915 + weightedBlendVar31_g117915.z*Layer338_g117915 + weightedBlendVar31_g117915.w*Layer439_g117915 );
				half4 Terrain_Params_088739_g117895 = weightedBlend31_g117915;
				half4 Layer_0810_g117905 = Terrain_Params_088739_g117895;
				half4 Weights52_g117922 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117922 = _TerrainParams9;
				half4 Layer237_g117922 = _TerrainParams10;
				half4 Layer338_g117922 = _TerrainParams11;
				half4 Layer439_g117922 = _TerrainParams12;
				float4 weightedBlendVar31_g117922 = Weights52_g117922;
				float4 weightedBlend31_g117922 = ( weightedBlendVar31_g117922.x*Layer133_g117922 + weightedBlendVar31_g117922.y*Layer237_g117922 + weightedBlendVar31_g117922.z*Layer338_g117922 + weightedBlendVar31_g117922.w*Layer439_g117922 );
				half4 Terrain_Params_128867_g117895 = weightedBlend31_g117922;
				half4 Layer_1243_g117905 = Terrain_Params_128867_g117895;
				half4 Weights52_g117929 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117929 = _TerrainParams13;
				half4 Layer237_g117929 = _TerrainParams14;
				half4 Layer338_g117929 = _TerrainParams15;
				half4 Layer439_g117929 = _TerrainParams16;
				float4 weightedBlendVar31_g117929 = Weights52_g117929;
				float4 weightedBlend31_g117929 = ( weightedBlendVar31_g117929.x*Layer133_g117929 + weightedBlendVar31_g117929.y*Layer237_g117929 + weightedBlendVar31_g117929.z*Layer338_g117929 + weightedBlendVar31_g117929.w*Layer439_g117929 );
				half4 Terrain_Params_169017_g117895 = weightedBlend31_g117929;
				half4 Layer_1644_g117905 = Terrain_Params_169017_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117905 = Layer_045_g117905;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 + Layer_1243_g117905 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 + Layer_1243_g117905 + Layer_1644_g117905 );
				#else
				float4 staticSwitch40_g117905 = Layer_045_g117905;
				#endif
				half4 Blend_Params7547_g117895 = staticSwitch40_g117905;
				half2 Normal_Planar45_g117997 = ( ( staticSwitch9080_g117895 * (Blend_Params7547_g117895).z ) * _TerrainNormalValue );
				float2 break71_g117997 = Normal_Planar45_g117997;
				float3 appendResult72_g117997 = (float3(break71_g117997.x , 0.0 , break71_g117997.y));
				half2 Final_NormalTS9145_g117895 = (mul( ase_worldToTangent, appendResult72_g117997 )).xy;
				half2 Local_Normal9200_g117893 = Final_NormalTS9145_g117895;
				float2 In_NormalTS3_g117894 = Local_Normal9200_g117893;
				float3 appendResult68_g118005 = (float3(Local_Normal9200_g117893 , 1.0));
				float3 tanToWorld0 = float3( ase_worldTangent.x, ase_worldBitangent.x, ase_worldNormal.x );
				float3 tanToWorld1 = float3( ase_worldTangent.y, ase_worldBitangent.y, ase_worldNormal.y );
				float3 tanToWorld2 = float3( ase_worldTangent.z, ase_worldBitangent.z, ase_worldNormal.z );
				float3 tanNormal74_g118005 = appendResult68_g118005;
				float3 worldNormal74_g118005 = normalize( float3(dot(tanToWorld0,tanNormal74_g118005), dot(tanToWorld1,tanNormal74_g118005), dot(tanToWorld2,tanNormal74_g118005)) );
				float3 In_NormalWS3_g117894 = worldNormal74_g118005;
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9139_g117895 = 0.0;
				#else
				float staticSwitch9139_g117895 = ( (Blend_Shaders7420_g117895).x * (Blend_Params7547_g117895).x * _TerrainMetallicValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9097_g117895 = 1.0;
				#else
				float staticSwitch9097_g117895 = ( (Blend_Shaders7420_g117895).y * _TerrainOcclusionValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9105_g117895 = (Blend_Shaders7420_g117895).x;
				#else
				float staticSwitch9105_g117895 = (Blend_Shaders7420_g117895).w;
				#endif
				float4 appendResult9147_g117895 = (float4(staticSwitch9139_g117895 , staticSwitch9097_g117895 , (Blend_Shaders7420_g117895).z , ( staticSwitch9105_g117895 * (Blend_Params7547_g117895).w * _TerrainSmoothnessValue )));
				half4 Final_Shaders9146_g117895 = appendResult9147_g117895;
				half4 Local_Shader9201_g117893 = Final_Shaders9146_g117895;
				float4 In_Shader3_g117894 = Local_Shader9201_g117893;
				half4 Weights52_g117988 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117988 = _TerrainSpecular1;
				half4 Layer237_g117988 = _TerrainSpecular2;
				half4 Layer338_g117988 = _TerrainSpecular3;
				half4 Layer439_g117988 = _TerrainSpecular4;
				float4 weightedBlendVar31_g117988 = Weights52_g117988;
				float4 weightedBlend31_g117988 = ( weightedBlendVar31_g117988.x*Layer133_g117988 + weightedBlendVar31_g117988.y*Layer237_g117988 + weightedBlendVar31_g117988.z*Layer338_g117988 + weightedBlendVar31_g117988.w*Layer439_g117988 );
				half4 Terrain_Specular_047390_g117895 = weightedBlend31_g117988;
				half4 Layer_045_g117993 = Terrain_Specular_047390_g117895;
				half4 Weights52_g117916 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117916 = _TerrainSpecular5;
				half4 Layer237_g117916 = _TerrainSpecular6;
				half4 Layer338_g117916 = _TerrainSpecular7;
				half4 Layer439_g117916 = _TerrainSpecular8;
				float4 weightedBlendVar31_g117916 = Weights52_g117916;
				float4 weightedBlend31_g117916 = ( weightedBlendVar31_g117916.x*Layer133_g117916 + weightedBlendVar31_g117916.y*Layer237_g117916 + weightedBlendVar31_g117916.z*Layer338_g117916 + weightedBlendVar31_g117916.w*Layer439_g117916 );
				half4 Terrain_Specular_088745_g117895 = weightedBlend31_g117916;
				half4 Layer_0810_g117993 = Terrain_Specular_088745_g117895;
				half4 Weights52_g117923 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117923 = _TerrainSpecular9;
				half4 Layer237_g117923 = _TerrainSpecular10;
				half4 Layer338_g117923 = _TerrainSpecular11;
				half4 Layer439_g117923 = _TerrainSpecular12;
				float4 weightedBlendVar31_g117923 = Weights52_g117923;
				float4 weightedBlend31_g117923 = ( weightedBlendVar31_g117923.x*Layer133_g117923 + weightedBlendVar31_g117923.y*Layer237_g117923 + weightedBlendVar31_g117923.z*Layer338_g117923 + weightedBlendVar31_g117923.w*Layer439_g117923 );
				half4 Terrain_Specular_128869_g117895 = weightedBlend31_g117923;
				half4 Layer_1243_g117993 = Terrain_Specular_128869_g117895;
				half4 Weights52_g117930 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117930 = _TerrainSpecular13;
				half4 Layer237_g117930 = _TerrainSpecular14;
				half4 Layer338_g117930 = _TerrainSpecular15;
				half4 Layer439_g117930 = _TerrainSpecular16;
				float4 weightedBlendVar31_g117930 = Weights52_g117930;
				float4 weightedBlend31_g117930 = ( weightedBlendVar31_g117930.x*Layer133_g117930 + weightedBlendVar31_g117930.y*Layer237_g117930 + weightedBlendVar31_g117930.z*Layer338_g117930 + weightedBlendVar31_g117930.w*Layer439_g117930 );
				half4 Terrain_Specular_169019_g117895 = weightedBlend31_g117930;
				half4 Layer_1644_g117993 = Terrain_Specular_169019_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117993 = Layer_045_g117993;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 + Layer_1243_g117993 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 + Layer_1243_g117993 + Layer_1644_g117993 );
				#else
				float4 staticSwitch40_g117993 = Layer_045_g117993;
				#endif
				half4 Blend_TerrainSpecular7446_g117895 = staticSwitch40_g117993;
				float3 temp_output_9088_0_g117895 = (Blend_TerrainSpecular7446_g117895).rgb;
				float4 appendResult9189_g117895 = (float4(temp_output_9088_0_g117895 , 1.0));
				half4 Final_Emissive9151_g117895 = appendResult9189_g117895;
				half4 Local_EmissiveLDR9202_g117893 = Final_Emissive9151_g117895;
				float4 In_Emissive3_g117894 = Local_EmissiveLDR9202_g117893;
				float3 temp_output_3_0_g118006 = Local_Albedo9199_g117893;
				float dotResult20_g118006 = dot( temp_output_3_0_g118006 , float3(0.2126,0.7152,0.0722) );
				float temp_output_9165_0_g117893 = dotResult20_g118006;
				float In_Grayscale3_g117894 = temp_output_9165_0_g117893;
				float clampResult9168_g117893 = clamp( saturate( ( temp_output_9165_0_g117893 * 5.0 ) ) , 0.2 , 1.0 );
				float In_Luminosity3_g117894 = clampResult9168_g117893;
				half Final_MultiShader9150_g117895 = ( (Blend_TerrainSpecular7446_g117895).a * (Blend_Albedo7468_g117895).w );
				half Local_MultiMask9203_g117893 = Final_MultiShader9150_g117895;
				float In_MultiMask3_g117894 = Local_MultiMask9203_g117893;
				float4 temp_output_35_0_g118004 = appendResult9125_g117895;
				float2 InputScale48_g118004 = (temp_output_35_0_g118004).zw;
				half2 FinalScale53_g118004 = ( 1.0 / InputScale48_g118004 );
				float2 InputPosition52_g118004 = (temp_output_35_0_g118004).xy;
				half2 FinalPosition58_g118004 = -( FinalScale53_g118004 * InputPosition52_g118004 );
				float2 temp_output_65_0_g118004 = ( ( (ase_worldPos).xz * FinalScale53_g118004 ) + FinalPosition58_g118004 );
				float2 Terrain_Holes_UV9406_g117895 = temp_output_65_0_g118004;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch9188_g117895 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9406_g117895 ).r;
				#else
				float staticSwitch9188_g117895 = 1.0;
				#endif
				half Terrain_Holes7437_g117895 = staticSwitch9188_g117895;
				half Local_HoleMask9204_g117893 = Terrain_Holes7437_g117895;
				float In_AlphaClip3_g117894 = Local_HoleMask9204_g117893;
				float In_AlphaFade3_g117894 = 1.0;
				float3 temp_cast_9 = (1.0).xxx;
				float3 In_Translucency3_g117894 = temp_cast_9;
				float In_Transmission3_g117894 = 1.0;
				float In_Thickness3_g117894 = 0.0;
				float In_Diffusion3_g117894 = 0.0;
				Data3_g117894.Dummy = In_Dummy3_g117894;
				Data3_g117894.Albedo = In_Albedo3_g117894;
				Data3_g117894.AlbedoRaw = In_AlbedoRaw3_g117894;
				Data3_g117894.NormalTS = In_NormalTS3_g117894;
				Data3_g117894.NormalWS = In_NormalWS3_g117894;
				Data3_g117894.Shader = In_Shader3_g117894;
				Data3_g117894.Emissive= In_Emissive3_g117894;
				Data3_g117894.MultiMask = In_MultiMask3_g117894;
				Data3_g117894.Grayscale = In_Grayscale3_g117894;
				Data3_g117894.Luminosity = In_Luminosity3_g117894;
				Data3_g117894.AlphaClip = In_AlphaClip3_g117894;
				Data3_g117894.AlphaFade = In_AlphaFade3_g117894;
				Data3_g117894.Translucency = In_Translucency3_g117894;
				Data3_g117894.Transmission = In_Transmission3_g117894;
				Data3_g117894.Thickness = In_Thickness3_g117894;
				Data3_g117894.Diffusion = In_Diffusion3_g117894;
				TVEVisualData Data4_g118029 = Data3_g117894;
				float Out_Dummy4_g118029 = 0;
				float3 Out_Albedo4_g118029 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118029 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118029 = float2( 0,0 );
				float3 Out_NormalWS4_g118029 = float3( 0,0,0 );
				float4 Out_Shader4_g118029 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118029 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118029 = 0;
				float Out_Grayscale4_g118029 = 0;
				float Out_Luminosity4_g118029 = 0;
				float Out_AlphaClip4_g118029 = 0;
				float Out_AlphaFade4_g118029 = 0;
				float3 Out_Translucency4_g118029 = float3( 0,0,0 );
				float Out_Transmission4_g118029 = 0;
				float Out_Thickness4_g118029 = 0;
				float Out_Diffusion4_g118029 = 0;
				Out_Dummy4_g118029 = Data4_g118029.Dummy;
				Out_Albedo4_g118029 = Data4_g118029.Albedo;
				Out_AlbedoRaw4_g118029 = Data4_g118029.AlbedoRaw;
				Out_NormalTS4_g118029 = Data4_g118029.NormalTS;
				Out_NormalWS4_g118029 = Data4_g118029.NormalWS;
				Out_Shader4_g118029 = Data4_g118029.Shader;
				Out_Emissive4_g118029= Data4_g118029.Emissive;
				Out_MultiMask4_g118029 = Data4_g118029.MultiMask;
				Out_Grayscale4_g118029 = Data4_g118029.Grayscale;
				Out_Luminosity4_g118029= Data4_g118029.Luminosity;
				Out_AlphaClip4_g118029 = Data4_g118029.AlphaClip;
				Out_AlphaFade4_g118029 = Data4_g118029.AlphaFade;
				Out_Translucency4_g118029 = Data4_g118029.Translucency;
				Out_Transmission4_g118029 = Data4_g118029.Transmission;
				Out_Thickness4_g118029 = Data4_g118029.Thickness;
				Out_Diffusion4_g118029 = Data4_g118029.Diffusion;
				half3 Visual_Albedo139_g118007 = Out_Albedo4_g118029;
				float temp_output_200_12_g118007 = Out_Grayscale4_g118029;
				half Visual_Grayscale150_g118007 = temp_output_200_12_g118007;
				float3 temp_cast_10 = (Visual_Grayscale150_g118007).xxx;
				float localBuildGlobalData204_g117810 = ( 0.0 );
				TVEGlobalData Data204_g117810 = (TVEGlobalData)0;
				half Dummy211_g117810 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g117810 = Dummy211_g117810;
				half4 Coat_Params302_g117810 = TVE_CoatParams;
				float4 In_CoatParams204_g117810 = Coat_Params302_g117810;
				float temp_output_82_0_g117811 = _GlobalPaintLayerValue;
				float temp_output_19_0_g117813 = TVE_PaintLayers[(int)temp_output_82_0_g117811];
				TVEModelData Data16_g117809 = (TVEModelData)0;
				float In_Dummy16_g117809 = 0.0;
				float3 vertexToFrag73_g117794 = packedInput.ase_texcoord6.xyz;
				half3 PositionWS122_g117794 = vertexToFrag73_g117794;
				float3 In_PositionWS16_g117809 = PositionWS122_g117794;
				float3 localObjectPosition_UNITY_MATRIX_M14_g117796 = ObjectPosition_UNITY_MATRIX_M();
				#ifdef SHADEROPTIONS_CAMERA_RELATIVE_RENDERING
				float3 staticSwitch13_g117796 = ( localObjectPosition_UNITY_MATRIX_M14_g117796 + _WorldSpaceCameraPos );
				#else
				float3 staticSwitch13_g117796 = localObjectPosition_UNITY_MATRIX_M14_g117796;
				#endif
				half3 ObjectData20_g117798 = staticSwitch13_g117796;
				half3 WorldData19_g117798 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g117798 = WorldData19_g117798;
				#else
				float3 staticSwitch14_g117798 = ObjectData20_g117798;
				#endif
				float3 temp_output_124_0_g117796 = staticSwitch14_g117798;
				float3 temp_output_239_7_g117794 = temp_output_124_0_g117796;
				half3 PivotWS121_g117794 = temp_output_239_7_g117794;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g117794 = ( PositionWS122_g117794 - PivotWS121_g117794 );
				#else
				float3 staticSwitch204_g117794 = PositionWS122_g117794;
				#endif
				half3 PositionWO132_g117794 = ( staticSwitch204_g117794 - TVE_WorldOrigin );
				float3 In_PositionWO16_g117809 = PositionWO132_g117794;
				float3 In_PivotWS16_g117809 = PivotWS121_g117794;
				half3 PivotWO133_g117794 = ( PivotWS121_g117794 - TVE_WorldOrigin );
				float3 In_PivotWO16_g117809 = PivotWO133_g117794;
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g117794 = normalizedWorldNormal;
				float3 In_NormalWS16_g117809 = Normal_WS95_g117794;
				float3 normalizeResult296_g117794 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g117794 ) );
				half3 ViewDirWS169_g117794 = normalizeResult296_g117794;
				float3 In_ViewDirWS16_g117809 = ViewDirWS169_g117794;
				half4 VertexMasks171_g117794 = packedInput.ase_color;
				float4 In_VertexData16_g117809 = VertexMasks171_g117794;
				float4 In_BoundsData16_g117809 = float4( 1,1,1,1 );
				Data16_g117809.Dummy = In_Dummy16_g117809;
				Data16_g117809.PositionWS = In_PositionWS16_g117809;
				Data16_g117809.PositionWO = In_PositionWO16_g117809;
				Data16_g117809.PivotWS = In_PivotWS16_g117809;
				Data16_g117809.PivotWO = In_PivotWO16_g117809;
				Data16_g117809.NormalWS = In_NormalWS16_g117809;
				Data16_g117809.ViewDirWS = In_ViewDirWS16_g117809;
				Data16_g117809.VertexData = In_VertexData16_g117809;
				Data16_g117809.BoundsData = In_BoundsData16_g117809;
				TVEModelData Data15_g117892 = Data16_g117809;
				float Out_Dummy15_g117892 = 0;
				float3 Out_PositionWS15_g117892 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117892 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117892 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g117892 = float3( 0,0,0 );
				float4 Out_VertexData15_g117892 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117892 = float4( 0,0,0,0 );
				Out_Dummy15_g117892 = Data15_g117892.Dummy;
				Out_PositionWS15_g117892 = Data15_g117892.PositionWS;
				Out_PositionWO15_g117892 = Data15_g117892.PositionWO;
				Out_PivotWS15_g117892 = Data15_g117892.PivotWS;
				Out_PivotWO15_g117892 = Data15_g117892.PivotWO;
				Out_NormalWS15_g117892 = Data15_g117892.NormalWS;
				Out_ViewDirWS15_g117892 = Data15_g117892.ViewDirWS;
				Out_VertexData15_g117892 = Data15_g117892.VertexData;
				Out_BoundsData15_g117892 = Data15_g117892.BoundsData;
				half3 Model_PositionWS143_g117810 = Out_PositionWS15_g117892;
				half3 Input_Position180_g117814 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117814 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_82_0_g117814 = temp_output_82_0_g117811;
				float2 temp_output_119_0_g117814 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_7_0_g117819 = 1.0;
				float temp_output_10_0_g117819 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117819 );
				float4 lerpResult131_g117814 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117814,temp_output_82_0_g117814, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, temp_output_119_0_g117814,temp_output_82_0_g117814, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117814 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117819 ) / temp_output_10_0_g117819 ) ));
				float4 temp_output_17_0_g117813 = lerpResult131_g117814;
				float4 temp_output_3_0_g117813 = TVE_PaintParams;
				float4 ifLocalVar18_g117813 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117813 >= 0.5 )
				ifLocalVar18_g117813 = temp_output_17_0_g117813;
				else
				ifLocalVar18_g117813 = temp_output_3_0_g117813;
				float4 lerpResult22_g117813 = lerp( temp_output_3_0_g117813 , temp_output_17_0_g117813 , temp_output_19_0_g117813);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117813 = lerpResult22_g117813;
				#else
				float4 staticSwitch24_g117813 = ifLocalVar18_g117813;
				#endif
				half4 Paint_Params71_g117810 = staticSwitch24_g117813;
				float4 In_PaintParams204_g117810 = Paint_Params71_g117810;
				float temp_output_82_0_g117829 = _GlobalGlowLayerValue;
				float temp_output_19_0_g117831 = TVE_GlowLayers[(int)temp_output_82_0_g117829];
				half3 Input_Position180_g117832 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117832 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_82_0_g117832 = temp_output_82_0_g117829;
				float2 temp_output_119_0_g117832 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_7_0_g117837 = 1.0;
				float temp_output_10_0_g117837 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117837 );
				float4 lerpResult131_g117832 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117832,temp_output_82_0_g117832, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, temp_output_119_0_g117832,temp_output_82_0_g117832, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117832 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117837 ) / temp_output_10_0_g117837 ) ));
				float4 temp_output_17_0_g117831 = lerpResult131_g117832;
				float4 temp_output_3_0_g117831 = TVE_GlowParams;
				float4 ifLocalVar18_g117831 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117831 >= 0.5 )
				ifLocalVar18_g117831 = temp_output_17_0_g117831;
				else
				ifLocalVar18_g117831 = temp_output_3_0_g117831;
				float4 lerpResult22_g117831 = lerp( temp_output_3_0_g117831 , temp_output_17_0_g117831 , temp_output_19_0_g117831);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117831 = lerpResult22_g117831;
				#else
				float4 staticSwitch24_g117831 = ifLocalVar18_g117831;
				#endif
				half4 Glow_Params248_g117810 = staticSwitch24_g117831;
				float4 In_GlowParams204_g117810 = Glow_Params248_g117810;
				float temp_output_132_0_g117874 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g117876 = TVE_AtmoLayers[(int)temp_output_132_0_g117874];
				half3 Input_Position180_g117877 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117877 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_82_0_g117877 = temp_output_132_0_g117874;
				float2 temp_output_119_0_g117877 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_7_0_g117882 = 1.0;
				float temp_output_10_0_g117882 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117882 );
				float4 lerpResult131_g117877 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117877,temp_output_82_0_g117877, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, temp_output_119_0_g117877,temp_output_82_0_g117877, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117877 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117882 ) / temp_output_10_0_g117882 ) ));
				float4 temp_output_17_0_g117876 = lerpResult131_g117877;
				float4 temp_output_3_0_g117876 = TVE_AtmoParams;
				float4 ifLocalVar18_g117876 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117876 >= 0.5 )
				ifLocalVar18_g117876 = temp_output_17_0_g117876;
				else
				ifLocalVar18_g117876 = temp_output_3_0_g117876;
				float4 lerpResult22_g117876 = lerp( temp_output_3_0_g117876 , temp_output_17_0_g117876 , temp_output_19_0_g117876);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117876 = lerpResult22_g117876;
				#else
				float4 staticSwitch24_g117876 = ifLocalVar18_g117876;
				#endif
				half4 Atmo_Params80_g117810 = staticSwitch24_g117876;
				float4 In_AtmoParams204_g117810 = Atmo_Params80_g117810;
				float temp_output_132_0_g117883 = _GlobalFadeLayerValue;
				float temp_output_19_0_g117885 = TVE_FadeLayers[(int)temp_output_132_0_g117883];
				half3 Input_Position180_g117886 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117886 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_82_0_g117886 = temp_output_132_0_g117883;
				float2 temp_output_119_0_g117886 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_7_0_g117891 = 1.0;
				float temp_output_10_0_g117891 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117891 );
				float4 lerpResult131_g117886 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117886,temp_output_82_0_g117886, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, temp_output_119_0_g117886,temp_output_82_0_g117886, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117886 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117891 ) / temp_output_10_0_g117891 ) ));
				float4 temp_output_17_0_g117885 = lerpResult131_g117886;
				float4 temp_output_3_0_g117885 = TVE_FadeParams;
				float4 ifLocalVar18_g117885 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117885 >= 0.5 )
				ifLocalVar18_g117885 = temp_output_17_0_g117885;
				else
				ifLocalVar18_g117885 = temp_output_3_0_g117885;
				float4 lerpResult22_g117885 = lerp( temp_output_3_0_g117885 , temp_output_17_0_g117885 , temp_output_19_0_g117885);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117885 = lerpResult22_g117885;
				#else
				float4 staticSwitch24_g117885 = ifLocalVar18_g117885;
				#endif
				half4 Fade_Params387_g117810 = staticSwitch24_g117885;
				float4 In_FadeParams204_g117810 = Fade_Params387_g117810;
				half4 Form_Params112_g117810 = TVE_FormParams;
				float4 In_FormParams204_g117810 = Form_Params112_g117810;
				float temp_output_130_0_g117847 = _GlobalLandLayerValue;
				float temp_output_19_0_g117849 = TVE_LandLayers[(int)temp_output_130_0_g117847];
				half3 Input_Position180_g117850 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117850 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_82_0_g117850 = temp_output_130_0_g117847;
				float2 temp_output_119_0_g117850 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_7_0_g117855 = 1.0;
				float temp_output_10_0_g117855 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117855 );
				float4 lerpResult131_g117850 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117850,temp_output_82_0_g117850, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, temp_output_119_0_g117850,temp_output_82_0_g117850, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117850 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117855 ) / temp_output_10_0_g117855 ) ));
				float4 temp_output_17_0_g117849 = lerpResult131_g117850;
				float4 temp_output_3_0_g117849 = TVE_LandParams;
				float4 ifLocalVar18_g117849 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117849 >= 0.5 )
				ifLocalVar18_g117849 = temp_output_17_0_g117849;
				else
				ifLocalVar18_g117849 = temp_output_3_0_g117849;
				float4 lerpResult22_g117849 = lerp( temp_output_3_0_g117849 , temp_output_17_0_g117849 , temp_output_19_0_g117849);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117849 = lerpResult22_g117849;
				#else
				float4 staticSwitch24_g117849 = ifLocalVar18_g117849;
				#endif
				half4 Land_Params375_g117810 = staticSwitch24_g117849;
				float4 In_LandParams204_g117810 = Land_Params375_g117810;
				half4 Wind_Params88_g117810 = TVE_WindParams;
				float4 In_WindParams204_g117810 = Wind_Params88_g117810;
				half4 Push_Params335_g117810 = TVE_PushParams;
				float4 In_PushParams204_g117810 = Push_Params335_g117810;
				Data204_g117810.Dummy = In_Dummy204_g117810;
				Data204_g117810.CoatParams = In_CoatParams204_g117810;
				Data204_g117810.PaintParams = In_PaintParams204_g117810;
				Data204_g117810.GlowParams = In_GlowParams204_g117810;
				Data204_g117810.AtmoParams = In_AtmoParams204_g117810;
				Data204_g117810.FadeParams = In_FadeParams204_g117810;
				Data204_g117810.FormParams= In_FormParams204_g117810;
				Data204_g117810.LandParams = In_LandParams204_g117810;
				Data204_g117810.WindParams = In_WindParams204_g117810;
				Data204_g117810.PushParams = In_PushParams204_g117810;
				TVEGlobalData Data15_g118008 = Data204_g117810;
				float Out_Dummy15_g118008 = 0;
				float4 Out_CoatParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118008 = float4( 0,0,0,0 );
				Out_Dummy15_g118008 = Data15_g118008.Dummy;
				Out_CoatParams15_g118008 = Data15_g118008.CoatParams;
				Out_PaintParams15_g118008 = Data15_g118008.PaintParams;
				Out_GlowParams15_g118008 = Data15_g118008.GlowParams;
				Out_AtmoParams15_g118008= Data15_g118008.AtmoParams;
				Out_FadeParams15_g118008= Data15_g118008.FadeParams;
				Out_FormParams15_g118008 = Data15_g118008.FormParams;
				Out_LandParams15_g118008 = Data15_g118008.LandParams;
				Out_WindParams15_g118008 = Data15_g118008.WindParams;
				Out_PushParams15_g118008 = Data15_g118008.PushParams;
				half4 Global_PaintParams209_g118007 = Out_PaintParams15_g118008;
				float temp_output_6_0_g118009 = ( saturate( (Global_PaintParams209_g118007).w ) * TVE_IsEnabled );
				#ifdef TVE_REGISTER
				float staticSwitch14_g118009 = ( temp_output_6_0_g118009 + ( _TintingElementMode * 0.0 ) );
				#else
				float staticSwitch14_g118009 = temp_output_6_0_g118009;
				#endif
				#ifdef TVE_TINTING_ELEMENT
				float staticSwitch283_g118007 = staticSwitch14_g118009;
				#else
				float staticSwitch283_g118007 = 1.0;
				#endif
				half Tinting_GlobalValue285_g118007 = staticSwitch283_g118007;
				float3 lerpResult368_g118007 = lerp( Visual_Albedo139_g118007 , temp_cast_10 , ( Tinting_GlobalValue285_g118007 * _TintingGrayValue ));
				float3 temp_cast_32 = (1.0).xxx;
				#ifdef TVE_TINTING_ELEMENT
				float3 staticSwitch288_g118007 = (Global_PaintParams209_g118007).xyz;
				#else
				float3 staticSwitch288_g118007 = temp_cast_32;
				#endif
				half3 Tinting_ColorGlobal290_g118007 = staticSwitch288_g118007;
				float temp_output_200_11_g118007 = Out_MultiMask4_g118029;
				half Visual_MultiMask181_g118007 = temp_output_200_11_g118007;
				float lerpResult147_g118007 = lerp( 1.0 , Visual_MultiMask181_g118007 , _TintingMultiValue);
				half Tinting_MutiMask121_g118007 = lerpResult147_g118007;
				half Tinting_TexMask385_g118007 = 1.0;
				float temp_output_200_15_g118007 = Out_Luminosity4_g118029;
				half Visual_Luminosity257_g118007 = temp_output_200_15_g118007;
				float clampResult17_g118021 = clamp( Visual_Luminosity257_g118007 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118020 = _TintingLumaRemap.x;
				float temp_output_10_0_g118020 = ( _TintingLumaRemap.y - temp_output_7_0_g118020 );
				float lerpResult228_g118007 = lerp( 1.0 , saturate( ( ( clampResult17_g118021 - temp_output_7_0_g118020 ) / ( temp_output_10_0_g118020 + 0.0001 ) ) ) , _TintingLumaValue);
				half Tinting_LumaMask153_g118007 = lerpResult228_g118007;
				half Tinting_VertMask309_g118007 = 1.0;
				half Tinting_NoiseMask213_g118007 = 1.0;
				half Custom_Mask345_g118007 = 1.0;
				float temp_output_7_0_g118016 = _TintingBlendRemap.x;
				float temp_output_10_0_g118016 = ( _TintingBlendRemap.y - temp_output_7_0_g118016 );
				half Tinting_Mask242_g118007 = ( saturate( ( ( ( _TintingIntensityValue * Tinting_MutiMask121_g118007 * Tinting_TexMask385_g118007 * Tinting_LumaMask153_g118007 * Tinting_VertMask309_g118007 * Tinting_NoiseMask213_g118007 * Tinting_GlobalValue285_g118007 * Custom_Mask345_g118007 ) - temp_output_7_0_g118016 ) / ( temp_output_10_0_g118016 + 0.0001 ) ) ) * TVE_IsEnabled );
				float3 lerpResult90_g118007 = lerp( Visual_Albedo139_g118007 , ( lerpResult368_g118007 * 4.594794 * Tinting_ColorGlobal290_g118007 * (_TintingColor).rgb ) , Tinting_Mask242_g118007);
				#ifdef TVE_TINTING
				float3 staticSwitch286_g118007 = lerpResult90_g118007;
				#else
				float3 staticSwitch286_g118007 = Visual_Albedo139_g118007;
				#endif
				half3 Final_Albedo97_g118007 = staticSwitch286_g118007;
				float3 In_Albedo3_g118028 = Final_Albedo97_g118007;
				float3 In_AlbedoRaw3_g118028 = Out_AlbedoRaw4_g118029;
				float2 In_NormalTS3_g118028 = Out_NormalTS4_g118029;
				float3 In_NormalWS3_g118028 = Out_NormalWS4_g118029;
				float4 In_Shader3_g118028 = Out_Shader4_g118029;
				float4 In_Emissive3_g118028 = Out_Emissive4_g118029;
				float In_Grayscale3_g118028 = temp_output_200_12_g118007;
				float In_Luminosity3_g118028 = temp_output_200_15_g118007;
				float In_MultiMask3_g118028 = temp_output_200_11_g118007;
				float In_AlphaClip3_g118028 = Out_AlphaClip4_g118029;
				float In_AlphaFade3_g118028 = Out_AlphaFade4_g118029;
				float3 In_Translucency3_g118028 = Out_Translucency4_g118029;
				float In_Transmission3_g118028 = Out_Transmission4_g118029;
				float In_Thickness3_g118028 = Out_Thickness4_g118029;
				float In_Diffusion3_g118028 = Out_Diffusion4_g118029;
				Data3_g118028.Dummy = In_Dummy3_g118028;
				Data3_g118028.Albedo = In_Albedo3_g118028;
				Data3_g118028.AlbedoRaw = In_AlbedoRaw3_g118028;
				Data3_g118028.NormalTS = In_NormalTS3_g118028;
				Data3_g118028.NormalWS = In_NormalWS3_g118028;
				Data3_g118028.Shader = In_Shader3_g118028;
				Data3_g118028.Emissive= In_Emissive3_g118028;
				Data3_g118028.MultiMask = In_MultiMask3_g118028;
				Data3_g118028.Grayscale = In_Grayscale3_g118028;
				Data3_g118028.Luminosity = In_Luminosity3_g118028;
				Data3_g118028.AlphaClip = In_AlphaClip3_g118028;
				Data3_g118028.AlphaFade = In_AlphaFade3_g118028;
				Data3_g118028.Translucency = In_Translucency3_g118028;
				Data3_g118028.Transmission = In_Transmission3_g118028;
				Data3_g118028.Thickness = In_Thickness3_g118028;
				Data3_g118028.Diffusion = In_Diffusion3_g118028;
				TVEVisualData Data4_g118033 = Data3_g118028;
				float Out_Dummy4_g118033 = 0;
				float3 Out_Albedo4_g118033 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118033 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118033 = float2( 0,0 );
				float3 Out_NormalWS4_g118033 = float3( 0,0,0 );
				float4 Out_Shader4_g118033 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118033 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118033 = 0;
				float Out_Grayscale4_g118033 = 0;
				float Out_Luminosity4_g118033 = 0;
				float Out_AlphaClip4_g118033 = 0;
				float Out_AlphaFade4_g118033 = 0;
				float3 Out_Translucency4_g118033 = float3( 0,0,0 );
				float Out_Transmission4_g118033 = 0;
				float Out_Thickness4_g118033 = 0;
				float Out_Diffusion4_g118033 = 0;
				Out_Dummy4_g118033 = Data4_g118033.Dummy;
				Out_Albedo4_g118033 = Data4_g118033.Albedo;
				Out_AlbedoRaw4_g118033 = Data4_g118033.AlbedoRaw;
				Out_NormalTS4_g118033 = Data4_g118033.NormalTS;
				Out_NormalWS4_g118033 = Data4_g118033.NormalWS;
				Out_Shader4_g118033 = Data4_g118033.Shader;
				Out_Emissive4_g118033= Data4_g118033.Emissive;
				Out_MultiMask4_g118033 = Data4_g118033.MultiMask;
				Out_Grayscale4_g118033 = Data4_g118033.Grayscale;
				Out_Luminosity4_g118033= Data4_g118033.Luminosity;
				Out_AlphaClip4_g118033 = Data4_g118033.AlphaClip;
				Out_AlphaFade4_g118033 = Data4_g118033.AlphaFade;
				Out_Translucency4_g118033 = Data4_g118033.Translucency;
				Out_Transmission4_g118033 = Data4_g118033.Transmission;
				Out_Thickness4_g118033 = Data4_g118033.Thickness;
				Out_Diffusion4_g118033 = Data4_g118033.Diffusion;
				half3 Visual_Albedo292_g118031 = Out_Albedo4_g118033;
				float temp_output_280_12_g118031 = Out_Grayscale4_g118033;
				half Visual_Grayscale308_g118031 = temp_output_280_12_g118031;
				float3 temp_cast_33 = (Visual_Grayscale308_g118031).xxx;
				TVEGlobalData Data15_g118032 = Data204_g117810;
				float Out_Dummy15_g118032 = 0;
				float4 Out_CoatParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118032 = float4( 0,0,0,0 );
				Out_Dummy15_g118032 = Data15_g118032.Dummy;
				Out_CoatParams15_g118032 = Data15_g118032.CoatParams;
				Out_PaintParams15_g118032 = Data15_g118032.PaintParams;
				Out_GlowParams15_g118032 = Data15_g118032.GlowParams;
				Out_AtmoParams15_g118032= Data15_g118032.AtmoParams;
				Out_FadeParams15_g118032= Data15_g118032.FadeParams;
				Out_FormParams15_g118032 = Data15_g118032.FormParams;
				Out_LandParams15_g118032 = Data15_g118032.LandParams;
				Out_WindParams15_g118032 = Data15_g118032.WindParams;
				Out_PushParams15_g118032 = Data15_g118032.PushParams;
				half4 Global_AtmoParams314_g118031 = Out_AtmoParams15_g118032;
				#ifdef TVE_DRYNESS_ELEMENT
				float staticSwitch351_g118031 = ( (Global_AtmoParams314_g118031).x * TVE_IsEnabled );
				#else
				float staticSwitch351_g118031 = 1.0;
				#endif
				half Dryness_GlobalMask352_g118031 = staticSwitch351_g118031;
				float3 lerpResult485_g118031 = lerp( Visual_Albedo292_g118031 , temp_cast_33 , ( Dryness_GlobalMask352_g118031 * _DrynessGrayValue ));
				half3 hsvTorgb58_g118052 = RGBToHSV( lerpResult485_g118031 );
				half3 hsvTorgb61_g118052 = HSVToRGB( half3(( hsvTorgb58_g118052.x + _DrynessShiftValue ),hsvTorgb58_g118052.y,hsvTorgb58_g118052.z) );
				#ifdef TVE_DRYNESS_SHIFT
				float3 staticSwitch499_g118031 = hsvTorgb61_g118052;
				#else
				float3 staticSwitch499_g118031 = lerpResult485_g118031;
				#endif
				half Dryness_TexMask478_g118031 = 1.0;
				float temp_output_280_11_g118031 = Out_MultiMask4_g118033;
				half Visual_MultiMask310_g118031 = temp_output_280_11_g118031;
				float lerpResult283_g118031 = lerp( 1.0 , Visual_MultiMask310_g118031 , _DrynessMultiValue);
				half Dryness_MultiMask302_g118031 = lerpResult283_g118031;
				float temp_output_280_15_g118031 = Out_Luminosity4_g118033;
				half Visual_Luminosity309_g118031 = temp_output_280_15_g118031;
				float clampResult17_g118047 = clamp( Visual_Luminosity309_g118031 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118046 = _DrynessLumaRemap.x;
				float temp_output_10_0_g118046 = ( _DrynessLumaRemap.y - temp_output_7_0_g118046 );
				float lerpResult295_g118031 = lerp( 1.0 , saturate( ( ( clampResult17_g118047 - temp_output_7_0_g118046 ) / ( temp_output_10_0_g118046 + 0.0001 ) ) ) , _DrynessLumaValue);
				half Dryness_LumaMask301_g118031 = lerpResult295_g118031;
				half Dryness_VertMask378_g118031 = 1.0;
				half Dryness_MaskNoise291_g118031 = 1.0;
				half Custom_Mask411_g118031 = 1.0;
				float temp_output_7_0_g118045 = _DrynessBlendRemap.x;
				float temp_output_10_0_g118045 = ( _DrynessBlendRemap.y - temp_output_7_0_g118045 );
				half Dryness_Mask329_g118031 = saturate( ( ( ( _DrynessIntensityValue * Dryness_TexMask478_g118031 * Dryness_MultiMask302_g118031 * Dryness_LumaMask301_g118031 * Dryness_VertMask378_g118031 * Dryness_MaskNoise291_g118031 * Dryness_GlobalMask352_g118031 * Custom_Mask411_g118031 ) - temp_output_7_0_g118045 ) / ( temp_output_10_0_g118045 + 0.0001 ) ) );
				float3 lerpResult336_g118031 = lerp( Visual_Albedo292_g118031 , ( staticSwitch499_g118031 * 4.594794 * (_DrynessColor).rgb ) , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float3 staticSwitch356_g118031 = lerpResult336_g118031;
				#else
				float3 staticSwitch356_g118031 = Visual_Albedo292_g118031;
				#endif
				half3 Final_Albedo331_g118031 = staticSwitch356_g118031;
				float3 In_Albedo3_g118034 = Final_Albedo331_g118031;
				float3 In_AlbedoRaw3_g118034 = Out_AlbedoRaw4_g118033;
				float2 In_NormalTS3_g118034 = Out_NormalTS4_g118033;
				float3 In_NormalWS3_g118034 = Out_NormalWS4_g118033;
				half4 Visual_Shader415_g118031 = Out_Shader4_g118033;
				float4 break438_g118031 = Visual_Shader415_g118031;
				float4 appendResult439_g118031 = (float4(break438_g118031.x , break438_g118031.y , break438_g118031.z , ( break438_g118031.w * _DrynessSmoothnessValue )));
				float4 lerpResult427_g118031 = lerp( Visual_Shader415_g118031 , appendResult439_g118031 , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float4 staticSwitch426_g118031 = lerpResult427_g118031;
				#else
				float4 staticSwitch426_g118031 = Visual_Shader415_g118031;
				#endif
				half4 Final_Shader433_g118031 = staticSwitch426_g118031;
				float4 In_Shader3_g118034 = Final_Shader433_g118031;
				float4 In_Emissive3_g118034 = Out_Emissive4_g118033;
				float In_Grayscale3_g118034 = temp_output_280_12_g118031;
				float In_Luminosity3_g118034 = temp_output_280_15_g118031;
				float In_MultiMask3_g118034 = temp_output_280_11_g118031;
				float In_AlphaClip3_g118034 = Out_AlphaClip4_g118033;
				float In_AlphaFade3_g118034 = Out_AlphaFade4_g118033;
				float3 In_Translucency3_g118034 = Out_Translucency4_g118033;
				half Visual_Transmission416_g118031 = Out_Transmission4_g118033;
				float lerpResult421_g118031 = lerp( Visual_Transmission416_g118031 , ( Visual_Transmission416_g118031 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float staticSwitch418_g118031 = lerpResult421_g118031;
				#else
				float staticSwitch418_g118031 = Visual_Transmission416_g118031;
				#endif
				half Final_Transmission425_g118031 = staticSwitch418_g118031;
				float In_Transmission3_g118034 = Final_Transmission425_g118031;
				float In_Thickness3_g118034 = Out_Thickness4_g118033;
				float In_Diffusion3_g118034 = Out_Diffusion4_g118033;
				Data3_g118034.Dummy = In_Dummy3_g118034;
				Data3_g118034.Albedo = In_Albedo3_g118034;
				Data3_g118034.AlbedoRaw = In_AlbedoRaw3_g118034;
				Data3_g118034.NormalTS = In_NormalTS3_g118034;
				Data3_g118034.NormalWS = In_NormalWS3_g118034;
				Data3_g118034.Shader = In_Shader3_g118034;
				Data3_g118034.Emissive= In_Emissive3_g118034;
				Data3_g118034.MultiMask = In_MultiMask3_g118034;
				Data3_g118034.Grayscale = In_Grayscale3_g118034;
				Data3_g118034.Luminosity = In_Luminosity3_g118034;
				Data3_g118034.AlphaClip = In_AlphaClip3_g118034;
				Data3_g118034.AlphaFade = In_AlphaFade3_g118034;
				Data3_g118034.Translucency = In_Translucency3_g118034;
				Data3_g118034.Transmission = In_Transmission3_g118034;
				Data3_g118034.Thickness = In_Thickness3_g118034;
				Data3_g118034.Diffusion = In_Diffusion3_g118034;
				TVEVisualData Data4_g118055 = Data3_g118034;
				float Out_Dummy4_g118055 = 0;
				float3 Out_Albedo4_g118055 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118055 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118055 = float2( 0,0 );
				float3 Out_NormalWS4_g118055 = float3( 0,0,0 );
				float4 Out_Shader4_g118055 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118055 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118055 = 0;
				float Out_Grayscale4_g118055 = 0;
				float Out_Luminosity4_g118055 = 0;
				float Out_AlphaClip4_g118055 = 0;
				float Out_AlphaFade4_g118055 = 0;
				float3 Out_Translucency4_g118055 = float3( 0,0,0 );
				float Out_Transmission4_g118055 = 0;
				float Out_Thickness4_g118055 = 0;
				float Out_Diffusion4_g118055 = 0;
				Out_Dummy4_g118055 = Data4_g118055.Dummy;
				Out_Albedo4_g118055 = Data4_g118055.Albedo;
				Out_AlbedoRaw4_g118055 = Data4_g118055.AlbedoRaw;
				Out_NormalTS4_g118055 = Data4_g118055.NormalTS;
				Out_NormalWS4_g118055 = Data4_g118055.NormalWS;
				Out_Shader4_g118055 = Data4_g118055.Shader;
				Out_Emissive4_g118055= Data4_g118055.Emissive;
				Out_MultiMask4_g118055 = Data4_g118055.MultiMask;
				Out_Grayscale4_g118055 = Data4_g118055.Grayscale;
				Out_Luminosity4_g118055= Data4_g118055.Luminosity;
				Out_AlphaClip4_g118055 = Data4_g118055.AlphaClip;
				Out_AlphaFade4_g118055 = Data4_g118055.AlphaFade;
				Out_Translucency4_g118055 = Data4_g118055.Translucency;
				Out_Transmission4_g118055 = Data4_g118055.Transmission;
				Out_Thickness4_g118055 = Data4_g118055.Thickness;
				Out_Diffusion4_g118055 = Data4_g118055.Diffusion;
				half3 Visual_Albedo127_g118054 = Out_Albedo4_g118055;
				float3 temp_output_622_0_g118054 = (_OverlayColor).rgb;
				TEXTURE2D(Texture238_g118058) = _OverlayAlbedoTex;
				float localFilterTexture19_g118087 = ( 0.0 );
				SamplerState SamplerDefault19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g118087 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g118087 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g118087 = SamplerDefault19_g118087;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g118087 = SamplerDefault19_g118087;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g118087 = SamplerPoint19_g118087;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g118087 = SamplerLow19_g118087;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g118087 = SamplerMedium19_g118087;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g118087 = SamplerHigh19_g118087;
				#endif
				SamplerState Sampler238_g118058 = SS19_g118087;
				float4 temp_output_6_0_g118059 = _overlay_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g118059 = ( temp_output_6_0_g118059 + ( ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g118059 = temp_output_6_0_g118059;
				#endif
				half4 Overlay_Coords639_g118054 = staticSwitch14_g118059;
				float4 temp_output_37_0_g118058 = Overlay_Coords639_g118054;
				half4 Coords238_g118058 = temp_output_37_0_g118058;
				TVEModelData Data15_g118089 = Data16_g117809;
				float Out_Dummy15_g118089 = 0;
				float3 Out_PositionWS15_g118089 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118089 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118089 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118089 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118089 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g118089 = float3( 0,0,0 );
				float4 Out_VertexData15_g118089 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118089 = float4( 0,0,0,0 );
				Out_Dummy15_g118089 = Data15_g118089.Dummy;
				Out_PositionWS15_g118089 = Data15_g118089.PositionWS;
				Out_PositionWO15_g118089 = Data15_g118089.PositionWO;
				Out_PivotWS15_g118089 = Data15_g118089.PivotWS;
				Out_PivotWO15_g118089 = Data15_g118089.PivotWO;
				Out_NormalWS15_g118089 = Data15_g118089.NormalWS;
				Out_ViewDirWS15_g118089 = Data15_g118089.ViewDirWS;
				Out_VertexData15_g118089 = Data15_g118089.VertexData;
				Out_BoundsData15_g118089 = Data15_g118089.BoundsData;
				half3 Model_PositionWO602_g118054 = Out_PositionWO15_g118089;
				float3 temp_output_279_0_g118058 = Model_PositionWO602_g118054;
				half3 WorldPosition238_g118058 = temp_output_279_0_g118058;
				half4 localSamplePlanar2D238_g118058 = SamplePlanar2D( Texture238_g118058 , Sampler238_g118058 , Coords238_g118058 , WorldPosition238_g118058 );
				TEXTURE2D(Texture246_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler246_g118058 = SS19_g118087;
				half4 Coords246_g118058 = temp_output_37_0_g118058;
				half3 WorldPosition246_g118058 = temp_output_279_0_g118058;
				half3 Model_NormalWS712_g118054 = Out_NormalWS15_g118089;
				float3 temp_output_280_0_g118058 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118058 = temp_output_280_0_g118058;
				half4 localSamplePlanar3D246_g118058 = SamplePlanar3D( Texture246_g118058 , Sampler246_g118058 , Coords246_g118058 , WorldPosition246_g118058 , WorldNormal246_g118058 );
				TEXTURE2D(Texture234_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler234_g118058 = SS19_g118087;
				float4 Coords234_g118058 = temp_output_37_0_g118058;
				float3 WorldPosition234_g118058 = temp_output_279_0_g118058;
				float4 localSampleStochastic2D234_g118058 = SampleStochastic2D( Texture234_g118058 , Sampler234_g118058 , Coords234_g118058 , WorldPosition234_g118058 );
				TEXTURE2D(Texture263_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler263_g118058 = SS19_g118087;
				half4 Coords263_g118058 = temp_output_37_0_g118058;
				half3 WorldPosition263_g118058 = temp_output_279_0_g118058;
				half3 WorldNormal263_g118058 = temp_output_280_0_g118058;
				half4 localSampleStochastic3D263_g118058 = SampleStochastic3D( Texture263_g118058 , Sampler263_g118058 , Coords263_g118058 , WorldPosition263_g118058 , WorldNormal263_g118058 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch676_g118054 = localSamplePlanar2D238_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch676_g118054 = localSamplePlanar3D246_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch676_g118054 = localSampleStochastic2D234_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch676_g118054 = localSampleStochastic3D263_g118058;
				#else
				float4 staticSwitch676_g118054 = localSamplePlanar2D238_g118058;
				#endif
				half3 Overlay_Albedo526_g118054 = (staticSwitch676_g118054).xyz;
				#ifdef TVE_OVERLAY_TEX
				float3 staticSwitch578_g118054 = ( temp_output_622_0_g118054 * Overlay_Albedo526_g118054 );
				#else
				float3 staticSwitch578_g118054 = temp_output_622_0_g118054;
				#endif
				float3 temp_output_6_0_g118065 = staticSwitch578_g118054;
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g118065 = ( temp_output_6_0_g118065 + ( _OverlayTextureMode * 0.0 ) );
				#else
				float3 staticSwitch14_g118065 = temp_output_6_0_g118065;
				#endif
				float3 temp_cast_34 = (0.0).xxx;
				TEXTURE2D(Texture246_g118062) = _OverlayGlitterTexRT;
				SamplerState Sampler246_g118062 = sampler_Linear_Repeat;
				float4 appendResult863_g118054 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g118062 = appendResult863_g118054;
				half4 Coords246_g118062 = temp_output_37_0_g118062;
				float3 temp_output_279_0_g118062 = Model_PositionWO602_g118054;
				half3 WorldPosition246_g118062 = temp_output_279_0_g118062;
				float3 temp_output_280_0_g118062 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118062 = temp_output_280_0_g118062;
				half4 localSamplePlanar3D246_g118062 = SamplePlanar3D( Texture246_g118062 , Sampler246_g118062 , Coords246_g118062 , WorldPosition246_g118062 , WorldNormal246_g118062 );
				half Overlay_GlitterTex854_g118054 = (localSamplePlanar3D246_g118062).x;
				half3 Model_PositionWS879_g118054 = Out_PositionWS15_g118089;
				#ifdef TVE_OVERLAY_GLITTER
				float3 staticSwitch868_g118054 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g118054 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g118054 ) / _OverlayGlitterDistValue ) ) ) );
				#else
				float3 staticSwitch868_g118054 = temp_cast_34;
				#endif
				half3 Overlay_GlitterColor865_g118054 = staticSwitch868_g118054;
				half Overlay_TexMask908_g118054 = 1.0;
				float3 temp_output_739_21_g118054 = Out_NormalWS4_g118055;
				half3 Visual_NormalWS749_g118054 = temp_output_739_21_g118054;
				float clampResult17_g118075 = clamp( saturate( (Visual_NormalWS749_g118054).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g118074 = _OverlayProjRemap.x;
				float temp_output_10_0_g118074 = ( _OverlayProjRemap.y - temp_output_7_0_g118074 );
				float lerpResult842_g118054 = lerp( 1.0 , saturate( ( ( clampResult17_g118075 - temp_output_7_0_g118074 ) / ( temp_output_10_0_g118074 + 0.0001 ) ) ) , _OverlayProjValue);
				half Overlay_MaskProj457_g118054 = lerpResult842_g118054;
				float temp_output_739_15_g118054 = Out_Luminosity4_g118055;
				half Visual_Luminosity654_g118054 = temp_output_739_15_g118054;
				float clampResult17_g118077 = clamp( Visual_Luminosity654_g118054 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118076 = _OverlayLumaRemap.x;
				float temp_output_10_0_g118076 = ( _OverlayLumaRemap.y - temp_output_7_0_g118076 );
				float lerpResult587_g118054 = lerp( 1.0 , saturate( ( ( clampResult17_g118077 - temp_output_7_0_g118076 ) / ( temp_output_10_0_g118076 + 0.0001 ) ) ) , _OverlayLumaValue);
				half Overlay_MaskLuma438_g118054 = lerpResult587_g118054;
				half Overlay_VertMask801_g118054 = 1.0;
				half Overlay_MaskNoise427_g118054 = 1.0;
				TVEGlobalData Data15_g118056 = Data204_g117810;
				float Out_Dummy15_g118056 = 0;
				float4 Out_CoatParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118056 = float4( 0,0,0,0 );
				Out_Dummy15_g118056 = Data15_g118056.Dummy;
				Out_CoatParams15_g118056 = Data15_g118056.CoatParams;
				Out_PaintParams15_g118056 = Data15_g118056.PaintParams;
				Out_GlowParams15_g118056 = Data15_g118056.GlowParams;
				Out_AtmoParams15_g118056= Data15_g118056.AtmoParams;
				Out_FadeParams15_g118056= Data15_g118056.FadeParams;
				Out_FormParams15_g118056 = Data15_g118056.FormParams;
				Out_LandParams15_g118056 = Data15_g118056.LandParams;
				Out_WindParams15_g118056 = Data15_g118056.WindParams;
				Out_PushParams15_g118056 = Data15_g118056.PushParams;
				half4 Global_AtmoParams516_g118054 = Out_AtmoParams15_g118056;
				#ifdef TVE_OVERLAY_ELEMENT
				float staticSwitch705_g118054 = ( (Global_AtmoParams516_g118054).z * TVE_IsEnabled );
				#else
				float staticSwitch705_g118054 = 1.0;
				#endif
				half Overlay_MaskGlobal429_g118054 = staticSwitch705_g118054;
				half Custom_Mask646_g118054 = 1.0;
				float temp_output_7_0_g118083 = _OverlayBlendRemap1.x;
				float temp_output_10_0_g118083 = ( _OverlayBlendRemap1.y - temp_output_7_0_g118083 );
				half Overlay_Mask494_g118054 = saturate( ( ( ( _OverlayIntensityValue * Overlay_TexMask908_g118054 * Overlay_MaskProj457_g118054 * Overlay_MaskLuma438_g118054 * Overlay_VertMask801_g118054 * Overlay_MaskNoise427_g118054 * Overlay_MaskGlobal429_g118054 * Custom_Mask646_g118054 ) - temp_output_7_0_g118083 ) / ( temp_output_10_0_g118083 + 0.0001 ) ) );
				float3 lerpResult467_g118054 = lerp( Visual_Albedo127_g118054 , ( staticSwitch14_g118065 + Overlay_GlitterColor865_g118054 ) , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float3 staticSwitch577_g118054 = lerpResult467_g118054;
				#else
				float3 staticSwitch577_g118054 = Visual_Albedo127_g118054;
				#endif
				half3 Final_Albedo493_g118054 = staticSwitch577_g118054;
				float3 In_Albedo3_g118057 = Final_Albedo493_g118054;
				float3 In_AlbedoRaw3_g118057 = Out_AlbedoRaw4_g118055;
				half2 Visual_NormalTS535_g118054 = Out_NormalTS4_g118055;
				TEXTURE2D(Texture238_g118060) = _OverlayNormalTex;
				float localFilterTexture29_g118088 = ( 0.0 );
				SamplerState SamplerDefault29_g118088 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g118088 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g118088 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g118088 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g118088 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g118088 = SamplerDefault29_g118088;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g118088 = SamplerDefault29_g118088;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g118088 = SamplerPoint29_g118088;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g118088 = SamplerLow29_g118088;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g118088 = SamplerMedium29_g118088;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g118088 = SamplerHigh29_g118088;
				#endif
				SamplerState Sampler238_g118060 = SS29_g118088;
				float4 temp_output_37_0_g118060 = Overlay_Coords639_g118054;
				half4 Coords238_g118060 = temp_output_37_0_g118060;
				float3 temp_output_279_0_g118060 = Model_PositionWO602_g118054;
				half3 WorldPosition238_g118060 = temp_output_279_0_g118060;
				half4 localSamplePlanar2D238_g118060 = SamplePlanar2D( Texture238_g118060 , Sampler238_g118060 , Coords238_g118060 , WorldPosition238_g118060 );
				TEXTURE2D(Texture246_g118060) = _OverlayNormalTex;
				SamplerState Sampler246_g118060 = SS29_g118088;
				half4 Coords246_g118060 = temp_output_37_0_g118060;
				half3 WorldPosition246_g118060 = temp_output_279_0_g118060;
				float3 temp_output_280_0_g118060 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118060 = temp_output_280_0_g118060;
				half4 localSamplePlanar3D246_g118060 = SamplePlanar3D( Texture246_g118060 , Sampler246_g118060 , Coords246_g118060 , WorldPosition246_g118060 , WorldNormal246_g118060 );
				TEXTURE2D(Texture234_g118060) = _OverlayNormalTex;
				SamplerState Sampler234_g118060 = SS29_g118088;
				float4 Coords234_g118060 = temp_output_37_0_g118060;
				float3 WorldPosition234_g118060 = temp_output_279_0_g118060;
				float4 localSampleStochastic2D234_g118060 = SampleStochastic2D( Texture234_g118060 , Sampler234_g118060 , Coords234_g118060 , WorldPosition234_g118060 );
				TEXTURE2D(Texture263_g118060) = _OverlayNormalTex;
				SamplerState Sampler263_g118060 = SS29_g118088;
				half4 Coords263_g118060 = temp_output_37_0_g118060;
				half3 WorldPosition263_g118060 = temp_output_279_0_g118060;
				half3 WorldNormal263_g118060 = temp_output_280_0_g118060;
				half4 localSampleStochastic3D263_g118060 = SampleStochastic3D( Texture263_g118060 , Sampler263_g118060 , Coords263_g118060 , WorldPosition263_g118060 , WorldNormal263_g118060 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch686_g118054 = localSamplePlanar2D238_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch686_g118054 = localSamplePlanar3D246_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch686_g118054 = localSampleStochastic2D234_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch686_g118054 = localSampleStochastic3D263_g118060;
				#else
				float4 staticSwitch686_g118054 = localSamplePlanar2D238_g118060;
				#endif
				half4 Normal_Packed45_g118064 = staticSwitch686_g118054;
				float2 appendResult58_g118064 = (float2(( (Normal_Packed45_g118064).x * (Normal_Packed45_g118064).w ) , (Normal_Packed45_g118064).y));
				half2 Normal_Default50_g118064 = appendResult58_g118064;
				half2 Normal_ASTC41_g118064 = (Normal_Packed45_g118064).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g118064 = Normal_ASTC41_g118064;
				#else
				float2 staticSwitch38_g118064 = Normal_Default50_g118064;
				#endif
				half2 Normal_NO_DTX544_g118064 = (Normal_Packed45_g118064).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g118064 = Normal_NO_DTX544_g118064;
				#else
				float2 staticSwitch37_g118064 = staticSwitch38_g118064;
				#endif
				half2 Normal_Planar45_g118063 = (staticSwitch37_g118064*2.0 + -1.0);
				float2 break71_g118063 = Normal_Planar45_g118063;
				float3 appendResult72_g118063 = (float3(break71_g118063.x , 0.0 , break71_g118063.y));
				half2 Overlay_Normal528_g118054 = (mul( ase_worldToTangent, appendResult72_g118063 )).xy;
				#ifdef TVE_OVERLAY_TEX
				float2 staticSwitch579_g118054 = Overlay_Normal528_g118054;
				#else
				float2 staticSwitch579_g118054 = Visual_NormalTS535_g118054;
				#endif
				float2 lerpResult551_g118054 = lerp( Visual_NormalTS535_g118054 , ( staticSwitch579_g118054 * _OverlayNormalValue ) , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float2 staticSwitch583_g118054 = lerpResult551_g118054;
				#else
				float2 staticSwitch583_g118054 = Visual_NormalTS535_g118054;
				#endif
				half2 Final_NormalTS499_g118054 = staticSwitch583_g118054;
				float2 In_NormalTS3_g118057 = Final_NormalTS499_g118054;
				float3 In_NormalWS3_g118057 = temp_output_739_21_g118054;
				half4 Visual_Masks536_g118054 = Out_Shader4_g118055;
				float4 appendResult585_g118054 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
				float4 lerpResult584_g118054 = lerp( Visual_Masks536_g118054 , appendResult585_g118054 , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float4 staticSwitch586_g118054 = lerpResult584_g118054;
				#else
				float4 staticSwitch586_g118054 = Visual_Masks536_g118054;
				#endif
				half4 Final_Masks482_g118054 = staticSwitch586_g118054;
				float4 In_Shader3_g118057 = Final_Masks482_g118054;
				float4 In_Emissive3_g118057 = Out_Emissive4_g118055;
				float temp_output_739_12_g118054 = Out_Grayscale4_g118055;
				float In_Grayscale3_g118057 = temp_output_739_12_g118054;
				float In_Luminosity3_g118057 = temp_output_739_15_g118054;
				float In_MultiMask3_g118057 = Out_MultiMask4_g118055;
				float In_AlphaClip3_g118057 = Out_AlphaClip4_g118055;
				float In_AlphaFade3_g118057 = Out_AlphaFade4_g118055;
				float3 In_Translucency3_g118057 = Out_Translucency4_g118055;
				half Visual_Transmission699_g118054 = Out_Transmission4_g118055;
				float lerpResult746_g118054 = lerp( Visual_Transmission699_g118054 , ( Visual_Transmission699_g118054 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g118054 * Overlay_MaskNoise427_g118054 * Overlay_MaskGlobal429_g118054 ));
				#ifdef TVE_OVERLAY
				float staticSwitch703_g118054 = lerpResult746_g118054;
				#else
				float staticSwitch703_g118054 = Visual_Transmission699_g118054;
				#endif
				half Final_Transmission702_g118054 = staticSwitch703_g118054;
				float In_Transmission3_g118057 = Final_Transmission702_g118054;
				float In_Thickness3_g118057 = Out_Thickness4_g118055;
				float In_Diffusion3_g118057 = Out_Diffusion4_g118055;
				Data3_g118057.Dummy = In_Dummy3_g118057;
				Data3_g118057.Albedo = In_Albedo3_g118057;
				Data3_g118057.AlbedoRaw = In_AlbedoRaw3_g118057;
				Data3_g118057.NormalTS = In_NormalTS3_g118057;
				Data3_g118057.NormalWS = In_NormalWS3_g118057;
				Data3_g118057.Shader = In_Shader3_g118057;
				Data3_g118057.Emissive= In_Emissive3_g118057;
				Data3_g118057.MultiMask = In_MultiMask3_g118057;
				Data3_g118057.Grayscale = In_Grayscale3_g118057;
				Data3_g118057.Luminosity = In_Luminosity3_g118057;
				Data3_g118057.AlphaClip = In_AlphaClip3_g118057;
				Data3_g118057.AlphaFade = In_AlphaFade3_g118057;
				Data3_g118057.Translucency = In_Translucency3_g118057;
				Data3_g118057.Transmission = In_Transmission3_g118057;
				Data3_g118057.Thickness = In_Thickness3_g118057;
				Data3_g118057.Diffusion = In_Diffusion3_g118057;
				TVEVisualData Data4_g118091 = Data3_g118057;
				float Out_Dummy4_g118091 = 0;
				float3 Out_Albedo4_g118091 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118091 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118091 = float2( 0,0 );
				float3 Out_NormalWS4_g118091 = float3( 0,0,0 );
				float4 Out_Shader4_g118091 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118091 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118091 = 0;
				float Out_Grayscale4_g118091 = 0;
				float Out_Luminosity4_g118091 = 0;
				float Out_AlphaClip4_g118091 = 0;
				float Out_AlphaFade4_g118091 = 0;
				float3 Out_Translucency4_g118091 = float3( 0,0,0 );
				float Out_Transmission4_g118091 = 0;
				float Out_Thickness4_g118091 = 0;
				float Out_Diffusion4_g118091 = 0;
				Out_Dummy4_g118091 = Data4_g118091.Dummy;
				Out_Albedo4_g118091 = Data4_g118091.Albedo;
				Out_AlbedoRaw4_g118091 = Data4_g118091.AlbedoRaw;
				Out_NormalTS4_g118091 = Data4_g118091.NormalTS;
				Out_NormalWS4_g118091 = Data4_g118091.NormalWS;
				Out_Shader4_g118091 = Data4_g118091.Shader;
				Out_Emissive4_g118091= Data4_g118091.Emissive;
				Out_MultiMask4_g118091 = Data4_g118091.MultiMask;
				Out_Grayscale4_g118091 = Data4_g118091.Grayscale;
				Out_Luminosity4_g118091= Data4_g118091.Luminosity;
				Out_AlphaClip4_g118091 = Data4_g118091.AlphaClip;
				Out_AlphaFade4_g118091 = Data4_g118091.AlphaFade;
				Out_Translucency4_g118091 = Data4_g118091.Translucency;
				Out_Transmission4_g118091 = Data4_g118091.Transmission;
				Out_Thickness4_g118091 = Data4_g118091.Thickness;
				Out_Diffusion4_g118091 = Data4_g118091.Diffusion;
				half3 Visual_Albedo127_g118090 = Out_Albedo4_g118091;
				TVEGlobalData Data15_g118096 = Data204_g117810;
				float Out_Dummy15_g118096 = 0;
				float4 Out_CoatParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118096 = float4( 0,0,0,0 );
				Out_Dummy15_g118096 = Data15_g118096.Dummy;
				Out_CoatParams15_g118096 = Data15_g118096.CoatParams;
				Out_PaintParams15_g118096 = Data15_g118096.PaintParams;
				Out_GlowParams15_g118096 = Data15_g118096.GlowParams;
				Out_AtmoParams15_g118096= Data15_g118096.AtmoParams;
				Out_FadeParams15_g118096= Data15_g118096.FadeParams;
				Out_FormParams15_g118096 = Data15_g118096.FormParams;
				Out_LandParams15_g118096 = Data15_g118096.LandParams;
				Out_WindParams15_g118096 = Data15_g118096.WindParams;
				Out_PushParams15_g118096 = Data15_g118096.PushParams;
				half4 Global_AtmoParams516_g118090 = Out_AtmoParams15_g118096;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch663_g118090 = ( (Global_AtmoParams516_g118090).y * TVE_IsEnabled );
				#else
				float staticSwitch663_g118090 = 1.0;
				#endif
				half Global_Wetness429_g118090 = staticSwitch663_g118090;
				half Wetness_Value1042_g118090 = ( _WetnessIntensityValue * Global_Wetness429_g118090 );
				half Wetness_VertMask1024_g118090 = 1.0;
				float temp_output_1043_0_g118090 = ( Wetness_Value1042_g118090 * Wetness_VertMask1024_g118090 );
				half Wetness_Mask866_g118090 = temp_output_1043_0_g118090;
				half Water_VertMask1094_g118090 = 1.0;
				half4 Visual_Masks536_g118090 = Out_Shader4_g118091;
				float lerpResult1013_g118090 = lerp( 1.0 , (Visual_Masks536_g118090).z , _WetnessWaterBaseValue);
				half Water_HeightMask782_g118090 = lerpResult1013_g118090;
				float clampResult17_g118105 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g118090 * Water_VertMask1094_g118090 ) - Water_HeightMask782_g118090 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g118106 = _WetnessWaterBlendRemap.x;
				float temp_output_10_0_g118106 = ( _WetnessWaterBlendRemap.y - temp_output_7_0_g118106 );
				TVEModelData Data15_g118104 = Data16_g117809;
				float Out_Dummy15_g118104 = 0;
				float3 Out_PositionWS15_g118104 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118104 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118104 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118104 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118104 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g118104 = float3( 0,0,0 );
				float4 Out_VertexData15_g118104 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118104 = float4( 0,0,0,0 );
				Out_Dummy15_g118104 = Data15_g118104.Dummy;
				Out_PositionWS15_g118104 = Data15_g118104.PositionWS;
				Out_PositionWO15_g118104 = Data15_g118104.PositionWO;
				Out_PivotWS15_g118104 = Data15_g118104.PivotWS;
				Out_PivotWO15_g118104 = Data15_g118104.PivotWO;
				Out_NormalWS15_g118104 = Data15_g118104.NormalWS;
				Out_ViewDirWS15_g118104 = Data15_g118104.ViewDirWS;
				Out_VertexData15_g118104 = Data15_g118104.VertexData;
				Out_BoundsData15_g118104 = Data15_g118104.BoundsData;
				half3 Model_NormalWS798_g118090 = Out_NormalWS15_g118104;
				float temp_output_786_0_g118090 = saturate( (Model_NormalWS798_g118090).y );
				half Wetness_ProjMask790_g118090 = temp_output_786_0_g118090;
				half Water_Mask760_g118090 = ( saturate( ( ( clampResult17_g118105 - temp_output_7_0_g118106 ) / ( temp_output_10_0_g118106 + 0.0001 ) ) ) * Wetness_ProjMask790_g118090 );
				float3 lerpResult918_g118090 = lerp( Visual_Albedo127_g118090 , ( Visual_Albedo127_g118090 * (_WetnessWaterColor).rgb ) , Water_Mask760_g118090);
				#ifdef TVE_WETNESS_WATER
				float3 staticSwitch946_g118090 = lerpResult918_g118090;
				#else
				float3 staticSwitch946_g118090 = Visual_Albedo127_g118090;
				#endif
				float3 lerpResult768_g118090 = lerp( staticSwitch946_g118090 , ( staticSwitch946_g118090 * staticSwitch946_g118090 ) , _WetnessContrastValue);
				float3 lerpResult651_g118090 = lerp( Visual_Albedo127_g118090 , lerpResult768_g118090 , Wetness_Mask866_g118090);
				#ifdef TVE_WETNESS
				float3 staticSwitch577_g118090 = lerpResult651_g118090;
				#else
				float3 staticSwitch577_g118090 = Visual_Albedo127_g118090;
				#endif
				half3 Final_Albedo493_g118090 = staticSwitch577_g118090;
				float3 In_Albedo3_g118092 = Final_Albedo493_g118090;
				float3 In_AlbedoRaw3_g118092 = Out_AlbedoRaw4_g118091;
				half2 Visual_Normal535_g118090 = Out_NormalTS4_g118091;
				float lerpResult877_g118090 = lerp( 1.0 , 0.0 , ( Water_Mask760_g118090 * Water_Mask760_g118090 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch957_g118090 = ( Visual_Normal535_g118090 * lerpResult877_g118090 );
				#else
				float2 staticSwitch957_g118090 = Visual_Normal535_g118090;
				#endif
				float2 temp_cast_35 = (0.0).xx;
				TEXTURE2D(Texture238_g118102) = _WetnessDropsTexRT;
				SamplerState Sampler238_g118102 = sampler_Linear_Repeat_Aniso8;
				float4 appendResult924_g118090 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g118102 = appendResult924_g118090;
				half4 Coords238_g118102 = temp_output_37_0_g118102;
				half3 Model_PositionWO602_g118090 = Out_PositionWO15_g118104;
				float3 temp_output_279_0_g118102 = Model_PositionWO602_g118090;
				half3 WorldPosition238_g118102 = temp_output_279_0_g118102;
				half4 localSamplePlanar2D238_g118102 = SamplePlanar2D( Texture238_g118102 , Sampler238_g118102 , Coords238_g118102 , WorldPosition238_g118102 );
				float4 temp_output_1010_0_g118090 = localSamplePlanar2D238_g118102;
				half2 Rain_DropsNormal919_g118090 = (temp_output_1010_0_g118090).zw;
				float2 temp_output_903_0_g118090 = (Rain_DropsNormal919_g118090*2.0 + -1.0);
				half2 Rain_RingsNormal713_g118090 = (temp_output_1010_0_g118090).xy;
				float2 lerpResult904_g118090 = lerp( temp_output_903_0_g118090 , (Rain_RingsNormal713_g118090*2.0 + -1.0) , ( Water_Mask760_g118090 * Water_Mask760_g118090 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch960_g118090 = lerpResult904_g118090;
				#else
				float2 staticSwitch960_g118090 = temp_output_903_0_g118090;
				#endif
				half2 Rain_Drops1002_g118090 = ( staticSwitch960_g118090 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
				half3 Model_PositionWS823_g118090 = Out_PositionWS15_g118104;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch949_g118090 = ( (Global_AtmoParams516_g118090).w * TVE_IsEnabled );
				#else
				float staticSwitch949_g118090 = 1.0;
				#endif
				half Global_Rain955_g118090 = staticSwitch949_g118090;
				half Rain_Value1067_g118090 = Global_Rain955_g118090;
				half Rain_VertMask1108_g118090 = 1.0;
				half Rain_Mask999_g118090 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g118090 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g118090 * Rain_VertMask1108_g118090 );
				half2 Normal_Planar45_g118101 = ( Rain_Drops1002_g118090 * Rain_Mask999_g118090 * Wetness_ProjMask790_g118090 );
				float2 break71_g118101 = Normal_Planar45_g118101;
				float3 appendResult72_g118101 = (float3(break71_g118101.x , 0.0 , break71_g118101.y));
				half2 Wetness_Normal526_g118090 = (mul( ase_worldToTangent, appendResult72_g118101 )).xy;
				#ifdef TVE_WETNESS_DROPS
				float2 staticSwitch583_g118090 = Wetness_Normal526_g118090;
				#else
				float2 staticSwitch583_g118090 = temp_cast_35;
				#endif
				#ifdef TVE_WETNESS
				float2 staticSwitch774_g118090 = ( staticSwitch957_g118090 + staticSwitch583_g118090 );
				#else
				float2 staticSwitch774_g118090 = Visual_Normal535_g118090;
				#endif
				half2 Final_Normal499_g118090 = staticSwitch774_g118090;
				float2 In_NormalTS3_g118092 = Final_Normal499_g118090;
				float3 In_NormalWS3_g118092 = Out_NormalWS4_g118091;
				float4 break658_g118090 = Visual_Masks536_g118090;
				float temp_output_935_0_g118090 = ( Wetness_Mask866_g118090 * _WetnessSmoothnessValue );
				float lerpResult941_g118090 = lerp( temp_output_935_0_g118090 , 2.0 , Water_Mask760_g118090);
				#ifdef TVE_WETNESS_WATER
				float staticSwitch959_g118090 = lerpResult941_g118090;
				#else
				float staticSwitch959_g118090 = temp_output_935_0_g118090;
				#endif
				float4 appendResult661_g118090 = (float4(break658_g118090.x , break658_g118090.y , break658_g118090.z , saturate( ( break658_g118090.w + staticSwitch959_g118090 ) )));
				#ifdef TVE_WETNESS
				float4 staticSwitch586_g118090 = appendResult661_g118090;
				#else
				float4 staticSwitch586_g118090 = Visual_Masks536_g118090;
				#endif
				half4 Final_Masks482_g118090 = staticSwitch586_g118090;
				float4 In_Shader3_g118092 = Final_Masks482_g118090;
				float4 In_Emissive3_g118092 = Out_Emissive4_g118091;
				float In_Grayscale3_g118092 = Out_Grayscale4_g118091;
				float In_Luminosity3_g118092 = Out_Luminosity4_g118091;
				float In_MultiMask3_g118092 = Out_MultiMask4_g118091;
				float In_AlphaClip3_g118092 = Out_AlphaClip4_g118091;
				float In_AlphaFade3_g118092 = Out_AlphaFade4_g118091;
				float3 In_Translucency3_g118092 = Out_Translucency4_g118091;
				float In_Transmission3_g118092 = Out_Transmission4_g118091;
				float In_Thickness3_g118092 = Out_Thickness4_g118091;
				float In_Diffusion3_g118092 = Out_Diffusion4_g118091;
				Data3_g118092.Dummy = In_Dummy3_g118092;
				Data3_g118092.Albedo = In_Albedo3_g118092;
				Data3_g118092.AlbedoRaw = In_AlbedoRaw3_g118092;
				Data3_g118092.NormalTS = In_NormalTS3_g118092;
				Data3_g118092.NormalWS = In_NormalWS3_g118092;
				Data3_g118092.Shader = In_Shader3_g118092;
				Data3_g118092.Emissive= In_Emissive3_g118092;
				Data3_g118092.MultiMask = In_MultiMask3_g118092;
				Data3_g118092.Grayscale = In_Grayscale3_g118092;
				Data3_g118092.Luminosity = In_Luminosity3_g118092;
				Data3_g118092.AlphaClip = In_AlphaClip3_g118092;
				Data3_g118092.AlphaFade = In_AlphaFade3_g118092;
				Data3_g118092.Translucency = In_Translucency3_g118092;
				Data3_g118092.Transmission = In_Transmission3_g118092;
				Data3_g118092.Thickness = In_Thickness3_g118092;
				Data3_g118092.Diffusion = In_Diffusion3_g118092;
				TVEVisualData Data4_g118128 = Data3_g118092;
				float Out_Dummy4_g118128 = 0;
				float3 Out_Albedo4_g118128 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118128 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118128 = float2( 0,0 );
				float3 Out_NormalWS4_g118128 = float3( 0,0,0 );
				float4 Out_Shader4_g118128 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118128 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118128 = 0;
				float Out_Grayscale4_g118128 = 0;
				float Out_Luminosity4_g118128 = 0;
				float Out_AlphaClip4_g118128 = 0;
				float Out_AlphaFade4_g118128 = 0;
				float3 Out_Translucency4_g118128 = float3( 0,0,0 );
				float Out_Transmission4_g118128 = 0;
				float Out_Thickness4_g118128 = 0;
				float Out_Diffusion4_g118128 = 0;
				Out_Dummy4_g118128 = Data4_g118128.Dummy;
				Out_Albedo4_g118128 = Data4_g118128.Albedo;
				Out_AlbedoRaw4_g118128 = Data4_g118128.AlbedoRaw;
				Out_NormalTS4_g118128 = Data4_g118128.NormalTS;
				Out_NormalWS4_g118128 = Data4_g118128.NormalWS;
				Out_Shader4_g118128 = Data4_g118128.Shader;
				Out_Emissive4_g118128= Data4_g118128.Emissive;
				Out_MultiMask4_g118128 = Data4_g118128.MultiMask;
				Out_Grayscale4_g118128 = Data4_g118128.Grayscale;
				Out_Luminosity4_g118128= Data4_g118128.Luminosity;
				Out_AlphaClip4_g118128 = Data4_g118128.AlphaClip;
				Out_AlphaFade4_g118128 = Data4_g118128.AlphaFade;
				Out_Translucency4_g118128 = Data4_g118128.Translucency;
				Out_Transmission4_g118128 = Data4_g118128.Transmission;
				Out_Thickness4_g118128 = Data4_g118128.Thickness;
				Out_Diffusion4_g118128 = Data4_g118128.Diffusion;
				float3 temp_output_297_0_g118119 = Out_Albedo4_g118128;
				float3 In_Albedo3_g118129 = temp_output_297_0_g118119;
				float3 temp_output_297_23_g118119 = Out_AlbedoRaw4_g118128;
				float3 In_AlbedoRaw3_g118129 = temp_output_297_23_g118119;
				float2 In_NormalTS3_g118129 = Out_NormalTS4_g118128;
				float3 In_NormalWS3_g118129 = Out_NormalWS4_g118128;
				float4 In_Shader3_g118129 = Out_Shader4_g118128;
				float4 temp_cast_36 = (0.0).xxxx;
				half4 Visual_Emissive255_g118119 = Out_Emissive4_g118128;
				half Emissive_MeshMask221_g118119 = 1.0;
				half Emissive_Mask103_g118119 = 1.0;
				float temp_output_279_0_g118119 = ( Emissive_MeshMask221_g118119 * Emissive_Mask103_g118119 );
				float3 appendResult293_g118119 = (float3(temp_output_279_0_g118119 , temp_output_279_0_g118119 , temp_output_279_0_g118119));
				half3 Local_EmissiveColor278_g118119 = appendResult293_g118119;
				float3 temp_cast_37 = (1.0).xxx;
				TVEGlobalData Data15_g118120 = Data204_g117810;
				float Out_Dummy15_g118120 = 0;
				float4 Out_CoatParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118120 = float4( 0,0,0,0 );
				Out_Dummy15_g118120 = Data15_g118120.Dummy;
				Out_CoatParams15_g118120 = Data15_g118120.CoatParams;
				Out_PaintParams15_g118120 = Data15_g118120.PaintParams;
				Out_GlowParams15_g118120 = Data15_g118120.GlowParams;
				Out_AtmoParams15_g118120= Data15_g118120.AtmoParams;
				Out_FadeParams15_g118120= Data15_g118120.FadeParams;
				Out_FormParams15_g118120 = Data15_g118120.FormParams;
				Out_LandParams15_g118120 = Data15_g118120.LandParams;
				Out_WindParams15_g118120 = Data15_g118120.WindParams;
				Out_PushParams15_g118120 = Data15_g118120.PushParams;
				half4 Global_GlowParams179_g118119 = Out_GlowParams15_g118120;
				float3 lerpResult299_g118119 = lerp( float3( 1,1,1 ) , (Global_GlowParams179_g118119).xyz , TVE_IsEnabled);
				#ifdef TVE_EMISSIVE_ELEMENT
				float3 staticSwitch228_g118119 = lerpResult299_g118119;
				#else
				float3 staticSwitch228_g118119 = temp_cast_37;
				#endif
				half3 Emissive_GlobalMask248_g118119 = staticSwitch228_g118119;
				half3 Visual_AlbedoRaw306_g118119 = temp_output_297_23_g118119;
				float3 lerpResult307_g118119 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g118119 , _EmissiveColorMode);
				half3 Local_EmissiveValue88_g118119 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g118119 * lerpResult307_g118119 );
				half3 Emissive_Blend260_g118119 = ( ( (Visual_Emissive255_g118119).xyz * Local_EmissiveColor278_g118119 ) * Local_EmissiveValue88_g118119 );
				float3 temp_output_3_0_g118133 = Emissive_Blend260_g118119;
				float temp_output_15_0_g118133 = _emissive_power_value;
				float3 hdEmission22_g118133 = ASEGetEmissionHDRColor(temp_output_3_0_g118133,temp_output_15_0_g118133,_EmissiveExposureValue,GetInverseCurrentExposureMultiplier());
				half Local_EmissiveMask294_g118119 = temp_output_279_0_g118119;
				float4 appendResult295_g118119 = (float4(hdEmission22_g118133 , Local_EmissiveMask294_g118119));
				#ifdef TVE_EMISSIVE
				float4 staticSwitch129_g118119 = appendResult295_g118119;
				#else
				float4 staticSwitch129_g118119 = temp_cast_36;
				#endif
				half4 Final_Emissive184_g118119 = staticSwitch129_g118119;
				float4 In_Emissive3_g118129 = Final_Emissive184_g118119;
				float In_Grayscale3_g118129 = Out_Grayscale4_g118128;
				float In_Luminosity3_g118129 = Out_Luminosity4_g118128;
				float temp_output_297_11_g118119 = Out_MultiMask4_g118128;
				float In_MultiMask3_g118129 = temp_output_297_11_g118119;
				float In_AlphaClip3_g118129 = Out_AlphaClip4_g118128;
				float In_AlphaFade3_g118129 = Out_AlphaFade4_g118128;
				float3 In_Translucency3_g118129 = Out_Translucency4_g118128;
				float In_Transmission3_g118129 = Out_Transmission4_g118128;
				float In_Thickness3_g118129 = Out_Thickness4_g118128;
				float In_Diffusion3_g118129 = Out_Diffusion4_g118128;
				Data3_g118129.Dummy = In_Dummy3_g118129;
				Data3_g118129.Albedo = In_Albedo3_g118129;
				Data3_g118129.AlbedoRaw = In_AlbedoRaw3_g118129;
				Data3_g118129.NormalTS = In_NormalTS3_g118129;
				Data3_g118129.NormalWS = In_NormalWS3_g118129;
				Data3_g118129.Shader = In_Shader3_g118129;
				Data3_g118129.Emissive= In_Emissive3_g118129;
				Data3_g118129.MultiMask = In_MultiMask3_g118129;
				Data3_g118129.Grayscale = In_Grayscale3_g118129;
				Data3_g118129.Luminosity = In_Luminosity3_g118129;
				Data3_g118129.AlphaClip = In_AlphaClip3_g118129;
				Data3_g118129.AlphaFade = In_AlphaFade3_g118129;
				Data3_g118129.Translucency = In_Translucency3_g118129;
				Data3_g118129.Transmission = In_Transmission3_g118129;
				Data3_g118129.Thickness = In_Thickness3_g118129;
				Data3_g118129.Diffusion = In_Diffusion3_g118129;
				TVEVisualData Data4_g118145 = Data3_g118129;
				float Out_Dummy4_g118145 = 0;
				float3 Out_Albedo4_g118145 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118145 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118145 = float2( 0,0 );
				float3 Out_NormalWS4_g118145 = float3( 0,0,0 );
				float4 Out_Shader4_g118145 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118145 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118145 = 0;
				float Out_Grayscale4_g118145 = 0;
				float Out_Luminosity4_g118145 = 0;
				float Out_AlphaClip4_g118145 = 0;
				float Out_AlphaFade4_g118145 = 0;
				float3 Out_Translucency4_g118145 = float3( 0,0,0 );
				float Out_Transmission4_g118145 = 0;
				float Out_Thickness4_g118145 = 0;
				float Out_Diffusion4_g118145 = 0;
				Out_Dummy4_g118145 = Data4_g118145.Dummy;
				Out_Albedo4_g118145 = Data4_g118145.Albedo;
				Out_AlbedoRaw4_g118145 = Data4_g118145.AlbedoRaw;
				Out_NormalTS4_g118145 = Data4_g118145.NormalTS;
				Out_NormalWS4_g118145 = Data4_g118145.NormalWS;
				Out_Shader4_g118145 = Data4_g118145.Shader;
				Out_Emissive4_g118145= Data4_g118145.Emissive;
				Out_MultiMask4_g118145 = Data4_g118145.MultiMask;
				Out_Grayscale4_g118145 = Data4_g118145.Grayscale;
				Out_Luminosity4_g118145= Data4_g118145.Luminosity;
				Out_AlphaClip4_g118145 = Data4_g118145.AlphaClip;
				Out_AlphaFade4_g118145 = Data4_g118145.AlphaFade;
				Out_Translucency4_g118145 = Data4_g118145.Translucency;
				Out_Transmission4_g118145 = Data4_g118145.Transmission;
				Out_Thickness4_g118145 = Data4_g118145.Thickness;
				Out_Diffusion4_g118145 = Data4_g118145.Diffusion;
				float3 In_Albedo3_g118135 = Out_Albedo4_g118145;
				float3 In_AlbedoRaw3_g118135 = Out_AlbedoRaw4_g118145;
				float2 In_NormalTS3_g118135 = Out_NormalTS4_g118145;
				float3 In_NormalWS3_g118135 = Out_NormalWS4_g118145;
				float4 In_Shader3_g118135 = Out_Shader4_g118145;
				float4 In_Emissive3_g118135 = Out_Emissive4_g118145;
				float In_Grayscale3_g118135 = Out_Grayscale4_g118145;
				float In_Luminosity3_g118135 = Out_Luminosity4_g118145;
				float temp_output_836_11_g118134 = Out_MultiMask4_g118145;
				float In_MultiMask3_g118135 = temp_output_836_11_g118134;
				half Visual_AlphaClip667_g118134 = Out_AlphaClip4_g118145;
				half Input_True57_g118142 = Visual_AlphaClip667_g118134;
				half True36_g118142 = Input_True57_g118142;
				TVEGlobalData Data15_g118144 = Data204_g117810;
				float Out_Dummy15_g118144 = 0;
				float4 Out_CoatParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118144 = float4( 0,0,0,0 );
				Out_Dummy15_g118144 = Data15_g118144.Dummy;
				Out_CoatParams15_g118144 = Data15_g118144.CoatParams;
				Out_PaintParams15_g118144 = Data15_g118144.PaintParams;
				Out_GlowParams15_g118144 = Data15_g118144.GlowParams;
				Out_AtmoParams15_g118144= Data15_g118144.AtmoParams;
				Out_FadeParams15_g118144= Data15_g118144.FadeParams;
				Out_FormParams15_g118144 = Data15_g118144.FormParams;
				Out_LandParams15_g118144 = Data15_g118144.LandParams;
				Out_WindParams15_g118144 = Data15_g118144.WindParams;
				Out_PushParams15_g118144 = Data15_g118144.PushParams;
				half4 Global_FadeParams516_g118134 = Out_FadeParams15_g118144;
				#ifdef TVE_CUTOUT_ELEMENT
				float staticSwitch663_g118134 = saturate( (Global_FadeParams516_g118134).w );
				#else
				float staticSwitch663_g118134 = 1.0;
				#endif
				half Local_GlobalMask429_g118134 = staticSwitch663_g118134;
				half Local_AlphaMask814_g118134 = 1.0;
				half Local_NoiseMask678_g118134 = 1.0;
				half Local_VertMask766_g118134 = 1.0;
				half Local_MultiMask685_g118134 = 1.0;
				float lerpResult728_g118134 = lerp( Visual_AlphaClip667_g118134 , min( Visual_AlphaClip667_g118134 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g118134 ) - ( Local_AlphaMask814_g118134 * Local_NoiseMask678_g118134 * Local_VertMask766_g118134 ) ) ) ) , Local_MultiMask685_g118134);
				half Local_AlphaClip784_g118134 = lerpResult728_g118134;
				half Input_False58_g118142 = Local_AlphaClip784_g118134;
				half False36_g118142 = Input_False58_g118142;
				half localShadowPassCheck36_g118142 = ShadowPassCheck36_g118142( True36_g118142 , False36_g118142 );
				#ifdef TVE_CUTOUT_SHADOW
				float staticSwitch791_g118134 = Local_AlphaClip784_g118134;
				#else
				float staticSwitch791_g118134 = localShadowPassCheck36_g118142;
				#endif
				float temp_output_6_0_g118143 = staticSwitch791_g118134;
				#ifdef TVE_REGISTER
				float staticSwitch14_g118143 = ( temp_output_6_0_g118143 + ( _CutoutShadowMode * 0.0 ) );
				#else
				float staticSwitch14_g118143 = temp_output_6_0_g118143;
				#endif
				float temp_output_798_0_g118134 = staticSwitch14_g118143;
				#ifdef TVE_CUTOUT
				float staticSwitch577_g118134 = temp_output_798_0_g118134;
				#else
				float staticSwitch577_g118134 = Visual_AlphaClip667_g118134;
				#endif
				half Final_AlphaClip795_g118134 = staticSwitch577_g118134;
				float In_AlphaClip3_g118135 = Final_AlphaClip795_g118134;
				float In_AlphaFade3_g118135 = Out_AlphaFade4_g118145;
				float3 In_Translucency3_g118135 = Out_Translucency4_g118145;
				float In_Transmission3_g118135 = Out_Transmission4_g118145;
				float In_Thickness3_g118135 = Out_Thickness4_g118145;
				float In_Diffusion3_g118135 = Out_Diffusion4_g118145;
				Data3_g118135.Dummy = In_Dummy3_g118135;
				Data3_g118135.Albedo = In_Albedo3_g118135;
				Data3_g118135.AlbedoRaw = In_AlbedoRaw3_g118135;
				Data3_g118135.NormalTS = In_NormalTS3_g118135;
				Data3_g118135.NormalWS = In_NormalWS3_g118135;
				Data3_g118135.Shader = In_Shader3_g118135;
				Data3_g118135.Emissive= In_Emissive3_g118135;
				Data3_g118135.MultiMask = In_MultiMask3_g118135;
				Data3_g118135.Grayscale = In_Grayscale3_g118135;
				Data3_g118135.Luminosity = In_Luminosity3_g118135;
				Data3_g118135.AlphaClip = In_AlphaClip3_g118135;
				Data3_g118135.AlphaFade = In_AlphaFade3_g118135;
				Data3_g118135.Translucency = In_Translucency3_g118135;
				Data3_g118135.Transmission = In_Transmission3_g118135;
				Data3_g118135.Thickness = In_Thickness3_g118135;
				Data3_g118135.Diffusion = In_Diffusion3_g118135;
				TVEVisualData Data4_g118158 = Data3_g118135;
				float Out_Dummy4_g118158 = 0;
				float3 Out_Albedo4_g118158 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118158 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118158 = float2( 0,0 );
				float3 Out_NormalWS4_g118158 = float3( 0,0,0 );
				float4 Out_Shader4_g118158 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118158 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118158 = 0;
				float Out_Grayscale4_g118158 = 0;
				float Out_Luminosity4_g118158 = 0;
				float Out_AlphaClip4_g118158 = 0;
				float Out_AlphaFade4_g118158 = 0;
				float3 Out_Translucency4_g118158 = float3( 0,0,0 );
				float Out_Transmission4_g118158 = 0;
				float Out_Thickness4_g118158 = 0;
				float Out_Diffusion4_g118158 = 0;
				Out_Dummy4_g118158 = Data4_g118158.Dummy;
				Out_Albedo4_g118158 = Data4_g118158.Albedo;
				Out_AlbedoRaw4_g118158 = Data4_g118158.AlbedoRaw;
				Out_NormalTS4_g118158 = Data4_g118158.NormalTS;
				Out_NormalWS4_g118158 = Data4_g118158.NormalWS;
				Out_Shader4_g118158 = Data4_g118158.Shader;
				Out_Emissive4_g118158= Data4_g118158.Emissive;
				Out_MultiMask4_g118158 = Data4_g118158.MultiMask;
				Out_Grayscale4_g118158 = Data4_g118158.Grayscale;
				Out_Luminosity4_g118158= Data4_g118158.Luminosity;
				Out_AlphaClip4_g118158 = Data4_g118158.AlphaClip;
				Out_AlphaFade4_g118158 = Data4_g118158.AlphaFade;
				Out_Translucency4_g118158 = Data4_g118158.Translucency;
				Out_Transmission4_g118158 = Data4_g118158.Transmission;
				Out_Thickness4_g118158 = Data4_g118158.Thickness;
				Out_Diffusion4_g118158 = Data4_g118158.Diffusion;
				half3 Input_Albedo24_g118157 = Out_Albedo4_g118158;
				#ifdef UNITY_COLORSPACE_GAMMA
				float4 staticSwitch22_g118157 = half4(0.2209163,0.2209163,0.2209163,0.7790837);
				#else
				float4 staticSwitch22_g118157 = half4(0.04,0.04,0.04,0.96);
				#endif
				half4 ColorSpaceDielectricSpec23_g118157 = staticSwitch22_g118157;
				float4 break24_g118154 = Out_Shader4_g118158;
				half Metallic95_g118154 = break24_g118154.x;
				half Input_Metallic25_g118157 = Metallic95_g118154;
				half OneMinusReflectivity31_g118157 = ( (ColorSpaceDielectricSpec23_g118157).w - ( (ColorSpaceDielectricSpec23_g118157).w * Input_Metallic25_g118157 ) );
				
				float3 appendResult23_g118154 = (float3(Out_NormalTS4_g118158 , 1.0));
				
				float3 lerpResult28_g118157 = lerp( (ColorSpaceDielectricSpec23_g118157).xyz , Input_Albedo24_g118157 , Input_Metallic25_g118157);
				half Render_Specualr110_g118154 = _RenderSpecular;
				
				float localCustomAlphaClip19_g118160 = ( 0.0 );
				float temp_output_3_0_g118160 = Out_AlphaClip4_g118158;
				float Alpha19_g118160 = temp_output_3_0_g118160;
				float temp_output_15_0_g118160 = 0.5;
				float Treshold19_g118160 = temp_output_15_0_g118160;
				#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_DITHER)
				#if defined ( TVE_PIPELINE_HD)
				#if !defined(SHADERPASS_FORWARD_BYPASS_ALPHA_TEST) && !defined(SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST)
				clip(Alpha19_g118160 - Treshold19_g118160);
				#endif
				#else
				clip(Alpha19_g118160 - Treshold19_g118160);
				#endif
				#endif
				
				surfaceDescription.BaseColor = ( Input_Albedo24_g118157 * OneMinusReflectivity31_g118157 );
				surfaceDescription.Normal = appendResult23_g118154;
				surfaceDescription.BentNormal = float3( 0, 0, 1 );
				surfaceDescription.CoatMask = 0;
				surfaceDescription.Metallic = 0;

				#ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
				surfaceDescription.Specular = ( lerpResult28_g118157 * Render_Specualr110_g118154 );
				#endif

				surfaceDescription.Emission = (Out_Emissive4_g118158).xyz;
				surfaceDescription.Smoothness = break24_g118154.w;
				surfaceDescription.Occlusion = break24_g118154.y;
				surfaceDescription.Alpha = Alpha19_g118160;

				#ifdef _ALPHATEST_ON
				surfaceDescription.AlphaClipThreshold = _AlphaCutoff;
				#endif

				#ifdef _ENABLE_GEOMETRIC_SPECULAR_AA
				surfaceDescription.SpecularAAScreenSpaceVariance = 0;
				surfaceDescription.SpecularAAThreshold = 0;
				#endif

				#ifdef _SPECULAR_OCCLUSION_CUSTOM
				surfaceDescription.SpecularOcclusion = 0;
				#endif

				#if defined(_HAS_REFRACTION) || defined(_MATERIAL_FEATURE_TRANSMISSION)
				surfaceDescription.Thickness = 1;
				#endif

				#ifdef _HAS_REFRACTION
				surfaceDescription.RefractionIndex = 1;
				surfaceDescription.RefractionColor = float3( 1, 1, 1 );
				surfaceDescription.RefractionDistance = 0;
				#endif

				#ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
				surfaceDescription.SubsurfaceMask = 1;
				#endif

				#ifdef _MATERIAL_FEATURE_TRANSMISSION
				surfaceDescription.TransmissionMask = 1;
				#endif

				#if defined( _MATERIAL_FEATURE_SUBSURFACE_SCATTERING ) || defined( _MATERIAL_FEATURE_TRANSMISSION )
				surfaceDescription.DiffusionProfile = 0;
				#endif

				#ifdef _MATERIAL_FEATURE_ANISOTROPY
				surfaceDescription.Anisotropy = 1;
				surfaceDescription.Tangent = float3( 1, 0, 0 );
				#endif

				#ifdef _MATERIAL_FEATURE_IRIDESCENCE
				surfaceDescription.IridescenceMask = 0;
				surfaceDescription.IridescenceThickness = 0;
				#endif

				GetSurfaceAndBuiltinData(surfaceDescription,input, V, posInput, surfaceData, builtinData);
				BSDFData bsdfData = ConvertSurfaceDataToBSDFData(input.positionSS.xy, surfaceData);
				LightTransportData lightTransportData = GetLightTransportData(surfaceData, builtinData, bsdfData);

				float4 res = float4( 0.0, 0.0, 0.0, 1.0 );
				UnityMetaInput metaInput;
				metaInput.Albedo = lightTransportData.diffuseColor.rgb;
				metaInput.Emission = lightTransportData.emissiveColor;

			#ifdef EDITOR_VISUALIZATION
				metaInput.VizUV = packedInput.VizUV;
				metaInput.LightCoord = packedInput.LightCoord;
			#endif
				res = UnityMetaFragment(metaInput);

				return res;
			}

			ENDHLSL
		}

		UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
	UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"

		Pass
		{
			
			Name "ShadowCaster"
			Tags { "LightMode"="ShadowCaster" }

			Cull [_CullMode]
			ZWrite On
			ZClip [_ZClip]
			ZTest LEqual
			ColorMask 0

			HLSLPROGRAM
			#define _ENERGY_CONSERVING_SPECULAR 1
			#define SUPPORT_BLENDMODE_PRESERVE_SPECULAR_LIGHTING
			#pragma shader_feature_local_fragment _ _DISABLE_DECALS
			#define _SPECULAR_OCCLUSION_FROM_AO 1
			#define ASE_ABSOLUTE_VERTEX_POS 1
			#define _MATERIAL_FEATURE_SPECULAR_COLOR 1
			#define _AMBIENT_OCCLUSION 1
			#define HAVE_MESH_MODIFICATION
			#define ASE_SRP_VERSION 170003
			#define ASE_USING_SAMPLING_MACROS 1

			#pragma multi_compile _ DOTS_INSTANCING_ON

            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
            #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC _TRANSPARENT_REFRACTIVE_SORT
            #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT

			#pragma multi_compile_fragment _ SHADOWS_SHADOWMASK

			#pragma vertex Vert
			#pragma fragment Frag

			#define SHADERPASS SHADERPASS_SHADOWS

			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/DebugMipmapStreamingMacros.hlsl"
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl"

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"

            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
                #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
                #define RAYTRACING_SHADER_GRAPH_LOW
            #endif

            #ifndef SHADER_UNLIT
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif

			#if defined(_DOUBLESIDED_ON) && !defined(ASE_NEED_CULLFACE)
			    #define ASE_NEED_CULLFACE 1
			#endif

            #if _MATERIAL_FEATURE_COLORED_TRANSMISSION
            #undef _MATERIAL_FEATURE_CLEAR_COAT
            #endif

		    #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
			#define OUTPUT_SPLIT_LIGHTING
		    #endif

		    #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
			#undef  _REFRACTION_PLANE
			#undef  _REFRACTION_SPHERE
			#define _REFRACTION_THIN
		    #endif

            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif

            #if SHADERPASS == SHADERPASS_MOTION_VECTORS && defined(WRITE_DECAL_BUFFER_AND_RENDERING_LAYER)
                #define WRITE_DECAL_BUFFER
            #endif

            #ifndef DEBUG_DISPLAY
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif

            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            #if (defined(_TRANSPARENT_WRITES_MOTION_VEC) || defined(_TRANSPARENT_REFRACTIVE_SORT)) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif

			CBUFFER_START( UnityPerMaterial )
			half4 _TerrainShaderMax13;
			half4 _TerrainCoord8;
			half4 _TerrainShaderMin8;
			half4 _TerrainShaderMax8;
			half4 _TerrainCoord9;
			half4 _TerrainShaderMin9;
			half4 _TerrainShaderMax9;
			half4 _TerrainCoord10;
			half4 _TerrainShaderMax7;
			half4 _TerrainShaderMin10;
			half4 _TerrainCoord11;
			half4 _TerrainShaderMin11;
			half4 _TerrainShaderMax11;
			half4 _TerrainCoord12;
			half4 _TerrainShaderMin12;
			half4 _TerrainShaderMax12;
			half4 _TerrainCoord13;
			half4 _TerrainShaderMax10;
			half4 _TerrainShaderMin13;
			half4 _TerrainShaderMin7;
			half4 _TerrainShaderMax6;
			half4 _TerrainShaderMin1;
			half4 _TerrainShaderMax1;
			half4 _TerrainCoord2;
			half4 _TerrainShaderMin2;
			half4 _TerrainShaderMax2;
			half4 _TerrainCoord3;
			half4 _TerrainShaderMin3;
			half4 _TerrainCoord7;
			half4 _TerrainShaderMax3;
			half4 _TerrainShaderMin4;
			half4 _TerrainShaderMax4;
			half4 _TerrainCoord5;
			half4 _TerrainShaderMin5;
			half4 _TerrainShaderMax5;
			half4 _TerrainCoord6;
			half4 _TerrainShaderMin6;
			half4 _TerrainCoord4;
			half4 _TerrainCoord1;
			half4 _TerrainParams15;
			half4 _TerrainShaderMin14;
			half4 _TerrainColor13;
			half4 _TerrainColor14;
			half4 _TerrainColor15;
			half4 _TerrainColor16;
			half4 _TerrainColor;
			half4 _TerrainParams1;
			half4 _TerrainParams2;
			half4 _TerrainColor12;
			half4 _TerrainParams3;
			half4 _TerrainParams5;
			half4 _TerrainParams6;
			half4 _TerrainParams7;
			half4 _TerrainParams8;
			half4 _TerrainParams9;
			half4 _TerrainParams10;
			half4 _TerrainParams11;
			half4 _TerrainParams4;
			half4 _TerrainCoord14;
			half4 _TerrainColor11;
			half4 _TerrainColor9;
			half4 _TerrainShaderMax14;
			half4 _TerrainCoord15;
			half4 _TerrainShaderMin15;
			half4 _TerrainShaderMax15;
			half4 _TerrainCoord16;
			half4 _TerrainShaderMin16;
			half4 _TerrainShaderMax16;
			half4 _TerrainColor10;
			half4 _TerrainParams14;
			half4 _TerrainColor2;
			half4 _TerrainColor3;
			half4 _TerrainColor4;
			half4 _TerrainColor5;
			half4 _TerrainColor6;
			half4 _TerrainColor7;
			half4 _TerrainColor8;
			half4 _TerrainColor1;
			half4 _TerrainParams12;
			float4 _TerrainControlTex1_TexelSize;
			half4 _TerrainPosition;
			float4 _TintingColor;
			half4 _TintingLumaRemap;
			half4 _TintingBlendRemap;
			float4 _DrynessColor;
			half4 _DrynessLumaRemap;
			half4 _DrynessBlendRemap;
			half4 _TerrainSize;
			half4 _OverlayColor;
			half4 _overlay_coord_value;
			half4 _OverlayCoordValue;
			half4 _OverlayGlitterColor;
			half4 _OverlayProjRemap;
			half4 _OverlayLumaRemap;
			half4 _OverlayBlendRemap1;
			half4 _WetnessWaterColor;
			half4 _WetnessWaterBlendRemap;
			half4 _EmissiveColor;
			half4 _TerrainSpecular16;
			half4 _TerrainSpecular15;
			half4 _object_phase_mode;
			half4 _TerrainSpecular13;
			half4 _TerrainParams16;
			half4 _TerrainSpecular1;
			half4 _TerrainSpecular14;
			half4 _TerrainSpecular2;
			half4 _TerrainSpecular3;
			half4 _TerrainSpecular4;
			half4 _TerrainSpecular5;
			half4 _TerrainSpecular6;
			half4 _TerrainSpecular7;
			half4 _TerrainSpecular8;
			half4 _TerrainParams13;
			half4 _TerrainSpecular10;
			half4 _TerrainSpecular12;
			half4 _TerrainSpecular11;
			half4 _TerrainSpecular9;
			half _DrynessIntensityValue;
			half _OverlaySubsurfaceValue;
			half _TerrainMetallicValue;
			half _WetnessWaterIntensityValue;
			half _WetnessIntensityValue;
			half _WetnessWaterBaseValue;
			half _TerrainNormalValue;
			half _WetnessContrastValue;
			half _WetnessDropsTillingValue;
			half _WetnessDropsNormalValue;
			half _WetnessDropsDistValue;
			half _WetnessSmoothnessValue;
			half _EmissiveIntensityValue;
			half _TintingElementMode;
			half _EmissiveColorMode;
			float _emissive_power_value;
			half _EmissiveExposureValue;
			half _CutoutIntensityValue;
			half _WetnessDropsIntensityValue;
			half _OverlaySmoothnessValue;
			half _OverlayLumaValue;
			half _TerrainOcclusionValue;
			half _DrynessMultiValue;
			half _DrynessShiftValue;
			half _DrynessLumaValue;
			half _DrynessGrayValue;
			half _DrynessSmoothnessValue;
			half _DrynessSubsurfaceValue;
			half _TintingLumaValue;
			half _OverlaySampleMode;
			half _OverlayNormalValue;
			half _OverlayCoordMode;
			half _OverlayTextureMode;
			half _OverlayGlitterIntensityValue;
			half _TintingIntensityValue;
			half _OverlayGlitterDistValue;
			half _OverlayIntensityValue;
			half _TintingGrayValue;
			half _OverlayProjValue;
			half _TerrainSmoothnessValue;
			half _TintingMultiValue;
			half _OverlayGlitterTillingValue;
			half _TerrainLayersMode;
			half _CutoutShadowMode;
			half _RenderEnd;
			half _IsTVEShader;
			half _IsCustomShader;
			half _IsShared;
			half _HasDefaultTextures;
			half _IsCollected;
			half _IsConverted;
			half _IsIdentifier;
			half _RenderDecals;
			half _RenderSSR;
			half _RenderClip;
			half _IsVersion;
			half _RenderShadow;
			half _RenderFilter;
			half _LandscapeCategory;
			half _RenderCategory;
			half _IsStandardShader;
			half _IsTerrainShader;
			half _TerrainTextureMode;
			half _TerrainSampleMode1;
			half _TerrainSampleMode2;
			half _TerrainSampleMode3;
			half _TerrainSampleMode4;
			half _TerrainSampleMode5;
			half _TerrainSampleMode6;
			half _TerrainSampleMode7;
			half _LandscapeEnd;
			half _TerrainSampleMode8;
			half _TerrainSampleMode10;
			half _TerrainSampleMode11;
			half _TerrainSampleMode12;
			half _TerrainSampleMode13;
			half _TerrainSampleMode14;
			half _TerrainSampleMode15;
			half _TerrainSampleMode16;
			half _TerrainSampleMode9;
			half _LandscapeInfo;
			half _GlobalCategory;
			half _GlobalEnd;
			half _OverlayCategory;
			half _OverlayEnd;
			half _OverlaySpace;
			half _OverlayElementMode;
			half _OverlayBakeInfo;
			half _DrynessCategory;
			half _DrynessEnd;
			half _WetnessBakeInfo;
			half _DrynessSpace;
			half _DrynessBakeInfo;
			half _TintingCategory;
			half _TintingEnd;
			half _TintingSpace;
			half _TintingBakeInfo;
			half _CategoryTerrain;
			half _EndTerrain;
			half _DrynessElementMode;
			half _TerrainHeightBlendValue;
			half _WetnessElementMode;
			half _WetnessCategory;
			half _GlobalPaintLayerValue;
			half _GlobalGlowLayerValue;
			half _GlobalAtmoLayerValue;
			half _GlobalFadeLayerValue;
			half _GlobalLandLayerValue;
			half _LandscapeHeightValue;
			half _CutoutCategory;
			half _WetnessEnd;
			half _CutoutEnd;
			half _CutoutBakeInfo;
			half _EmissiveCategory;
			half _EmissiveEnd;
			half _EmissivePowerMode;
			half _EmissivePowerValue;
			half _EmissiveElementMode;
			half _EmissiveFlagMode;
			half _CutoutElementMode;
			half _RenderSpecular;
			float4 _EmissionColor;
			float _AlphaCutoff;
			float _RenderQueueType;
			#ifdef _ADD_PRECOMPUTED_VELOCITY
			    float _AddPrecomputedVelocity;
			#endif
			float _StencilRef;
			float _StencilWriteMask;
			float _StencilRefDepth;
			float _StencilWriteMaskDepth;
			float _StencilRefMV;
			float _StencilWriteMaskMV;
			float _StencilRefDistortionVec;
			float _StencilWriteMaskDistortionVec;
			float _StencilWriteMaskGBuffer;
			float _StencilRefGBuffer;
			float _ZTestGBuffer;
			float _RequireSplitLighting;
			float _ReceivesSSR;
			float _SurfaceType;
			float _BlendMode;
            #ifdef SUPPORT_BLENDMODE_PRESERVE_SPECULAR_LIGHTING
			    float _EnableBlendModePreserveSpecularLighting;
            #endif
			float _SrcBlend;
			float _DstBlend;
			float _DstBlend2;
			float _AlphaSrcBlend;
			float _AlphaDstBlend;
			float _ZWrite;
			float _TransparentZWrite;
			float _CullMode;
			float _TransparentSortPriority;
			float _EnableFogOnTransparent;
			float _CullModeForward;
			float _TransparentCullMode;
			float _ZTestDepthEqualForOpaque;
			float _ZTestTransparent;
			float _TransparentBackfaceEnable;
			float _AlphaCutoffEnable;
			float _UseShadowThreshold;
			float _DoubleSidedEnable;
			float _DoubleSidedNormalMode;
			float4 _DoubleSidedConstants;
			#ifdef ASE_TESSELLATION
			    float _TessPhongStrength;
			    float _TessValue;
			    float _TessMin;
			    float _TessMax;
			    float _TessEdgeLength;
			    float _TessMaxDisp;
			#endif
			UNITY_TEXTURE_STREAMING_DEBUG_VARS;
			CBUFFER_END

            #ifdef SCENEPICKINGPASS
			float4 _SelectionID;
            #endif

            #ifdef SCENESELECTIONPASS
			int _ObjectId;
			int _PassValue;
            #endif

			float3 TVE_WorldOrigin;
			float4x4 unity_CameraProjection;
			float4x4 unity_CameraInvProjection;
			float4x4 unity_WorldToCamera;
			float4x4 unity_CameraToWorld;
			half4 TVE_CoatParams;
			float TVE_PaintLayers[10];
			TEXTURE2D_ARRAY(TVE_PaintBaseTex);
			half4 TVE_RenderBaseCoords;
			SAMPLER(sampler_Linear_Clamp);
			TEXTURE2D_ARRAY(TVE_PaintNearTex);
			half4 TVE_RenderNearCoords;
			SAMPLER(sampler_Linear_Repeat);
			float4 TVE_RenderNearPositionR;
			half TVE_RenderNearFadeValue;
			half4 TVE_PaintParams;
			float TVE_GlowLayers[10];
			TEXTURE2D_ARRAY(TVE_GlowBaseTex);
			TEXTURE2D_ARRAY(TVE_GlowNearTex);
			half4 TVE_GlowParams;
			float TVE_AtmoLayers[10];
			TEXTURE2D_ARRAY(TVE_AtmoBaseTex);
			TEXTURE2D_ARRAY(TVE_AtmoNearTex);
			half4 TVE_AtmoParams;
			float TVE_FadeLayers[10];
			TEXTURE2D_ARRAY(TVE_FadeBaseTex);
			TEXTURE2D_ARRAY(TVE_FadeNearTex);
			half4 TVE_FadeParams;
			half4 TVE_FormParams;
			float TVE_LandLayers[10];
			TEXTURE2D_ARRAY(TVE_LandBaseTex);
			TEXTURE2D_ARRAY(TVE_LandNearTex);
			half4 TVE_LandParams;
			half4 TVE_WindParams;
			half4 TVE_PushParams;
			half TVE_IsEnabled;
			TEXTURE2D(_TerrainControlTex1);
			TEXTURE2D(_TerrainControlTex2);
			TEXTURE2D(_TerrainControlTex3);
			TEXTURE2D(_TerrainControlTex4);
			TEXTURE2D(_TerrainShaderTex1);
			SAMPLER(sampler_Point_Repeat);
			SAMPLER(sampler_Linear_Repeat_Aniso8);
			TEXTURE2D(_TerrainShaderTex2);
			TEXTURE2D(_TerrainShaderTex3);
			TEXTURE2D(_TerrainShaderTex4);
			TEXTURE2D(_TerrainShaderTex5);
			TEXTURE2D(_TerrainShaderTex6);
			TEXTURE2D(_TerrainShaderTex7);
			TEXTURE2D(_TerrainShaderTex8);
			TEXTURE2D(_TerrainShaderTex9);
			TEXTURE2D(_TerrainShaderTex10);
			TEXTURE2D(_TerrainShaderTex11);
			TEXTURE2D(_TerrainShaderTex12);
			TEXTURE2D(_TerrainShaderTex13);
			TEXTURE2D(_TerrainShaderTex14);
			TEXTURE2D(_TerrainShaderTex15);
			TEXTURE2D(_TerrainShaderTex16);
			TEXTURE2D(_TerrainAlbedoTex1);
			TEXTURE2D(_TerrainAlbedoTex2);
			TEXTURE2D(_TerrainAlbedoTex3);
			TEXTURE2D(_TerrainAlbedoTex4);
			TEXTURE2D(_TerrainAlbedoTex5);
			TEXTURE2D(_TerrainAlbedoTex6);
			TEXTURE2D(_TerrainAlbedoTex7);
			TEXTURE2D(_TerrainAlbedoTex8);
			TEXTURE2D(_TerrainAlbedoTex9);
			TEXTURE2D(_TerrainAlbedoTex10);
			TEXTURE2D(_TerrainAlbedoTex11);
			TEXTURE2D(_TerrainAlbedoTex12);
			TEXTURE2D(_TerrainAlbedoTex13);
			TEXTURE2D(_TerrainAlbedoTex14);
			TEXTURE2D(_TerrainAlbedoTex15);
			TEXTURE2D(_TerrainAlbedoTex16);
			TEXTURE2D(_TerrainNormalTex1);
			TEXTURE2D(_TerrainNormalTex2);
			TEXTURE2D(_TerrainNormalTex3);
			TEXTURE2D(_TerrainNormalTex4);
			TEXTURE2D(_TerrainNormalTex5);
			TEXTURE2D(_TerrainNormalTex6);
			TEXTURE2D(_TerrainNormalTex7);
			TEXTURE2D(_TerrainNormalTex8);
			TEXTURE2D(_TerrainNormalTex9);
			TEXTURE2D(_TerrainNormalTex10);
			TEXTURE2D(_TerrainNormalTex11);
			TEXTURE2D(_TerrainNormalTex12);
			TEXTURE2D(_TerrainNormalTex13);
			TEXTURE2D(_TerrainNormalTex14);
			TEXTURE2D(_TerrainNormalTex15);
			TEXTURE2D(_TerrainNormalTex16);
			TEXTURE2D(_TerrainHolesTex);
			TEXTURE2D(_OverlayAlbedoTex);
			TEXTURE2D(_OverlayGlitterTexRT);
			TEXTURE2D(_OverlayNormalTex);
			TEXTURE2D(_WetnessDropsTexRT);
			#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
				TEXTURE2D(_TerrainHeightmapTexture);//ASE Terrain Instancing
				TEXTURE2D( _TerrainNormalmapTexture);//ASE Terrain Instancing
				SAMPLER(sampler_TerrainNormalmapTexture);//ASE Terrain Instancing
			#endif//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_START( Terrain )//ASE Terrain Instancing
				UNITY_DEFINE_INSTANCED_PROP( float4, _TerrainPatchInstanceData )//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_END( Terrain)//ASE Terrain Instancing
			CBUFFER_START( UnityTerrain)//ASE Terrain Instancing
				#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
					float4 _TerrainHeightmapRecipSize;//ASE Terrain Instancing
					float4 _TerrainHeightmapScale;//ASE Terrain Instancing
				#endif//ASE Terrain Instancing
			CBUFFER_END//ASE Terrain Instancing


            #ifdef DEBUG_DISPLAY
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
            #endif

            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"

            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitDecalData.hlsl"

        	#ifdef HAVE_VFX_MODIFICATION
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif

			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/CommonLighting.hlsl"
			#define ASE_NEEDS_VERT_POSITION
			#define ASE_NEEDS_VERT_NORMAL
			#define ASE_NEEDS_VERT_TANGENT
			#define ASE_NEEDS_FRAG_RELATIVE_WORLD_POS
			#pragma shader_feature_local_fragment TVE_PIPELINE_STANDARD TVE_PIPELINE_UNIVERSAL TVE_PIPELINE_HD
			#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
			#pragma shader_feature_local_vertex TVE_LANDSCAPE
			#pragma shader_feature_local_fragment TVE_WETNESS
			#pragma shader_feature_local_fragment TVE_OVERLAY
			#pragma shader_feature_local_fragment TVE_DRYNESS
			#pragma shader_feature_local_fragment TVE_TINTING
			#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
			#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
			#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
			#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
			#pragma shader_feature_local_fragment TVE_DRYNESS_SHIFT
			#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
			#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
			#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_WATER
			#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
			#pragma shader_feature_local_fragment TVE_EMISSIVE
			#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
			#pragma shader_feature_local_fragment TVE_CUTOUT
			#pragma shader_feature_local_fragment TVE_CUTOUT_SHADOW
			#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
			#pragma multi_compile_instancing
			#pragma instancing_options assumeuniformscaling nomatrices nolightprobe nolightmap
			  
			struct TVEVisualData
			{  
				half Dummy;  
				half3 Albedo;
				half3 AlbedoRaw;
				half2 NormalTS;
				half3 NormalWS; 
				half4 Shader;
				half4 Emissive;
				half AlphaClip;
				half AlphaFade;
				half MultiMask;
				half Grayscale;
				half Luminosity;
				half3 Translucency;
				half Transmission;
				half Thickness;
				float Diffusion;
			};  
			    
			struct TVEModelData
			{    
				half Dummy;    
				half3 PositionOS;
				half3 PositionWS;
				half3 PositionWO;
				half3 PositionRawOS;
				half3 PositionAddOS;
				half3 PivotOS;
				half3 PivotWS;
				half3 PivotWO;
				half3 NormalOS;
				half3 NormalWS;
				half3 NormalRawOS;
				half3 NormalRawWS;
				half4 TangentOS;
				half3 ViewDirWS;
				half4 VertexData;
				half4 MotionData;
				half4 BoundsData;
				half4 RotationData;
			};    
			      
			struct TVEGlobalData
			{      
				half Dummy;      
				half4 CoatParams;
				half4 PaintParams;
				half4 GlowParams;
				half4 AtmoParams;
				half4 FadeParams;
				half4 FormParams;
				half4 LandParams;
				half4 WindParams;
				half4 PushParams;
			};      
			        
			//#pragma editor_sync_compilation


			struct AttributesMesh
			{
				float3 positionOS : POSITION;
				float3 normalOS : NORMAL;
				float4 tangentOS : TANGENT;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;
				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct PackedVaryingsMeshToPS
			{
				SV_POSITION_QUALIFIERS float4 positionCS : SV_Position;
				float3 positionRWS : TEXCOORD0;
				float4 ase_texcoord1 : TEXCOORD1;
				float4 ase_texcoord2 : TEXCOORD2;
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_texcoord4 : TEXCOORD4;
				float4 ase_color : COLOR;
				float4 ase_texcoord5 : TEXCOORD5;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				UNITY_VERTEX_OUTPUT_STEREO
				#if defined(SHADER_STAGE_FRAGMENT) && defined(ASE_NEED_CULLFACE)
				FRONT_FACE_TYPE cullFace : FRONT_FACE_SEMANTIC;
				#endif
			};

			float3 ObjectPosition_UNITY_MATRIX_M(  )
			{
				return float3(UNITY_MATRIX_M[0].w, UNITY_MATRIX_M[1].w, UNITY_MATRIX_M[2].w );
			}
			
			void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
			{
				ZX = WorldPosition.xz * Coords.xx - Coords.zz;
				ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
				XY = WorldPosition.xy * Coords.xy - Coords.zw;
			}
			
			half4 SamplePlanar2D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
			{
				half3 powNormal = abs( WorldNormal.xyz );
				half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
				weights /= ( weights.x + weights.y + weights.z ).xxx;
				T1 = weights.y;
				T2 = weights.x;
				T3 = weights.z;
			}
			
			half4 SamplePlanar3D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
				half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
				half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
				return tex1 * T1 + tex2 * T2 + tex3 * T3;
			}
			
			void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
			{
				half2 vertex1, vertex2, vertex3;
				// Scaling of the input
				half2 uv = UV * 3.464; // 2 * sqrt (3)
				// Skew input space into simplex triangle grid
				const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
				half2 skewedCoord = mul( gridToSkewedGrid, uv );
				// Compute local triangle vertex IDs and local barycentric coordinates
				int2 baseId = int2( floor( skewedCoord ) );
				half3 temp = half3( frac( skewedCoord ), 0 );
				temp.z = 1.0 - temp.x - temp.y;
				if ( temp.z > 0.0 )
				{
					W1 = temp.z;
					W2 = temp.y;
					W3 = temp.x;
					vertex1 = baseId;
					vertex2 = baseId + int2( 0, 1 );
					vertex3 = baseId + int2( 1, 0 );
				}
				else
				{
					W1 = -temp.z;
					W2 = 1.0 - temp.y;
					W3 = 1.0 - temp.x;
					vertex1 = baseId + int2( 1, 1 );
					vertex2 = baseId + int2( 1, 0 );
					vertex3 = baseId + int2( 0, 1 );
				}
				UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
				UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
				UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
				return;
			}
			
			float4 SampleStochastic2D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
				half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
				half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
				half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
				return tex1 * W1 + tex2 * W2 + tex3 * W3;
			}
			
			half4 SampleStochastic3D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				half4 tex1, tex2, tex3;
				ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
				half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
				half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
				half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				return texZX * T1 + texZY * T2 + texXY * T3;
			}
			
			half3 HSVToRGB( half3 c )
			{
				half4 K = half4( 1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0 );
				half3 p = abs( frac( c.xxx + K.xyz ) * 6.0 - K.www );
				return c.z * lerp( K.xxx, saturate( p - K.xxx ), c.y );
			}
			
			half3 RGBToHSV(half3 c)
			{
				half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
				half4 p = lerp( half4( c.bg, K.wz ), half4( c.gb, K.xy ), step( c.b, c.g ) );
				half4 q = lerp( half4( p.xyw, c.r ), half4( c.r, p.yzx ), step( p.x, c.r ) );
				half d = q.x - min( q.w, q.y );
				half e = 1.0e-10;
				return half3( abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
			}
			float3 ASEGetEmissionHDRColor(float3 ldrColor, float luminanceIntensity, float exposureWeight, float inverseCurrentExposureMultiplier)
			{
				float3 hdrColor = ldrColor * luminanceIntensity;
				hdrColor = lerp( hdrColor* inverseCurrentExposureMultiplier, hdrColor, exposureWeight);
				return hdrColor;
			}
			
			half ShadowPassCheck36_g118142( half True, half False )
			{
				half result;
				#if defined(SHADERPASS) && (SHADERPASS  == SHADERPASS_SHADOWS)
					result = True;
				#else
					result = False;
				#endif
				return result;
			}
			
			AttributesMesh ApplyMeshModification( AttributesMesh inputMesh )
			{
			#ifdef UNITY_INSTANCING_ENABLED
				float2 patchVertex = inputMesh.positionOS.xy;
				float4 instanceData = UNITY_ACCESS_INSTANCED_PROP( Terrain, _TerrainPatchInstanceData );
				float2 sampleCoords = ( patchVertex.xy + instanceData.xy ) * instanceData.z;
				float height = UnpackHeightmap( _TerrainHeightmapTexture.Load( int3( sampleCoords, 0 ) ) );
				inputMesh.positionOS.xz = sampleCoords* _TerrainHeightmapScale.xz;
				inputMesh.positionOS.y = height* _TerrainHeightmapScale.y;
				#ifdef ENABLE_TERRAIN_PERPIXEL_NORMAL
					inputMesh.normalOS = float3(0, 1, 0);
				#else
					inputMesh.normalOS = _TerrainNormalmapTexture.Load(int3(sampleCoords, 0)).rgb* 2 - 1;
				#endif
				inputMesh.ase_texcoord.xy = sampleCoords* _TerrainHeightmapRecipSize.zw;
			#endif
				return inputMesh;
			}
			

			void BuildSurfaceData(FragInputs fragInputs, inout AlphaSurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
			{
				ZERO_INITIALIZE(SurfaceData, surfaceData);

				surfaceData.specularOcclusion = 1.0;
				surfaceData.thickness = 0.0;

				// refraction ShadowCaster
                #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                    if (_EnableSSRefraction)
                    {
        
                        surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                        surfaceDescription.Alpha = 1.0;
                    }
                    else
                    {
                        surfaceData.ior = 1.0;
                        surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                        surfaceData.atDistance = 1.0;
                        surfaceData.transmittanceMask = 0.0;
                        surfaceDescription.Alpha = 1.0;
                    }
                    #else
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                #endif

				surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;

				#ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
				#endif

				#ifdef _MATERIAL_FEATURE_TRANSMISSION
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
				#endif

				#ifdef _MATERIAL_FEATURE_COLORED_TRANSMISSION
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_COLORED_TRANSMISSION;
				#endif

                #ifdef _MATERIAL_FEATURE_ANISOTROPY
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
                    surfaceData.normalWS = float3(0, 1, 0);
                #endif

				#ifdef _MATERIAL_FEATURE_IRIDESCENCE
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
				#endif

				#ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
				#endif

				#ifdef _MATERIAL_FEATURE_CLEAR_COAT
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
				#endif

				#if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                    surfaceData.baseColor *= ( 1.0 - Max3( surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b ) );
				#endif

				#ifdef _DOUBLESIDED_ON
				float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
				#else
				float3 doubleSidedConstants = float3( 1.0, 1.0, 1.0 );
				#endif

				float3 normalTS = float3(0.0f, 0.0f, 1.0f);

                #ifdef DECAL_NORMAL_BLENDING
					normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(normalTS, fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);

                    #if HAVE_DECALS
                    if (_EnableDecals)
                    {
                        float alpha = 1.0;
                        alpha = surfaceDescription.Alpha;

                        DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                        ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                        ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
                     }
                    #endif

                    GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
                #else
					GetNormalWS(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);

                    #if HAVE_DECALS
                    if (_EnableDecals)
                    {
                        float alpha = 1.0;
                        alpha = surfaceDescription.Alpha;
        
                        DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                        ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                        ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
                    }
                    #endif
                #endif

				surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
                surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz );
                surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);

				bentNormalWS = surfaceData.normalWS;

                #if defined(DEBUG_DISPLAY)
				    #if !defined(SHADER_STAGE_RAY_TRACING)
				    if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
				    {
					   #ifdef FRAG_INPUTS_USE_TEXCOORD0
                           surfaceData.baseColor = GET_TEXTURE_STREAMING_DEBUG(posInput.positionSS, fragInputs.texCoord0);
                       #else
                           surfaceData.baseColor = GET_TEXTURE_STREAMING_DEBUG_NO_UV(posInput.positionSS);
                       #endif
					   surfaceData.metallic = 0;
				    }
					#endif
                    ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
                #endif

                #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                    surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
                #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                    surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
                #endif

                #ifdef _ENABLE_GEOMETRIC_SPECULAR_AA
                    surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
                #endif
			}

			// Get Surface And BuiltinData
			void GetSurfaceAndBuiltinData(AlphaSurfaceDescription surfaceDescription, FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData)
			{
				#ifdef LOD_FADE_CROSSFADE
                    LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
				#endif

                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants);

				#ifdef _ALPHATEST_ON
                    DoAlphaTest( surfaceDescription.Alpha, surfaceDescription.AlphaClipThreshold );
				#endif

				#ifdef _ALPHATEST_SHADOW_ON
                    DoAlphaTest( surfaceDescription.Alpha, surfaceDescription.AlphaClipThresholdShadow);
				#endif

				#ifdef _DEPTHOFFSET_ON
                    ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
				#endif

                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], fragInputs.texCoord1, fragInputs.texCoord2, builtinData);

				#ifdef _DEPTHOFFSET_ON
                    builtinData.depthOffset = surfaceDescription.DepthOffset;
				#endif

                #ifdef _ALPHATEST_ON
                    builtinData.alphaClipTreshold = surfaceDescription.AlphaClipThreshold;
                #endif

                #ifdef UNITY_VIRTUAL_TEXTURING
                    builtinData.vtPackedFeedback = surfaceDescription.VTPackedFeedback;
                #endif

				#ifdef ASE_BAKEDGI
                    builtinData.bakeDiffuseLighting = surfaceDescription.BakedGI;
				#endif

				#ifdef ASE_BAKEDBACKGI
                    builtinData.backBakeDiffuseLighting = surfaceDescription.BakedBackGI;
				#endif

                builtinData.emissiveColor = surfaceDescription.Emission;

                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
			}

			PackedVaryingsMeshToPS VertexFunction(AttributesMesh inputMesh )
			{
				PackedVaryingsMeshToPS outputPackedVaryingsMeshToPS;
				UNITY_SETUP_INSTANCE_ID(inputMesh);
				UNITY_TRANSFER_INSTANCE_ID(inputMesh, outputPackedVaryingsMeshToPS);
				UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO( outputPackedVaryingsMeshToPS );

				inputMesh = ApplyMeshModification(inputMesh);
				TVEModelData Data16_g118149 = (TVEModelData)0;
				half Dummy181_g118147 = ( _LandscapeCategory + _LandscapeEnd + _LandscapeInfo );
				float In_Dummy16_g118149 = Dummy181_g118147;
				TVEModelData Data16_g117808 = (TVEModelData)0;
				half Dummy207_g117794 = 0.0;
				float In_Dummy16_g117808 = Dummy207_g117794;
				half3 PositionOS131_g117794 = inputMesh.positionOS;
				float3 In_PositionOS16_g117808 = PositionOS131_g117794;
				float3 ase_worldPos = GetAbsolutePositionWS( TransformObjectToWorld( (inputMesh.positionOS).xyz ) );
				float3 vertexToFrag73_g117794 = ase_worldPos;
				half3 PositionWS122_g117794 = vertexToFrag73_g117794;
				float3 In_PositionWS16_g117808 = PositionWS122_g117794;
				float3 localObjectPosition_UNITY_MATRIX_M14_g117796 = ObjectPosition_UNITY_MATRIX_M();
				#ifdef SHADEROPTIONS_CAMERA_RELATIVE_RENDERING
				float3 staticSwitch13_g117796 = ( localObjectPosition_UNITY_MATRIX_M14_g117796 + _WorldSpaceCameraPos );
				#else
				float3 staticSwitch13_g117796 = localObjectPosition_UNITY_MATRIX_M14_g117796;
				#endif
				half3 ObjectData20_g117798 = staticSwitch13_g117796;
				half3 WorldData19_g117798 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g117798 = WorldData19_g117798;
				#else
				float3 staticSwitch14_g117798 = ObjectData20_g117798;
				#endif
				float3 temp_output_124_0_g117796 = staticSwitch14_g117798;
				float3 temp_output_239_7_g117794 = temp_output_124_0_g117796;
				half3 PivotWS121_g117794 = temp_output_239_7_g117794;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g117794 = ( PositionWS122_g117794 - PivotWS121_g117794 );
				#else
				float3 staticSwitch204_g117794 = PositionWS122_g117794;
				#endif
				half3 PositionWO132_g117794 = ( staticSwitch204_g117794 - TVE_WorldOrigin );
				float3 In_PositionWO16_g117808 = PositionWO132_g117794;
				float3 In_PositionRawOS16_g117808 = PositionOS131_g117794;
				float3 In_PositionAddOS16_g117808 = float3( 0,0,0 );
				float3 _Vector0 = float3(0,0,0);
				half3 PivotOS149_g117794 = _Vector0;
				float3 In_PivotOS16_g117808 = PivotOS149_g117794;
				float3 In_PivotWS16_g117808 = PivotWS121_g117794;
				half3 PivotWO133_g117794 = ( PivotWS121_g117794 - TVE_WorldOrigin );
				float3 In_PivotWO16_g117808 = PivotWO133_g117794;
				half3 NormalOS134_g117794 = inputMesh.normalOS;
				float3 In_NormalOS16_g117808 = NormalOS134_g117794;
				float3 ase_worldNormal = TransformObjectToWorldNormal(inputMesh.normalOS);
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g117794 = normalizedWorldNormal;
				float3 In_NormalWS16_g117808 = Normal_WS95_g117794;
				float3 In_NormalRawOS16_g117808 = NormalOS134_g117794;
				float3 objToWorldDir298_g117794 = normalize( mul( GetObjectToWorldMatrix(), float4( inputMesh.normalOS, 0 ) ).xyz );
				half3 Normal_RawWS136_g117794 = objToWorldDir298_g117794;
				float3 In_NormalRawWS16_g117808 = Normal_RawWS136_g117794;
				half4 TangentlOS153_g117794 = inputMesh.tangentOS;
				float4 In_TangentOS16_g117808 = TangentlOS153_g117794;
				float3 normalizeResult296_g117794 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g117794 ) );
				half3 ViewDirWS169_g117794 = normalizeResult296_g117794;
				float3 In_ViewDirWS16_g117808 = ViewDirWS169_g117794;
				half4 VertexMasks171_g117794 = inputMesh.ase_color;
				float4 In_VertexData16_g117808 = VertexMasks171_g117794;
				float4 break33_g117807 = _object_phase_mode;
				float temp_output_30_0_g117807 = ( inputMesh.ase_color.r * break33_g117807.x );
				float temp_output_29_0_g117807 = ( inputMesh.ase_color.g * break33_g117807.y );
				float temp_output_31_0_g117807 = ( inputMesh.ase_color.b * break33_g117807.z );
				float temp_output_28_0_g117807 = ( temp_output_30_0_g117807 + temp_output_29_0_g117807 + temp_output_31_0_g117807 + ( inputMesh.ase_color.a * break33_g117807.w ) );
				float3 break243_g117794 = PivotWO133_g117794;
				float temp_output_315_0_g117794 = (frac( ( temp_output_28_0_g117807 + ( break243_g117794.x + break243_g117794.z ) ) )*2.0 + -1.0);
				float4 appendResult177_g117794 = (float4(1.0 , 1.0 , temp_output_315_0_g117794 , 1.0));
				half4 MotionMasks176_g117794 = appendResult177_g117794;
				float4 In_MotionData16_g117808 = MotionMasks176_g117794;
				half4 BoundsData254_g117794 = float4( 0,0,0,0 );
				float4 In_BoundsData16_g117808 = BoundsData254_g117794;
				float4 In_RotationData16_g117808 = float4( 0,0,0,0 );
				Data16_g117808.Dummy = In_Dummy16_g117808;
				Data16_g117808.PositionOS = In_PositionOS16_g117808;
				Data16_g117808.PositionWS = In_PositionWS16_g117808;
				Data16_g117808.PositionWO = In_PositionWO16_g117808;
				Data16_g117808.PositionRawOS = In_PositionRawOS16_g117808;
				Data16_g117808.PositionAddOS = In_PositionAddOS16_g117808;
				Data16_g117808.PivotOS = In_PivotOS16_g117808;
				Data16_g117808.PivotWS = In_PivotWS16_g117808;
				Data16_g117808.PivotWO = In_PivotWO16_g117808;
				Data16_g117808.NormalOS = In_NormalOS16_g117808;
				Data16_g117808.NormalWS = In_NormalWS16_g117808;
				Data16_g117808.NormalRawOS = In_NormalRawOS16_g117808;
				Data16_g117808.NormalRawWS = In_NormalRawWS16_g117808;
				Data16_g117808.TangentOS = In_TangentOS16_g117808;
				Data16_g117808.ViewDirWS = In_ViewDirWS16_g117808;
				Data16_g117808.VertexData = In_VertexData16_g117808;
				Data16_g117808.MotionData = In_MotionData16_g117808;
				Data16_g117808.BoundsData = In_BoundsData16_g117808;
				Data16_g117808.RotationData = In_RotationData16_g117808;
				TVEModelData Data15_g118148 = Data16_g117808;
				float Out_Dummy15_g118148 = 0;
				float3 Out_PositionOS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionWS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118148 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotOS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118148 = float3( 0,0,0 );
				float3 Out_NormalOS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g118148 = float3( 0,0,0 );
				float4 Out_TangentOS15_g118148 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g118148 = float3( 0,0,0 );
				float4 Out_VertexData15_g118148 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g118148 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118148 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g118148 = float4( 0,0,0,0 );
				Out_Dummy15_g118148 = Data15_g118148.Dummy;
				Out_PositionOS15_g118148 = Data15_g118148.PositionOS;
				Out_PositionWS15_g118148 = Data15_g118148.PositionWS;
				Out_PositionWO15_g118148 = Data15_g118148.PositionWO;
				Out_PositionRawOS15_g118148 = Data15_g118148.PositionRawOS;
				Out_PositionAddOS15_g118148 = Data15_g118148.PositionAddOS;
				Out_PivotOS15_g118148 = Data15_g118148.PivotOS;
				Out_PivotWS15_g118148 = Data15_g118148.PivotWS;
				Out_PivotWO15_g118148 = Data15_g118148.PivotWO;
				Out_NormalOS15_g118148 = Data15_g118148.NormalOS;
				Out_NormalWS15_g118148 = Data15_g118148.NormalWS;
				Out_NormalRawOS15_g118148 = Data15_g118148.NormalRawOS;
				Out_NormalRawWS15_g118148 = Data15_g118148.NormalRawWS;
				Out_TangentOS15_g118148 = Data15_g118148.TangentOS;
				Out_ViewDirWS15_g118148 = Data15_g118148.ViewDirWS;
				Out_VertexData15_g118148 = Data15_g118148.VertexData;
				Out_MotionData15_g118148 = Data15_g118148.MotionData;
				Out_BoundsData15_g118148 = Data15_g118148.BoundsData;
				Out_RotationData15_g118148 = Data15_g118148.RotationData;
				half3 Input_PositionOS147_g118147 = Out_PositionOS15_g118148;
				float3 break592_g118147 = Input_PositionOS147_g118147;
				float localBuildGlobalData204_g117810 = ( 0.0 );
				TVEGlobalData Data204_g117810 = (TVEGlobalData)0;
				half Dummy211_g117810 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g117810 = Dummy211_g117810;
				half4 Coat_Params302_g117810 = TVE_CoatParams;
				float4 In_CoatParams204_g117810 = Coat_Params302_g117810;
				float temp_output_82_0_g117811 = _GlobalPaintLayerValue;
				float temp_output_19_0_g117813 = TVE_PaintLayers[(int)temp_output_82_0_g117811];
				TVEModelData Data16_g117809 = (TVEModelData)0;
				float In_Dummy16_g117809 = 0.0;
				float3 In_PositionWS16_g117809 = PositionWS122_g117794;
				float3 In_PositionWO16_g117809 = PositionWO132_g117794;
				float3 In_PivotWS16_g117809 = PivotWS121_g117794;
				float3 In_PivotWO16_g117809 = PivotWO133_g117794;
				float3 In_NormalWS16_g117809 = Normal_WS95_g117794;
				float3 In_ViewDirWS16_g117809 = ViewDirWS169_g117794;
				float4 In_VertexData16_g117809 = VertexMasks171_g117794;
				float4 In_BoundsData16_g117809 = float4( 1,1,1,1 );
				Data16_g117809.Dummy = In_Dummy16_g117809;
				Data16_g117809.PositionWS = In_PositionWS16_g117809;
				Data16_g117809.PositionWO = In_PositionWO16_g117809;
				Data16_g117809.PivotWS = In_PivotWS16_g117809;
				Data16_g117809.PivotWO = In_PivotWO16_g117809;
				Data16_g117809.NormalWS = In_NormalWS16_g117809;
				Data16_g117809.ViewDirWS = In_ViewDirWS16_g117809;
				Data16_g117809.VertexData = In_VertexData16_g117809;
				Data16_g117809.BoundsData = In_BoundsData16_g117809;
				TVEModelData Data15_g117892 = Data16_g117809;
				float Out_Dummy15_g117892 = 0;
				float3 Out_PositionWS15_g117892 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117892 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117892 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g117892 = float3( 0,0,0 );
				float4 Out_VertexData15_g117892 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117892 = float4( 0,0,0,0 );
				Out_Dummy15_g117892 = Data15_g117892.Dummy;
				Out_PositionWS15_g117892 = Data15_g117892.PositionWS;
				Out_PositionWO15_g117892 = Data15_g117892.PositionWO;
				Out_PivotWS15_g117892 = Data15_g117892.PivotWS;
				Out_PivotWO15_g117892 = Data15_g117892.PivotWO;
				Out_NormalWS15_g117892 = Data15_g117892.NormalWS;
				Out_ViewDirWS15_g117892 = Data15_g117892.ViewDirWS;
				Out_VertexData15_g117892 = Data15_g117892.VertexData;
				Out_BoundsData15_g117892 = Data15_g117892.BoundsData;
				half3 Model_PositionWS143_g117810 = Out_PositionWS15_g117892;
				half3 Input_Position180_g117814 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117814 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_82_0_g117814 = temp_output_82_0_g117811;
				float2 temp_output_119_0_g117814 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_7_0_g117819 = 1.0;
				float temp_output_10_0_g117819 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117819 );
				float4 lerpResult131_g117814 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117814,temp_output_82_0_g117814, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, temp_output_119_0_g117814,temp_output_82_0_g117814, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117814 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117819 ) / temp_output_10_0_g117819 ) ));
				float4 temp_output_17_0_g117813 = lerpResult131_g117814;
				float4 temp_output_3_0_g117813 = TVE_PaintParams;
				float4 ifLocalVar18_g117813 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117813 >= 0.5 )
				ifLocalVar18_g117813 = temp_output_17_0_g117813;
				else
				ifLocalVar18_g117813 = temp_output_3_0_g117813;
				float4 lerpResult22_g117813 = lerp( temp_output_3_0_g117813 , temp_output_17_0_g117813 , temp_output_19_0_g117813);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117813 = lerpResult22_g117813;
				#else
				float4 staticSwitch24_g117813 = ifLocalVar18_g117813;
				#endif
				half4 Paint_Params71_g117810 = staticSwitch24_g117813;
				float4 In_PaintParams204_g117810 = Paint_Params71_g117810;
				float temp_output_82_0_g117829 = _GlobalGlowLayerValue;
				float temp_output_19_0_g117831 = TVE_GlowLayers[(int)temp_output_82_0_g117829];
				half3 Input_Position180_g117832 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117832 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_82_0_g117832 = temp_output_82_0_g117829;
				float2 temp_output_119_0_g117832 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_7_0_g117837 = 1.0;
				float temp_output_10_0_g117837 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117837 );
				float4 lerpResult131_g117832 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117832,temp_output_82_0_g117832, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, temp_output_119_0_g117832,temp_output_82_0_g117832, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117832 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117837 ) / temp_output_10_0_g117837 ) ));
				float4 temp_output_17_0_g117831 = lerpResult131_g117832;
				float4 temp_output_3_0_g117831 = TVE_GlowParams;
				float4 ifLocalVar18_g117831 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117831 >= 0.5 )
				ifLocalVar18_g117831 = temp_output_17_0_g117831;
				else
				ifLocalVar18_g117831 = temp_output_3_0_g117831;
				float4 lerpResult22_g117831 = lerp( temp_output_3_0_g117831 , temp_output_17_0_g117831 , temp_output_19_0_g117831);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117831 = lerpResult22_g117831;
				#else
				float4 staticSwitch24_g117831 = ifLocalVar18_g117831;
				#endif
				half4 Glow_Params248_g117810 = staticSwitch24_g117831;
				float4 In_GlowParams204_g117810 = Glow_Params248_g117810;
				float temp_output_132_0_g117874 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g117876 = TVE_AtmoLayers[(int)temp_output_132_0_g117874];
				half3 Input_Position180_g117877 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117877 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_82_0_g117877 = temp_output_132_0_g117874;
				float2 temp_output_119_0_g117877 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_7_0_g117882 = 1.0;
				float temp_output_10_0_g117882 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117882 );
				float4 lerpResult131_g117877 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117877,temp_output_82_0_g117877, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, temp_output_119_0_g117877,temp_output_82_0_g117877, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117877 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117882 ) / temp_output_10_0_g117882 ) ));
				float4 temp_output_17_0_g117876 = lerpResult131_g117877;
				float4 temp_output_3_0_g117876 = TVE_AtmoParams;
				float4 ifLocalVar18_g117876 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117876 >= 0.5 )
				ifLocalVar18_g117876 = temp_output_17_0_g117876;
				else
				ifLocalVar18_g117876 = temp_output_3_0_g117876;
				float4 lerpResult22_g117876 = lerp( temp_output_3_0_g117876 , temp_output_17_0_g117876 , temp_output_19_0_g117876);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117876 = lerpResult22_g117876;
				#else
				float4 staticSwitch24_g117876 = ifLocalVar18_g117876;
				#endif
				half4 Atmo_Params80_g117810 = staticSwitch24_g117876;
				float4 In_AtmoParams204_g117810 = Atmo_Params80_g117810;
				float temp_output_132_0_g117883 = _GlobalFadeLayerValue;
				float temp_output_19_0_g117885 = TVE_FadeLayers[(int)temp_output_132_0_g117883];
				half3 Input_Position180_g117886 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117886 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_82_0_g117886 = temp_output_132_0_g117883;
				float2 temp_output_119_0_g117886 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_7_0_g117891 = 1.0;
				float temp_output_10_0_g117891 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117891 );
				float4 lerpResult131_g117886 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117886,temp_output_82_0_g117886, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, temp_output_119_0_g117886,temp_output_82_0_g117886, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117886 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117891 ) / temp_output_10_0_g117891 ) ));
				float4 temp_output_17_0_g117885 = lerpResult131_g117886;
				float4 temp_output_3_0_g117885 = TVE_FadeParams;
				float4 ifLocalVar18_g117885 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117885 >= 0.5 )
				ifLocalVar18_g117885 = temp_output_17_0_g117885;
				else
				ifLocalVar18_g117885 = temp_output_3_0_g117885;
				float4 lerpResult22_g117885 = lerp( temp_output_3_0_g117885 , temp_output_17_0_g117885 , temp_output_19_0_g117885);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117885 = lerpResult22_g117885;
				#else
				float4 staticSwitch24_g117885 = ifLocalVar18_g117885;
				#endif
				half4 Fade_Params387_g117810 = staticSwitch24_g117885;
				float4 In_FadeParams204_g117810 = Fade_Params387_g117810;
				half4 Form_Params112_g117810 = TVE_FormParams;
				float4 In_FormParams204_g117810 = Form_Params112_g117810;
				float temp_output_130_0_g117847 = _GlobalLandLayerValue;
				float temp_output_19_0_g117849 = TVE_LandLayers[(int)temp_output_130_0_g117847];
				half3 Input_Position180_g117850 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117850 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_82_0_g117850 = temp_output_130_0_g117847;
				float2 temp_output_119_0_g117850 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_7_0_g117855 = 1.0;
				float temp_output_10_0_g117855 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117855 );
				float4 lerpResult131_g117850 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117850,temp_output_82_0_g117850, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, temp_output_119_0_g117850,temp_output_82_0_g117850, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117850 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117855 ) / temp_output_10_0_g117855 ) ));
				float4 temp_output_17_0_g117849 = lerpResult131_g117850;
				float4 temp_output_3_0_g117849 = TVE_LandParams;
				float4 ifLocalVar18_g117849 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117849 >= 0.5 )
				ifLocalVar18_g117849 = temp_output_17_0_g117849;
				else
				ifLocalVar18_g117849 = temp_output_3_0_g117849;
				float4 lerpResult22_g117849 = lerp( temp_output_3_0_g117849 , temp_output_17_0_g117849 , temp_output_19_0_g117849);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117849 = lerpResult22_g117849;
				#else
				float4 staticSwitch24_g117849 = ifLocalVar18_g117849;
				#endif
				half4 Land_Params375_g117810 = staticSwitch24_g117849;
				float4 In_LandParams204_g117810 = Land_Params375_g117810;
				half4 Wind_Params88_g117810 = TVE_WindParams;
				float4 In_WindParams204_g117810 = Wind_Params88_g117810;
				half4 Push_Params335_g117810 = TVE_PushParams;
				float4 In_PushParams204_g117810 = Push_Params335_g117810;
				Data204_g117810.Dummy = In_Dummy204_g117810;
				Data204_g117810.CoatParams = In_CoatParams204_g117810;
				Data204_g117810.PaintParams = In_PaintParams204_g117810;
				Data204_g117810.GlowParams = In_GlowParams204_g117810;
				Data204_g117810.AtmoParams = In_AtmoParams204_g117810;
				Data204_g117810.FadeParams = In_FadeParams204_g117810;
				Data204_g117810.FormParams= In_FormParams204_g117810;
				Data204_g117810.LandParams = In_LandParams204_g117810;
				Data204_g117810.WindParams = In_WindParams204_g117810;
				Data204_g117810.PushParams = In_PushParams204_g117810;
				TVEGlobalData Data15_g118150 = Data204_g117810;
				float Out_Dummy15_g118150 = 0;
				float4 Out_CoatParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118150 = float4( 0,0,0,0 );
				Out_Dummy15_g118150 = Data15_g118150.Dummy;
				Out_CoatParams15_g118150 = Data15_g118150.CoatParams;
				Out_PaintParams15_g118150 = Data15_g118150.PaintParams;
				Out_GlowParams15_g118150 = Data15_g118150.GlowParams;
				Out_AtmoParams15_g118150= Data15_g118150.AtmoParams;
				Out_FadeParams15_g118150= Data15_g118150.FadeParams;
				Out_FormParams15_g118150 = Data15_g118150.FormParams;
				Out_LandParams15_g118150 = Data15_g118150.LandParams;
				Out_WindParams15_g118150 = Data15_g118150.WindParams;
				Out_PushParams15_g118150 = Data15_g118150.PushParams;
				half4 Input_FormParams214_g118147 = Out_LandParams15_g118150;
				float temp_output_572_0_g118147 = (Input_FormParams214_g118147).z;
				float temp_output_595_0_g118147 = ( break592_g118147.y + temp_output_572_0_g118147 );
				float lerpResult604_g118147 = lerp( break592_g118147.y , temp_output_595_0_g118147 , ( _LandscapeHeightValue * TVE_IsEnabled ));
				float3 appendResult593_g118147 = (float3(break592_g118147.x , lerpResult604_g118147 , break592_g118147.z));
				#ifdef TVE_LANDSCAPE
				float3 staticSwitch575_g118147 = appendResult593_g118147;
				#else
				float3 staticSwitch575_g118147 = Input_PositionOS147_g118147;
				#endif
				half3 Final_PositionOS580_g118147 = staticSwitch575_g118147;
				float3 In_PositionOS16_g118149 = Final_PositionOS580_g118147;
				float3 In_PositionWS16_g118149 = Out_PositionWS15_g118148;
				float3 In_PositionWO16_g118149 = Out_PositionWO15_g118148;
				float3 In_PositionRawOS16_g118149 = Out_PositionRawOS15_g118148;
				float3 In_PositionAddOS16_g118149 = Out_PositionAddOS15_g118148;
				float3 In_PivotOS16_g118149 = Out_PivotOS15_g118148;
				float3 In_PivotWS16_g118149 = Out_PivotWS15_g118148;
				float3 temp_output_481_19_g118147 = Out_PivotWO15_g118148;
				float3 In_PivotWO16_g118149 = temp_output_481_19_g118147;
				float3 temp_output_481_20_g118147 = Out_NormalOS15_g118148;
				float3 In_NormalOS16_g118149 = temp_output_481_20_g118147;
				float3 In_NormalWS16_g118149 = Out_NormalWS15_g118148;
				float3 In_NormalRawOS16_g118149 = Out_NormalRawOS15_g118148;
				float3 In_NormalRawWS16_g118149 = Out_NormalRawWS15_g118148;
				float4 In_TangentOS16_g118149 = Out_TangentOS15_g118148;
				float3 In_ViewDirWS16_g118149 = Out_ViewDirWS15_g118148;
				float4 In_VertexData16_g118149 = Out_VertexData15_g118148;
				float4 In_MotionData16_g118149 = Out_MotionData15_g118148;
				float4 In_BoundsData16_g118149 = Out_BoundsData15_g118148;
				float4 In_RotationData16_g118149 = Out_RotationData15_g118148;
				Data16_g118149.Dummy = In_Dummy16_g118149;
				Data16_g118149.PositionOS = In_PositionOS16_g118149;
				Data16_g118149.PositionWS = In_PositionWS16_g118149;
				Data16_g118149.PositionWO = In_PositionWO16_g118149;
				Data16_g118149.PositionRawOS = In_PositionRawOS16_g118149;
				Data16_g118149.PositionAddOS = In_PositionAddOS16_g118149;
				Data16_g118149.PivotOS = In_PivotOS16_g118149;
				Data16_g118149.PivotWS = In_PivotWS16_g118149;
				Data16_g118149.PivotWO = In_PivotWO16_g118149;
				Data16_g118149.NormalOS = In_NormalOS16_g118149;
				Data16_g118149.NormalWS = In_NormalWS16_g118149;
				Data16_g118149.NormalRawOS = In_NormalRawOS16_g118149;
				Data16_g118149.NormalRawWS = In_NormalRawWS16_g118149;
				Data16_g118149.TangentOS = In_TangentOS16_g118149;
				Data16_g118149.ViewDirWS = In_ViewDirWS16_g118149;
				Data16_g118149.VertexData = In_VertexData16_g118149;
				Data16_g118149.MotionData = In_MotionData16_g118149;
				Data16_g118149.BoundsData = In_BoundsData16_g118149;
				Data16_g118149.RotationData = In_RotationData16_g118149;
				TVEModelData Data15_g118156 = Data16_g118149;
				float Out_Dummy15_g118156 = 0;
				float3 Out_PositionOS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionWS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118156 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotOS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118156 = float3( 0,0,0 );
				float3 Out_NormalOS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g118156 = float3( 0,0,0 );
				float4 Out_TangentOS15_g118156 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g118156 = float3( 0,0,0 );
				float4 Out_VertexData15_g118156 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g118156 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118156 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g118156 = float4( 0,0,0,0 );
				Out_Dummy15_g118156 = Data15_g118156.Dummy;
				Out_PositionOS15_g118156 = Data15_g118156.PositionOS;
				Out_PositionWS15_g118156 = Data15_g118156.PositionWS;
				Out_PositionWO15_g118156 = Data15_g118156.PositionWO;
				Out_PositionRawOS15_g118156 = Data15_g118156.PositionRawOS;
				Out_PositionAddOS15_g118156 = Data15_g118156.PositionAddOS;
				Out_PivotOS15_g118156 = Data15_g118156.PivotOS;
				Out_PivotWS15_g118156 = Data15_g118156.PivotWS;
				Out_PivotWO15_g118156 = Data15_g118156.PivotWO;
				Out_NormalOS15_g118156 = Data15_g118156.NormalOS;
				Out_NormalWS15_g118156 = Data15_g118156.NormalWS;
				Out_NormalRawOS15_g118156 = Data15_g118156.NormalRawOS;
				Out_NormalRawWS15_g118156 = Data15_g118156.NormalRawWS;
				Out_TangentOS15_g118156 = Data15_g118156.TangentOS;
				Out_ViewDirWS15_g118156 = Data15_g118156.ViewDirWS;
				Out_VertexData15_g118156 = Data15_g118156.VertexData;
				Out_MotionData15_g118156 = Data15_g118156.MotionData;
				Out_BoundsData15_g118156 = Data15_g118156.BoundsData;
				Out_RotationData15_g118156 = Data15_g118156.RotationData;
				float3 temp_output_31_0_g118154 = Out_PositionOS15_g118156;
				
				outputPackedVaryingsMeshToPS.ase_texcoord1.xyz = ase_worldNormal;
				float3 ase_worldTangent = TransformObjectToWorldDir(inputMesh.tangentOS.xyz);
				outputPackedVaryingsMeshToPS.ase_texcoord2.xyz = ase_worldTangent;
				float ase_vertexTangentSign = inputMesh.tangentOS.w * ( unity_WorldTransformParams.w >= 0.0 ? 1.0 : -1.0 );
				float3 ase_worldBitangent = cross( ase_worldNormal, ase_worldTangent ) * ase_vertexTangentSign;
				outputPackedVaryingsMeshToPS.ase_texcoord3.xyz = ase_worldBitangent;
				outputPackedVaryingsMeshToPS.ase_texcoord4.xyz = vertexToFrag73_g117794;
				
				outputPackedVaryingsMeshToPS.ase_color = inputMesh.ase_color;
				outputPackedVaryingsMeshToPS.ase_texcoord5 = inputMesh.ase_texcoord;
				
				//setting value to unused interpolator channels and avoid initialization warnings
				outputPackedVaryingsMeshToPS.ase_texcoord1.w = 0;
				outputPackedVaryingsMeshToPS.ase_texcoord2.w = 0;
				outputPackedVaryingsMeshToPS.ase_texcoord3.w = 0;
				outputPackedVaryingsMeshToPS.ase_texcoord4.w = 0;

				#ifdef ASE_ABSOLUTE_VERTEX_POS
				float3 defaultVertexValue = inputMesh.positionOS.xyz;
				#else
				float3 defaultVertexValue = float3( 0, 0, 0 );
				#endif
				float3 vertexValue = temp_output_31_0_g118154;

				#ifdef ASE_ABSOLUTE_VERTEX_POS
				inputMesh.positionOS.xyz = vertexValue;
				#else
				inputMesh.positionOS.xyz += vertexValue;
				#endif

				inputMesh.normalOS = Out_NormalOS15_g118156;
				inputMesh.tangentOS = Out_TangentOS15_g118156;

				float3 positionRWS = TransformObjectToWorld(inputMesh.positionOS);
				outputPackedVaryingsMeshToPS.positionCS = TransformWorldToHClip(positionRWS);
				outputPackedVaryingsMeshToPS.positionRWS.xyz = positionRWS;
				return outputPackedVaryingsMeshToPS;
			}

			#if defined(ASE_TESSELLATION)
			struct VertexControl
			{
				float3 positionOS : INTERNALTESSPOS;
				float3 normalOS : NORMAL;
				float4 tangentOS : TANGENT;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;

				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct TessellationFactors
			{
				float edge[3] : SV_TessFactor;
				float inside : SV_InsideTessFactor;
			};

			VertexControl Vert ( AttributesMesh v )
			{
				VertexControl o;
				UNITY_SETUP_INSTANCE_ID(v);
				UNITY_TRANSFER_INSTANCE_ID(v, o);
				o.positionOS = v.positionOS;
				o.normalOS = v.normalOS;
				o.tangentOS = v.tangentOS;
				o.ase_color = v.ase_color;
				o.ase_texcoord = v.ase_texcoord;
				return o;
			}

			TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
			{
				TessellationFactors o;
				float4 tf = 1;
				float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
				float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
				#if (SHADEROPTIONS_CAMERA_RELATIVE_RENDERING != 0)
				float3 cameraPos = 0;
				#else
				float3 cameraPos = _WorldSpaceCameraPos;
				#endif
				#if defined(ASE_FIXED_TESSELLATION)
				tf = FixedTess( tessValue );
				#elif defined(ASE_DISTANCE_TESSELLATION)
				tf = DistanceBasedTess(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), tessValue, tessMin, tessMax, GetObjectToWorldMatrix(), cameraPos );
				#elif defined(ASE_LENGTH_TESSELLATION)
				tf = EdgeLengthBasedTess(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), edgeLength, GetObjectToWorldMatrix(), cameraPos, _ScreenParams );
				#elif defined(ASE_LENGTH_CULL_TESSELLATION)
				tf = EdgeLengthBasedTessCull(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), edgeLength, tessMaxDisp, GetObjectToWorldMatrix(), cameraPos, _ScreenParams, _FrustumPlanes );
				#endif
				o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
				return o;
			}

			[domain("tri")]
			[partitioning("fractional_odd")]
			[outputtopology("triangle_cw")]
			[patchconstantfunc("TessellationFunction")]
			[outputcontrolpoints(3)]
			VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
			{
			   return patch[id];
			}

			[domain("tri")]
			PackedVaryingsMeshToPS DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
			{
				AttributesMesh o = (AttributesMesh) 0;
				o.positionOS = patch[0].positionOS * bary.x + patch[1].positionOS * bary.y + patch[2].positionOS * bary.z;
				o.normalOS = patch[0].normalOS * bary.x + patch[1].normalOS * bary.y + patch[2].normalOS * bary.z;
				o.tangentOS = patch[0].tangentOS * bary.x + patch[1].tangentOS * bary.y + patch[2].tangentOS * bary.z;
				o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
				o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
				#if defined(ASE_PHONG_TESSELLATION)
				float3 pp[3];
				for (int i = 0; i < 3; ++i)
					pp[i] = o.positionOS.xyz - patch[i].normalOS * (dot(o.positionOS.xyz, patch[i].normalOS) - dot(patch[i].positionOS.xyz, patch[i].normalOS));
				float phongStrength = _TessPhongStrength;
				o.positionOS.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.positionOS.xyz;
				#endif
				UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
				return VertexFunction(o);
			}
			#else
			PackedVaryingsMeshToPS Vert ( AttributesMesh v )
			{
				return VertexFunction( v );
			}
			#endif

			#if defined(WRITE_NORMAL_BUFFER) && defined(WRITE_MSAA_DEPTH)
			#define SV_TARGET_DECAL SV_Target2
			#elif defined(WRITE_NORMAL_BUFFER) || defined(WRITE_MSAA_DEPTH)
			#define SV_TARGET_DECAL SV_Target1
			#else
			#define SV_TARGET_DECAL SV_Target0
			#endif

			void Frag( PackedVaryingsMeshToPS packedInput
						#if defined(SCENESELECTIONPASS) || defined(SCENEPICKINGPASS)
						, out float4 outColor : SV_Target0
						#else
							#ifdef WRITE_MSAA_DEPTH
							, out float4 depthColor : SV_Target0
								#ifdef WRITE_NORMAL_BUFFER
								, out float4 outNormalBuffer : SV_Target1
								#endif
							#else
								#ifdef WRITE_NORMAL_BUFFER
								, out float4 outNormalBuffer : SV_Target0
								#endif
							#endif

							#if (defined(WRITE_DECAL_BUFFER) && !defined(_DISABLE_DECALS)) || defined(WRITE_RENDERING_LAYER)
							, out float4 outDecalBuffer : SV_TARGET_DECAL
							#endif
						#endif

						#if defined(_DEPTHOFFSET_ON) && !defined(SCENEPICKINGPASS)
						, out float outputDepth : DEPTH_OFFSET_SEMANTIC
						#endif
						
					)
			{
			UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(packedInput);
			UNITY_SETUP_INSTANCE_ID(packedInput);

				float3 positionRWS = packedInput.positionRWS.xyz;

				FragInputs input;
				ZERO_INITIALIZE(FragInputs, input);

				input.tangentToWorld = k_identity3x3;
				input.positionSS = packedInput.positionCS;

				input.positionRWS = positionRWS;

				#if _DOUBLESIDED_ON && SHADER_STAGE_FRAGMENT
				input.isFrontFace = IS_FRONT_VFACE( packedInput.cullFace, true, false);
				#elif SHADER_STAGE_FRAGMENT
				#if defined(ASE_NEED_CULLFACE)
				input.isFrontFace = IS_FRONT_VFACE( packedInput.cullFace, true, false );
				#endif
				#endif
				half isFrontFace = input.isFrontFace;

				PositionInputs posInput = GetPositionInput(input.positionSS.xy, _ScreenSize.zw, input.positionSS.z, input.positionSS.w, input.positionRWS);

				float3 V = GetWorldSpaceNormalizeViewDir(input.positionRWS);

				AlphaSurfaceDescription surfaceDescription = (AlphaSurfaceDescription)0;
				float localCustomAlphaClip19_g118160 = ( 0.0 );
				float localBreakData4_g118158 = ( 0.0 );
				float localCompData3_g118135 = ( 0.0 );
				TVEVisualData Data3_g118135 = (TVEVisualData)0;
				half Dummy594_g118134 = ( _CutoutCategory + _CutoutEnd + _CutoutElementMode + _CutoutBakeInfo );
				float In_Dummy3_g118135 = Dummy594_g118134;
				float localBreakData4_g118145 = ( 0.0 );
				float localCompData3_g118129 = ( 0.0 );
				TVEVisualData Data3_g118129 = (TVEVisualData)0;
				half Dummy145_g118119 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveElementMode + _EmissiveFlagMode );
				float In_Dummy3_g118129 = Dummy145_g118119;
				float localBreakData4_g118128 = ( 0.0 );
				float localCompData3_g118092 = ( 0.0 );
				TVEVisualData Data3_g118092 = (TVEVisualData)0;
				half Dummy594_g118090 = ( _WetnessCategory + _WetnessEnd + _WetnessElementMode + _WetnessBakeInfo );
				float In_Dummy3_g118092 = Dummy594_g118090;
				float localBreakData4_g118091 = ( 0.0 );
				float localCompData3_g118057 = ( 0.0 );
				TVEVisualData Data3_g118057 = (TVEVisualData)0;
				half Dummy594_g118054 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayElementMode + _OverlayBakeInfo );
				float In_Dummy3_g118057 = Dummy594_g118054;
				float localBreakData4_g118055 = ( 0.0 );
				float localCompData3_g118034 = ( 0.0 );
				TVEVisualData Data3_g118034 = (TVEVisualData)0;
				half Dummy205_g118031 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessElementMode + _DrynessBakeInfo );
				float In_Dummy3_g118034 = Dummy205_g118031;
				float localBreakData4_g118033 = ( 0.0 );
				float localCompData3_g118028 = ( 0.0 );
				TVEVisualData Data3_g118028 = (TVEVisualData)0;
				half Dummy205_g118007 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeInfo );
				float In_Dummy3_g118028 = Dummy205_g118007;
				float localBreakData4_g118029 = ( 0.0 );
				float localCompData3_g117894 = ( 0.0 );
				TVEVisualData Data3_g117894 = (TVEVisualData)0;
				half Dummy9163_g117893 = ( _CategoryTerrain + _EndTerrain );
				float In_Dummy3_g117894 = Dummy9163_g117893;
				float localHeightBasedBlending7362_g117895 = ( 0.0 );
				float3 ase_worldPos = GetAbsolutePositionWS( positionRWS );
				float4 appendResult9125_g117895 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
				float4 temp_output_35_0_g118003 = appendResult9125_g117895;
				float2 InputScale48_g118003 = (temp_output_35_0_g118003).zw;
				half2 FinalScale53_g118003 = ( 1.0 / InputScale48_g118003 );
				float2 InputPosition52_g118003 = (temp_output_35_0_g118003).xy;
				half2 FinalPosition58_g118003 = -( FinalScale53_g118003 * InputPosition52_g118003 );
				float2 temp_output_65_0_g118003 = ( ( (ase_worldPos).xz * FinalScale53_g118003 ) + FinalPosition58_g118003 );
				float4 temp_output_70_0_g118003 = _TerrainControlTex1_TexelSize;
				float2 InputTexelSize68_g118003 = (temp_output_70_0_g118003).zw;
				float2 temp_cast_0 = (1.0).xx;
				float2 InputTexelRecip69_g118003 = (temp_output_70_0_g118003).xy;
				float2 Terrain_Control_UV7873_g117895 = ( ( ( temp_output_65_0_g118003 / ( 1.0 / ( InputTexelSize68_g118003 - temp_cast_0 ) ) ) + 0.5 ) * InputTexelRecip69_g118003 );
				half4 Terrain_Control_047365_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_047362_g117895 = Terrain_Control_047365_g117895;
				half4 Terrain_Control_087366_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_087362_g117895 = Terrain_Control_087366_g117895;
				half4 Terrain_Control_127712_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_127362_g117895 = Terrain_Control_127712_g117895;
				half4 Terrain_Control_167711_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_167362_g117895 = Terrain_Control_167711_g117895;
				TEXTURE2D(Texture238_g117940) = _TerrainShaderTex1;
				float localFilterTexture30_g118001 = ( 0.0 );
				SamplerState SamplerDefault30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g118001 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g118001 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g118001 = SamplerDefault30_g118001;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g118001 = SamplerDefault30_g118001;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g118001 = SamplerPoint30_g118001;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g118001 = SamplerLow30_g118001;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g118001 = SamplerMedium30_g118001;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g118001 = SamplerHigh30_g118001;
				#endif
				SamplerState Sampler238_g117940 = SS30_g118001;
				half4 Input_Terrain_Coords_016785_g117895 = _TerrainCoord1;
				float4 temp_output_37_0_g117940 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117940 = temp_output_37_0_g117940;
				half3 Input_Position9197_g117895 = ase_worldPos;
				float3 temp_output_279_0_g117940 = Input_Position9197_g117895;
				half3 WorldPosition238_g117940 = temp_output_279_0_g117940;
				half4 localSamplePlanar2D238_g117940 = SamplePlanar2D( Texture238_g117940 , Sampler238_g117940 , Coords238_g117940 , WorldPosition238_g117940 );
				TEXTURE2D(Texture246_g117940) = _TerrainShaderTex1;
				SamplerState Sampler246_g117940 = SS30_g118001;
				half4 Coords246_g117940 = temp_output_37_0_g117940;
				half3 WorldPosition246_g117940 = temp_output_279_0_g117940;
				float3 ase_worldNormal = packedInput.ase_texcoord1.xyz;
				half3 Input_Normal9199_g117895 = ase_worldNormal;
				float3 temp_output_280_0_g117940 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117940 = temp_output_280_0_g117940;
				half4 localSamplePlanar3D246_g117940 = SamplePlanar3D( Texture246_g117940 , Sampler246_g117940 , Coords246_g117940 , WorldPosition246_g117940 , WorldNormal246_g117940 );
				TEXTURE2D(Texture234_g117940) = _TerrainShaderTex1;
				SamplerState Sampler234_g117940 = SS30_g118001;
				float4 Coords234_g117940 = temp_output_37_0_g117940;
				float3 WorldPosition234_g117940 = temp_output_279_0_g117940;
				float4 localSampleStochastic2D234_g117940 = SampleStochastic2D( Texture234_g117940 , Sampler234_g117940 , Coords234_g117940 , WorldPosition234_g117940 );
				TEXTURE2D(Texture263_g117940) = _TerrainShaderTex1;
				SamplerState Sampler263_g117940 = SS30_g118001;
				half4 Coords263_g117940 = temp_output_37_0_g117940;
				half3 WorldPosition263_g117940 = temp_output_279_0_g117940;
				half3 WorldNormal263_g117940 = temp_output_280_0_g117940;
				half4 localSampleStochastic3D263_g117940 = SampleStochastic3D( Texture263_g117940 , Sampler263_g117940 , Coords263_g117940 , WorldPosition263_g117940 , WorldNormal263_g117940 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8639_g117895 = localSamplePlanar2D238_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8639_g117895 = localSamplePlanar3D246_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8639_g117895 = localSampleStochastic2D234_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8639_g117895 = localSampleStochastic3D263_g117940;
				#else
				float4 staticSwitch8639_g117895 = localSamplePlanar2D238_g117940;
				#endif
				float4 temp_output_7_0_g117897 = _TerrainShaderMin1;
				float4 temp_output_10_0_g117897 = ( _TerrainShaderMax1 - temp_output_7_0_g117897 );
				float4 temp_output_6970_0_g117895 = saturate( ( ( staticSwitch8639_g117895 - temp_output_7_0_g117897 ) / ( temp_output_10_0_g117897 + 0.0001 ) ) );
				half4 Masks_015_g117901 = temp_output_6970_0_g117895;
				TEXTURE2D(Texture238_g117944) = _TerrainShaderTex2;
				SamplerState Sampler238_g117944 = SS30_g118001;
				half4 Input_Terrain_Coords_026787_g117895 = _TerrainCoord2;
				float4 temp_output_37_0_g117944 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117944 = temp_output_37_0_g117944;
				float3 temp_output_279_0_g117944 = Input_Position9197_g117895;
				half3 WorldPosition238_g117944 = temp_output_279_0_g117944;
				half4 localSamplePlanar2D238_g117944 = SamplePlanar2D( Texture238_g117944 , Sampler238_g117944 , Coords238_g117944 , WorldPosition238_g117944 );
				TEXTURE2D(Texture246_g117944) = _TerrainShaderTex2;
				SamplerState Sampler246_g117944 = SS30_g118001;
				half4 Coords246_g117944 = temp_output_37_0_g117944;
				half3 WorldPosition246_g117944 = temp_output_279_0_g117944;
				float3 temp_output_280_0_g117944 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117944 = temp_output_280_0_g117944;
				half4 localSamplePlanar3D246_g117944 = SamplePlanar3D( Texture246_g117944 , Sampler246_g117944 , Coords246_g117944 , WorldPosition246_g117944 , WorldNormal246_g117944 );
				TEXTURE2D(Texture234_g117944) = _TerrainShaderTex2;
				SamplerState Sampler234_g117944 = SS30_g118001;
				float4 Coords234_g117944 = temp_output_37_0_g117944;
				float3 WorldPosition234_g117944 = temp_output_279_0_g117944;
				float4 localSampleStochastic2D234_g117944 = SampleStochastic2D( Texture234_g117944 , Sampler234_g117944 , Coords234_g117944 , WorldPosition234_g117944 );
				TEXTURE2D(Texture263_g117944) = _TerrainShaderTex2;
				SamplerState Sampler263_g117944 = SS30_g118001;
				half4 Coords263_g117944 = temp_output_37_0_g117944;
				half3 WorldPosition263_g117944 = temp_output_279_0_g117944;
				half3 WorldNormal263_g117944 = temp_output_280_0_g117944;
				half4 localSampleStochastic3D263_g117944 = SampleStochastic3D( Texture263_g117944 , Sampler263_g117944 , Coords263_g117944 , WorldPosition263_g117944 , WorldNormal263_g117944 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8640_g117895 = localSamplePlanar2D238_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8640_g117895 = localSamplePlanar3D246_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8640_g117895 = localSampleStochastic2D234_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8640_g117895 = localSampleStochastic3D263_g117944;
				#else
				float4 staticSwitch8640_g117895 = localSamplePlanar2D238_g117944;
				#endif
				float4 temp_output_7_0_g117907 = _TerrainShaderMin2;
				float4 temp_output_10_0_g117907 = ( _TerrainShaderMax2 - temp_output_7_0_g117907 );
				float4 temp_output_6977_0_g117895 = saturate( ( ( staticSwitch8640_g117895 - temp_output_7_0_g117907 ) / ( temp_output_10_0_g117907 + 0.0001 ) ) );
				half4 Masks_0210_g117901 = temp_output_6977_0_g117895;
				TEXTURE2D(Texture238_g117949) = _TerrainShaderTex3;
				SamplerState Sampler238_g117949 = SS30_g118001;
				half4 Input_Terrain_Coords_036789_g117895 = _TerrainCoord3;
				float4 temp_output_37_0_g117949 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117949 = temp_output_37_0_g117949;
				float3 temp_output_279_0_g117949 = Input_Position9197_g117895;
				half3 WorldPosition238_g117949 = temp_output_279_0_g117949;
				half4 localSamplePlanar2D238_g117949 = SamplePlanar2D( Texture238_g117949 , Sampler238_g117949 , Coords238_g117949 , WorldPosition238_g117949 );
				TEXTURE2D(Texture246_g117949) = _TerrainShaderTex3;
				SamplerState Sampler246_g117949 = SS30_g118001;
				half4 Coords246_g117949 = temp_output_37_0_g117949;
				half3 WorldPosition246_g117949 = temp_output_279_0_g117949;
				float3 temp_output_280_0_g117949 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117949 = temp_output_280_0_g117949;
				half4 localSamplePlanar3D246_g117949 = SamplePlanar3D( Texture246_g117949 , Sampler246_g117949 , Coords246_g117949 , WorldPosition246_g117949 , WorldNormal246_g117949 );
				TEXTURE2D(Texture234_g117949) = _TerrainShaderTex3;
				SamplerState Sampler234_g117949 = SS30_g118001;
				float4 Coords234_g117949 = temp_output_37_0_g117949;
				float3 WorldPosition234_g117949 = temp_output_279_0_g117949;
				float4 localSampleStochastic2D234_g117949 = SampleStochastic2D( Texture234_g117949 , Sampler234_g117949 , Coords234_g117949 , WorldPosition234_g117949 );
				TEXTURE2D(Texture263_g117949) = _TerrainShaderTex3;
				SamplerState Sampler263_g117949 = SS30_g118001;
				half4 Coords263_g117949 = temp_output_37_0_g117949;
				half3 WorldPosition263_g117949 = temp_output_279_0_g117949;
				half3 WorldNormal263_g117949 = temp_output_280_0_g117949;
				half4 localSampleStochastic3D263_g117949 = SampleStochastic3D( Texture263_g117949 , Sampler263_g117949 , Coords263_g117949 , WorldPosition263_g117949 , WorldNormal263_g117949 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8641_g117895 = localSamplePlanar2D238_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8641_g117895 = localSamplePlanar3D246_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8641_g117895 = localSampleStochastic2D234_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8641_g117895 = localSampleStochastic3D263_g117949;
				#else
				float4 staticSwitch8641_g117895 = localSamplePlanar2D238_g117949;
				#endif
				float4 temp_output_7_0_g117908 = _TerrainShaderMin3;
				float4 temp_output_10_0_g117908 = ( _TerrainShaderMax3 - temp_output_7_0_g117908 );
				float4 temp_output_6978_0_g117895 = saturate( ( ( staticSwitch8641_g117895 - temp_output_7_0_g117908 ) / ( temp_output_10_0_g117908 + 0.0001 ) ) );
				half4 Masks_0312_g117901 = temp_output_6978_0_g117895;
				TEXTURE2D(Texture238_g117950) = _TerrainShaderTex4;
				SamplerState Sampler238_g117950 = SS30_g118001;
				half4 Input_Terrain_Coords_046791_g117895 = _TerrainCoord4;
				float4 temp_output_37_0_g117950 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117950 = temp_output_37_0_g117950;
				float3 temp_output_279_0_g117950 = Input_Position9197_g117895;
				half3 WorldPosition238_g117950 = temp_output_279_0_g117950;
				half4 localSamplePlanar2D238_g117950 = SamplePlanar2D( Texture238_g117950 , Sampler238_g117950 , Coords238_g117950 , WorldPosition238_g117950 );
				TEXTURE2D(Texture246_g117950) = _TerrainShaderTex4;
				SamplerState Sampler246_g117950 = SS30_g118001;
				half4 Coords246_g117950 = temp_output_37_0_g117950;
				half3 WorldPosition246_g117950 = temp_output_279_0_g117950;
				float3 temp_output_280_0_g117950 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117950 = temp_output_280_0_g117950;
				half4 localSamplePlanar3D246_g117950 = SamplePlanar3D( Texture246_g117950 , Sampler246_g117950 , Coords246_g117950 , WorldPosition246_g117950 , WorldNormal246_g117950 );
				TEXTURE2D(Texture234_g117950) = _TerrainShaderTex4;
				SamplerState Sampler234_g117950 = SS30_g118001;
				float4 Coords234_g117950 = temp_output_37_0_g117950;
				float3 WorldPosition234_g117950 = temp_output_279_0_g117950;
				float4 localSampleStochastic2D234_g117950 = SampleStochastic2D( Texture234_g117950 , Sampler234_g117950 , Coords234_g117950 , WorldPosition234_g117950 );
				TEXTURE2D(Texture263_g117950) = _TerrainShaderTex4;
				SamplerState Sampler263_g117950 = SS30_g118001;
				half4 Coords263_g117950 = temp_output_37_0_g117950;
				half3 WorldPosition263_g117950 = temp_output_279_0_g117950;
				half3 WorldNormal263_g117950 = temp_output_280_0_g117950;
				half4 localSampleStochastic3D263_g117950 = SampleStochastic3D( Texture263_g117950 , Sampler263_g117950 , Coords263_g117950 , WorldPosition263_g117950 , WorldNormal263_g117950 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8642_g117895 = localSamplePlanar2D238_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8642_g117895 = localSamplePlanar3D246_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8642_g117895 = localSampleStochastic2D234_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8642_g117895 = localSampleStochastic3D263_g117950;
				#else
				float4 staticSwitch8642_g117895 = localSamplePlanar2D238_g117950;
				#endif
				float4 temp_output_7_0_g117909 = _TerrainShaderMin4;
				float4 temp_output_10_0_g117909 = ( _TerrainShaderMax4 - temp_output_7_0_g117909 );
				float4 temp_output_6983_0_g117895 = saturate( ( ( staticSwitch8642_g117895 - temp_output_7_0_g117909 ) / ( temp_output_10_0_g117909 + 0.0001 ) ) );
				half4 Masks_0414_g117901 = temp_output_6983_0_g117895;
				float4 appendResult29_g117901 = (float4((Masks_015_g117901).z , (Masks_0210_g117901).z , (Masks_0312_g117901).z , (Masks_0414_g117901).z));
				half4 Control31_g117901 = Terrain_Control_047365_g117895;
				half4 Terrain_Height_047210_g117895 = ( appendResult29_g117901 * Control31_g117901 );
				float4 heights_047362_g117895 = Terrain_Height_047210_g117895;
				TEXTURE2D(Texture238_g117953) = _TerrainShaderTex5;
				SamplerState Sampler238_g117953 = SS30_g118001;
				half4 Input_Terrain_Coords_058750_g117895 = _TerrainCoord5;
				float4 temp_output_37_0_g117953 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117953 = temp_output_37_0_g117953;
				float3 temp_output_279_0_g117953 = Input_Position9197_g117895;
				half3 WorldPosition238_g117953 = temp_output_279_0_g117953;
				half4 localSamplePlanar2D238_g117953 = SamplePlanar2D( Texture238_g117953 , Sampler238_g117953 , Coords238_g117953 , WorldPosition238_g117953 );
				TEXTURE2D(Texture246_g117953) = _TerrainShaderTex5;
				SamplerState Sampler246_g117953 = SS30_g118001;
				half4 Coords246_g117953 = temp_output_37_0_g117953;
				half3 WorldPosition246_g117953 = temp_output_279_0_g117953;
				float3 temp_output_280_0_g117953 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117953 = temp_output_280_0_g117953;
				half4 localSamplePlanar3D246_g117953 = SamplePlanar3D( Texture246_g117953 , Sampler246_g117953 , Coords246_g117953 , WorldPosition246_g117953 , WorldNormal246_g117953 );
				TEXTURE2D(Texture234_g117953) = _TerrainShaderTex5;
				SamplerState Sampler234_g117953 = SS30_g118001;
				float4 Coords234_g117953 = temp_output_37_0_g117953;
				float3 WorldPosition234_g117953 = temp_output_279_0_g117953;
				float4 localSampleStochastic2D234_g117953 = SampleStochastic2D( Texture234_g117953 , Sampler234_g117953 , Coords234_g117953 , WorldPosition234_g117953 );
				TEXTURE2D(Texture263_g117953) = _TerrainShaderTex5;
				SamplerState Sampler263_g117953 = SS30_g118001;
				half4 Coords263_g117953 = temp_output_37_0_g117953;
				half3 WorldPosition263_g117953 = temp_output_279_0_g117953;
				half3 WorldNormal263_g117953 = temp_output_280_0_g117953;
				half4 localSampleStochastic3D263_g117953 = SampleStochastic3D( Texture263_g117953 , Sampler263_g117953 , Coords263_g117953 , WorldPosition263_g117953 , WorldNormal263_g117953 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8710_g117895 = localSamplePlanar2D238_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8710_g117895 = localSamplePlanar3D246_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8710_g117895 = localSampleStochastic2D234_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8710_g117895 = localSampleStochastic3D263_g117953;
				#else
				float4 staticSwitch8710_g117895 = localSamplePlanar2D238_g117953;
				#endif
				float4 temp_output_7_0_g117912 = _TerrainShaderMin5;
				float4 temp_output_10_0_g117912 = ( _TerrainShaderMax5 - temp_output_7_0_g117912 );
				float4 temp_output_8714_0_g117895 = saturate( ( ( staticSwitch8710_g117895 - temp_output_7_0_g117912 ) / ( temp_output_10_0_g117912 + 0.0001 ) ) );
				half4 Masks_015_g117913 = temp_output_8714_0_g117895;
				TEXTURE2D(Texture238_g117984) = _TerrainShaderTex6;
				SamplerState Sampler238_g117984 = SS30_g118001;
				half4 Input_Terrain_Coords_068751_g117895 = _TerrainCoord6;
				float4 temp_output_37_0_g117984 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117984 = temp_output_37_0_g117984;
				float3 temp_output_279_0_g117984 = Input_Position9197_g117895;
				half3 WorldPosition238_g117984 = temp_output_279_0_g117984;
				half4 localSamplePlanar2D238_g117984 = SamplePlanar2D( Texture238_g117984 , Sampler238_g117984 , Coords238_g117984 , WorldPosition238_g117984 );
				TEXTURE2D(Texture246_g117984) = _TerrainShaderTex6;
				SamplerState Sampler246_g117984 = SS30_g118001;
				half4 Coords246_g117984 = temp_output_37_0_g117984;
				half3 WorldPosition246_g117984 = temp_output_279_0_g117984;
				float3 temp_output_280_0_g117984 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117984 = temp_output_280_0_g117984;
				half4 localSamplePlanar3D246_g117984 = SamplePlanar3D( Texture246_g117984 , Sampler246_g117984 , Coords246_g117984 , WorldPosition246_g117984 , WorldNormal246_g117984 );
				TEXTURE2D(Texture234_g117984) = _TerrainShaderTex6;
				SamplerState Sampler234_g117984 = SS30_g118001;
				float4 Coords234_g117984 = temp_output_37_0_g117984;
				float3 WorldPosition234_g117984 = temp_output_279_0_g117984;
				float4 localSampleStochastic2D234_g117984 = SampleStochastic2D( Texture234_g117984 , Sampler234_g117984 , Coords234_g117984 , WorldPosition234_g117984 );
				TEXTURE2D(Texture263_g117984) = _TerrainShaderTex6;
				SamplerState Sampler263_g117984 = SS30_g118001;
				half4 Coords263_g117984 = temp_output_37_0_g117984;
				half3 WorldPosition263_g117984 = temp_output_279_0_g117984;
				half3 WorldNormal263_g117984 = temp_output_280_0_g117984;
				half4 localSampleStochastic3D263_g117984 = SampleStochastic3D( Texture263_g117984 , Sampler263_g117984 , Coords263_g117984 , WorldPosition263_g117984 , WorldNormal263_g117984 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8711_g117895 = localSamplePlanar2D238_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8711_g117895 = localSamplePlanar3D246_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8711_g117895 = localSampleStochastic2D234_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8711_g117895 = localSampleStochastic3D263_g117984;
				#else
				float4 staticSwitch8711_g117895 = localSamplePlanar2D238_g117984;
				#endif
				float4 temp_output_7_0_g117937 = _TerrainShaderMin6;
				float4 temp_output_10_0_g117937 = ( _TerrainShaderMax6 - temp_output_7_0_g117937 );
				float4 temp_output_8721_0_g117895 = saturate( ( ( staticSwitch8711_g117895 - temp_output_7_0_g117937 ) / ( temp_output_10_0_g117937 + 0.0001 ) ) );
				half4 Masks_0210_g117913 = temp_output_8721_0_g117895;
				TEXTURE2D(Texture238_g117985) = _TerrainShaderTex7;
				SamplerState Sampler238_g117985 = SS30_g118001;
				half4 Input_Terrain_Coords_078752_g117895 = _TerrainCoord7;
				float4 temp_output_37_0_g117985 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117985 = temp_output_37_0_g117985;
				float3 temp_output_279_0_g117985 = Input_Position9197_g117895;
				half3 WorldPosition238_g117985 = temp_output_279_0_g117985;
				half4 localSamplePlanar2D238_g117985 = SamplePlanar2D( Texture238_g117985 , Sampler238_g117985 , Coords238_g117985 , WorldPosition238_g117985 );
				TEXTURE2D(Texture246_g117985) = _TerrainShaderTex7;
				SamplerState Sampler246_g117985 = SS30_g118001;
				half4 Coords246_g117985 = temp_output_37_0_g117985;
				half3 WorldPosition246_g117985 = temp_output_279_0_g117985;
				float3 temp_output_280_0_g117985 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117985 = temp_output_280_0_g117985;
				half4 localSamplePlanar3D246_g117985 = SamplePlanar3D( Texture246_g117985 , Sampler246_g117985 , Coords246_g117985 , WorldPosition246_g117985 , WorldNormal246_g117985 );
				TEXTURE2D(Texture234_g117985) = _TerrainShaderTex7;
				SamplerState Sampler234_g117985 = SS30_g118001;
				float4 Coords234_g117985 = temp_output_37_0_g117985;
				float3 WorldPosition234_g117985 = temp_output_279_0_g117985;
				float4 localSampleStochastic2D234_g117985 = SampleStochastic2D( Texture234_g117985 , Sampler234_g117985 , Coords234_g117985 , WorldPosition234_g117985 );
				TEXTURE2D(Texture263_g117985) = _TerrainShaderTex7;
				SamplerState Sampler263_g117985 = SS30_g118001;
				half4 Coords263_g117985 = temp_output_37_0_g117985;
				half3 WorldPosition263_g117985 = temp_output_279_0_g117985;
				half3 WorldNormal263_g117985 = temp_output_280_0_g117985;
				half4 localSampleStochastic3D263_g117985 = SampleStochastic3D( Texture263_g117985 , Sampler263_g117985 , Coords263_g117985 , WorldPosition263_g117985 , WorldNormal263_g117985 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8712_g117895 = localSamplePlanar2D238_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8712_g117895 = localSamplePlanar3D246_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8712_g117895 = localSampleStochastic2D234_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8712_g117895 = localSampleStochastic3D263_g117985;
				#else
				float4 staticSwitch8712_g117895 = localSamplePlanar2D238_g117985;
				#endif
				float4 temp_output_7_0_g117938 = _TerrainShaderMin7;
				float4 temp_output_10_0_g117938 = ( _TerrainShaderMax7 - temp_output_7_0_g117938 );
				float4 temp_output_8724_0_g117895 = saturate( ( ( staticSwitch8712_g117895 - temp_output_7_0_g117938 ) / ( temp_output_10_0_g117938 + 0.0001 ) ) );
				half4 Masks_0312_g117913 = temp_output_8724_0_g117895;
				TEXTURE2D(Texture238_g117986) = _TerrainShaderTex8;
				SamplerState Sampler238_g117986 = SS30_g118001;
				half4 Input_Terrain_Coords_088749_g117895 = _TerrainCoord8;
				float4 temp_output_37_0_g117986 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117986 = temp_output_37_0_g117986;
				float3 temp_output_279_0_g117986 = Input_Position9197_g117895;
				half3 WorldPosition238_g117986 = temp_output_279_0_g117986;
				half4 localSamplePlanar2D238_g117986 = SamplePlanar2D( Texture238_g117986 , Sampler238_g117986 , Coords238_g117986 , WorldPosition238_g117986 );
				TEXTURE2D(Texture246_g117986) = _TerrainShaderTex8;
				SamplerState Sampler246_g117986 = SS30_g118001;
				half4 Coords246_g117986 = temp_output_37_0_g117986;
				half3 WorldPosition246_g117986 = temp_output_279_0_g117986;
				float3 temp_output_280_0_g117986 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117986 = temp_output_280_0_g117986;
				half4 localSamplePlanar3D246_g117986 = SamplePlanar3D( Texture246_g117986 , Sampler246_g117986 , Coords246_g117986 , WorldPosition246_g117986 , WorldNormal246_g117986 );
				TEXTURE2D(Texture234_g117986) = _TerrainShaderTex8;
				SamplerState Sampler234_g117986 = SS30_g118001;
				float4 Coords234_g117986 = temp_output_37_0_g117986;
				float3 WorldPosition234_g117986 = temp_output_279_0_g117986;
				float4 localSampleStochastic2D234_g117986 = SampleStochastic2D( Texture234_g117986 , Sampler234_g117986 , Coords234_g117986 , WorldPosition234_g117986 );
				TEXTURE2D(Texture263_g117986) = _TerrainShaderTex8;
				SamplerState Sampler263_g117986 = SS30_g118001;
				half4 Coords263_g117986 = temp_output_37_0_g117986;
				half3 WorldPosition263_g117986 = temp_output_279_0_g117986;
				half3 WorldNormal263_g117986 = temp_output_280_0_g117986;
				half4 localSampleStochastic3D263_g117986 = SampleStochastic3D( Texture263_g117986 , Sampler263_g117986 , Coords263_g117986 , WorldPosition263_g117986 , WorldNormal263_g117986 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8713_g117895 = localSamplePlanar2D238_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8713_g117895 = localSamplePlanar3D246_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8713_g117895 = localSampleStochastic2D234_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8713_g117895 = localSampleStochastic3D263_g117986;
				#else
				float4 staticSwitch8713_g117895 = localSamplePlanar2D238_g117986;
				#endif
				float4 temp_output_7_0_g117939 = _TerrainShaderMin8;
				float4 temp_output_10_0_g117939 = ( _TerrainShaderMax8 - temp_output_7_0_g117939 );
				float4 temp_output_8727_0_g117895 = saturate( ( ( staticSwitch8713_g117895 - temp_output_7_0_g117939 ) / ( temp_output_10_0_g117939 + 0.0001 ) ) );
				half4 Masks_0414_g117913 = temp_output_8727_0_g117895;
				float4 appendResult29_g117913 = (float4((Masks_015_g117913).z , (Masks_0210_g117913).z , (Masks_0312_g117913).z , (Masks_0414_g117913).z));
				half4 Control31_g117913 = Terrain_Control_087366_g117895;
				half4 Terrain_Height_088731_g117895 = ( appendResult29_g117913 * Control31_g117913 );
				float4 heights_087362_g117895 = Terrain_Height_088731_g117895;
				TEXTURE2D(Texture238_g117956) = _TerrainShaderTex9;
				SamplerState Sampler238_g117956 = SS30_g118001;
				half4 Input_Terrain_Coords_098833_g117895 = _TerrainCoord9;
				float4 temp_output_37_0_g117956 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117956 = temp_output_37_0_g117956;
				float3 temp_output_279_0_g117956 = Input_Position9197_g117895;
				half3 WorldPosition238_g117956 = temp_output_279_0_g117956;
				half4 localSamplePlanar2D238_g117956 = SamplePlanar2D( Texture238_g117956 , Sampler238_g117956 , Coords238_g117956 , WorldPosition238_g117956 );
				TEXTURE2D(Texture246_g117956) = _TerrainShaderTex9;
				SamplerState Sampler246_g117956 = SS30_g118001;
				half4 Coords246_g117956 = temp_output_37_0_g117956;
				half3 WorldPosition246_g117956 = temp_output_279_0_g117956;
				float3 temp_output_280_0_g117956 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117956 = temp_output_280_0_g117956;
				half4 localSamplePlanar3D246_g117956 = SamplePlanar3D( Texture246_g117956 , Sampler246_g117956 , Coords246_g117956 , WorldPosition246_g117956 , WorldNormal246_g117956 );
				TEXTURE2D(Texture234_g117956) = _TerrainShaderTex9;
				SamplerState Sampler234_g117956 = SS30_g118001;
				float4 Coords234_g117956 = temp_output_37_0_g117956;
				float3 WorldPosition234_g117956 = temp_output_279_0_g117956;
				float4 localSampleStochastic2D234_g117956 = SampleStochastic2D( Texture234_g117956 , Sampler234_g117956 , Coords234_g117956 , WorldPosition234_g117956 );
				TEXTURE2D(Texture263_g117956) = _TerrainShaderTex9;
				SamplerState Sampler263_g117956 = SS30_g118001;
				half4 Coords263_g117956 = temp_output_37_0_g117956;
				half3 WorldPosition263_g117956 = temp_output_279_0_g117956;
				half3 WorldNormal263_g117956 = temp_output_280_0_g117956;
				half4 localSampleStochastic3D263_g117956 = SampleStochastic3D( Texture263_g117956 , Sampler263_g117956 , Coords263_g117956 , WorldPosition263_g117956 , WorldNormal263_g117956 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8878_g117895 = localSamplePlanar2D238_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8878_g117895 = localSamplePlanar3D246_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8878_g117895 = localSampleStochastic2D234_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8878_g117895 = localSampleStochastic3D263_g117956;
				#else
				float4 staticSwitch8878_g117895 = localSamplePlanar2D238_g117956;
				#endif
				float4 temp_output_7_0_g117919 = _TerrainShaderMin9;
				float4 temp_output_10_0_g117919 = ( _TerrainShaderMax9 - temp_output_7_0_g117919 );
				float4 temp_output_8815_0_g117895 = saturate( ( ( staticSwitch8878_g117895 - temp_output_7_0_g117919 ) / ( temp_output_10_0_g117919 + 0.0001 ) ) );
				half4 Masks_015_g117920 = temp_output_8815_0_g117895;
				TEXTURE2D(Texture238_g117966) = _TerrainShaderTex10;
				SamplerState Sampler238_g117966 = SS30_g118001;
				half4 Input_Terrain_Coords_108834_g117895 = _TerrainCoord10;
				float4 temp_output_37_0_g117966 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117966 = temp_output_37_0_g117966;
				float3 temp_output_279_0_g117966 = Input_Position9197_g117895;
				half3 WorldPosition238_g117966 = temp_output_279_0_g117966;
				half4 localSamplePlanar2D238_g117966 = SamplePlanar2D( Texture238_g117966 , Sampler238_g117966 , Coords238_g117966 , WorldPosition238_g117966 );
				TEXTURE2D(Texture246_g117966) = _TerrainShaderTex10;
				SamplerState Sampler246_g117966 = SS30_g118001;
				half4 Coords246_g117966 = temp_output_37_0_g117966;
				half3 WorldPosition246_g117966 = temp_output_279_0_g117966;
				float3 temp_output_280_0_g117966 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117966 = temp_output_280_0_g117966;
				half4 localSamplePlanar3D246_g117966 = SamplePlanar3D( Texture246_g117966 , Sampler246_g117966 , Coords246_g117966 , WorldPosition246_g117966 , WorldNormal246_g117966 );
				TEXTURE2D(Texture234_g117966) = _TerrainShaderTex10;
				SamplerState Sampler234_g117966 = SS30_g118001;
				float4 Coords234_g117966 = temp_output_37_0_g117966;
				float3 WorldPosition234_g117966 = temp_output_279_0_g117966;
				float4 localSampleStochastic2D234_g117966 = SampleStochastic2D( Texture234_g117966 , Sampler234_g117966 , Coords234_g117966 , WorldPosition234_g117966 );
				TEXTURE2D(Texture263_g117966) = _TerrainShaderTex10;
				SamplerState Sampler263_g117966 = SS30_g118001;
				half4 Coords263_g117966 = temp_output_37_0_g117966;
				half3 WorldPosition263_g117966 = temp_output_279_0_g117966;
				half3 WorldNormal263_g117966 = temp_output_280_0_g117966;
				half4 localSampleStochastic3D263_g117966 = SampleStochastic3D( Texture263_g117966 , Sampler263_g117966 , Coords263_g117966 , WorldPosition263_g117966 , WorldNormal263_g117966 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8860_g117895 = localSamplePlanar2D238_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8860_g117895 = localSamplePlanar3D246_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8860_g117895 = localSampleStochastic2D234_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8860_g117895 = localSampleStochastic3D263_g117966;
				#else
				float4 staticSwitch8860_g117895 = localSamplePlanar2D238_g117966;
				#endif
				float4 temp_output_7_0_g117931 = _TerrainShaderMin10;
				float4 temp_output_10_0_g117931 = ( _TerrainShaderMax10 - temp_output_7_0_g117931 );
				float4 temp_output_8818_0_g117895 = saturate( ( ( staticSwitch8860_g117895 - temp_output_7_0_g117931 ) / ( temp_output_10_0_g117931 + 0.0001 ) ) );
				half4 Masks_0210_g117920 = temp_output_8818_0_g117895;
				TEXTURE2D(Texture238_g117967) = _TerrainShaderTex11;
				SamplerState Sampler238_g117967 = SS30_g118001;
				half4 Input_Terrain_Coords_118835_g117895 = _TerrainCoord11;
				float4 temp_output_37_0_g117967 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117967 = temp_output_37_0_g117967;
				float3 temp_output_279_0_g117967 = Input_Position9197_g117895;
				half3 WorldPosition238_g117967 = temp_output_279_0_g117967;
				half4 localSamplePlanar2D238_g117967 = SamplePlanar2D( Texture238_g117967 , Sampler238_g117967 , Coords238_g117967 , WorldPosition238_g117967 );
				TEXTURE2D(Texture246_g117967) = _TerrainShaderTex11;
				SamplerState Sampler246_g117967 = SS30_g118001;
				half4 Coords246_g117967 = temp_output_37_0_g117967;
				half3 WorldPosition246_g117967 = temp_output_279_0_g117967;
				float3 temp_output_280_0_g117967 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117967 = temp_output_280_0_g117967;
				half4 localSamplePlanar3D246_g117967 = SamplePlanar3D( Texture246_g117967 , Sampler246_g117967 , Coords246_g117967 , WorldPosition246_g117967 , WorldNormal246_g117967 );
				TEXTURE2D(Texture234_g117967) = _TerrainShaderTex11;
				SamplerState Sampler234_g117967 = SS30_g118001;
				float4 Coords234_g117967 = temp_output_37_0_g117967;
				float3 WorldPosition234_g117967 = temp_output_279_0_g117967;
				float4 localSampleStochastic2D234_g117967 = SampleStochastic2D( Texture234_g117967 , Sampler234_g117967 , Coords234_g117967 , WorldPosition234_g117967 );
				TEXTURE2D(Texture263_g117967) = _TerrainShaderTex11;
				SamplerState Sampler263_g117967 = SS30_g118001;
				half4 Coords263_g117967 = temp_output_37_0_g117967;
				half3 WorldPosition263_g117967 = temp_output_279_0_g117967;
				half3 WorldNormal263_g117967 = temp_output_280_0_g117967;
				half4 localSampleStochastic3D263_g117967 = SampleStochastic3D( Texture263_g117967 , Sampler263_g117967 , Coords263_g117967 , WorldPosition263_g117967 , WorldNormal263_g117967 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8861_g117895 = localSamplePlanar2D238_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8861_g117895 = localSamplePlanar3D246_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8861_g117895 = localSampleStochastic2D234_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8861_g117895 = localSampleStochastic3D263_g117967;
				#else
				float4 staticSwitch8861_g117895 = localSamplePlanar2D238_g117967;
				#endif
				float4 temp_output_7_0_g117932 = _TerrainShaderMin11;
				float4 temp_output_10_0_g117932 = ( _TerrainShaderMax11 - temp_output_7_0_g117932 );
				float4 temp_output_8819_0_g117895 = saturate( ( ( staticSwitch8861_g117895 - temp_output_7_0_g117932 ) / ( temp_output_10_0_g117932 + 0.0001 ) ) );
				half4 Masks_0312_g117920 = temp_output_8819_0_g117895;
				TEXTURE2D(Texture238_g117968) = _TerrainShaderTex12;
				SamplerState Sampler238_g117968 = SS30_g118001;
				half4 Input_Terrain_Coords_128836_g117895 = _TerrainCoord12;
				float4 temp_output_37_0_g117968 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117968 = temp_output_37_0_g117968;
				float3 temp_output_279_0_g117968 = Input_Position9197_g117895;
				half3 WorldPosition238_g117968 = temp_output_279_0_g117968;
				half4 localSamplePlanar2D238_g117968 = SamplePlanar2D( Texture238_g117968 , Sampler238_g117968 , Coords238_g117968 , WorldPosition238_g117968 );
				TEXTURE2D(Texture246_g117968) = _TerrainShaderTex12;
				SamplerState Sampler246_g117968 = SS30_g118001;
				half4 Coords246_g117968 = temp_output_37_0_g117968;
				half3 WorldPosition246_g117968 = temp_output_279_0_g117968;
				float3 temp_output_280_0_g117968 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117968 = temp_output_280_0_g117968;
				half4 localSamplePlanar3D246_g117968 = SamplePlanar3D( Texture246_g117968 , Sampler246_g117968 , Coords246_g117968 , WorldPosition246_g117968 , WorldNormal246_g117968 );
				TEXTURE2D(Texture234_g117968) = _TerrainShaderTex12;
				SamplerState Sampler234_g117968 = SS30_g118001;
				float4 Coords234_g117968 = temp_output_37_0_g117968;
				float3 WorldPosition234_g117968 = temp_output_279_0_g117968;
				float4 localSampleStochastic2D234_g117968 = SampleStochastic2D( Texture234_g117968 , Sampler234_g117968 , Coords234_g117968 , WorldPosition234_g117968 );
				TEXTURE2D(Texture263_g117968) = _TerrainShaderTex12;
				SamplerState Sampler263_g117968 = SS30_g118001;
				half4 Coords263_g117968 = temp_output_37_0_g117968;
				half3 WorldPosition263_g117968 = temp_output_279_0_g117968;
				half3 WorldNormal263_g117968 = temp_output_280_0_g117968;
				half4 localSampleStochastic3D263_g117968 = SampleStochastic3D( Texture263_g117968 , Sampler263_g117968 , Coords263_g117968 , WorldPosition263_g117968 , WorldNormal263_g117968 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8879_g117895 = localSamplePlanar2D238_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8879_g117895 = localSamplePlanar3D246_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8879_g117895 = localSampleStochastic2D234_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8879_g117895 = localSampleStochastic3D263_g117968;
				#else
				float4 staticSwitch8879_g117895 = localSamplePlanar2D238_g117968;
				#endif
				float4 temp_output_7_0_g117933 = _TerrainShaderMin12;
				float4 temp_output_10_0_g117933 = ( _TerrainShaderMax12 - temp_output_7_0_g117933 );
				float4 temp_output_8820_0_g117895 = saturate( ( ( staticSwitch8879_g117895 - temp_output_7_0_g117933 ) / ( temp_output_10_0_g117933 + 0.0001 ) ) );
				half4 Masks_0414_g117920 = temp_output_8820_0_g117895;
				float4 appendResult29_g117920 = (float4((Masks_015_g117920).z , (Masks_0210_g117920).z , (Masks_0312_g117920).z , (Masks_0414_g117920).z));
				half4 Control31_g117920 = Terrain_Control_127712_g117895;
				half4 Terrain_Height_128870_g117895 = ( appendResult29_g117920 * Control31_g117920 );
				float4 heights_127362_g117895 = Terrain_Height_128870_g117895;
				TEXTURE2D(Texture238_g117964) = _TerrainShaderTex13;
				SamplerState Sampler238_g117964 = SS30_g118001;
				half4 Input_Terrain_Coords_138960_g117895 = _TerrainCoord13;
				float4 temp_output_37_0_g117964 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117964 = temp_output_37_0_g117964;
				float3 temp_output_279_0_g117964 = Input_Position9197_g117895;
				half3 WorldPosition238_g117964 = temp_output_279_0_g117964;
				half4 localSamplePlanar2D238_g117964 = SamplePlanar2D( Texture238_g117964 , Sampler238_g117964 , Coords238_g117964 , WorldPosition238_g117964 );
				TEXTURE2D(Texture246_g117964) = _TerrainShaderTex13;
				SamplerState Sampler246_g117964 = SS30_g118001;
				half4 Coords246_g117964 = temp_output_37_0_g117964;
				half3 WorldPosition246_g117964 = temp_output_279_0_g117964;
				float3 temp_output_280_0_g117964 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117964 = temp_output_280_0_g117964;
				half4 localSamplePlanar3D246_g117964 = SamplePlanar3D( Texture246_g117964 , Sampler246_g117964 , Coords246_g117964 , WorldPosition246_g117964 , WorldNormal246_g117964 );
				TEXTURE2D(Texture234_g117964) = _TerrainShaderTex13;
				SamplerState Sampler234_g117964 = SS30_g118001;
				float4 Coords234_g117964 = temp_output_37_0_g117964;
				float3 WorldPosition234_g117964 = temp_output_279_0_g117964;
				float4 localSampleStochastic2D234_g117964 = SampleStochastic2D( Texture234_g117964 , Sampler234_g117964 , Coords234_g117964 , WorldPosition234_g117964 );
				TEXTURE2D(Texture263_g117964) = _TerrainShaderTex13;
				SamplerState Sampler263_g117964 = SS30_g118001;
				half4 Coords263_g117964 = temp_output_37_0_g117964;
				half3 WorldPosition263_g117964 = temp_output_279_0_g117964;
				half3 WorldNormal263_g117964 = temp_output_280_0_g117964;
				half4 localSampleStochastic3D263_g117964 = SampleStochastic3D( Texture263_g117964 , Sampler263_g117964 , Coords263_g117964 , WorldPosition263_g117964 , WorldNormal263_g117964 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch9000_g117895 = localSamplePlanar2D238_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch9000_g117895 = localSamplePlanar3D246_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch9000_g117895 = localSampleStochastic2D234_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch9000_g117895 = localSampleStochastic3D263_g117964;
				#else
				float4 staticSwitch9000_g117895 = localSamplePlanar2D238_g117964;
				#endif
				float4 temp_output_7_0_g117926 = _TerrainShaderMin13;
				float4 temp_output_10_0_g117926 = ( _TerrainShaderMax13 - temp_output_7_0_g117926 );
				float4 temp_output_8931_0_g117895 = saturate( ( ( staticSwitch9000_g117895 - temp_output_7_0_g117926 ) / ( temp_output_10_0_g117926 + 0.0001 ) ) );
				half4 Masks_015_g117927 = temp_output_8931_0_g117895;
				TEXTURE2D(Texture238_g117975) = _TerrainShaderTex14;
				SamplerState Sampler238_g117975 = SS30_g118001;
				half4 Input_Terrain_Coords_148961_g117895 = _TerrainCoord14;
				float4 temp_output_37_0_g117975 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117975 = temp_output_37_0_g117975;
				float3 temp_output_279_0_g117975 = Input_Position9197_g117895;
				half3 WorldPosition238_g117975 = temp_output_279_0_g117975;
				half4 localSamplePlanar2D238_g117975 = SamplePlanar2D( Texture238_g117975 , Sampler238_g117975 , Coords238_g117975 , WorldPosition238_g117975 );
				TEXTURE2D(Texture246_g117975) = _TerrainShaderTex14;
				SamplerState Sampler246_g117975 = SS30_g118001;
				half4 Coords246_g117975 = temp_output_37_0_g117975;
				half3 WorldPosition246_g117975 = temp_output_279_0_g117975;
				float3 temp_output_280_0_g117975 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117975 = temp_output_280_0_g117975;
				half4 localSamplePlanar3D246_g117975 = SamplePlanar3D( Texture246_g117975 , Sampler246_g117975 , Coords246_g117975 , WorldPosition246_g117975 , WorldNormal246_g117975 );
				TEXTURE2D(Texture234_g117975) = _TerrainShaderTex14;
				SamplerState Sampler234_g117975 = SS30_g118001;
				float4 Coords234_g117975 = temp_output_37_0_g117975;
				float3 WorldPosition234_g117975 = temp_output_279_0_g117975;
				float4 localSampleStochastic2D234_g117975 = SampleStochastic2D( Texture234_g117975 , Sampler234_g117975 , Coords234_g117975 , WorldPosition234_g117975 );
				TEXTURE2D(Texture263_g117975) = _TerrainShaderTex14;
				SamplerState Sampler263_g117975 = SS30_g118001;
				half4 Coords263_g117975 = temp_output_37_0_g117975;
				half3 WorldPosition263_g117975 = temp_output_279_0_g117975;
				half3 WorldNormal263_g117975 = temp_output_280_0_g117975;
				half4 localSampleStochastic3D263_g117975 = SampleStochastic3D( Texture263_g117975 , Sampler263_g117975 , Coords263_g117975 , WorldPosition263_g117975 , WorldNormal263_g117975 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch9001_g117895 = localSamplePlanar2D238_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch9001_g117895 = localSamplePlanar3D246_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch9001_g117895 = localSampleStochastic2D234_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch9001_g117895 = localSampleStochastic3D263_g117975;
				#else
				float4 staticSwitch9001_g117895 = localSamplePlanar2D238_g117975;
				#endif
				float4 temp_output_7_0_g117934 = _TerrainShaderMin14;
				float4 temp_output_10_0_g117934 = ( _TerrainShaderMax14 - temp_output_7_0_g117934 );
				float4 temp_output_8934_0_g117895 = saturate( ( ( staticSwitch9001_g117895 - temp_output_7_0_g117934 ) / ( temp_output_10_0_g117934 + 0.0001 ) ) );
				half4 Masks_0210_g117927 = temp_output_8934_0_g117895;
				TEXTURE2D(Texture238_g117976) = _TerrainShaderTex15;
				SamplerState Sampler238_g117976 = SS30_g118001;
				half4 Input_Terrain_Coords_158962_g117895 = _TerrainCoord15;
				float4 temp_output_37_0_g117976 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117976 = temp_output_37_0_g117976;
				float3 temp_output_279_0_g117976 = Input_Position9197_g117895;
				half3 WorldPosition238_g117976 = temp_output_279_0_g117976;
				half4 localSamplePlanar2D238_g117976 = SamplePlanar2D( Texture238_g117976 , Sampler238_g117976 , Coords238_g117976 , WorldPosition238_g117976 );
				TEXTURE2D(Texture246_g117976) = _TerrainShaderTex15;
				SamplerState Sampler246_g117976 = SS30_g118001;
				half4 Coords246_g117976 = temp_output_37_0_g117976;
				half3 WorldPosition246_g117976 = temp_output_279_0_g117976;
				float3 temp_output_280_0_g117976 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117976 = temp_output_280_0_g117976;
				half4 localSamplePlanar3D246_g117976 = SamplePlanar3D( Texture246_g117976 , Sampler246_g117976 , Coords246_g117976 , WorldPosition246_g117976 , WorldNormal246_g117976 );
				TEXTURE2D(Texture234_g117976) = _TerrainShaderTex15;
				SamplerState Sampler234_g117976 = SS30_g118001;
				float4 Coords234_g117976 = temp_output_37_0_g117976;
				float3 WorldPosition234_g117976 = temp_output_279_0_g117976;
				float4 localSampleStochastic2D234_g117976 = SampleStochastic2D( Texture234_g117976 , Sampler234_g117976 , Coords234_g117976 , WorldPosition234_g117976 );
				TEXTURE2D(Texture263_g117976) = _TerrainShaderTex15;
				SamplerState Sampler263_g117976 = SS30_g118001;
				half4 Coords263_g117976 = temp_output_37_0_g117976;
				half3 WorldPosition263_g117976 = temp_output_279_0_g117976;
				half3 WorldNormal263_g117976 = temp_output_280_0_g117976;
				half4 localSampleStochastic3D263_g117976 = SampleStochastic3D( Texture263_g117976 , Sampler263_g117976 , Coords263_g117976 , WorldPosition263_g117976 , WorldNormal263_g117976 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch9002_g117895 = localSamplePlanar2D238_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch9002_g117895 = localSamplePlanar3D246_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch9002_g117895 = localSampleStochastic2D234_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch9002_g117895 = localSampleStochastic3D263_g117976;
				#else
				float4 staticSwitch9002_g117895 = localSamplePlanar2D238_g117976;
				#endif
				float4 temp_output_7_0_g117935 = _TerrainShaderMin15;
				float4 temp_output_10_0_g117935 = ( _TerrainShaderMax15 - temp_output_7_0_g117935 );
				float4 temp_output_8935_0_g117895 = saturate( ( ( staticSwitch9002_g117895 - temp_output_7_0_g117935 ) / ( temp_output_10_0_g117935 + 0.0001 ) ) );
				half4 Masks_0312_g117927 = temp_output_8935_0_g117895;
				TEXTURE2D(Texture238_g117977) = _TerrainShaderTex16;
				SamplerState Sampler238_g117977 = SS30_g118001;
				half4 Input_Terrain_Coords_168959_g117895 = _TerrainCoord16;
				float4 temp_output_37_0_g117977 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117977 = temp_output_37_0_g117977;
				float3 temp_output_279_0_g117977 = Input_Position9197_g117895;
				half3 WorldPosition238_g117977 = temp_output_279_0_g117977;
				half4 localSamplePlanar2D238_g117977 = SamplePlanar2D( Texture238_g117977 , Sampler238_g117977 , Coords238_g117977 , WorldPosition238_g117977 );
				TEXTURE2D(Texture246_g117977) = _TerrainShaderTex16;
				SamplerState Sampler246_g117977 = SS30_g118001;
				half4 Coords246_g117977 = temp_output_37_0_g117977;
				half3 WorldPosition246_g117977 = temp_output_279_0_g117977;
				float3 temp_output_280_0_g117977 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117977 = temp_output_280_0_g117977;
				half4 localSamplePlanar3D246_g117977 = SamplePlanar3D( Texture246_g117977 , Sampler246_g117977 , Coords246_g117977 , WorldPosition246_g117977 , WorldNormal246_g117977 );
				TEXTURE2D(Texture234_g117977) = _TerrainShaderTex16;
				SamplerState Sampler234_g117977 = SS30_g118001;
				float4 Coords234_g117977 = temp_output_37_0_g117977;
				float3 WorldPosition234_g117977 = temp_output_279_0_g117977;
				float4 localSampleStochastic2D234_g117977 = SampleStochastic2D( Texture234_g117977 , Sampler234_g117977 , Coords234_g117977 , WorldPosition234_g117977 );
				TEXTURE2D(Texture263_g117977) = _TerrainShaderTex16;
				SamplerState Sampler263_g117977 = SS30_g118001;
				half4 Coords263_g117977 = temp_output_37_0_g117977;
				half3 WorldPosition263_g117977 = temp_output_279_0_g117977;
				half3 WorldNormal263_g117977 = temp_output_280_0_g117977;
				half4 localSampleStochastic3D263_g117977 = SampleStochastic3D( Texture263_g117977 , Sampler263_g117977 , Coords263_g117977 , WorldPosition263_g117977 , WorldNormal263_g117977 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch9003_g117895 = localSamplePlanar2D238_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch9003_g117895 = localSamplePlanar3D246_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch9003_g117895 = localSampleStochastic2D234_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch9003_g117895 = localSampleStochastic3D263_g117977;
				#else
				float4 staticSwitch9003_g117895 = localSamplePlanar2D238_g117977;
				#endif
				float4 temp_output_7_0_g117936 = _TerrainShaderMin16;
				float4 temp_output_10_0_g117936 = ( _TerrainShaderMax16 - temp_output_7_0_g117936 );
				float4 temp_output_8936_0_g117895 = saturate( ( ( staticSwitch9003_g117895 - temp_output_7_0_g117936 ) / ( temp_output_10_0_g117936 + 0.0001 ) ) );
				half4 Masks_0414_g117927 = temp_output_8936_0_g117895;
				float4 appendResult29_g117927 = (float4((Masks_015_g117927).z , (Masks_0210_g117927).z , (Masks_0312_g117927).z , (Masks_0414_g117927).z));
				half4 Control31_g117927 = Terrain_Control_167711_g117895;
				half4 Terrain_Height_169015_g117895 = ( appendResult29_g117927 * Control31_g117927 );
				float4 heights_167362_g117895 = Terrain_Height_169015_g117895;
				float heightTransition7362_g117895 = ( 1.0 - _TerrainHeightBlendValue );
				float4 weights_047362_g117895 = float4( 0,0,0,0 );
				float4 weights_087362_g117895 = float4( 0,0,0,0 );
				float4 weights_127362_g117895 = float4( 0,0,0,0 );
				float4 weights_167362_g117895 = float4( 0,0,0,0 );
				//Modified version of the HDRP terrain height based blending
				float maxHeight = 0;
				float4 weightedHeights_04 = float4( 0,0,0,0 );
				float4 weightedHeights_08 = float4( 0,0,0,0 );
				float4 weightedHeights_12 = float4( 0,0,0,0 );
				float4 weightedHeights_16 = float4( 0,0,0,0 );
				maxHeight = heights_047362_g117895.x;
				maxHeight = max(maxHeight, heights_047362_g117895.y);
				maxHeight = max(maxHeight, heights_047362_g117895.z);
				maxHeight = max(maxHeight, heights_047362_g117895.w);
				#ifdef TVE_TERRAIN_08
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				#endif
				#ifdef TVE_TERRAIN_12
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				maxHeight = max(maxHeight, heights_127362_g117895.x);
				maxHeight = max(maxHeight, heights_127362_g117895.y);
				maxHeight = max(maxHeight, heights_127362_g117895.z);
				maxHeight = max(maxHeight, heights_127362_g117895.w);
				#endif
				#ifdef TVE_TERRAIN_16
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				maxHeight = max(maxHeight, heights_127362_g117895.x);
				maxHeight = max(maxHeight, heights_127362_g117895.y);
				maxHeight = max(maxHeight, heights_127362_g117895.z);
				maxHeight = max(maxHeight, heights_127362_g117895.w);
				maxHeight = max(maxHeight, heights_167362_g117895.x);
				maxHeight = max(maxHeight, heights_167362_g117895.y);
				maxHeight = max(maxHeight, heights_167362_g117895.z);
				maxHeight = max(maxHeight, heights_167362_g117895.w);
				#endif
				float transition = max(heightTransition7362_g117895, 0.01);
				weightedHeights_04 = float4 ( heights_047362_g117895.x, heights_047362_g117895.y, heights_047362_g117895.z, heights_047362_g117895.w );
				weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
				weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g117895;
				#ifdef TVE_TERRAIN_08
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				#endif
				#ifdef TVE_TERRAIN_12
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				weightedHeights_12 = float4 ( heights_127362_g117895.x, heights_127362_g117895.y, heights_127362_g117895.z, heights_127362_g117895.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g117895;
				#endif
				#ifdef TVE_TERRAIN_16
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				weightedHeights_12 = float4 ( heights_127362_g117895.x, heights_127362_g117895.y, heights_127362_g117895.z, heights_127362_g117895.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g117895;
				weightedHeights_16 = float4 ( heights_167362_g117895.x, heights_167362_g117895.y, heights_167362_g117895.z, heights_167362_g117895.w );
				weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
				weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g117895;
				#endif
				float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
				float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
				float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
				float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
				float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
				weights_047362_g117895 = weightedHeights_04 / sumHeight.xxxx;
				#ifdef TVE_TERRAIN_08
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_12
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g117895 = weightedHeights_12 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_16
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g117895 = weightedHeights_12 / sumHeight.xxxx;
				weights_167362_g117895 = weightedHeights_16 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8792_g117895 = weights_047362_g117895;
				#else
				float4 staticSwitch8792_g117895 = control_047362_g117895;
				#endif
				half4 Terrain_Weights_046781_g117895 = staticSwitch8792_g117895;
				half4 Weights52_g117900 = Terrain_Weights_046781_g117895;
				TEXTURE2D(Texture238_g117941) = _TerrainAlbedoTex1;
				float localFilterTexture19_g117998 = ( 0.0 );
				SamplerState SamplerDefault19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g117998 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g117998 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g117998 = SamplerDefault19_g117998;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g117998 = SamplerDefault19_g117998;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g117998 = SamplerPoint19_g117998;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g117998 = SamplerLow19_g117998;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g117998 = SamplerMedium19_g117998;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g117998 = SamplerHigh19_g117998;
				#endif
				SamplerState Sampler238_g117941 = SS19_g117998;
				float4 temp_output_37_0_g117941 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117941 = temp_output_37_0_g117941;
				float3 temp_output_279_0_g117941 = Input_Position9197_g117895;
				half3 WorldPosition238_g117941 = temp_output_279_0_g117941;
				half4 localSamplePlanar2D238_g117941 = SamplePlanar2D( Texture238_g117941 , Sampler238_g117941 , Coords238_g117941 , WorldPosition238_g117941 );
				TEXTURE2D(Texture246_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler246_g117941 = SS19_g117998;
				half4 Coords246_g117941 = temp_output_37_0_g117941;
				half3 WorldPosition246_g117941 = temp_output_279_0_g117941;
				float3 temp_output_280_0_g117941 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117941 = temp_output_280_0_g117941;
				half4 localSamplePlanar3D246_g117941 = SamplePlanar3D( Texture246_g117941 , Sampler246_g117941 , Coords246_g117941 , WorldPosition246_g117941 , WorldNormal246_g117941 );
				TEXTURE2D(Texture234_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler234_g117941 = SS19_g117998;
				float4 Coords234_g117941 = temp_output_37_0_g117941;
				float3 WorldPosition234_g117941 = temp_output_279_0_g117941;
				float4 localSampleStochastic2D234_g117941 = SampleStochastic2D( Texture234_g117941 , Sampler234_g117941 , Coords234_g117941 , WorldPosition234_g117941 );
				TEXTURE2D(Texture263_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler263_g117941 = SS19_g117998;
				half4 Coords263_g117941 = temp_output_37_0_g117941;
				half3 WorldPosition263_g117941 = temp_output_279_0_g117941;
				half3 WorldNormal263_g117941 = temp_output_280_0_g117941;
				half4 localSampleStochastic3D263_g117941 = SampleStochastic3D( Texture263_g117941 , Sampler263_g117941 , Coords263_g117941 , WorldPosition263_g117941 , WorldNormal263_g117941 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8614_g117895 = localSamplePlanar2D238_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8614_g117895 = localSamplePlanar3D246_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8614_g117895 = localSampleStochastic2D234_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8614_g117895 = localSampleStochastic3D263_g117941;
				#else
				float4 staticSwitch8614_g117895 = localSamplePlanar2D238_g117941;
				#endif
				half4 Layer133_g117900 = staticSwitch8614_g117895;
				TEXTURE2D(Texture238_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler238_g117942 = SS19_g117998;
				float4 temp_output_37_0_g117942 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117942 = temp_output_37_0_g117942;
				float3 temp_output_279_0_g117942 = Input_Position9197_g117895;
				half3 WorldPosition238_g117942 = temp_output_279_0_g117942;
				half4 localSamplePlanar2D238_g117942 = SamplePlanar2D( Texture238_g117942 , Sampler238_g117942 , Coords238_g117942 , WorldPosition238_g117942 );
				TEXTURE2D(Texture246_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler246_g117942 = SS19_g117998;
				half4 Coords246_g117942 = temp_output_37_0_g117942;
				half3 WorldPosition246_g117942 = temp_output_279_0_g117942;
				float3 temp_output_280_0_g117942 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117942 = temp_output_280_0_g117942;
				half4 localSamplePlanar3D246_g117942 = SamplePlanar3D( Texture246_g117942 , Sampler246_g117942 , Coords246_g117942 , WorldPosition246_g117942 , WorldNormal246_g117942 );
				TEXTURE2D(Texture234_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler234_g117942 = SS19_g117998;
				float4 Coords234_g117942 = temp_output_37_0_g117942;
				float3 WorldPosition234_g117942 = temp_output_279_0_g117942;
				float4 localSampleStochastic2D234_g117942 = SampleStochastic2D( Texture234_g117942 , Sampler234_g117942 , Coords234_g117942 , WorldPosition234_g117942 );
				TEXTURE2D(Texture263_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler263_g117942 = SS19_g117998;
				half4 Coords263_g117942 = temp_output_37_0_g117942;
				half3 WorldPosition263_g117942 = temp_output_279_0_g117942;
				half3 WorldNormal263_g117942 = temp_output_280_0_g117942;
				half4 localSampleStochastic3D263_g117942 = SampleStochastic3D( Texture263_g117942 , Sampler263_g117942 , Coords263_g117942 , WorldPosition263_g117942 , WorldNormal263_g117942 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8629_g117895 = localSamplePlanar2D238_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8629_g117895 = localSamplePlanar3D246_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8629_g117895 = localSampleStochastic2D234_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8629_g117895 = localSampleStochastic3D263_g117942;
				#else
				float4 staticSwitch8629_g117895 = localSamplePlanar2D238_g117942;
				#endif
				half4 Layer237_g117900 = staticSwitch8629_g117895;
				TEXTURE2D(Texture238_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler238_g117945 = SS19_g117998;
				float4 temp_output_37_0_g117945 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117945 = temp_output_37_0_g117945;
				float3 temp_output_279_0_g117945 = Input_Position9197_g117895;
				half3 WorldPosition238_g117945 = temp_output_279_0_g117945;
				half4 localSamplePlanar2D238_g117945 = SamplePlanar2D( Texture238_g117945 , Sampler238_g117945 , Coords238_g117945 , WorldPosition238_g117945 );
				TEXTURE2D(Texture246_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler246_g117945 = SS19_g117998;
				half4 Coords246_g117945 = temp_output_37_0_g117945;
				half3 WorldPosition246_g117945 = temp_output_279_0_g117945;
				float3 temp_output_280_0_g117945 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117945 = temp_output_280_0_g117945;
				half4 localSamplePlanar3D246_g117945 = SamplePlanar3D( Texture246_g117945 , Sampler246_g117945 , Coords246_g117945 , WorldPosition246_g117945 , WorldNormal246_g117945 );
				TEXTURE2D(Texture234_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler234_g117945 = SS19_g117998;
				float4 Coords234_g117945 = temp_output_37_0_g117945;
				float3 WorldPosition234_g117945 = temp_output_279_0_g117945;
				float4 localSampleStochastic2D234_g117945 = SampleStochastic2D( Texture234_g117945 , Sampler234_g117945 , Coords234_g117945 , WorldPosition234_g117945 );
				TEXTURE2D(Texture263_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler263_g117945 = SS19_g117998;
				half4 Coords263_g117945 = temp_output_37_0_g117945;
				half3 WorldPosition263_g117945 = temp_output_279_0_g117945;
				half3 WorldNormal263_g117945 = temp_output_280_0_g117945;
				half4 localSampleStochastic3D263_g117945 = SampleStochastic3D( Texture263_g117945 , Sampler263_g117945 , Coords263_g117945 , WorldPosition263_g117945 , WorldNormal263_g117945 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8630_g117895 = localSamplePlanar2D238_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8630_g117895 = localSamplePlanar3D246_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8630_g117895 = localSampleStochastic2D234_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8630_g117895 = localSampleStochastic3D263_g117945;
				#else
				float4 staticSwitch8630_g117895 = localSamplePlanar2D238_g117945;
				#endif
				half4 Layer338_g117900 = staticSwitch8630_g117895;
				TEXTURE2D(Texture238_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler238_g117947 = SS19_g117998;
				float4 temp_output_37_0_g117947 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117947 = temp_output_37_0_g117947;
				float3 temp_output_279_0_g117947 = Input_Position9197_g117895;
				half3 WorldPosition238_g117947 = temp_output_279_0_g117947;
				half4 localSamplePlanar2D238_g117947 = SamplePlanar2D( Texture238_g117947 , Sampler238_g117947 , Coords238_g117947 , WorldPosition238_g117947 );
				TEXTURE2D(Texture246_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler246_g117947 = SS19_g117998;
				half4 Coords246_g117947 = temp_output_37_0_g117947;
				half3 WorldPosition246_g117947 = temp_output_279_0_g117947;
				float3 temp_output_280_0_g117947 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117947 = temp_output_280_0_g117947;
				half4 localSamplePlanar3D246_g117947 = SamplePlanar3D( Texture246_g117947 , Sampler246_g117947 , Coords246_g117947 , WorldPosition246_g117947 , WorldNormal246_g117947 );
				TEXTURE2D(Texture234_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler234_g117947 = SS19_g117998;
				float4 Coords234_g117947 = temp_output_37_0_g117947;
				float3 WorldPosition234_g117947 = temp_output_279_0_g117947;
				float4 localSampleStochastic2D234_g117947 = SampleStochastic2D( Texture234_g117947 , Sampler234_g117947 , Coords234_g117947 , WorldPosition234_g117947 );
				TEXTURE2D(Texture263_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler263_g117947 = SS19_g117998;
				half4 Coords263_g117947 = temp_output_37_0_g117947;
				half3 WorldPosition263_g117947 = temp_output_279_0_g117947;
				half3 WorldNormal263_g117947 = temp_output_280_0_g117947;
				half4 localSampleStochastic3D263_g117947 = SampleStochastic3D( Texture263_g117947 , Sampler263_g117947 , Coords263_g117947 , WorldPosition263_g117947 , WorldNormal263_g117947 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8631_g117895 = localSamplePlanar2D238_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8631_g117895 = localSamplePlanar3D246_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8631_g117895 = localSampleStochastic2D234_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8631_g117895 = localSampleStochastic3D263_g117947;
				#else
				float4 staticSwitch8631_g117895 = localSamplePlanar2D238_g117947;
				#endif
				half4 Layer439_g117900 = staticSwitch8631_g117895;
				float4 weightedBlendVar31_g117900 = Weights52_g117900;
				float4 weightedBlend31_g117900 = ( weightedBlendVar31_g117900.x*Layer133_g117900 + weightedBlendVar31_g117900.y*Layer237_g117900 + weightedBlendVar31_g117900.z*Layer338_g117900 + weightedBlendVar31_g117900.w*Layer439_g117900 );
				half4 Terrain_AAAA_047200_g117895 = weightedBlend31_g117900;
				half4 Layer_045_g117903 = Terrain_AAAA_047200_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8793_g117895 = weights_087362_g117895;
				#else
				float4 staticSwitch8793_g117895 = control_087362_g117895;
				#endif
				half4 Terrain_Weights_087340_g117895 = staticSwitch8793_g117895;
				half4 Weights52_g117910 = Terrain_Weights_087340_g117895;
				TEXTURE2D(Texture238_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler238_g117951 = SS19_g117998;
				float4 temp_output_37_0_g117951 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117951 = temp_output_37_0_g117951;
				float3 temp_output_279_0_g117951 = Input_Position9197_g117895;
				half3 WorldPosition238_g117951 = temp_output_279_0_g117951;
				half4 localSamplePlanar2D238_g117951 = SamplePlanar2D( Texture238_g117951 , Sampler238_g117951 , Coords238_g117951 , WorldPosition238_g117951 );
				TEXTURE2D(Texture246_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler246_g117951 = SS19_g117998;
				half4 Coords246_g117951 = temp_output_37_0_g117951;
				half3 WorldPosition246_g117951 = temp_output_279_0_g117951;
				float3 temp_output_280_0_g117951 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117951 = temp_output_280_0_g117951;
				half4 localSamplePlanar3D246_g117951 = SamplePlanar3D( Texture246_g117951 , Sampler246_g117951 , Coords246_g117951 , WorldPosition246_g117951 , WorldNormal246_g117951 );
				TEXTURE2D(Texture234_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler234_g117951 = SS19_g117998;
				float4 Coords234_g117951 = temp_output_37_0_g117951;
				float3 WorldPosition234_g117951 = temp_output_279_0_g117951;
				float4 localSampleStochastic2D234_g117951 = SampleStochastic2D( Texture234_g117951 , Sampler234_g117951 , Coords234_g117951 , WorldPosition234_g117951 );
				TEXTURE2D(Texture263_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler263_g117951 = SS19_g117998;
				half4 Coords263_g117951 = temp_output_37_0_g117951;
				half3 WorldPosition263_g117951 = temp_output_279_0_g117951;
				half3 WorldNormal263_g117951 = temp_output_280_0_g117951;
				half4 localSampleStochastic3D263_g117951 = SampleStochastic3D( Texture263_g117951 , Sampler263_g117951 , Coords263_g117951 , WorldPosition263_g117951 , WorldNormal263_g117951 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8690_g117895 = localSamplePlanar2D238_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8690_g117895 = localSamplePlanar3D246_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8690_g117895 = localSampleStochastic2D234_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8690_g117895 = localSampleStochastic3D263_g117951;
				#else
				float4 staticSwitch8690_g117895 = localSamplePlanar2D238_g117951;
				#endif
				half4 Layer133_g117910 = staticSwitch8690_g117895;
				TEXTURE2D(Texture238_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler238_g117978 = SS19_g117998;
				float4 temp_output_37_0_g117978 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117978 = temp_output_37_0_g117978;
				float3 temp_output_279_0_g117978 = Input_Position9197_g117895;
				half3 WorldPosition238_g117978 = temp_output_279_0_g117978;
				half4 localSamplePlanar2D238_g117978 = SamplePlanar2D( Texture238_g117978 , Sampler238_g117978 , Coords238_g117978 , WorldPosition238_g117978 );
				TEXTURE2D(Texture246_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler246_g117978 = SS19_g117998;
				half4 Coords246_g117978 = temp_output_37_0_g117978;
				half3 WorldPosition246_g117978 = temp_output_279_0_g117978;
				float3 temp_output_280_0_g117978 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117978 = temp_output_280_0_g117978;
				half4 localSamplePlanar3D246_g117978 = SamplePlanar3D( Texture246_g117978 , Sampler246_g117978 , Coords246_g117978 , WorldPosition246_g117978 , WorldNormal246_g117978 );
				TEXTURE2D(Texture234_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler234_g117978 = SS19_g117998;
				float4 Coords234_g117978 = temp_output_37_0_g117978;
				float3 WorldPosition234_g117978 = temp_output_279_0_g117978;
				float4 localSampleStochastic2D234_g117978 = SampleStochastic2D( Texture234_g117978 , Sampler234_g117978 , Coords234_g117978 , WorldPosition234_g117978 );
				TEXTURE2D(Texture263_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler263_g117978 = SS19_g117998;
				half4 Coords263_g117978 = temp_output_37_0_g117978;
				half3 WorldPosition263_g117978 = temp_output_279_0_g117978;
				half3 WorldNormal263_g117978 = temp_output_280_0_g117978;
				half4 localSampleStochastic3D263_g117978 = SampleStochastic3D( Texture263_g117978 , Sampler263_g117978 , Coords263_g117978 , WorldPosition263_g117978 , WorldNormal263_g117978 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8691_g117895 = localSamplePlanar2D238_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8691_g117895 = localSamplePlanar3D246_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8691_g117895 = localSampleStochastic2D234_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8691_g117895 = localSampleStochastic3D263_g117978;
				#else
				float4 staticSwitch8691_g117895 = localSamplePlanar2D238_g117978;
				#endif
				half4 Layer237_g117910 = staticSwitch8691_g117895;
				TEXTURE2D(Texture238_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler238_g117979 = SS19_g117998;
				float4 temp_output_37_0_g117979 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117979 = temp_output_37_0_g117979;
				float3 temp_output_279_0_g117979 = Input_Position9197_g117895;
				half3 WorldPosition238_g117979 = temp_output_279_0_g117979;
				half4 localSamplePlanar2D238_g117979 = SamplePlanar2D( Texture238_g117979 , Sampler238_g117979 , Coords238_g117979 , WorldPosition238_g117979 );
				TEXTURE2D(Texture246_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler246_g117979 = SS19_g117998;
				half4 Coords246_g117979 = temp_output_37_0_g117979;
				half3 WorldPosition246_g117979 = temp_output_279_0_g117979;
				float3 temp_output_280_0_g117979 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117979 = temp_output_280_0_g117979;
				half4 localSamplePlanar3D246_g117979 = SamplePlanar3D( Texture246_g117979 , Sampler246_g117979 , Coords246_g117979 , WorldPosition246_g117979 , WorldNormal246_g117979 );
				TEXTURE2D(Texture234_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler234_g117979 = SS19_g117998;
				float4 Coords234_g117979 = temp_output_37_0_g117979;
				float3 WorldPosition234_g117979 = temp_output_279_0_g117979;
				float4 localSampleStochastic2D234_g117979 = SampleStochastic2D( Texture234_g117979 , Sampler234_g117979 , Coords234_g117979 , WorldPosition234_g117979 );
				TEXTURE2D(Texture263_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler263_g117979 = SS19_g117998;
				half4 Coords263_g117979 = temp_output_37_0_g117979;
				half3 WorldPosition263_g117979 = temp_output_279_0_g117979;
				half3 WorldNormal263_g117979 = temp_output_280_0_g117979;
				half4 localSampleStochastic3D263_g117979 = SampleStochastic3D( Texture263_g117979 , Sampler263_g117979 , Coords263_g117979 , WorldPosition263_g117979 , WorldNormal263_g117979 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8692_g117895 = localSamplePlanar2D238_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8692_g117895 = localSamplePlanar3D246_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8692_g117895 = localSampleStochastic2D234_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8692_g117895 = localSampleStochastic3D263_g117979;
				#else
				float4 staticSwitch8692_g117895 = localSamplePlanar2D238_g117979;
				#endif
				half4 Layer338_g117910 = staticSwitch8692_g117895;
				TEXTURE2D(Texture238_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler238_g117980 = SS19_g117998;
				float4 temp_output_37_0_g117980 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117980 = temp_output_37_0_g117980;
				float3 temp_output_279_0_g117980 = Input_Position9197_g117895;
				half3 WorldPosition238_g117980 = temp_output_279_0_g117980;
				half4 localSamplePlanar2D238_g117980 = SamplePlanar2D( Texture238_g117980 , Sampler238_g117980 , Coords238_g117980 , WorldPosition238_g117980 );
				TEXTURE2D(Texture246_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler246_g117980 = SS19_g117998;
				half4 Coords246_g117980 = temp_output_37_0_g117980;
				half3 WorldPosition246_g117980 = temp_output_279_0_g117980;
				float3 temp_output_280_0_g117980 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117980 = temp_output_280_0_g117980;
				half4 localSamplePlanar3D246_g117980 = SamplePlanar3D( Texture246_g117980 , Sampler246_g117980 , Coords246_g117980 , WorldPosition246_g117980 , WorldNormal246_g117980 );
				TEXTURE2D(Texture234_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler234_g117980 = SS19_g117998;
				float4 Coords234_g117980 = temp_output_37_0_g117980;
				float3 WorldPosition234_g117980 = temp_output_279_0_g117980;
				float4 localSampleStochastic2D234_g117980 = SampleStochastic2D( Texture234_g117980 , Sampler234_g117980 , Coords234_g117980 , WorldPosition234_g117980 );
				TEXTURE2D(Texture263_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler263_g117980 = SS19_g117998;
				half4 Coords263_g117980 = temp_output_37_0_g117980;
				half3 WorldPosition263_g117980 = temp_output_279_0_g117980;
				half3 WorldNormal263_g117980 = temp_output_280_0_g117980;
				half4 localSampleStochastic3D263_g117980 = SampleStochastic3D( Texture263_g117980 , Sampler263_g117980 , Coords263_g117980 , WorldPosition263_g117980 , WorldNormal263_g117980 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8693_g117895 = localSamplePlanar2D238_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8693_g117895 = localSamplePlanar3D246_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8693_g117895 = localSampleStochastic2D234_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8693_g117895 = localSampleStochastic3D263_g117980;
				#else
				float4 staticSwitch8693_g117895 = localSamplePlanar2D238_g117980;
				#endif
				half4 Layer439_g117910 = staticSwitch8693_g117895;
				float4 weightedBlendVar31_g117910 = Weights52_g117910;
				float4 weightedBlend31_g117910 = ( weightedBlendVar31_g117910.x*Layer133_g117910 + weightedBlendVar31_g117910.y*Layer237_g117910 + weightedBlendVar31_g117910.z*Layer338_g117910 + weightedBlendVar31_g117910.w*Layer439_g117910 );
				half4 Terrain_AAAA_088665_g117895 = weightedBlend31_g117910;
				half4 Layer_0810_g117903 = Terrain_AAAA_088665_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8794_g117895 = weights_127362_g117895;
				#else
				float4 staticSwitch8794_g117895 = control_127362_g117895;
				#endif
				half4 Terrain_Weights_127710_g117895 = staticSwitch8794_g117895;
				half4 Weights52_g117917 = Terrain_Weights_127710_g117895;
				TEXTURE2D(Texture238_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler238_g117954 = SS19_g117998;
				float4 temp_output_37_0_g117954 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117954 = temp_output_37_0_g117954;
				float3 temp_output_279_0_g117954 = Input_Position9197_g117895;
				half3 WorldPosition238_g117954 = temp_output_279_0_g117954;
				half4 localSamplePlanar2D238_g117954 = SamplePlanar2D( Texture238_g117954 , Sampler238_g117954 , Coords238_g117954 , WorldPosition238_g117954 );
				TEXTURE2D(Texture246_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler246_g117954 = SS19_g117998;
				half4 Coords246_g117954 = temp_output_37_0_g117954;
				half3 WorldPosition246_g117954 = temp_output_279_0_g117954;
				float3 temp_output_280_0_g117954 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117954 = temp_output_280_0_g117954;
				half4 localSamplePlanar3D246_g117954 = SamplePlanar3D( Texture246_g117954 , Sampler246_g117954 , Coords246_g117954 , WorldPosition246_g117954 , WorldNormal246_g117954 );
				TEXTURE2D(Texture234_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler234_g117954 = SS19_g117998;
				float4 Coords234_g117954 = temp_output_37_0_g117954;
				float3 WorldPosition234_g117954 = temp_output_279_0_g117954;
				float4 localSampleStochastic2D234_g117954 = SampleStochastic2D( Texture234_g117954 , Sampler234_g117954 , Coords234_g117954 , WorldPosition234_g117954 );
				TEXTURE2D(Texture263_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler263_g117954 = SS19_g117998;
				half4 Coords263_g117954 = temp_output_37_0_g117954;
				half3 WorldPosition263_g117954 = temp_output_279_0_g117954;
				half3 WorldNormal263_g117954 = temp_output_280_0_g117954;
				half4 localSampleStochastic3D263_g117954 = SampleStochastic3D( Texture263_g117954 , Sampler263_g117954 , Coords263_g117954 , WorldPosition263_g117954 , WorldNormal263_g117954 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8872_g117895 = localSamplePlanar2D238_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8872_g117895 = localSamplePlanar3D246_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8872_g117895 = localSampleStochastic2D234_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8872_g117895 = localSampleStochastic3D263_g117954;
				#else
				float4 staticSwitch8872_g117895 = localSamplePlanar2D238_g117954;
				#endif
				half4 Layer133_g117917 = staticSwitch8872_g117895;
				TEXTURE2D(Texture238_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler238_g117957 = SS19_g117998;
				float4 temp_output_37_0_g117957 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117957 = temp_output_37_0_g117957;
				float3 temp_output_279_0_g117957 = Input_Position9197_g117895;
				half3 WorldPosition238_g117957 = temp_output_279_0_g117957;
				half4 localSamplePlanar2D238_g117957 = SamplePlanar2D( Texture238_g117957 , Sampler238_g117957 , Coords238_g117957 , WorldPosition238_g117957 );
				TEXTURE2D(Texture246_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler246_g117957 = SS19_g117998;
				half4 Coords246_g117957 = temp_output_37_0_g117957;
				half3 WorldPosition246_g117957 = temp_output_279_0_g117957;
				float3 temp_output_280_0_g117957 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117957 = temp_output_280_0_g117957;
				half4 localSamplePlanar3D246_g117957 = SamplePlanar3D( Texture246_g117957 , Sampler246_g117957 , Coords246_g117957 , WorldPosition246_g117957 , WorldNormal246_g117957 );
				TEXTURE2D(Texture234_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler234_g117957 = SS19_g117998;
				float4 Coords234_g117957 = temp_output_37_0_g117957;
				float3 WorldPosition234_g117957 = temp_output_279_0_g117957;
				float4 localSampleStochastic2D234_g117957 = SampleStochastic2D( Texture234_g117957 , Sampler234_g117957 , Coords234_g117957 , WorldPosition234_g117957 );
				TEXTURE2D(Texture263_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler263_g117957 = SS19_g117998;
				half4 Coords263_g117957 = temp_output_37_0_g117957;
				half3 WorldPosition263_g117957 = temp_output_279_0_g117957;
				half3 WorldNormal263_g117957 = temp_output_280_0_g117957;
				half4 localSampleStochastic3D263_g117957 = SampleStochastic3D( Texture263_g117957 , Sampler263_g117957 , Coords263_g117957 , WorldPosition263_g117957 , WorldNormal263_g117957 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8873_g117895 = localSamplePlanar2D238_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8873_g117895 = localSamplePlanar3D246_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8873_g117895 = localSampleStochastic2D234_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8873_g117895 = localSampleStochastic3D263_g117957;
				#else
				float4 staticSwitch8873_g117895 = localSamplePlanar2D238_g117957;
				#endif
				half4 Layer237_g117917 = staticSwitch8873_g117895;
				TEXTURE2D(Texture238_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler238_g117958 = SS19_g117998;
				float4 temp_output_37_0_g117958 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117958 = temp_output_37_0_g117958;
				float3 temp_output_279_0_g117958 = Input_Position9197_g117895;
				half3 WorldPosition238_g117958 = temp_output_279_0_g117958;
				half4 localSamplePlanar2D238_g117958 = SamplePlanar2D( Texture238_g117958 , Sampler238_g117958 , Coords238_g117958 , WorldPosition238_g117958 );
				TEXTURE2D(Texture246_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler246_g117958 = SS19_g117998;
				half4 Coords246_g117958 = temp_output_37_0_g117958;
				half3 WorldPosition246_g117958 = temp_output_279_0_g117958;
				float3 temp_output_280_0_g117958 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117958 = temp_output_280_0_g117958;
				half4 localSamplePlanar3D246_g117958 = SamplePlanar3D( Texture246_g117958 , Sampler246_g117958 , Coords246_g117958 , WorldPosition246_g117958 , WorldNormal246_g117958 );
				TEXTURE2D(Texture234_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler234_g117958 = SS19_g117998;
				float4 Coords234_g117958 = temp_output_37_0_g117958;
				float3 WorldPosition234_g117958 = temp_output_279_0_g117958;
				float4 localSampleStochastic2D234_g117958 = SampleStochastic2D( Texture234_g117958 , Sampler234_g117958 , Coords234_g117958 , WorldPosition234_g117958 );
				TEXTURE2D(Texture263_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler263_g117958 = SS19_g117998;
				half4 Coords263_g117958 = temp_output_37_0_g117958;
				half3 WorldPosition263_g117958 = temp_output_279_0_g117958;
				half3 WorldNormal263_g117958 = temp_output_280_0_g117958;
				half4 localSampleStochastic3D263_g117958 = SampleStochastic3D( Texture263_g117958 , Sampler263_g117958 , Coords263_g117958 , WorldPosition263_g117958 , WorldNormal263_g117958 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8874_g117895 = localSamplePlanar2D238_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8874_g117895 = localSamplePlanar3D246_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8874_g117895 = localSampleStochastic2D234_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8874_g117895 = localSampleStochastic3D263_g117958;
				#else
				float4 staticSwitch8874_g117895 = localSamplePlanar2D238_g117958;
				#endif
				half4 Layer338_g117917 = staticSwitch8874_g117895;
				TEXTURE2D(Texture238_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler238_g117959 = SS19_g117998;
				float4 temp_output_37_0_g117959 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117959 = temp_output_37_0_g117959;
				float3 temp_output_279_0_g117959 = Input_Position9197_g117895;
				half3 WorldPosition238_g117959 = temp_output_279_0_g117959;
				half4 localSamplePlanar2D238_g117959 = SamplePlanar2D( Texture238_g117959 , Sampler238_g117959 , Coords238_g117959 , WorldPosition238_g117959 );
				TEXTURE2D(Texture246_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler246_g117959 = SS19_g117998;
				half4 Coords246_g117959 = temp_output_37_0_g117959;
				half3 WorldPosition246_g117959 = temp_output_279_0_g117959;
				float3 temp_output_280_0_g117959 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117959 = temp_output_280_0_g117959;
				half4 localSamplePlanar3D246_g117959 = SamplePlanar3D( Texture246_g117959 , Sampler246_g117959 , Coords246_g117959 , WorldPosition246_g117959 , WorldNormal246_g117959 );
				TEXTURE2D(Texture234_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler234_g117959 = SS19_g117998;
				float4 Coords234_g117959 = temp_output_37_0_g117959;
				float3 WorldPosition234_g117959 = temp_output_279_0_g117959;
				float4 localSampleStochastic2D234_g117959 = SampleStochastic2D( Texture234_g117959 , Sampler234_g117959 , Coords234_g117959 , WorldPosition234_g117959 );
				TEXTURE2D(Texture263_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler263_g117959 = SS19_g117998;
				half4 Coords263_g117959 = temp_output_37_0_g117959;
				half3 WorldPosition263_g117959 = temp_output_279_0_g117959;
				half3 WorldNormal263_g117959 = temp_output_280_0_g117959;
				half4 localSampleStochastic3D263_g117959 = SampleStochastic3D( Texture263_g117959 , Sampler263_g117959 , Coords263_g117959 , WorldPosition263_g117959 , WorldNormal263_g117959 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8875_g117895 = localSamplePlanar2D238_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8875_g117895 = localSamplePlanar3D246_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8875_g117895 = localSampleStochastic2D234_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8875_g117895 = localSampleStochastic3D263_g117959;
				#else
				float4 staticSwitch8875_g117895 = localSamplePlanar2D238_g117959;
				#endif
				half4 Layer439_g117917 = staticSwitch8875_g117895;
				float4 weightedBlendVar31_g117917 = Weights52_g117917;
				float4 weightedBlend31_g117917 = ( weightedBlendVar31_g117917.x*Layer133_g117917 + weightedBlendVar31_g117917.y*Layer237_g117917 + weightedBlendVar31_g117917.z*Layer338_g117917 + weightedBlendVar31_g117917.w*Layer439_g117917 );
				half4 Terrain_AAAA_128851_g117895 = weightedBlend31_g117917;
				half4 Layer_1243_g117903 = Terrain_AAAA_128851_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8795_g117895 = weights_167362_g117895;
				#else
				float4 staticSwitch8795_g117895 = control_167362_g117895;
				#endif
				half4 Terrain_Weights_167709_g117895 = staticSwitch8795_g117895;
				half4 Weights52_g117924 = Terrain_Weights_167709_g117895;
				TEXTURE2D(Texture238_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler238_g117963 = SS19_g117998;
				float4 temp_output_37_0_g117963 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117963 = temp_output_37_0_g117963;
				float3 temp_output_279_0_g117963 = Input_Position9197_g117895;
				half3 WorldPosition238_g117963 = temp_output_279_0_g117963;
				half4 localSamplePlanar2D238_g117963 = SamplePlanar2D( Texture238_g117963 , Sampler238_g117963 , Coords238_g117963 , WorldPosition238_g117963 );
				TEXTURE2D(Texture246_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler246_g117963 = SS19_g117998;
				half4 Coords246_g117963 = temp_output_37_0_g117963;
				half3 WorldPosition246_g117963 = temp_output_279_0_g117963;
				float3 temp_output_280_0_g117963 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117963 = temp_output_280_0_g117963;
				half4 localSamplePlanar3D246_g117963 = SamplePlanar3D( Texture246_g117963 , Sampler246_g117963 , Coords246_g117963 , WorldPosition246_g117963 , WorldNormal246_g117963 );
				TEXTURE2D(Texture234_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler234_g117963 = SS19_g117998;
				float4 Coords234_g117963 = temp_output_37_0_g117963;
				float3 WorldPosition234_g117963 = temp_output_279_0_g117963;
				float4 localSampleStochastic2D234_g117963 = SampleStochastic2D( Texture234_g117963 , Sampler234_g117963 , Coords234_g117963 , WorldPosition234_g117963 );
				TEXTURE2D(Texture263_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler263_g117963 = SS19_g117998;
				half4 Coords263_g117963 = temp_output_37_0_g117963;
				half3 WorldPosition263_g117963 = temp_output_279_0_g117963;
				half3 WorldNormal263_g117963 = temp_output_280_0_g117963;
				half4 localSampleStochastic3D263_g117963 = SampleStochastic3D( Texture263_g117963 , Sampler263_g117963 , Coords263_g117963 , WorldPosition263_g117963 , WorldNormal263_g117963 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8972_g117895 = localSamplePlanar2D238_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8972_g117895 = localSamplePlanar3D246_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8972_g117895 = localSampleStochastic2D234_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8972_g117895 = localSampleStochastic3D263_g117963;
				#else
				float4 staticSwitch8972_g117895 = localSamplePlanar2D238_g117963;
				#endif
				half4 Layer133_g117924 = staticSwitch8972_g117895;
				TEXTURE2D(Texture238_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler238_g117969 = SS19_g117998;
				float4 temp_output_37_0_g117969 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117969 = temp_output_37_0_g117969;
				float3 temp_output_279_0_g117969 = Input_Position9197_g117895;
				half3 WorldPosition238_g117969 = temp_output_279_0_g117969;
				half4 localSamplePlanar2D238_g117969 = SamplePlanar2D( Texture238_g117969 , Sampler238_g117969 , Coords238_g117969 , WorldPosition238_g117969 );
				TEXTURE2D(Texture246_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler246_g117969 = SS19_g117998;
				half4 Coords246_g117969 = temp_output_37_0_g117969;
				half3 WorldPosition246_g117969 = temp_output_279_0_g117969;
				float3 temp_output_280_0_g117969 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117969 = temp_output_280_0_g117969;
				half4 localSamplePlanar3D246_g117969 = SamplePlanar3D( Texture246_g117969 , Sampler246_g117969 , Coords246_g117969 , WorldPosition246_g117969 , WorldNormal246_g117969 );
				TEXTURE2D(Texture234_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler234_g117969 = SS19_g117998;
				float4 Coords234_g117969 = temp_output_37_0_g117969;
				float3 WorldPosition234_g117969 = temp_output_279_0_g117969;
				float4 localSampleStochastic2D234_g117969 = SampleStochastic2D( Texture234_g117969 , Sampler234_g117969 , Coords234_g117969 , WorldPosition234_g117969 );
				TEXTURE2D(Texture263_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler263_g117969 = SS19_g117998;
				half4 Coords263_g117969 = temp_output_37_0_g117969;
				half3 WorldPosition263_g117969 = temp_output_279_0_g117969;
				half3 WorldNormal263_g117969 = temp_output_280_0_g117969;
				half4 localSampleStochastic3D263_g117969 = SampleStochastic3D( Texture263_g117969 , Sampler263_g117969 , Coords263_g117969 , WorldPosition263_g117969 , WorldNormal263_g117969 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8973_g117895 = localSamplePlanar2D238_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8973_g117895 = localSamplePlanar3D246_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8973_g117895 = localSampleStochastic2D234_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8973_g117895 = localSampleStochastic3D263_g117969;
				#else
				float4 staticSwitch8973_g117895 = localSamplePlanar2D238_g117969;
				#endif
				half4 Layer237_g117924 = staticSwitch8973_g117895;
				TEXTURE2D(Texture238_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler238_g117970 = SS19_g117998;
				float4 temp_output_37_0_g117970 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117970 = temp_output_37_0_g117970;
				float3 temp_output_279_0_g117970 = Input_Position9197_g117895;
				half3 WorldPosition238_g117970 = temp_output_279_0_g117970;
				half4 localSamplePlanar2D238_g117970 = SamplePlanar2D( Texture238_g117970 , Sampler238_g117970 , Coords238_g117970 , WorldPosition238_g117970 );
				TEXTURE2D(Texture246_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler246_g117970 = SS19_g117998;
				half4 Coords246_g117970 = temp_output_37_0_g117970;
				half3 WorldPosition246_g117970 = temp_output_279_0_g117970;
				float3 temp_output_280_0_g117970 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117970 = temp_output_280_0_g117970;
				half4 localSamplePlanar3D246_g117970 = SamplePlanar3D( Texture246_g117970 , Sampler246_g117970 , Coords246_g117970 , WorldPosition246_g117970 , WorldNormal246_g117970 );
				TEXTURE2D(Texture234_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler234_g117970 = SS19_g117998;
				float4 Coords234_g117970 = temp_output_37_0_g117970;
				float3 WorldPosition234_g117970 = temp_output_279_0_g117970;
				float4 localSampleStochastic2D234_g117970 = SampleStochastic2D( Texture234_g117970 , Sampler234_g117970 , Coords234_g117970 , WorldPosition234_g117970 );
				TEXTURE2D(Texture263_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler263_g117970 = SS19_g117998;
				half4 Coords263_g117970 = temp_output_37_0_g117970;
				half3 WorldPosition263_g117970 = temp_output_279_0_g117970;
				half3 WorldNormal263_g117970 = temp_output_280_0_g117970;
				half4 localSampleStochastic3D263_g117970 = SampleStochastic3D( Texture263_g117970 , Sampler263_g117970 , Coords263_g117970 , WorldPosition263_g117970 , WorldNormal263_g117970 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8974_g117895 = localSamplePlanar2D238_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8974_g117895 = localSamplePlanar3D246_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8974_g117895 = localSampleStochastic2D234_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8974_g117895 = localSampleStochastic3D263_g117970;
				#else
				float4 staticSwitch8974_g117895 = localSamplePlanar2D238_g117970;
				#endif
				half4 Layer338_g117924 = staticSwitch8974_g117895;
				TEXTURE2D(Texture238_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler238_g117971 = SS19_g117998;
				float4 temp_output_37_0_g117971 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117971 = temp_output_37_0_g117971;
				float3 temp_output_279_0_g117971 = Input_Position9197_g117895;
				half3 WorldPosition238_g117971 = temp_output_279_0_g117971;
				half4 localSamplePlanar2D238_g117971 = SamplePlanar2D( Texture238_g117971 , Sampler238_g117971 , Coords238_g117971 , WorldPosition238_g117971 );
				TEXTURE2D(Texture246_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler246_g117971 = SS19_g117998;
				half4 Coords246_g117971 = temp_output_37_0_g117971;
				half3 WorldPosition246_g117971 = temp_output_279_0_g117971;
				float3 temp_output_280_0_g117971 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117971 = temp_output_280_0_g117971;
				half4 localSamplePlanar3D246_g117971 = SamplePlanar3D( Texture246_g117971 , Sampler246_g117971 , Coords246_g117971 , WorldPosition246_g117971 , WorldNormal246_g117971 );
				TEXTURE2D(Texture234_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler234_g117971 = SS19_g117998;
				float4 Coords234_g117971 = temp_output_37_0_g117971;
				float3 WorldPosition234_g117971 = temp_output_279_0_g117971;
				float4 localSampleStochastic2D234_g117971 = SampleStochastic2D( Texture234_g117971 , Sampler234_g117971 , Coords234_g117971 , WorldPosition234_g117971 );
				TEXTURE2D(Texture263_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler263_g117971 = SS19_g117998;
				half4 Coords263_g117971 = temp_output_37_0_g117971;
				half3 WorldPosition263_g117971 = temp_output_279_0_g117971;
				half3 WorldNormal263_g117971 = temp_output_280_0_g117971;
				half4 localSampleStochastic3D263_g117971 = SampleStochastic3D( Texture263_g117971 , Sampler263_g117971 , Coords263_g117971 , WorldPosition263_g117971 , WorldNormal263_g117971 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8975_g117895 = localSamplePlanar2D238_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8975_g117895 = localSamplePlanar3D246_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8975_g117895 = localSampleStochastic2D234_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8975_g117895 = localSampleStochastic3D263_g117971;
				#else
				float4 staticSwitch8975_g117895 = localSamplePlanar2D238_g117971;
				#endif
				half4 Layer439_g117924 = staticSwitch8975_g117895;
				float4 weightedBlendVar31_g117924 = Weights52_g117924;
				float4 weightedBlend31_g117924 = ( weightedBlendVar31_g117924.x*Layer133_g117924 + weightedBlendVar31_g117924.y*Layer237_g117924 + weightedBlendVar31_g117924.z*Layer338_g117924 + weightedBlendVar31_g117924.w*Layer439_g117924 );
				half4 Terrain_AAAA_168986_g117895 = weightedBlend31_g117924;
				half4 Layer_1644_g117903 = Terrain_AAAA_168986_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117903 = Layer_045_g117903;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 + Layer_1243_g117903 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 + Layer_1243_g117903 + Layer_1644_g117903 );
				#else
				float4 staticSwitch40_g117903 = Layer_045_g117903;
				#endif
				half4 Blend_Albedo7468_g117895 = staticSwitch40_g117903;
				half4 Weights52_g117989 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117989 = _TerrainColor1;
				half4 Layer237_g117989 = _TerrainColor2;
				half4 Layer338_g117989 = _TerrainColor3;
				half4 Layer439_g117989 = _TerrainColor4;
				float4 weightedBlendVar31_g117989 = Weights52_g117989;
				float4 weightedBlend31_g117989 = ( weightedBlendVar31_g117989.x*Layer133_g117989 + weightedBlendVar31_g117989.y*Layer237_g117989 + weightedBlendVar31_g117989.z*Layer338_g117989 + weightedBlendVar31_g117989.w*Layer439_g117989 );
				half4 Terrain_Color_049349_g117895 = weightedBlend31_g117989;
				half4 Layer_045_g117994 = Terrain_Color_049349_g117895;
				half4 Weights52_g117990 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117990 = _TerrainColor5;
				half4 Layer237_g117990 = _TerrainColor6;
				half4 Layer338_g117990 = _TerrainColor7;
				half4 Layer439_g117990 = _TerrainColor8;
				float4 weightedBlendVar31_g117990 = Weights52_g117990;
				float4 weightedBlend31_g117990 = ( weightedBlendVar31_g117990.x*Layer133_g117990 + weightedBlendVar31_g117990.y*Layer237_g117990 + weightedBlendVar31_g117990.z*Layer338_g117990 + weightedBlendVar31_g117990.w*Layer439_g117990 );
				half4 Terrain_Color_089361_g117895 = weightedBlend31_g117990;
				half4 Layer_0810_g117994 = Terrain_Color_089361_g117895;
				half4 Weights52_g117991 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117991 = _TerrainColor9;
				half4 Layer237_g117991 = _TerrainColor10;
				half4 Layer338_g117991 = _TerrainColor11;
				half4 Layer439_g117991 = _TerrainColor12;
				float4 weightedBlendVar31_g117991 = Weights52_g117991;
				float4 weightedBlend31_g117991 = ( weightedBlendVar31_g117991.x*Layer133_g117991 + weightedBlendVar31_g117991.y*Layer237_g117991 + weightedBlendVar31_g117991.z*Layer338_g117991 + weightedBlendVar31_g117991.w*Layer439_g117991 );
				half4 Terrain_Color_129373_g117895 = weightedBlend31_g117991;
				half4 Layer_1243_g117994 = Terrain_Color_129373_g117895;
				half4 Weights52_g117992 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117992 = _TerrainColor13;
				half4 Layer237_g117992 = _TerrainColor14;
				half4 Layer338_g117992 = _TerrainColor15;
				half4 Layer439_g117992 = _TerrainColor16;
				float4 weightedBlendVar31_g117992 = Weights52_g117992;
				float4 weightedBlend31_g117992 = ( weightedBlendVar31_g117992.x*Layer133_g117992 + weightedBlendVar31_g117992.y*Layer237_g117992 + weightedBlendVar31_g117992.z*Layer338_g117992 + weightedBlendVar31_g117992.w*Layer439_g117992 );
				half4 Terrain_Color_169381_g117895 = weightedBlend31_g117992;
				half4 Layer_1644_g117994 = Terrain_Color_169381_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117994 = Layer_045_g117994;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 + Layer_1243_g117994 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 + Layer_1243_g117994 + Layer_1644_g117994 );
				#else
				float4 staticSwitch40_g117994 = Layer_045_g117994;
				#endif
				half4 Blend_TerrainColor9387_g117895 = staticSwitch40_g117994;
				half3 Final_Albedo9144_g117895 = ( (Blend_Albedo7468_g117895).xyz * (Blend_TerrainColor9387_g117895).rgb * (_TerrainColor).rgb );
				half3 Local_Albedo9199_g117893 = Final_Albedo9144_g117895;
				float3 In_Albedo3_g117894 = Local_Albedo9199_g117893;
				float3 In_AlbedoRaw3_g117894 = Local_Albedo9199_g117893;
				float3 ase_worldTangent = packedInput.ase_texcoord2.xyz;
				float3 ase_worldBitangent = packedInput.ase_texcoord3.xyz;
				float3x3 ase_worldToTangent = float3x3(ase_worldTangent,ase_worldBitangent,ase_worldNormal);
				half4 Weights52_g117896 = Terrain_Weights_046781_g117895;
				TEXTURE2D(Texture238_g117987) = _TerrainNormalTex1;
				float localFilterTexture29_g118002 = ( 0.0 );
				SamplerState SamplerDefault29_g118002 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g118002 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g118002 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g118002 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g118002 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g118002 = SamplerDefault29_g118002;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g118002 = SamplerDefault29_g118002;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g118002 = SamplerPoint29_g118002;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g118002 = SamplerLow29_g118002;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g118002 = SamplerMedium29_g118002;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g118002 = SamplerHigh29_g118002;
				#endif
				SamplerState Sampler238_g117987 = SS29_g118002;
				float4 temp_output_37_0_g117987 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117987 = temp_output_37_0_g117987;
				float3 temp_output_279_0_g117987 = Input_Position9197_g117895;
				half3 WorldPosition238_g117987 = temp_output_279_0_g117987;
				half4 localSamplePlanar2D238_g117987 = SamplePlanar2D( Texture238_g117987 , Sampler238_g117987 , Coords238_g117987 , WorldPosition238_g117987 );
				TEXTURE2D(Texture246_g117987) = _TerrainNormalTex1;
				SamplerState Sampler246_g117987 = SS29_g118002;
				half4 Coords246_g117987 = temp_output_37_0_g117987;
				half3 WorldPosition246_g117987 = temp_output_279_0_g117987;
				float3 temp_output_280_0_g117987 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117987 = temp_output_280_0_g117987;
				half4 localSamplePlanar3D246_g117987 = SamplePlanar3D( Texture246_g117987 , Sampler246_g117987 , Coords246_g117987 , WorldPosition246_g117987 , WorldNormal246_g117987 );
				TEXTURE2D(Texture234_g117987) = _TerrainNormalTex1;
				SamplerState Sampler234_g117987 = SS29_g118002;
				float4 Coords234_g117987 = temp_output_37_0_g117987;
				float3 WorldPosition234_g117987 = temp_output_279_0_g117987;
				float4 localSampleStochastic2D234_g117987 = SampleStochastic2D( Texture234_g117987 , Sampler234_g117987 , Coords234_g117987 , WorldPosition234_g117987 );
				TEXTURE2D(Texture263_g117987) = _TerrainNormalTex1;
				SamplerState Sampler263_g117987 = SS29_g118002;
				half4 Coords263_g117987 = temp_output_37_0_g117987;
				half3 WorldPosition263_g117987 = temp_output_279_0_g117987;
				half3 WorldNormal263_g117987 = temp_output_280_0_g117987;
				half4 localSampleStochastic3D263_g117987 = SampleStochastic3D( Texture263_g117987 , Sampler263_g117987 , Coords263_g117987 , WorldPosition263_g117987 , WorldNormal263_g117987 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8635_g117895 = localSamplePlanar2D238_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8635_g117895 = localSamplePlanar3D246_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8635_g117895 = localSampleStochastic2D234_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8635_g117895 = localSampleStochastic3D263_g117987;
				#else
				float4 staticSwitch8635_g117895 = localSamplePlanar2D238_g117987;
				#endif
				half4 Layer133_g117896 = staticSwitch8635_g117895;
				TEXTURE2D(Texture238_g117943) = _TerrainNormalTex2;
				SamplerState Sampler238_g117943 = SS29_g118002;
				float4 temp_output_37_0_g117943 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117943 = temp_output_37_0_g117943;
				float3 temp_output_279_0_g117943 = Input_Position9197_g117895;
				half3 WorldPosition238_g117943 = temp_output_279_0_g117943;
				half4 localSamplePlanar2D238_g117943 = SamplePlanar2D( Texture238_g117943 , Sampler238_g117943 , Coords238_g117943 , WorldPosition238_g117943 );
				TEXTURE2D(Texture246_g117943) = _TerrainNormalTex2;
				SamplerState Sampler246_g117943 = SS29_g118002;
				half4 Coords246_g117943 = temp_output_37_0_g117943;
				half3 WorldPosition246_g117943 = temp_output_279_0_g117943;
				float3 temp_output_280_0_g117943 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117943 = temp_output_280_0_g117943;
				half4 localSamplePlanar3D246_g117943 = SamplePlanar3D( Texture246_g117943 , Sampler246_g117943 , Coords246_g117943 , WorldPosition246_g117943 , WorldNormal246_g117943 );
				TEXTURE2D(Texture234_g117943) = _TerrainNormalTex2;
				SamplerState Sampler234_g117943 = SS29_g118002;
				float4 Coords234_g117943 = temp_output_37_0_g117943;
				float3 WorldPosition234_g117943 = temp_output_279_0_g117943;
				float4 localSampleStochastic2D234_g117943 = SampleStochastic2D( Texture234_g117943 , Sampler234_g117943 , Coords234_g117943 , WorldPosition234_g117943 );
				TEXTURE2D(Texture263_g117943) = _TerrainNormalTex2;
				SamplerState Sampler263_g117943 = SS29_g118002;
				half4 Coords263_g117943 = temp_output_37_0_g117943;
				half3 WorldPosition263_g117943 = temp_output_279_0_g117943;
				half3 WorldNormal263_g117943 = temp_output_280_0_g117943;
				half4 localSampleStochastic3D263_g117943 = SampleStochastic3D( Texture263_g117943 , Sampler263_g117943 , Coords263_g117943 , WorldPosition263_g117943 , WorldNormal263_g117943 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8636_g117895 = localSamplePlanar2D238_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8636_g117895 = localSamplePlanar3D246_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8636_g117895 = localSampleStochastic2D234_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8636_g117895 = localSampleStochastic3D263_g117943;
				#else
				float4 staticSwitch8636_g117895 = localSamplePlanar2D238_g117943;
				#endif
				half4 Layer237_g117896 = staticSwitch8636_g117895;
				TEXTURE2D(Texture238_g117946) = _TerrainNormalTex3;
				SamplerState Sampler238_g117946 = SS29_g118002;
				float4 temp_output_37_0_g117946 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117946 = temp_output_37_0_g117946;
				float3 temp_output_279_0_g117946 = Input_Position9197_g117895;
				half3 WorldPosition238_g117946 = temp_output_279_0_g117946;
				half4 localSamplePlanar2D238_g117946 = SamplePlanar2D( Texture238_g117946 , Sampler238_g117946 , Coords238_g117946 , WorldPosition238_g117946 );
				TEXTURE2D(Texture246_g117946) = _TerrainNormalTex3;
				SamplerState Sampler246_g117946 = SS29_g118002;
				half4 Coords246_g117946 = temp_output_37_0_g117946;
				half3 WorldPosition246_g117946 = temp_output_279_0_g117946;
				float3 temp_output_280_0_g117946 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117946 = temp_output_280_0_g117946;
				half4 localSamplePlanar3D246_g117946 = SamplePlanar3D( Texture246_g117946 , Sampler246_g117946 , Coords246_g117946 , WorldPosition246_g117946 , WorldNormal246_g117946 );
				TEXTURE2D(Texture234_g117946) = _TerrainNormalTex3;
				SamplerState Sampler234_g117946 = SS29_g118002;
				float4 Coords234_g117946 = temp_output_37_0_g117946;
				float3 WorldPosition234_g117946 = temp_output_279_0_g117946;
				float4 localSampleStochastic2D234_g117946 = SampleStochastic2D( Texture234_g117946 , Sampler234_g117946 , Coords234_g117946 , WorldPosition234_g117946 );
				TEXTURE2D(Texture263_g117946) = _TerrainNormalTex3;
				SamplerState Sampler263_g117946 = SS29_g118002;
				half4 Coords263_g117946 = temp_output_37_0_g117946;
				half3 WorldPosition263_g117946 = temp_output_279_0_g117946;
				half3 WorldNormal263_g117946 = temp_output_280_0_g117946;
				half4 localSampleStochastic3D263_g117946 = SampleStochastic3D( Texture263_g117946 , Sampler263_g117946 , Coords263_g117946 , WorldPosition263_g117946 , WorldNormal263_g117946 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8637_g117895 = localSamplePlanar2D238_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8637_g117895 = localSamplePlanar3D246_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8637_g117895 = localSampleStochastic2D234_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8637_g117895 = localSampleStochastic3D263_g117946;
				#else
				float4 staticSwitch8637_g117895 = localSamplePlanar2D238_g117946;
				#endif
				half4 Layer338_g117896 = staticSwitch8637_g117895;
				TEXTURE2D(Texture238_g117948) = _TerrainNormalTex4;
				SamplerState Sampler238_g117948 = SS29_g118002;
				float4 temp_output_37_0_g117948 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117948 = temp_output_37_0_g117948;
				float3 temp_output_279_0_g117948 = Input_Position9197_g117895;
				half3 WorldPosition238_g117948 = temp_output_279_0_g117948;
				half4 localSamplePlanar2D238_g117948 = SamplePlanar2D( Texture238_g117948 , Sampler238_g117948 , Coords238_g117948 , WorldPosition238_g117948 );
				TEXTURE2D(Texture246_g117948) = _TerrainNormalTex4;
				SamplerState Sampler246_g117948 = SS29_g118002;
				half4 Coords246_g117948 = temp_output_37_0_g117948;
				half3 WorldPosition246_g117948 = temp_output_279_0_g117948;
				float3 temp_output_280_0_g117948 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117948 = temp_output_280_0_g117948;
				half4 localSamplePlanar3D246_g117948 = SamplePlanar3D( Texture246_g117948 , Sampler246_g117948 , Coords246_g117948 , WorldPosition246_g117948 , WorldNormal246_g117948 );
				TEXTURE2D(Texture234_g117948) = _TerrainNormalTex4;
				SamplerState Sampler234_g117948 = SS29_g118002;
				float4 Coords234_g117948 = temp_output_37_0_g117948;
				float3 WorldPosition234_g117948 = temp_output_279_0_g117948;
				float4 localSampleStochastic2D234_g117948 = SampleStochastic2D( Texture234_g117948 , Sampler234_g117948 , Coords234_g117948 , WorldPosition234_g117948 );
				TEXTURE2D(Texture263_g117948) = _TerrainNormalTex4;
				SamplerState Sampler263_g117948 = SS29_g118002;
				half4 Coords263_g117948 = temp_output_37_0_g117948;
				half3 WorldPosition263_g117948 = temp_output_279_0_g117948;
				half3 WorldNormal263_g117948 = temp_output_280_0_g117948;
				half4 localSampleStochastic3D263_g117948 = SampleStochastic3D( Texture263_g117948 , Sampler263_g117948 , Coords263_g117948 , WorldPosition263_g117948 , WorldNormal263_g117948 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8638_g117895 = localSamplePlanar2D238_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8638_g117895 = localSamplePlanar3D246_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8638_g117895 = localSampleStochastic2D234_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8638_g117895 = localSampleStochastic3D263_g117948;
				#else
				float4 staticSwitch8638_g117895 = localSamplePlanar2D238_g117948;
				#endif
				half4 Layer439_g117896 = staticSwitch8638_g117895;
				float4 weightedBlendVar31_g117896 = Weights52_g117896;
				float4 weightedBlend31_g117896 = ( weightedBlendVar31_g117896.x*Layer133_g117896 + weightedBlendVar31_g117896.y*Layer237_g117896 + weightedBlendVar31_g117896.z*Layer338_g117896 + weightedBlendVar31_g117896.w*Layer439_g117896 );
				half4 Terrain_B_047202_g117895 = weightedBlend31_g117896;
				half4 Layer_045_g117902 = Terrain_B_047202_g117895;
				half4 Weights52_g117911 = Terrain_Weights_087340_g117895;
				TEXTURE2D(Texture238_g117952) = _TerrainNormalTex5;
				SamplerState Sampler238_g117952 = SS29_g118002;
				float4 temp_output_37_0_g117952 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117952 = temp_output_37_0_g117952;
				float3 temp_output_279_0_g117952 = Input_Position9197_g117895;
				half3 WorldPosition238_g117952 = temp_output_279_0_g117952;
				half4 localSamplePlanar2D238_g117952 = SamplePlanar2D( Texture238_g117952 , Sampler238_g117952 , Coords238_g117952 , WorldPosition238_g117952 );
				TEXTURE2D(Texture246_g117952) = _TerrainNormalTex5;
				SamplerState Sampler246_g117952 = SS29_g118002;
				half4 Coords246_g117952 = temp_output_37_0_g117952;
				half3 WorldPosition246_g117952 = temp_output_279_0_g117952;
				float3 temp_output_280_0_g117952 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117952 = temp_output_280_0_g117952;
				half4 localSamplePlanar3D246_g117952 = SamplePlanar3D( Texture246_g117952 , Sampler246_g117952 , Coords246_g117952 , WorldPosition246_g117952 , WorldNormal246_g117952 );
				TEXTURE2D(Texture234_g117952) = _TerrainNormalTex5;
				SamplerState Sampler234_g117952 = SS29_g118002;
				float4 Coords234_g117952 = temp_output_37_0_g117952;
				float3 WorldPosition234_g117952 = temp_output_279_0_g117952;
				float4 localSampleStochastic2D234_g117952 = SampleStochastic2D( Texture234_g117952 , Sampler234_g117952 , Coords234_g117952 , WorldPosition234_g117952 );
				TEXTURE2D(Texture263_g117952) = _TerrainNormalTex5;
				SamplerState Sampler263_g117952 = SS29_g118002;
				half4 Coords263_g117952 = temp_output_37_0_g117952;
				half3 WorldPosition263_g117952 = temp_output_279_0_g117952;
				half3 WorldNormal263_g117952 = temp_output_280_0_g117952;
				half4 localSampleStochastic3D263_g117952 = SampleStochastic3D( Texture263_g117952 , Sampler263_g117952 , Coords263_g117952 , WorldPosition263_g117952 , WorldNormal263_g117952 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8686_g117895 = localSamplePlanar2D238_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8686_g117895 = localSamplePlanar3D246_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8686_g117895 = localSampleStochastic2D234_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8686_g117895 = localSampleStochastic3D263_g117952;
				#else
				float4 staticSwitch8686_g117895 = localSamplePlanar2D238_g117952;
				#endif
				half4 Layer133_g117911 = staticSwitch8686_g117895;
				TEXTURE2D(Texture238_g117981) = _TerrainNormalTex6;
				SamplerState Sampler238_g117981 = SS29_g118002;
				float4 temp_output_37_0_g117981 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117981 = temp_output_37_0_g117981;
				float3 temp_output_279_0_g117981 = Input_Position9197_g117895;
				half3 WorldPosition238_g117981 = temp_output_279_0_g117981;
				half4 localSamplePlanar2D238_g117981 = SamplePlanar2D( Texture238_g117981 , Sampler238_g117981 , Coords238_g117981 , WorldPosition238_g117981 );
				TEXTURE2D(Texture246_g117981) = _TerrainNormalTex6;
				SamplerState Sampler246_g117981 = SS29_g118002;
				half4 Coords246_g117981 = temp_output_37_0_g117981;
				half3 WorldPosition246_g117981 = temp_output_279_0_g117981;
				float3 temp_output_280_0_g117981 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117981 = temp_output_280_0_g117981;
				half4 localSamplePlanar3D246_g117981 = SamplePlanar3D( Texture246_g117981 , Sampler246_g117981 , Coords246_g117981 , WorldPosition246_g117981 , WorldNormal246_g117981 );
				TEXTURE2D(Texture234_g117981) = _TerrainNormalTex6;
				SamplerState Sampler234_g117981 = SS29_g118002;
				float4 Coords234_g117981 = temp_output_37_0_g117981;
				float3 WorldPosition234_g117981 = temp_output_279_0_g117981;
				float4 localSampleStochastic2D234_g117981 = SampleStochastic2D( Texture234_g117981 , Sampler234_g117981 , Coords234_g117981 , WorldPosition234_g117981 );
				TEXTURE2D(Texture263_g117981) = _TerrainNormalTex6;
				SamplerState Sampler263_g117981 = SS29_g118002;
				half4 Coords263_g117981 = temp_output_37_0_g117981;
				half3 WorldPosition263_g117981 = temp_output_279_0_g117981;
				half3 WorldNormal263_g117981 = temp_output_280_0_g117981;
				half4 localSampleStochastic3D263_g117981 = SampleStochastic3D( Texture263_g117981 , Sampler263_g117981 , Coords263_g117981 , WorldPosition263_g117981 , WorldNormal263_g117981 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8687_g117895 = localSamplePlanar2D238_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8687_g117895 = localSamplePlanar3D246_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8687_g117895 = localSampleStochastic2D234_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8687_g117895 = localSampleStochastic3D263_g117981;
				#else
				float4 staticSwitch8687_g117895 = localSamplePlanar2D238_g117981;
				#endif
				half4 Layer237_g117911 = staticSwitch8687_g117895;
				TEXTURE2D(Texture238_g117982) = _TerrainNormalTex7;
				SamplerState Sampler238_g117982 = SS29_g118002;
				float4 temp_output_37_0_g117982 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117982 = temp_output_37_0_g117982;
				float3 temp_output_279_0_g117982 = Input_Position9197_g117895;
				half3 WorldPosition238_g117982 = temp_output_279_0_g117982;
				half4 localSamplePlanar2D238_g117982 = SamplePlanar2D( Texture238_g117982 , Sampler238_g117982 , Coords238_g117982 , WorldPosition238_g117982 );
				TEXTURE2D(Texture246_g117982) = _TerrainNormalTex7;
				SamplerState Sampler246_g117982 = SS29_g118002;
				half4 Coords246_g117982 = temp_output_37_0_g117982;
				half3 WorldPosition246_g117982 = temp_output_279_0_g117982;
				float3 temp_output_280_0_g117982 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117982 = temp_output_280_0_g117982;
				half4 localSamplePlanar3D246_g117982 = SamplePlanar3D( Texture246_g117982 , Sampler246_g117982 , Coords246_g117982 , WorldPosition246_g117982 , WorldNormal246_g117982 );
				TEXTURE2D(Texture234_g117982) = _TerrainNormalTex7;
				SamplerState Sampler234_g117982 = SS29_g118002;
				float4 Coords234_g117982 = temp_output_37_0_g117982;
				float3 WorldPosition234_g117982 = temp_output_279_0_g117982;
				float4 localSampleStochastic2D234_g117982 = SampleStochastic2D( Texture234_g117982 , Sampler234_g117982 , Coords234_g117982 , WorldPosition234_g117982 );
				TEXTURE2D(Texture263_g117982) = _TerrainNormalTex7;
				SamplerState Sampler263_g117982 = SS29_g118002;
				half4 Coords263_g117982 = temp_output_37_0_g117982;
				half3 WorldPosition263_g117982 = temp_output_279_0_g117982;
				half3 WorldNormal263_g117982 = temp_output_280_0_g117982;
				half4 localSampleStochastic3D263_g117982 = SampleStochastic3D( Texture263_g117982 , Sampler263_g117982 , Coords263_g117982 , WorldPosition263_g117982 , WorldNormal263_g117982 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8688_g117895 = localSamplePlanar2D238_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8688_g117895 = localSamplePlanar3D246_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8688_g117895 = localSampleStochastic2D234_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8688_g117895 = localSampleStochastic3D263_g117982;
				#else
				float4 staticSwitch8688_g117895 = localSamplePlanar2D238_g117982;
				#endif
				half4 Layer338_g117911 = staticSwitch8688_g117895;
				TEXTURE2D(Texture238_g117983) = _TerrainNormalTex8;
				SamplerState Sampler238_g117983 = SS29_g118002;
				float4 temp_output_37_0_g117983 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117983 = temp_output_37_0_g117983;
				float3 temp_output_279_0_g117983 = Input_Position9197_g117895;
				half3 WorldPosition238_g117983 = temp_output_279_0_g117983;
				half4 localSamplePlanar2D238_g117983 = SamplePlanar2D( Texture238_g117983 , Sampler238_g117983 , Coords238_g117983 , WorldPosition238_g117983 );
				TEXTURE2D(Texture246_g117983) = _TerrainNormalTex8;
				SamplerState Sampler246_g117983 = SS29_g118002;
				half4 Coords246_g117983 = temp_output_37_0_g117983;
				half3 WorldPosition246_g117983 = temp_output_279_0_g117983;
				float3 temp_output_280_0_g117983 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117983 = temp_output_280_0_g117983;
				half4 localSamplePlanar3D246_g117983 = SamplePlanar3D( Texture246_g117983 , Sampler246_g117983 , Coords246_g117983 , WorldPosition246_g117983 , WorldNormal246_g117983 );
				TEXTURE2D(Texture234_g117983) = _TerrainNormalTex8;
				SamplerState Sampler234_g117983 = SS29_g118002;
				float4 Coords234_g117983 = temp_output_37_0_g117983;
				float3 WorldPosition234_g117983 = temp_output_279_0_g117983;
				float4 localSampleStochastic2D234_g117983 = SampleStochastic2D( Texture234_g117983 , Sampler234_g117983 , Coords234_g117983 , WorldPosition234_g117983 );
				TEXTURE2D(Texture263_g117983) = _TerrainNormalTex8;
				SamplerState Sampler263_g117983 = SS29_g118002;
				half4 Coords263_g117983 = temp_output_37_0_g117983;
				half3 WorldPosition263_g117983 = temp_output_279_0_g117983;
				half3 WorldNormal263_g117983 = temp_output_280_0_g117983;
				half4 localSampleStochastic3D263_g117983 = SampleStochastic3D( Texture263_g117983 , Sampler263_g117983 , Coords263_g117983 , WorldPosition263_g117983 , WorldNormal263_g117983 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8689_g117895 = localSamplePlanar2D238_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8689_g117895 = localSamplePlanar3D246_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8689_g117895 = localSampleStochastic2D234_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8689_g117895 = localSampleStochastic3D263_g117983;
				#else
				float4 staticSwitch8689_g117895 = localSamplePlanar2D238_g117983;
				#endif
				half4 Layer439_g117911 = staticSwitch8689_g117895;
				float4 weightedBlendVar31_g117911 = Weights52_g117911;
				float4 weightedBlend31_g117911 = ( weightedBlendVar31_g117911.x*Layer133_g117911 + weightedBlendVar31_g117911.y*Layer237_g117911 + weightedBlendVar31_g117911.z*Layer338_g117911 + weightedBlendVar31_g117911.w*Layer439_g117911 );
				half4 Terrain_B_088684_g117895 = weightedBlend31_g117911;
				half4 Layer_0810_g117902 = Terrain_B_088684_g117895;
				half4 Weights52_g117918 = Terrain_Weights_127710_g117895;
				TEXTURE2D(Texture238_g117955) = _TerrainNormalTex9;
				SamplerState Sampler238_g117955 = SS29_g118002;
				float4 temp_output_37_0_g117955 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117955 = temp_output_37_0_g117955;
				float3 temp_output_279_0_g117955 = Input_Position9197_g117895;
				half3 WorldPosition238_g117955 = temp_output_279_0_g117955;
				half4 localSamplePlanar2D238_g117955 = SamplePlanar2D( Texture238_g117955 , Sampler238_g117955 , Coords238_g117955 , WorldPosition238_g117955 );
				TEXTURE2D(Texture246_g117955) = _TerrainNormalTex9;
				SamplerState Sampler246_g117955 = SS29_g118002;
				half4 Coords246_g117955 = temp_output_37_0_g117955;
				half3 WorldPosition246_g117955 = temp_output_279_0_g117955;
				float3 temp_output_280_0_g117955 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117955 = temp_output_280_0_g117955;
				half4 localSamplePlanar3D246_g117955 = SamplePlanar3D( Texture246_g117955 , Sampler246_g117955 , Coords246_g117955 , WorldPosition246_g117955 , WorldNormal246_g117955 );
				TEXTURE2D(Texture234_g117955) = _TerrainNormalTex9;
				SamplerState Sampler234_g117955 = SS29_g118002;
				float4 Coords234_g117955 = temp_output_37_0_g117955;
				float3 WorldPosition234_g117955 = temp_output_279_0_g117955;
				float4 localSampleStochastic2D234_g117955 = SampleStochastic2D( Texture234_g117955 , Sampler234_g117955 , Coords234_g117955 , WorldPosition234_g117955 );
				TEXTURE2D(Texture263_g117955) = _TerrainNormalTex9;
				SamplerState Sampler263_g117955 = SS29_g118002;
				half4 Coords263_g117955 = temp_output_37_0_g117955;
				half3 WorldPosition263_g117955 = temp_output_279_0_g117955;
				half3 WorldNormal263_g117955 = temp_output_280_0_g117955;
				half4 localSampleStochastic3D263_g117955 = SampleStochastic3D( Texture263_g117955 , Sampler263_g117955 , Coords263_g117955 , WorldPosition263_g117955 , WorldNormal263_g117955 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8849_g117895 = localSamplePlanar2D238_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8849_g117895 = localSamplePlanar3D246_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8849_g117895 = localSampleStochastic2D234_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8849_g117895 = localSampleStochastic3D263_g117955;
				#else
				float4 staticSwitch8849_g117895 = localSamplePlanar2D238_g117955;
				#endif
				half4 Layer133_g117918 = staticSwitch8849_g117895;
				TEXTURE2D(Texture238_g117960) = _TerrainNormalTex10;
				SamplerState Sampler238_g117960 = SS29_g118002;
				float4 temp_output_37_0_g117960 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117960 = temp_output_37_0_g117960;
				float3 temp_output_279_0_g117960 = Input_Position9197_g117895;
				half3 WorldPosition238_g117960 = temp_output_279_0_g117960;
				half4 localSamplePlanar2D238_g117960 = SamplePlanar2D( Texture238_g117960 , Sampler238_g117960 , Coords238_g117960 , WorldPosition238_g117960 );
				TEXTURE2D(Texture246_g117960) = _TerrainNormalTex10;
				SamplerState Sampler246_g117960 = SS29_g118002;
				half4 Coords246_g117960 = temp_output_37_0_g117960;
				half3 WorldPosition246_g117960 = temp_output_279_0_g117960;
				float3 temp_output_280_0_g117960 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117960 = temp_output_280_0_g117960;
				half4 localSamplePlanar3D246_g117960 = SamplePlanar3D( Texture246_g117960 , Sampler246_g117960 , Coords246_g117960 , WorldPosition246_g117960 , WorldNormal246_g117960 );
				TEXTURE2D(Texture234_g117960) = _TerrainNormalTex10;
				SamplerState Sampler234_g117960 = SS29_g118002;
				float4 Coords234_g117960 = temp_output_37_0_g117960;
				float3 WorldPosition234_g117960 = temp_output_279_0_g117960;
				float4 localSampleStochastic2D234_g117960 = SampleStochastic2D( Texture234_g117960 , Sampler234_g117960 , Coords234_g117960 , WorldPosition234_g117960 );
				TEXTURE2D(Texture263_g117960) = _TerrainNormalTex10;
				SamplerState Sampler263_g117960 = SS29_g118002;
				half4 Coords263_g117960 = temp_output_37_0_g117960;
				half3 WorldPosition263_g117960 = temp_output_279_0_g117960;
				half3 WorldNormal263_g117960 = temp_output_280_0_g117960;
				half4 localSampleStochastic3D263_g117960 = SampleStochastic3D( Texture263_g117960 , Sampler263_g117960 , Coords263_g117960 , WorldPosition263_g117960 , WorldNormal263_g117960 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8876_g117895 = localSamplePlanar2D238_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8876_g117895 = localSamplePlanar3D246_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8876_g117895 = localSampleStochastic2D234_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8876_g117895 = localSampleStochastic3D263_g117960;
				#else
				float4 staticSwitch8876_g117895 = localSamplePlanar2D238_g117960;
				#endif
				half4 Layer237_g117918 = staticSwitch8876_g117895;
				TEXTURE2D(Texture238_g117961) = _TerrainNormalTex11;
				SamplerState Sampler238_g117961 = SS29_g118002;
				float4 temp_output_37_0_g117961 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117961 = temp_output_37_0_g117961;
				float3 temp_output_279_0_g117961 = Input_Position9197_g117895;
				half3 WorldPosition238_g117961 = temp_output_279_0_g117961;
				half4 localSamplePlanar2D238_g117961 = SamplePlanar2D( Texture238_g117961 , Sampler238_g117961 , Coords238_g117961 , WorldPosition238_g117961 );
				TEXTURE2D(Texture246_g117961) = _TerrainNormalTex11;
				SamplerState Sampler246_g117961 = SS29_g118002;
				half4 Coords246_g117961 = temp_output_37_0_g117961;
				half3 WorldPosition246_g117961 = temp_output_279_0_g117961;
				float3 temp_output_280_0_g117961 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117961 = temp_output_280_0_g117961;
				half4 localSamplePlanar3D246_g117961 = SamplePlanar3D( Texture246_g117961 , Sampler246_g117961 , Coords246_g117961 , WorldPosition246_g117961 , WorldNormal246_g117961 );
				TEXTURE2D(Texture234_g117961) = _TerrainNormalTex11;
				SamplerState Sampler234_g117961 = SS29_g118002;
				float4 Coords234_g117961 = temp_output_37_0_g117961;
				float3 WorldPosition234_g117961 = temp_output_279_0_g117961;
				float4 localSampleStochastic2D234_g117961 = SampleStochastic2D( Texture234_g117961 , Sampler234_g117961 , Coords234_g117961 , WorldPosition234_g117961 );
				TEXTURE2D(Texture263_g117961) = _TerrainNormalTex11;
				SamplerState Sampler263_g117961 = SS29_g118002;
				half4 Coords263_g117961 = temp_output_37_0_g117961;
				half3 WorldPosition263_g117961 = temp_output_279_0_g117961;
				half3 WorldNormal263_g117961 = temp_output_280_0_g117961;
				half4 localSampleStochastic3D263_g117961 = SampleStochastic3D( Texture263_g117961 , Sampler263_g117961 , Coords263_g117961 , WorldPosition263_g117961 , WorldNormal263_g117961 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8850_g117895 = localSamplePlanar2D238_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8850_g117895 = localSamplePlanar3D246_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8850_g117895 = localSampleStochastic2D234_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8850_g117895 = localSampleStochastic3D263_g117961;
				#else
				float4 staticSwitch8850_g117895 = localSamplePlanar2D238_g117961;
				#endif
				half4 Layer338_g117918 = staticSwitch8850_g117895;
				TEXTURE2D(Texture238_g117962) = _TerrainNormalTex12;
				SamplerState Sampler238_g117962 = SS29_g118002;
				float4 temp_output_37_0_g117962 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117962 = temp_output_37_0_g117962;
				float3 temp_output_279_0_g117962 = Input_Position9197_g117895;
				half3 WorldPosition238_g117962 = temp_output_279_0_g117962;
				half4 localSamplePlanar2D238_g117962 = SamplePlanar2D( Texture238_g117962 , Sampler238_g117962 , Coords238_g117962 , WorldPosition238_g117962 );
				TEXTURE2D(Texture246_g117962) = _TerrainNormalTex12;
				SamplerState Sampler246_g117962 = SS29_g118002;
				half4 Coords246_g117962 = temp_output_37_0_g117962;
				half3 WorldPosition246_g117962 = temp_output_279_0_g117962;
				float3 temp_output_280_0_g117962 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117962 = temp_output_280_0_g117962;
				half4 localSamplePlanar3D246_g117962 = SamplePlanar3D( Texture246_g117962 , Sampler246_g117962 , Coords246_g117962 , WorldPosition246_g117962 , WorldNormal246_g117962 );
				TEXTURE2D(Texture234_g117962) = _TerrainNormalTex12;
				SamplerState Sampler234_g117962 = SS29_g118002;
				float4 Coords234_g117962 = temp_output_37_0_g117962;
				float3 WorldPosition234_g117962 = temp_output_279_0_g117962;
				float4 localSampleStochastic2D234_g117962 = SampleStochastic2D( Texture234_g117962 , Sampler234_g117962 , Coords234_g117962 , WorldPosition234_g117962 );
				TEXTURE2D(Texture263_g117962) = _TerrainNormalTex12;
				SamplerState Sampler263_g117962 = SS29_g118002;
				half4 Coords263_g117962 = temp_output_37_0_g117962;
				half3 WorldPosition263_g117962 = temp_output_279_0_g117962;
				half3 WorldNormal263_g117962 = temp_output_280_0_g117962;
				half4 localSampleStochastic3D263_g117962 = SampleStochastic3D( Texture263_g117962 , Sampler263_g117962 , Coords263_g117962 , WorldPosition263_g117962 , WorldNormal263_g117962 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8877_g117895 = localSamplePlanar2D238_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8877_g117895 = localSamplePlanar3D246_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8877_g117895 = localSampleStochastic2D234_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8877_g117895 = localSampleStochastic3D263_g117962;
				#else
				float4 staticSwitch8877_g117895 = localSamplePlanar2D238_g117962;
				#endif
				half4 Layer439_g117918 = staticSwitch8877_g117895;
				float4 weightedBlendVar31_g117918 = Weights52_g117918;
				float4 weightedBlend31_g117918 = ( weightedBlendVar31_g117918.x*Layer133_g117918 + weightedBlendVar31_g117918.y*Layer237_g117918 + weightedBlendVar31_g117918.z*Layer338_g117918 + weightedBlendVar31_g117918.w*Layer439_g117918 );
				half4 Terrain_B_128865_g117895 = weightedBlend31_g117918;
				half4 Layer_1243_g117902 = Terrain_B_128865_g117895;
				half4 Weights52_g117925 = Terrain_Weights_167709_g117895;
				TEXTURE2D(Texture238_g117965) = _TerrainNormalTex13;
				SamplerState Sampler238_g117965 = SS29_g118002;
				float4 temp_output_37_0_g117965 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117965 = temp_output_37_0_g117965;
				float3 temp_output_279_0_g117965 = Input_Position9197_g117895;
				half3 WorldPosition238_g117965 = temp_output_279_0_g117965;
				half4 localSamplePlanar2D238_g117965 = SamplePlanar2D( Texture238_g117965 , Sampler238_g117965 , Coords238_g117965 , WorldPosition238_g117965 );
				TEXTURE2D(Texture246_g117965) = _TerrainNormalTex13;
				SamplerState Sampler246_g117965 = SS29_g118002;
				half4 Coords246_g117965 = temp_output_37_0_g117965;
				half3 WorldPosition246_g117965 = temp_output_279_0_g117965;
				float3 temp_output_280_0_g117965 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117965 = temp_output_280_0_g117965;
				half4 localSamplePlanar3D246_g117965 = SamplePlanar3D( Texture246_g117965 , Sampler246_g117965 , Coords246_g117965 , WorldPosition246_g117965 , WorldNormal246_g117965 );
				TEXTURE2D(Texture234_g117965) = _TerrainNormalTex13;
				SamplerState Sampler234_g117965 = SS29_g118002;
				float4 Coords234_g117965 = temp_output_37_0_g117965;
				float3 WorldPosition234_g117965 = temp_output_279_0_g117965;
				float4 localSampleStochastic2D234_g117965 = SampleStochastic2D( Texture234_g117965 , Sampler234_g117965 , Coords234_g117965 , WorldPosition234_g117965 );
				TEXTURE2D(Texture263_g117965) = _TerrainNormalTex13;
				SamplerState Sampler263_g117965 = SS29_g118002;
				half4 Coords263_g117965 = temp_output_37_0_g117965;
				half3 WorldPosition263_g117965 = temp_output_279_0_g117965;
				half3 WorldNormal263_g117965 = temp_output_280_0_g117965;
				half4 localSampleStochastic3D263_g117965 = SampleStochastic3D( Texture263_g117965 , Sampler263_g117965 , Coords263_g117965 , WorldPosition263_g117965 , WorldNormal263_g117965 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8991_g117895 = localSamplePlanar2D238_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8991_g117895 = localSamplePlanar3D246_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8991_g117895 = localSampleStochastic2D234_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8991_g117895 = localSampleStochastic3D263_g117965;
				#else
				float4 staticSwitch8991_g117895 = localSamplePlanar2D238_g117965;
				#endif
				half4 Layer133_g117925 = staticSwitch8991_g117895;
				TEXTURE2D(Texture238_g117972) = _TerrainNormalTex14;
				SamplerState Sampler238_g117972 = SS29_g118002;
				float4 temp_output_37_0_g117972 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117972 = temp_output_37_0_g117972;
				float3 temp_output_279_0_g117972 = Input_Position9197_g117895;
				half3 WorldPosition238_g117972 = temp_output_279_0_g117972;
				half4 localSamplePlanar2D238_g117972 = SamplePlanar2D( Texture238_g117972 , Sampler238_g117972 , Coords238_g117972 , WorldPosition238_g117972 );
				TEXTURE2D(Texture246_g117972) = _TerrainNormalTex14;
				SamplerState Sampler246_g117972 = SS29_g118002;
				half4 Coords246_g117972 = temp_output_37_0_g117972;
				half3 WorldPosition246_g117972 = temp_output_279_0_g117972;
				float3 temp_output_280_0_g117972 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117972 = temp_output_280_0_g117972;
				half4 localSamplePlanar3D246_g117972 = SamplePlanar3D( Texture246_g117972 , Sampler246_g117972 , Coords246_g117972 , WorldPosition246_g117972 , WorldNormal246_g117972 );
				TEXTURE2D(Texture234_g117972) = _TerrainNormalTex14;
				SamplerState Sampler234_g117972 = SS29_g118002;
				float4 Coords234_g117972 = temp_output_37_0_g117972;
				float3 WorldPosition234_g117972 = temp_output_279_0_g117972;
				float4 localSampleStochastic2D234_g117972 = SampleStochastic2D( Texture234_g117972 , Sampler234_g117972 , Coords234_g117972 , WorldPosition234_g117972 );
				TEXTURE2D(Texture263_g117972) = _TerrainNormalTex14;
				SamplerState Sampler263_g117972 = SS29_g118002;
				half4 Coords263_g117972 = temp_output_37_0_g117972;
				half3 WorldPosition263_g117972 = temp_output_279_0_g117972;
				half3 WorldNormal263_g117972 = temp_output_280_0_g117972;
				half4 localSampleStochastic3D263_g117972 = SampleStochastic3D( Texture263_g117972 , Sampler263_g117972 , Coords263_g117972 , WorldPosition263_g117972 , WorldNormal263_g117972 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8990_g117895 = localSamplePlanar2D238_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8990_g117895 = localSamplePlanar3D246_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8990_g117895 = localSampleStochastic2D234_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8990_g117895 = localSampleStochastic3D263_g117972;
				#else
				float4 staticSwitch8990_g117895 = localSamplePlanar2D238_g117972;
				#endif
				half4 Layer237_g117925 = staticSwitch8990_g117895;
				TEXTURE2D(Texture238_g117973) = _TerrainNormalTex15;
				SamplerState Sampler238_g117973 = SS29_g118002;
				float4 temp_output_37_0_g117973 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117973 = temp_output_37_0_g117973;
				float3 temp_output_279_0_g117973 = Input_Position9197_g117895;
				half3 WorldPosition238_g117973 = temp_output_279_0_g117973;
				half4 localSamplePlanar2D238_g117973 = SamplePlanar2D( Texture238_g117973 , Sampler238_g117973 , Coords238_g117973 , WorldPosition238_g117973 );
				TEXTURE2D(Texture246_g117973) = _TerrainNormalTex15;
				SamplerState Sampler246_g117973 = SS29_g118002;
				half4 Coords246_g117973 = temp_output_37_0_g117973;
				half3 WorldPosition246_g117973 = temp_output_279_0_g117973;
				float3 temp_output_280_0_g117973 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117973 = temp_output_280_0_g117973;
				half4 localSamplePlanar3D246_g117973 = SamplePlanar3D( Texture246_g117973 , Sampler246_g117973 , Coords246_g117973 , WorldPosition246_g117973 , WorldNormal246_g117973 );
				TEXTURE2D(Texture234_g117973) = _TerrainNormalTex15;
				SamplerState Sampler234_g117973 = SS29_g118002;
				float4 Coords234_g117973 = temp_output_37_0_g117973;
				float3 WorldPosition234_g117973 = temp_output_279_0_g117973;
				float4 localSampleStochastic2D234_g117973 = SampleStochastic2D( Texture234_g117973 , Sampler234_g117973 , Coords234_g117973 , WorldPosition234_g117973 );
				TEXTURE2D(Texture263_g117973) = _TerrainNormalTex15;
				SamplerState Sampler263_g117973 = SS29_g118002;
				half4 Coords263_g117973 = temp_output_37_0_g117973;
				half3 WorldPosition263_g117973 = temp_output_279_0_g117973;
				half3 WorldNormal263_g117973 = temp_output_280_0_g117973;
				half4 localSampleStochastic3D263_g117973 = SampleStochastic3D( Texture263_g117973 , Sampler263_g117973 , Coords263_g117973 , WorldPosition263_g117973 , WorldNormal263_g117973 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8989_g117895 = localSamplePlanar2D238_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8989_g117895 = localSamplePlanar3D246_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8989_g117895 = localSampleStochastic2D234_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8989_g117895 = localSampleStochastic3D263_g117973;
				#else
				float4 staticSwitch8989_g117895 = localSamplePlanar2D238_g117973;
				#endif
				half4 Layer338_g117925 = staticSwitch8989_g117895;
				TEXTURE2D(Texture238_g117974) = _TerrainNormalTex16;
				SamplerState Sampler238_g117974 = SS29_g118002;
				float4 temp_output_37_0_g117974 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117974 = temp_output_37_0_g117974;
				float3 temp_output_279_0_g117974 = Input_Position9197_g117895;
				half3 WorldPosition238_g117974 = temp_output_279_0_g117974;
				half4 localSamplePlanar2D238_g117974 = SamplePlanar2D( Texture238_g117974 , Sampler238_g117974 , Coords238_g117974 , WorldPosition238_g117974 );
				TEXTURE2D(Texture246_g117974) = _TerrainNormalTex16;
				SamplerState Sampler246_g117974 = SS29_g118002;
				half4 Coords246_g117974 = temp_output_37_0_g117974;
				half3 WorldPosition246_g117974 = temp_output_279_0_g117974;
				float3 temp_output_280_0_g117974 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117974 = temp_output_280_0_g117974;
				half4 localSamplePlanar3D246_g117974 = SamplePlanar3D( Texture246_g117974 , Sampler246_g117974 , Coords246_g117974 , WorldPosition246_g117974 , WorldNormal246_g117974 );
				TEXTURE2D(Texture234_g117974) = _TerrainNormalTex16;
				SamplerState Sampler234_g117974 = SS29_g118002;
				float4 Coords234_g117974 = temp_output_37_0_g117974;
				float3 WorldPosition234_g117974 = temp_output_279_0_g117974;
				float4 localSampleStochastic2D234_g117974 = SampleStochastic2D( Texture234_g117974 , Sampler234_g117974 , Coords234_g117974 , WorldPosition234_g117974 );
				TEXTURE2D(Texture263_g117974) = _TerrainNormalTex16;
				SamplerState Sampler263_g117974 = SS29_g118002;
				half4 Coords263_g117974 = temp_output_37_0_g117974;
				half3 WorldPosition263_g117974 = temp_output_279_0_g117974;
				half3 WorldNormal263_g117974 = temp_output_280_0_g117974;
				half4 localSampleStochastic3D263_g117974 = SampleStochastic3D( Texture263_g117974 , Sampler263_g117974 , Coords263_g117974 , WorldPosition263_g117974 , WorldNormal263_g117974 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8988_g117895 = localSamplePlanar2D238_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8988_g117895 = localSamplePlanar3D246_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8988_g117895 = localSampleStochastic2D234_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8988_g117895 = localSampleStochastic3D263_g117974;
				#else
				float4 staticSwitch8988_g117895 = localSamplePlanar2D238_g117974;
				#endif
				half4 Layer439_g117925 = staticSwitch8988_g117895;
				float4 weightedBlendVar31_g117925 = Weights52_g117925;
				float4 weightedBlend31_g117925 = ( weightedBlendVar31_g117925.x*Layer133_g117925 + weightedBlendVar31_g117925.y*Layer237_g117925 + weightedBlendVar31_g117925.z*Layer338_g117925 + weightedBlendVar31_g117925.w*Layer439_g117925 );
				half4 Terrain_B_168987_g117895 = weightedBlend31_g117925;
				half4 Layer_1644_g117902 = Terrain_B_168987_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117902 = Layer_045_g117902;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 + Layer_1243_g117902 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 + Layer_1243_g117902 + Layer_1644_g117902 );
				#else
				float4 staticSwitch40_g117902 = Layer_045_g117902;
				#endif
				half4 Blend_Normal7512_g117895 = staticSwitch40_g117902;
				half4 Normal_Packed45_g117996 = Blend_Normal7512_g117895;
				float2 appendResult58_g117996 = (float2(( (Normal_Packed45_g117996).x * (Normal_Packed45_g117996).w ) , (Normal_Packed45_g117996).y));
				half2 Normal_Default50_g117996 = appendResult58_g117996;
				half2 Normal_ASTC41_g117996 = (Normal_Packed45_g117996).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g117996 = Normal_ASTC41_g117996;
				#else
				float2 staticSwitch38_g117996 = Normal_Default50_g117996;
				#endif
				half2 Normal_NO_DTX544_g117996 = (Normal_Packed45_g117996).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g117996 = Normal_NO_DTX544_g117996;
				#else
				float2 staticSwitch37_g117996 = staticSwitch38_g117996;
				#endif
				half4 Weights52_g117898 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117898 = temp_output_6970_0_g117895;
				half4 Layer237_g117898 = temp_output_6977_0_g117895;
				half4 Layer338_g117898 = temp_output_6978_0_g117895;
				half4 Layer439_g117898 = temp_output_6983_0_g117895;
				float4 weightedBlendVar31_g117898 = Weights52_g117898;
				float4 weightedBlend31_g117898 = ( weightedBlendVar31_g117898.x*Layer133_g117898 + weightedBlendVar31_g117898.y*Layer237_g117898 + weightedBlendVar31_g117898.z*Layer338_g117898 + weightedBlendVar31_g117898.w*Layer439_g117898 );
				half4 Terrain_Shaders_047203_g117895 = weightedBlend31_g117898;
				half4 Layer_045_g117904 = Terrain_Shaders_047203_g117895;
				half4 Weights52_g117914 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117914 = temp_output_8714_0_g117895;
				half4 Layer237_g117914 = temp_output_8721_0_g117895;
				half4 Layer338_g117914 = temp_output_8724_0_g117895;
				half4 Layer439_g117914 = temp_output_8727_0_g117895;
				float4 weightedBlendVar31_g117914 = Weights52_g117914;
				float4 weightedBlend31_g117914 = ( weightedBlendVar31_g117914.x*Layer133_g117914 + weightedBlendVar31_g117914.y*Layer237_g117914 + weightedBlendVar31_g117914.z*Layer338_g117914 + weightedBlendVar31_g117914.w*Layer439_g117914 );
				half4 Terrain_Shaders_088730_g117895 = weightedBlend31_g117914;
				half4 Layer_0810_g117904 = Terrain_Shaders_088730_g117895;
				half4 Weights52_g117921 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117921 = temp_output_8815_0_g117895;
				half4 Layer237_g117921 = temp_output_8818_0_g117895;
				half4 Layer338_g117921 = temp_output_8819_0_g117895;
				half4 Layer439_g117921 = temp_output_8820_0_g117895;
				float4 weightedBlendVar31_g117921 = Weights52_g117921;
				float4 weightedBlend31_g117921 = ( weightedBlendVar31_g117921.x*Layer133_g117921 + weightedBlendVar31_g117921.y*Layer237_g117921 + weightedBlendVar31_g117921.z*Layer338_g117921 + weightedBlendVar31_g117921.w*Layer439_g117921 );
				half4 Terrain_Shaders_128871_g117895 = weightedBlend31_g117921;
				half4 Layer_1243_g117904 = Terrain_Shaders_128871_g117895;
				half4 Weights52_g117928 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117928 = temp_output_8931_0_g117895;
				half4 Layer237_g117928 = temp_output_8934_0_g117895;
				half4 Layer338_g117928 = temp_output_8935_0_g117895;
				half4 Layer439_g117928 = temp_output_8936_0_g117895;
				float4 weightedBlendVar31_g117928 = Weights52_g117928;
				float4 weightedBlend31_g117928 = ( weightedBlendVar31_g117928.x*Layer133_g117928 + weightedBlendVar31_g117928.y*Layer237_g117928 + weightedBlendVar31_g117928.z*Layer338_g117928 + weightedBlendVar31_g117928.w*Layer439_g117928 );
				half4 Terrain_Shaders_169014_g117895 = weightedBlend31_g117928;
				half4 Layer_1644_g117904 = Terrain_Shaders_169014_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117904 = Layer_045_g117904;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 + Layer_1243_g117904 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 + Layer_1243_g117904 + Layer_1644_g117904 );
				#else
				float4 staticSwitch40_g117904 = Layer_045_g117904;
				#endif
				half4 Blend_Shaders7420_g117895 = staticSwitch40_g117904;
				half4 Normal_Packed45_g117995 = Blend_Shaders7420_g117895;
				half2 Normal_NO_DTX544_g117995 = (Normal_Packed45_g117995).wy;
				#ifdef TVE_TERRAIN_PACKED
				float2 staticSwitch9080_g117895 = (Normal_NO_DTX544_g117995*2.0 + -1.0);
				#else
				float2 staticSwitch9080_g117895 = (staticSwitch37_g117996*2.0 + -1.0);
				#endif
				half4 Weights52_g117899 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117899 = _TerrainParams1;
				half4 Layer237_g117899 = _TerrainParams2;
				half4 Layer338_g117899 = _TerrainParams3;
				half4 Layer439_g117899 = _TerrainParams4;
				float4 weightedBlendVar31_g117899 = Weights52_g117899;
				float4 weightedBlend31_g117899 = ( weightedBlendVar31_g117899.x*Layer133_g117899 + weightedBlendVar31_g117899.y*Layer237_g117899 + weightedBlendVar31_g117899.z*Layer338_g117899 + weightedBlendVar31_g117899.w*Layer439_g117899 );
				half4 Terrain_Params_047533_g117895 = weightedBlend31_g117899;
				half4 Layer_045_g117905 = Terrain_Params_047533_g117895;
				half4 Weights52_g117915 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117915 = _TerrainParams5;
				half4 Layer237_g117915 = _TerrainParams6;
				half4 Layer338_g117915 = _TerrainParams7;
				half4 Layer439_g117915 = _TerrainParams8;
				float4 weightedBlendVar31_g117915 = Weights52_g117915;
				float4 weightedBlend31_g117915 = ( weightedBlendVar31_g117915.x*Layer133_g117915 + weightedBlendVar31_g117915.y*Layer237_g117915 + weightedBlendVar31_g117915.z*Layer338_g117915 + weightedBlendVar31_g117915.w*Layer439_g117915 );
				half4 Terrain_Params_088739_g117895 = weightedBlend31_g117915;
				half4 Layer_0810_g117905 = Terrain_Params_088739_g117895;
				half4 Weights52_g117922 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117922 = _TerrainParams9;
				half4 Layer237_g117922 = _TerrainParams10;
				half4 Layer338_g117922 = _TerrainParams11;
				half4 Layer439_g117922 = _TerrainParams12;
				float4 weightedBlendVar31_g117922 = Weights52_g117922;
				float4 weightedBlend31_g117922 = ( weightedBlendVar31_g117922.x*Layer133_g117922 + weightedBlendVar31_g117922.y*Layer237_g117922 + weightedBlendVar31_g117922.z*Layer338_g117922 + weightedBlendVar31_g117922.w*Layer439_g117922 );
				half4 Terrain_Params_128867_g117895 = weightedBlend31_g117922;
				half4 Layer_1243_g117905 = Terrain_Params_128867_g117895;
				half4 Weights52_g117929 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117929 = _TerrainParams13;
				half4 Layer237_g117929 = _TerrainParams14;
				half4 Layer338_g117929 = _TerrainParams15;
				half4 Layer439_g117929 = _TerrainParams16;
				float4 weightedBlendVar31_g117929 = Weights52_g117929;
				float4 weightedBlend31_g117929 = ( weightedBlendVar31_g117929.x*Layer133_g117929 + weightedBlendVar31_g117929.y*Layer237_g117929 + weightedBlendVar31_g117929.z*Layer338_g117929 + weightedBlendVar31_g117929.w*Layer439_g117929 );
				half4 Terrain_Params_169017_g117895 = weightedBlend31_g117929;
				half4 Layer_1644_g117905 = Terrain_Params_169017_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117905 = Layer_045_g117905;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 + Layer_1243_g117905 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 + Layer_1243_g117905 + Layer_1644_g117905 );
				#else
				float4 staticSwitch40_g117905 = Layer_045_g117905;
				#endif
				half4 Blend_Params7547_g117895 = staticSwitch40_g117905;
				half2 Normal_Planar45_g117997 = ( ( staticSwitch9080_g117895 * (Blend_Params7547_g117895).z ) * _TerrainNormalValue );
				float2 break71_g117997 = Normal_Planar45_g117997;
				float3 appendResult72_g117997 = (float3(break71_g117997.x , 0.0 , break71_g117997.y));
				half2 Final_NormalTS9145_g117895 = (mul( ase_worldToTangent, appendResult72_g117997 )).xy;
				half2 Local_Normal9200_g117893 = Final_NormalTS9145_g117895;
				float2 In_NormalTS3_g117894 = Local_Normal9200_g117893;
				float3 appendResult68_g118005 = (float3(Local_Normal9200_g117893 , 1.0));
				float3 tanToWorld0 = float3( ase_worldTangent.x, ase_worldBitangent.x, ase_worldNormal.x );
				float3 tanToWorld1 = float3( ase_worldTangent.y, ase_worldBitangent.y, ase_worldNormal.y );
				float3 tanToWorld2 = float3( ase_worldTangent.z, ase_worldBitangent.z, ase_worldNormal.z );
				float3 tanNormal74_g118005 = appendResult68_g118005;
				float3 worldNormal74_g118005 = normalize( float3(dot(tanToWorld0,tanNormal74_g118005), dot(tanToWorld1,tanNormal74_g118005), dot(tanToWorld2,tanNormal74_g118005)) );
				float3 In_NormalWS3_g117894 = worldNormal74_g118005;
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9139_g117895 = 0.0;
				#else
				float staticSwitch9139_g117895 = ( (Blend_Shaders7420_g117895).x * (Blend_Params7547_g117895).x * _TerrainMetallicValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9097_g117895 = 1.0;
				#else
				float staticSwitch9097_g117895 = ( (Blend_Shaders7420_g117895).y * _TerrainOcclusionValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9105_g117895 = (Blend_Shaders7420_g117895).x;
				#else
				float staticSwitch9105_g117895 = (Blend_Shaders7420_g117895).w;
				#endif
				float4 appendResult9147_g117895 = (float4(staticSwitch9139_g117895 , staticSwitch9097_g117895 , (Blend_Shaders7420_g117895).z , ( staticSwitch9105_g117895 * (Blend_Params7547_g117895).w * _TerrainSmoothnessValue )));
				half4 Final_Shaders9146_g117895 = appendResult9147_g117895;
				half4 Local_Shader9201_g117893 = Final_Shaders9146_g117895;
				float4 In_Shader3_g117894 = Local_Shader9201_g117893;
				half4 Weights52_g117988 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117988 = _TerrainSpecular1;
				half4 Layer237_g117988 = _TerrainSpecular2;
				half4 Layer338_g117988 = _TerrainSpecular3;
				half4 Layer439_g117988 = _TerrainSpecular4;
				float4 weightedBlendVar31_g117988 = Weights52_g117988;
				float4 weightedBlend31_g117988 = ( weightedBlendVar31_g117988.x*Layer133_g117988 + weightedBlendVar31_g117988.y*Layer237_g117988 + weightedBlendVar31_g117988.z*Layer338_g117988 + weightedBlendVar31_g117988.w*Layer439_g117988 );
				half4 Terrain_Specular_047390_g117895 = weightedBlend31_g117988;
				half4 Layer_045_g117993 = Terrain_Specular_047390_g117895;
				half4 Weights52_g117916 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117916 = _TerrainSpecular5;
				half4 Layer237_g117916 = _TerrainSpecular6;
				half4 Layer338_g117916 = _TerrainSpecular7;
				half4 Layer439_g117916 = _TerrainSpecular8;
				float4 weightedBlendVar31_g117916 = Weights52_g117916;
				float4 weightedBlend31_g117916 = ( weightedBlendVar31_g117916.x*Layer133_g117916 + weightedBlendVar31_g117916.y*Layer237_g117916 + weightedBlendVar31_g117916.z*Layer338_g117916 + weightedBlendVar31_g117916.w*Layer439_g117916 );
				half4 Terrain_Specular_088745_g117895 = weightedBlend31_g117916;
				half4 Layer_0810_g117993 = Terrain_Specular_088745_g117895;
				half4 Weights52_g117923 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117923 = _TerrainSpecular9;
				half4 Layer237_g117923 = _TerrainSpecular10;
				half4 Layer338_g117923 = _TerrainSpecular11;
				half4 Layer439_g117923 = _TerrainSpecular12;
				float4 weightedBlendVar31_g117923 = Weights52_g117923;
				float4 weightedBlend31_g117923 = ( weightedBlendVar31_g117923.x*Layer133_g117923 + weightedBlendVar31_g117923.y*Layer237_g117923 + weightedBlendVar31_g117923.z*Layer338_g117923 + weightedBlendVar31_g117923.w*Layer439_g117923 );
				half4 Terrain_Specular_128869_g117895 = weightedBlend31_g117923;
				half4 Layer_1243_g117993 = Terrain_Specular_128869_g117895;
				half4 Weights52_g117930 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117930 = _TerrainSpecular13;
				half4 Layer237_g117930 = _TerrainSpecular14;
				half4 Layer338_g117930 = _TerrainSpecular15;
				half4 Layer439_g117930 = _TerrainSpecular16;
				float4 weightedBlendVar31_g117930 = Weights52_g117930;
				float4 weightedBlend31_g117930 = ( weightedBlendVar31_g117930.x*Layer133_g117930 + weightedBlendVar31_g117930.y*Layer237_g117930 + weightedBlendVar31_g117930.z*Layer338_g117930 + weightedBlendVar31_g117930.w*Layer439_g117930 );
				half4 Terrain_Specular_169019_g117895 = weightedBlend31_g117930;
				half4 Layer_1644_g117993 = Terrain_Specular_169019_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117993 = Layer_045_g117993;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 + Layer_1243_g117993 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 + Layer_1243_g117993 + Layer_1644_g117993 );
				#else
				float4 staticSwitch40_g117993 = Layer_045_g117993;
				#endif
				half4 Blend_TerrainSpecular7446_g117895 = staticSwitch40_g117993;
				float3 temp_output_9088_0_g117895 = (Blend_TerrainSpecular7446_g117895).rgb;
				float4 appendResult9189_g117895 = (float4(temp_output_9088_0_g117895 , 1.0));
				half4 Final_Emissive9151_g117895 = appendResult9189_g117895;
				half4 Local_EmissiveLDR9202_g117893 = Final_Emissive9151_g117895;
				float4 In_Emissive3_g117894 = Local_EmissiveLDR9202_g117893;
				float3 temp_output_3_0_g118006 = Local_Albedo9199_g117893;
				float dotResult20_g118006 = dot( temp_output_3_0_g118006 , float3(0.2126,0.7152,0.0722) );
				float temp_output_9165_0_g117893 = dotResult20_g118006;
				float In_Grayscale3_g117894 = temp_output_9165_0_g117893;
				float clampResult9168_g117893 = clamp( saturate( ( temp_output_9165_0_g117893 * 5.0 ) ) , 0.2 , 1.0 );
				float In_Luminosity3_g117894 = clampResult9168_g117893;
				half Final_MultiShader9150_g117895 = ( (Blend_TerrainSpecular7446_g117895).a * (Blend_Albedo7468_g117895).w );
				half Local_MultiMask9203_g117893 = Final_MultiShader9150_g117895;
				float In_MultiMask3_g117894 = Local_MultiMask9203_g117893;
				float4 temp_output_35_0_g118004 = appendResult9125_g117895;
				float2 InputScale48_g118004 = (temp_output_35_0_g118004).zw;
				half2 FinalScale53_g118004 = ( 1.0 / InputScale48_g118004 );
				float2 InputPosition52_g118004 = (temp_output_35_0_g118004).xy;
				half2 FinalPosition58_g118004 = -( FinalScale53_g118004 * InputPosition52_g118004 );
				float2 temp_output_65_0_g118004 = ( ( (ase_worldPos).xz * FinalScale53_g118004 ) + FinalPosition58_g118004 );
				float2 Terrain_Holes_UV9406_g117895 = temp_output_65_0_g118004;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch9188_g117895 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9406_g117895 ).r;
				#else
				float staticSwitch9188_g117895 = 1.0;
				#endif
				half Terrain_Holes7437_g117895 = staticSwitch9188_g117895;
				half Local_HoleMask9204_g117893 = Terrain_Holes7437_g117895;
				float In_AlphaClip3_g117894 = Local_HoleMask9204_g117893;
				float In_AlphaFade3_g117894 = 1.0;
				float3 temp_cast_9 = (1.0).xxx;
				float3 In_Translucency3_g117894 = temp_cast_9;
				float In_Transmission3_g117894 = 1.0;
				float In_Thickness3_g117894 = 0.0;
				float In_Diffusion3_g117894 = 0.0;
				Data3_g117894.Dummy = In_Dummy3_g117894;
				Data3_g117894.Albedo = In_Albedo3_g117894;
				Data3_g117894.AlbedoRaw = In_AlbedoRaw3_g117894;
				Data3_g117894.NormalTS = In_NormalTS3_g117894;
				Data3_g117894.NormalWS = In_NormalWS3_g117894;
				Data3_g117894.Shader = In_Shader3_g117894;
				Data3_g117894.Emissive= In_Emissive3_g117894;
				Data3_g117894.MultiMask = In_MultiMask3_g117894;
				Data3_g117894.Grayscale = In_Grayscale3_g117894;
				Data3_g117894.Luminosity = In_Luminosity3_g117894;
				Data3_g117894.AlphaClip = In_AlphaClip3_g117894;
				Data3_g117894.AlphaFade = In_AlphaFade3_g117894;
				Data3_g117894.Translucency = In_Translucency3_g117894;
				Data3_g117894.Transmission = In_Transmission3_g117894;
				Data3_g117894.Thickness = In_Thickness3_g117894;
				Data3_g117894.Diffusion = In_Diffusion3_g117894;
				TVEVisualData Data4_g118029 = Data3_g117894;
				float Out_Dummy4_g118029 = 0;
				float3 Out_Albedo4_g118029 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118029 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118029 = float2( 0,0 );
				float3 Out_NormalWS4_g118029 = float3( 0,0,0 );
				float4 Out_Shader4_g118029 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118029 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118029 = 0;
				float Out_Grayscale4_g118029 = 0;
				float Out_Luminosity4_g118029 = 0;
				float Out_AlphaClip4_g118029 = 0;
				float Out_AlphaFade4_g118029 = 0;
				float3 Out_Translucency4_g118029 = float3( 0,0,0 );
				float Out_Transmission4_g118029 = 0;
				float Out_Thickness4_g118029 = 0;
				float Out_Diffusion4_g118029 = 0;
				Out_Dummy4_g118029 = Data4_g118029.Dummy;
				Out_Albedo4_g118029 = Data4_g118029.Albedo;
				Out_AlbedoRaw4_g118029 = Data4_g118029.AlbedoRaw;
				Out_NormalTS4_g118029 = Data4_g118029.NormalTS;
				Out_NormalWS4_g118029 = Data4_g118029.NormalWS;
				Out_Shader4_g118029 = Data4_g118029.Shader;
				Out_Emissive4_g118029= Data4_g118029.Emissive;
				Out_MultiMask4_g118029 = Data4_g118029.MultiMask;
				Out_Grayscale4_g118029 = Data4_g118029.Grayscale;
				Out_Luminosity4_g118029= Data4_g118029.Luminosity;
				Out_AlphaClip4_g118029 = Data4_g118029.AlphaClip;
				Out_AlphaFade4_g118029 = Data4_g118029.AlphaFade;
				Out_Translucency4_g118029 = Data4_g118029.Translucency;
				Out_Transmission4_g118029 = Data4_g118029.Transmission;
				Out_Thickness4_g118029 = Data4_g118029.Thickness;
				Out_Diffusion4_g118029 = Data4_g118029.Diffusion;
				half3 Visual_Albedo139_g118007 = Out_Albedo4_g118029;
				float temp_output_200_12_g118007 = Out_Grayscale4_g118029;
				half Visual_Grayscale150_g118007 = temp_output_200_12_g118007;
				float3 temp_cast_10 = (Visual_Grayscale150_g118007).xxx;
				float localBuildGlobalData204_g117810 = ( 0.0 );
				TVEGlobalData Data204_g117810 = (TVEGlobalData)0;
				half Dummy211_g117810 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g117810 = Dummy211_g117810;
				half4 Coat_Params302_g117810 = TVE_CoatParams;
				float4 In_CoatParams204_g117810 = Coat_Params302_g117810;
				float temp_output_82_0_g117811 = _GlobalPaintLayerValue;
				float temp_output_19_0_g117813 = TVE_PaintLayers[(int)temp_output_82_0_g117811];
				TVEModelData Data16_g117809 = (TVEModelData)0;
				float In_Dummy16_g117809 = 0.0;
				float3 vertexToFrag73_g117794 = packedInput.ase_texcoord4.xyz;
				half3 PositionWS122_g117794 = vertexToFrag73_g117794;
				float3 In_PositionWS16_g117809 = PositionWS122_g117794;
				float3 localObjectPosition_UNITY_MATRIX_M14_g117796 = ObjectPosition_UNITY_MATRIX_M();
				#ifdef SHADEROPTIONS_CAMERA_RELATIVE_RENDERING
				float3 staticSwitch13_g117796 = ( localObjectPosition_UNITY_MATRIX_M14_g117796 + _WorldSpaceCameraPos );
				#else
				float3 staticSwitch13_g117796 = localObjectPosition_UNITY_MATRIX_M14_g117796;
				#endif
				half3 ObjectData20_g117798 = staticSwitch13_g117796;
				half3 WorldData19_g117798 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g117798 = WorldData19_g117798;
				#else
				float3 staticSwitch14_g117798 = ObjectData20_g117798;
				#endif
				float3 temp_output_124_0_g117796 = staticSwitch14_g117798;
				float3 temp_output_239_7_g117794 = temp_output_124_0_g117796;
				half3 PivotWS121_g117794 = temp_output_239_7_g117794;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g117794 = ( PositionWS122_g117794 - PivotWS121_g117794 );
				#else
				float3 staticSwitch204_g117794 = PositionWS122_g117794;
				#endif
				half3 PositionWO132_g117794 = ( staticSwitch204_g117794 - TVE_WorldOrigin );
				float3 In_PositionWO16_g117809 = PositionWO132_g117794;
				float3 In_PivotWS16_g117809 = PivotWS121_g117794;
				half3 PivotWO133_g117794 = ( PivotWS121_g117794 - TVE_WorldOrigin );
				float3 In_PivotWO16_g117809 = PivotWO133_g117794;
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g117794 = normalizedWorldNormal;
				float3 In_NormalWS16_g117809 = Normal_WS95_g117794;
				float3 normalizeResult296_g117794 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g117794 ) );
				half3 ViewDirWS169_g117794 = normalizeResult296_g117794;
				float3 In_ViewDirWS16_g117809 = ViewDirWS169_g117794;
				half4 VertexMasks171_g117794 = packedInput.ase_color;
				float4 In_VertexData16_g117809 = VertexMasks171_g117794;
				float4 In_BoundsData16_g117809 = float4( 1,1,1,1 );
				Data16_g117809.Dummy = In_Dummy16_g117809;
				Data16_g117809.PositionWS = In_PositionWS16_g117809;
				Data16_g117809.PositionWO = In_PositionWO16_g117809;
				Data16_g117809.PivotWS = In_PivotWS16_g117809;
				Data16_g117809.PivotWO = In_PivotWO16_g117809;
				Data16_g117809.NormalWS = In_NormalWS16_g117809;
				Data16_g117809.ViewDirWS = In_ViewDirWS16_g117809;
				Data16_g117809.VertexData = In_VertexData16_g117809;
				Data16_g117809.BoundsData = In_BoundsData16_g117809;
				TVEModelData Data15_g117892 = Data16_g117809;
				float Out_Dummy15_g117892 = 0;
				float3 Out_PositionWS15_g117892 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117892 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117892 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g117892 = float3( 0,0,0 );
				float4 Out_VertexData15_g117892 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117892 = float4( 0,0,0,0 );
				Out_Dummy15_g117892 = Data15_g117892.Dummy;
				Out_PositionWS15_g117892 = Data15_g117892.PositionWS;
				Out_PositionWO15_g117892 = Data15_g117892.PositionWO;
				Out_PivotWS15_g117892 = Data15_g117892.PivotWS;
				Out_PivotWO15_g117892 = Data15_g117892.PivotWO;
				Out_NormalWS15_g117892 = Data15_g117892.NormalWS;
				Out_ViewDirWS15_g117892 = Data15_g117892.ViewDirWS;
				Out_VertexData15_g117892 = Data15_g117892.VertexData;
				Out_BoundsData15_g117892 = Data15_g117892.BoundsData;
				half3 Model_PositionWS143_g117810 = Out_PositionWS15_g117892;
				half3 Input_Position180_g117814 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117814 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_82_0_g117814 = temp_output_82_0_g117811;
				float2 temp_output_119_0_g117814 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_7_0_g117819 = 1.0;
				float temp_output_10_0_g117819 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117819 );
				float4 lerpResult131_g117814 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117814,temp_output_82_0_g117814, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, temp_output_119_0_g117814,temp_output_82_0_g117814, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117814 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117819 ) / temp_output_10_0_g117819 ) ));
				float4 temp_output_17_0_g117813 = lerpResult131_g117814;
				float4 temp_output_3_0_g117813 = TVE_PaintParams;
				float4 ifLocalVar18_g117813 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117813 >= 0.5 )
				ifLocalVar18_g117813 = temp_output_17_0_g117813;
				else
				ifLocalVar18_g117813 = temp_output_3_0_g117813;
				float4 lerpResult22_g117813 = lerp( temp_output_3_0_g117813 , temp_output_17_0_g117813 , temp_output_19_0_g117813);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117813 = lerpResult22_g117813;
				#else
				float4 staticSwitch24_g117813 = ifLocalVar18_g117813;
				#endif
				half4 Paint_Params71_g117810 = staticSwitch24_g117813;
				float4 In_PaintParams204_g117810 = Paint_Params71_g117810;
				float temp_output_82_0_g117829 = _GlobalGlowLayerValue;
				float temp_output_19_0_g117831 = TVE_GlowLayers[(int)temp_output_82_0_g117829];
				half3 Input_Position180_g117832 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117832 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_82_0_g117832 = temp_output_82_0_g117829;
				float2 temp_output_119_0_g117832 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_7_0_g117837 = 1.0;
				float temp_output_10_0_g117837 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117837 );
				float4 lerpResult131_g117832 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117832,temp_output_82_0_g117832, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, temp_output_119_0_g117832,temp_output_82_0_g117832, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117832 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117837 ) / temp_output_10_0_g117837 ) ));
				float4 temp_output_17_0_g117831 = lerpResult131_g117832;
				float4 temp_output_3_0_g117831 = TVE_GlowParams;
				float4 ifLocalVar18_g117831 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117831 >= 0.5 )
				ifLocalVar18_g117831 = temp_output_17_0_g117831;
				else
				ifLocalVar18_g117831 = temp_output_3_0_g117831;
				float4 lerpResult22_g117831 = lerp( temp_output_3_0_g117831 , temp_output_17_0_g117831 , temp_output_19_0_g117831);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117831 = lerpResult22_g117831;
				#else
				float4 staticSwitch24_g117831 = ifLocalVar18_g117831;
				#endif
				half4 Glow_Params248_g117810 = staticSwitch24_g117831;
				float4 In_GlowParams204_g117810 = Glow_Params248_g117810;
				float temp_output_132_0_g117874 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g117876 = TVE_AtmoLayers[(int)temp_output_132_0_g117874];
				half3 Input_Position180_g117877 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117877 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_82_0_g117877 = temp_output_132_0_g117874;
				float2 temp_output_119_0_g117877 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_7_0_g117882 = 1.0;
				float temp_output_10_0_g117882 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117882 );
				float4 lerpResult131_g117877 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117877,temp_output_82_0_g117877, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, temp_output_119_0_g117877,temp_output_82_0_g117877, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117877 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117882 ) / temp_output_10_0_g117882 ) ));
				float4 temp_output_17_0_g117876 = lerpResult131_g117877;
				float4 temp_output_3_0_g117876 = TVE_AtmoParams;
				float4 ifLocalVar18_g117876 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117876 >= 0.5 )
				ifLocalVar18_g117876 = temp_output_17_0_g117876;
				else
				ifLocalVar18_g117876 = temp_output_3_0_g117876;
				float4 lerpResult22_g117876 = lerp( temp_output_3_0_g117876 , temp_output_17_0_g117876 , temp_output_19_0_g117876);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117876 = lerpResult22_g117876;
				#else
				float4 staticSwitch24_g117876 = ifLocalVar18_g117876;
				#endif
				half4 Atmo_Params80_g117810 = staticSwitch24_g117876;
				float4 In_AtmoParams204_g117810 = Atmo_Params80_g117810;
				float temp_output_132_0_g117883 = _GlobalFadeLayerValue;
				float temp_output_19_0_g117885 = TVE_FadeLayers[(int)temp_output_132_0_g117883];
				half3 Input_Position180_g117886 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117886 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_82_0_g117886 = temp_output_132_0_g117883;
				float2 temp_output_119_0_g117886 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_7_0_g117891 = 1.0;
				float temp_output_10_0_g117891 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117891 );
				float4 lerpResult131_g117886 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117886,temp_output_82_0_g117886, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, temp_output_119_0_g117886,temp_output_82_0_g117886, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117886 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117891 ) / temp_output_10_0_g117891 ) ));
				float4 temp_output_17_0_g117885 = lerpResult131_g117886;
				float4 temp_output_3_0_g117885 = TVE_FadeParams;
				float4 ifLocalVar18_g117885 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117885 >= 0.5 )
				ifLocalVar18_g117885 = temp_output_17_0_g117885;
				else
				ifLocalVar18_g117885 = temp_output_3_0_g117885;
				float4 lerpResult22_g117885 = lerp( temp_output_3_0_g117885 , temp_output_17_0_g117885 , temp_output_19_0_g117885);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117885 = lerpResult22_g117885;
				#else
				float4 staticSwitch24_g117885 = ifLocalVar18_g117885;
				#endif
				half4 Fade_Params387_g117810 = staticSwitch24_g117885;
				float4 In_FadeParams204_g117810 = Fade_Params387_g117810;
				half4 Form_Params112_g117810 = TVE_FormParams;
				float4 In_FormParams204_g117810 = Form_Params112_g117810;
				float temp_output_130_0_g117847 = _GlobalLandLayerValue;
				float temp_output_19_0_g117849 = TVE_LandLayers[(int)temp_output_130_0_g117847];
				half3 Input_Position180_g117850 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117850 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_82_0_g117850 = temp_output_130_0_g117847;
				float2 temp_output_119_0_g117850 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_7_0_g117855 = 1.0;
				float temp_output_10_0_g117855 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117855 );
				float4 lerpResult131_g117850 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117850,temp_output_82_0_g117850, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, temp_output_119_0_g117850,temp_output_82_0_g117850, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117850 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117855 ) / temp_output_10_0_g117855 ) ));
				float4 temp_output_17_0_g117849 = lerpResult131_g117850;
				float4 temp_output_3_0_g117849 = TVE_LandParams;
				float4 ifLocalVar18_g117849 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117849 >= 0.5 )
				ifLocalVar18_g117849 = temp_output_17_0_g117849;
				else
				ifLocalVar18_g117849 = temp_output_3_0_g117849;
				float4 lerpResult22_g117849 = lerp( temp_output_3_0_g117849 , temp_output_17_0_g117849 , temp_output_19_0_g117849);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117849 = lerpResult22_g117849;
				#else
				float4 staticSwitch24_g117849 = ifLocalVar18_g117849;
				#endif
				half4 Land_Params375_g117810 = staticSwitch24_g117849;
				float4 In_LandParams204_g117810 = Land_Params375_g117810;
				half4 Wind_Params88_g117810 = TVE_WindParams;
				float4 In_WindParams204_g117810 = Wind_Params88_g117810;
				half4 Push_Params335_g117810 = TVE_PushParams;
				float4 In_PushParams204_g117810 = Push_Params335_g117810;
				Data204_g117810.Dummy = In_Dummy204_g117810;
				Data204_g117810.CoatParams = In_CoatParams204_g117810;
				Data204_g117810.PaintParams = In_PaintParams204_g117810;
				Data204_g117810.GlowParams = In_GlowParams204_g117810;
				Data204_g117810.AtmoParams = In_AtmoParams204_g117810;
				Data204_g117810.FadeParams = In_FadeParams204_g117810;
				Data204_g117810.FormParams= In_FormParams204_g117810;
				Data204_g117810.LandParams = In_LandParams204_g117810;
				Data204_g117810.WindParams = In_WindParams204_g117810;
				Data204_g117810.PushParams = In_PushParams204_g117810;
				TVEGlobalData Data15_g118008 = Data204_g117810;
				float Out_Dummy15_g118008 = 0;
				float4 Out_CoatParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118008 = float4( 0,0,0,0 );
				Out_Dummy15_g118008 = Data15_g118008.Dummy;
				Out_CoatParams15_g118008 = Data15_g118008.CoatParams;
				Out_PaintParams15_g118008 = Data15_g118008.PaintParams;
				Out_GlowParams15_g118008 = Data15_g118008.GlowParams;
				Out_AtmoParams15_g118008= Data15_g118008.AtmoParams;
				Out_FadeParams15_g118008= Data15_g118008.FadeParams;
				Out_FormParams15_g118008 = Data15_g118008.FormParams;
				Out_LandParams15_g118008 = Data15_g118008.LandParams;
				Out_WindParams15_g118008 = Data15_g118008.WindParams;
				Out_PushParams15_g118008 = Data15_g118008.PushParams;
				half4 Global_PaintParams209_g118007 = Out_PaintParams15_g118008;
				float temp_output_6_0_g118009 = ( saturate( (Global_PaintParams209_g118007).w ) * TVE_IsEnabled );
				#ifdef TVE_REGISTER
				float staticSwitch14_g118009 = ( temp_output_6_0_g118009 + ( _TintingElementMode * 0.0 ) );
				#else
				float staticSwitch14_g118009 = temp_output_6_0_g118009;
				#endif
				#ifdef TVE_TINTING_ELEMENT
				float staticSwitch283_g118007 = staticSwitch14_g118009;
				#else
				float staticSwitch283_g118007 = 1.0;
				#endif
				half Tinting_GlobalValue285_g118007 = staticSwitch283_g118007;
				float3 lerpResult368_g118007 = lerp( Visual_Albedo139_g118007 , temp_cast_10 , ( Tinting_GlobalValue285_g118007 * _TintingGrayValue ));
				float3 temp_cast_32 = (1.0).xxx;
				#ifdef TVE_TINTING_ELEMENT
				float3 staticSwitch288_g118007 = (Global_PaintParams209_g118007).xyz;
				#else
				float3 staticSwitch288_g118007 = temp_cast_32;
				#endif
				half3 Tinting_ColorGlobal290_g118007 = staticSwitch288_g118007;
				float temp_output_200_11_g118007 = Out_MultiMask4_g118029;
				half Visual_MultiMask181_g118007 = temp_output_200_11_g118007;
				float lerpResult147_g118007 = lerp( 1.0 , Visual_MultiMask181_g118007 , _TintingMultiValue);
				half Tinting_MutiMask121_g118007 = lerpResult147_g118007;
				half Tinting_TexMask385_g118007 = 1.0;
				float temp_output_200_15_g118007 = Out_Luminosity4_g118029;
				half Visual_Luminosity257_g118007 = temp_output_200_15_g118007;
				float clampResult17_g118021 = clamp( Visual_Luminosity257_g118007 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118020 = _TintingLumaRemap.x;
				float temp_output_10_0_g118020 = ( _TintingLumaRemap.y - temp_output_7_0_g118020 );
				float lerpResult228_g118007 = lerp( 1.0 , saturate( ( ( clampResult17_g118021 - temp_output_7_0_g118020 ) / ( temp_output_10_0_g118020 + 0.0001 ) ) ) , _TintingLumaValue);
				half Tinting_LumaMask153_g118007 = lerpResult228_g118007;
				half Tinting_VertMask309_g118007 = 1.0;
				half Tinting_NoiseMask213_g118007 = 1.0;
				half Custom_Mask345_g118007 = 1.0;
				float temp_output_7_0_g118016 = _TintingBlendRemap.x;
				float temp_output_10_0_g118016 = ( _TintingBlendRemap.y - temp_output_7_0_g118016 );
				half Tinting_Mask242_g118007 = ( saturate( ( ( ( _TintingIntensityValue * Tinting_MutiMask121_g118007 * Tinting_TexMask385_g118007 * Tinting_LumaMask153_g118007 * Tinting_VertMask309_g118007 * Tinting_NoiseMask213_g118007 * Tinting_GlobalValue285_g118007 * Custom_Mask345_g118007 ) - temp_output_7_0_g118016 ) / ( temp_output_10_0_g118016 + 0.0001 ) ) ) * TVE_IsEnabled );
				float3 lerpResult90_g118007 = lerp( Visual_Albedo139_g118007 , ( lerpResult368_g118007 * 4.594794 * Tinting_ColorGlobal290_g118007 * (_TintingColor).rgb ) , Tinting_Mask242_g118007);
				#ifdef TVE_TINTING
				float3 staticSwitch286_g118007 = lerpResult90_g118007;
				#else
				float3 staticSwitch286_g118007 = Visual_Albedo139_g118007;
				#endif
				half3 Final_Albedo97_g118007 = staticSwitch286_g118007;
				float3 In_Albedo3_g118028 = Final_Albedo97_g118007;
				float3 In_AlbedoRaw3_g118028 = Out_AlbedoRaw4_g118029;
				float2 In_NormalTS3_g118028 = Out_NormalTS4_g118029;
				float3 In_NormalWS3_g118028 = Out_NormalWS4_g118029;
				float4 In_Shader3_g118028 = Out_Shader4_g118029;
				float4 In_Emissive3_g118028 = Out_Emissive4_g118029;
				float In_Grayscale3_g118028 = temp_output_200_12_g118007;
				float In_Luminosity3_g118028 = temp_output_200_15_g118007;
				float In_MultiMask3_g118028 = temp_output_200_11_g118007;
				float In_AlphaClip3_g118028 = Out_AlphaClip4_g118029;
				float In_AlphaFade3_g118028 = Out_AlphaFade4_g118029;
				float3 In_Translucency3_g118028 = Out_Translucency4_g118029;
				float In_Transmission3_g118028 = Out_Transmission4_g118029;
				float In_Thickness3_g118028 = Out_Thickness4_g118029;
				float In_Diffusion3_g118028 = Out_Diffusion4_g118029;
				Data3_g118028.Dummy = In_Dummy3_g118028;
				Data3_g118028.Albedo = In_Albedo3_g118028;
				Data3_g118028.AlbedoRaw = In_AlbedoRaw3_g118028;
				Data3_g118028.NormalTS = In_NormalTS3_g118028;
				Data3_g118028.NormalWS = In_NormalWS3_g118028;
				Data3_g118028.Shader = In_Shader3_g118028;
				Data3_g118028.Emissive= In_Emissive3_g118028;
				Data3_g118028.MultiMask = In_MultiMask3_g118028;
				Data3_g118028.Grayscale = In_Grayscale3_g118028;
				Data3_g118028.Luminosity = In_Luminosity3_g118028;
				Data3_g118028.AlphaClip = In_AlphaClip3_g118028;
				Data3_g118028.AlphaFade = In_AlphaFade3_g118028;
				Data3_g118028.Translucency = In_Translucency3_g118028;
				Data3_g118028.Transmission = In_Transmission3_g118028;
				Data3_g118028.Thickness = In_Thickness3_g118028;
				Data3_g118028.Diffusion = In_Diffusion3_g118028;
				TVEVisualData Data4_g118033 = Data3_g118028;
				float Out_Dummy4_g118033 = 0;
				float3 Out_Albedo4_g118033 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118033 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118033 = float2( 0,0 );
				float3 Out_NormalWS4_g118033 = float3( 0,0,0 );
				float4 Out_Shader4_g118033 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118033 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118033 = 0;
				float Out_Grayscale4_g118033 = 0;
				float Out_Luminosity4_g118033 = 0;
				float Out_AlphaClip4_g118033 = 0;
				float Out_AlphaFade4_g118033 = 0;
				float3 Out_Translucency4_g118033 = float3( 0,0,0 );
				float Out_Transmission4_g118033 = 0;
				float Out_Thickness4_g118033 = 0;
				float Out_Diffusion4_g118033 = 0;
				Out_Dummy4_g118033 = Data4_g118033.Dummy;
				Out_Albedo4_g118033 = Data4_g118033.Albedo;
				Out_AlbedoRaw4_g118033 = Data4_g118033.AlbedoRaw;
				Out_NormalTS4_g118033 = Data4_g118033.NormalTS;
				Out_NormalWS4_g118033 = Data4_g118033.NormalWS;
				Out_Shader4_g118033 = Data4_g118033.Shader;
				Out_Emissive4_g118033= Data4_g118033.Emissive;
				Out_MultiMask4_g118033 = Data4_g118033.MultiMask;
				Out_Grayscale4_g118033 = Data4_g118033.Grayscale;
				Out_Luminosity4_g118033= Data4_g118033.Luminosity;
				Out_AlphaClip4_g118033 = Data4_g118033.AlphaClip;
				Out_AlphaFade4_g118033 = Data4_g118033.AlphaFade;
				Out_Translucency4_g118033 = Data4_g118033.Translucency;
				Out_Transmission4_g118033 = Data4_g118033.Transmission;
				Out_Thickness4_g118033 = Data4_g118033.Thickness;
				Out_Diffusion4_g118033 = Data4_g118033.Diffusion;
				half3 Visual_Albedo292_g118031 = Out_Albedo4_g118033;
				float temp_output_280_12_g118031 = Out_Grayscale4_g118033;
				half Visual_Grayscale308_g118031 = temp_output_280_12_g118031;
				float3 temp_cast_33 = (Visual_Grayscale308_g118031).xxx;
				TVEGlobalData Data15_g118032 = Data204_g117810;
				float Out_Dummy15_g118032 = 0;
				float4 Out_CoatParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118032 = float4( 0,0,0,0 );
				Out_Dummy15_g118032 = Data15_g118032.Dummy;
				Out_CoatParams15_g118032 = Data15_g118032.CoatParams;
				Out_PaintParams15_g118032 = Data15_g118032.PaintParams;
				Out_GlowParams15_g118032 = Data15_g118032.GlowParams;
				Out_AtmoParams15_g118032= Data15_g118032.AtmoParams;
				Out_FadeParams15_g118032= Data15_g118032.FadeParams;
				Out_FormParams15_g118032 = Data15_g118032.FormParams;
				Out_LandParams15_g118032 = Data15_g118032.LandParams;
				Out_WindParams15_g118032 = Data15_g118032.WindParams;
				Out_PushParams15_g118032 = Data15_g118032.PushParams;
				half4 Global_AtmoParams314_g118031 = Out_AtmoParams15_g118032;
				#ifdef TVE_DRYNESS_ELEMENT
				float staticSwitch351_g118031 = ( (Global_AtmoParams314_g118031).x * TVE_IsEnabled );
				#else
				float staticSwitch351_g118031 = 1.0;
				#endif
				half Dryness_GlobalMask352_g118031 = staticSwitch351_g118031;
				float3 lerpResult485_g118031 = lerp( Visual_Albedo292_g118031 , temp_cast_33 , ( Dryness_GlobalMask352_g118031 * _DrynessGrayValue ));
				half3 hsvTorgb58_g118052 = RGBToHSV( lerpResult485_g118031 );
				half3 hsvTorgb61_g118052 = HSVToRGB( half3(( hsvTorgb58_g118052.x + _DrynessShiftValue ),hsvTorgb58_g118052.y,hsvTorgb58_g118052.z) );
				#ifdef TVE_DRYNESS_SHIFT
				float3 staticSwitch499_g118031 = hsvTorgb61_g118052;
				#else
				float3 staticSwitch499_g118031 = lerpResult485_g118031;
				#endif
				half Dryness_TexMask478_g118031 = 1.0;
				float temp_output_280_11_g118031 = Out_MultiMask4_g118033;
				half Visual_MultiMask310_g118031 = temp_output_280_11_g118031;
				float lerpResult283_g118031 = lerp( 1.0 , Visual_MultiMask310_g118031 , _DrynessMultiValue);
				half Dryness_MultiMask302_g118031 = lerpResult283_g118031;
				float temp_output_280_15_g118031 = Out_Luminosity4_g118033;
				half Visual_Luminosity309_g118031 = temp_output_280_15_g118031;
				float clampResult17_g118047 = clamp( Visual_Luminosity309_g118031 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118046 = _DrynessLumaRemap.x;
				float temp_output_10_0_g118046 = ( _DrynessLumaRemap.y - temp_output_7_0_g118046 );
				float lerpResult295_g118031 = lerp( 1.0 , saturate( ( ( clampResult17_g118047 - temp_output_7_0_g118046 ) / ( temp_output_10_0_g118046 + 0.0001 ) ) ) , _DrynessLumaValue);
				half Dryness_LumaMask301_g118031 = lerpResult295_g118031;
				half Dryness_VertMask378_g118031 = 1.0;
				half Dryness_MaskNoise291_g118031 = 1.0;
				half Custom_Mask411_g118031 = 1.0;
				float temp_output_7_0_g118045 = _DrynessBlendRemap.x;
				float temp_output_10_0_g118045 = ( _DrynessBlendRemap.y - temp_output_7_0_g118045 );
				half Dryness_Mask329_g118031 = saturate( ( ( ( _DrynessIntensityValue * Dryness_TexMask478_g118031 * Dryness_MultiMask302_g118031 * Dryness_LumaMask301_g118031 * Dryness_VertMask378_g118031 * Dryness_MaskNoise291_g118031 * Dryness_GlobalMask352_g118031 * Custom_Mask411_g118031 ) - temp_output_7_0_g118045 ) / ( temp_output_10_0_g118045 + 0.0001 ) ) );
				float3 lerpResult336_g118031 = lerp( Visual_Albedo292_g118031 , ( staticSwitch499_g118031 * 4.594794 * (_DrynessColor).rgb ) , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float3 staticSwitch356_g118031 = lerpResult336_g118031;
				#else
				float3 staticSwitch356_g118031 = Visual_Albedo292_g118031;
				#endif
				half3 Final_Albedo331_g118031 = staticSwitch356_g118031;
				float3 In_Albedo3_g118034 = Final_Albedo331_g118031;
				float3 In_AlbedoRaw3_g118034 = Out_AlbedoRaw4_g118033;
				float2 In_NormalTS3_g118034 = Out_NormalTS4_g118033;
				float3 In_NormalWS3_g118034 = Out_NormalWS4_g118033;
				half4 Visual_Shader415_g118031 = Out_Shader4_g118033;
				float4 break438_g118031 = Visual_Shader415_g118031;
				float4 appendResult439_g118031 = (float4(break438_g118031.x , break438_g118031.y , break438_g118031.z , ( break438_g118031.w * _DrynessSmoothnessValue )));
				float4 lerpResult427_g118031 = lerp( Visual_Shader415_g118031 , appendResult439_g118031 , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float4 staticSwitch426_g118031 = lerpResult427_g118031;
				#else
				float4 staticSwitch426_g118031 = Visual_Shader415_g118031;
				#endif
				half4 Final_Shader433_g118031 = staticSwitch426_g118031;
				float4 In_Shader3_g118034 = Final_Shader433_g118031;
				float4 In_Emissive3_g118034 = Out_Emissive4_g118033;
				float In_Grayscale3_g118034 = temp_output_280_12_g118031;
				float In_Luminosity3_g118034 = temp_output_280_15_g118031;
				float In_MultiMask3_g118034 = temp_output_280_11_g118031;
				float In_AlphaClip3_g118034 = Out_AlphaClip4_g118033;
				float In_AlphaFade3_g118034 = Out_AlphaFade4_g118033;
				float3 In_Translucency3_g118034 = Out_Translucency4_g118033;
				half Visual_Transmission416_g118031 = Out_Transmission4_g118033;
				float lerpResult421_g118031 = lerp( Visual_Transmission416_g118031 , ( Visual_Transmission416_g118031 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float staticSwitch418_g118031 = lerpResult421_g118031;
				#else
				float staticSwitch418_g118031 = Visual_Transmission416_g118031;
				#endif
				half Final_Transmission425_g118031 = staticSwitch418_g118031;
				float In_Transmission3_g118034 = Final_Transmission425_g118031;
				float In_Thickness3_g118034 = Out_Thickness4_g118033;
				float In_Diffusion3_g118034 = Out_Diffusion4_g118033;
				Data3_g118034.Dummy = In_Dummy3_g118034;
				Data3_g118034.Albedo = In_Albedo3_g118034;
				Data3_g118034.AlbedoRaw = In_AlbedoRaw3_g118034;
				Data3_g118034.NormalTS = In_NormalTS3_g118034;
				Data3_g118034.NormalWS = In_NormalWS3_g118034;
				Data3_g118034.Shader = In_Shader3_g118034;
				Data3_g118034.Emissive= In_Emissive3_g118034;
				Data3_g118034.MultiMask = In_MultiMask3_g118034;
				Data3_g118034.Grayscale = In_Grayscale3_g118034;
				Data3_g118034.Luminosity = In_Luminosity3_g118034;
				Data3_g118034.AlphaClip = In_AlphaClip3_g118034;
				Data3_g118034.AlphaFade = In_AlphaFade3_g118034;
				Data3_g118034.Translucency = In_Translucency3_g118034;
				Data3_g118034.Transmission = In_Transmission3_g118034;
				Data3_g118034.Thickness = In_Thickness3_g118034;
				Data3_g118034.Diffusion = In_Diffusion3_g118034;
				TVEVisualData Data4_g118055 = Data3_g118034;
				float Out_Dummy4_g118055 = 0;
				float3 Out_Albedo4_g118055 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118055 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118055 = float2( 0,0 );
				float3 Out_NormalWS4_g118055 = float3( 0,0,0 );
				float4 Out_Shader4_g118055 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118055 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118055 = 0;
				float Out_Grayscale4_g118055 = 0;
				float Out_Luminosity4_g118055 = 0;
				float Out_AlphaClip4_g118055 = 0;
				float Out_AlphaFade4_g118055 = 0;
				float3 Out_Translucency4_g118055 = float3( 0,0,0 );
				float Out_Transmission4_g118055 = 0;
				float Out_Thickness4_g118055 = 0;
				float Out_Diffusion4_g118055 = 0;
				Out_Dummy4_g118055 = Data4_g118055.Dummy;
				Out_Albedo4_g118055 = Data4_g118055.Albedo;
				Out_AlbedoRaw4_g118055 = Data4_g118055.AlbedoRaw;
				Out_NormalTS4_g118055 = Data4_g118055.NormalTS;
				Out_NormalWS4_g118055 = Data4_g118055.NormalWS;
				Out_Shader4_g118055 = Data4_g118055.Shader;
				Out_Emissive4_g118055= Data4_g118055.Emissive;
				Out_MultiMask4_g118055 = Data4_g118055.MultiMask;
				Out_Grayscale4_g118055 = Data4_g118055.Grayscale;
				Out_Luminosity4_g118055= Data4_g118055.Luminosity;
				Out_AlphaClip4_g118055 = Data4_g118055.AlphaClip;
				Out_AlphaFade4_g118055 = Data4_g118055.AlphaFade;
				Out_Translucency4_g118055 = Data4_g118055.Translucency;
				Out_Transmission4_g118055 = Data4_g118055.Transmission;
				Out_Thickness4_g118055 = Data4_g118055.Thickness;
				Out_Diffusion4_g118055 = Data4_g118055.Diffusion;
				half3 Visual_Albedo127_g118054 = Out_Albedo4_g118055;
				float3 temp_output_622_0_g118054 = (_OverlayColor).rgb;
				TEXTURE2D(Texture238_g118058) = _OverlayAlbedoTex;
				float localFilterTexture19_g118087 = ( 0.0 );
				SamplerState SamplerDefault19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g118087 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g118087 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g118087 = SamplerDefault19_g118087;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g118087 = SamplerDefault19_g118087;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g118087 = SamplerPoint19_g118087;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g118087 = SamplerLow19_g118087;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g118087 = SamplerMedium19_g118087;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g118087 = SamplerHigh19_g118087;
				#endif
				SamplerState Sampler238_g118058 = SS19_g118087;
				float4 temp_output_6_0_g118059 = _overlay_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g118059 = ( temp_output_6_0_g118059 + ( ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g118059 = temp_output_6_0_g118059;
				#endif
				half4 Overlay_Coords639_g118054 = staticSwitch14_g118059;
				float4 temp_output_37_0_g118058 = Overlay_Coords639_g118054;
				half4 Coords238_g118058 = temp_output_37_0_g118058;
				TVEModelData Data15_g118089 = Data16_g117809;
				float Out_Dummy15_g118089 = 0;
				float3 Out_PositionWS15_g118089 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118089 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118089 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118089 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118089 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g118089 = float3( 0,0,0 );
				float4 Out_VertexData15_g118089 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118089 = float4( 0,0,0,0 );
				Out_Dummy15_g118089 = Data15_g118089.Dummy;
				Out_PositionWS15_g118089 = Data15_g118089.PositionWS;
				Out_PositionWO15_g118089 = Data15_g118089.PositionWO;
				Out_PivotWS15_g118089 = Data15_g118089.PivotWS;
				Out_PivotWO15_g118089 = Data15_g118089.PivotWO;
				Out_NormalWS15_g118089 = Data15_g118089.NormalWS;
				Out_ViewDirWS15_g118089 = Data15_g118089.ViewDirWS;
				Out_VertexData15_g118089 = Data15_g118089.VertexData;
				Out_BoundsData15_g118089 = Data15_g118089.BoundsData;
				half3 Model_PositionWO602_g118054 = Out_PositionWO15_g118089;
				float3 temp_output_279_0_g118058 = Model_PositionWO602_g118054;
				half3 WorldPosition238_g118058 = temp_output_279_0_g118058;
				half4 localSamplePlanar2D238_g118058 = SamplePlanar2D( Texture238_g118058 , Sampler238_g118058 , Coords238_g118058 , WorldPosition238_g118058 );
				TEXTURE2D(Texture246_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler246_g118058 = SS19_g118087;
				half4 Coords246_g118058 = temp_output_37_0_g118058;
				half3 WorldPosition246_g118058 = temp_output_279_0_g118058;
				half3 Model_NormalWS712_g118054 = Out_NormalWS15_g118089;
				float3 temp_output_280_0_g118058 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118058 = temp_output_280_0_g118058;
				half4 localSamplePlanar3D246_g118058 = SamplePlanar3D( Texture246_g118058 , Sampler246_g118058 , Coords246_g118058 , WorldPosition246_g118058 , WorldNormal246_g118058 );
				TEXTURE2D(Texture234_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler234_g118058 = SS19_g118087;
				float4 Coords234_g118058 = temp_output_37_0_g118058;
				float3 WorldPosition234_g118058 = temp_output_279_0_g118058;
				float4 localSampleStochastic2D234_g118058 = SampleStochastic2D( Texture234_g118058 , Sampler234_g118058 , Coords234_g118058 , WorldPosition234_g118058 );
				TEXTURE2D(Texture263_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler263_g118058 = SS19_g118087;
				half4 Coords263_g118058 = temp_output_37_0_g118058;
				half3 WorldPosition263_g118058 = temp_output_279_0_g118058;
				half3 WorldNormal263_g118058 = temp_output_280_0_g118058;
				half4 localSampleStochastic3D263_g118058 = SampleStochastic3D( Texture263_g118058 , Sampler263_g118058 , Coords263_g118058 , WorldPosition263_g118058 , WorldNormal263_g118058 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch676_g118054 = localSamplePlanar2D238_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch676_g118054 = localSamplePlanar3D246_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch676_g118054 = localSampleStochastic2D234_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch676_g118054 = localSampleStochastic3D263_g118058;
				#else
				float4 staticSwitch676_g118054 = localSamplePlanar2D238_g118058;
				#endif
				half3 Overlay_Albedo526_g118054 = (staticSwitch676_g118054).xyz;
				#ifdef TVE_OVERLAY_TEX
				float3 staticSwitch578_g118054 = ( temp_output_622_0_g118054 * Overlay_Albedo526_g118054 );
				#else
				float3 staticSwitch578_g118054 = temp_output_622_0_g118054;
				#endif
				float3 temp_output_6_0_g118065 = staticSwitch578_g118054;
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g118065 = ( temp_output_6_0_g118065 + ( _OverlayTextureMode * 0.0 ) );
				#else
				float3 staticSwitch14_g118065 = temp_output_6_0_g118065;
				#endif
				float3 temp_cast_34 = (0.0).xxx;
				TEXTURE2D(Texture246_g118062) = _OverlayGlitterTexRT;
				SamplerState Sampler246_g118062 = sampler_Linear_Repeat;
				float4 appendResult863_g118054 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g118062 = appendResult863_g118054;
				half4 Coords246_g118062 = temp_output_37_0_g118062;
				float3 temp_output_279_0_g118062 = Model_PositionWO602_g118054;
				half3 WorldPosition246_g118062 = temp_output_279_0_g118062;
				float3 temp_output_280_0_g118062 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118062 = temp_output_280_0_g118062;
				half4 localSamplePlanar3D246_g118062 = SamplePlanar3D( Texture246_g118062 , Sampler246_g118062 , Coords246_g118062 , WorldPosition246_g118062 , WorldNormal246_g118062 );
				half Overlay_GlitterTex854_g118054 = (localSamplePlanar3D246_g118062).x;
				half3 Model_PositionWS879_g118054 = Out_PositionWS15_g118089;
				#ifdef TVE_OVERLAY_GLITTER
				float3 staticSwitch868_g118054 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g118054 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g118054 ) / _OverlayGlitterDistValue ) ) ) );
				#else
				float3 staticSwitch868_g118054 = temp_cast_34;
				#endif
				half3 Overlay_GlitterColor865_g118054 = staticSwitch868_g118054;
				half Overlay_TexMask908_g118054 = 1.0;
				float3 temp_output_739_21_g118054 = Out_NormalWS4_g118055;
				half3 Visual_NormalWS749_g118054 = temp_output_739_21_g118054;
				float clampResult17_g118075 = clamp( saturate( (Visual_NormalWS749_g118054).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g118074 = _OverlayProjRemap.x;
				float temp_output_10_0_g118074 = ( _OverlayProjRemap.y - temp_output_7_0_g118074 );
				float lerpResult842_g118054 = lerp( 1.0 , saturate( ( ( clampResult17_g118075 - temp_output_7_0_g118074 ) / ( temp_output_10_0_g118074 + 0.0001 ) ) ) , _OverlayProjValue);
				half Overlay_MaskProj457_g118054 = lerpResult842_g118054;
				float temp_output_739_15_g118054 = Out_Luminosity4_g118055;
				half Visual_Luminosity654_g118054 = temp_output_739_15_g118054;
				float clampResult17_g118077 = clamp( Visual_Luminosity654_g118054 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118076 = _OverlayLumaRemap.x;
				float temp_output_10_0_g118076 = ( _OverlayLumaRemap.y - temp_output_7_0_g118076 );
				float lerpResult587_g118054 = lerp( 1.0 , saturate( ( ( clampResult17_g118077 - temp_output_7_0_g118076 ) / ( temp_output_10_0_g118076 + 0.0001 ) ) ) , _OverlayLumaValue);
				half Overlay_MaskLuma438_g118054 = lerpResult587_g118054;
				half Overlay_VertMask801_g118054 = 1.0;
				half Overlay_MaskNoise427_g118054 = 1.0;
				TVEGlobalData Data15_g118056 = Data204_g117810;
				float Out_Dummy15_g118056 = 0;
				float4 Out_CoatParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118056 = float4( 0,0,0,0 );
				Out_Dummy15_g118056 = Data15_g118056.Dummy;
				Out_CoatParams15_g118056 = Data15_g118056.CoatParams;
				Out_PaintParams15_g118056 = Data15_g118056.PaintParams;
				Out_GlowParams15_g118056 = Data15_g118056.GlowParams;
				Out_AtmoParams15_g118056= Data15_g118056.AtmoParams;
				Out_FadeParams15_g118056= Data15_g118056.FadeParams;
				Out_FormParams15_g118056 = Data15_g118056.FormParams;
				Out_LandParams15_g118056 = Data15_g118056.LandParams;
				Out_WindParams15_g118056 = Data15_g118056.WindParams;
				Out_PushParams15_g118056 = Data15_g118056.PushParams;
				half4 Global_AtmoParams516_g118054 = Out_AtmoParams15_g118056;
				#ifdef TVE_OVERLAY_ELEMENT
				float staticSwitch705_g118054 = ( (Global_AtmoParams516_g118054).z * TVE_IsEnabled );
				#else
				float staticSwitch705_g118054 = 1.0;
				#endif
				half Overlay_MaskGlobal429_g118054 = staticSwitch705_g118054;
				half Custom_Mask646_g118054 = 1.0;
				float temp_output_7_0_g118083 = _OverlayBlendRemap1.x;
				float temp_output_10_0_g118083 = ( _OverlayBlendRemap1.y - temp_output_7_0_g118083 );
				half Overlay_Mask494_g118054 = saturate( ( ( ( _OverlayIntensityValue * Overlay_TexMask908_g118054 * Overlay_MaskProj457_g118054 * Overlay_MaskLuma438_g118054 * Overlay_VertMask801_g118054 * Overlay_MaskNoise427_g118054 * Overlay_MaskGlobal429_g118054 * Custom_Mask646_g118054 ) - temp_output_7_0_g118083 ) / ( temp_output_10_0_g118083 + 0.0001 ) ) );
				float3 lerpResult467_g118054 = lerp( Visual_Albedo127_g118054 , ( staticSwitch14_g118065 + Overlay_GlitterColor865_g118054 ) , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float3 staticSwitch577_g118054 = lerpResult467_g118054;
				#else
				float3 staticSwitch577_g118054 = Visual_Albedo127_g118054;
				#endif
				half3 Final_Albedo493_g118054 = staticSwitch577_g118054;
				float3 In_Albedo3_g118057 = Final_Albedo493_g118054;
				float3 In_AlbedoRaw3_g118057 = Out_AlbedoRaw4_g118055;
				half2 Visual_NormalTS535_g118054 = Out_NormalTS4_g118055;
				TEXTURE2D(Texture238_g118060) = _OverlayNormalTex;
				float localFilterTexture29_g118088 = ( 0.0 );
				SamplerState SamplerDefault29_g118088 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g118088 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g118088 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g118088 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g118088 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g118088 = SamplerDefault29_g118088;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g118088 = SamplerDefault29_g118088;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g118088 = SamplerPoint29_g118088;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g118088 = SamplerLow29_g118088;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g118088 = SamplerMedium29_g118088;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g118088 = SamplerHigh29_g118088;
				#endif
				SamplerState Sampler238_g118060 = SS29_g118088;
				float4 temp_output_37_0_g118060 = Overlay_Coords639_g118054;
				half4 Coords238_g118060 = temp_output_37_0_g118060;
				float3 temp_output_279_0_g118060 = Model_PositionWO602_g118054;
				half3 WorldPosition238_g118060 = temp_output_279_0_g118060;
				half4 localSamplePlanar2D238_g118060 = SamplePlanar2D( Texture238_g118060 , Sampler238_g118060 , Coords238_g118060 , WorldPosition238_g118060 );
				TEXTURE2D(Texture246_g118060) = _OverlayNormalTex;
				SamplerState Sampler246_g118060 = SS29_g118088;
				half4 Coords246_g118060 = temp_output_37_0_g118060;
				half3 WorldPosition246_g118060 = temp_output_279_0_g118060;
				float3 temp_output_280_0_g118060 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118060 = temp_output_280_0_g118060;
				half4 localSamplePlanar3D246_g118060 = SamplePlanar3D( Texture246_g118060 , Sampler246_g118060 , Coords246_g118060 , WorldPosition246_g118060 , WorldNormal246_g118060 );
				TEXTURE2D(Texture234_g118060) = _OverlayNormalTex;
				SamplerState Sampler234_g118060 = SS29_g118088;
				float4 Coords234_g118060 = temp_output_37_0_g118060;
				float3 WorldPosition234_g118060 = temp_output_279_0_g118060;
				float4 localSampleStochastic2D234_g118060 = SampleStochastic2D( Texture234_g118060 , Sampler234_g118060 , Coords234_g118060 , WorldPosition234_g118060 );
				TEXTURE2D(Texture263_g118060) = _OverlayNormalTex;
				SamplerState Sampler263_g118060 = SS29_g118088;
				half4 Coords263_g118060 = temp_output_37_0_g118060;
				half3 WorldPosition263_g118060 = temp_output_279_0_g118060;
				half3 WorldNormal263_g118060 = temp_output_280_0_g118060;
				half4 localSampleStochastic3D263_g118060 = SampleStochastic3D( Texture263_g118060 , Sampler263_g118060 , Coords263_g118060 , WorldPosition263_g118060 , WorldNormal263_g118060 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch686_g118054 = localSamplePlanar2D238_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch686_g118054 = localSamplePlanar3D246_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch686_g118054 = localSampleStochastic2D234_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch686_g118054 = localSampleStochastic3D263_g118060;
				#else
				float4 staticSwitch686_g118054 = localSamplePlanar2D238_g118060;
				#endif
				half4 Normal_Packed45_g118064 = staticSwitch686_g118054;
				float2 appendResult58_g118064 = (float2(( (Normal_Packed45_g118064).x * (Normal_Packed45_g118064).w ) , (Normal_Packed45_g118064).y));
				half2 Normal_Default50_g118064 = appendResult58_g118064;
				half2 Normal_ASTC41_g118064 = (Normal_Packed45_g118064).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g118064 = Normal_ASTC41_g118064;
				#else
				float2 staticSwitch38_g118064 = Normal_Default50_g118064;
				#endif
				half2 Normal_NO_DTX544_g118064 = (Normal_Packed45_g118064).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g118064 = Normal_NO_DTX544_g118064;
				#else
				float2 staticSwitch37_g118064 = staticSwitch38_g118064;
				#endif
				half2 Normal_Planar45_g118063 = (staticSwitch37_g118064*2.0 + -1.0);
				float2 break71_g118063 = Normal_Planar45_g118063;
				float3 appendResult72_g118063 = (float3(break71_g118063.x , 0.0 , break71_g118063.y));
				half2 Overlay_Normal528_g118054 = (mul( ase_worldToTangent, appendResult72_g118063 )).xy;
				#ifdef TVE_OVERLAY_TEX
				float2 staticSwitch579_g118054 = Overlay_Normal528_g118054;
				#else
				float2 staticSwitch579_g118054 = Visual_NormalTS535_g118054;
				#endif
				float2 lerpResult551_g118054 = lerp( Visual_NormalTS535_g118054 , ( staticSwitch579_g118054 * _OverlayNormalValue ) , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float2 staticSwitch583_g118054 = lerpResult551_g118054;
				#else
				float2 staticSwitch583_g118054 = Visual_NormalTS535_g118054;
				#endif
				half2 Final_NormalTS499_g118054 = staticSwitch583_g118054;
				float2 In_NormalTS3_g118057 = Final_NormalTS499_g118054;
				float3 In_NormalWS3_g118057 = temp_output_739_21_g118054;
				half4 Visual_Masks536_g118054 = Out_Shader4_g118055;
				float4 appendResult585_g118054 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
				float4 lerpResult584_g118054 = lerp( Visual_Masks536_g118054 , appendResult585_g118054 , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float4 staticSwitch586_g118054 = lerpResult584_g118054;
				#else
				float4 staticSwitch586_g118054 = Visual_Masks536_g118054;
				#endif
				half4 Final_Masks482_g118054 = staticSwitch586_g118054;
				float4 In_Shader3_g118057 = Final_Masks482_g118054;
				float4 In_Emissive3_g118057 = Out_Emissive4_g118055;
				float temp_output_739_12_g118054 = Out_Grayscale4_g118055;
				float In_Grayscale3_g118057 = temp_output_739_12_g118054;
				float In_Luminosity3_g118057 = temp_output_739_15_g118054;
				float In_MultiMask3_g118057 = Out_MultiMask4_g118055;
				float In_AlphaClip3_g118057 = Out_AlphaClip4_g118055;
				float In_AlphaFade3_g118057 = Out_AlphaFade4_g118055;
				float3 In_Translucency3_g118057 = Out_Translucency4_g118055;
				half Visual_Transmission699_g118054 = Out_Transmission4_g118055;
				float lerpResult746_g118054 = lerp( Visual_Transmission699_g118054 , ( Visual_Transmission699_g118054 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g118054 * Overlay_MaskNoise427_g118054 * Overlay_MaskGlobal429_g118054 ));
				#ifdef TVE_OVERLAY
				float staticSwitch703_g118054 = lerpResult746_g118054;
				#else
				float staticSwitch703_g118054 = Visual_Transmission699_g118054;
				#endif
				half Final_Transmission702_g118054 = staticSwitch703_g118054;
				float In_Transmission3_g118057 = Final_Transmission702_g118054;
				float In_Thickness3_g118057 = Out_Thickness4_g118055;
				float In_Diffusion3_g118057 = Out_Diffusion4_g118055;
				Data3_g118057.Dummy = In_Dummy3_g118057;
				Data3_g118057.Albedo = In_Albedo3_g118057;
				Data3_g118057.AlbedoRaw = In_AlbedoRaw3_g118057;
				Data3_g118057.NormalTS = In_NormalTS3_g118057;
				Data3_g118057.NormalWS = In_NormalWS3_g118057;
				Data3_g118057.Shader = In_Shader3_g118057;
				Data3_g118057.Emissive= In_Emissive3_g118057;
				Data3_g118057.MultiMask = In_MultiMask3_g118057;
				Data3_g118057.Grayscale = In_Grayscale3_g118057;
				Data3_g118057.Luminosity = In_Luminosity3_g118057;
				Data3_g118057.AlphaClip = In_AlphaClip3_g118057;
				Data3_g118057.AlphaFade = In_AlphaFade3_g118057;
				Data3_g118057.Translucency = In_Translucency3_g118057;
				Data3_g118057.Transmission = In_Transmission3_g118057;
				Data3_g118057.Thickness = In_Thickness3_g118057;
				Data3_g118057.Diffusion = In_Diffusion3_g118057;
				TVEVisualData Data4_g118091 = Data3_g118057;
				float Out_Dummy4_g118091 = 0;
				float3 Out_Albedo4_g118091 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118091 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118091 = float2( 0,0 );
				float3 Out_NormalWS4_g118091 = float3( 0,0,0 );
				float4 Out_Shader4_g118091 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118091 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118091 = 0;
				float Out_Grayscale4_g118091 = 0;
				float Out_Luminosity4_g118091 = 0;
				float Out_AlphaClip4_g118091 = 0;
				float Out_AlphaFade4_g118091 = 0;
				float3 Out_Translucency4_g118091 = float3( 0,0,0 );
				float Out_Transmission4_g118091 = 0;
				float Out_Thickness4_g118091 = 0;
				float Out_Diffusion4_g118091 = 0;
				Out_Dummy4_g118091 = Data4_g118091.Dummy;
				Out_Albedo4_g118091 = Data4_g118091.Albedo;
				Out_AlbedoRaw4_g118091 = Data4_g118091.AlbedoRaw;
				Out_NormalTS4_g118091 = Data4_g118091.NormalTS;
				Out_NormalWS4_g118091 = Data4_g118091.NormalWS;
				Out_Shader4_g118091 = Data4_g118091.Shader;
				Out_Emissive4_g118091= Data4_g118091.Emissive;
				Out_MultiMask4_g118091 = Data4_g118091.MultiMask;
				Out_Grayscale4_g118091 = Data4_g118091.Grayscale;
				Out_Luminosity4_g118091= Data4_g118091.Luminosity;
				Out_AlphaClip4_g118091 = Data4_g118091.AlphaClip;
				Out_AlphaFade4_g118091 = Data4_g118091.AlphaFade;
				Out_Translucency4_g118091 = Data4_g118091.Translucency;
				Out_Transmission4_g118091 = Data4_g118091.Transmission;
				Out_Thickness4_g118091 = Data4_g118091.Thickness;
				Out_Diffusion4_g118091 = Data4_g118091.Diffusion;
				half3 Visual_Albedo127_g118090 = Out_Albedo4_g118091;
				TVEGlobalData Data15_g118096 = Data204_g117810;
				float Out_Dummy15_g118096 = 0;
				float4 Out_CoatParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118096 = float4( 0,0,0,0 );
				Out_Dummy15_g118096 = Data15_g118096.Dummy;
				Out_CoatParams15_g118096 = Data15_g118096.CoatParams;
				Out_PaintParams15_g118096 = Data15_g118096.PaintParams;
				Out_GlowParams15_g118096 = Data15_g118096.GlowParams;
				Out_AtmoParams15_g118096= Data15_g118096.AtmoParams;
				Out_FadeParams15_g118096= Data15_g118096.FadeParams;
				Out_FormParams15_g118096 = Data15_g118096.FormParams;
				Out_LandParams15_g118096 = Data15_g118096.LandParams;
				Out_WindParams15_g118096 = Data15_g118096.WindParams;
				Out_PushParams15_g118096 = Data15_g118096.PushParams;
				half4 Global_AtmoParams516_g118090 = Out_AtmoParams15_g118096;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch663_g118090 = ( (Global_AtmoParams516_g118090).y * TVE_IsEnabled );
				#else
				float staticSwitch663_g118090 = 1.0;
				#endif
				half Global_Wetness429_g118090 = staticSwitch663_g118090;
				half Wetness_Value1042_g118090 = ( _WetnessIntensityValue * Global_Wetness429_g118090 );
				half Wetness_VertMask1024_g118090 = 1.0;
				float temp_output_1043_0_g118090 = ( Wetness_Value1042_g118090 * Wetness_VertMask1024_g118090 );
				half Wetness_Mask866_g118090 = temp_output_1043_0_g118090;
				half Water_VertMask1094_g118090 = 1.0;
				half4 Visual_Masks536_g118090 = Out_Shader4_g118091;
				float lerpResult1013_g118090 = lerp( 1.0 , (Visual_Masks536_g118090).z , _WetnessWaterBaseValue);
				half Water_HeightMask782_g118090 = lerpResult1013_g118090;
				float clampResult17_g118105 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g118090 * Water_VertMask1094_g118090 ) - Water_HeightMask782_g118090 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g118106 = _WetnessWaterBlendRemap.x;
				float temp_output_10_0_g118106 = ( _WetnessWaterBlendRemap.y - temp_output_7_0_g118106 );
				TVEModelData Data15_g118104 = Data16_g117809;
				float Out_Dummy15_g118104 = 0;
				float3 Out_PositionWS15_g118104 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118104 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118104 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118104 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118104 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g118104 = float3( 0,0,0 );
				float4 Out_VertexData15_g118104 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118104 = float4( 0,0,0,0 );
				Out_Dummy15_g118104 = Data15_g118104.Dummy;
				Out_PositionWS15_g118104 = Data15_g118104.PositionWS;
				Out_PositionWO15_g118104 = Data15_g118104.PositionWO;
				Out_PivotWS15_g118104 = Data15_g118104.PivotWS;
				Out_PivotWO15_g118104 = Data15_g118104.PivotWO;
				Out_NormalWS15_g118104 = Data15_g118104.NormalWS;
				Out_ViewDirWS15_g118104 = Data15_g118104.ViewDirWS;
				Out_VertexData15_g118104 = Data15_g118104.VertexData;
				Out_BoundsData15_g118104 = Data15_g118104.BoundsData;
				half3 Model_NormalWS798_g118090 = Out_NormalWS15_g118104;
				float temp_output_786_0_g118090 = saturate( (Model_NormalWS798_g118090).y );
				half Wetness_ProjMask790_g118090 = temp_output_786_0_g118090;
				half Water_Mask760_g118090 = ( saturate( ( ( clampResult17_g118105 - temp_output_7_0_g118106 ) / ( temp_output_10_0_g118106 + 0.0001 ) ) ) * Wetness_ProjMask790_g118090 );
				float3 lerpResult918_g118090 = lerp( Visual_Albedo127_g118090 , ( Visual_Albedo127_g118090 * (_WetnessWaterColor).rgb ) , Water_Mask760_g118090);
				#ifdef TVE_WETNESS_WATER
				float3 staticSwitch946_g118090 = lerpResult918_g118090;
				#else
				float3 staticSwitch946_g118090 = Visual_Albedo127_g118090;
				#endif
				float3 lerpResult768_g118090 = lerp( staticSwitch946_g118090 , ( staticSwitch946_g118090 * staticSwitch946_g118090 ) , _WetnessContrastValue);
				float3 lerpResult651_g118090 = lerp( Visual_Albedo127_g118090 , lerpResult768_g118090 , Wetness_Mask866_g118090);
				#ifdef TVE_WETNESS
				float3 staticSwitch577_g118090 = lerpResult651_g118090;
				#else
				float3 staticSwitch577_g118090 = Visual_Albedo127_g118090;
				#endif
				half3 Final_Albedo493_g118090 = staticSwitch577_g118090;
				float3 In_Albedo3_g118092 = Final_Albedo493_g118090;
				float3 In_AlbedoRaw3_g118092 = Out_AlbedoRaw4_g118091;
				half2 Visual_Normal535_g118090 = Out_NormalTS4_g118091;
				float lerpResult877_g118090 = lerp( 1.0 , 0.0 , ( Water_Mask760_g118090 * Water_Mask760_g118090 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch957_g118090 = ( Visual_Normal535_g118090 * lerpResult877_g118090 );
				#else
				float2 staticSwitch957_g118090 = Visual_Normal535_g118090;
				#endif
				float2 temp_cast_35 = (0.0).xx;
				TEXTURE2D(Texture238_g118102) = _WetnessDropsTexRT;
				SamplerState Sampler238_g118102 = sampler_Linear_Repeat_Aniso8;
				float4 appendResult924_g118090 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g118102 = appendResult924_g118090;
				half4 Coords238_g118102 = temp_output_37_0_g118102;
				half3 Model_PositionWO602_g118090 = Out_PositionWO15_g118104;
				float3 temp_output_279_0_g118102 = Model_PositionWO602_g118090;
				half3 WorldPosition238_g118102 = temp_output_279_0_g118102;
				half4 localSamplePlanar2D238_g118102 = SamplePlanar2D( Texture238_g118102 , Sampler238_g118102 , Coords238_g118102 , WorldPosition238_g118102 );
				float4 temp_output_1010_0_g118090 = localSamplePlanar2D238_g118102;
				half2 Rain_DropsNormal919_g118090 = (temp_output_1010_0_g118090).zw;
				float2 temp_output_903_0_g118090 = (Rain_DropsNormal919_g118090*2.0 + -1.0);
				half2 Rain_RingsNormal713_g118090 = (temp_output_1010_0_g118090).xy;
				float2 lerpResult904_g118090 = lerp( temp_output_903_0_g118090 , (Rain_RingsNormal713_g118090*2.0 + -1.0) , ( Water_Mask760_g118090 * Water_Mask760_g118090 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch960_g118090 = lerpResult904_g118090;
				#else
				float2 staticSwitch960_g118090 = temp_output_903_0_g118090;
				#endif
				half2 Rain_Drops1002_g118090 = ( staticSwitch960_g118090 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
				half3 Model_PositionWS823_g118090 = Out_PositionWS15_g118104;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch949_g118090 = ( (Global_AtmoParams516_g118090).w * TVE_IsEnabled );
				#else
				float staticSwitch949_g118090 = 1.0;
				#endif
				half Global_Rain955_g118090 = staticSwitch949_g118090;
				half Rain_Value1067_g118090 = Global_Rain955_g118090;
				half Rain_VertMask1108_g118090 = 1.0;
				half Rain_Mask999_g118090 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g118090 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g118090 * Rain_VertMask1108_g118090 );
				half2 Normal_Planar45_g118101 = ( Rain_Drops1002_g118090 * Rain_Mask999_g118090 * Wetness_ProjMask790_g118090 );
				float2 break71_g118101 = Normal_Planar45_g118101;
				float3 appendResult72_g118101 = (float3(break71_g118101.x , 0.0 , break71_g118101.y));
				half2 Wetness_Normal526_g118090 = (mul( ase_worldToTangent, appendResult72_g118101 )).xy;
				#ifdef TVE_WETNESS_DROPS
				float2 staticSwitch583_g118090 = Wetness_Normal526_g118090;
				#else
				float2 staticSwitch583_g118090 = temp_cast_35;
				#endif
				#ifdef TVE_WETNESS
				float2 staticSwitch774_g118090 = ( staticSwitch957_g118090 + staticSwitch583_g118090 );
				#else
				float2 staticSwitch774_g118090 = Visual_Normal535_g118090;
				#endif
				half2 Final_Normal499_g118090 = staticSwitch774_g118090;
				float2 In_NormalTS3_g118092 = Final_Normal499_g118090;
				float3 In_NormalWS3_g118092 = Out_NormalWS4_g118091;
				float4 break658_g118090 = Visual_Masks536_g118090;
				float temp_output_935_0_g118090 = ( Wetness_Mask866_g118090 * _WetnessSmoothnessValue );
				float lerpResult941_g118090 = lerp( temp_output_935_0_g118090 , 2.0 , Water_Mask760_g118090);
				#ifdef TVE_WETNESS_WATER
				float staticSwitch959_g118090 = lerpResult941_g118090;
				#else
				float staticSwitch959_g118090 = temp_output_935_0_g118090;
				#endif
				float4 appendResult661_g118090 = (float4(break658_g118090.x , break658_g118090.y , break658_g118090.z , saturate( ( break658_g118090.w + staticSwitch959_g118090 ) )));
				#ifdef TVE_WETNESS
				float4 staticSwitch586_g118090 = appendResult661_g118090;
				#else
				float4 staticSwitch586_g118090 = Visual_Masks536_g118090;
				#endif
				half4 Final_Masks482_g118090 = staticSwitch586_g118090;
				float4 In_Shader3_g118092 = Final_Masks482_g118090;
				float4 In_Emissive3_g118092 = Out_Emissive4_g118091;
				float In_Grayscale3_g118092 = Out_Grayscale4_g118091;
				float In_Luminosity3_g118092 = Out_Luminosity4_g118091;
				float In_MultiMask3_g118092 = Out_MultiMask4_g118091;
				float In_AlphaClip3_g118092 = Out_AlphaClip4_g118091;
				float In_AlphaFade3_g118092 = Out_AlphaFade4_g118091;
				float3 In_Translucency3_g118092 = Out_Translucency4_g118091;
				float In_Transmission3_g118092 = Out_Transmission4_g118091;
				float In_Thickness3_g118092 = Out_Thickness4_g118091;
				float In_Diffusion3_g118092 = Out_Diffusion4_g118091;
				Data3_g118092.Dummy = In_Dummy3_g118092;
				Data3_g118092.Albedo = In_Albedo3_g118092;
				Data3_g118092.AlbedoRaw = In_AlbedoRaw3_g118092;
				Data3_g118092.NormalTS = In_NormalTS3_g118092;
				Data3_g118092.NormalWS = In_NormalWS3_g118092;
				Data3_g118092.Shader = In_Shader3_g118092;
				Data3_g118092.Emissive= In_Emissive3_g118092;
				Data3_g118092.MultiMask = In_MultiMask3_g118092;
				Data3_g118092.Grayscale = In_Grayscale3_g118092;
				Data3_g118092.Luminosity = In_Luminosity3_g118092;
				Data3_g118092.AlphaClip = In_AlphaClip3_g118092;
				Data3_g118092.AlphaFade = In_AlphaFade3_g118092;
				Data3_g118092.Translucency = In_Translucency3_g118092;
				Data3_g118092.Transmission = In_Transmission3_g118092;
				Data3_g118092.Thickness = In_Thickness3_g118092;
				Data3_g118092.Diffusion = In_Diffusion3_g118092;
				TVEVisualData Data4_g118128 = Data3_g118092;
				float Out_Dummy4_g118128 = 0;
				float3 Out_Albedo4_g118128 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118128 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118128 = float2( 0,0 );
				float3 Out_NormalWS4_g118128 = float3( 0,0,0 );
				float4 Out_Shader4_g118128 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118128 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118128 = 0;
				float Out_Grayscale4_g118128 = 0;
				float Out_Luminosity4_g118128 = 0;
				float Out_AlphaClip4_g118128 = 0;
				float Out_AlphaFade4_g118128 = 0;
				float3 Out_Translucency4_g118128 = float3( 0,0,0 );
				float Out_Transmission4_g118128 = 0;
				float Out_Thickness4_g118128 = 0;
				float Out_Diffusion4_g118128 = 0;
				Out_Dummy4_g118128 = Data4_g118128.Dummy;
				Out_Albedo4_g118128 = Data4_g118128.Albedo;
				Out_AlbedoRaw4_g118128 = Data4_g118128.AlbedoRaw;
				Out_NormalTS4_g118128 = Data4_g118128.NormalTS;
				Out_NormalWS4_g118128 = Data4_g118128.NormalWS;
				Out_Shader4_g118128 = Data4_g118128.Shader;
				Out_Emissive4_g118128= Data4_g118128.Emissive;
				Out_MultiMask4_g118128 = Data4_g118128.MultiMask;
				Out_Grayscale4_g118128 = Data4_g118128.Grayscale;
				Out_Luminosity4_g118128= Data4_g118128.Luminosity;
				Out_AlphaClip4_g118128 = Data4_g118128.AlphaClip;
				Out_AlphaFade4_g118128 = Data4_g118128.AlphaFade;
				Out_Translucency4_g118128 = Data4_g118128.Translucency;
				Out_Transmission4_g118128 = Data4_g118128.Transmission;
				Out_Thickness4_g118128 = Data4_g118128.Thickness;
				Out_Diffusion4_g118128 = Data4_g118128.Diffusion;
				float3 temp_output_297_0_g118119 = Out_Albedo4_g118128;
				float3 In_Albedo3_g118129 = temp_output_297_0_g118119;
				float3 temp_output_297_23_g118119 = Out_AlbedoRaw4_g118128;
				float3 In_AlbedoRaw3_g118129 = temp_output_297_23_g118119;
				float2 In_NormalTS3_g118129 = Out_NormalTS4_g118128;
				float3 In_NormalWS3_g118129 = Out_NormalWS4_g118128;
				float4 In_Shader3_g118129 = Out_Shader4_g118128;
				float4 temp_cast_36 = (0.0).xxxx;
				half4 Visual_Emissive255_g118119 = Out_Emissive4_g118128;
				half Emissive_MeshMask221_g118119 = 1.0;
				half Emissive_Mask103_g118119 = 1.0;
				float temp_output_279_0_g118119 = ( Emissive_MeshMask221_g118119 * Emissive_Mask103_g118119 );
				float3 appendResult293_g118119 = (float3(temp_output_279_0_g118119 , temp_output_279_0_g118119 , temp_output_279_0_g118119));
				half3 Local_EmissiveColor278_g118119 = appendResult293_g118119;
				float3 temp_cast_37 = (1.0).xxx;
				TVEGlobalData Data15_g118120 = Data204_g117810;
				float Out_Dummy15_g118120 = 0;
				float4 Out_CoatParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118120 = float4( 0,0,0,0 );
				Out_Dummy15_g118120 = Data15_g118120.Dummy;
				Out_CoatParams15_g118120 = Data15_g118120.CoatParams;
				Out_PaintParams15_g118120 = Data15_g118120.PaintParams;
				Out_GlowParams15_g118120 = Data15_g118120.GlowParams;
				Out_AtmoParams15_g118120= Data15_g118120.AtmoParams;
				Out_FadeParams15_g118120= Data15_g118120.FadeParams;
				Out_FormParams15_g118120 = Data15_g118120.FormParams;
				Out_LandParams15_g118120 = Data15_g118120.LandParams;
				Out_WindParams15_g118120 = Data15_g118120.WindParams;
				Out_PushParams15_g118120 = Data15_g118120.PushParams;
				half4 Global_GlowParams179_g118119 = Out_GlowParams15_g118120;
				float3 lerpResult299_g118119 = lerp( float3( 1,1,1 ) , (Global_GlowParams179_g118119).xyz , TVE_IsEnabled);
				#ifdef TVE_EMISSIVE_ELEMENT
				float3 staticSwitch228_g118119 = lerpResult299_g118119;
				#else
				float3 staticSwitch228_g118119 = temp_cast_37;
				#endif
				half3 Emissive_GlobalMask248_g118119 = staticSwitch228_g118119;
				half3 Visual_AlbedoRaw306_g118119 = temp_output_297_23_g118119;
				float3 lerpResult307_g118119 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g118119 , _EmissiveColorMode);
				half3 Local_EmissiveValue88_g118119 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g118119 * lerpResult307_g118119 );
				half3 Emissive_Blend260_g118119 = ( ( (Visual_Emissive255_g118119).xyz * Local_EmissiveColor278_g118119 ) * Local_EmissiveValue88_g118119 );
				float3 temp_output_3_0_g118133 = Emissive_Blend260_g118119;
				float temp_output_15_0_g118133 = _emissive_power_value;
				float3 hdEmission22_g118133 = ASEGetEmissionHDRColor(temp_output_3_0_g118133,temp_output_15_0_g118133,_EmissiveExposureValue,GetInverseCurrentExposureMultiplier());
				half Local_EmissiveMask294_g118119 = temp_output_279_0_g118119;
				float4 appendResult295_g118119 = (float4(hdEmission22_g118133 , Local_EmissiveMask294_g118119));
				#ifdef TVE_EMISSIVE
				float4 staticSwitch129_g118119 = appendResult295_g118119;
				#else
				float4 staticSwitch129_g118119 = temp_cast_36;
				#endif
				half4 Final_Emissive184_g118119 = staticSwitch129_g118119;
				float4 In_Emissive3_g118129 = Final_Emissive184_g118119;
				float In_Grayscale3_g118129 = Out_Grayscale4_g118128;
				float In_Luminosity3_g118129 = Out_Luminosity4_g118128;
				float temp_output_297_11_g118119 = Out_MultiMask4_g118128;
				float In_MultiMask3_g118129 = temp_output_297_11_g118119;
				float In_AlphaClip3_g118129 = Out_AlphaClip4_g118128;
				float In_AlphaFade3_g118129 = Out_AlphaFade4_g118128;
				float3 In_Translucency3_g118129 = Out_Translucency4_g118128;
				float In_Transmission3_g118129 = Out_Transmission4_g118128;
				float In_Thickness3_g118129 = Out_Thickness4_g118128;
				float In_Diffusion3_g118129 = Out_Diffusion4_g118128;
				Data3_g118129.Dummy = In_Dummy3_g118129;
				Data3_g118129.Albedo = In_Albedo3_g118129;
				Data3_g118129.AlbedoRaw = In_AlbedoRaw3_g118129;
				Data3_g118129.NormalTS = In_NormalTS3_g118129;
				Data3_g118129.NormalWS = In_NormalWS3_g118129;
				Data3_g118129.Shader = In_Shader3_g118129;
				Data3_g118129.Emissive= In_Emissive3_g118129;
				Data3_g118129.MultiMask = In_MultiMask3_g118129;
				Data3_g118129.Grayscale = In_Grayscale3_g118129;
				Data3_g118129.Luminosity = In_Luminosity3_g118129;
				Data3_g118129.AlphaClip = In_AlphaClip3_g118129;
				Data3_g118129.AlphaFade = In_AlphaFade3_g118129;
				Data3_g118129.Translucency = In_Translucency3_g118129;
				Data3_g118129.Transmission = In_Transmission3_g118129;
				Data3_g118129.Thickness = In_Thickness3_g118129;
				Data3_g118129.Diffusion = In_Diffusion3_g118129;
				TVEVisualData Data4_g118145 = Data3_g118129;
				float Out_Dummy4_g118145 = 0;
				float3 Out_Albedo4_g118145 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118145 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118145 = float2( 0,0 );
				float3 Out_NormalWS4_g118145 = float3( 0,0,0 );
				float4 Out_Shader4_g118145 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118145 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118145 = 0;
				float Out_Grayscale4_g118145 = 0;
				float Out_Luminosity4_g118145 = 0;
				float Out_AlphaClip4_g118145 = 0;
				float Out_AlphaFade4_g118145 = 0;
				float3 Out_Translucency4_g118145 = float3( 0,0,0 );
				float Out_Transmission4_g118145 = 0;
				float Out_Thickness4_g118145 = 0;
				float Out_Diffusion4_g118145 = 0;
				Out_Dummy4_g118145 = Data4_g118145.Dummy;
				Out_Albedo4_g118145 = Data4_g118145.Albedo;
				Out_AlbedoRaw4_g118145 = Data4_g118145.AlbedoRaw;
				Out_NormalTS4_g118145 = Data4_g118145.NormalTS;
				Out_NormalWS4_g118145 = Data4_g118145.NormalWS;
				Out_Shader4_g118145 = Data4_g118145.Shader;
				Out_Emissive4_g118145= Data4_g118145.Emissive;
				Out_MultiMask4_g118145 = Data4_g118145.MultiMask;
				Out_Grayscale4_g118145 = Data4_g118145.Grayscale;
				Out_Luminosity4_g118145= Data4_g118145.Luminosity;
				Out_AlphaClip4_g118145 = Data4_g118145.AlphaClip;
				Out_AlphaFade4_g118145 = Data4_g118145.AlphaFade;
				Out_Translucency4_g118145 = Data4_g118145.Translucency;
				Out_Transmission4_g118145 = Data4_g118145.Transmission;
				Out_Thickness4_g118145 = Data4_g118145.Thickness;
				Out_Diffusion4_g118145 = Data4_g118145.Diffusion;
				float3 In_Albedo3_g118135 = Out_Albedo4_g118145;
				float3 In_AlbedoRaw3_g118135 = Out_AlbedoRaw4_g118145;
				float2 In_NormalTS3_g118135 = Out_NormalTS4_g118145;
				float3 In_NormalWS3_g118135 = Out_NormalWS4_g118145;
				float4 In_Shader3_g118135 = Out_Shader4_g118145;
				float4 In_Emissive3_g118135 = Out_Emissive4_g118145;
				float In_Grayscale3_g118135 = Out_Grayscale4_g118145;
				float In_Luminosity3_g118135 = Out_Luminosity4_g118145;
				float temp_output_836_11_g118134 = Out_MultiMask4_g118145;
				float In_MultiMask3_g118135 = temp_output_836_11_g118134;
				half Visual_AlphaClip667_g118134 = Out_AlphaClip4_g118145;
				half Input_True57_g118142 = Visual_AlphaClip667_g118134;
				half True36_g118142 = Input_True57_g118142;
				TVEGlobalData Data15_g118144 = Data204_g117810;
				float Out_Dummy15_g118144 = 0;
				float4 Out_CoatParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118144 = float4( 0,0,0,0 );
				Out_Dummy15_g118144 = Data15_g118144.Dummy;
				Out_CoatParams15_g118144 = Data15_g118144.CoatParams;
				Out_PaintParams15_g118144 = Data15_g118144.PaintParams;
				Out_GlowParams15_g118144 = Data15_g118144.GlowParams;
				Out_AtmoParams15_g118144= Data15_g118144.AtmoParams;
				Out_FadeParams15_g118144= Data15_g118144.FadeParams;
				Out_FormParams15_g118144 = Data15_g118144.FormParams;
				Out_LandParams15_g118144 = Data15_g118144.LandParams;
				Out_WindParams15_g118144 = Data15_g118144.WindParams;
				Out_PushParams15_g118144 = Data15_g118144.PushParams;
				half4 Global_FadeParams516_g118134 = Out_FadeParams15_g118144;
				#ifdef TVE_CUTOUT_ELEMENT
				float staticSwitch663_g118134 = saturate( (Global_FadeParams516_g118134).w );
				#else
				float staticSwitch663_g118134 = 1.0;
				#endif
				half Local_GlobalMask429_g118134 = staticSwitch663_g118134;
				half Local_AlphaMask814_g118134 = 1.0;
				half Local_NoiseMask678_g118134 = 1.0;
				half Local_VertMask766_g118134 = 1.0;
				half Local_MultiMask685_g118134 = 1.0;
				float lerpResult728_g118134 = lerp( Visual_AlphaClip667_g118134 , min( Visual_AlphaClip667_g118134 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g118134 ) - ( Local_AlphaMask814_g118134 * Local_NoiseMask678_g118134 * Local_VertMask766_g118134 ) ) ) ) , Local_MultiMask685_g118134);
				half Local_AlphaClip784_g118134 = lerpResult728_g118134;
				half Input_False58_g118142 = Local_AlphaClip784_g118134;
				half False36_g118142 = Input_False58_g118142;
				half localShadowPassCheck36_g118142 = ShadowPassCheck36_g118142( True36_g118142 , False36_g118142 );
				#ifdef TVE_CUTOUT_SHADOW
				float staticSwitch791_g118134 = Local_AlphaClip784_g118134;
				#else
				float staticSwitch791_g118134 = localShadowPassCheck36_g118142;
				#endif
				float temp_output_6_0_g118143 = staticSwitch791_g118134;
				#ifdef TVE_REGISTER
				float staticSwitch14_g118143 = ( temp_output_6_0_g118143 + ( _CutoutShadowMode * 0.0 ) );
				#else
				float staticSwitch14_g118143 = temp_output_6_0_g118143;
				#endif
				float temp_output_798_0_g118134 = staticSwitch14_g118143;
				#ifdef TVE_CUTOUT
				float staticSwitch577_g118134 = temp_output_798_0_g118134;
				#else
				float staticSwitch577_g118134 = Visual_AlphaClip667_g118134;
				#endif
				half Final_AlphaClip795_g118134 = staticSwitch577_g118134;
				float In_AlphaClip3_g118135 = Final_AlphaClip795_g118134;
				float In_AlphaFade3_g118135 = Out_AlphaFade4_g118145;
				float3 In_Translucency3_g118135 = Out_Translucency4_g118145;
				float In_Transmission3_g118135 = Out_Transmission4_g118145;
				float In_Thickness3_g118135 = Out_Thickness4_g118145;
				float In_Diffusion3_g118135 = Out_Diffusion4_g118145;
				Data3_g118135.Dummy = In_Dummy3_g118135;
				Data3_g118135.Albedo = In_Albedo3_g118135;
				Data3_g118135.AlbedoRaw = In_AlbedoRaw3_g118135;
				Data3_g118135.NormalTS = In_NormalTS3_g118135;
				Data3_g118135.NormalWS = In_NormalWS3_g118135;
				Data3_g118135.Shader = In_Shader3_g118135;
				Data3_g118135.Emissive= In_Emissive3_g118135;
				Data3_g118135.MultiMask = In_MultiMask3_g118135;
				Data3_g118135.Grayscale = In_Grayscale3_g118135;
				Data3_g118135.Luminosity = In_Luminosity3_g118135;
				Data3_g118135.AlphaClip = In_AlphaClip3_g118135;
				Data3_g118135.AlphaFade = In_AlphaFade3_g118135;
				Data3_g118135.Translucency = In_Translucency3_g118135;
				Data3_g118135.Transmission = In_Transmission3_g118135;
				Data3_g118135.Thickness = In_Thickness3_g118135;
				Data3_g118135.Diffusion = In_Diffusion3_g118135;
				TVEVisualData Data4_g118158 = Data3_g118135;
				float Out_Dummy4_g118158 = 0;
				float3 Out_Albedo4_g118158 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118158 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118158 = float2( 0,0 );
				float3 Out_NormalWS4_g118158 = float3( 0,0,0 );
				float4 Out_Shader4_g118158 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118158 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118158 = 0;
				float Out_Grayscale4_g118158 = 0;
				float Out_Luminosity4_g118158 = 0;
				float Out_AlphaClip4_g118158 = 0;
				float Out_AlphaFade4_g118158 = 0;
				float3 Out_Translucency4_g118158 = float3( 0,0,0 );
				float Out_Transmission4_g118158 = 0;
				float Out_Thickness4_g118158 = 0;
				float Out_Diffusion4_g118158 = 0;
				Out_Dummy4_g118158 = Data4_g118158.Dummy;
				Out_Albedo4_g118158 = Data4_g118158.Albedo;
				Out_AlbedoRaw4_g118158 = Data4_g118158.AlbedoRaw;
				Out_NormalTS4_g118158 = Data4_g118158.NormalTS;
				Out_NormalWS4_g118158 = Data4_g118158.NormalWS;
				Out_Shader4_g118158 = Data4_g118158.Shader;
				Out_Emissive4_g118158= Data4_g118158.Emissive;
				Out_MultiMask4_g118158 = Data4_g118158.MultiMask;
				Out_Grayscale4_g118158 = Data4_g118158.Grayscale;
				Out_Luminosity4_g118158= Data4_g118158.Luminosity;
				Out_AlphaClip4_g118158 = Data4_g118158.AlphaClip;
				Out_AlphaFade4_g118158 = Data4_g118158.AlphaFade;
				Out_Translucency4_g118158 = Data4_g118158.Translucency;
				Out_Transmission4_g118158 = Data4_g118158.Transmission;
				Out_Thickness4_g118158 = Data4_g118158.Thickness;
				Out_Diffusion4_g118158 = Data4_g118158.Diffusion;
				float temp_output_3_0_g118160 = Out_AlphaClip4_g118158;
				float Alpha19_g118160 = temp_output_3_0_g118160;
				float temp_output_15_0_g118160 = 0.5;
				float Treshold19_g118160 = temp_output_15_0_g118160;
				#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_DITHER)
				#if defined ( TVE_PIPELINE_HD)
				#if !defined(SHADERPASS_FORWARD_BYPASS_ALPHA_TEST) && !defined(SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST)
				clip(Alpha19_g118160 - Treshold19_g118160);
				#endif
				#else
				clip(Alpha19_g118160 - Treshold19_g118160);
				#endif
				#endif
				
				surfaceDescription.Alpha = Alpha19_g118160;

				#ifdef _ALPHATEST_ON
				surfaceDescription.AlphaClipThreshold = _AlphaCutoff;
				#endif

				#ifdef _ALPHATEST_SHADOW_ON
				surfaceDescription.AlphaClipThresholdShadow = 0.5;
				#endif

				#ifdef _DEPTHOFFSET_ON
				surfaceDescription.DepthOffset = 0;
				#endif

				SurfaceData surfaceData;
				BuiltinData builtinData;
				GetSurfaceAndBuiltinData(surfaceDescription, input, V, posInput, surfaceData, builtinData);

				#ifdef _DEPTHOFFSET_ON
				outputDepth = posInput.deviceDepth;
				float bias = max(abs(ddx(posInput.deviceDepth)), abs(ddy(posInput.deviceDepth))) * _SlopeScaleDepthBias;
				outputDepth += bias;
				#endif

				#ifdef WRITE_MSAA_DEPTH
					depthColor = packedInput.vmesh.positionCS.z;
					depthColor.a = SharpenAlpha(builtinData.opacity, builtinData.alphaClipTreshold);
				#endif

				#if defined(WRITE_NORMAL_BUFFER)
				EncodeIntoNormalBuffer(ConvertSurfaceDataToNormalData(surfaceData), outNormalBuffer);
				#endif

                #if (defined(WRITE_DECAL_BUFFER) && !defined(_DISABLE_DECALS)) || defined(WRITE_RENDERING_LAYER)
				    DecalPrepassData decalPrepassData;
                    #ifdef _DISABLE_DECALS
				    ZERO_INITIALIZE(DecalPrepassData, decalPrepassData);
                    #else
				    decalPrepassData.geomNormalWS = surfaceData.geomNormalWS;
                    #endif
				    decalPrepassData.renderingLayerMask = GetMeshRenderingLayerMask();
				    EncodeIntoDecalPrepassBuffer(decalPrepassData, outDecalBuffer);
				#endif
			}
			ENDHLSL
		}

		UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
	UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"

		Pass
		{
			
			Name "SceneSelectionPass"
			Tags { "LightMode"="SceneSelectionPass" }

			Cull Off

			HLSLPROGRAM
			#define _ENERGY_CONSERVING_SPECULAR 1
			#define SUPPORT_BLENDMODE_PRESERVE_SPECULAR_LIGHTING
			#pragma shader_feature_local_fragment _ _DISABLE_DECALS
			#define _SPECULAR_OCCLUSION_FROM_AO 1
			#define ASE_ABSOLUTE_VERTEX_POS 1
			#define _MATERIAL_FEATURE_SPECULAR_COLOR 1
			#define _AMBIENT_OCCLUSION 1
			#define HAVE_MESH_MODIFICATION
			#define ASE_SRP_VERSION 170003
			#define ASE_USING_SAMPLING_MACROS 1

			#pragma editor_sync_compilation
            #pragma multi_compile _ DOTS_INSTANCING_ON

            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
            #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC _TRANSPARENT_REFRACTIVE_SORT
            #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT

			#pragma vertex Vert
			#pragma fragment Frag

			#define SHADERPASS SHADERPASS_DEPTH_ONLY
		    #define SCENESELECTIONPASS 1

			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/DebugMipmapStreamingMacros.hlsl"
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl"

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"

            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
                #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif

            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
                #define RAYTRACING_SHADER_GRAPH_LOW
            #endif

            #ifndef SHADER_UNLIT
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif

			#if defined(_DOUBLESIDED_ON) && !defined(ASE_NEED_CULLFACE)
			    #define ASE_NEED_CULLFACE 1
			#endif

            #if _MATERIAL_FEATURE_COLORED_TRANSMISSION
            #undef _MATERIAL_FEATURE_CLEAR_COAT
            #endif

		    #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
			#define OUTPUT_SPLIT_LIGHTING
		    #endif

		    #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
			#undef  _REFRACTION_PLANE
			#undef  _REFRACTION_SPHERE
			#define _REFRACTION_THIN
		    #endif

            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif

            #if SHADERPASS == SHADERPASS_MOTION_VECTORS && defined(WRITE_DECAL_BUFFER_AND_RENDERING_LAYER)
                #define WRITE_DECAL_BUFFER
            #endif

            #ifndef DEBUG_DISPLAY
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif

            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif

            #if (defined(_TRANSPARENT_WRITES_MOTION_VEC) || defined(_TRANSPARENT_REFRACTIVE_SORT)) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif

			CBUFFER_START( UnityPerMaterial )
			half4 _TerrainShaderMax13;
			half4 _TerrainCoord8;
			half4 _TerrainShaderMin8;
			half4 _TerrainShaderMax8;
			half4 _TerrainCoord9;
			half4 _TerrainShaderMin9;
			half4 _TerrainShaderMax9;
			half4 _TerrainCoord10;
			half4 _TerrainShaderMax7;
			half4 _TerrainShaderMin10;
			half4 _TerrainCoord11;
			half4 _TerrainShaderMin11;
			half4 _TerrainShaderMax11;
			half4 _TerrainCoord12;
			half4 _TerrainShaderMin12;
			half4 _TerrainShaderMax12;
			half4 _TerrainCoord13;
			half4 _TerrainShaderMax10;
			half4 _TerrainShaderMin13;
			half4 _TerrainShaderMin7;
			half4 _TerrainShaderMax6;
			half4 _TerrainShaderMin1;
			half4 _TerrainShaderMax1;
			half4 _TerrainCoord2;
			half4 _TerrainShaderMin2;
			half4 _TerrainShaderMax2;
			half4 _TerrainCoord3;
			half4 _TerrainShaderMin3;
			half4 _TerrainCoord7;
			half4 _TerrainShaderMax3;
			half4 _TerrainShaderMin4;
			half4 _TerrainShaderMax4;
			half4 _TerrainCoord5;
			half4 _TerrainShaderMin5;
			half4 _TerrainShaderMax5;
			half4 _TerrainCoord6;
			half4 _TerrainShaderMin6;
			half4 _TerrainCoord4;
			half4 _TerrainCoord1;
			half4 _TerrainParams15;
			half4 _TerrainShaderMin14;
			half4 _TerrainColor13;
			half4 _TerrainColor14;
			half4 _TerrainColor15;
			half4 _TerrainColor16;
			half4 _TerrainColor;
			half4 _TerrainParams1;
			half4 _TerrainParams2;
			half4 _TerrainColor12;
			half4 _TerrainParams3;
			half4 _TerrainParams5;
			half4 _TerrainParams6;
			half4 _TerrainParams7;
			half4 _TerrainParams8;
			half4 _TerrainParams9;
			half4 _TerrainParams10;
			half4 _TerrainParams11;
			half4 _TerrainParams4;
			half4 _TerrainCoord14;
			half4 _TerrainColor11;
			half4 _TerrainColor9;
			half4 _TerrainShaderMax14;
			half4 _TerrainCoord15;
			half4 _TerrainShaderMin15;
			half4 _TerrainShaderMax15;
			half4 _TerrainCoord16;
			half4 _TerrainShaderMin16;
			half4 _TerrainShaderMax16;
			half4 _TerrainColor10;
			half4 _TerrainParams14;
			half4 _TerrainColor2;
			half4 _TerrainColor3;
			half4 _TerrainColor4;
			half4 _TerrainColor5;
			half4 _TerrainColor6;
			half4 _TerrainColor7;
			half4 _TerrainColor8;
			half4 _TerrainColor1;
			half4 _TerrainParams12;
			float4 _TerrainControlTex1_TexelSize;
			half4 _TerrainPosition;
			float4 _TintingColor;
			half4 _TintingLumaRemap;
			half4 _TintingBlendRemap;
			float4 _DrynessColor;
			half4 _DrynessLumaRemap;
			half4 _DrynessBlendRemap;
			half4 _TerrainSize;
			half4 _OverlayColor;
			half4 _overlay_coord_value;
			half4 _OverlayCoordValue;
			half4 _OverlayGlitterColor;
			half4 _OverlayProjRemap;
			half4 _OverlayLumaRemap;
			half4 _OverlayBlendRemap1;
			half4 _WetnessWaterColor;
			half4 _WetnessWaterBlendRemap;
			half4 _EmissiveColor;
			half4 _TerrainSpecular16;
			half4 _TerrainSpecular15;
			half4 _object_phase_mode;
			half4 _TerrainSpecular13;
			half4 _TerrainParams16;
			half4 _TerrainSpecular1;
			half4 _TerrainSpecular14;
			half4 _TerrainSpecular2;
			half4 _TerrainSpecular3;
			half4 _TerrainSpecular4;
			half4 _TerrainSpecular5;
			half4 _TerrainSpecular6;
			half4 _TerrainSpecular7;
			half4 _TerrainSpecular8;
			half4 _TerrainParams13;
			half4 _TerrainSpecular10;
			half4 _TerrainSpecular12;
			half4 _TerrainSpecular11;
			half4 _TerrainSpecular9;
			half _DrynessIntensityValue;
			half _OverlaySubsurfaceValue;
			half _TerrainMetallicValue;
			half _WetnessWaterIntensityValue;
			half _WetnessIntensityValue;
			half _WetnessWaterBaseValue;
			half _TerrainNormalValue;
			half _WetnessContrastValue;
			half _WetnessDropsTillingValue;
			half _WetnessDropsNormalValue;
			half _WetnessDropsDistValue;
			half _WetnessSmoothnessValue;
			half _EmissiveIntensityValue;
			half _TintingElementMode;
			half _EmissiveColorMode;
			float _emissive_power_value;
			half _EmissiveExposureValue;
			half _CutoutIntensityValue;
			half _WetnessDropsIntensityValue;
			half _OverlaySmoothnessValue;
			half _OverlayLumaValue;
			half _TerrainOcclusionValue;
			half _DrynessMultiValue;
			half _DrynessShiftValue;
			half _DrynessLumaValue;
			half _DrynessGrayValue;
			half _DrynessSmoothnessValue;
			half _DrynessSubsurfaceValue;
			half _TintingLumaValue;
			half _OverlaySampleMode;
			half _OverlayNormalValue;
			half _OverlayCoordMode;
			half _OverlayTextureMode;
			half _OverlayGlitterIntensityValue;
			half _TintingIntensityValue;
			half _OverlayGlitterDistValue;
			half _OverlayIntensityValue;
			half _TintingGrayValue;
			half _OverlayProjValue;
			half _TerrainSmoothnessValue;
			half _TintingMultiValue;
			half _OverlayGlitterTillingValue;
			half _TerrainLayersMode;
			half _CutoutShadowMode;
			half _RenderEnd;
			half _IsTVEShader;
			half _IsCustomShader;
			half _IsShared;
			half _HasDefaultTextures;
			half _IsCollected;
			half _IsConverted;
			half _IsIdentifier;
			half _RenderDecals;
			half _RenderSSR;
			half _RenderClip;
			half _IsVersion;
			half _RenderShadow;
			half _RenderFilter;
			half _LandscapeCategory;
			half _RenderCategory;
			half _IsStandardShader;
			half _IsTerrainShader;
			half _TerrainTextureMode;
			half _TerrainSampleMode1;
			half _TerrainSampleMode2;
			half _TerrainSampleMode3;
			half _TerrainSampleMode4;
			half _TerrainSampleMode5;
			half _TerrainSampleMode6;
			half _TerrainSampleMode7;
			half _LandscapeEnd;
			half _TerrainSampleMode8;
			half _TerrainSampleMode10;
			half _TerrainSampleMode11;
			half _TerrainSampleMode12;
			half _TerrainSampleMode13;
			half _TerrainSampleMode14;
			half _TerrainSampleMode15;
			half _TerrainSampleMode16;
			half _TerrainSampleMode9;
			half _LandscapeInfo;
			half _GlobalCategory;
			half _GlobalEnd;
			half _OverlayCategory;
			half _OverlayEnd;
			half _OverlaySpace;
			half _OverlayElementMode;
			half _OverlayBakeInfo;
			half _DrynessCategory;
			half _DrynessEnd;
			half _WetnessBakeInfo;
			half _DrynessSpace;
			half _DrynessBakeInfo;
			half _TintingCategory;
			half _TintingEnd;
			half _TintingSpace;
			half _TintingBakeInfo;
			half _CategoryTerrain;
			half _EndTerrain;
			half _DrynessElementMode;
			half _TerrainHeightBlendValue;
			half _WetnessElementMode;
			half _WetnessCategory;
			half _GlobalPaintLayerValue;
			half _GlobalGlowLayerValue;
			half _GlobalAtmoLayerValue;
			half _GlobalFadeLayerValue;
			half _GlobalLandLayerValue;
			half _LandscapeHeightValue;
			half _CutoutCategory;
			half _WetnessEnd;
			half _CutoutEnd;
			half _CutoutBakeInfo;
			half _EmissiveCategory;
			half _EmissiveEnd;
			half _EmissivePowerMode;
			half _EmissivePowerValue;
			half _EmissiveElementMode;
			half _EmissiveFlagMode;
			half _CutoutElementMode;
			half _RenderSpecular;
			float4 _EmissionColor;
			float _AlphaCutoff;
			float _RenderQueueType;
			#ifdef _ADD_PRECOMPUTED_VELOCITY
			    float _AddPrecomputedVelocity;
			#endif
			float _StencilRef;
			float _StencilWriteMask;
			float _StencilRefDepth;
			float _StencilWriteMaskDepth;
			float _StencilRefMV;
			float _StencilWriteMaskMV;
			float _StencilRefDistortionVec;
			float _StencilWriteMaskDistortionVec;
			float _StencilWriteMaskGBuffer;
			float _StencilRefGBuffer;
			float _ZTestGBuffer;
			float _RequireSplitLighting;
			float _ReceivesSSR;
			float _SurfaceType;
			float _BlendMode;
            #ifdef SUPPORT_BLENDMODE_PRESERVE_SPECULAR_LIGHTING
			    float _EnableBlendModePreserveSpecularLighting;
            #endif
			float _SrcBlend;
			float _DstBlend;
			float _DstBlend2;
			float _AlphaSrcBlend;
			float _AlphaDstBlend;
			float _ZWrite;
			float _TransparentZWrite;
			float _CullMode;
			float _TransparentSortPriority;
			float _EnableFogOnTransparent;
			float _CullModeForward;
			float _TransparentCullMode;
			float _ZTestDepthEqualForOpaque;
			float _ZTestTransparent;
			float _TransparentBackfaceEnable;
			float _AlphaCutoffEnable;
			float _UseShadowThreshold;
			float _DoubleSidedEnable;
			float _DoubleSidedNormalMode;
			float4 _DoubleSidedConstants;
			#ifdef ASE_TESSELLATION
			    float _TessPhongStrength;
			    float _TessValue;
			    float _TessMin;
			    float _TessMax;
			    float _TessEdgeLength;
			    float _TessMaxDisp;
			#endif
			UNITY_TEXTURE_STREAMING_DEBUG_VARS;
			CBUFFER_END

            #ifdef SCENEPICKINGPASS
			float4 _SelectionID;
            #endif

            #ifdef SCENESELECTIONPASS
			int _ObjectId;
			int _PassValue;
            #endif

			float3 TVE_WorldOrigin;
			float4x4 unity_CameraProjection;
			float4x4 unity_CameraInvProjection;
			float4x4 unity_WorldToCamera;
			float4x4 unity_CameraToWorld;
			half4 TVE_CoatParams;
			float TVE_PaintLayers[10];
			TEXTURE2D_ARRAY(TVE_PaintBaseTex);
			half4 TVE_RenderBaseCoords;
			SAMPLER(sampler_Linear_Clamp);
			TEXTURE2D_ARRAY(TVE_PaintNearTex);
			half4 TVE_RenderNearCoords;
			SAMPLER(sampler_Linear_Repeat);
			float4 TVE_RenderNearPositionR;
			half TVE_RenderNearFadeValue;
			half4 TVE_PaintParams;
			float TVE_GlowLayers[10];
			TEXTURE2D_ARRAY(TVE_GlowBaseTex);
			TEXTURE2D_ARRAY(TVE_GlowNearTex);
			half4 TVE_GlowParams;
			float TVE_AtmoLayers[10];
			TEXTURE2D_ARRAY(TVE_AtmoBaseTex);
			TEXTURE2D_ARRAY(TVE_AtmoNearTex);
			half4 TVE_AtmoParams;
			float TVE_FadeLayers[10];
			TEXTURE2D_ARRAY(TVE_FadeBaseTex);
			TEXTURE2D_ARRAY(TVE_FadeNearTex);
			half4 TVE_FadeParams;
			half4 TVE_FormParams;
			float TVE_LandLayers[10];
			TEXTURE2D_ARRAY(TVE_LandBaseTex);
			TEXTURE2D_ARRAY(TVE_LandNearTex);
			half4 TVE_LandParams;
			half4 TVE_WindParams;
			half4 TVE_PushParams;
			half TVE_IsEnabled;
			TEXTURE2D(_TerrainControlTex1);
			TEXTURE2D(_TerrainControlTex2);
			TEXTURE2D(_TerrainControlTex3);
			TEXTURE2D(_TerrainControlTex4);
			TEXTURE2D(_TerrainShaderTex1);
			SAMPLER(sampler_Point_Repeat);
			SAMPLER(sampler_Linear_Repeat_Aniso8);
			TEXTURE2D(_TerrainShaderTex2);
			TEXTURE2D(_TerrainShaderTex3);
			TEXTURE2D(_TerrainShaderTex4);
			TEXTURE2D(_TerrainShaderTex5);
			TEXTURE2D(_TerrainShaderTex6);
			TEXTURE2D(_TerrainShaderTex7);
			TEXTURE2D(_TerrainShaderTex8);
			TEXTURE2D(_TerrainShaderTex9);
			TEXTURE2D(_TerrainShaderTex10);
			TEXTURE2D(_TerrainShaderTex11);
			TEXTURE2D(_TerrainShaderTex12);
			TEXTURE2D(_TerrainShaderTex13);
			TEXTURE2D(_TerrainShaderTex14);
			TEXTURE2D(_TerrainShaderTex15);
			TEXTURE2D(_TerrainShaderTex16);
			TEXTURE2D(_TerrainAlbedoTex1);
			TEXTURE2D(_TerrainAlbedoTex2);
			TEXTURE2D(_TerrainAlbedoTex3);
			TEXTURE2D(_TerrainAlbedoTex4);
			TEXTURE2D(_TerrainAlbedoTex5);
			TEXTURE2D(_TerrainAlbedoTex6);
			TEXTURE2D(_TerrainAlbedoTex7);
			TEXTURE2D(_TerrainAlbedoTex8);
			TEXTURE2D(_TerrainAlbedoTex9);
			TEXTURE2D(_TerrainAlbedoTex10);
			TEXTURE2D(_TerrainAlbedoTex11);
			TEXTURE2D(_TerrainAlbedoTex12);
			TEXTURE2D(_TerrainAlbedoTex13);
			TEXTURE2D(_TerrainAlbedoTex14);
			TEXTURE2D(_TerrainAlbedoTex15);
			TEXTURE2D(_TerrainAlbedoTex16);
			TEXTURE2D(_TerrainNormalTex1);
			TEXTURE2D(_TerrainNormalTex2);
			TEXTURE2D(_TerrainNormalTex3);
			TEXTURE2D(_TerrainNormalTex4);
			TEXTURE2D(_TerrainNormalTex5);
			TEXTURE2D(_TerrainNormalTex6);
			TEXTURE2D(_TerrainNormalTex7);
			TEXTURE2D(_TerrainNormalTex8);
			TEXTURE2D(_TerrainNormalTex9);
			TEXTURE2D(_TerrainNormalTex10);
			TEXTURE2D(_TerrainNormalTex11);
			TEXTURE2D(_TerrainNormalTex12);
			TEXTURE2D(_TerrainNormalTex13);
			TEXTURE2D(_TerrainNormalTex14);
			TEXTURE2D(_TerrainNormalTex15);
			TEXTURE2D(_TerrainNormalTex16);
			TEXTURE2D(_TerrainHolesTex);
			TEXTURE2D(_OverlayAlbedoTex);
			TEXTURE2D(_OverlayGlitterTexRT);
			TEXTURE2D(_OverlayNormalTex);
			TEXTURE2D(_WetnessDropsTexRT);
			#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
				TEXTURE2D(_TerrainHeightmapTexture);//ASE Terrain Instancing
				TEXTURE2D( _TerrainNormalmapTexture);//ASE Terrain Instancing
				SAMPLER(sampler_TerrainNormalmapTexture);//ASE Terrain Instancing
			#endif//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_START( Terrain )//ASE Terrain Instancing
				UNITY_DEFINE_INSTANCED_PROP( float4, _TerrainPatchInstanceData )//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_END( Terrain)//ASE Terrain Instancing
			CBUFFER_START( UnityTerrain)//ASE Terrain Instancing
				#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
					float4 _TerrainHeightmapRecipSize;//ASE Terrain Instancing
					float4 _TerrainHeightmapScale;//ASE Terrain Instancing
				#endif//ASE Terrain Instancing
			CBUFFER_END//ASE Terrain Instancing


            #ifdef DEBUG_DISPLAY
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
            #endif

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/PickingSpaceTransforms.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"

            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitDecalData.hlsl"

        	#ifdef HAVE_VFX_MODIFICATION
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif

			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/CommonLighting.hlsl"
			#define ASE_NEEDS_VERT_POSITION
			#define ASE_NEEDS_VERT_NORMAL
			#define ASE_NEEDS_VERT_TANGENT
			#define ASE_NEEDS_FRAG_RELATIVE_WORLD_POS
			#pragma shader_feature_local_fragment TVE_PIPELINE_STANDARD TVE_PIPELINE_UNIVERSAL TVE_PIPELINE_HD
			#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
			#pragma shader_feature_local_vertex TVE_LANDSCAPE
			#pragma shader_feature_local_fragment TVE_WETNESS
			#pragma shader_feature_local_fragment TVE_OVERLAY
			#pragma shader_feature_local_fragment TVE_DRYNESS
			#pragma shader_feature_local_fragment TVE_TINTING
			#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
			#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
			#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
			#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
			#pragma shader_feature_local_fragment TVE_DRYNESS_SHIFT
			#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
			#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
			#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_WATER
			#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
			#pragma shader_feature_local_fragment TVE_EMISSIVE
			#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
			#pragma shader_feature_local_fragment TVE_CUTOUT
			#pragma shader_feature_local_fragment TVE_CUTOUT_SHADOW
			#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
			#pragma multi_compile_instancing
			#pragma instancing_options assumeuniformscaling nomatrices nolightprobe nolightmap
			  
			struct TVEVisualData
			{  
				half Dummy;  
				half3 Albedo;
				half3 AlbedoRaw;
				half2 NormalTS;
				half3 NormalWS; 
				half4 Shader;
				half4 Emissive;
				half AlphaClip;
				half AlphaFade;
				half MultiMask;
				half Grayscale;
				half Luminosity;
				half3 Translucency;
				half Transmission;
				half Thickness;
				float Diffusion;
			};  
			    
			struct TVEModelData
			{    
				half Dummy;    
				half3 PositionOS;
				half3 PositionWS;
				half3 PositionWO;
				half3 PositionRawOS;
				half3 PositionAddOS;
				half3 PivotOS;
				half3 PivotWS;
				half3 PivotWO;
				half3 NormalOS;
				half3 NormalWS;
				half3 NormalRawOS;
				half3 NormalRawWS;
				half4 TangentOS;
				half3 ViewDirWS;
				half4 VertexData;
				half4 MotionData;
				half4 BoundsData;
				half4 RotationData;
			};    
			      
			struct TVEGlobalData
			{      
				half Dummy;      
				half4 CoatParams;
				half4 PaintParams;
				half4 GlowParams;
				half4 AtmoParams;
				half4 FadeParams;
				half4 FormParams;
				half4 LandParams;
				half4 WindParams;
				half4 PushParams;
			};      
			        
			//#pragma editor_sync_compilation


			struct AttributesMesh
			{
				float3 positionOS : POSITION;
				float3 normalOS : NORMAL;
				float4 tangentOS : TANGENT;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;
				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct PackedVaryingsMeshToPS
			{
				SV_POSITION_QUALIFIERS float4 positionCS : SV_Position;
				float3 positionRWS : TEXCOORD0;
				float4 ase_texcoord1 : TEXCOORD1;
				float4 ase_texcoord2 : TEXCOORD2;
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_texcoord4 : TEXCOORD4;
				float4 ase_color : COLOR;
				float4 ase_texcoord5 : TEXCOORD5;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				UNITY_VERTEX_OUTPUT_STEREO
				#if defined(SHADER_STAGE_FRAGMENT) && defined(ASE_NEED_CULLFACE)
				FRONT_FACE_TYPE cullFace : FRONT_FACE_SEMANTIC;
				#endif
			};

			float3 ObjectPosition_UNITY_MATRIX_M(  )
			{
				return float3(UNITY_MATRIX_M[0].w, UNITY_MATRIX_M[1].w, UNITY_MATRIX_M[2].w );
			}
			
			void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
			{
				ZX = WorldPosition.xz * Coords.xx - Coords.zz;
				ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
				XY = WorldPosition.xy * Coords.xy - Coords.zw;
			}
			
			half4 SamplePlanar2D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
			{
				half3 powNormal = abs( WorldNormal.xyz );
				half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
				weights /= ( weights.x + weights.y + weights.z ).xxx;
				T1 = weights.y;
				T2 = weights.x;
				T3 = weights.z;
			}
			
			half4 SamplePlanar3D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
				half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
				half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
				return tex1 * T1 + tex2 * T2 + tex3 * T3;
			}
			
			void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
			{
				half2 vertex1, vertex2, vertex3;
				// Scaling of the input
				half2 uv = UV * 3.464; // 2 * sqrt (3)
				// Skew input space into simplex triangle grid
				const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
				half2 skewedCoord = mul( gridToSkewedGrid, uv );
				// Compute local triangle vertex IDs and local barycentric coordinates
				int2 baseId = int2( floor( skewedCoord ) );
				half3 temp = half3( frac( skewedCoord ), 0 );
				temp.z = 1.0 - temp.x - temp.y;
				if ( temp.z > 0.0 )
				{
					W1 = temp.z;
					W2 = temp.y;
					W3 = temp.x;
					vertex1 = baseId;
					vertex2 = baseId + int2( 0, 1 );
					vertex3 = baseId + int2( 1, 0 );
				}
				else
				{
					W1 = -temp.z;
					W2 = 1.0 - temp.y;
					W3 = 1.0 - temp.x;
					vertex1 = baseId + int2( 1, 1 );
					vertex2 = baseId + int2( 1, 0 );
					vertex3 = baseId + int2( 0, 1 );
				}
				UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
				UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
				UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
				return;
			}
			
			float4 SampleStochastic2D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
				half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
				half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
				half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
				return tex1 * W1 + tex2 * W2 + tex3 * W3;
			}
			
			half4 SampleStochastic3D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				half4 tex1, tex2, tex3;
				ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
				half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
				half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
				half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				return texZX * T1 + texZY * T2 + texXY * T3;
			}
			
			half3 HSVToRGB( half3 c )
			{
				half4 K = half4( 1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0 );
				half3 p = abs( frac( c.xxx + K.xyz ) * 6.0 - K.www );
				return c.z * lerp( K.xxx, saturate( p - K.xxx ), c.y );
			}
			
			half3 RGBToHSV(half3 c)
			{
				half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
				half4 p = lerp( half4( c.bg, K.wz ), half4( c.gb, K.xy ), step( c.b, c.g ) );
				half4 q = lerp( half4( p.xyw, c.r ), half4( c.r, p.yzx ), step( p.x, c.r ) );
				half d = q.x - min( q.w, q.y );
				half e = 1.0e-10;
				return half3( abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
			}
			float3 ASEGetEmissionHDRColor(float3 ldrColor, float luminanceIntensity, float exposureWeight, float inverseCurrentExposureMultiplier)
			{
				float3 hdrColor = ldrColor * luminanceIntensity;
				hdrColor = lerp( hdrColor* inverseCurrentExposureMultiplier, hdrColor, exposureWeight);
				return hdrColor;
			}
			
			half ShadowPassCheck36_g118142( half True, half False )
			{
				half result;
				#if defined(SHADERPASS) && (SHADERPASS  == SHADERPASS_SHADOWS)
					result = True;
				#else
					result = False;
				#endif
				return result;
			}
			
			AttributesMesh ApplyMeshModification( AttributesMesh inputMesh )
			{
			#ifdef UNITY_INSTANCING_ENABLED
				float2 patchVertex = inputMesh.positionOS.xy;
				float4 instanceData = UNITY_ACCESS_INSTANCED_PROP( Terrain, _TerrainPatchInstanceData );
				float2 sampleCoords = ( patchVertex.xy + instanceData.xy ) * instanceData.z;
				float height = UnpackHeightmap( _TerrainHeightmapTexture.Load( int3( sampleCoords, 0 ) ) );
				inputMesh.positionOS.xz = sampleCoords* _TerrainHeightmapScale.xz;
				inputMesh.positionOS.y = height* _TerrainHeightmapScale.y;
				#ifdef ENABLE_TERRAIN_PERPIXEL_NORMAL
					inputMesh.normalOS = float3(0, 1, 0);
				#else
					inputMesh.normalOS = _TerrainNormalmapTexture.Load(int3(sampleCoords, 0)).rgb* 2 - 1;
				#endif
				inputMesh.ase_texcoord.xy = sampleCoords* _TerrainHeightmapRecipSize.zw;
			#endif
				return inputMesh;
			}
			

			void BuildSurfaceData(FragInputs fragInputs, inout SceneSurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
			{
				ZERO_INITIALIZE(SurfaceData, surfaceData);

				surfaceData.specularOcclusion = 1.0;
				surfaceData.thickness = 0.0;

				//refraction SceneSelectionPass
                #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                    if (_EnableSSRefraction)
                    {
                        surfaceData.ior =                       surfaceDescription.RefractionIndex;
                        surfaceData.transmittanceColor =        surfaceDescription.RefractionColor;
                        surfaceData.atDistance =                surfaceDescription.RefractionDistance;
        
                        surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                        surfaceDescription.Alpha = 1.0;
                    }
                    else
                    {
                        surfaceData.ior = 1.0;
                        surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                        surfaceData.atDistance = 1.0;
                        surfaceData.transmittanceMask = 0.0;
                        surfaceDescription.Alpha = 1.0;
                    }
                #else
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                #endif

				surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;

				#ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
				#endif

				#ifdef _MATERIAL_FEATURE_TRANSMISSION
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
				#endif

				#ifdef _MATERIAL_FEATURE_COLORED_TRANSMISSION
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_COLORED_TRANSMISSION;
				#endif

                #ifdef _MATERIAL_FEATURE_ANISOTROPY
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
                    surfaceData.normalWS = float3(0, 1, 0);
                #endif

				#ifdef _MATERIAL_FEATURE_CLEAR_COAT
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
				#endif

				#ifdef _MATERIAL_FEATURE_IRIDESCENCE
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
				#endif

				#ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
				#endif

				#if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                    surfaceData.baseColor *= ( 1.0 - Max3( surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b ) );
				#endif

				#ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
				#else
                    float3 doubleSidedConstants = float3( 1.0, 1.0, 1.0 );
				#endif

				float3 normalTS = float3(0.0f, 0.0f, 1.0f);

                #ifdef DECAL_NORMAL_BLENDING
					normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(normalTS, fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);

                    #if HAVE_DECALS
                    if (_EnableDecals)
                    {
                        float alpha = 1.0;
                        alpha = surfaceDescription.Alpha;

                        DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                        ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                        ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
                     }
                    #endif

                    GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
                #else
					GetNormalWS(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);

                    #if HAVE_DECALS
                    if (_EnableDecals)
                    {
                        float alpha = 1.0;
                        alpha = surfaceDescription.Alpha;
        
                        DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                        ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                        ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
                    }
                    #endif
                #endif

				surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
                surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz );
                surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);

				bentNormalWS = surfaceData.normalWS;

                #if defined(DEBUG_DISPLAY)
				    #if !defined(SHADER_STAGE_RAY_TRACING)
				    if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
				    {
					   #ifdef FRAG_INPUTS_USE_TEXCOORD0
                           surfaceData.baseColor = GET_TEXTURE_STREAMING_DEBUG(posInput.positionSS, fragInputs.texCoord0);
                       #else
                           surfaceData.baseColor = GET_TEXTURE_STREAMING_DEBUG_NO_UV(posInput.positionSS);
                       #endif
					   surfaceData.metallic = 0;
				    }
					#endif
                     ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
                #endif

                #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                    surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
                #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                    surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
                #endif

                #ifdef _ENABLE_GEOMETRIC_SPECULAR_AA
                    surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
                #endif
			}

			// Get Surface And BuiltinData
			void GetSurfaceAndBuiltinData(SceneSurfaceDescription surfaceDescription, FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData)
			{
				#ifdef LOD_FADE_CROSSFADE
                    LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
				#endif

                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants);

				#ifdef _ALPHATEST_ON
                    DoAlphaTest( surfaceDescription.Alpha, surfaceDescription.AlphaClipThreshold );
				#endif

				#ifdef _ALPHATEST_SHADOW_ON
                    DoAlphaTest( surfaceDescription.Alpha, surfaceDescription.AlphaClipThresholdShadow);
				#endif

				#ifdef _DEPTHOFFSET_ON
                    ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
				#endif

                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], fragInputs.texCoord1, fragInputs.texCoord2, builtinData);

				#ifdef _DEPTHOFFSET_ON
                    builtinData.depthOffset = surfaceDescription.DepthOffset;
				#endif

                #ifdef _ALPHATEST_ON
                    builtinData.alphaClipTreshold = surfaceDescription.AlphaClipThreshold;
                #endif

                #ifdef UNITY_VIRTUAL_TEXTURING
                    builtinData.vtPackedFeedback = surfaceDescription.VTPackedFeedback;
                #endif

				#ifdef ASE_BAKEDGI
                    builtinData.bakeDiffuseLighting = surfaceDescription.BakedGI;
				#endif

				#ifdef ASE_BAKEDBACKGI
                    builtinData.backBakeDiffuseLighting = surfaceDescription.BakedBackGI;
				#endif

                builtinData.emissiveColor = surfaceDescription.Emission;

                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
			}

			PackedVaryingsMeshToPS VertexFunction(AttributesMesh inputMesh )
			{
				PackedVaryingsMeshToPS outputPackedVaryingsMeshToPS;
				UNITY_SETUP_INSTANCE_ID(inputMesh);
				UNITY_TRANSFER_INSTANCE_ID(inputMesh, outputPackedVaryingsMeshToPS);
				UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO( outputPackedVaryingsMeshToPS );

				inputMesh = ApplyMeshModification(inputMesh);
				TVEModelData Data16_g118149 = (TVEModelData)0;
				half Dummy181_g118147 = ( _LandscapeCategory + _LandscapeEnd + _LandscapeInfo );
				float In_Dummy16_g118149 = Dummy181_g118147;
				TVEModelData Data16_g117808 = (TVEModelData)0;
				half Dummy207_g117794 = 0.0;
				float In_Dummy16_g117808 = Dummy207_g117794;
				half3 PositionOS131_g117794 = inputMesh.positionOS;
				float3 In_PositionOS16_g117808 = PositionOS131_g117794;
				float3 ase_worldPos = GetAbsolutePositionWS( TransformObjectToWorld( (inputMesh.positionOS).xyz ) );
				float3 vertexToFrag73_g117794 = ase_worldPos;
				half3 PositionWS122_g117794 = vertexToFrag73_g117794;
				float3 In_PositionWS16_g117808 = PositionWS122_g117794;
				float3 localObjectPosition_UNITY_MATRIX_M14_g117796 = ObjectPosition_UNITY_MATRIX_M();
				#ifdef SHADEROPTIONS_CAMERA_RELATIVE_RENDERING
				float3 staticSwitch13_g117796 = ( localObjectPosition_UNITY_MATRIX_M14_g117796 + _WorldSpaceCameraPos );
				#else
				float3 staticSwitch13_g117796 = localObjectPosition_UNITY_MATRIX_M14_g117796;
				#endif
				half3 ObjectData20_g117798 = staticSwitch13_g117796;
				half3 WorldData19_g117798 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g117798 = WorldData19_g117798;
				#else
				float3 staticSwitch14_g117798 = ObjectData20_g117798;
				#endif
				float3 temp_output_124_0_g117796 = staticSwitch14_g117798;
				float3 temp_output_239_7_g117794 = temp_output_124_0_g117796;
				half3 PivotWS121_g117794 = temp_output_239_7_g117794;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g117794 = ( PositionWS122_g117794 - PivotWS121_g117794 );
				#else
				float3 staticSwitch204_g117794 = PositionWS122_g117794;
				#endif
				half3 PositionWO132_g117794 = ( staticSwitch204_g117794 - TVE_WorldOrigin );
				float3 In_PositionWO16_g117808 = PositionWO132_g117794;
				float3 In_PositionRawOS16_g117808 = PositionOS131_g117794;
				float3 In_PositionAddOS16_g117808 = float3( 0,0,0 );
				float3 _Vector0 = float3(0,0,0);
				half3 PivotOS149_g117794 = _Vector0;
				float3 In_PivotOS16_g117808 = PivotOS149_g117794;
				float3 In_PivotWS16_g117808 = PivotWS121_g117794;
				half3 PivotWO133_g117794 = ( PivotWS121_g117794 - TVE_WorldOrigin );
				float3 In_PivotWO16_g117808 = PivotWO133_g117794;
				half3 NormalOS134_g117794 = inputMesh.normalOS;
				float3 In_NormalOS16_g117808 = NormalOS134_g117794;
				float3 ase_worldNormal = TransformObjectToWorldNormal(inputMesh.normalOS);
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g117794 = normalizedWorldNormal;
				float3 In_NormalWS16_g117808 = Normal_WS95_g117794;
				float3 In_NormalRawOS16_g117808 = NormalOS134_g117794;
				float3 objToWorldDir298_g117794 = normalize( mul( GetObjectToWorldMatrix(), float4( inputMesh.normalOS, 0 ) ).xyz );
				half3 Normal_RawWS136_g117794 = objToWorldDir298_g117794;
				float3 In_NormalRawWS16_g117808 = Normal_RawWS136_g117794;
				half4 TangentlOS153_g117794 = inputMesh.tangentOS;
				float4 In_TangentOS16_g117808 = TangentlOS153_g117794;
				float3 normalizeResult296_g117794 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g117794 ) );
				half3 ViewDirWS169_g117794 = normalizeResult296_g117794;
				float3 In_ViewDirWS16_g117808 = ViewDirWS169_g117794;
				half4 VertexMasks171_g117794 = inputMesh.ase_color;
				float4 In_VertexData16_g117808 = VertexMasks171_g117794;
				float4 break33_g117807 = _object_phase_mode;
				float temp_output_30_0_g117807 = ( inputMesh.ase_color.r * break33_g117807.x );
				float temp_output_29_0_g117807 = ( inputMesh.ase_color.g * break33_g117807.y );
				float temp_output_31_0_g117807 = ( inputMesh.ase_color.b * break33_g117807.z );
				float temp_output_28_0_g117807 = ( temp_output_30_0_g117807 + temp_output_29_0_g117807 + temp_output_31_0_g117807 + ( inputMesh.ase_color.a * break33_g117807.w ) );
				float3 break243_g117794 = PivotWO133_g117794;
				float temp_output_315_0_g117794 = (frac( ( temp_output_28_0_g117807 + ( break243_g117794.x + break243_g117794.z ) ) )*2.0 + -1.0);
				float4 appendResult177_g117794 = (float4(1.0 , 1.0 , temp_output_315_0_g117794 , 1.0));
				half4 MotionMasks176_g117794 = appendResult177_g117794;
				float4 In_MotionData16_g117808 = MotionMasks176_g117794;
				half4 BoundsData254_g117794 = float4( 0,0,0,0 );
				float4 In_BoundsData16_g117808 = BoundsData254_g117794;
				float4 In_RotationData16_g117808 = float4( 0,0,0,0 );
				Data16_g117808.Dummy = In_Dummy16_g117808;
				Data16_g117808.PositionOS = In_PositionOS16_g117808;
				Data16_g117808.PositionWS = In_PositionWS16_g117808;
				Data16_g117808.PositionWO = In_PositionWO16_g117808;
				Data16_g117808.PositionRawOS = In_PositionRawOS16_g117808;
				Data16_g117808.PositionAddOS = In_PositionAddOS16_g117808;
				Data16_g117808.PivotOS = In_PivotOS16_g117808;
				Data16_g117808.PivotWS = In_PivotWS16_g117808;
				Data16_g117808.PivotWO = In_PivotWO16_g117808;
				Data16_g117808.NormalOS = In_NormalOS16_g117808;
				Data16_g117808.NormalWS = In_NormalWS16_g117808;
				Data16_g117808.NormalRawOS = In_NormalRawOS16_g117808;
				Data16_g117808.NormalRawWS = In_NormalRawWS16_g117808;
				Data16_g117808.TangentOS = In_TangentOS16_g117808;
				Data16_g117808.ViewDirWS = In_ViewDirWS16_g117808;
				Data16_g117808.VertexData = In_VertexData16_g117808;
				Data16_g117808.MotionData = In_MotionData16_g117808;
				Data16_g117808.BoundsData = In_BoundsData16_g117808;
				Data16_g117808.RotationData = In_RotationData16_g117808;
				TVEModelData Data15_g118148 = Data16_g117808;
				float Out_Dummy15_g118148 = 0;
				float3 Out_PositionOS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionWS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118148 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotOS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118148 = float3( 0,0,0 );
				float3 Out_NormalOS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g118148 = float3( 0,0,0 );
				float4 Out_TangentOS15_g118148 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g118148 = float3( 0,0,0 );
				float4 Out_VertexData15_g118148 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g118148 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118148 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g118148 = float4( 0,0,0,0 );
				Out_Dummy15_g118148 = Data15_g118148.Dummy;
				Out_PositionOS15_g118148 = Data15_g118148.PositionOS;
				Out_PositionWS15_g118148 = Data15_g118148.PositionWS;
				Out_PositionWO15_g118148 = Data15_g118148.PositionWO;
				Out_PositionRawOS15_g118148 = Data15_g118148.PositionRawOS;
				Out_PositionAddOS15_g118148 = Data15_g118148.PositionAddOS;
				Out_PivotOS15_g118148 = Data15_g118148.PivotOS;
				Out_PivotWS15_g118148 = Data15_g118148.PivotWS;
				Out_PivotWO15_g118148 = Data15_g118148.PivotWO;
				Out_NormalOS15_g118148 = Data15_g118148.NormalOS;
				Out_NormalWS15_g118148 = Data15_g118148.NormalWS;
				Out_NormalRawOS15_g118148 = Data15_g118148.NormalRawOS;
				Out_NormalRawWS15_g118148 = Data15_g118148.NormalRawWS;
				Out_TangentOS15_g118148 = Data15_g118148.TangentOS;
				Out_ViewDirWS15_g118148 = Data15_g118148.ViewDirWS;
				Out_VertexData15_g118148 = Data15_g118148.VertexData;
				Out_MotionData15_g118148 = Data15_g118148.MotionData;
				Out_BoundsData15_g118148 = Data15_g118148.BoundsData;
				Out_RotationData15_g118148 = Data15_g118148.RotationData;
				half3 Input_PositionOS147_g118147 = Out_PositionOS15_g118148;
				float3 break592_g118147 = Input_PositionOS147_g118147;
				float localBuildGlobalData204_g117810 = ( 0.0 );
				TVEGlobalData Data204_g117810 = (TVEGlobalData)0;
				half Dummy211_g117810 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g117810 = Dummy211_g117810;
				half4 Coat_Params302_g117810 = TVE_CoatParams;
				float4 In_CoatParams204_g117810 = Coat_Params302_g117810;
				float temp_output_82_0_g117811 = _GlobalPaintLayerValue;
				float temp_output_19_0_g117813 = TVE_PaintLayers[(int)temp_output_82_0_g117811];
				TVEModelData Data16_g117809 = (TVEModelData)0;
				float In_Dummy16_g117809 = 0.0;
				float3 In_PositionWS16_g117809 = PositionWS122_g117794;
				float3 In_PositionWO16_g117809 = PositionWO132_g117794;
				float3 In_PivotWS16_g117809 = PivotWS121_g117794;
				float3 In_PivotWO16_g117809 = PivotWO133_g117794;
				float3 In_NormalWS16_g117809 = Normal_WS95_g117794;
				float3 In_ViewDirWS16_g117809 = ViewDirWS169_g117794;
				float4 In_VertexData16_g117809 = VertexMasks171_g117794;
				float4 In_BoundsData16_g117809 = float4( 1,1,1,1 );
				Data16_g117809.Dummy = In_Dummy16_g117809;
				Data16_g117809.PositionWS = In_PositionWS16_g117809;
				Data16_g117809.PositionWO = In_PositionWO16_g117809;
				Data16_g117809.PivotWS = In_PivotWS16_g117809;
				Data16_g117809.PivotWO = In_PivotWO16_g117809;
				Data16_g117809.NormalWS = In_NormalWS16_g117809;
				Data16_g117809.ViewDirWS = In_ViewDirWS16_g117809;
				Data16_g117809.VertexData = In_VertexData16_g117809;
				Data16_g117809.BoundsData = In_BoundsData16_g117809;
				TVEModelData Data15_g117892 = Data16_g117809;
				float Out_Dummy15_g117892 = 0;
				float3 Out_PositionWS15_g117892 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117892 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117892 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g117892 = float3( 0,0,0 );
				float4 Out_VertexData15_g117892 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117892 = float4( 0,0,0,0 );
				Out_Dummy15_g117892 = Data15_g117892.Dummy;
				Out_PositionWS15_g117892 = Data15_g117892.PositionWS;
				Out_PositionWO15_g117892 = Data15_g117892.PositionWO;
				Out_PivotWS15_g117892 = Data15_g117892.PivotWS;
				Out_PivotWO15_g117892 = Data15_g117892.PivotWO;
				Out_NormalWS15_g117892 = Data15_g117892.NormalWS;
				Out_ViewDirWS15_g117892 = Data15_g117892.ViewDirWS;
				Out_VertexData15_g117892 = Data15_g117892.VertexData;
				Out_BoundsData15_g117892 = Data15_g117892.BoundsData;
				half3 Model_PositionWS143_g117810 = Out_PositionWS15_g117892;
				half3 Input_Position180_g117814 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117814 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_82_0_g117814 = temp_output_82_0_g117811;
				float2 temp_output_119_0_g117814 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_7_0_g117819 = 1.0;
				float temp_output_10_0_g117819 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117819 );
				float4 lerpResult131_g117814 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117814,temp_output_82_0_g117814, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, temp_output_119_0_g117814,temp_output_82_0_g117814, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117814 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117819 ) / temp_output_10_0_g117819 ) ));
				float4 temp_output_17_0_g117813 = lerpResult131_g117814;
				float4 temp_output_3_0_g117813 = TVE_PaintParams;
				float4 ifLocalVar18_g117813 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117813 >= 0.5 )
				ifLocalVar18_g117813 = temp_output_17_0_g117813;
				else
				ifLocalVar18_g117813 = temp_output_3_0_g117813;
				float4 lerpResult22_g117813 = lerp( temp_output_3_0_g117813 , temp_output_17_0_g117813 , temp_output_19_0_g117813);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117813 = lerpResult22_g117813;
				#else
				float4 staticSwitch24_g117813 = ifLocalVar18_g117813;
				#endif
				half4 Paint_Params71_g117810 = staticSwitch24_g117813;
				float4 In_PaintParams204_g117810 = Paint_Params71_g117810;
				float temp_output_82_0_g117829 = _GlobalGlowLayerValue;
				float temp_output_19_0_g117831 = TVE_GlowLayers[(int)temp_output_82_0_g117829];
				half3 Input_Position180_g117832 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117832 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_82_0_g117832 = temp_output_82_0_g117829;
				float2 temp_output_119_0_g117832 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_7_0_g117837 = 1.0;
				float temp_output_10_0_g117837 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117837 );
				float4 lerpResult131_g117832 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117832,temp_output_82_0_g117832, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, temp_output_119_0_g117832,temp_output_82_0_g117832, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117832 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117837 ) / temp_output_10_0_g117837 ) ));
				float4 temp_output_17_0_g117831 = lerpResult131_g117832;
				float4 temp_output_3_0_g117831 = TVE_GlowParams;
				float4 ifLocalVar18_g117831 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117831 >= 0.5 )
				ifLocalVar18_g117831 = temp_output_17_0_g117831;
				else
				ifLocalVar18_g117831 = temp_output_3_0_g117831;
				float4 lerpResult22_g117831 = lerp( temp_output_3_0_g117831 , temp_output_17_0_g117831 , temp_output_19_0_g117831);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117831 = lerpResult22_g117831;
				#else
				float4 staticSwitch24_g117831 = ifLocalVar18_g117831;
				#endif
				half4 Glow_Params248_g117810 = staticSwitch24_g117831;
				float4 In_GlowParams204_g117810 = Glow_Params248_g117810;
				float temp_output_132_0_g117874 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g117876 = TVE_AtmoLayers[(int)temp_output_132_0_g117874];
				half3 Input_Position180_g117877 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117877 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_82_0_g117877 = temp_output_132_0_g117874;
				float2 temp_output_119_0_g117877 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_7_0_g117882 = 1.0;
				float temp_output_10_0_g117882 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117882 );
				float4 lerpResult131_g117877 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117877,temp_output_82_0_g117877, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, temp_output_119_0_g117877,temp_output_82_0_g117877, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117877 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117882 ) / temp_output_10_0_g117882 ) ));
				float4 temp_output_17_0_g117876 = lerpResult131_g117877;
				float4 temp_output_3_0_g117876 = TVE_AtmoParams;
				float4 ifLocalVar18_g117876 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117876 >= 0.5 )
				ifLocalVar18_g117876 = temp_output_17_0_g117876;
				else
				ifLocalVar18_g117876 = temp_output_3_0_g117876;
				float4 lerpResult22_g117876 = lerp( temp_output_3_0_g117876 , temp_output_17_0_g117876 , temp_output_19_0_g117876);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117876 = lerpResult22_g117876;
				#else
				float4 staticSwitch24_g117876 = ifLocalVar18_g117876;
				#endif
				half4 Atmo_Params80_g117810 = staticSwitch24_g117876;
				float4 In_AtmoParams204_g117810 = Atmo_Params80_g117810;
				float temp_output_132_0_g117883 = _GlobalFadeLayerValue;
				float temp_output_19_0_g117885 = TVE_FadeLayers[(int)temp_output_132_0_g117883];
				half3 Input_Position180_g117886 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117886 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_82_0_g117886 = temp_output_132_0_g117883;
				float2 temp_output_119_0_g117886 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_7_0_g117891 = 1.0;
				float temp_output_10_0_g117891 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117891 );
				float4 lerpResult131_g117886 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117886,temp_output_82_0_g117886, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, temp_output_119_0_g117886,temp_output_82_0_g117886, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117886 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117891 ) / temp_output_10_0_g117891 ) ));
				float4 temp_output_17_0_g117885 = lerpResult131_g117886;
				float4 temp_output_3_0_g117885 = TVE_FadeParams;
				float4 ifLocalVar18_g117885 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117885 >= 0.5 )
				ifLocalVar18_g117885 = temp_output_17_0_g117885;
				else
				ifLocalVar18_g117885 = temp_output_3_0_g117885;
				float4 lerpResult22_g117885 = lerp( temp_output_3_0_g117885 , temp_output_17_0_g117885 , temp_output_19_0_g117885);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117885 = lerpResult22_g117885;
				#else
				float4 staticSwitch24_g117885 = ifLocalVar18_g117885;
				#endif
				half4 Fade_Params387_g117810 = staticSwitch24_g117885;
				float4 In_FadeParams204_g117810 = Fade_Params387_g117810;
				half4 Form_Params112_g117810 = TVE_FormParams;
				float4 In_FormParams204_g117810 = Form_Params112_g117810;
				float temp_output_130_0_g117847 = _GlobalLandLayerValue;
				float temp_output_19_0_g117849 = TVE_LandLayers[(int)temp_output_130_0_g117847];
				half3 Input_Position180_g117850 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117850 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_82_0_g117850 = temp_output_130_0_g117847;
				float2 temp_output_119_0_g117850 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_7_0_g117855 = 1.0;
				float temp_output_10_0_g117855 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117855 );
				float4 lerpResult131_g117850 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117850,temp_output_82_0_g117850, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, temp_output_119_0_g117850,temp_output_82_0_g117850, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117850 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117855 ) / temp_output_10_0_g117855 ) ));
				float4 temp_output_17_0_g117849 = lerpResult131_g117850;
				float4 temp_output_3_0_g117849 = TVE_LandParams;
				float4 ifLocalVar18_g117849 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117849 >= 0.5 )
				ifLocalVar18_g117849 = temp_output_17_0_g117849;
				else
				ifLocalVar18_g117849 = temp_output_3_0_g117849;
				float4 lerpResult22_g117849 = lerp( temp_output_3_0_g117849 , temp_output_17_0_g117849 , temp_output_19_0_g117849);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117849 = lerpResult22_g117849;
				#else
				float4 staticSwitch24_g117849 = ifLocalVar18_g117849;
				#endif
				half4 Land_Params375_g117810 = staticSwitch24_g117849;
				float4 In_LandParams204_g117810 = Land_Params375_g117810;
				half4 Wind_Params88_g117810 = TVE_WindParams;
				float4 In_WindParams204_g117810 = Wind_Params88_g117810;
				half4 Push_Params335_g117810 = TVE_PushParams;
				float4 In_PushParams204_g117810 = Push_Params335_g117810;
				Data204_g117810.Dummy = In_Dummy204_g117810;
				Data204_g117810.CoatParams = In_CoatParams204_g117810;
				Data204_g117810.PaintParams = In_PaintParams204_g117810;
				Data204_g117810.GlowParams = In_GlowParams204_g117810;
				Data204_g117810.AtmoParams = In_AtmoParams204_g117810;
				Data204_g117810.FadeParams = In_FadeParams204_g117810;
				Data204_g117810.FormParams= In_FormParams204_g117810;
				Data204_g117810.LandParams = In_LandParams204_g117810;
				Data204_g117810.WindParams = In_WindParams204_g117810;
				Data204_g117810.PushParams = In_PushParams204_g117810;
				TVEGlobalData Data15_g118150 = Data204_g117810;
				float Out_Dummy15_g118150 = 0;
				float4 Out_CoatParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118150 = float4( 0,0,0,0 );
				Out_Dummy15_g118150 = Data15_g118150.Dummy;
				Out_CoatParams15_g118150 = Data15_g118150.CoatParams;
				Out_PaintParams15_g118150 = Data15_g118150.PaintParams;
				Out_GlowParams15_g118150 = Data15_g118150.GlowParams;
				Out_AtmoParams15_g118150= Data15_g118150.AtmoParams;
				Out_FadeParams15_g118150= Data15_g118150.FadeParams;
				Out_FormParams15_g118150 = Data15_g118150.FormParams;
				Out_LandParams15_g118150 = Data15_g118150.LandParams;
				Out_WindParams15_g118150 = Data15_g118150.WindParams;
				Out_PushParams15_g118150 = Data15_g118150.PushParams;
				half4 Input_FormParams214_g118147 = Out_LandParams15_g118150;
				float temp_output_572_0_g118147 = (Input_FormParams214_g118147).z;
				float temp_output_595_0_g118147 = ( break592_g118147.y + temp_output_572_0_g118147 );
				float lerpResult604_g118147 = lerp( break592_g118147.y , temp_output_595_0_g118147 , ( _LandscapeHeightValue * TVE_IsEnabled ));
				float3 appendResult593_g118147 = (float3(break592_g118147.x , lerpResult604_g118147 , break592_g118147.z));
				#ifdef TVE_LANDSCAPE
				float3 staticSwitch575_g118147 = appendResult593_g118147;
				#else
				float3 staticSwitch575_g118147 = Input_PositionOS147_g118147;
				#endif
				half3 Final_PositionOS580_g118147 = staticSwitch575_g118147;
				float3 In_PositionOS16_g118149 = Final_PositionOS580_g118147;
				float3 In_PositionWS16_g118149 = Out_PositionWS15_g118148;
				float3 In_PositionWO16_g118149 = Out_PositionWO15_g118148;
				float3 In_PositionRawOS16_g118149 = Out_PositionRawOS15_g118148;
				float3 In_PositionAddOS16_g118149 = Out_PositionAddOS15_g118148;
				float3 In_PivotOS16_g118149 = Out_PivotOS15_g118148;
				float3 In_PivotWS16_g118149 = Out_PivotWS15_g118148;
				float3 temp_output_481_19_g118147 = Out_PivotWO15_g118148;
				float3 In_PivotWO16_g118149 = temp_output_481_19_g118147;
				float3 temp_output_481_20_g118147 = Out_NormalOS15_g118148;
				float3 In_NormalOS16_g118149 = temp_output_481_20_g118147;
				float3 In_NormalWS16_g118149 = Out_NormalWS15_g118148;
				float3 In_NormalRawOS16_g118149 = Out_NormalRawOS15_g118148;
				float3 In_NormalRawWS16_g118149 = Out_NormalRawWS15_g118148;
				float4 In_TangentOS16_g118149 = Out_TangentOS15_g118148;
				float3 In_ViewDirWS16_g118149 = Out_ViewDirWS15_g118148;
				float4 In_VertexData16_g118149 = Out_VertexData15_g118148;
				float4 In_MotionData16_g118149 = Out_MotionData15_g118148;
				float4 In_BoundsData16_g118149 = Out_BoundsData15_g118148;
				float4 In_RotationData16_g118149 = Out_RotationData15_g118148;
				Data16_g118149.Dummy = In_Dummy16_g118149;
				Data16_g118149.PositionOS = In_PositionOS16_g118149;
				Data16_g118149.PositionWS = In_PositionWS16_g118149;
				Data16_g118149.PositionWO = In_PositionWO16_g118149;
				Data16_g118149.PositionRawOS = In_PositionRawOS16_g118149;
				Data16_g118149.PositionAddOS = In_PositionAddOS16_g118149;
				Data16_g118149.PivotOS = In_PivotOS16_g118149;
				Data16_g118149.PivotWS = In_PivotWS16_g118149;
				Data16_g118149.PivotWO = In_PivotWO16_g118149;
				Data16_g118149.NormalOS = In_NormalOS16_g118149;
				Data16_g118149.NormalWS = In_NormalWS16_g118149;
				Data16_g118149.NormalRawOS = In_NormalRawOS16_g118149;
				Data16_g118149.NormalRawWS = In_NormalRawWS16_g118149;
				Data16_g118149.TangentOS = In_TangentOS16_g118149;
				Data16_g118149.ViewDirWS = In_ViewDirWS16_g118149;
				Data16_g118149.VertexData = In_VertexData16_g118149;
				Data16_g118149.MotionData = In_MotionData16_g118149;
				Data16_g118149.BoundsData = In_BoundsData16_g118149;
				Data16_g118149.RotationData = In_RotationData16_g118149;
				TVEModelData Data15_g118156 = Data16_g118149;
				float Out_Dummy15_g118156 = 0;
				float3 Out_PositionOS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionWS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118156 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotOS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118156 = float3( 0,0,0 );
				float3 Out_NormalOS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g118156 = float3( 0,0,0 );
				float4 Out_TangentOS15_g118156 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g118156 = float3( 0,0,0 );
				float4 Out_VertexData15_g118156 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g118156 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118156 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g118156 = float4( 0,0,0,0 );
				Out_Dummy15_g118156 = Data15_g118156.Dummy;
				Out_PositionOS15_g118156 = Data15_g118156.PositionOS;
				Out_PositionWS15_g118156 = Data15_g118156.PositionWS;
				Out_PositionWO15_g118156 = Data15_g118156.PositionWO;
				Out_PositionRawOS15_g118156 = Data15_g118156.PositionRawOS;
				Out_PositionAddOS15_g118156 = Data15_g118156.PositionAddOS;
				Out_PivotOS15_g118156 = Data15_g118156.PivotOS;
				Out_PivotWS15_g118156 = Data15_g118156.PivotWS;
				Out_PivotWO15_g118156 = Data15_g118156.PivotWO;
				Out_NormalOS15_g118156 = Data15_g118156.NormalOS;
				Out_NormalWS15_g118156 = Data15_g118156.NormalWS;
				Out_NormalRawOS15_g118156 = Data15_g118156.NormalRawOS;
				Out_NormalRawWS15_g118156 = Data15_g118156.NormalRawWS;
				Out_TangentOS15_g118156 = Data15_g118156.TangentOS;
				Out_ViewDirWS15_g118156 = Data15_g118156.ViewDirWS;
				Out_VertexData15_g118156 = Data15_g118156.VertexData;
				Out_MotionData15_g118156 = Data15_g118156.MotionData;
				Out_BoundsData15_g118156 = Data15_g118156.BoundsData;
				Out_RotationData15_g118156 = Data15_g118156.RotationData;
				float3 temp_output_31_0_g118154 = Out_PositionOS15_g118156;
				
				outputPackedVaryingsMeshToPS.ase_texcoord1.xyz = ase_worldNormal;
				float3 ase_worldTangent = TransformObjectToWorldDir(inputMesh.tangentOS.xyz);
				outputPackedVaryingsMeshToPS.ase_texcoord2.xyz = ase_worldTangent;
				float ase_vertexTangentSign = inputMesh.tangentOS.w * ( unity_WorldTransformParams.w >= 0.0 ? 1.0 : -1.0 );
				float3 ase_worldBitangent = cross( ase_worldNormal, ase_worldTangent ) * ase_vertexTangentSign;
				outputPackedVaryingsMeshToPS.ase_texcoord3.xyz = ase_worldBitangent;
				outputPackedVaryingsMeshToPS.ase_texcoord4.xyz = vertexToFrag73_g117794;
				
				outputPackedVaryingsMeshToPS.ase_color = inputMesh.ase_color;
				outputPackedVaryingsMeshToPS.ase_texcoord5 = inputMesh.ase_texcoord;
				
				//setting value to unused interpolator channels and avoid initialization warnings
				outputPackedVaryingsMeshToPS.ase_texcoord1.w = 0;
				outputPackedVaryingsMeshToPS.ase_texcoord2.w = 0;
				outputPackedVaryingsMeshToPS.ase_texcoord3.w = 0;
				outputPackedVaryingsMeshToPS.ase_texcoord4.w = 0;

				#ifdef ASE_ABSOLUTE_VERTEX_POS
				float3 defaultVertexValue = inputMesh.positionOS.xyz;
				#else
				float3 defaultVertexValue = float3( 0, 0, 0 );
				#endif
				float3 vertexValue = temp_output_31_0_g118154;

				#ifdef ASE_ABSOLUTE_VERTEX_POS
				inputMesh.positionOS.xyz = vertexValue;
				#else
				inputMesh.positionOS.xyz += vertexValue;
				#endif

				inputMesh.normalOS = Out_NormalOS15_g118156;
				inputMesh.tangentOS = Out_TangentOS15_g118156;

				float3 positionRWS = TransformObjectToWorld(inputMesh.positionOS);
				outputPackedVaryingsMeshToPS.positionCS = TransformWorldToHClip(positionRWS);
				outputPackedVaryingsMeshToPS.positionRWS.xyz = positionRWS;
				return outputPackedVaryingsMeshToPS;
			}

			#if defined(ASE_TESSELLATION)
			struct VertexControl
			{
				float3 positionOS : INTERNALTESSPOS;
				float3 normalOS : NORMAL;
				float4 tangentOS : TANGENT;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;

				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct TessellationFactors
			{
				float edge[3] : SV_TessFactor;
				float inside : SV_InsideTessFactor;
			};

			VertexControl Vert ( AttributesMesh v )
			{
				VertexControl o;
				UNITY_SETUP_INSTANCE_ID(v);
				UNITY_TRANSFER_INSTANCE_ID(v, o);
				o.positionOS = v.positionOS;
				o.normalOS = v.normalOS;
				o.tangentOS = v.tangentOS;
				o.ase_color = v.ase_color;
				o.ase_texcoord = v.ase_texcoord;
				return o;
			}

			TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
			{
				TessellationFactors o;
				float4 tf = 1;
				float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
				float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
				#if (SHADEROPTIONS_CAMERA_RELATIVE_RENDERING != 0)
				float3 cameraPos = 0;
				#else
				float3 cameraPos = _WorldSpaceCameraPos;
				#endif
				#if defined(ASE_FIXED_TESSELLATION)
				tf = FixedTess( tessValue );
				#elif defined(ASE_DISTANCE_TESSELLATION)
				tf = DistanceBasedTess(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), tessValue, tessMin, tessMax, GetObjectToWorldMatrix(), cameraPos );
				#elif defined(ASE_LENGTH_TESSELLATION)
				tf = EdgeLengthBasedTess(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), edgeLength, GetObjectToWorldMatrix(), cameraPos, _ScreenParams );
				#elif defined(ASE_LENGTH_CULL_TESSELLATION)
				tf = EdgeLengthBasedTessCull(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), edgeLength, tessMaxDisp, GetObjectToWorldMatrix(), cameraPos, _ScreenParams, _FrustumPlanes );
				#endif
				o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
				return o;
			}

			[domain("tri")]
			[partitioning("fractional_odd")]
			[outputtopology("triangle_cw")]
			[patchconstantfunc("TessellationFunction")]
			[outputcontrolpoints(3)]
			VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
			{
			   return patch[id];
			}

			[domain("tri")]
			PackedVaryingsMeshToPS DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
			{
				AttributesMesh o = (AttributesMesh) 0;
				o.positionOS = patch[0].positionOS * bary.x + patch[1].positionOS * bary.y + patch[2].positionOS * bary.z;
				o.normalOS = patch[0].normalOS * bary.x + patch[1].normalOS * bary.y + patch[2].normalOS * bary.z;
				o.tangentOS = patch[0].tangentOS * bary.x + patch[1].tangentOS * bary.y + patch[2].tangentOS * bary.z;
				o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
				o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
				#if defined(ASE_PHONG_TESSELLATION)
				float3 pp[3];
				for (int i = 0; i < 3; ++i)
					pp[i] = o.positionOS.xyz - patch[i].normalOS * (dot(o.positionOS.xyz, patch[i].normalOS) - dot(patch[i].positionOS.xyz, patch[i].normalOS));
				float phongStrength = _TessPhongStrength;
				o.positionOS.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.positionOS.xyz;
				#endif
				UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
				return VertexFunction(o);
			}
			#else
			PackedVaryingsMeshToPS Vert ( AttributesMesh v )
			{
				return VertexFunction( v );
			}
			#endif

			#if defined(WRITE_NORMAL_BUFFER) && defined(WRITE_MSAA_DEPTH)
			#define SV_TARGET_DECAL SV_Target2
			#elif defined(WRITE_NORMAL_BUFFER) || defined(WRITE_MSAA_DEPTH)
			#define SV_TARGET_DECAL SV_Target1
			#else
			#define SV_TARGET_DECAL SV_Target0
			#endif

			void Frag( PackedVaryingsMeshToPS packedInput
						, out float4 outColor : SV_Target0
						#if defined(_DEPTHOFFSET_ON) && !defined(SCENEPICKINGPASS)
						, out float outputDepth : DEPTH_OFFSET_SEMANTIC
						#endif
						
					)
			{
				UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX( packedInput );
				UNITY_SETUP_INSTANCE_ID( packedInput );

				float3 positionRWS = packedInput.positionRWS.xyz;

				FragInputs input;
				ZERO_INITIALIZE(FragInputs, input);

				input.tangentToWorld = k_identity3x3;
				input.positionSS = packedInput.positionCS;

				input.positionRWS = positionRWS;

				#if _DOUBLESIDED_ON && SHADER_STAGE_FRAGMENT
				input.isFrontFace = IS_FRONT_VFACE( packedInput.cullFace, true, false);
				#elif SHADER_STAGE_FRAGMENT
				#if defined(ASE_NEED_CULLFACE)
				input.isFrontFace = IS_FRONT_VFACE( packedInput.cullFace, true, false );
				#endif
				#endif
				half isFrontFace = input.isFrontFace;

				PositionInputs posInput = GetPositionInput(input.positionSS.xy, _ScreenSize.zw, input.positionSS.z, input.positionSS.w, input.positionRWS);

				float3 V = GetWorldSpaceNormalizeViewDir(input.positionRWS);

				SceneSurfaceDescription surfaceDescription = (SceneSurfaceDescription)0;
				float localCustomAlphaClip19_g118160 = ( 0.0 );
				float localBreakData4_g118158 = ( 0.0 );
				float localCompData3_g118135 = ( 0.0 );
				TVEVisualData Data3_g118135 = (TVEVisualData)0;
				half Dummy594_g118134 = ( _CutoutCategory + _CutoutEnd + _CutoutElementMode + _CutoutBakeInfo );
				float In_Dummy3_g118135 = Dummy594_g118134;
				float localBreakData4_g118145 = ( 0.0 );
				float localCompData3_g118129 = ( 0.0 );
				TVEVisualData Data3_g118129 = (TVEVisualData)0;
				half Dummy145_g118119 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveElementMode + _EmissiveFlagMode );
				float In_Dummy3_g118129 = Dummy145_g118119;
				float localBreakData4_g118128 = ( 0.0 );
				float localCompData3_g118092 = ( 0.0 );
				TVEVisualData Data3_g118092 = (TVEVisualData)0;
				half Dummy594_g118090 = ( _WetnessCategory + _WetnessEnd + _WetnessElementMode + _WetnessBakeInfo );
				float In_Dummy3_g118092 = Dummy594_g118090;
				float localBreakData4_g118091 = ( 0.0 );
				float localCompData3_g118057 = ( 0.0 );
				TVEVisualData Data3_g118057 = (TVEVisualData)0;
				half Dummy594_g118054 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayElementMode + _OverlayBakeInfo );
				float In_Dummy3_g118057 = Dummy594_g118054;
				float localBreakData4_g118055 = ( 0.0 );
				float localCompData3_g118034 = ( 0.0 );
				TVEVisualData Data3_g118034 = (TVEVisualData)0;
				half Dummy205_g118031 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessElementMode + _DrynessBakeInfo );
				float In_Dummy3_g118034 = Dummy205_g118031;
				float localBreakData4_g118033 = ( 0.0 );
				float localCompData3_g118028 = ( 0.0 );
				TVEVisualData Data3_g118028 = (TVEVisualData)0;
				half Dummy205_g118007 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeInfo );
				float In_Dummy3_g118028 = Dummy205_g118007;
				float localBreakData4_g118029 = ( 0.0 );
				float localCompData3_g117894 = ( 0.0 );
				TVEVisualData Data3_g117894 = (TVEVisualData)0;
				half Dummy9163_g117893 = ( _CategoryTerrain + _EndTerrain );
				float In_Dummy3_g117894 = Dummy9163_g117893;
				float localHeightBasedBlending7362_g117895 = ( 0.0 );
				float3 ase_worldPos = GetAbsolutePositionWS( positionRWS );
				float4 appendResult9125_g117895 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
				float4 temp_output_35_0_g118003 = appendResult9125_g117895;
				float2 InputScale48_g118003 = (temp_output_35_0_g118003).zw;
				half2 FinalScale53_g118003 = ( 1.0 / InputScale48_g118003 );
				float2 InputPosition52_g118003 = (temp_output_35_0_g118003).xy;
				half2 FinalPosition58_g118003 = -( FinalScale53_g118003 * InputPosition52_g118003 );
				float2 temp_output_65_0_g118003 = ( ( (ase_worldPos).xz * FinalScale53_g118003 ) + FinalPosition58_g118003 );
				float4 temp_output_70_0_g118003 = _TerrainControlTex1_TexelSize;
				float2 InputTexelSize68_g118003 = (temp_output_70_0_g118003).zw;
				float2 temp_cast_0 = (1.0).xx;
				float2 InputTexelRecip69_g118003 = (temp_output_70_0_g118003).xy;
				float2 Terrain_Control_UV7873_g117895 = ( ( ( temp_output_65_0_g118003 / ( 1.0 / ( InputTexelSize68_g118003 - temp_cast_0 ) ) ) + 0.5 ) * InputTexelRecip69_g118003 );
				half4 Terrain_Control_047365_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_047362_g117895 = Terrain_Control_047365_g117895;
				half4 Terrain_Control_087366_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_087362_g117895 = Terrain_Control_087366_g117895;
				half4 Terrain_Control_127712_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_127362_g117895 = Terrain_Control_127712_g117895;
				half4 Terrain_Control_167711_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_167362_g117895 = Terrain_Control_167711_g117895;
				TEXTURE2D(Texture238_g117940) = _TerrainShaderTex1;
				float localFilterTexture30_g118001 = ( 0.0 );
				SamplerState SamplerDefault30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g118001 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g118001 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g118001 = SamplerDefault30_g118001;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g118001 = SamplerDefault30_g118001;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g118001 = SamplerPoint30_g118001;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g118001 = SamplerLow30_g118001;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g118001 = SamplerMedium30_g118001;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g118001 = SamplerHigh30_g118001;
				#endif
				SamplerState Sampler238_g117940 = SS30_g118001;
				half4 Input_Terrain_Coords_016785_g117895 = _TerrainCoord1;
				float4 temp_output_37_0_g117940 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117940 = temp_output_37_0_g117940;
				half3 Input_Position9197_g117895 = ase_worldPos;
				float3 temp_output_279_0_g117940 = Input_Position9197_g117895;
				half3 WorldPosition238_g117940 = temp_output_279_0_g117940;
				half4 localSamplePlanar2D238_g117940 = SamplePlanar2D( Texture238_g117940 , Sampler238_g117940 , Coords238_g117940 , WorldPosition238_g117940 );
				TEXTURE2D(Texture246_g117940) = _TerrainShaderTex1;
				SamplerState Sampler246_g117940 = SS30_g118001;
				half4 Coords246_g117940 = temp_output_37_0_g117940;
				half3 WorldPosition246_g117940 = temp_output_279_0_g117940;
				float3 ase_worldNormal = packedInput.ase_texcoord1.xyz;
				half3 Input_Normal9199_g117895 = ase_worldNormal;
				float3 temp_output_280_0_g117940 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117940 = temp_output_280_0_g117940;
				half4 localSamplePlanar3D246_g117940 = SamplePlanar3D( Texture246_g117940 , Sampler246_g117940 , Coords246_g117940 , WorldPosition246_g117940 , WorldNormal246_g117940 );
				TEXTURE2D(Texture234_g117940) = _TerrainShaderTex1;
				SamplerState Sampler234_g117940 = SS30_g118001;
				float4 Coords234_g117940 = temp_output_37_0_g117940;
				float3 WorldPosition234_g117940 = temp_output_279_0_g117940;
				float4 localSampleStochastic2D234_g117940 = SampleStochastic2D( Texture234_g117940 , Sampler234_g117940 , Coords234_g117940 , WorldPosition234_g117940 );
				TEXTURE2D(Texture263_g117940) = _TerrainShaderTex1;
				SamplerState Sampler263_g117940 = SS30_g118001;
				half4 Coords263_g117940 = temp_output_37_0_g117940;
				half3 WorldPosition263_g117940 = temp_output_279_0_g117940;
				half3 WorldNormal263_g117940 = temp_output_280_0_g117940;
				half4 localSampleStochastic3D263_g117940 = SampleStochastic3D( Texture263_g117940 , Sampler263_g117940 , Coords263_g117940 , WorldPosition263_g117940 , WorldNormal263_g117940 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8639_g117895 = localSamplePlanar2D238_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8639_g117895 = localSamplePlanar3D246_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8639_g117895 = localSampleStochastic2D234_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8639_g117895 = localSampleStochastic3D263_g117940;
				#else
				float4 staticSwitch8639_g117895 = localSamplePlanar2D238_g117940;
				#endif
				float4 temp_output_7_0_g117897 = _TerrainShaderMin1;
				float4 temp_output_10_0_g117897 = ( _TerrainShaderMax1 - temp_output_7_0_g117897 );
				float4 temp_output_6970_0_g117895 = saturate( ( ( staticSwitch8639_g117895 - temp_output_7_0_g117897 ) / ( temp_output_10_0_g117897 + 0.0001 ) ) );
				half4 Masks_015_g117901 = temp_output_6970_0_g117895;
				TEXTURE2D(Texture238_g117944) = _TerrainShaderTex2;
				SamplerState Sampler238_g117944 = SS30_g118001;
				half4 Input_Terrain_Coords_026787_g117895 = _TerrainCoord2;
				float4 temp_output_37_0_g117944 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117944 = temp_output_37_0_g117944;
				float3 temp_output_279_0_g117944 = Input_Position9197_g117895;
				half3 WorldPosition238_g117944 = temp_output_279_0_g117944;
				half4 localSamplePlanar2D238_g117944 = SamplePlanar2D( Texture238_g117944 , Sampler238_g117944 , Coords238_g117944 , WorldPosition238_g117944 );
				TEXTURE2D(Texture246_g117944) = _TerrainShaderTex2;
				SamplerState Sampler246_g117944 = SS30_g118001;
				half4 Coords246_g117944 = temp_output_37_0_g117944;
				half3 WorldPosition246_g117944 = temp_output_279_0_g117944;
				float3 temp_output_280_0_g117944 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117944 = temp_output_280_0_g117944;
				half4 localSamplePlanar3D246_g117944 = SamplePlanar3D( Texture246_g117944 , Sampler246_g117944 , Coords246_g117944 , WorldPosition246_g117944 , WorldNormal246_g117944 );
				TEXTURE2D(Texture234_g117944) = _TerrainShaderTex2;
				SamplerState Sampler234_g117944 = SS30_g118001;
				float4 Coords234_g117944 = temp_output_37_0_g117944;
				float3 WorldPosition234_g117944 = temp_output_279_0_g117944;
				float4 localSampleStochastic2D234_g117944 = SampleStochastic2D( Texture234_g117944 , Sampler234_g117944 , Coords234_g117944 , WorldPosition234_g117944 );
				TEXTURE2D(Texture263_g117944) = _TerrainShaderTex2;
				SamplerState Sampler263_g117944 = SS30_g118001;
				half4 Coords263_g117944 = temp_output_37_0_g117944;
				half3 WorldPosition263_g117944 = temp_output_279_0_g117944;
				half3 WorldNormal263_g117944 = temp_output_280_0_g117944;
				half4 localSampleStochastic3D263_g117944 = SampleStochastic3D( Texture263_g117944 , Sampler263_g117944 , Coords263_g117944 , WorldPosition263_g117944 , WorldNormal263_g117944 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8640_g117895 = localSamplePlanar2D238_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8640_g117895 = localSamplePlanar3D246_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8640_g117895 = localSampleStochastic2D234_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8640_g117895 = localSampleStochastic3D263_g117944;
				#else
				float4 staticSwitch8640_g117895 = localSamplePlanar2D238_g117944;
				#endif
				float4 temp_output_7_0_g117907 = _TerrainShaderMin2;
				float4 temp_output_10_0_g117907 = ( _TerrainShaderMax2 - temp_output_7_0_g117907 );
				float4 temp_output_6977_0_g117895 = saturate( ( ( staticSwitch8640_g117895 - temp_output_7_0_g117907 ) / ( temp_output_10_0_g117907 + 0.0001 ) ) );
				half4 Masks_0210_g117901 = temp_output_6977_0_g117895;
				TEXTURE2D(Texture238_g117949) = _TerrainShaderTex3;
				SamplerState Sampler238_g117949 = SS30_g118001;
				half4 Input_Terrain_Coords_036789_g117895 = _TerrainCoord3;
				float4 temp_output_37_0_g117949 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117949 = temp_output_37_0_g117949;
				float3 temp_output_279_0_g117949 = Input_Position9197_g117895;
				half3 WorldPosition238_g117949 = temp_output_279_0_g117949;
				half4 localSamplePlanar2D238_g117949 = SamplePlanar2D( Texture238_g117949 , Sampler238_g117949 , Coords238_g117949 , WorldPosition238_g117949 );
				TEXTURE2D(Texture246_g117949) = _TerrainShaderTex3;
				SamplerState Sampler246_g117949 = SS30_g118001;
				half4 Coords246_g117949 = temp_output_37_0_g117949;
				half3 WorldPosition246_g117949 = temp_output_279_0_g117949;
				float3 temp_output_280_0_g117949 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117949 = temp_output_280_0_g117949;
				half4 localSamplePlanar3D246_g117949 = SamplePlanar3D( Texture246_g117949 , Sampler246_g117949 , Coords246_g117949 , WorldPosition246_g117949 , WorldNormal246_g117949 );
				TEXTURE2D(Texture234_g117949) = _TerrainShaderTex3;
				SamplerState Sampler234_g117949 = SS30_g118001;
				float4 Coords234_g117949 = temp_output_37_0_g117949;
				float3 WorldPosition234_g117949 = temp_output_279_0_g117949;
				float4 localSampleStochastic2D234_g117949 = SampleStochastic2D( Texture234_g117949 , Sampler234_g117949 , Coords234_g117949 , WorldPosition234_g117949 );
				TEXTURE2D(Texture263_g117949) = _TerrainShaderTex3;
				SamplerState Sampler263_g117949 = SS30_g118001;
				half4 Coords263_g117949 = temp_output_37_0_g117949;
				half3 WorldPosition263_g117949 = temp_output_279_0_g117949;
				half3 WorldNormal263_g117949 = temp_output_280_0_g117949;
				half4 localSampleStochastic3D263_g117949 = SampleStochastic3D( Texture263_g117949 , Sampler263_g117949 , Coords263_g117949 , WorldPosition263_g117949 , WorldNormal263_g117949 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8641_g117895 = localSamplePlanar2D238_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8641_g117895 = localSamplePlanar3D246_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8641_g117895 = localSampleStochastic2D234_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8641_g117895 = localSampleStochastic3D263_g117949;
				#else
				float4 staticSwitch8641_g117895 = localSamplePlanar2D238_g117949;
				#endif
				float4 temp_output_7_0_g117908 = _TerrainShaderMin3;
				float4 temp_output_10_0_g117908 = ( _TerrainShaderMax3 - temp_output_7_0_g117908 );
				float4 temp_output_6978_0_g117895 = saturate( ( ( staticSwitch8641_g117895 - temp_output_7_0_g117908 ) / ( temp_output_10_0_g117908 + 0.0001 ) ) );
				half4 Masks_0312_g117901 = temp_output_6978_0_g117895;
				TEXTURE2D(Texture238_g117950) = _TerrainShaderTex4;
				SamplerState Sampler238_g117950 = SS30_g118001;
				half4 Input_Terrain_Coords_046791_g117895 = _TerrainCoord4;
				float4 temp_output_37_0_g117950 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117950 = temp_output_37_0_g117950;
				float3 temp_output_279_0_g117950 = Input_Position9197_g117895;
				half3 WorldPosition238_g117950 = temp_output_279_0_g117950;
				half4 localSamplePlanar2D238_g117950 = SamplePlanar2D( Texture238_g117950 , Sampler238_g117950 , Coords238_g117950 , WorldPosition238_g117950 );
				TEXTURE2D(Texture246_g117950) = _TerrainShaderTex4;
				SamplerState Sampler246_g117950 = SS30_g118001;
				half4 Coords246_g117950 = temp_output_37_0_g117950;
				half3 WorldPosition246_g117950 = temp_output_279_0_g117950;
				float3 temp_output_280_0_g117950 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117950 = temp_output_280_0_g117950;
				half4 localSamplePlanar3D246_g117950 = SamplePlanar3D( Texture246_g117950 , Sampler246_g117950 , Coords246_g117950 , WorldPosition246_g117950 , WorldNormal246_g117950 );
				TEXTURE2D(Texture234_g117950) = _TerrainShaderTex4;
				SamplerState Sampler234_g117950 = SS30_g118001;
				float4 Coords234_g117950 = temp_output_37_0_g117950;
				float3 WorldPosition234_g117950 = temp_output_279_0_g117950;
				float4 localSampleStochastic2D234_g117950 = SampleStochastic2D( Texture234_g117950 , Sampler234_g117950 , Coords234_g117950 , WorldPosition234_g117950 );
				TEXTURE2D(Texture263_g117950) = _TerrainShaderTex4;
				SamplerState Sampler263_g117950 = SS30_g118001;
				half4 Coords263_g117950 = temp_output_37_0_g117950;
				half3 WorldPosition263_g117950 = temp_output_279_0_g117950;
				half3 WorldNormal263_g117950 = temp_output_280_0_g117950;
				half4 localSampleStochastic3D263_g117950 = SampleStochastic3D( Texture263_g117950 , Sampler263_g117950 , Coords263_g117950 , WorldPosition263_g117950 , WorldNormal263_g117950 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8642_g117895 = localSamplePlanar2D238_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8642_g117895 = localSamplePlanar3D246_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8642_g117895 = localSampleStochastic2D234_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8642_g117895 = localSampleStochastic3D263_g117950;
				#else
				float4 staticSwitch8642_g117895 = localSamplePlanar2D238_g117950;
				#endif
				float4 temp_output_7_0_g117909 = _TerrainShaderMin4;
				float4 temp_output_10_0_g117909 = ( _TerrainShaderMax4 - temp_output_7_0_g117909 );
				float4 temp_output_6983_0_g117895 = saturate( ( ( staticSwitch8642_g117895 - temp_output_7_0_g117909 ) / ( temp_output_10_0_g117909 + 0.0001 ) ) );
				half4 Masks_0414_g117901 = temp_output_6983_0_g117895;
				float4 appendResult29_g117901 = (float4((Masks_015_g117901).z , (Masks_0210_g117901).z , (Masks_0312_g117901).z , (Masks_0414_g117901).z));
				half4 Control31_g117901 = Terrain_Control_047365_g117895;
				half4 Terrain_Height_047210_g117895 = ( appendResult29_g117901 * Control31_g117901 );
				float4 heights_047362_g117895 = Terrain_Height_047210_g117895;
				TEXTURE2D(Texture238_g117953) = _TerrainShaderTex5;
				SamplerState Sampler238_g117953 = SS30_g118001;
				half4 Input_Terrain_Coords_058750_g117895 = _TerrainCoord5;
				float4 temp_output_37_0_g117953 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117953 = temp_output_37_0_g117953;
				float3 temp_output_279_0_g117953 = Input_Position9197_g117895;
				half3 WorldPosition238_g117953 = temp_output_279_0_g117953;
				half4 localSamplePlanar2D238_g117953 = SamplePlanar2D( Texture238_g117953 , Sampler238_g117953 , Coords238_g117953 , WorldPosition238_g117953 );
				TEXTURE2D(Texture246_g117953) = _TerrainShaderTex5;
				SamplerState Sampler246_g117953 = SS30_g118001;
				half4 Coords246_g117953 = temp_output_37_0_g117953;
				half3 WorldPosition246_g117953 = temp_output_279_0_g117953;
				float3 temp_output_280_0_g117953 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117953 = temp_output_280_0_g117953;
				half4 localSamplePlanar3D246_g117953 = SamplePlanar3D( Texture246_g117953 , Sampler246_g117953 , Coords246_g117953 , WorldPosition246_g117953 , WorldNormal246_g117953 );
				TEXTURE2D(Texture234_g117953) = _TerrainShaderTex5;
				SamplerState Sampler234_g117953 = SS30_g118001;
				float4 Coords234_g117953 = temp_output_37_0_g117953;
				float3 WorldPosition234_g117953 = temp_output_279_0_g117953;
				float4 localSampleStochastic2D234_g117953 = SampleStochastic2D( Texture234_g117953 , Sampler234_g117953 , Coords234_g117953 , WorldPosition234_g117953 );
				TEXTURE2D(Texture263_g117953) = _TerrainShaderTex5;
				SamplerState Sampler263_g117953 = SS30_g118001;
				half4 Coords263_g117953 = temp_output_37_0_g117953;
				half3 WorldPosition263_g117953 = temp_output_279_0_g117953;
				half3 WorldNormal263_g117953 = temp_output_280_0_g117953;
				half4 localSampleStochastic3D263_g117953 = SampleStochastic3D( Texture263_g117953 , Sampler263_g117953 , Coords263_g117953 , WorldPosition263_g117953 , WorldNormal263_g117953 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8710_g117895 = localSamplePlanar2D238_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8710_g117895 = localSamplePlanar3D246_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8710_g117895 = localSampleStochastic2D234_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8710_g117895 = localSampleStochastic3D263_g117953;
				#else
				float4 staticSwitch8710_g117895 = localSamplePlanar2D238_g117953;
				#endif
				float4 temp_output_7_0_g117912 = _TerrainShaderMin5;
				float4 temp_output_10_0_g117912 = ( _TerrainShaderMax5 - temp_output_7_0_g117912 );
				float4 temp_output_8714_0_g117895 = saturate( ( ( staticSwitch8710_g117895 - temp_output_7_0_g117912 ) / ( temp_output_10_0_g117912 + 0.0001 ) ) );
				half4 Masks_015_g117913 = temp_output_8714_0_g117895;
				TEXTURE2D(Texture238_g117984) = _TerrainShaderTex6;
				SamplerState Sampler238_g117984 = SS30_g118001;
				half4 Input_Terrain_Coords_068751_g117895 = _TerrainCoord6;
				float4 temp_output_37_0_g117984 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117984 = temp_output_37_0_g117984;
				float3 temp_output_279_0_g117984 = Input_Position9197_g117895;
				half3 WorldPosition238_g117984 = temp_output_279_0_g117984;
				half4 localSamplePlanar2D238_g117984 = SamplePlanar2D( Texture238_g117984 , Sampler238_g117984 , Coords238_g117984 , WorldPosition238_g117984 );
				TEXTURE2D(Texture246_g117984) = _TerrainShaderTex6;
				SamplerState Sampler246_g117984 = SS30_g118001;
				half4 Coords246_g117984 = temp_output_37_0_g117984;
				half3 WorldPosition246_g117984 = temp_output_279_0_g117984;
				float3 temp_output_280_0_g117984 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117984 = temp_output_280_0_g117984;
				half4 localSamplePlanar3D246_g117984 = SamplePlanar3D( Texture246_g117984 , Sampler246_g117984 , Coords246_g117984 , WorldPosition246_g117984 , WorldNormal246_g117984 );
				TEXTURE2D(Texture234_g117984) = _TerrainShaderTex6;
				SamplerState Sampler234_g117984 = SS30_g118001;
				float4 Coords234_g117984 = temp_output_37_0_g117984;
				float3 WorldPosition234_g117984 = temp_output_279_0_g117984;
				float4 localSampleStochastic2D234_g117984 = SampleStochastic2D( Texture234_g117984 , Sampler234_g117984 , Coords234_g117984 , WorldPosition234_g117984 );
				TEXTURE2D(Texture263_g117984) = _TerrainShaderTex6;
				SamplerState Sampler263_g117984 = SS30_g118001;
				half4 Coords263_g117984 = temp_output_37_0_g117984;
				half3 WorldPosition263_g117984 = temp_output_279_0_g117984;
				half3 WorldNormal263_g117984 = temp_output_280_0_g117984;
				half4 localSampleStochastic3D263_g117984 = SampleStochastic3D( Texture263_g117984 , Sampler263_g117984 , Coords263_g117984 , WorldPosition263_g117984 , WorldNormal263_g117984 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8711_g117895 = localSamplePlanar2D238_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8711_g117895 = localSamplePlanar3D246_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8711_g117895 = localSampleStochastic2D234_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8711_g117895 = localSampleStochastic3D263_g117984;
				#else
				float4 staticSwitch8711_g117895 = localSamplePlanar2D238_g117984;
				#endif
				float4 temp_output_7_0_g117937 = _TerrainShaderMin6;
				float4 temp_output_10_0_g117937 = ( _TerrainShaderMax6 - temp_output_7_0_g117937 );
				float4 temp_output_8721_0_g117895 = saturate( ( ( staticSwitch8711_g117895 - temp_output_7_0_g117937 ) / ( temp_output_10_0_g117937 + 0.0001 ) ) );
				half4 Masks_0210_g117913 = temp_output_8721_0_g117895;
				TEXTURE2D(Texture238_g117985) = _TerrainShaderTex7;
				SamplerState Sampler238_g117985 = SS30_g118001;
				half4 Input_Terrain_Coords_078752_g117895 = _TerrainCoord7;
				float4 temp_output_37_0_g117985 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117985 = temp_output_37_0_g117985;
				float3 temp_output_279_0_g117985 = Input_Position9197_g117895;
				half3 WorldPosition238_g117985 = temp_output_279_0_g117985;
				half4 localSamplePlanar2D238_g117985 = SamplePlanar2D( Texture238_g117985 , Sampler238_g117985 , Coords238_g117985 , WorldPosition238_g117985 );
				TEXTURE2D(Texture246_g117985) = _TerrainShaderTex7;
				SamplerState Sampler246_g117985 = SS30_g118001;
				half4 Coords246_g117985 = temp_output_37_0_g117985;
				half3 WorldPosition246_g117985 = temp_output_279_0_g117985;
				float3 temp_output_280_0_g117985 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117985 = temp_output_280_0_g117985;
				half4 localSamplePlanar3D246_g117985 = SamplePlanar3D( Texture246_g117985 , Sampler246_g117985 , Coords246_g117985 , WorldPosition246_g117985 , WorldNormal246_g117985 );
				TEXTURE2D(Texture234_g117985) = _TerrainShaderTex7;
				SamplerState Sampler234_g117985 = SS30_g118001;
				float4 Coords234_g117985 = temp_output_37_0_g117985;
				float3 WorldPosition234_g117985 = temp_output_279_0_g117985;
				float4 localSampleStochastic2D234_g117985 = SampleStochastic2D( Texture234_g117985 , Sampler234_g117985 , Coords234_g117985 , WorldPosition234_g117985 );
				TEXTURE2D(Texture263_g117985) = _TerrainShaderTex7;
				SamplerState Sampler263_g117985 = SS30_g118001;
				half4 Coords263_g117985 = temp_output_37_0_g117985;
				half3 WorldPosition263_g117985 = temp_output_279_0_g117985;
				half3 WorldNormal263_g117985 = temp_output_280_0_g117985;
				half4 localSampleStochastic3D263_g117985 = SampleStochastic3D( Texture263_g117985 , Sampler263_g117985 , Coords263_g117985 , WorldPosition263_g117985 , WorldNormal263_g117985 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8712_g117895 = localSamplePlanar2D238_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8712_g117895 = localSamplePlanar3D246_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8712_g117895 = localSampleStochastic2D234_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8712_g117895 = localSampleStochastic3D263_g117985;
				#else
				float4 staticSwitch8712_g117895 = localSamplePlanar2D238_g117985;
				#endif
				float4 temp_output_7_0_g117938 = _TerrainShaderMin7;
				float4 temp_output_10_0_g117938 = ( _TerrainShaderMax7 - temp_output_7_0_g117938 );
				float4 temp_output_8724_0_g117895 = saturate( ( ( staticSwitch8712_g117895 - temp_output_7_0_g117938 ) / ( temp_output_10_0_g117938 + 0.0001 ) ) );
				half4 Masks_0312_g117913 = temp_output_8724_0_g117895;
				TEXTURE2D(Texture238_g117986) = _TerrainShaderTex8;
				SamplerState Sampler238_g117986 = SS30_g118001;
				half4 Input_Terrain_Coords_088749_g117895 = _TerrainCoord8;
				float4 temp_output_37_0_g117986 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117986 = temp_output_37_0_g117986;
				float3 temp_output_279_0_g117986 = Input_Position9197_g117895;
				half3 WorldPosition238_g117986 = temp_output_279_0_g117986;
				half4 localSamplePlanar2D238_g117986 = SamplePlanar2D( Texture238_g117986 , Sampler238_g117986 , Coords238_g117986 , WorldPosition238_g117986 );
				TEXTURE2D(Texture246_g117986) = _TerrainShaderTex8;
				SamplerState Sampler246_g117986 = SS30_g118001;
				half4 Coords246_g117986 = temp_output_37_0_g117986;
				half3 WorldPosition246_g117986 = temp_output_279_0_g117986;
				float3 temp_output_280_0_g117986 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117986 = temp_output_280_0_g117986;
				half4 localSamplePlanar3D246_g117986 = SamplePlanar3D( Texture246_g117986 , Sampler246_g117986 , Coords246_g117986 , WorldPosition246_g117986 , WorldNormal246_g117986 );
				TEXTURE2D(Texture234_g117986) = _TerrainShaderTex8;
				SamplerState Sampler234_g117986 = SS30_g118001;
				float4 Coords234_g117986 = temp_output_37_0_g117986;
				float3 WorldPosition234_g117986 = temp_output_279_0_g117986;
				float4 localSampleStochastic2D234_g117986 = SampleStochastic2D( Texture234_g117986 , Sampler234_g117986 , Coords234_g117986 , WorldPosition234_g117986 );
				TEXTURE2D(Texture263_g117986) = _TerrainShaderTex8;
				SamplerState Sampler263_g117986 = SS30_g118001;
				half4 Coords263_g117986 = temp_output_37_0_g117986;
				half3 WorldPosition263_g117986 = temp_output_279_0_g117986;
				half3 WorldNormal263_g117986 = temp_output_280_0_g117986;
				half4 localSampleStochastic3D263_g117986 = SampleStochastic3D( Texture263_g117986 , Sampler263_g117986 , Coords263_g117986 , WorldPosition263_g117986 , WorldNormal263_g117986 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8713_g117895 = localSamplePlanar2D238_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8713_g117895 = localSamplePlanar3D246_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8713_g117895 = localSampleStochastic2D234_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8713_g117895 = localSampleStochastic3D263_g117986;
				#else
				float4 staticSwitch8713_g117895 = localSamplePlanar2D238_g117986;
				#endif
				float4 temp_output_7_0_g117939 = _TerrainShaderMin8;
				float4 temp_output_10_0_g117939 = ( _TerrainShaderMax8 - temp_output_7_0_g117939 );
				float4 temp_output_8727_0_g117895 = saturate( ( ( staticSwitch8713_g117895 - temp_output_7_0_g117939 ) / ( temp_output_10_0_g117939 + 0.0001 ) ) );
				half4 Masks_0414_g117913 = temp_output_8727_0_g117895;
				float4 appendResult29_g117913 = (float4((Masks_015_g117913).z , (Masks_0210_g117913).z , (Masks_0312_g117913).z , (Masks_0414_g117913).z));
				half4 Control31_g117913 = Terrain_Control_087366_g117895;
				half4 Terrain_Height_088731_g117895 = ( appendResult29_g117913 * Control31_g117913 );
				float4 heights_087362_g117895 = Terrain_Height_088731_g117895;
				TEXTURE2D(Texture238_g117956) = _TerrainShaderTex9;
				SamplerState Sampler238_g117956 = SS30_g118001;
				half4 Input_Terrain_Coords_098833_g117895 = _TerrainCoord9;
				float4 temp_output_37_0_g117956 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117956 = temp_output_37_0_g117956;
				float3 temp_output_279_0_g117956 = Input_Position9197_g117895;
				half3 WorldPosition238_g117956 = temp_output_279_0_g117956;
				half4 localSamplePlanar2D238_g117956 = SamplePlanar2D( Texture238_g117956 , Sampler238_g117956 , Coords238_g117956 , WorldPosition238_g117956 );
				TEXTURE2D(Texture246_g117956) = _TerrainShaderTex9;
				SamplerState Sampler246_g117956 = SS30_g118001;
				half4 Coords246_g117956 = temp_output_37_0_g117956;
				half3 WorldPosition246_g117956 = temp_output_279_0_g117956;
				float3 temp_output_280_0_g117956 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117956 = temp_output_280_0_g117956;
				half4 localSamplePlanar3D246_g117956 = SamplePlanar3D( Texture246_g117956 , Sampler246_g117956 , Coords246_g117956 , WorldPosition246_g117956 , WorldNormal246_g117956 );
				TEXTURE2D(Texture234_g117956) = _TerrainShaderTex9;
				SamplerState Sampler234_g117956 = SS30_g118001;
				float4 Coords234_g117956 = temp_output_37_0_g117956;
				float3 WorldPosition234_g117956 = temp_output_279_0_g117956;
				float4 localSampleStochastic2D234_g117956 = SampleStochastic2D( Texture234_g117956 , Sampler234_g117956 , Coords234_g117956 , WorldPosition234_g117956 );
				TEXTURE2D(Texture263_g117956) = _TerrainShaderTex9;
				SamplerState Sampler263_g117956 = SS30_g118001;
				half4 Coords263_g117956 = temp_output_37_0_g117956;
				half3 WorldPosition263_g117956 = temp_output_279_0_g117956;
				half3 WorldNormal263_g117956 = temp_output_280_0_g117956;
				half4 localSampleStochastic3D263_g117956 = SampleStochastic3D( Texture263_g117956 , Sampler263_g117956 , Coords263_g117956 , WorldPosition263_g117956 , WorldNormal263_g117956 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8878_g117895 = localSamplePlanar2D238_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8878_g117895 = localSamplePlanar3D246_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8878_g117895 = localSampleStochastic2D234_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8878_g117895 = localSampleStochastic3D263_g117956;
				#else
				float4 staticSwitch8878_g117895 = localSamplePlanar2D238_g117956;
				#endif
				float4 temp_output_7_0_g117919 = _TerrainShaderMin9;
				float4 temp_output_10_0_g117919 = ( _TerrainShaderMax9 - temp_output_7_0_g117919 );
				float4 temp_output_8815_0_g117895 = saturate( ( ( staticSwitch8878_g117895 - temp_output_7_0_g117919 ) / ( temp_output_10_0_g117919 + 0.0001 ) ) );
				half4 Masks_015_g117920 = temp_output_8815_0_g117895;
				TEXTURE2D(Texture238_g117966) = _TerrainShaderTex10;
				SamplerState Sampler238_g117966 = SS30_g118001;
				half4 Input_Terrain_Coords_108834_g117895 = _TerrainCoord10;
				float4 temp_output_37_0_g117966 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117966 = temp_output_37_0_g117966;
				float3 temp_output_279_0_g117966 = Input_Position9197_g117895;
				half3 WorldPosition238_g117966 = temp_output_279_0_g117966;
				half4 localSamplePlanar2D238_g117966 = SamplePlanar2D( Texture238_g117966 , Sampler238_g117966 , Coords238_g117966 , WorldPosition238_g117966 );
				TEXTURE2D(Texture246_g117966) = _TerrainShaderTex10;
				SamplerState Sampler246_g117966 = SS30_g118001;
				half4 Coords246_g117966 = temp_output_37_0_g117966;
				half3 WorldPosition246_g117966 = temp_output_279_0_g117966;
				float3 temp_output_280_0_g117966 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117966 = temp_output_280_0_g117966;
				half4 localSamplePlanar3D246_g117966 = SamplePlanar3D( Texture246_g117966 , Sampler246_g117966 , Coords246_g117966 , WorldPosition246_g117966 , WorldNormal246_g117966 );
				TEXTURE2D(Texture234_g117966) = _TerrainShaderTex10;
				SamplerState Sampler234_g117966 = SS30_g118001;
				float4 Coords234_g117966 = temp_output_37_0_g117966;
				float3 WorldPosition234_g117966 = temp_output_279_0_g117966;
				float4 localSampleStochastic2D234_g117966 = SampleStochastic2D( Texture234_g117966 , Sampler234_g117966 , Coords234_g117966 , WorldPosition234_g117966 );
				TEXTURE2D(Texture263_g117966) = _TerrainShaderTex10;
				SamplerState Sampler263_g117966 = SS30_g118001;
				half4 Coords263_g117966 = temp_output_37_0_g117966;
				half3 WorldPosition263_g117966 = temp_output_279_0_g117966;
				half3 WorldNormal263_g117966 = temp_output_280_0_g117966;
				half4 localSampleStochastic3D263_g117966 = SampleStochastic3D( Texture263_g117966 , Sampler263_g117966 , Coords263_g117966 , WorldPosition263_g117966 , WorldNormal263_g117966 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8860_g117895 = localSamplePlanar2D238_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8860_g117895 = localSamplePlanar3D246_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8860_g117895 = localSampleStochastic2D234_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8860_g117895 = localSampleStochastic3D263_g117966;
				#else
				float4 staticSwitch8860_g117895 = localSamplePlanar2D238_g117966;
				#endif
				float4 temp_output_7_0_g117931 = _TerrainShaderMin10;
				float4 temp_output_10_0_g117931 = ( _TerrainShaderMax10 - temp_output_7_0_g117931 );
				float4 temp_output_8818_0_g117895 = saturate( ( ( staticSwitch8860_g117895 - temp_output_7_0_g117931 ) / ( temp_output_10_0_g117931 + 0.0001 ) ) );
				half4 Masks_0210_g117920 = temp_output_8818_0_g117895;
				TEXTURE2D(Texture238_g117967) = _TerrainShaderTex11;
				SamplerState Sampler238_g117967 = SS30_g118001;
				half4 Input_Terrain_Coords_118835_g117895 = _TerrainCoord11;
				float4 temp_output_37_0_g117967 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117967 = temp_output_37_0_g117967;
				float3 temp_output_279_0_g117967 = Input_Position9197_g117895;
				half3 WorldPosition238_g117967 = temp_output_279_0_g117967;
				half4 localSamplePlanar2D238_g117967 = SamplePlanar2D( Texture238_g117967 , Sampler238_g117967 , Coords238_g117967 , WorldPosition238_g117967 );
				TEXTURE2D(Texture246_g117967) = _TerrainShaderTex11;
				SamplerState Sampler246_g117967 = SS30_g118001;
				half4 Coords246_g117967 = temp_output_37_0_g117967;
				half3 WorldPosition246_g117967 = temp_output_279_0_g117967;
				float3 temp_output_280_0_g117967 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117967 = temp_output_280_0_g117967;
				half4 localSamplePlanar3D246_g117967 = SamplePlanar3D( Texture246_g117967 , Sampler246_g117967 , Coords246_g117967 , WorldPosition246_g117967 , WorldNormal246_g117967 );
				TEXTURE2D(Texture234_g117967) = _TerrainShaderTex11;
				SamplerState Sampler234_g117967 = SS30_g118001;
				float4 Coords234_g117967 = temp_output_37_0_g117967;
				float3 WorldPosition234_g117967 = temp_output_279_0_g117967;
				float4 localSampleStochastic2D234_g117967 = SampleStochastic2D( Texture234_g117967 , Sampler234_g117967 , Coords234_g117967 , WorldPosition234_g117967 );
				TEXTURE2D(Texture263_g117967) = _TerrainShaderTex11;
				SamplerState Sampler263_g117967 = SS30_g118001;
				half4 Coords263_g117967 = temp_output_37_0_g117967;
				half3 WorldPosition263_g117967 = temp_output_279_0_g117967;
				half3 WorldNormal263_g117967 = temp_output_280_0_g117967;
				half4 localSampleStochastic3D263_g117967 = SampleStochastic3D( Texture263_g117967 , Sampler263_g117967 , Coords263_g117967 , WorldPosition263_g117967 , WorldNormal263_g117967 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8861_g117895 = localSamplePlanar2D238_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8861_g117895 = localSamplePlanar3D246_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8861_g117895 = localSampleStochastic2D234_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8861_g117895 = localSampleStochastic3D263_g117967;
				#else
				float4 staticSwitch8861_g117895 = localSamplePlanar2D238_g117967;
				#endif
				float4 temp_output_7_0_g117932 = _TerrainShaderMin11;
				float4 temp_output_10_0_g117932 = ( _TerrainShaderMax11 - temp_output_7_0_g117932 );
				float4 temp_output_8819_0_g117895 = saturate( ( ( staticSwitch8861_g117895 - temp_output_7_0_g117932 ) / ( temp_output_10_0_g117932 + 0.0001 ) ) );
				half4 Masks_0312_g117920 = temp_output_8819_0_g117895;
				TEXTURE2D(Texture238_g117968) = _TerrainShaderTex12;
				SamplerState Sampler238_g117968 = SS30_g118001;
				half4 Input_Terrain_Coords_128836_g117895 = _TerrainCoord12;
				float4 temp_output_37_0_g117968 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117968 = temp_output_37_0_g117968;
				float3 temp_output_279_0_g117968 = Input_Position9197_g117895;
				half3 WorldPosition238_g117968 = temp_output_279_0_g117968;
				half4 localSamplePlanar2D238_g117968 = SamplePlanar2D( Texture238_g117968 , Sampler238_g117968 , Coords238_g117968 , WorldPosition238_g117968 );
				TEXTURE2D(Texture246_g117968) = _TerrainShaderTex12;
				SamplerState Sampler246_g117968 = SS30_g118001;
				half4 Coords246_g117968 = temp_output_37_0_g117968;
				half3 WorldPosition246_g117968 = temp_output_279_0_g117968;
				float3 temp_output_280_0_g117968 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117968 = temp_output_280_0_g117968;
				half4 localSamplePlanar3D246_g117968 = SamplePlanar3D( Texture246_g117968 , Sampler246_g117968 , Coords246_g117968 , WorldPosition246_g117968 , WorldNormal246_g117968 );
				TEXTURE2D(Texture234_g117968) = _TerrainShaderTex12;
				SamplerState Sampler234_g117968 = SS30_g118001;
				float4 Coords234_g117968 = temp_output_37_0_g117968;
				float3 WorldPosition234_g117968 = temp_output_279_0_g117968;
				float4 localSampleStochastic2D234_g117968 = SampleStochastic2D( Texture234_g117968 , Sampler234_g117968 , Coords234_g117968 , WorldPosition234_g117968 );
				TEXTURE2D(Texture263_g117968) = _TerrainShaderTex12;
				SamplerState Sampler263_g117968 = SS30_g118001;
				half4 Coords263_g117968 = temp_output_37_0_g117968;
				half3 WorldPosition263_g117968 = temp_output_279_0_g117968;
				half3 WorldNormal263_g117968 = temp_output_280_0_g117968;
				half4 localSampleStochastic3D263_g117968 = SampleStochastic3D( Texture263_g117968 , Sampler263_g117968 , Coords263_g117968 , WorldPosition263_g117968 , WorldNormal263_g117968 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8879_g117895 = localSamplePlanar2D238_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8879_g117895 = localSamplePlanar3D246_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8879_g117895 = localSampleStochastic2D234_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8879_g117895 = localSampleStochastic3D263_g117968;
				#else
				float4 staticSwitch8879_g117895 = localSamplePlanar2D238_g117968;
				#endif
				float4 temp_output_7_0_g117933 = _TerrainShaderMin12;
				float4 temp_output_10_0_g117933 = ( _TerrainShaderMax12 - temp_output_7_0_g117933 );
				float4 temp_output_8820_0_g117895 = saturate( ( ( staticSwitch8879_g117895 - temp_output_7_0_g117933 ) / ( temp_output_10_0_g117933 + 0.0001 ) ) );
				half4 Masks_0414_g117920 = temp_output_8820_0_g117895;
				float4 appendResult29_g117920 = (float4((Masks_015_g117920).z , (Masks_0210_g117920).z , (Masks_0312_g117920).z , (Masks_0414_g117920).z));
				half4 Control31_g117920 = Terrain_Control_127712_g117895;
				half4 Terrain_Height_128870_g117895 = ( appendResult29_g117920 * Control31_g117920 );
				float4 heights_127362_g117895 = Terrain_Height_128870_g117895;
				TEXTURE2D(Texture238_g117964) = _TerrainShaderTex13;
				SamplerState Sampler238_g117964 = SS30_g118001;
				half4 Input_Terrain_Coords_138960_g117895 = _TerrainCoord13;
				float4 temp_output_37_0_g117964 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117964 = temp_output_37_0_g117964;
				float3 temp_output_279_0_g117964 = Input_Position9197_g117895;
				half3 WorldPosition238_g117964 = temp_output_279_0_g117964;
				half4 localSamplePlanar2D238_g117964 = SamplePlanar2D( Texture238_g117964 , Sampler238_g117964 , Coords238_g117964 , WorldPosition238_g117964 );
				TEXTURE2D(Texture246_g117964) = _TerrainShaderTex13;
				SamplerState Sampler246_g117964 = SS30_g118001;
				half4 Coords246_g117964 = temp_output_37_0_g117964;
				half3 WorldPosition246_g117964 = temp_output_279_0_g117964;
				float3 temp_output_280_0_g117964 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117964 = temp_output_280_0_g117964;
				half4 localSamplePlanar3D246_g117964 = SamplePlanar3D( Texture246_g117964 , Sampler246_g117964 , Coords246_g117964 , WorldPosition246_g117964 , WorldNormal246_g117964 );
				TEXTURE2D(Texture234_g117964) = _TerrainShaderTex13;
				SamplerState Sampler234_g117964 = SS30_g118001;
				float4 Coords234_g117964 = temp_output_37_0_g117964;
				float3 WorldPosition234_g117964 = temp_output_279_0_g117964;
				float4 localSampleStochastic2D234_g117964 = SampleStochastic2D( Texture234_g117964 , Sampler234_g117964 , Coords234_g117964 , WorldPosition234_g117964 );
				TEXTURE2D(Texture263_g117964) = _TerrainShaderTex13;
				SamplerState Sampler263_g117964 = SS30_g118001;
				half4 Coords263_g117964 = temp_output_37_0_g117964;
				half3 WorldPosition263_g117964 = temp_output_279_0_g117964;
				half3 WorldNormal263_g117964 = temp_output_280_0_g117964;
				half4 localSampleStochastic3D263_g117964 = SampleStochastic3D( Texture263_g117964 , Sampler263_g117964 , Coords263_g117964 , WorldPosition263_g117964 , WorldNormal263_g117964 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch9000_g117895 = localSamplePlanar2D238_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch9000_g117895 = localSamplePlanar3D246_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch9000_g117895 = localSampleStochastic2D234_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch9000_g117895 = localSampleStochastic3D263_g117964;
				#else
				float4 staticSwitch9000_g117895 = localSamplePlanar2D238_g117964;
				#endif
				float4 temp_output_7_0_g117926 = _TerrainShaderMin13;
				float4 temp_output_10_0_g117926 = ( _TerrainShaderMax13 - temp_output_7_0_g117926 );
				float4 temp_output_8931_0_g117895 = saturate( ( ( staticSwitch9000_g117895 - temp_output_7_0_g117926 ) / ( temp_output_10_0_g117926 + 0.0001 ) ) );
				half4 Masks_015_g117927 = temp_output_8931_0_g117895;
				TEXTURE2D(Texture238_g117975) = _TerrainShaderTex14;
				SamplerState Sampler238_g117975 = SS30_g118001;
				half4 Input_Terrain_Coords_148961_g117895 = _TerrainCoord14;
				float4 temp_output_37_0_g117975 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117975 = temp_output_37_0_g117975;
				float3 temp_output_279_0_g117975 = Input_Position9197_g117895;
				half3 WorldPosition238_g117975 = temp_output_279_0_g117975;
				half4 localSamplePlanar2D238_g117975 = SamplePlanar2D( Texture238_g117975 , Sampler238_g117975 , Coords238_g117975 , WorldPosition238_g117975 );
				TEXTURE2D(Texture246_g117975) = _TerrainShaderTex14;
				SamplerState Sampler246_g117975 = SS30_g118001;
				half4 Coords246_g117975 = temp_output_37_0_g117975;
				half3 WorldPosition246_g117975 = temp_output_279_0_g117975;
				float3 temp_output_280_0_g117975 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117975 = temp_output_280_0_g117975;
				half4 localSamplePlanar3D246_g117975 = SamplePlanar3D( Texture246_g117975 , Sampler246_g117975 , Coords246_g117975 , WorldPosition246_g117975 , WorldNormal246_g117975 );
				TEXTURE2D(Texture234_g117975) = _TerrainShaderTex14;
				SamplerState Sampler234_g117975 = SS30_g118001;
				float4 Coords234_g117975 = temp_output_37_0_g117975;
				float3 WorldPosition234_g117975 = temp_output_279_0_g117975;
				float4 localSampleStochastic2D234_g117975 = SampleStochastic2D( Texture234_g117975 , Sampler234_g117975 , Coords234_g117975 , WorldPosition234_g117975 );
				TEXTURE2D(Texture263_g117975) = _TerrainShaderTex14;
				SamplerState Sampler263_g117975 = SS30_g118001;
				half4 Coords263_g117975 = temp_output_37_0_g117975;
				half3 WorldPosition263_g117975 = temp_output_279_0_g117975;
				half3 WorldNormal263_g117975 = temp_output_280_0_g117975;
				half4 localSampleStochastic3D263_g117975 = SampleStochastic3D( Texture263_g117975 , Sampler263_g117975 , Coords263_g117975 , WorldPosition263_g117975 , WorldNormal263_g117975 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch9001_g117895 = localSamplePlanar2D238_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch9001_g117895 = localSamplePlanar3D246_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch9001_g117895 = localSampleStochastic2D234_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch9001_g117895 = localSampleStochastic3D263_g117975;
				#else
				float4 staticSwitch9001_g117895 = localSamplePlanar2D238_g117975;
				#endif
				float4 temp_output_7_0_g117934 = _TerrainShaderMin14;
				float4 temp_output_10_0_g117934 = ( _TerrainShaderMax14 - temp_output_7_0_g117934 );
				float4 temp_output_8934_0_g117895 = saturate( ( ( staticSwitch9001_g117895 - temp_output_7_0_g117934 ) / ( temp_output_10_0_g117934 + 0.0001 ) ) );
				half4 Masks_0210_g117927 = temp_output_8934_0_g117895;
				TEXTURE2D(Texture238_g117976) = _TerrainShaderTex15;
				SamplerState Sampler238_g117976 = SS30_g118001;
				half4 Input_Terrain_Coords_158962_g117895 = _TerrainCoord15;
				float4 temp_output_37_0_g117976 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117976 = temp_output_37_0_g117976;
				float3 temp_output_279_0_g117976 = Input_Position9197_g117895;
				half3 WorldPosition238_g117976 = temp_output_279_0_g117976;
				half4 localSamplePlanar2D238_g117976 = SamplePlanar2D( Texture238_g117976 , Sampler238_g117976 , Coords238_g117976 , WorldPosition238_g117976 );
				TEXTURE2D(Texture246_g117976) = _TerrainShaderTex15;
				SamplerState Sampler246_g117976 = SS30_g118001;
				half4 Coords246_g117976 = temp_output_37_0_g117976;
				half3 WorldPosition246_g117976 = temp_output_279_0_g117976;
				float3 temp_output_280_0_g117976 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117976 = temp_output_280_0_g117976;
				half4 localSamplePlanar3D246_g117976 = SamplePlanar3D( Texture246_g117976 , Sampler246_g117976 , Coords246_g117976 , WorldPosition246_g117976 , WorldNormal246_g117976 );
				TEXTURE2D(Texture234_g117976) = _TerrainShaderTex15;
				SamplerState Sampler234_g117976 = SS30_g118001;
				float4 Coords234_g117976 = temp_output_37_0_g117976;
				float3 WorldPosition234_g117976 = temp_output_279_0_g117976;
				float4 localSampleStochastic2D234_g117976 = SampleStochastic2D( Texture234_g117976 , Sampler234_g117976 , Coords234_g117976 , WorldPosition234_g117976 );
				TEXTURE2D(Texture263_g117976) = _TerrainShaderTex15;
				SamplerState Sampler263_g117976 = SS30_g118001;
				half4 Coords263_g117976 = temp_output_37_0_g117976;
				half3 WorldPosition263_g117976 = temp_output_279_0_g117976;
				half3 WorldNormal263_g117976 = temp_output_280_0_g117976;
				half4 localSampleStochastic3D263_g117976 = SampleStochastic3D( Texture263_g117976 , Sampler263_g117976 , Coords263_g117976 , WorldPosition263_g117976 , WorldNormal263_g117976 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch9002_g117895 = localSamplePlanar2D238_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch9002_g117895 = localSamplePlanar3D246_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch9002_g117895 = localSampleStochastic2D234_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch9002_g117895 = localSampleStochastic3D263_g117976;
				#else
				float4 staticSwitch9002_g117895 = localSamplePlanar2D238_g117976;
				#endif
				float4 temp_output_7_0_g117935 = _TerrainShaderMin15;
				float4 temp_output_10_0_g117935 = ( _TerrainShaderMax15 - temp_output_7_0_g117935 );
				float4 temp_output_8935_0_g117895 = saturate( ( ( staticSwitch9002_g117895 - temp_output_7_0_g117935 ) / ( temp_output_10_0_g117935 + 0.0001 ) ) );
				half4 Masks_0312_g117927 = temp_output_8935_0_g117895;
				TEXTURE2D(Texture238_g117977) = _TerrainShaderTex16;
				SamplerState Sampler238_g117977 = SS30_g118001;
				half4 Input_Terrain_Coords_168959_g117895 = _TerrainCoord16;
				float4 temp_output_37_0_g117977 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117977 = temp_output_37_0_g117977;
				float3 temp_output_279_0_g117977 = Input_Position9197_g117895;
				half3 WorldPosition238_g117977 = temp_output_279_0_g117977;
				half4 localSamplePlanar2D238_g117977 = SamplePlanar2D( Texture238_g117977 , Sampler238_g117977 , Coords238_g117977 , WorldPosition238_g117977 );
				TEXTURE2D(Texture246_g117977) = _TerrainShaderTex16;
				SamplerState Sampler246_g117977 = SS30_g118001;
				half4 Coords246_g117977 = temp_output_37_0_g117977;
				half3 WorldPosition246_g117977 = temp_output_279_0_g117977;
				float3 temp_output_280_0_g117977 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117977 = temp_output_280_0_g117977;
				half4 localSamplePlanar3D246_g117977 = SamplePlanar3D( Texture246_g117977 , Sampler246_g117977 , Coords246_g117977 , WorldPosition246_g117977 , WorldNormal246_g117977 );
				TEXTURE2D(Texture234_g117977) = _TerrainShaderTex16;
				SamplerState Sampler234_g117977 = SS30_g118001;
				float4 Coords234_g117977 = temp_output_37_0_g117977;
				float3 WorldPosition234_g117977 = temp_output_279_0_g117977;
				float4 localSampleStochastic2D234_g117977 = SampleStochastic2D( Texture234_g117977 , Sampler234_g117977 , Coords234_g117977 , WorldPosition234_g117977 );
				TEXTURE2D(Texture263_g117977) = _TerrainShaderTex16;
				SamplerState Sampler263_g117977 = SS30_g118001;
				half4 Coords263_g117977 = temp_output_37_0_g117977;
				half3 WorldPosition263_g117977 = temp_output_279_0_g117977;
				half3 WorldNormal263_g117977 = temp_output_280_0_g117977;
				half4 localSampleStochastic3D263_g117977 = SampleStochastic3D( Texture263_g117977 , Sampler263_g117977 , Coords263_g117977 , WorldPosition263_g117977 , WorldNormal263_g117977 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch9003_g117895 = localSamplePlanar2D238_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch9003_g117895 = localSamplePlanar3D246_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch9003_g117895 = localSampleStochastic2D234_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch9003_g117895 = localSampleStochastic3D263_g117977;
				#else
				float4 staticSwitch9003_g117895 = localSamplePlanar2D238_g117977;
				#endif
				float4 temp_output_7_0_g117936 = _TerrainShaderMin16;
				float4 temp_output_10_0_g117936 = ( _TerrainShaderMax16 - temp_output_7_0_g117936 );
				float4 temp_output_8936_0_g117895 = saturate( ( ( staticSwitch9003_g117895 - temp_output_7_0_g117936 ) / ( temp_output_10_0_g117936 + 0.0001 ) ) );
				half4 Masks_0414_g117927 = temp_output_8936_0_g117895;
				float4 appendResult29_g117927 = (float4((Masks_015_g117927).z , (Masks_0210_g117927).z , (Masks_0312_g117927).z , (Masks_0414_g117927).z));
				half4 Control31_g117927 = Terrain_Control_167711_g117895;
				half4 Terrain_Height_169015_g117895 = ( appendResult29_g117927 * Control31_g117927 );
				float4 heights_167362_g117895 = Terrain_Height_169015_g117895;
				float heightTransition7362_g117895 = ( 1.0 - _TerrainHeightBlendValue );
				float4 weights_047362_g117895 = float4( 0,0,0,0 );
				float4 weights_087362_g117895 = float4( 0,0,0,0 );
				float4 weights_127362_g117895 = float4( 0,0,0,0 );
				float4 weights_167362_g117895 = float4( 0,0,0,0 );
				//Modified version of the HDRP terrain height based blending
				float maxHeight = 0;
				float4 weightedHeights_04 = float4( 0,0,0,0 );
				float4 weightedHeights_08 = float4( 0,0,0,0 );
				float4 weightedHeights_12 = float4( 0,0,0,0 );
				float4 weightedHeights_16 = float4( 0,0,0,0 );
				maxHeight = heights_047362_g117895.x;
				maxHeight = max(maxHeight, heights_047362_g117895.y);
				maxHeight = max(maxHeight, heights_047362_g117895.z);
				maxHeight = max(maxHeight, heights_047362_g117895.w);
				#ifdef TVE_TERRAIN_08
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				#endif
				#ifdef TVE_TERRAIN_12
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				maxHeight = max(maxHeight, heights_127362_g117895.x);
				maxHeight = max(maxHeight, heights_127362_g117895.y);
				maxHeight = max(maxHeight, heights_127362_g117895.z);
				maxHeight = max(maxHeight, heights_127362_g117895.w);
				#endif
				#ifdef TVE_TERRAIN_16
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				maxHeight = max(maxHeight, heights_127362_g117895.x);
				maxHeight = max(maxHeight, heights_127362_g117895.y);
				maxHeight = max(maxHeight, heights_127362_g117895.z);
				maxHeight = max(maxHeight, heights_127362_g117895.w);
				maxHeight = max(maxHeight, heights_167362_g117895.x);
				maxHeight = max(maxHeight, heights_167362_g117895.y);
				maxHeight = max(maxHeight, heights_167362_g117895.z);
				maxHeight = max(maxHeight, heights_167362_g117895.w);
				#endif
				float transition = max(heightTransition7362_g117895, 0.01);
				weightedHeights_04 = float4 ( heights_047362_g117895.x, heights_047362_g117895.y, heights_047362_g117895.z, heights_047362_g117895.w );
				weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
				weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g117895;
				#ifdef TVE_TERRAIN_08
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				#endif
				#ifdef TVE_TERRAIN_12
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				weightedHeights_12 = float4 ( heights_127362_g117895.x, heights_127362_g117895.y, heights_127362_g117895.z, heights_127362_g117895.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g117895;
				#endif
				#ifdef TVE_TERRAIN_16
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				weightedHeights_12 = float4 ( heights_127362_g117895.x, heights_127362_g117895.y, heights_127362_g117895.z, heights_127362_g117895.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g117895;
				weightedHeights_16 = float4 ( heights_167362_g117895.x, heights_167362_g117895.y, heights_167362_g117895.z, heights_167362_g117895.w );
				weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
				weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g117895;
				#endif
				float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
				float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
				float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
				float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
				float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
				weights_047362_g117895 = weightedHeights_04 / sumHeight.xxxx;
				#ifdef TVE_TERRAIN_08
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_12
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g117895 = weightedHeights_12 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_16
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g117895 = weightedHeights_12 / sumHeight.xxxx;
				weights_167362_g117895 = weightedHeights_16 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8792_g117895 = weights_047362_g117895;
				#else
				float4 staticSwitch8792_g117895 = control_047362_g117895;
				#endif
				half4 Terrain_Weights_046781_g117895 = staticSwitch8792_g117895;
				half4 Weights52_g117900 = Terrain_Weights_046781_g117895;
				TEXTURE2D(Texture238_g117941) = _TerrainAlbedoTex1;
				float localFilterTexture19_g117998 = ( 0.0 );
				SamplerState SamplerDefault19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g117998 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g117998 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g117998 = SamplerDefault19_g117998;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g117998 = SamplerDefault19_g117998;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g117998 = SamplerPoint19_g117998;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g117998 = SamplerLow19_g117998;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g117998 = SamplerMedium19_g117998;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g117998 = SamplerHigh19_g117998;
				#endif
				SamplerState Sampler238_g117941 = SS19_g117998;
				float4 temp_output_37_0_g117941 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117941 = temp_output_37_0_g117941;
				float3 temp_output_279_0_g117941 = Input_Position9197_g117895;
				half3 WorldPosition238_g117941 = temp_output_279_0_g117941;
				half4 localSamplePlanar2D238_g117941 = SamplePlanar2D( Texture238_g117941 , Sampler238_g117941 , Coords238_g117941 , WorldPosition238_g117941 );
				TEXTURE2D(Texture246_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler246_g117941 = SS19_g117998;
				half4 Coords246_g117941 = temp_output_37_0_g117941;
				half3 WorldPosition246_g117941 = temp_output_279_0_g117941;
				float3 temp_output_280_0_g117941 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117941 = temp_output_280_0_g117941;
				half4 localSamplePlanar3D246_g117941 = SamplePlanar3D( Texture246_g117941 , Sampler246_g117941 , Coords246_g117941 , WorldPosition246_g117941 , WorldNormal246_g117941 );
				TEXTURE2D(Texture234_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler234_g117941 = SS19_g117998;
				float4 Coords234_g117941 = temp_output_37_0_g117941;
				float3 WorldPosition234_g117941 = temp_output_279_0_g117941;
				float4 localSampleStochastic2D234_g117941 = SampleStochastic2D( Texture234_g117941 , Sampler234_g117941 , Coords234_g117941 , WorldPosition234_g117941 );
				TEXTURE2D(Texture263_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler263_g117941 = SS19_g117998;
				half4 Coords263_g117941 = temp_output_37_0_g117941;
				half3 WorldPosition263_g117941 = temp_output_279_0_g117941;
				half3 WorldNormal263_g117941 = temp_output_280_0_g117941;
				half4 localSampleStochastic3D263_g117941 = SampleStochastic3D( Texture263_g117941 , Sampler263_g117941 , Coords263_g117941 , WorldPosition263_g117941 , WorldNormal263_g117941 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8614_g117895 = localSamplePlanar2D238_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8614_g117895 = localSamplePlanar3D246_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8614_g117895 = localSampleStochastic2D234_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8614_g117895 = localSampleStochastic3D263_g117941;
				#else
				float4 staticSwitch8614_g117895 = localSamplePlanar2D238_g117941;
				#endif
				half4 Layer133_g117900 = staticSwitch8614_g117895;
				TEXTURE2D(Texture238_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler238_g117942 = SS19_g117998;
				float4 temp_output_37_0_g117942 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117942 = temp_output_37_0_g117942;
				float3 temp_output_279_0_g117942 = Input_Position9197_g117895;
				half3 WorldPosition238_g117942 = temp_output_279_0_g117942;
				half4 localSamplePlanar2D238_g117942 = SamplePlanar2D( Texture238_g117942 , Sampler238_g117942 , Coords238_g117942 , WorldPosition238_g117942 );
				TEXTURE2D(Texture246_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler246_g117942 = SS19_g117998;
				half4 Coords246_g117942 = temp_output_37_0_g117942;
				half3 WorldPosition246_g117942 = temp_output_279_0_g117942;
				float3 temp_output_280_0_g117942 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117942 = temp_output_280_0_g117942;
				half4 localSamplePlanar3D246_g117942 = SamplePlanar3D( Texture246_g117942 , Sampler246_g117942 , Coords246_g117942 , WorldPosition246_g117942 , WorldNormal246_g117942 );
				TEXTURE2D(Texture234_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler234_g117942 = SS19_g117998;
				float4 Coords234_g117942 = temp_output_37_0_g117942;
				float3 WorldPosition234_g117942 = temp_output_279_0_g117942;
				float4 localSampleStochastic2D234_g117942 = SampleStochastic2D( Texture234_g117942 , Sampler234_g117942 , Coords234_g117942 , WorldPosition234_g117942 );
				TEXTURE2D(Texture263_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler263_g117942 = SS19_g117998;
				half4 Coords263_g117942 = temp_output_37_0_g117942;
				half3 WorldPosition263_g117942 = temp_output_279_0_g117942;
				half3 WorldNormal263_g117942 = temp_output_280_0_g117942;
				half4 localSampleStochastic3D263_g117942 = SampleStochastic3D( Texture263_g117942 , Sampler263_g117942 , Coords263_g117942 , WorldPosition263_g117942 , WorldNormal263_g117942 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8629_g117895 = localSamplePlanar2D238_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8629_g117895 = localSamplePlanar3D246_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8629_g117895 = localSampleStochastic2D234_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8629_g117895 = localSampleStochastic3D263_g117942;
				#else
				float4 staticSwitch8629_g117895 = localSamplePlanar2D238_g117942;
				#endif
				half4 Layer237_g117900 = staticSwitch8629_g117895;
				TEXTURE2D(Texture238_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler238_g117945 = SS19_g117998;
				float4 temp_output_37_0_g117945 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117945 = temp_output_37_0_g117945;
				float3 temp_output_279_0_g117945 = Input_Position9197_g117895;
				half3 WorldPosition238_g117945 = temp_output_279_0_g117945;
				half4 localSamplePlanar2D238_g117945 = SamplePlanar2D( Texture238_g117945 , Sampler238_g117945 , Coords238_g117945 , WorldPosition238_g117945 );
				TEXTURE2D(Texture246_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler246_g117945 = SS19_g117998;
				half4 Coords246_g117945 = temp_output_37_0_g117945;
				half3 WorldPosition246_g117945 = temp_output_279_0_g117945;
				float3 temp_output_280_0_g117945 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117945 = temp_output_280_0_g117945;
				half4 localSamplePlanar3D246_g117945 = SamplePlanar3D( Texture246_g117945 , Sampler246_g117945 , Coords246_g117945 , WorldPosition246_g117945 , WorldNormal246_g117945 );
				TEXTURE2D(Texture234_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler234_g117945 = SS19_g117998;
				float4 Coords234_g117945 = temp_output_37_0_g117945;
				float3 WorldPosition234_g117945 = temp_output_279_0_g117945;
				float4 localSampleStochastic2D234_g117945 = SampleStochastic2D( Texture234_g117945 , Sampler234_g117945 , Coords234_g117945 , WorldPosition234_g117945 );
				TEXTURE2D(Texture263_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler263_g117945 = SS19_g117998;
				half4 Coords263_g117945 = temp_output_37_0_g117945;
				half3 WorldPosition263_g117945 = temp_output_279_0_g117945;
				half3 WorldNormal263_g117945 = temp_output_280_0_g117945;
				half4 localSampleStochastic3D263_g117945 = SampleStochastic3D( Texture263_g117945 , Sampler263_g117945 , Coords263_g117945 , WorldPosition263_g117945 , WorldNormal263_g117945 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8630_g117895 = localSamplePlanar2D238_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8630_g117895 = localSamplePlanar3D246_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8630_g117895 = localSampleStochastic2D234_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8630_g117895 = localSampleStochastic3D263_g117945;
				#else
				float4 staticSwitch8630_g117895 = localSamplePlanar2D238_g117945;
				#endif
				half4 Layer338_g117900 = staticSwitch8630_g117895;
				TEXTURE2D(Texture238_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler238_g117947 = SS19_g117998;
				float4 temp_output_37_0_g117947 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117947 = temp_output_37_0_g117947;
				float3 temp_output_279_0_g117947 = Input_Position9197_g117895;
				half3 WorldPosition238_g117947 = temp_output_279_0_g117947;
				half4 localSamplePlanar2D238_g117947 = SamplePlanar2D( Texture238_g117947 , Sampler238_g117947 , Coords238_g117947 , WorldPosition238_g117947 );
				TEXTURE2D(Texture246_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler246_g117947 = SS19_g117998;
				half4 Coords246_g117947 = temp_output_37_0_g117947;
				half3 WorldPosition246_g117947 = temp_output_279_0_g117947;
				float3 temp_output_280_0_g117947 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117947 = temp_output_280_0_g117947;
				half4 localSamplePlanar3D246_g117947 = SamplePlanar3D( Texture246_g117947 , Sampler246_g117947 , Coords246_g117947 , WorldPosition246_g117947 , WorldNormal246_g117947 );
				TEXTURE2D(Texture234_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler234_g117947 = SS19_g117998;
				float4 Coords234_g117947 = temp_output_37_0_g117947;
				float3 WorldPosition234_g117947 = temp_output_279_0_g117947;
				float4 localSampleStochastic2D234_g117947 = SampleStochastic2D( Texture234_g117947 , Sampler234_g117947 , Coords234_g117947 , WorldPosition234_g117947 );
				TEXTURE2D(Texture263_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler263_g117947 = SS19_g117998;
				half4 Coords263_g117947 = temp_output_37_0_g117947;
				half3 WorldPosition263_g117947 = temp_output_279_0_g117947;
				half3 WorldNormal263_g117947 = temp_output_280_0_g117947;
				half4 localSampleStochastic3D263_g117947 = SampleStochastic3D( Texture263_g117947 , Sampler263_g117947 , Coords263_g117947 , WorldPosition263_g117947 , WorldNormal263_g117947 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8631_g117895 = localSamplePlanar2D238_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8631_g117895 = localSamplePlanar3D246_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8631_g117895 = localSampleStochastic2D234_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8631_g117895 = localSampleStochastic3D263_g117947;
				#else
				float4 staticSwitch8631_g117895 = localSamplePlanar2D238_g117947;
				#endif
				half4 Layer439_g117900 = staticSwitch8631_g117895;
				float4 weightedBlendVar31_g117900 = Weights52_g117900;
				float4 weightedBlend31_g117900 = ( weightedBlendVar31_g117900.x*Layer133_g117900 + weightedBlendVar31_g117900.y*Layer237_g117900 + weightedBlendVar31_g117900.z*Layer338_g117900 + weightedBlendVar31_g117900.w*Layer439_g117900 );
				half4 Terrain_AAAA_047200_g117895 = weightedBlend31_g117900;
				half4 Layer_045_g117903 = Terrain_AAAA_047200_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8793_g117895 = weights_087362_g117895;
				#else
				float4 staticSwitch8793_g117895 = control_087362_g117895;
				#endif
				half4 Terrain_Weights_087340_g117895 = staticSwitch8793_g117895;
				half4 Weights52_g117910 = Terrain_Weights_087340_g117895;
				TEXTURE2D(Texture238_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler238_g117951 = SS19_g117998;
				float4 temp_output_37_0_g117951 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117951 = temp_output_37_0_g117951;
				float3 temp_output_279_0_g117951 = Input_Position9197_g117895;
				half3 WorldPosition238_g117951 = temp_output_279_0_g117951;
				half4 localSamplePlanar2D238_g117951 = SamplePlanar2D( Texture238_g117951 , Sampler238_g117951 , Coords238_g117951 , WorldPosition238_g117951 );
				TEXTURE2D(Texture246_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler246_g117951 = SS19_g117998;
				half4 Coords246_g117951 = temp_output_37_0_g117951;
				half3 WorldPosition246_g117951 = temp_output_279_0_g117951;
				float3 temp_output_280_0_g117951 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117951 = temp_output_280_0_g117951;
				half4 localSamplePlanar3D246_g117951 = SamplePlanar3D( Texture246_g117951 , Sampler246_g117951 , Coords246_g117951 , WorldPosition246_g117951 , WorldNormal246_g117951 );
				TEXTURE2D(Texture234_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler234_g117951 = SS19_g117998;
				float4 Coords234_g117951 = temp_output_37_0_g117951;
				float3 WorldPosition234_g117951 = temp_output_279_0_g117951;
				float4 localSampleStochastic2D234_g117951 = SampleStochastic2D( Texture234_g117951 , Sampler234_g117951 , Coords234_g117951 , WorldPosition234_g117951 );
				TEXTURE2D(Texture263_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler263_g117951 = SS19_g117998;
				half4 Coords263_g117951 = temp_output_37_0_g117951;
				half3 WorldPosition263_g117951 = temp_output_279_0_g117951;
				half3 WorldNormal263_g117951 = temp_output_280_0_g117951;
				half4 localSampleStochastic3D263_g117951 = SampleStochastic3D( Texture263_g117951 , Sampler263_g117951 , Coords263_g117951 , WorldPosition263_g117951 , WorldNormal263_g117951 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8690_g117895 = localSamplePlanar2D238_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8690_g117895 = localSamplePlanar3D246_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8690_g117895 = localSampleStochastic2D234_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8690_g117895 = localSampleStochastic3D263_g117951;
				#else
				float4 staticSwitch8690_g117895 = localSamplePlanar2D238_g117951;
				#endif
				half4 Layer133_g117910 = staticSwitch8690_g117895;
				TEXTURE2D(Texture238_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler238_g117978 = SS19_g117998;
				float4 temp_output_37_0_g117978 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117978 = temp_output_37_0_g117978;
				float3 temp_output_279_0_g117978 = Input_Position9197_g117895;
				half3 WorldPosition238_g117978 = temp_output_279_0_g117978;
				half4 localSamplePlanar2D238_g117978 = SamplePlanar2D( Texture238_g117978 , Sampler238_g117978 , Coords238_g117978 , WorldPosition238_g117978 );
				TEXTURE2D(Texture246_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler246_g117978 = SS19_g117998;
				half4 Coords246_g117978 = temp_output_37_0_g117978;
				half3 WorldPosition246_g117978 = temp_output_279_0_g117978;
				float3 temp_output_280_0_g117978 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117978 = temp_output_280_0_g117978;
				half4 localSamplePlanar3D246_g117978 = SamplePlanar3D( Texture246_g117978 , Sampler246_g117978 , Coords246_g117978 , WorldPosition246_g117978 , WorldNormal246_g117978 );
				TEXTURE2D(Texture234_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler234_g117978 = SS19_g117998;
				float4 Coords234_g117978 = temp_output_37_0_g117978;
				float3 WorldPosition234_g117978 = temp_output_279_0_g117978;
				float4 localSampleStochastic2D234_g117978 = SampleStochastic2D( Texture234_g117978 , Sampler234_g117978 , Coords234_g117978 , WorldPosition234_g117978 );
				TEXTURE2D(Texture263_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler263_g117978 = SS19_g117998;
				half4 Coords263_g117978 = temp_output_37_0_g117978;
				half3 WorldPosition263_g117978 = temp_output_279_0_g117978;
				half3 WorldNormal263_g117978 = temp_output_280_0_g117978;
				half4 localSampleStochastic3D263_g117978 = SampleStochastic3D( Texture263_g117978 , Sampler263_g117978 , Coords263_g117978 , WorldPosition263_g117978 , WorldNormal263_g117978 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8691_g117895 = localSamplePlanar2D238_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8691_g117895 = localSamplePlanar3D246_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8691_g117895 = localSampleStochastic2D234_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8691_g117895 = localSampleStochastic3D263_g117978;
				#else
				float4 staticSwitch8691_g117895 = localSamplePlanar2D238_g117978;
				#endif
				half4 Layer237_g117910 = staticSwitch8691_g117895;
				TEXTURE2D(Texture238_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler238_g117979 = SS19_g117998;
				float4 temp_output_37_0_g117979 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117979 = temp_output_37_0_g117979;
				float3 temp_output_279_0_g117979 = Input_Position9197_g117895;
				half3 WorldPosition238_g117979 = temp_output_279_0_g117979;
				half4 localSamplePlanar2D238_g117979 = SamplePlanar2D( Texture238_g117979 , Sampler238_g117979 , Coords238_g117979 , WorldPosition238_g117979 );
				TEXTURE2D(Texture246_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler246_g117979 = SS19_g117998;
				half4 Coords246_g117979 = temp_output_37_0_g117979;
				half3 WorldPosition246_g117979 = temp_output_279_0_g117979;
				float3 temp_output_280_0_g117979 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117979 = temp_output_280_0_g117979;
				half4 localSamplePlanar3D246_g117979 = SamplePlanar3D( Texture246_g117979 , Sampler246_g117979 , Coords246_g117979 , WorldPosition246_g117979 , WorldNormal246_g117979 );
				TEXTURE2D(Texture234_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler234_g117979 = SS19_g117998;
				float4 Coords234_g117979 = temp_output_37_0_g117979;
				float3 WorldPosition234_g117979 = temp_output_279_0_g117979;
				float4 localSampleStochastic2D234_g117979 = SampleStochastic2D( Texture234_g117979 , Sampler234_g117979 , Coords234_g117979 , WorldPosition234_g117979 );
				TEXTURE2D(Texture263_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler263_g117979 = SS19_g117998;
				half4 Coords263_g117979 = temp_output_37_0_g117979;
				half3 WorldPosition263_g117979 = temp_output_279_0_g117979;
				half3 WorldNormal263_g117979 = temp_output_280_0_g117979;
				half4 localSampleStochastic3D263_g117979 = SampleStochastic3D( Texture263_g117979 , Sampler263_g117979 , Coords263_g117979 , WorldPosition263_g117979 , WorldNormal263_g117979 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8692_g117895 = localSamplePlanar2D238_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8692_g117895 = localSamplePlanar3D246_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8692_g117895 = localSampleStochastic2D234_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8692_g117895 = localSampleStochastic3D263_g117979;
				#else
				float4 staticSwitch8692_g117895 = localSamplePlanar2D238_g117979;
				#endif
				half4 Layer338_g117910 = staticSwitch8692_g117895;
				TEXTURE2D(Texture238_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler238_g117980 = SS19_g117998;
				float4 temp_output_37_0_g117980 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117980 = temp_output_37_0_g117980;
				float3 temp_output_279_0_g117980 = Input_Position9197_g117895;
				half3 WorldPosition238_g117980 = temp_output_279_0_g117980;
				half4 localSamplePlanar2D238_g117980 = SamplePlanar2D( Texture238_g117980 , Sampler238_g117980 , Coords238_g117980 , WorldPosition238_g117980 );
				TEXTURE2D(Texture246_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler246_g117980 = SS19_g117998;
				half4 Coords246_g117980 = temp_output_37_0_g117980;
				half3 WorldPosition246_g117980 = temp_output_279_0_g117980;
				float3 temp_output_280_0_g117980 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117980 = temp_output_280_0_g117980;
				half4 localSamplePlanar3D246_g117980 = SamplePlanar3D( Texture246_g117980 , Sampler246_g117980 , Coords246_g117980 , WorldPosition246_g117980 , WorldNormal246_g117980 );
				TEXTURE2D(Texture234_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler234_g117980 = SS19_g117998;
				float4 Coords234_g117980 = temp_output_37_0_g117980;
				float3 WorldPosition234_g117980 = temp_output_279_0_g117980;
				float4 localSampleStochastic2D234_g117980 = SampleStochastic2D( Texture234_g117980 , Sampler234_g117980 , Coords234_g117980 , WorldPosition234_g117980 );
				TEXTURE2D(Texture263_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler263_g117980 = SS19_g117998;
				half4 Coords263_g117980 = temp_output_37_0_g117980;
				half3 WorldPosition263_g117980 = temp_output_279_0_g117980;
				half3 WorldNormal263_g117980 = temp_output_280_0_g117980;
				half4 localSampleStochastic3D263_g117980 = SampleStochastic3D( Texture263_g117980 , Sampler263_g117980 , Coords263_g117980 , WorldPosition263_g117980 , WorldNormal263_g117980 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8693_g117895 = localSamplePlanar2D238_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8693_g117895 = localSamplePlanar3D246_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8693_g117895 = localSampleStochastic2D234_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8693_g117895 = localSampleStochastic3D263_g117980;
				#else
				float4 staticSwitch8693_g117895 = localSamplePlanar2D238_g117980;
				#endif
				half4 Layer439_g117910 = staticSwitch8693_g117895;
				float4 weightedBlendVar31_g117910 = Weights52_g117910;
				float4 weightedBlend31_g117910 = ( weightedBlendVar31_g117910.x*Layer133_g117910 + weightedBlendVar31_g117910.y*Layer237_g117910 + weightedBlendVar31_g117910.z*Layer338_g117910 + weightedBlendVar31_g117910.w*Layer439_g117910 );
				half4 Terrain_AAAA_088665_g117895 = weightedBlend31_g117910;
				half4 Layer_0810_g117903 = Terrain_AAAA_088665_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8794_g117895 = weights_127362_g117895;
				#else
				float4 staticSwitch8794_g117895 = control_127362_g117895;
				#endif
				half4 Terrain_Weights_127710_g117895 = staticSwitch8794_g117895;
				half4 Weights52_g117917 = Terrain_Weights_127710_g117895;
				TEXTURE2D(Texture238_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler238_g117954 = SS19_g117998;
				float4 temp_output_37_0_g117954 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117954 = temp_output_37_0_g117954;
				float3 temp_output_279_0_g117954 = Input_Position9197_g117895;
				half3 WorldPosition238_g117954 = temp_output_279_0_g117954;
				half4 localSamplePlanar2D238_g117954 = SamplePlanar2D( Texture238_g117954 , Sampler238_g117954 , Coords238_g117954 , WorldPosition238_g117954 );
				TEXTURE2D(Texture246_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler246_g117954 = SS19_g117998;
				half4 Coords246_g117954 = temp_output_37_0_g117954;
				half3 WorldPosition246_g117954 = temp_output_279_0_g117954;
				float3 temp_output_280_0_g117954 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117954 = temp_output_280_0_g117954;
				half4 localSamplePlanar3D246_g117954 = SamplePlanar3D( Texture246_g117954 , Sampler246_g117954 , Coords246_g117954 , WorldPosition246_g117954 , WorldNormal246_g117954 );
				TEXTURE2D(Texture234_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler234_g117954 = SS19_g117998;
				float4 Coords234_g117954 = temp_output_37_0_g117954;
				float3 WorldPosition234_g117954 = temp_output_279_0_g117954;
				float4 localSampleStochastic2D234_g117954 = SampleStochastic2D( Texture234_g117954 , Sampler234_g117954 , Coords234_g117954 , WorldPosition234_g117954 );
				TEXTURE2D(Texture263_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler263_g117954 = SS19_g117998;
				half4 Coords263_g117954 = temp_output_37_0_g117954;
				half3 WorldPosition263_g117954 = temp_output_279_0_g117954;
				half3 WorldNormal263_g117954 = temp_output_280_0_g117954;
				half4 localSampleStochastic3D263_g117954 = SampleStochastic3D( Texture263_g117954 , Sampler263_g117954 , Coords263_g117954 , WorldPosition263_g117954 , WorldNormal263_g117954 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8872_g117895 = localSamplePlanar2D238_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8872_g117895 = localSamplePlanar3D246_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8872_g117895 = localSampleStochastic2D234_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8872_g117895 = localSampleStochastic3D263_g117954;
				#else
				float4 staticSwitch8872_g117895 = localSamplePlanar2D238_g117954;
				#endif
				half4 Layer133_g117917 = staticSwitch8872_g117895;
				TEXTURE2D(Texture238_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler238_g117957 = SS19_g117998;
				float4 temp_output_37_0_g117957 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117957 = temp_output_37_0_g117957;
				float3 temp_output_279_0_g117957 = Input_Position9197_g117895;
				half3 WorldPosition238_g117957 = temp_output_279_0_g117957;
				half4 localSamplePlanar2D238_g117957 = SamplePlanar2D( Texture238_g117957 , Sampler238_g117957 , Coords238_g117957 , WorldPosition238_g117957 );
				TEXTURE2D(Texture246_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler246_g117957 = SS19_g117998;
				half4 Coords246_g117957 = temp_output_37_0_g117957;
				half3 WorldPosition246_g117957 = temp_output_279_0_g117957;
				float3 temp_output_280_0_g117957 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117957 = temp_output_280_0_g117957;
				half4 localSamplePlanar3D246_g117957 = SamplePlanar3D( Texture246_g117957 , Sampler246_g117957 , Coords246_g117957 , WorldPosition246_g117957 , WorldNormal246_g117957 );
				TEXTURE2D(Texture234_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler234_g117957 = SS19_g117998;
				float4 Coords234_g117957 = temp_output_37_0_g117957;
				float3 WorldPosition234_g117957 = temp_output_279_0_g117957;
				float4 localSampleStochastic2D234_g117957 = SampleStochastic2D( Texture234_g117957 , Sampler234_g117957 , Coords234_g117957 , WorldPosition234_g117957 );
				TEXTURE2D(Texture263_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler263_g117957 = SS19_g117998;
				half4 Coords263_g117957 = temp_output_37_0_g117957;
				half3 WorldPosition263_g117957 = temp_output_279_0_g117957;
				half3 WorldNormal263_g117957 = temp_output_280_0_g117957;
				half4 localSampleStochastic3D263_g117957 = SampleStochastic3D( Texture263_g117957 , Sampler263_g117957 , Coords263_g117957 , WorldPosition263_g117957 , WorldNormal263_g117957 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8873_g117895 = localSamplePlanar2D238_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8873_g117895 = localSamplePlanar3D246_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8873_g117895 = localSampleStochastic2D234_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8873_g117895 = localSampleStochastic3D263_g117957;
				#else
				float4 staticSwitch8873_g117895 = localSamplePlanar2D238_g117957;
				#endif
				half4 Layer237_g117917 = staticSwitch8873_g117895;
				TEXTURE2D(Texture238_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler238_g117958 = SS19_g117998;
				float4 temp_output_37_0_g117958 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117958 = temp_output_37_0_g117958;
				float3 temp_output_279_0_g117958 = Input_Position9197_g117895;
				half3 WorldPosition238_g117958 = temp_output_279_0_g117958;
				half4 localSamplePlanar2D238_g117958 = SamplePlanar2D( Texture238_g117958 , Sampler238_g117958 , Coords238_g117958 , WorldPosition238_g117958 );
				TEXTURE2D(Texture246_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler246_g117958 = SS19_g117998;
				half4 Coords246_g117958 = temp_output_37_0_g117958;
				half3 WorldPosition246_g117958 = temp_output_279_0_g117958;
				float3 temp_output_280_0_g117958 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117958 = temp_output_280_0_g117958;
				half4 localSamplePlanar3D246_g117958 = SamplePlanar3D( Texture246_g117958 , Sampler246_g117958 , Coords246_g117958 , WorldPosition246_g117958 , WorldNormal246_g117958 );
				TEXTURE2D(Texture234_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler234_g117958 = SS19_g117998;
				float4 Coords234_g117958 = temp_output_37_0_g117958;
				float3 WorldPosition234_g117958 = temp_output_279_0_g117958;
				float4 localSampleStochastic2D234_g117958 = SampleStochastic2D( Texture234_g117958 , Sampler234_g117958 , Coords234_g117958 , WorldPosition234_g117958 );
				TEXTURE2D(Texture263_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler263_g117958 = SS19_g117998;
				half4 Coords263_g117958 = temp_output_37_0_g117958;
				half3 WorldPosition263_g117958 = temp_output_279_0_g117958;
				half3 WorldNormal263_g117958 = temp_output_280_0_g117958;
				half4 localSampleStochastic3D263_g117958 = SampleStochastic3D( Texture263_g117958 , Sampler263_g117958 , Coords263_g117958 , WorldPosition263_g117958 , WorldNormal263_g117958 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8874_g117895 = localSamplePlanar2D238_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8874_g117895 = localSamplePlanar3D246_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8874_g117895 = localSampleStochastic2D234_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8874_g117895 = localSampleStochastic3D263_g117958;
				#else
				float4 staticSwitch8874_g117895 = localSamplePlanar2D238_g117958;
				#endif
				half4 Layer338_g117917 = staticSwitch8874_g117895;
				TEXTURE2D(Texture238_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler238_g117959 = SS19_g117998;
				float4 temp_output_37_0_g117959 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117959 = temp_output_37_0_g117959;
				float3 temp_output_279_0_g117959 = Input_Position9197_g117895;
				half3 WorldPosition238_g117959 = temp_output_279_0_g117959;
				half4 localSamplePlanar2D238_g117959 = SamplePlanar2D( Texture238_g117959 , Sampler238_g117959 , Coords238_g117959 , WorldPosition238_g117959 );
				TEXTURE2D(Texture246_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler246_g117959 = SS19_g117998;
				half4 Coords246_g117959 = temp_output_37_0_g117959;
				half3 WorldPosition246_g117959 = temp_output_279_0_g117959;
				float3 temp_output_280_0_g117959 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117959 = temp_output_280_0_g117959;
				half4 localSamplePlanar3D246_g117959 = SamplePlanar3D( Texture246_g117959 , Sampler246_g117959 , Coords246_g117959 , WorldPosition246_g117959 , WorldNormal246_g117959 );
				TEXTURE2D(Texture234_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler234_g117959 = SS19_g117998;
				float4 Coords234_g117959 = temp_output_37_0_g117959;
				float3 WorldPosition234_g117959 = temp_output_279_0_g117959;
				float4 localSampleStochastic2D234_g117959 = SampleStochastic2D( Texture234_g117959 , Sampler234_g117959 , Coords234_g117959 , WorldPosition234_g117959 );
				TEXTURE2D(Texture263_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler263_g117959 = SS19_g117998;
				half4 Coords263_g117959 = temp_output_37_0_g117959;
				half3 WorldPosition263_g117959 = temp_output_279_0_g117959;
				half3 WorldNormal263_g117959 = temp_output_280_0_g117959;
				half4 localSampleStochastic3D263_g117959 = SampleStochastic3D( Texture263_g117959 , Sampler263_g117959 , Coords263_g117959 , WorldPosition263_g117959 , WorldNormal263_g117959 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8875_g117895 = localSamplePlanar2D238_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8875_g117895 = localSamplePlanar3D246_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8875_g117895 = localSampleStochastic2D234_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8875_g117895 = localSampleStochastic3D263_g117959;
				#else
				float4 staticSwitch8875_g117895 = localSamplePlanar2D238_g117959;
				#endif
				half4 Layer439_g117917 = staticSwitch8875_g117895;
				float4 weightedBlendVar31_g117917 = Weights52_g117917;
				float4 weightedBlend31_g117917 = ( weightedBlendVar31_g117917.x*Layer133_g117917 + weightedBlendVar31_g117917.y*Layer237_g117917 + weightedBlendVar31_g117917.z*Layer338_g117917 + weightedBlendVar31_g117917.w*Layer439_g117917 );
				half4 Terrain_AAAA_128851_g117895 = weightedBlend31_g117917;
				half4 Layer_1243_g117903 = Terrain_AAAA_128851_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8795_g117895 = weights_167362_g117895;
				#else
				float4 staticSwitch8795_g117895 = control_167362_g117895;
				#endif
				half4 Terrain_Weights_167709_g117895 = staticSwitch8795_g117895;
				half4 Weights52_g117924 = Terrain_Weights_167709_g117895;
				TEXTURE2D(Texture238_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler238_g117963 = SS19_g117998;
				float4 temp_output_37_0_g117963 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117963 = temp_output_37_0_g117963;
				float3 temp_output_279_0_g117963 = Input_Position9197_g117895;
				half3 WorldPosition238_g117963 = temp_output_279_0_g117963;
				half4 localSamplePlanar2D238_g117963 = SamplePlanar2D( Texture238_g117963 , Sampler238_g117963 , Coords238_g117963 , WorldPosition238_g117963 );
				TEXTURE2D(Texture246_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler246_g117963 = SS19_g117998;
				half4 Coords246_g117963 = temp_output_37_0_g117963;
				half3 WorldPosition246_g117963 = temp_output_279_0_g117963;
				float3 temp_output_280_0_g117963 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117963 = temp_output_280_0_g117963;
				half4 localSamplePlanar3D246_g117963 = SamplePlanar3D( Texture246_g117963 , Sampler246_g117963 , Coords246_g117963 , WorldPosition246_g117963 , WorldNormal246_g117963 );
				TEXTURE2D(Texture234_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler234_g117963 = SS19_g117998;
				float4 Coords234_g117963 = temp_output_37_0_g117963;
				float3 WorldPosition234_g117963 = temp_output_279_0_g117963;
				float4 localSampleStochastic2D234_g117963 = SampleStochastic2D( Texture234_g117963 , Sampler234_g117963 , Coords234_g117963 , WorldPosition234_g117963 );
				TEXTURE2D(Texture263_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler263_g117963 = SS19_g117998;
				half4 Coords263_g117963 = temp_output_37_0_g117963;
				half3 WorldPosition263_g117963 = temp_output_279_0_g117963;
				half3 WorldNormal263_g117963 = temp_output_280_0_g117963;
				half4 localSampleStochastic3D263_g117963 = SampleStochastic3D( Texture263_g117963 , Sampler263_g117963 , Coords263_g117963 , WorldPosition263_g117963 , WorldNormal263_g117963 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8972_g117895 = localSamplePlanar2D238_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8972_g117895 = localSamplePlanar3D246_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8972_g117895 = localSampleStochastic2D234_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8972_g117895 = localSampleStochastic3D263_g117963;
				#else
				float4 staticSwitch8972_g117895 = localSamplePlanar2D238_g117963;
				#endif
				half4 Layer133_g117924 = staticSwitch8972_g117895;
				TEXTURE2D(Texture238_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler238_g117969 = SS19_g117998;
				float4 temp_output_37_0_g117969 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117969 = temp_output_37_0_g117969;
				float3 temp_output_279_0_g117969 = Input_Position9197_g117895;
				half3 WorldPosition238_g117969 = temp_output_279_0_g117969;
				half4 localSamplePlanar2D238_g117969 = SamplePlanar2D( Texture238_g117969 , Sampler238_g117969 , Coords238_g117969 , WorldPosition238_g117969 );
				TEXTURE2D(Texture246_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler246_g117969 = SS19_g117998;
				half4 Coords246_g117969 = temp_output_37_0_g117969;
				half3 WorldPosition246_g117969 = temp_output_279_0_g117969;
				float3 temp_output_280_0_g117969 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117969 = temp_output_280_0_g117969;
				half4 localSamplePlanar3D246_g117969 = SamplePlanar3D( Texture246_g117969 , Sampler246_g117969 , Coords246_g117969 , WorldPosition246_g117969 , WorldNormal246_g117969 );
				TEXTURE2D(Texture234_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler234_g117969 = SS19_g117998;
				float4 Coords234_g117969 = temp_output_37_0_g117969;
				float3 WorldPosition234_g117969 = temp_output_279_0_g117969;
				float4 localSampleStochastic2D234_g117969 = SampleStochastic2D( Texture234_g117969 , Sampler234_g117969 , Coords234_g117969 , WorldPosition234_g117969 );
				TEXTURE2D(Texture263_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler263_g117969 = SS19_g117998;
				half4 Coords263_g117969 = temp_output_37_0_g117969;
				half3 WorldPosition263_g117969 = temp_output_279_0_g117969;
				half3 WorldNormal263_g117969 = temp_output_280_0_g117969;
				half4 localSampleStochastic3D263_g117969 = SampleStochastic3D( Texture263_g117969 , Sampler263_g117969 , Coords263_g117969 , WorldPosition263_g117969 , WorldNormal263_g117969 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8973_g117895 = localSamplePlanar2D238_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8973_g117895 = localSamplePlanar3D246_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8973_g117895 = localSampleStochastic2D234_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8973_g117895 = localSampleStochastic3D263_g117969;
				#else
				float4 staticSwitch8973_g117895 = localSamplePlanar2D238_g117969;
				#endif
				half4 Layer237_g117924 = staticSwitch8973_g117895;
				TEXTURE2D(Texture238_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler238_g117970 = SS19_g117998;
				float4 temp_output_37_0_g117970 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117970 = temp_output_37_0_g117970;
				float3 temp_output_279_0_g117970 = Input_Position9197_g117895;
				half3 WorldPosition238_g117970 = temp_output_279_0_g117970;
				half4 localSamplePlanar2D238_g117970 = SamplePlanar2D( Texture238_g117970 , Sampler238_g117970 , Coords238_g117970 , WorldPosition238_g117970 );
				TEXTURE2D(Texture246_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler246_g117970 = SS19_g117998;
				half4 Coords246_g117970 = temp_output_37_0_g117970;
				half3 WorldPosition246_g117970 = temp_output_279_0_g117970;
				float3 temp_output_280_0_g117970 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117970 = temp_output_280_0_g117970;
				half4 localSamplePlanar3D246_g117970 = SamplePlanar3D( Texture246_g117970 , Sampler246_g117970 , Coords246_g117970 , WorldPosition246_g117970 , WorldNormal246_g117970 );
				TEXTURE2D(Texture234_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler234_g117970 = SS19_g117998;
				float4 Coords234_g117970 = temp_output_37_0_g117970;
				float3 WorldPosition234_g117970 = temp_output_279_0_g117970;
				float4 localSampleStochastic2D234_g117970 = SampleStochastic2D( Texture234_g117970 , Sampler234_g117970 , Coords234_g117970 , WorldPosition234_g117970 );
				TEXTURE2D(Texture263_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler263_g117970 = SS19_g117998;
				half4 Coords263_g117970 = temp_output_37_0_g117970;
				half3 WorldPosition263_g117970 = temp_output_279_0_g117970;
				half3 WorldNormal263_g117970 = temp_output_280_0_g117970;
				half4 localSampleStochastic3D263_g117970 = SampleStochastic3D( Texture263_g117970 , Sampler263_g117970 , Coords263_g117970 , WorldPosition263_g117970 , WorldNormal263_g117970 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8974_g117895 = localSamplePlanar2D238_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8974_g117895 = localSamplePlanar3D246_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8974_g117895 = localSampleStochastic2D234_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8974_g117895 = localSampleStochastic3D263_g117970;
				#else
				float4 staticSwitch8974_g117895 = localSamplePlanar2D238_g117970;
				#endif
				half4 Layer338_g117924 = staticSwitch8974_g117895;
				TEXTURE2D(Texture238_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler238_g117971 = SS19_g117998;
				float4 temp_output_37_0_g117971 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117971 = temp_output_37_0_g117971;
				float3 temp_output_279_0_g117971 = Input_Position9197_g117895;
				half3 WorldPosition238_g117971 = temp_output_279_0_g117971;
				half4 localSamplePlanar2D238_g117971 = SamplePlanar2D( Texture238_g117971 , Sampler238_g117971 , Coords238_g117971 , WorldPosition238_g117971 );
				TEXTURE2D(Texture246_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler246_g117971 = SS19_g117998;
				half4 Coords246_g117971 = temp_output_37_0_g117971;
				half3 WorldPosition246_g117971 = temp_output_279_0_g117971;
				float3 temp_output_280_0_g117971 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117971 = temp_output_280_0_g117971;
				half4 localSamplePlanar3D246_g117971 = SamplePlanar3D( Texture246_g117971 , Sampler246_g117971 , Coords246_g117971 , WorldPosition246_g117971 , WorldNormal246_g117971 );
				TEXTURE2D(Texture234_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler234_g117971 = SS19_g117998;
				float4 Coords234_g117971 = temp_output_37_0_g117971;
				float3 WorldPosition234_g117971 = temp_output_279_0_g117971;
				float4 localSampleStochastic2D234_g117971 = SampleStochastic2D( Texture234_g117971 , Sampler234_g117971 , Coords234_g117971 , WorldPosition234_g117971 );
				TEXTURE2D(Texture263_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler263_g117971 = SS19_g117998;
				half4 Coords263_g117971 = temp_output_37_0_g117971;
				half3 WorldPosition263_g117971 = temp_output_279_0_g117971;
				half3 WorldNormal263_g117971 = temp_output_280_0_g117971;
				half4 localSampleStochastic3D263_g117971 = SampleStochastic3D( Texture263_g117971 , Sampler263_g117971 , Coords263_g117971 , WorldPosition263_g117971 , WorldNormal263_g117971 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8975_g117895 = localSamplePlanar2D238_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8975_g117895 = localSamplePlanar3D246_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8975_g117895 = localSampleStochastic2D234_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8975_g117895 = localSampleStochastic3D263_g117971;
				#else
				float4 staticSwitch8975_g117895 = localSamplePlanar2D238_g117971;
				#endif
				half4 Layer439_g117924 = staticSwitch8975_g117895;
				float4 weightedBlendVar31_g117924 = Weights52_g117924;
				float4 weightedBlend31_g117924 = ( weightedBlendVar31_g117924.x*Layer133_g117924 + weightedBlendVar31_g117924.y*Layer237_g117924 + weightedBlendVar31_g117924.z*Layer338_g117924 + weightedBlendVar31_g117924.w*Layer439_g117924 );
				half4 Terrain_AAAA_168986_g117895 = weightedBlend31_g117924;
				half4 Layer_1644_g117903 = Terrain_AAAA_168986_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117903 = Layer_045_g117903;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 + Layer_1243_g117903 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 + Layer_1243_g117903 + Layer_1644_g117903 );
				#else
				float4 staticSwitch40_g117903 = Layer_045_g117903;
				#endif
				half4 Blend_Albedo7468_g117895 = staticSwitch40_g117903;
				half4 Weights52_g117989 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117989 = _TerrainColor1;
				half4 Layer237_g117989 = _TerrainColor2;
				half4 Layer338_g117989 = _TerrainColor3;
				half4 Layer439_g117989 = _TerrainColor4;
				float4 weightedBlendVar31_g117989 = Weights52_g117989;
				float4 weightedBlend31_g117989 = ( weightedBlendVar31_g117989.x*Layer133_g117989 + weightedBlendVar31_g117989.y*Layer237_g117989 + weightedBlendVar31_g117989.z*Layer338_g117989 + weightedBlendVar31_g117989.w*Layer439_g117989 );
				half4 Terrain_Color_049349_g117895 = weightedBlend31_g117989;
				half4 Layer_045_g117994 = Terrain_Color_049349_g117895;
				half4 Weights52_g117990 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117990 = _TerrainColor5;
				half4 Layer237_g117990 = _TerrainColor6;
				half4 Layer338_g117990 = _TerrainColor7;
				half4 Layer439_g117990 = _TerrainColor8;
				float4 weightedBlendVar31_g117990 = Weights52_g117990;
				float4 weightedBlend31_g117990 = ( weightedBlendVar31_g117990.x*Layer133_g117990 + weightedBlendVar31_g117990.y*Layer237_g117990 + weightedBlendVar31_g117990.z*Layer338_g117990 + weightedBlendVar31_g117990.w*Layer439_g117990 );
				half4 Terrain_Color_089361_g117895 = weightedBlend31_g117990;
				half4 Layer_0810_g117994 = Terrain_Color_089361_g117895;
				half4 Weights52_g117991 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117991 = _TerrainColor9;
				half4 Layer237_g117991 = _TerrainColor10;
				half4 Layer338_g117991 = _TerrainColor11;
				half4 Layer439_g117991 = _TerrainColor12;
				float4 weightedBlendVar31_g117991 = Weights52_g117991;
				float4 weightedBlend31_g117991 = ( weightedBlendVar31_g117991.x*Layer133_g117991 + weightedBlendVar31_g117991.y*Layer237_g117991 + weightedBlendVar31_g117991.z*Layer338_g117991 + weightedBlendVar31_g117991.w*Layer439_g117991 );
				half4 Terrain_Color_129373_g117895 = weightedBlend31_g117991;
				half4 Layer_1243_g117994 = Terrain_Color_129373_g117895;
				half4 Weights52_g117992 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117992 = _TerrainColor13;
				half4 Layer237_g117992 = _TerrainColor14;
				half4 Layer338_g117992 = _TerrainColor15;
				half4 Layer439_g117992 = _TerrainColor16;
				float4 weightedBlendVar31_g117992 = Weights52_g117992;
				float4 weightedBlend31_g117992 = ( weightedBlendVar31_g117992.x*Layer133_g117992 + weightedBlendVar31_g117992.y*Layer237_g117992 + weightedBlendVar31_g117992.z*Layer338_g117992 + weightedBlendVar31_g117992.w*Layer439_g117992 );
				half4 Terrain_Color_169381_g117895 = weightedBlend31_g117992;
				half4 Layer_1644_g117994 = Terrain_Color_169381_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117994 = Layer_045_g117994;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 + Layer_1243_g117994 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 + Layer_1243_g117994 + Layer_1644_g117994 );
				#else
				float4 staticSwitch40_g117994 = Layer_045_g117994;
				#endif
				half4 Blend_TerrainColor9387_g117895 = staticSwitch40_g117994;
				half3 Final_Albedo9144_g117895 = ( (Blend_Albedo7468_g117895).xyz * (Blend_TerrainColor9387_g117895).rgb * (_TerrainColor).rgb );
				half3 Local_Albedo9199_g117893 = Final_Albedo9144_g117895;
				float3 In_Albedo3_g117894 = Local_Albedo9199_g117893;
				float3 In_AlbedoRaw3_g117894 = Local_Albedo9199_g117893;
				float3 ase_worldTangent = packedInput.ase_texcoord2.xyz;
				float3 ase_worldBitangent = packedInput.ase_texcoord3.xyz;
				float3x3 ase_worldToTangent = float3x3(ase_worldTangent,ase_worldBitangent,ase_worldNormal);
				half4 Weights52_g117896 = Terrain_Weights_046781_g117895;
				TEXTURE2D(Texture238_g117987) = _TerrainNormalTex1;
				float localFilterTexture29_g118002 = ( 0.0 );
				SamplerState SamplerDefault29_g118002 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g118002 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g118002 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g118002 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g118002 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g118002 = SamplerDefault29_g118002;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g118002 = SamplerDefault29_g118002;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g118002 = SamplerPoint29_g118002;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g118002 = SamplerLow29_g118002;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g118002 = SamplerMedium29_g118002;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g118002 = SamplerHigh29_g118002;
				#endif
				SamplerState Sampler238_g117987 = SS29_g118002;
				float4 temp_output_37_0_g117987 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117987 = temp_output_37_0_g117987;
				float3 temp_output_279_0_g117987 = Input_Position9197_g117895;
				half3 WorldPosition238_g117987 = temp_output_279_0_g117987;
				half4 localSamplePlanar2D238_g117987 = SamplePlanar2D( Texture238_g117987 , Sampler238_g117987 , Coords238_g117987 , WorldPosition238_g117987 );
				TEXTURE2D(Texture246_g117987) = _TerrainNormalTex1;
				SamplerState Sampler246_g117987 = SS29_g118002;
				half4 Coords246_g117987 = temp_output_37_0_g117987;
				half3 WorldPosition246_g117987 = temp_output_279_0_g117987;
				float3 temp_output_280_0_g117987 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117987 = temp_output_280_0_g117987;
				half4 localSamplePlanar3D246_g117987 = SamplePlanar3D( Texture246_g117987 , Sampler246_g117987 , Coords246_g117987 , WorldPosition246_g117987 , WorldNormal246_g117987 );
				TEXTURE2D(Texture234_g117987) = _TerrainNormalTex1;
				SamplerState Sampler234_g117987 = SS29_g118002;
				float4 Coords234_g117987 = temp_output_37_0_g117987;
				float3 WorldPosition234_g117987 = temp_output_279_0_g117987;
				float4 localSampleStochastic2D234_g117987 = SampleStochastic2D( Texture234_g117987 , Sampler234_g117987 , Coords234_g117987 , WorldPosition234_g117987 );
				TEXTURE2D(Texture263_g117987) = _TerrainNormalTex1;
				SamplerState Sampler263_g117987 = SS29_g118002;
				half4 Coords263_g117987 = temp_output_37_0_g117987;
				half3 WorldPosition263_g117987 = temp_output_279_0_g117987;
				half3 WorldNormal263_g117987 = temp_output_280_0_g117987;
				half4 localSampleStochastic3D263_g117987 = SampleStochastic3D( Texture263_g117987 , Sampler263_g117987 , Coords263_g117987 , WorldPosition263_g117987 , WorldNormal263_g117987 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8635_g117895 = localSamplePlanar2D238_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8635_g117895 = localSamplePlanar3D246_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8635_g117895 = localSampleStochastic2D234_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8635_g117895 = localSampleStochastic3D263_g117987;
				#else
				float4 staticSwitch8635_g117895 = localSamplePlanar2D238_g117987;
				#endif
				half4 Layer133_g117896 = staticSwitch8635_g117895;
				TEXTURE2D(Texture238_g117943) = _TerrainNormalTex2;
				SamplerState Sampler238_g117943 = SS29_g118002;
				float4 temp_output_37_0_g117943 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117943 = temp_output_37_0_g117943;
				float3 temp_output_279_0_g117943 = Input_Position9197_g117895;
				half3 WorldPosition238_g117943 = temp_output_279_0_g117943;
				half4 localSamplePlanar2D238_g117943 = SamplePlanar2D( Texture238_g117943 , Sampler238_g117943 , Coords238_g117943 , WorldPosition238_g117943 );
				TEXTURE2D(Texture246_g117943) = _TerrainNormalTex2;
				SamplerState Sampler246_g117943 = SS29_g118002;
				half4 Coords246_g117943 = temp_output_37_0_g117943;
				half3 WorldPosition246_g117943 = temp_output_279_0_g117943;
				float3 temp_output_280_0_g117943 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117943 = temp_output_280_0_g117943;
				half4 localSamplePlanar3D246_g117943 = SamplePlanar3D( Texture246_g117943 , Sampler246_g117943 , Coords246_g117943 , WorldPosition246_g117943 , WorldNormal246_g117943 );
				TEXTURE2D(Texture234_g117943) = _TerrainNormalTex2;
				SamplerState Sampler234_g117943 = SS29_g118002;
				float4 Coords234_g117943 = temp_output_37_0_g117943;
				float3 WorldPosition234_g117943 = temp_output_279_0_g117943;
				float4 localSampleStochastic2D234_g117943 = SampleStochastic2D( Texture234_g117943 , Sampler234_g117943 , Coords234_g117943 , WorldPosition234_g117943 );
				TEXTURE2D(Texture263_g117943) = _TerrainNormalTex2;
				SamplerState Sampler263_g117943 = SS29_g118002;
				half4 Coords263_g117943 = temp_output_37_0_g117943;
				half3 WorldPosition263_g117943 = temp_output_279_0_g117943;
				half3 WorldNormal263_g117943 = temp_output_280_0_g117943;
				half4 localSampleStochastic3D263_g117943 = SampleStochastic3D( Texture263_g117943 , Sampler263_g117943 , Coords263_g117943 , WorldPosition263_g117943 , WorldNormal263_g117943 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8636_g117895 = localSamplePlanar2D238_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8636_g117895 = localSamplePlanar3D246_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8636_g117895 = localSampleStochastic2D234_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8636_g117895 = localSampleStochastic3D263_g117943;
				#else
				float4 staticSwitch8636_g117895 = localSamplePlanar2D238_g117943;
				#endif
				half4 Layer237_g117896 = staticSwitch8636_g117895;
				TEXTURE2D(Texture238_g117946) = _TerrainNormalTex3;
				SamplerState Sampler238_g117946 = SS29_g118002;
				float4 temp_output_37_0_g117946 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117946 = temp_output_37_0_g117946;
				float3 temp_output_279_0_g117946 = Input_Position9197_g117895;
				half3 WorldPosition238_g117946 = temp_output_279_0_g117946;
				half4 localSamplePlanar2D238_g117946 = SamplePlanar2D( Texture238_g117946 , Sampler238_g117946 , Coords238_g117946 , WorldPosition238_g117946 );
				TEXTURE2D(Texture246_g117946) = _TerrainNormalTex3;
				SamplerState Sampler246_g117946 = SS29_g118002;
				half4 Coords246_g117946 = temp_output_37_0_g117946;
				half3 WorldPosition246_g117946 = temp_output_279_0_g117946;
				float3 temp_output_280_0_g117946 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117946 = temp_output_280_0_g117946;
				half4 localSamplePlanar3D246_g117946 = SamplePlanar3D( Texture246_g117946 , Sampler246_g117946 , Coords246_g117946 , WorldPosition246_g117946 , WorldNormal246_g117946 );
				TEXTURE2D(Texture234_g117946) = _TerrainNormalTex3;
				SamplerState Sampler234_g117946 = SS29_g118002;
				float4 Coords234_g117946 = temp_output_37_0_g117946;
				float3 WorldPosition234_g117946 = temp_output_279_0_g117946;
				float4 localSampleStochastic2D234_g117946 = SampleStochastic2D( Texture234_g117946 , Sampler234_g117946 , Coords234_g117946 , WorldPosition234_g117946 );
				TEXTURE2D(Texture263_g117946) = _TerrainNormalTex3;
				SamplerState Sampler263_g117946 = SS29_g118002;
				half4 Coords263_g117946 = temp_output_37_0_g117946;
				half3 WorldPosition263_g117946 = temp_output_279_0_g117946;
				half3 WorldNormal263_g117946 = temp_output_280_0_g117946;
				half4 localSampleStochastic3D263_g117946 = SampleStochastic3D( Texture263_g117946 , Sampler263_g117946 , Coords263_g117946 , WorldPosition263_g117946 , WorldNormal263_g117946 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8637_g117895 = localSamplePlanar2D238_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8637_g117895 = localSamplePlanar3D246_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8637_g117895 = localSampleStochastic2D234_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8637_g117895 = localSampleStochastic3D263_g117946;
				#else
				float4 staticSwitch8637_g117895 = localSamplePlanar2D238_g117946;
				#endif
				half4 Layer338_g117896 = staticSwitch8637_g117895;
				TEXTURE2D(Texture238_g117948) = _TerrainNormalTex4;
				SamplerState Sampler238_g117948 = SS29_g118002;
				float4 temp_output_37_0_g117948 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117948 = temp_output_37_0_g117948;
				float3 temp_output_279_0_g117948 = Input_Position9197_g117895;
				half3 WorldPosition238_g117948 = temp_output_279_0_g117948;
				half4 localSamplePlanar2D238_g117948 = SamplePlanar2D( Texture238_g117948 , Sampler238_g117948 , Coords238_g117948 , WorldPosition238_g117948 );
				TEXTURE2D(Texture246_g117948) = _TerrainNormalTex4;
				SamplerState Sampler246_g117948 = SS29_g118002;
				half4 Coords246_g117948 = temp_output_37_0_g117948;
				half3 WorldPosition246_g117948 = temp_output_279_0_g117948;
				float3 temp_output_280_0_g117948 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117948 = temp_output_280_0_g117948;
				half4 localSamplePlanar3D246_g117948 = SamplePlanar3D( Texture246_g117948 , Sampler246_g117948 , Coords246_g117948 , WorldPosition246_g117948 , WorldNormal246_g117948 );
				TEXTURE2D(Texture234_g117948) = _TerrainNormalTex4;
				SamplerState Sampler234_g117948 = SS29_g118002;
				float4 Coords234_g117948 = temp_output_37_0_g117948;
				float3 WorldPosition234_g117948 = temp_output_279_0_g117948;
				float4 localSampleStochastic2D234_g117948 = SampleStochastic2D( Texture234_g117948 , Sampler234_g117948 , Coords234_g117948 , WorldPosition234_g117948 );
				TEXTURE2D(Texture263_g117948) = _TerrainNormalTex4;
				SamplerState Sampler263_g117948 = SS29_g118002;
				half4 Coords263_g117948 = temp_output_37_0_g117948;
				half3 WorldPosition263_g117948 = temp_output_279_0_g117948;
				half3 WorldNormal263_g117948 = temp_output_280_0_g117948;
				half4 localSampleStochastic3D263_g117948 = SampleStochastic3D( Texture263_g117948 , Sampler263_g117948 , Coords263_g117948 , WorldPosition263_g117948 , WorldNormal263_g117948 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8638_g117895 = localSamplePlanar2D238_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8638_g117895 = localSamplePlanar3D246_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8638_g117895 = localSampleStochastic2D234_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8638_g117895 = localSampleStochastic3D263_g117948;
				#else
				float4 staticSwitch8638_g117895 = localSamplePlanar2D238_g117948;
				#endif
				half4 Layer439_g117896 = staticSwitch8638_g117895;
				float4 weightedBlendVar31_g117896 = Weights52_g117896;
				float4 weightedBlend31_g117896 = ( weightedBlendVar31_g117896.x*Layer133_g117896 + weightedBlendVar31_g117896.y*Layer237_g117896 + weightedBlendVar31_g117896.z*Layer338_g117896 + weightedBlendVar31_g117896.w*Layer439_g117896 );
				half4 Terrain_B_047202_g117895 = weightedBlend31_g117896;
				half4 Layer_045_g117902 = Terrain_B_047202_g117895;
				half4 Weights52_g117911 = Terrain_Weights_087340_g117895;
				TEXTURE2D(Texture238_g117952) = _TerrainNormalTex5;
				SamplerState Sampler238_g117952 = SS29_g118002;
				float4 temp_output_37_0_g117952 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117952 = temp_output_37_0_g117952;
				float3 temp_output_279_0_g117952 = Input_Position9197_g117895;
				half3 WorldPosition238_g117952 = temp_output_279_0_g117952;
				half4 localSamplePlanar2D238_g117952 = SamplePlanar2D( Texture238_g117952 , Sampler238_g117952 , Coords238_g117952 , WorldPosition238_g117952 );
				TEXTURE2D(Texture246_g117952) = _TerrainNormalTex5;
				SamplerState Sampler246_g117952 = SS29_g118002;
				half4 Coords246_g117952 = temp_output_37_0_g117952;
				half3 WorldPosition246_g117952 = temp_output_279_0_g117952;
				float3 temp_output_280_0_g117952 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117952 = temp_output_280_0_g117952;
				half4 localSamplePlanar3D246_g117952 = SamplePlanar3D( Texture246_g117952 , Sampler246_g117952 , Coords246_g117952 , WorldPosition246_g117952 , WorldNormal246_g117952 );
				TEXTURE2D(Texture234_g117952) = _TerrainNormalTex5;
				SamplerState Sampler234_g117952 = SS29_g118002;
				float4 Coords234_g117952 = temp_output_37_0_g117952;
				float3 WorldPosition234_g117952 = temp_output_279_0_g117952;
				float4 localSampleStochastic2D234_g117952 = SampleStochastic2D( Texture234_g117952 , Sampler234_g117952 , Coords234_g117952 , WorldPosition234_g117952 );
				TEXTURE2D(Texture263_g117952) = _TerrainNormalTex5;
				SamplerState Sampler263_g117952 = SS29_g118002;
				half4 Coords263_g117952 = temp_output_37_0_g117952;
				half3 WorldPosition263_g117952 = temp_output_279_0_g117952;
				half3 WorldNormal263_g117952 = temp_output_280_0_g117952;
				half4 localSampleStochastic3D263_g117952 = SampleStochastic3D( Texture263_g117952 , Sampler263_g117952 , Coords263_g117952 , WorldPosition263_g117952 , WorldNormal263_g117952 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8686_g117895 = localSamplePlanar2D238_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8686_g117895 = localSamplePlanar3D246_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8686_g117895 = localSampleStochastic2D234_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8686_g117895 = localSampleStochastic3D263_g117952;
				#else
				float4 staticSwitch8686_g117895 = localSamplePlanar2D238_g117952;
				#endif
				half4 Layer133_g117911 = staticSwitch8686_g117895;
				TEXTURE2D(Texture238_g117981) = _TerrainNormalTex6;
				SamplerState Sampler238_g117981 = SS29_g118002;
				float4 temp_output_37_0_g117981 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117981 = temp_output_37_0_g117981;
				float3 temp_output_279_0_g117981 = Input_Position9197_g117895;
				half3 WorldPosition238_g117981 = temp_output_279_0_g117981;
				half4 localSamplePlanar2D238_g117981 = SamplePlanar2D( Texture238_g117981 , Sampler238_g117981 , Coords238_g117981 , WorldPosition238_g117981 );
				TEXTURE2D(Texture246_g117981) = _TerrainNormalTex6;
				SamplerState Sampler246_g117981 = SS29_g118002;
				half4 Coords246_g117981 = temp_output_37_0_g117981;
				half3 WorldPosition246_g117981 = temp_output_279_0_g117981;
				float3 temp_output_280_0_g117981 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117981 = temp_output_280_0_g117981;
				half4 localSamplePlanar3D246_g117981 = SamplePlanar3D( Texture246_g117981 , Sampler246_g117981 , Coords246_g117981 , WorldPosition246_g117981 , WorldNormal246_g117981 );
				TEXTURE2D(Texture234_g117981) = _TerrainNormalTex6;
				SamplerState Sampler234_g117981 = SS29_g118002;
				float4 Coords234_g117981 = temp_output_37_0_g117981;
				float3 WorldPosition234_g117981 = temp_output_279_0_g117981;
				float4 localSampleStochastic2D234_g117981 = SampleStochastic2D( Texture234_g117981 , Sampler234_g117981 , Coords234_g117981 , WorldPosition234_g117981 );
				TEXTURE2D(Texture263_g117981) = _TerrainNormalTex6;
				SamplerState Sampler263_g117981 = SS29_g118002;
				half4 Coords263_g117981 = temp_output_37_0_g117981;
				half3 WorldPosition263_g117981 = temp_output_279_0_g117981;
				half3 WorldNormal263_g117981 = temp_output_280_0_g117981;
				half4 localSampleStochastic3D263_g117981 = SampleStochastic3D( Texture263_g117981 , Sampler263_g117981 , Coords263_g117981 , WorldPosition263_g117981 , WorldNormal263_g117981 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8687_g117895 = localSamplePlanar2D238_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8687_g117895 = localSamplePlanar3D246_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8687_g117895 = localSampleStochastic2D234_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8687_g117895 = localSampleStochastic3D263_g117981;
				#else
				float4 staticSwitch8687_g117895 = localSamplePlanar2D238_g117981;
				#endif
				half4 Layer237_g117911 = staticSwitch8687_g117895;
				TEXTURE2D(Texture238_g117982) = _TerrainNormalTex7;
				SamplerState Sampler238_g117982 = SS29_g118002;
				float4 temp_output_37_0_g117982 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117982 = temp_output_37_0_g117982;
				float3 temp_output_279_0_g117982 = Input_Position9197_g117895;
				half3 WorldPosition238_g117982 = temp_output_279_0_g117982;
				half4 localSamplePlanar2D238_g117982 = SamplePlanar2D( Texture238_g117982 , Sampler238_g117982 , Coords238_g117982 , WorldPosition238_g117982 );
				TEXTURE2D(Texture246_g117982) = _TerrainNormalTex7;
				SamplerState Sampler246_g117982 = SS29_g118002;
				half4 Coords246_g117982 = temp_output_37_0_g117982;
				half3 WorldPosition246_g117982 = temp_output_279_0_g117982;
				float3 temp_output_280_0_g117982 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117982 = temp_output_280_0_g117982;
				half4 localSamplePlanar3D246_g117982 = SamplePlanar3D( Texture246_g117982 , Sampler246_g117982 , Coords246_g117982 , WorldPosition246_g117982 , WorldNormal246_g117982 );
				TEXTURE2D(Texture234_g117982) = _TerrainNormalTex7;
				SamplerState Sampler234_g117982 = SS29_g118002;
				float4 Coords234_g117982 = temp_output_37_0_g117982;
				float3 WorldPosition234_g117982 = temp_output_279_0_g117982;
				float4 localSampleStochastic2D234_g117982 = SampleStochastic2D( Texture234_g117982 , Sampler234_g117982 , Coords234_g117982 , WorldPosition234_g117982 );
				TEXTURE2D(Texture263_g117982) = _TerrainNormalTex7;
				SamplerState Sampler263_g117982 = SS29_g118002;
				half4 Coords263_g117982 = temp_output_37_0_g117982;
				half3 WorldPosition263_g117982 = temp_output_279_0_g117982;
				half3 WorldNormal263_g117982 = temp_output_280_0_g117982;
				half4 localSampleStochastic3D263_g117982 = SampleStochastic3D( Texture263_g117982 , Sampler263_g117982 , Coords263_g117982 , WorldPosition263_g117982 , WorldNormal263_g117982 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8688_g117895 = localSamplePlanar2D238_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8688_g117895 = localSamplePlanar3D246_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8688_g117895 = localSampleStochastic2D234_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8688_g117895 = localSampleStochastic3D263_g117982;
				#else
				float4 staticSwitch8688_g117895 = localSamplePlanar2D238_g117982;
				#endif
				half4 Layer338_g117911 = staticSwitch8688_g117895;
				TEXTURE2D(Texture238_g117983) = _TerrainNormalTex8;
				SamplerState Sampler238_g117983 = SS29_g118002;
				float4 temp_output_37_0_g117983 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117983 = temp_output_37_0_g117983;
				float3 temp_output_279_0_g117983 = Input_Position9197_g117895;
				half3 WorldPosition238_g117983 = temp_output_279_0_g117983;
				half4 localSamplePlanar2D238_g117983 = SamplePlanar2D( Texture238_g117983 , Sampler238_g117983 , Coords238_g117983 , WorldPosition238_g117983 );
				TEXTURE2D(Texture246_g117983) = _TerrainNormalTex8;
				SamplerState Sampler246_g117983 = SS29_g118002;
				half4 Coords246_g117983 = temp_output_37_0_g117983;
				half3 WorldPosition246_g117983 = temp_output_279_0_g117983;
				float3 temp_output_280_0_g117983 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117983 = temp_output_280_0_g117983;
				half4 localSamplePlanar3D246_g117983 = SamplePlanar3D( Texture246_g117983 , Sampler246_g117983 , Coords246_g117983 , WorldPosition246_g117983 , WorldNormal246_g117983 );
				TEXTURE2D(Texture234_g117983) = _TerrainNormalTex8;
				SamplerState Sampler234_g117983 = SS29_g118002;
				float4 Coords234_g117983 = temp_output_37_0_g117983;
				float3 WorldPosition234_g117983 = temp_output_279_0_g117983;
				float4 localSampleStochastic2D234_g117983 = SampleStochastic2D( Texture234_g117983 , Sampler234_g117983 , Coords234_g117983 , WorldPosition234_g117983 );
				TEXTURE2D(Texture263_g117983) = _TerrainNormalTex8;
				SamplerState Sampler263_g117983 = SS29_g118002;
				half4 Coords263_g117983 = temp_output_37_0_g117983;
				half3 WorldPosition263_g117983 = temp_output_279_0_g117983;
				half3 WorldNormal263_g117983 = temp_output_280_0_g117983;
				half4 localSampleStochastic3D263_g117983 = SampleStochastic3D( Texture263_g117983 , Sampler263_g117983 , Coords263_g117983 , WorldPosition263_g117983 , WorldNormal263_g117983 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8689_g117895 = localSamplePlanar2D238_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8689_g117895 = localSamplePlanar3D246_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8689_g117895 = localSampleStochastic2D234_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8689_g117895 = localSampleStochastic3D263_g117983;
				#else
				float4 staticSwitch8689_g117895 = localSamplePlanar2D238_g117983;
				#endif
				half4 Layer439_g117911 = staticSwitch8689_g117895;
				float4 weightedBlendVar31_g117911 = Weights52_g117911;
				float4 weightedBlend31_g117911 = ( weightedBlendVar31_g117911.x*Layer133_g117911 + weightedBlendVar31_g117911.y*Layer237_g117911 + weightedBlendVar31_g117911.z*Layer338_g117911 + weightedBlendVar31_g117911.w*Layer439_g117911 );
				half4 Terrain_B_088684_g117895 = weightedBlend31_g117911;
				half4 Layer_0810_g117902 = Terrain_B_088684_g117895;
				half4 Weights52_g117918 = Terrain_Weights_127710_g117895;
				TEXTURE2D(Texture238_g117955) = _TerrainNormalTex9;
				SamplerState Sampler238_g117955 = SS29_g118002;
				float4 temp_output_37_0_g117955 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117955 = temp_output_37_0_g117955;
				float3 temp_output_279_0_g117955 = Input_Position9197_g117895;
				half3 WorldPosition238_g117955 = temp_output_279_0_g117955;
				half4 localSamplePlanar2D238_g117955 = SamplePlanar2D( Texture238_g117955 , Sampler238_g117955 , Coords238_g117955 , WorldPosition238_g117955 );
				TEXTURE2D(Texture246_g117955) = _TerrainNormalTex9;
				SamplerState Sampler246_g117955 = SS29_g118002;
				half4 Coords246_g117955 = temp_output_37_0_g117955;
				half3 WorldPosition246_g117955 = temp_output_279_0_g117955;
				float3 temp_output_280_0_g117955 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117955 = temp_output_280_0_g117955;
				half4 localSamplePlanar3D246_g117955 = SamplePlanar3D( Texture246_g117955 , Sampler246_g117955 , Coords246_g117955 , WorldPosition246_g117955 , WorldNormal246_g117955 );
				TEXTURE2D(Texture234_g117955) = _TerrainNormalTex9;
				SamplerState Sampler234_g117955 = SS29_g118002;
				float4 Coords234_g117955 = temp_output_37_0_g117955;
				float3 WorldPosition234_g117955 = temp_output_279_0_g117955;
				float4 localSampleStochastic2D234_g117955 = SampleStochastic2D( Texture234_g117955 , Sampler234_g117955 , Coords234_g117955 , WorldPosition234_g117955 );
				TEXTURE2D(Texture263_g117955) = _TerrainNormalTex9;
				SamplerState Sampler263_g117955 = SS29_g118002;
				half4 Coords263_g117955 = temp_output_37_0_g117955;
				half3 WorldPosition263_g117955 = temp_output_279_0_g117955;
				half3 WorldNormal263_g117955 = temp_output_280_0_g117955;
				half4 localSampleStochastic3D263_g117955 = SampleStochastic3D( Texture263_g117955 , Sampler263_g117955 , Coords263_g117955 , WorldPosition263_g117955 , WorldNormal263_g117955 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8849_g117895 = localSamplePlanar2D238_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8849_g117895 = localSamplePlanar3D246_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8849_g117895 = localSampleStochastic2D234_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8849_g117895 = localSampleStochastic3D263_g117955;
				#else
				float4 staticSwitch8849_g117895 = localSamplePlanar2D238_g117955;
				#endif
				half4 Layer133_g117918 = staticSwitch8849_g117895;
				TEXTURE2D(Texture238_g117960) = _TerrainNormalTex10;
				SamplerState Sampler238_g117960 = SS29_g118002;
				float4 temp_output_37_0_g117960 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117960 = temp_output_37_0_g117960;
				float3 temp_output_279_0_g117960 = Input_Position9197_g117895;
				half3 WorldPosition238_g117960 = temp_output_279_0_g117960;
				half4 localSamplePlanar2D238_g117960 = SamplePlanar2D( Texture238_g117960 , Sampler238_g117960 , Coords238_g117960 , WorldPosition238_g117960 );
				TEXTURE2D(Texture246_g117960) = _TerrainNormalTex10;
				SamplerState Sampler246_g117960 = SS29_g118002;
				half4 Coords246_g117960 = temp_output_37_0_g117960;
				half3 WorldPosition246_g117960 = temp_output_279_0_g117960;
				float3 temp_output_280_0_g117960 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117960 = temp_output_280_0_g117960;
				half4 localSamplePlanar3D246_g117960 = SamplePlanar3D( Texture246_g117960 , Sampler246_g117960 , Coords246_g117960 , WorldPosition246_g117960 , WorldNormal246_g117960 );
				TEXTURE2D(Texture234_g117960) = _TerrainNormalTex10;
				SamplerState Sampler234_g117960 = SS29_g118002;
				float4 Coords234_g117960 = temp_output_37_0_g117960;
				float3 WorldPosition234_g117960 = temp_output_279_0_g117960;
				float4 localSampleStochastic2D234_g117960 = SampleStochastic2D( Texture234_g117960 , Sampler234_g117960 , Coords234_g117960 , WorldPosition234_g117960 );
				TEXTURE2D(Texture263_g117960) = _TerrainNormalTex10;
				SamplerState Sampler263_g117960 = SS29_g118002;
				half4 Coords263_g117960 = temp_output_37_0_g117960;
				half3 WorldPosition263_g117960 = temp_output_279_0_g117960;
				half3 WorldNormal263_g117960 = temp_output_280_0_g117960;
				half4 localSampleStochastic3D263_g117960 = SampleStochastic3D( Texture263_g117960 , Sampler263_g117960 , Coords263_g117960 , WorldPosition263_g117960 , WorldNormal263_g117960 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8876_g117895 = localSamplePlanar2D238_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8876_g117895 = localSamplePlanar3D246_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8876_g117895 = localSampleStochastic2D234_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8876_g117895 = localSampleStochastic3D263_g117960;
				#else
				float4 staticSwitch8876_g117895 = localSamplePlanar2D238_g117960;
				#endif
				half4 Layer237_g117918 = staticSwitch8876_g117895;
				TEXTURE2D(Texture238_g117961) = _TerrainNormalTex11;
				SamplerState Sampler238_g117961 = SS29_g118002;
				float4 temp_output_37_0_g117961 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117961 = temp_output_37_0_g117961;
				float3 temp_output_279_0_g117961 = Input_Position9197_g117895;
				half3 WorldPosition238_g117961 = temp_output_279_0_g117961;
				half4 localSamplePlanar2D238_g117961 = SamplePlanar2D( Texture238_g117961 , Sampler238_g117961 , Coords238_g117961 , WorldPosition238_g117961 );
				TEXTURE2D(Texture246_g117961) = _TerrainNormalTex11;
				SamplerState Sampler246_g117961 = SS29_g118002;
				half4 Coords246_g117961 = temp_output_37_0_g117961;
				half3 WorldPosition246_g117961 = temp_output_279_0_g117961;
				float3 temp_output_280_0_g117961 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117961 = temp_output_280_0_g117961;
				half4 localSamplePlanar3D246_g117961 = SamplePlanar3D( Texture246_g117961 , Sampler246_g117961 , Coords246_g117961 , WorldPosition246_g117961 , WorldNormal246_g117961 );
				TEXTURE2D(Texture234_g117961) = _TerrainNormalTex11;
				SamplerState Sampler234_g117961 = SS29_g118002;
				float4 Coords234_g117961 = temp_output_37_0_g117961;
				float3 WorldPosition234_g117961 = temp_output_279_0_g117961;
				float4 localSampleStochastic2D234_g117961 = SampleStochastic2D( Texture234_g117961 , Sampler234_g117961 , Coords234_g117961 , WorldPosition234_g117961 );
				TEXTURE2D(Texture263_g117961) = _TerrainNormalTex11;
				SamplerState Sampler263_g117961 = SS29_g118002;
				half4 Coords263_g117961 = temp_output_37_0_g117961;
				half3 WorldPosition263_g117961 = temp_output_279_0_g117961;
				half3 WorldNormal263_g117961 = temp_output_280_0_g117961;
				half4 localSampleStochastic3D263_g117961 = SampleStochastic3D( Texture263_g117961 , Sampler263_g117961 , Coords263_g117961 , WorldPosition263_g117961 , WorldNormal263_g117961 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8850_g117895 = localSamplePlanar2D238_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8850_g117895 = localSamplePlanar3D246_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8850_g117895 = localSampleStochastic2D234_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8850_g117895 = localSampleStochastic3D263_g117961;
				#else
				float4 staticSwitch8850_g117895 = localSamplePlanar2D238_g117961;
				#endif
				half4 Layer338_g117918 = staticSwitch8850_g117895;
				TEXTURE2D(Texture238_g117962) = _TerrainNormalTex12;
				SamplerState Sampler238_g117962 = SS29_g118002;
				float4 temp_output_37_0_g117962 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117962 = temp_output_37_0_g117962;
				float3 temp_output_279_0_g117962 = Input_Position9197_g117895;
				half3 WorldPosition238_g117962 = temp_output_279_0_g117962;
				half4 localSamplePlanar2D238_g117962 = SamplePlanar2D( Texture238_g117962 , Sampler238_g117962 , Coords238_g117962 , WorldPosition238_g117962 );
				TEXTURE2D(Texture246_g117962) = _TerrainNormalTex12;
				SamplerState Sampler246_g117962 = SS29_g118002;
				half4 Coords246_g117962 = temp_output_37_0_g117962;
				half3 WorldPosition246_g117962 = temp_output_279_0_g117962;
				float3 temp_output_280_0_g117962 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117962 = temp_output_280_0_g117962;
				half4 localSamplePlanar3D246_g117962 = SamplePlanar3D( Texture246_g117962 , Sampler246_g117962 , Coords246_g117962 , WorldPosition246_g117962 , WorldNormal246_g117962 );
				TEXTURE2D(Texture234_g117962) = _TerrainNormalTex12;
				SamplerState Sampler234_g117962 = SS29_g118002;
				float4 Coords234_g117962 = temp_output_37_0_g117962;
				float3 WorldPosition234_g117962 = temp_output_279_0_g117962;
				float4 localSampleStochastic2D234_g117962 = SampleStochastic2D( Texture234_g117962 , Sampler234_g117962 , Coords234_g117962 , WorldPosition234_g117962 );
				TEXTURE2D(Texture263_g117962) = _TerrainNormalTex12;
				SamplerState Sampler263_g117962 = SS29_g118002;
				half4 Coords263_g117962 = temp_output_37_0_g117962;
				half3 WorldPosition263_g117962 = temp_output_279_0_g117962;
				half3 WorldNormal263_g117962 = temp_output_280_0_g117962;
				half4 localSampleStochastic3D263_g117962 = SampleStochastic3D( Texture263_g117962 , Sampler263_g117962 , Coords263_g117962 , WorldPosition263_g117962 , WorldNormal263_g117962 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8877_g117895 = localSamplePlanar2D238_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8877_g117895 = localSamplePlanar3D246_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8877_g117895 = localSampleStochastic2D234_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8877_g117895 = localSampleStochastic3D263_g117962;
				#else
				float4 staticSwitch8877_g117895 = localSamplePlanar2D238_g117962;
				#endif
				half4 Layer439_g117918 = staticSwitch8877_g117895;
				float4 weightedBlendVar31_g117918 = Weights52_g117918;
				float4 weightedBlend31_g117918 = ( weightedBlendVar31_g117918.x*Layer133_g117918 + weightedBlendVar31_g117918.y*Layer237_g117918 + weightedBlendVar31_g117918.z*Layer338_g117918 + weightedBlendVar31_g117918.w*Layer439_g117918 );
				half4 Terrain_B_128865_g117895 = weightedBlend31_g117918;
				half4 Layer_1243_g117902 = Terrain_B_128865_g117895;
				half4 Weights52_g117925 = Terrain_Weights_167709_g117895;
				TEXTURE2D(Texture238_g117965) = _TerrainNormalTex13;
				SamplerState Sampler238_g117965 = SS29_g118002;
				float4 temp_output_37_0_g117965 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117965 = temp_output_37_0_g117965;
				float3 temp_output_279_0_g117965 = Input_Position9197_g117895;
				half3 WorldPosition238_g117965 = temp_output_279_0_g117965;
				half4 localSamplePlanar2D238_g117965 = SamplePlanar2D( Texture238_g117965 , Sampler238_g117965 , Coords238_g117965 , WorldPosition238_g117965 );
				TEXTURE2D(Texture246_g117965) = _TerrainNormalTex13;
				SamplerState Sampler246_g117965 = SS29_g118002;
				half4 Coords246_g117965 = temp_output_37_0_g117965;
				half3 WorldPosition246_g117965 = temp_output_279_0_g117965;
				float3 temp_output_280_0_g117965 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117965 = temp_output_280_0_g117965;
				half4 localSamplePlanar3D246_g117965 = SamplePlanar3D( Texture246_g117965 , Sampler246_g117965 , Coords246_g117965 , WorldPosition246_g117965 , WorldNormal246_g117965 );
				TEXTURE2D(Texture234_g117965) = _TerrainNormalTex13;
				SamplerState Sampler234_g117965 = SS29_g118002;
				float4 Coords234_g117965 = temp_output_37_0_g117965;
				float3 WorldPosition234_g117965 = temp_output_279_0_g117965;
				float4 localSampleStochastic2D234_g117965 = SampleStochastic2D( Texture234_g117965 , Sampler234_g117965 , Coords234_g117965 , WorldPosition234_g117965 );
				TEXTURE2D(Texture263_g117965) = _TerrainNormalTex13;
				SamplerState Sampler263_g117965 = SS29_g118002;
				half4 Coords263_g117965 = temp_output_37_0_g117965;
				half3 WorldPosition263_g117965 = temp_output_279_0_g117965;
				half3 WorldNormal263_g117965 = temp_output_280_0_g117965;
				half4 localSampleStochastic3D263_g117965 = SampleStochastic3D( Texture263_g117965 , Sampler263_g117965 , Coords263_g117965 , WorldPosition263_g117965 , WorldNormal263_g117965 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8991_g117895 = localSamplePlanar2D238_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8991_g117895 = localSamplePlanar3D246_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8991_g117895 = localSampleStochastic2D234_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8991_g117895 = localSampleStochastic3D263_g117965;
				#else
				float4 staticSwitch8991_g117895 = localSamplePlanar2D238_g117965;
				#endif
				half4 Layer133_g117925 = staticSwitch8991_g117895;
				TEXTURE2D(Texture238_g117972) = _TerrainNormalTex14;
				SamplerState Sampler238_g117972 = SS29_g118002;
				float4 temp_output_37_0_g117972 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117972 = temp_output_37_0_g117972;
				float3 temp_output_279_0_g117972 = Input_Position9197_g117895;
				half3 WorldPosition238_g117972 = temp_output_279_0_g117972;
				half4 localSamplePlanar2D238_g117972 = SamplePlanar2D( Texture238_g117972 , Sampler238_g117972 , Coords238_g117972 , WorldPosition238_g117972 );
				TEXTURE2D(Texture246_g117972) = _TerrainNormalTex14;
				SamplerState Sampler246_g117972 = SS29_g118002;
				half4 Coords246_g117972 = temp_output_37_0_g117972;
				half3 WorldPosition246_g117972 = temp_output_279_0_g117972;
				float3 temp_output_280_0_g117972 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117972 = temp_output_280_0_g117972;
				half4 localSamplePlanar3D246_g117972 = SamplePlanar3D( Texture246_g117972 , Sampler246_g117972 , Coords246_g117972 , WorldPosition246_g117972 , WorldNormal246_g117972 );
				TEXTURE2D(Texture234_g117972) = _TerrainNormalTex14;
				SamplerState Sampler234_g117972 = SS29_g118002;
				float4 Coords234_g117972 = temp_output_37_0_g117972;
				float3 WorldPosition234_g117972 = temp_output_279_0_g117972;
				float4 localSampleStochastic2D234_g117972 = SampleStochastic2D( Texture234_g117972 , Sampler234_g117972 , Coords234_g117972 , WorldPosition234_g117972 );
				TEXTURE2D(Texture263_g117972) = _TerrainNormalTex14;
				SamplerState Sampler263_g117972 = SS29_g118002;
				half4 Coords263_g117972 = temp_output_37_0_g117972;
				half3 WorldPosition263_g117972 = temp_output_279_0_g117972;
				half3 WorldNormal263_g117972 = temp_output_280_0_g117972;
				half4 localSampleStochastic3D263_g117972 = SampleStochastic3D( Texture263_g117972 , Sampler263_g117972 , Coords263_g117972 , WorldPosition263_g117972 , WorldNormal263_g117972 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8990_g117895 = localSamplePlanar2D238_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8990_g117895 = localSamplePlanar3D246_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8990_g117895 = localSampleStochastic2D234_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8990_g117895 = localSampleStochastic3D263_g117972;
				#else
				float4 staticSwitch8990_g117895 = localSamplePlanar2D238_g117972;
				#endif
				half4 Layer237_g117925 = staticSwitch8990_g117895;
				TEXTURE2D(Texture238_g117973) = _TerrainNormalTex15;
				SamplerState Sampler238_g117973 = SS29_g118002;
				float4 temp_output_37_0_g117973 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117973 = temp_output_37_0_g117973;
				float3 temp_output_279_0_g117973 = Input_Position9197_g117895;
				half3 WorldPosition238_g117973 = temp_output_279_0_g117973;
				half4 localSamplePlanar2D238_g117973 = SamplePlanar2D( Texture238_g117973 , Sampler238_g117973 , Coords238_g117973 , WorldPosition238_g117973 );
				TEXTURE2D(Texture246_g117973) = _TerrainNormalTex15;
				SamplerState Sampler246_g117973 = SS29_g118002;
				half4 Coords246_g117973 = temp_output_37_0_g117973;
				half3 WorldPosition246_g117973 = temp_output_279_0_g117973;
				float3 temp_output_280_0_g117973 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117973 = temp_output_280_0_g117973;
				half4 localSamplePlanar3D246_g117973 = SamplePlanar3D( Texture246_g117973 , Sampler246_g117973 , Coords246_g117973 , WorldPosition246_g117973 , WorldNormal246_g117973 );
				TEXTURE2D(Texture234_g117973) = _TerrainNormalTex15;
				SamplerState Sampler234_g117973 = SS29_g118002;
				float4 Coords234_g117973 = temp_output_37_0_g117973;
				float3 WorldPosition234_g117973 = temp_output_279_0_g117973;
				float4 localSampleStochastic2D234_g117973 = SampleStochastic2D( Texture234_g117973 , Sampler234_g117973 , Coords234_g117973 , WorldPosition234_g117973 );
				TEXTURE2D(Texture263_g117973) = _TerrainNormalTex15;
				SamplerState Sampler263_g117973 = SS29_g118002;
				half4 Coords263_g117973 = temp_output_37_0_g117973;
				half3 WorldPosition263_g117973 = temp_output_279_0_g117973;
				half3 WorldNormal263_g117973 = temp_output_280_0_g117973;
				half4 localSampleStochastic3D263_g117973 = SampleStochastic3D( Texture263_g117973 , Sampler263_g117973 , Coords263_g117973 , WorldPosition263_g117973 , WorldNormal263_g117973 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8989_g117895 = localSamplePlanar2D238_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8989_g117895 = localSamplePlanar3D246_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8989_g117895 = localSampleStochastic2D234_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8989_g117895 = localSampleStochastic3D263_g117973;
				#else
				float4 staticSwitch8989_g117895 = localSamplePlanar2D238_g117973;
				#endif
				half4 Layer338_g117925 = staticSwitch8989_g117895;
				TEXTURE2D(Texture238_g117974) = _TerrainNormalTex16;
				SamplerState Sampler238_g117974 = SS29_g118002;
				float4 temp_output_37_0_g117974 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117974 = temp_output_37_0_g117974;
				float3 temp_output_279_0_g117974 = Input_Position9197_g117895;
				half3 WorldPosition238_g117974 = temp_output_279_0_g117974;
				half4 localSamplePlanar2D238_g117974 = SamplePlanar2D( Texture238_g117974 , Sampler238_g117974 , Coords238_g117974 , WorldPosition238_g117974 );
				TEXTURE2D(Texture246_g117974) = _TerrainNormalTex16;
				SamplerState Sampler246_g117974 = SS29_g118002;
				half4 Coords246_g117974 = temp_output_37_0_g117974;
				half3 WorldPosition246_g117974 = temp_output_279_0_g117974;
				float3 temp_output_280_0_g117974 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117974 = temp_output_280_0_g117974;
				half4 localSamplePlanar3D246_g117974 = SamplePlanar3D( Texture246_g117974 , Sampler246_g117974 , Coords246_g117974 , WorldPosition246_g117974 , WorldNormal246_g117974 );
				TEXTURE2D(Texture234_g117974) = _TerrainNormalTex16;
				SamplerState Sampler234_g117974 = SS29_g118002;
				float4 Coords234_g117974 = temp_output_37_0_g117974;
				float3 WorldPosition234_g117974 = temp_output_279_0_g117974;
				float4 localSampleStochastic2D234_g117974 = SampleStochastic2D( Texture234_g117974 , Sampler234_g117974 , Coords234_g117974 , WorldPosition234_g117974 );
				TEXTURE2D(Texture263_g117974) = _TerrainNormalTex16;
				SamplerState Sampler263_g117974 = SS29_g118002;
				half4 Coords263_g117974 = temp_output_37_0_g117974;
				half3 WorldPosition263_g117974 = temp_output_279_0_g117974;
				half3 WorldNormal263_g117974 = temp_output_280_0_g117974;
				half4 localSampleStochastic3D263_g117974 = SampleStochastic3D( Texture263_g117974 , Sampler263_g117974 , Coords263_g117974 , WorldPosition263_g117974 , WorldNormal263_g117974 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8988_g117895 = localSamplePlanar2D238_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8988_g117895 = localSamplePlanar3D246_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8988_g117895 = localSampleStochastic2D234_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8988_g117895 = localSampleStochastic3D263_g117974;
				#else
				float4 staticSwitch8988_g117895 = localSamplePlanar2D238_g117974;
				#endif
				half4 Layer439_g117925 = staticSwitch8988_g117895;
				float4 weightedBlendVar31_g117925 = Weights52_g117925;
				float4 weightedBlend31_g117925 = ( weightedBlendVar31_g117925.x*Layer133_g117925 + weightedBlendVar31_g117925.y*Layer237_g117925 + weightedBlendVar31_g117925.z*Layer338_g117925 + weightedBlendVar31_g117925.w*Layer439_g117925 );
				half4 Terrain_B_168987_g117895 = weightedBlend31_g117925;
				half4 Layer_1644_g117902 = Terrain_B_168987_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117902 = Layer_045_g117902;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 + Layer_1243_g117902 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 + Layer_1243_g117902 + Layer_1644_g117902 );
				#else
				float4 staticSwitch40_g117902 = Layer_045_g117902;
				#endif
				half4 Blend_Normal7512_g117895 = staticSwitch40_g117902;
				half4 Normal_Packed45_g117996 = Blend_Normal7512_g117895;
				float2 appendResult58_g117996 = (float2(( (Normal_Packed45_g117996).x * (Normal_Packed45_g117996).w ) , (Normal_Packed45_g117996).y));
				half2 Normal_Default50_g117996 = appendResult58_g117996;
				half2 Normal_ASTC41_g117996 = (Normal_Packed45_g117996).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g117996 = Normal_ASTC41_g117996;
				#else
				float2 staticSwitch38_g117996 = Normal_Default50_g117996;
				#endif
				half2 Normal_NO_DTX544_g117996 = (Normal_Packed45_g117996).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g117996 = Normal_NO_DTX544_g117996;
				#else
				float2 staticSwitch37_g117996 = staticSwitch38_g117996;
				#endif
				half4 Weights52_g117898 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117898 = temp_output_6970_0_g117895;
				half4 Layer237_g117898 = temp_output_6977_0_g117895;
				half4 Layer338_g117898 = temp_output_6978_0_g117895;
				half4 Layer439_g117898 = temp_output_6983_0_g117895;
				float4 weightedBlendVar31_g117898 = Weights52_g117898;
				float4 weightedBlend31_g117898 = ( weightedBlendVar31_g117898.x*Layer133_g117898 + weightedBlendVar31_g117898.y*Layer237_g117898 + weightedBlendVar31_g117898.z*Layer338_g117898 + weightedBlendVar31_g117898.w*Layer439_g117898 );
				half4 Terrain_Shaders_047203_g117895 = weightedBlend31_g117898;
				half4 Layer_045_g117904 = Terrain_Shaders_047203_g117895;
				half4 Weights52_g117914 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117914 = temp_output_8714_0_g117895;
				half4 Layer237_g117914 = temp_output_8721_0_g117895;
				half4 Layer338_g117914 = temp_output_8724_0_g117895;
				half4 Layer439_g117914 = temp_output_8727_0_g117895;
				float4 weightedBlendVar31_g117914 = Weights52_g117914;
				float4 weightedBlend31_g117914 = ( weightedBlendVar31_g117914.x*Layer133_g117914 + weightedBlendVar31_g117914.y*Layer237_g117914 + weightedBlendVar31_g117914.z*Layer338_g117914 + weightedBlendVar31_g117914.w*Layer439_g117914 );
				half4 Terrain_Shaders_088730_g117895 = weightedBlend31_g117914;
				half4 Layer_0810_g117904 = Terrain_Shaders_088730_g117895;
				half4 Weights52_g117921 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117921 = temp_output_8815_0_g117895;
				half4 Layer237_g117921 = temp_output_8818_0_g117895;
				half4 Layer338_g117921 = temp_output_8819_0_g117895;
				half4 Layer439_g117921 = temp_output_8820_0_g117895;
				float4 weightedBlendVar31_g117921 = Weights52_g117921;
				float4 weightedBlend31_g117921 = ( weightedBlendVar31_g117921.x*Layer133_g117921 + weightedBlendVar31_g117921.y*Layer237_g117921 + weightedBlendVar31_g117921.z*Layer338_g117921 + weightedBlendVar31_g117921.w*Layer439_g117921 );
				half4 Terrain_Shaders_128871_g117895 = weightedBlend31_g117921;
				half4 Layer_1243_g117904 = Terrain_Shaders_128871_g117895;
				half4 Weights52_g117928 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117928 = temp_output_8931_0_g117895;
				half4 Layer237_g117928 = temp_output_8934_0_g117895;
				half4 Layer338_g117928 = temp_output_8935_0_g117895;
				half4 Layer439_g117928 = temp_output_8936_0_g117895;
				float4 weightedBlendVar31_g117928 = Weights52_g117928;
				float4 weightedBlend31_g117928 = ( weightedBlendVar31_g117928.x*Layer133_g117928 + weightedBlendVar31_g117928.y*Layer237_g117928 + weightedBlendVar31_g117928.z*Layer338_g117928 + weightedBlendVar31_g117928.w*Layer439_g117928 );
				half4 Terrain_Shaders_169014_g117895 = weightedBlend31_g117928;
				half4 Layer_1644_g117904 = Terrain_Shaders_169014_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117904 = Layer_045_g117904;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 + Layer_1243_g117904 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 + Layer_1243_g117904 + Layer_1644_g117904 );
				#else
				float4 staticSwitch40_g117904 = Layer_045_g117904;
				#endif
				half4 Blend_Shaders7420_g117895 = staticSwitch40_g117904;
				half4 Normal_Packed45_g117995 = Blend_Shaders7420_g117895;
				half2 Normal_NO_DTX544_g117995 = (Normal_Packed45_g117995).wy;
				#ifdef TVE_TERRAIN_PACKED
				float2 staticSwitch9080_g117895 = (Normal_NO_DTX544_g117995*2.0 + -1.0);
				#else
				float2 staticSwitch9080_g117895 = (staticSwitch37_g117996*2.0 + -1.0);
				#endif
				half4 Weights52_g117899 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117899 = _TerrainParams1;
				half4 Layer237_g117899 = _TerrainParams2;
				half4 Layer338_g117899 = _TerrainParams3;
				half4 Layer439_g117899 = _TerrainParams4;
				float4 weightedBlendVar31_g117899 = Weights52_g117899;
				float4 weightedBlend31_g117899 = ( weightedBlendVar31_g117899.x*Layer133_g117899 + weightedBlendVar31_g117899.y*Layer237_g117899 + weightedBlendVar31_g117899.z*Layer338_g117899 + weightedBlendVar31_g117899.w*Layer439_g117899 );
				half4 Terrain_Params_047533_g117895 = weightedBlend31_g117899;
				half4 Layer_045_g117905 = Terrain_Params_047533_g117895;
				half4 Weights52_g117915 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117915 = _TerrainParams5;
				half4 Layer237_g117915 = _TerrainParams6;
				half4 Layer338_g117915 = _TerrainParams7;
				half4 Layer439_g117915 = _TerrainParams8;
				float4 weightedBlendVar31_g117915 = Weights52_g117915;
				float4 weightedBlend31_g117915 = ( weightedBlendVar31_g117915.x*Layer133_g117915 + weightedBlendVar31_g117915.y*Layer237_g117915 + weightedBlendVar31_g117915.z*Layer338_g117915 + weightedBlendVar31_g117915.w*Layer439_g117915 );
				half4 Terrain_Params_088739_g117895 = weightedBlend31_g117915;
				half4 Layer_0810_g117905 = Terrain_Params_088739_g117895;
				half4 Weights52_g117922 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117922 = _TerrainParams9;
				half4 Layer237_g117922 = _TerrainParams10;
				half4 Layer338_g117922 = _TerrainParams11;
				half4 Layer439_g117922 = _TerrainParams12;
				float4 weightedBlendVar31_g117922 = Weights52_g117922;
				float4 weightedBlend31_g117922 = ( weightedBlendVar31_g117922.x*Layer133_g117922 + weightedBlendVar31_g117922.y*Layer237_g117922 + weightedBlendVar31_g117922.z*Layer338_g117922 + weightedBlendVar31_g117922.w*Layer439_g117922 );
				half4 Terrain_Params_128867_g117895 = weightedBlend31_g117922;
				half4 Layer_1243_g117905 = Terrain_Params_128867_g117895;
				half4 Weights52_g117929 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117929 = _TerrainParams13;
				half4 Layer237_g117929 = _TerrainParams14;
				half4 Layer338_g117929 = _TerrainParams15;
				half4 Layer439_g117929 = _TerrainParams16;
				float4 weightedBlendVar31_g117929 = Weights52_g117929;
				float4 weightedBlend31_g117929 = ( weightedBlendVar31_g117929.x*Layer133_g117929 + weightedBlendVar31_g117929.y*Layer237_g117929 + weightedBlendVar31_g117929.z*Layer338_g117929 + weightedBlendVar31_g117929.w*Layer439_g117929 );
				half4 Terrain_Params_169017_g117895 = weightedBlend31_g117929;
				half4 Layer_1644_g117905 = Terrain_Params_169017_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117905 = Layer_045_g117905;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 + Layer_1243_g117905 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 + Layer_1243_g117905 + Layer_1644_g117905 );
				#else
				float4 staticSwitch40_g117905 = Layer_045_g117905;
				#endif
				half4 Blend_Params7547_g117895 = staticSwitch40_g117905;
				half2 Normal_Planar45_g117997 = ( ( staticSwitch9080_g117895 * (Blend_Params7547_g117895).z ) * _TerrainNormalValue );
				float2 break71_g117997 = Normal_Planar45_g117997;
				float3 appendResult72_g117997 = (float3(break71_g117997.x , 0.0 , break71_g117997.y));
				half2 Final_NormalTS9145_g117895 = (mul( ase_worldToTangent, appendResult72_g117997 )).xy;
				half2 Local_Normal9200_g117893 = Final_NormalTS9145_g117895;
				float2 In_NormalTS3_g117894 = Local_Normal9200_g117893;
				float3 appendResult68_g118005 = (float3(Local_Normal9200_g117893 , 1.0));
				float3 tanToWorld0 = float3( ase_worldTangent.x, ase_worldBitangent.x, ase_worldNormal.x );
				float3 tanToWorld1 = float3( ase_worldTangent.y, ase_worldBitangent.y, ase_worldNormal.y );
				float3 tanToWorld2 = float3( ase_worldTangent.z, ase_worldBitangent.z, ase_worldNormal.z );
				float3 tanNormal74_g118005 = appendResult68_g118005;
				float3 worldNormal74_g118005 = normalize( float3(dot(tanToWorld0,tanNormal74_g118005), dot(tanToWorld1,tanNormal74_g118005), dot(tanToWorld2,tanNormal74_g118005)) );
				float3 In_NormalWS3_g117894 = worldNormal74_g118005;
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9139_g117895 = 0.0;
				#else
				float staticSwitch9139_g117895 = ( (Blend_Shaders7420_g117895).x * (Blend_Params7547_g117895).x * _TerrainMetallicValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9097_g117895 = 1.0;
				#else
				float staticSwitch9097_g117895 = ( (Blend_Shaders7420_g117895).y * _TerrainOcclusionValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9105_g117895 = (Blend_Shaders7420_g117895).x;
				#else
				float staticSwitch9105_g117895 = (Blend_Shaders7420_g117895).w;
				#endif
				float4 appendResult9147_g117895 = (float4(staticSwitch9139_g117895 , staticSwitch9097_g117895 , (Blend_Shaders7420_g117895).z , ( staticSwitch9105_g117895 * (Blend_Params7547_g117895).w * _TerrainSmoothnessValue )));
				half4 Final_Shaders9146_g117895 = appendResult9147_g117895;
				half4 Local_Shader9201_g117893 = Final_Shaders9146_g117895;
				float4 In_Shader3_g117894 = Local_Shader9201_g117893;
				half4 Weights52_g117988 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117988 = _TerrainSpecular1;
				half4 Layer237_g117988 = _TerrainSpecular2;
				half4 Layer338_g117988 = _TerrainSpecular3;
				half4 Layer439_g117988 = _TerrainSpecular4;
				float4 weightedBlendVar31_g117988 = Weights52_g117988;
				float4 weightedBlend31_g117988 = ( weightedBlendVar31_g117988.x*Layer133_g117988 + weightedBlendVar31_g117988.y*Layer237_g117988 + weightedBlendVar31_g117988.z*Layer338_g117988 + weightedBlendVar31_g117988.w*Layer439_g117988 );
				half4 Terrain_Specular_047390_g117895 = weightedBlend31_g117988;
				half4 Layer_045_g117993 = Terrain_Specular_047390_g117895;
				half4 Weights52_g117916 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117916 = _TerrainSpecular5;
				half4 Layer237_g117916 = _TerrainSpecular6;
				half4 Layer338_g117916 = _TerrainSpecular7;
				half4 Layer439_g117916 = _TerrainSpecular8;
				float4 weightedBlendVar31_g117916 = Weights52_g117916;
				float4 weightedBlend31_g117916 = ( weightedBlendVar31_g117916.x*Layer133_g117916 + weightedBlendVar31_g117916.y*Layer237_g117916 + weightedBlendVar31_g117916.z*Layer338_g117916 + weightedBlendVar31_g117916.w*Layer439_g117916 );
				half4 Terrain_Specular_088745_g117895 = weightedBlend31_g117916;
				half4 Layer_0810_g117993 = Terrain_Specular_088745_g117895;
				half4 Weights52_g117923 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117923 = _TerrainSpecular9;
				half4 Layer237_g117923 = _TerrainSpecular10;
				half4 Layer338_g117923 = _TerrainSpecular11;
				half4 Layer439_g117923 = _TerrainSpecular12;
				float4 weightedBlendVar31_g117923 = Weights52_g117923;
				float4 weightedBlend31_g117923 = ( weightedBlendVar31_g117923.x*Layer133_g117923 + weightedBlendVar31_g117923.y*Layer237_g117923 + weightedBlendVar31_g117923.z*Layer338_g117923 + weightedBlendVar31_g117923.w*Layer439_g117923 );
				half4 Terrain_Specular_128869_g117895 = weightedBlend31_g117923;
				half4 Layer_1243_g117993 = Terrain_Specular_128869_g117895;
				half4 Weights52_g117930 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117930 = _TerrainSpecular13;
				half4 Layer237_g117930 = _TerrainSpecular14;
				half4 Layer338_g117930 = _TerrainSpecular15;
				half4 Layer439_g117930 = _TerrainSpecular16;
				float4 weightedBlendVar31_g117930 = Weights52_g117930;
				float4 weightedBlend31_g117930 = ( weightedBlendVar31_g117930.x*Layer133_g117930 + weightedBlendVar31_g117930.y*Layer237_g117930 + weightedBlendVar31_g117930.z*Layer338_g117930 + weightedBlendVar31_g117930.w*Layer439_g117930 );
				half4 Terrain_Specular_169019_g117895 = weightedBlend31_g117930;
				half4 Layer_1644_g117993 = Terrain_Specular_169019_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117993 = Layer_045_g117993;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 + Layer_1243_g117993 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 + Layer_1243_g117993 + Layer_1644_g117993 );
				#else
				float4 staticSwitch40_g117993 = Layer_045_g117993;
				#endif
				half4 Blend_TerrainSpecular7446_g117895 = staticSwitch40_g117993;
				float3 temp_output_9088_0_g117895 = (Blend_TerrainSpecular7446_g117895).rgb;
				float4 appendResult9189_g117895 = (float4(temp_output_9088_0_g117895 , 1.0));
				half4 Final_Emissive9151_g117895 = appendResult9189_g117895;
				half4 Local_EmissiveLDR9202_g117893 = Final_Emissive9151_g117895;
				float4 In_Emissive3_g117894 = Local_EmissiveLDR9202_g117893;
				float3 temp_output_3_0_g118006 = Local_Albedo9199_g117893;
				float dotResult20_g118006 = dot( temp_output_3_0_g118006 , float3(0.2126,0.7152,0.0722) );
				float temp_output_9165_0_g117893 = dotResult20_g118006;
				float In_Grayscale3_g117894 = temp_output_9165_0_g117893;
				float clampResult9168_g117893 = clamp( saturate( ( temp_output_9165_0_g117893 * 5.0 ) ) , 0.2 , 1.0 );
				float In_Luminosity3_g117894 = clampResult9168_g117893;
				half Final_MultiShader9150_g117895 = ( (Blend_TerrainSpecular7446_g117895).a * (Blend_Albedo7468_g117895).w );
				half Local_MultiMask9203_g117893 = Final_MultiShader9150_g117895;
				float In_MultiMask3_g117894 = Local_MultiMask9203_g117893;
				float4 temp_output_35_0_g118004 = appendResult9125_g117895;
				float2 InputScale48_g118004 = (temp_output_35_0_g118004).zw;
				half2 FinalScale53_g118004 = ( 1.0 / InputScale48_g118004 );
				float2 InputPosition52_g118004 = (temp_output_35_0_g118004).xy;
				half2 FinalPosition58_g118004 = -( FinalScale53_g118004 * InputPosition52_g118004 );
				float2 temp_output_65_0_g118004 = ( ( (ase_worldPos).xz * FinalScale53_g118004 ) + FinalPosition58_g118004 );
				float2 Terrain_Holes_UV9406_g117895 = temp_output_65_0_g118004;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch9188_g117895 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9406_g117895 ).r;
				#else
				float staticSwitch9188_g117895 = 1.0;
				#endif
				half Terrain_Holes7437_g117895 = staticSwitch9188_g117895;
				half Local_HoleMask9204_g117893 = Terrain_Holes7437_g117895;
				float In_AlphaClip3_g117894 = Local_HoleMask9204_g117893;
				float In_AlphaFade3_g117894 = 1.0;
				float3 temp_cast_9 = (1.0).xxx;
				float3 In_Translucency3_g117894 = temp_cast_9;
				float In_Transmission3_g117894 = 1.0;
				float In_Thickness3_g117894 = 0.0;
				float In_Diffusion3_g117894 = 0.0;
				Data3_g117894.Dummy = In_Dummy3_g117894;
				Data3_g117894.Albedo = In_Albedo3_g117894;
				Data3_g117894.AlbedoRaw = In_AlbedoRaw3_g117894;
				Data3_g117894.NormalTS = In_NormalTS3_g117894;
				Data3_g117894.NormalWS = In_NormalWS3_g117894;
				Data3_g117894.Shader = In_Shader3_g117894;
				Data3_g117894.Emissive= In_Emissive3_g117894;
				Data3_g117894.MultiMask = In_MultiMask3_g117894;
				Data3_g117894.Grayscale = In_Grayscale3_g117894;
				Data3_g117894.Luminosity = In_Luminosity3_g117894;
				Data3_g117894.AlphaClip = In_AlphaClip3_g117894;
				Data3_g117894.AlphaFade = In_AlphaFade3_g117894;
				Data3_g117894.Translucency = In_Translucency3_g117894;
				Data3_g117894.Transmission = In_Transmission3_g117894;
				Data3_g117894.Thickness = In_Thickness3_g117894;
				Data3_g117894.Diffusion = In_Diffusion3_g117894;
				TVEVisualData Data4_g118029 = Data3_g117894;
				float Out_Dummy4_g118029 = 0;
				float3 Out_Albedo4_g118029 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118029 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118029 = float2( 0,0 );
				float3 Out_NormalWS4_g118029 = float3( 0,0,0 );
				float4 Out_Shader4_g118029 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118029 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118029 = 0;
				float Out_Grayscale4_g118029 = 0;
				float Out_Luminosity4_g118029 = 0;
				float Out_AlphaClip4_g118029 = 0;
				float Out_AlphaFade4_g118029 = 0;
				float3 Out_Translucency4_g118029 = float3( 0,0,0 );
				float Out_Transmission4_g118029 = 0;
				float Out_Thickness4_g118029 = 0;
				float Out_Diffusion4_g118029 = 0;
				Out_Dummy4_g118029 = Data4_g118029.Dummy;
				Out_Albedo4_g118029 = Data4_g118029.Albedo;
				Out_AlbedoRaw4_g118029 = Data4_g118029.AlbedoRaw;
				Out_NormalTS4_g118029 = Data4_g118029.NormalTS;
				Out_NormalWS4_g118029 = Data4_g118029.NormalWS;
				Out_Shader4_g118029 = Data4_g118029.Shader;
				Out_Emissive4_g118029= Data4_g118029.Emissive;
				Out_MultiMask4_g118029 = Data4_g118029.MultiMask;
				Out_Grayscale4_g118029 = Data4_g118029.Grayscale;
				Out_Luminosity4_g118029= Data4_g118029.Luminosity;
				Out_AlphaClip4_g118029 = Data4_g118029.AlphaClip;
				Out_AlphaFade4_g118029 = Data4_g118029.AlphaFade;
				Out_Translucency4_g118029 = Data4_g118029.Translucency;
				Out_Transmission4_g118029 = Data4_g118029.Transmission;
				Out_Thickness4_g118029 = Data4_g118029.Thickness;
				Out_Diffusion4_g118029 = Data4_g118029.Diffusion;
				half3 Visual_Albedo139_g118007 = Out_Albedo4_g118029;
				float temp_output_200_12_g118007 = Out_Grayscale4_g118029;
				half Visual_Grayscale150_g118007 = temp_output_200_12_g118007;
				float3 temp_cast_10 = (Visual_Grayscale150_g118007).xxx;
				float localBuildGlobalData204_g117810 = ( 0.0 );
				TVEGlobalData Data204_g117810 = (TVEGlobalData)0;
				half Dummy211_g117810 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g117810 = Dummy211_g117810;
				half4 Coat_Params302_g117810 = TVE_CoatParams;
				float4 In_CoatParams204_g117810 = Coat_Params302_g117810;
				float temp_output_82_0_g117811 = _GlobalPaintLayerValue;
				float temp_output_19_0_g117813 = TVE_PaintLayers[(int)temp_output_82_0_g117811];
				TVEModelData Data16_g117809 = (TVEModelData)0;
				float In_Dummy16_g117809 = 0.0;
				float3 vertexToFrag73_g117794 = packedInput.ase_texcoord4.xyz;
				half3 PositionWS122_g117794 = vertexToFrag73_g117794;
				float3 In_PositionWS16_g117809 = PositionWS122_g117794;
				float3 localObjectPosition_UNITY_MATRIX_M14_g117796 = ObjectPosition_UNITY_MATRIX_M();
				#ifdef SHADEROPTIONS_CAMERA_RELATIVE_RENDERING
				float3 staticSwitch13_g117796 = ( localObjectPosition_UNITY_MATRIX_M14_g117796 + _WorldSpaceCameraPos );
				#else
				float3 staticSwitch13_g117796 = localObjectPosition_UNITY_MATRIX_M14_g117796;
				#endif
				half3 ObjectData20_g117798 = staticSwitch13_g117796;
				half3 WorldData19_g117798 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g117798 = WorldData19_g117798;
				#else
				float3 staticSwitch14_g117798 = ObjectData20_g117798;
				#endif
				float3 temp_output_124_0_g117796 = staticSwitch14_g117798;
				float3 temp_output_239_7_g117794 = temp_output_124_0_g117796;
				half3 PivotWS121_g117794 = temp_output_239_7_g117794;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g117794 = ( PositionWS122_g117794 - PivotWS121_g117794 );
				#else
				float3 staticSwitch204_g117794 = PositionWS122_g117794;
				#endif
				half3 PositionWO132_g117794 = ( staticSwitch204_g117794 - TVE_WorldOrigin );
				float3 In_PositionWO16_g117809 = PositionWO132_g117794;
				float3 In_PivotWS16_g117809 = PivotWS121_g117794;
				half3 PivotWO133_g117794 = ( PivotWS121_g117794 - TVE_WorldOrigin );
				float3 In_PivotWO16_g117809 = PivotWO133_g117794;
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g117794 = normalizedWorldNormal;
				float3 In_NormalWS16_g117809 = Normal_WS95_g117794;
				float3 normalizeResult296_g117794 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g117794 ) );
				half3 ViewDirWS169_g117794 = normalizeResult296_g117794;
				float3 In_ViewDirWS16_g117809 = ViewDirWS169_g117794;
				half4 VertexMasks171_g117794 = packedInput.ase_color;
				float4 In_VertexData16_g117809 = VertexMasks171_g117794;
				float4 In_BoundsData16_g117809 = float4( 1,1,1,1 );
				Data16_g117809.Dummy = In_Dummy16_g117809;
				Data16_g117809.PositionWS = In_PositionWS16_g117809;
				Data16_g117809.PositionWO = In_PositionWO16_g117809;
				Data16_g117809.PivotWS = In_PivotWS16_g117809;
				Data16_g117809.PivotWO = In_PivotWO16_g117809;
				Data16_g117809.NormalWS = In_NormalWS16_g117809;
				Data16_g117809.ViewDirWS = In_ViewDirWS16_g117809;
				Data16_g117809.VertexData = In_VertexData16_g117809;
				Data16_g117809.BoundsData = In_BoundsData16_g117809;
				TVEModelData Data15_g117892 = Data16_g117809;
				float Out_Dummy15_g117892 = 0;
				float3 Out_PositionWS15_g117892 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117892 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117892 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g117892 = float3( 0,0,0 );
				float4 Out_VertexData15_g117892 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117892 = float4( 0,0,0,0 );
				Out_Dummy15_g117892 = Data15_g117892.Dummy;
				Out_PositionWS15_g117892 = Data15_g117892.PositionWS;
				Out_PositionWO15_g117892 = Data15_g117892.PositionWO;
				Out_PivotWS15_g117892 = Data15_g117892.PivotWS;
				Out_PivotWO15_g117892 = Data15_g117892.PivotWO;
				Out_NormalWS15_g117892 = Data15_g117892.NormalWS;
				Out_ViewDirWS15_g117892 = Data15_g117892.ViewDirWS;
				Out_VertexData15_g117892 = Data15_g117892.VertexData;
				Out_BoundsData15_g117892 = Data15_g117892.BoundsData;
				half3 Model_PositionWS143_g117810 = Out_PositionWS15_g117892;
				half3 Input_Position180_g117814 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117814 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_82_0_g117814 = temp_output_82_0_g117811;
				float2 temp_output_119_0_g117814 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_7_0_g117819 = 1.0;
				float temp_output_10_0_g117819 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117819 );
				float4 lerpResult131_g117814 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117814,temp_output_82_0_g117814, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, temp_output_119_0_g117814,temp_output_82_0_g117814, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117814 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117819 ) / temp_output_10_0_g117819 ) ));
				float4 temp_output_17_0_g117813 = lerpResult131_g117814;
				float4 temp_output_3_0_g117813 = TVE_PaintParams;
				float4 ifLocalVar18_g117813 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117813 >= 0.5 )
				ifLocalVar18_g117813 = temp_output_17_0_g117813;
				else
				ifLocalVar18_g117813 = temp_output_3_0_g117813;
				float4 lerpResult22_g117813 = lerp( temp_output_3_0_g117813 , temp_output_17_0_g117813 , temp_output_19_0_g117813);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117813 = lerpResult22_g117813;
				#else
				float4 staticSwitch24_g117813 = ifLocalVar18_g117813;
				#endif
				half4 Paint_Params71_g117810 = staticSwitch24_g117813;
				float4 In_PaintParams204_g117810 = Paint_Params71_g117810;
				float temp_output_82_0_g117829 = _GlobalGlowLayerValue;
				float temp_output_19_0_g117831 = TVE_GlowLayers[(int)temp_output_82_0_g117829];
				half3 Input_Position180_g117832 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117832 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_82_0_g117832 = temp_output_82_0_g117829;
				float2 temp_output_119_0_g117832 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_7_0_g117837 = 1.0;
				float temp_output_10_0_g117837 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117837 );
				float4 lerpResult131_g117832 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117832,temp_output_82_0_g117832, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, temp_output_119_0_g117832,temp_output_82_0_g117832, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117832 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117837 ) / temp_output_10_0_g117837 ) ));
				float4 temp_output_17_0_g117831 = lerpResult131_g117832;
				float4 temp_output_3_0_g117831 = TVE_GlowParams;
				float4 ifLocalVar18_g117831 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117831 >= 0.5 )
				ifLocalVar18_g117831 = temp_output_17_0_g117831;
				else
				ifLocalVar18_g117831 = temp_output_3_0_g117831;
				float4 lerpResult22_g117831 = lerp( temp_output_3_0_g117831 , temp_output_17_0_g117831 , temp_output_19_0_g117831);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117831 = lerpResult22_g117831;
				#else
				float4 staticSwitch24_g117831 = ifLocalVar18_g117831;
				#endif
				half4 Glow_Params248_g117810 = staticSwitch24_g117831;
				float4 In_GlowParams204_g117810 = Glow_Params248_g117810;
				float temp_output_132_0_g117874 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g117876 = TVE_AtmoLayers[(int)temp_output_132_0_g117874];
				half3 Input_Position180_g117877 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117877 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_82_0_g117877 = temp_output_132_0_g117874;
				float2 temp_output_119_0_g117877 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_7_0_g117882 = 1.0;
				float temp_output_10_0_g117882 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117882 );
				float4 lerpResult131_g117877 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117877,temp_output_82_0_g117877, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, temp_output_119_0_g117877,temp_output_82_0_g117877, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117877 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117882 ) / temp_output_10_0_g117882 ) ));
				float4 temp_output_17_0_g117876 = lerpResult131_g117877;
				float4 temp_output_3_0_g117876 = TVE_AtmoParams;
				float4 ifLocalVar18_g117876 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117876 >= 0.5 )
				ifLocalVar18_g117876 = temp_output_17_0_g117876;
				else
				ifLocalVar18_g117876 = temp_output_3_0_g117876;
				float4 lerpResult22_g117876 = lerp( temp_output_3_0_g117876 , temp_output_17_0_g117876 , temp_output_19_0_g117876);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117876 = lerpResult22_g117876;
				#else
				float4 staticSwitch24_g117876 = ifLocalVar18_g117876;
				#endif
				half4 Atmo_Params80_g117810 = staticSwitch24_g117876;
				float4 In_AtmoParams204_g117810 = Atmo_Params80_g117810;
				float temp_output_132_0_g117883 = _GlobalFadeLayerValue;
				float temp_output_19_0_g117885 = TVE_FadeLayers[(int)temp_output_132_0_g117883];
				half3 Input_Position180_g117886 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117886 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_82_0_g117886 = temp_output_132_0_g117883;
				float2 temp_output_119_0_g117886 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_7_0_g117891 = 1.0;
				float temp_output_10_0_g117891 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117891 );
				float4 lerpResult131_g117886 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117886,temp_output_82_0_g117886, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, temp_output_119_0_g117886,temp_output_82_0_g117886, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117886 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117891 ) / temp_output_10_0_g117891 ) ));
				float4 temp_output_17_0_g117885 = lerpResult131_g117886;
				float4 temp_output_3_0_g117885 = TVE_FadeParams;
				float4 ifLocalVar18_g117885 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117885 >= 0.5 )
				ifLocalVar18_g117885 = temp_output_17_0_g117885;
				else
				ifLocalVar18_g117885 = temp_output_3_0_g117885;
				float4 lerpResult22_g117885 = lerp( temp_output_3_0_g117885 , temp_output_17_0_g117885 , temp_output_19_0_g117885);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117885 = lerpResult22_g117885;
				#else
				float4 staticSwitch24_g117885 = ifLocalVar18_g117885;
				#endif
				half4 Fade_Params387_g117810 = staticSwitch24_g117885;
				float4 In_FadeParams204_g117810 = Fade_Params387_g117810;
				half4 Form_Params112_g117810 = TVE_FormParams;
				float4 In_FormParams204_g117810 = Form_Params112_g117810;
				float temp_output_130_0_g117847 = _GlobalLandLayerValue;
				float temp_output_19_0_g117849 = TVE_LandLayers[(int)temp_output_130_0_g117847];
				half3 Input_Position180_g117850 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117850 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_82_0_g117850 = temp_output_130_0_g117847;
				float2 temp_output_119_0_g117850 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_7_0_g117855 = 1.0;
				float temp_output_10_0_g117855 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117855 );
				float4 lerpResult131_g117850 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117850,temp_output_82_0_g117850, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, temp_output_119_0_g117850,temp_output_82_0_g117850, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117850 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117855 ) / temp_output_10_0_g117855 ) ));
				float4 temp_output_17_0_g117849 = lerpResult131_g117850;
				float4 temp_output_3_0_g117849 = TVE_LandParams;
				float4 ifLocalVar18_g117849 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117849 >= 0.5 )
				ifLocalVar18_g117849 = temp_output_17_0_g117849;
				else
				ifLocalVar18_g117849 = temp_output_3_0_g117849;
				float4 lerpResult22_g117849 = lerp( temp_output_3_0_g117849 , temp_output_17_0_g117849 , temp_output_19_0_g117849);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117849 = lerpResult22_g117849;
				#else
				float4 staticSwitch24_g117849 = ifLocalVar18_g117849;
				#endif
				half4 Land_Params375_g117810 = staticSwitch24_g117849;
				float4 In_LandParams204_g117810 = Land_Params375_g117810;
				half4 Wind_Params88_g117810 = TVE_WindParams;
				float4 In_WindParams204_g117810 = Wind_Params88_g117810;
				half4 Push_Params335_g117810 = TVE_PushParams;
				float4 In_PushParams204_g117810 = Push_Params335_g117810;
				Data204_g117810.Dummy = In_Dummy204_g117810;
				Data204_g117810.CoatParams = In_CoatParams204_g117810;
				Data204_g117810.PaintParams = In_PaintParams204_g117810;
				Data204_g117810.GlowParams = In_GlowParams204_g117810;
				Data204_g117810.AtmoParams = In_AtmoParams204_g117810;
				Data204_g117810.FadeParams = In_FadeParams204_g117810;
				Data204_g117810.FormParams= In_FormParams204_g117810;
				Data204_g117810.LandParams = In_LandParams204_g117810;
				Data204_g117810.WindParams = In_WindParams204_g117810;
				Data204_g117810.PushParams = In_PushParams204_g117810;
				TVEGlobalData Data15_g118008 = Data204_g117810;
				float Out_Dummy15_g118008 = 0;
				float4 Out_CoatParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118008 = float4( 0,0,0,0 );
				Out_Dummy15_g118008 = Data15_g118008.Dummy;
				Out_CoatParams15_g118008 = Data15_g118008.CoatParams;
				Out_PaintParams15_g118008 = Data15_g118008.PaintParams;
				Out_GlowParams15_g118008 = Data15_g118008.GlowParams;
				Out_AtmoParams15_g118008= Data15_g118008.AtmoParams;
				Out_FadeParams15_g118008= Data15_g118008.FadeParams;
				Out_FormParams15_g118008 = Data15_g118008.FormParams;
				Out_LandParams15_g118008 = Data15_g118008.LandParams;
				Out_WindParams15_g118008 = Data15_g118008.WindParams;
				Out_PushParams15_g118008 = Data15_g118008.PushParams;
				half4 Global_PaintParams209_g118007 = Out_PaintParams15_g118008;
				float temp_output_6_0_g118009 = ( saturate( (Global_PaintParams209_g118007).w ) * TVE_IsEnabled );
				#ifdef TVE_REGISTER
				float staticSwitch14_g118009 = ( temp_output_6_0_g118009 + ( _TintingElementMode * 0.0 ) );
				#else
				float staticSwitch14_g118009 = temp_output_6_0_g118009;
				#endif
				#ifdef TVE_TINTING_ELEMENT
				float staticSwitch283_g118007 = staticSwitch14_g118009;
				#else
				float staticSwitch283_g118007 = 1.0;
				#endif
				half Tinting_GlobalValue285_g118007 = staticSwitch283_g118007;
				float3 lerpResult368_g118007 = lerp( Visual_Albedo139_g118007 , temp_cast_10 , ( Tinting_GlobalValue285_g118007 * _TintingGrayValue ));
				float3 temp_cast_32 = (1.0).xxx;
				#ifdef TVE_TINTING_ELEMENT
				float3 staticSwitch288_g118007 = (Global_PaintParams209_g118007).xyz;
				#else
				float3 staticSwitch288_g118007 = temp_cast_32;
				#endif
				half3 Tinting_ColorGlobal290_g118007 = staticSwitch288_g118007;
				float temp_output_200_11_g118007 = Out_MultiMask4_g118029;
				half Visual_MultiMask181_g118007 = temp_output_200_11_g118007;
				float lerpResult147_g118007 = lerp( 1.0 , Visual_MultiMask181_g118007 , _TintingMultiValue);
				half Tinting_MutiMask121_g118007 = lerpResult147_g118007;
				half Tinting_TexMask385_g118007 = 1.0;
				float temp_output_200_15_g118007 = Out_Luminosity4_g118029;
				half Visual_Luminosity257_g118007 = temp_output_200_15_g118007;
				float clampResult17_g118021 = clamp( Visual_Luminosity257_g118007 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118020 = _TintingLumaRemap.x;
				float temp_output_10_0_g118020 = ( _TintingLumaRemap.y - temp_output_7_0_g118020 );
				float lerpResult228_g118007 = lerp( 1.0 , saturate( ( ( clampResult17_g118021 - temp_output_7_0_g118020 ) / ( temp_output_10_0_g118020 + 0.0001 ) ) ) , _TintingLumaValue);
				half Tinting_LumaMask153_g118007 = lerpResult228_g118007;
				half Tinting_VertMask309_g118007 = 1.0;
				half Tinting_NoiseMask213_g118007 = 1.0;
				half Custom_Mask345_g118007 = 1.0;
				float temp_output_7_0_g118016 = _TintingBlendRemap.x;
				float temp_output_10_0_g118016 = ( _TintingBlendRemap.y - temp_output_7_0_g118016 );
				half Tinting_Mask242_g118007 = ( saturate( ( ( ( _TintingIntensityValue * Tinting_MutiMask121_g118007 * Tinting_TexMask385_g118007 * Tinting_LumaMask153_g118007 * Tinting_VertMask309_g118007 * Tinting_NoiseMask213_g118007 * Tinting_GlobalValue285_g118007 * Custom_Mask345_g118007 ) - temp_output_7_0_g118016 ) / ( temp_output_10_0_g118016 + 0.0001 ) ) ) * TVE_IsEnabled );
				float3 lerpResult90_g118007 = lerp( Visual_Albedo139_g118007 , ( lerpResult368_g118007 * 4.594794 * Tinting_ColorGlobal290_g118007 * (_TintingColor).rgb ) , Tinting_Mask242_g118007);
				#ifdef TVE_TINTING
				float3 staticSwitch286_g118007 = lerpResult90_g118007;
				#else
				float3 staticSwitch286_g118007 = Visual_Albedo139_g118007;
				#endif
				half3 Final_Albedo97_g118007 = staticSwitch286_g118007;
				float3 In_Albedo3_g118028 = Final_Albedo97_g118007;
				float3 In_AlbedoRaw3_g118028 = Out_AlbedoRaw4_g118029;
				float2 In_NormalTS3_g118028 = Out_NormalTS4_g118029;
				float3 In_NormalWS3_g118028 = Out_NormalWS4_g118029;
				float4 In_Shader3_g118028 = Out_Shader4_g118029;
				float4 In_Emissive3_g118028 = Out_Emissive4_g118029;
				float In_Grayscale3_g118028 = temp_output_200_12_g118007;
				float In_Luminosity3_g118028 = temp_output_200_15_g118007;
				float In_MultiMask3_g118028 = temp_output_200_11_g118007;
				float In_AlphaClip3_g118028 = Out_AlphaClip4_g118029;
				float In_AlphaFade3_g118028 = Out_AlphaFade4_g118029;
				float3 In_Translucency3_g118028 = Out_Translucency4_g118029;
				float In_Transmission3_g118028 = Out_Transmission4_g118029;
				float In_Thickness3_g118028 = Out_Thickness4_g118029;
				float In_Diffusion3_g118028 = Out_Diffusion4_g118029;
				Data3_g118028.Dummy = In_Dummy3_g118028;
				Data3_g118028.Albedo = In_Albedo3_g118028;
				Data3_g118028.AlbedoRaw = In_AlbedoRaw3_g118028;
				Data3_g118028.NormalTS = In_NormalTS3_g118028;
				Data3_g118028.NormalWS = In_NormalWS3_g118028;
				Data3_g118028.Shader = In_Shader3_g118028;
				Data3_g118028.Emissive= In_Emissive3_g118028;
				Data3_g118028.MultiMask = In_MultiMask3_g118028;
				Data3_g118028.Grayscale = In_Grayscale3_g118028;
				Data3_g118028.Luminosity = In_Luminosity3_g118028;
				Data3_g118028.AlphaClip = In_AlphaClip3_g118028;
				Data3_g118028.AlphaFade = In_AlphaFade3_g118028;
				Data3_g118028.Translucency = In_Translucency3_g118028;
				Data3_g118028.Transmission = In_Transmission3_g118028;
				Data3_g118028.Thickness = In_Thickness3_g118028;
				Data3_g118028.Diffusion = In_Diffusion3_g118028;
				TVEVisualData Data4_g118033 = Data3_g118028;
				float Out_Dummy4_g118033 = 0;
				float3 Out_Albedo4_g118033 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118033 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118033 = float2( 0,0 );
				float3 Out_NormalWS4_g118033 = float3( 0,0,0 );
				float4 Out_Shader4_g118033 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118033 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118033 = 0;
				float Out_Grayscale4_g118033 = 0;
				float Out_Luminosity4_g118033 = 0;
				float Out_AlphaClip4_g118033 = 0;
				float Out_AlphaFade4_g118033 = 0;
				float3 Out_Translucency4_g118033 = float3( 0,0,0 );
				float Out_Transmission4_g118033 = 0;
				float Out_Thickness4_g118033 = 0;
				float Out_Diffusion4_g118033 = 0;
				Out_Dummy4_g118033 = Data4_g118033.Dummy;
				Out_Albedo4_g118033 = Data4_g118033.Albedo;
				Out_AlbedoRaw4_g118033 = Data4_g118033.AlbedoRaw;
				Out_NormalTS4_g118033 = Data4_g118033.NormalTS;
				Out_NormalWS4_g118033 = Data4_g118033.NormalWS;
				Out_Shader4_g118033 = Data4_g118033.Shader;
				Out_Emissive4_g118033= Data4_g118033.Emissive;
				Out_MultiMask4_g118033 = Data4_g118033.MultiMask;
				Out_Grayscale4_g118033 = Data4_g118033.Grayscale;
				Out_Luminosity4_g118033= Data4_g118033.Luminosity;
				Out_AlphaClip4_g118033 = Data4_g118033.AlphaClip;
				Out_AlphaFade4_g118033 = Data4_g118033.AlphaFade;
				Out_Translucency4_g118033 = Data4_g118033.Translucency;
				Out_Transmission4_g118033 = Data4_g118033.Transmission;
				Out_Thickness4_g118033 = Data4_g118033.Thickness;
				Out_Diffusion4_g118033 = Data4_g118033.Diffusion;
				half3 Visual_Albedo292_g118031 = Out_Albedo4_g118033;
				float temp_output_280_12_g118031 = Out_Grayscale4_g118033;
				half Visual_Grayscale308_g118031 = temp_output_280_12_g118031;
				float3 temp_cast_33 = (Visual_Grayscale308_g118031).xxx;
				TVEGlobalData Data15_g118032 = Data204_g117810;
				float Out_Dummy15_g118032 = 0;
				float4 Out_CoatParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118032 = float4( 0,0,0,0 );
				Out_Dummy15_g118032 = Data15_g118032.Dummy;
				Out_CoatParams15_g118032 = Data15_g118032.CoatParams;
				Out_PaintParams15_g118032 = Data15_g118032.PaintParams;
				Out_GlowParams15_g118032 = Data15_g118032.GlowParams;
				Out_AtmoParams15_g118032= Data15_g118032.AtmoParams;
				Out_FadeParams15_g118032= Data15_g118032.FadeParams;
				Out_FormParams15_g118032 = Data15_g118032.FormParams;
				Out_LandParams15_g118032 = Data15_g118032.LandParams;
				Out_WindParams15_g118032 = Data15_g118032.WindParams;
				Out_PushParams15_g118032 = Data15_g118032.PushParams;
				half4 Global_AtmoParams314_g118031 = Out_AtmoParams15_g118032;
				#ifdef TVE_DRYNESS_ELEMENT
				float staticSwitch351_g118031 = ( (Global_AtmoParams314_g118031).x * TVE_IsEnabled );
				#else
				float staticSwitch351_g118031 = 1.0;
				#endif
				half Dryness_GlobalMask352_g118031 = staticSwitch351_g118031;
				float3 lerpResult485_g118031 = lerp( Visual_Albedo292_g118031 , temp_cast_33 , ( Dryness_GlobalMask352_g118031 * _DrynessGrayValue ));
				half3 hsvTorgb58_g118052 = RGBToHSV( lerpResult485_g118031 );
				half3 hsvTorgb61_g118052 = HSVToRGB( half3(( hsvTorgb58_g118052.x + _DrynessShiftValue ),hsvTorgb58_g118052.y,hsvTorgb58_g118052.z) );
				#ifdef TVE_DRYNESS_SHIFT
				float3 staticSwitch499_g118031 = hsvTorgb61_g118052;
				#else
				float3 staticSwitch499_g118031 = lerpResult485_g118031;
				#endif
				half Dryness_TexMask478_g118031 = 1.0;
				float temp_output_280_11_g118031 = Out_MultiMask4_g118033;
				half Visual_MultiMask310_g118031 = temp_output_280_11_g118031;
				float lerpResult283_g118031 = lerp( 1.0 , Visual_MultiMask310_g118031 , _DrynessMultiValue);
				half Dryness_MultiMask302_g118031 = lerpResult283_g118031;
				float temp_output_280_15_g118031 = Out_Luminosity4_g118033;
				half Visual_Luminosity309_g118031 = temp_output_280_15_g118031;
				float clampResult17_g118047 = clamp( Visual_Luminosity309_g118031 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118046 = _DrynessLumaRemap.x;
				float temp_output_10_0_g118046 = ( _DrynessLumaRemap.y - temp_output_7_0_g118046 );
				float lerpResult295_g118031 = lerp( 1.0 , saturate( ( ( clampResult17_g118047 - temp_output_7_0_g118046 ) / ( temp_output_10_0_g118046 + 0.0001 ) ) ) , _DrynessLumaValue);
				half Dryness_LumaMask301_g118031 = lerpResult295_g118031;
				half Dryness_VertMask378_g118031 = 1.0;
				half Dryness_MaskNoise291_g118031 = 1.0;
				half Custom_Mask411_g118031 = 1.0;
				float temp_output_7_0_g118045 = _DrynessBlendRemap.x;
				float temp_output_10_0_g118045 = ( _DrynessBlendRemap.y - temp_output_7_0_g118045 );
				half Dryness_Mask329_g118031 = saturate( ( ( ( _DrynessIntensityValue * Dryness_TexMask478_g118031 * Dryness_MultiMask302_g118031 * Dryness_LumaMask301_g118031 * Dryness_VertMask378_g118031 * Dryness_MaskNoise291_g118031 * Dryness_GlobalMask352_g118031 * Custom_Mask411_g118031 ) - temp_output_7_0_g118045 ) / ( temp_output_10_0_g118045 + 0.0001 ) ) );
				float3 lerpResult336_g118031 = lerp( Visual_Albedo292_g118031 , ( staticSwitch499_g118031 * 4.594794 * (_DrynessColor).rgb ) , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float3 staticSwitch356_g118031 = lerpResult336_g118031;
				#else
				float3 staticSwitch356_g118031 = Visual_Albedo292_g118031;
				#endif
				half3 Final_Albedo331_g118031 = staticSwitch356_g118031;
				float3 In_Albedo3_g118034 = Final_Albedo331_g118031;
				float3 In_AlbedoRaw3_g118034 = Out_AlbedoRaw4_g118033;
				float2 In_NormalTS3_g118034 = Out_NormalTS4_g118033;
				float3 In_NormalWS3_g118034 = Out_NormalWS4_g118033;
				half4 Visual_Shader415_g118031 = Out_Shader4_g118033;
				float4 break438_g118031 = Visual_Shader415_g118031;
				float4 appendResult439_g118031 = (float4(break438_g118031.x , break438_g118031.y , break438_g118031.z , ( break438_g118031.w * _DrynessSmoothnessValue )));
				float4 lerpResult427_g118031 = lerp( Visual_Shader415_g118031 , appendResult439_g118031 , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float4 staticSwitch426_g118031 = lerpResult427_g118031;
				#else
				float4 staticSwitch426_g118031 = Visual_Shader415_g118031;
				#endif
				half4 Final_Shader433_g118031 = staticSwitch426_g118031;
				float4 In_Shader3_g118034 = Final_Shader433_g118031;
				float4 In_Emissive3_g118034 = Out_Emissive4_g118033;
				float In_Grayscale3_g118034 = temp_output_280_12_g118031;
				float In_Luminosity3_g118034 = temp_output_280_15_g118031;
				float In_MultiMask3_g118034 = temp_output_280_11_g118031;
				float In_AlphaClip3_g118034 = Out_AlphaClip4_g118033;
				float In_AlphaFade3_g118034 = Out_AlphaFade4_g118033;
				float3 In_Translucency3_g118034 = Out_Translucency4_g118033;
				half Visual_Transmission416_g118031 = Out_Transmission4_g118033;
				float lerpResult421_g118031 = lerp( Visual_Transmission416_g118031 , ( Visual_Transmission416_g118031 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float staticSwitch418_g118031 = lerpResult421_g118031;
				#else
				float staticSwitch418_g118031 = Visual_Transmission416_g118031;
				#endif
				half Final_Transmission425_g118031 = staticSwitch418_g118031;
				float In_Transmission3_g118034 = Final_Transmission425_g118031;
				float In_Thickness3_g118034 = Out_Thickness4_g118033;
				float In_Diffusion3_g118034 = Out_Diffusion4_g118033;
				Data3_g118034.Dummy = In_Dummy3_g118034;
				Data3_g118034.Albedo = In_Albedo3_g118034;
				Data3_g118034.AlbedoRaw = In_AlbedoRaw3_g118034;
				Data3_g118034.NormalTS = In_NormalTS3_g118034;
				Data3_g118034.NormalWS = In_NormalWS3_g118034;
				Data3_g118034.Shader = In_Shader3_g118034;
				Data3_g118034.Emissive= In_Emissive3_g118034;
				Data3_g118034.MultiMask = In_MultiMask3_g118034;
				Data3_g118034.Grayscale = In_Grayscale3_g118034;
				Data3_g118034.Luminosity = In_Luminosity3_g118034;
				Data3_g118034.AlphaClip = In_AlphaClip3_g118034;
				Data3_g118034.AlphaFade = In_AlphaFade3_g118034;
				Data3_g118034.Translucency = In_Translucency3_g118034;
				Data3_g118034.Transmission = In_Transmission3_g118034;
				Data3_g118034.Thickness = In_Thickness3_g118034;
				Data3_g118034.Diffusion = In_Diffusion3_g118034;
				TVEVisualData Data4_g118055 = Data3_g118034;
				float Out_Dummy4_g118055 = 0;
				float3 Out_Albedo4_g118055 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118055 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118055 = float2( 0,0 );
				float3 Out_NormalWS4_g118055 = float3( 0,0,0 );
				float4 Out_Shader4_g118055 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118055 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118055 = 0;
				float Out_Grayscale4_g118055 = 0;
				float Out_Luminosity4_g118055 = 0;
				float Out_AlphaClip4_g118055 = 0;
				float Out_AlphaFade4_g118055 = 0;
				float3 Out_Translucency4_g118055 = float3( 0,0,0 );
				float Out_Transmission4_g118055 = 0;
				float Out_Thickness4_g118055 = 0;
				float Out_Diffusion4_g118055 = 0;
				Out_Dummy4_g118055 = Data4_g118055.Dummy;
				Out_Albedo4_g118055 = Data4_g118055.Albedo;
				Out_AlbedoRaw4_g118055 = Data4_g118055.AlbedoRaw;
				Out_NormalTS4_g118055 = Data4_g118055.NormalTS;
				Out_NormalWS4_g118055 = Data4_g118055.NormalWS;
				Out_Shader4_g118055 = Data4_g118055.Shader;
				Out_Emissive4_g118055= Data4_g118055.Emissive;
				Out_MultiMask4_g118055 = Data4_g118055.MultiMask;
				Out_Grayscale4_g118055 = Data4_g118055.Grayscale;
				Out_Luminosity4_g118055= Data4_g118055.Luminosity;
				Out_AlphaClip4_g118055 = Data4_g118055.AlphaClip;
				Out_AlphaFade4_g118055 = Data4_g118055.AlphaFade;
				Out_Translucency4_g118055 = Data4_g118055.Translucency;
				Out_Transmission4_g118055 = Data4_g118055.Transmission;
				Out_Thickness4_g118055 = Data4_g118055.Thickness;
				Out_Diffusion4_g118055 = Data4_g118055.Diffusion;
				half3 Visual_Albedo127_g118054 = Out_Albedo4_g118055;
				float3 temp_output_622_0_g118054 = (_OverlayColor).rgb;
				TEXTURE2D(Texture238_g118058) = _OverlayAlbedoTex;
				float localFilterTexture19_g118087 = ( 0.0 );
				SamplerState SamplerDefault19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g118087 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g118087 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g118087 = SamplerDefault19_g118087;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g118087 = SamplerDefault19_g118087;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g118087 = SamplerPoint19_g118087;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g118087 = SamplerLow19_g118087;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g118087 = SamplerMedium19_g118087;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g118087 = SamplerHigh19_g118087;
				#endif
				SamplerState Sampler238_g118058 = SS19_g118087;
				float4 temp_output_6_0_g118059 = _overlay_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g118059 = ( temp_output_6_0_g118059 + ( ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g118059 = temp_output_6_0_g118059;
				#endif
				half4 Overlay_Coords639_g118054 = staticSwitch14_g118059;
				float4 temp_output_37_0_g118058 = Overlay_Coords639_g118054;
				half4 Coords238_g118058 = temp_output_37_0_g118058;
				TVEModelData Data15_g118089 = Data16_g117809;
				float Out_Dummy15_g118089 = 0;
				float3 Out_PositionWS15_g118089 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118089 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118089 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118089 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118089 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g118089 = float3( 0,0,0 );
				float4 Out_VertexData15_g118089 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118089 = float4( 0,0,0,0 );
				Out_Dummy15_g118089 = Data15_g118089.Dummy;
				Out_PositionWS15_g118089 = Data15_g118089.PositionWS;
				Out_PositionWO15_g118089 = Data15_g118089.PositionWO;
				Out_PivotWS15_g118089 = Data15_g118089.PivotWS;
				Out_PivotWO15_g118089 = Data15_g118089.PivotWO;
				Out_NormalWS15_g118089 = Data15_g118089.NormalWS;
				Out_ViewDirWS15_g118089 = Data15_g118089.ViewDirWS;
				Out_VertexData15_g118089 = Data15_g118089.VertexData;
				Out_BoundsData15_g118089 = Data15_g118089.BoundsData;
				half3 Model_PositionWO602_g118054 = Out_PositionWO15_g118089;
				float3 temp_output_279_0_g118058 = Model_PositionWO602_g118054;
				half3 WorldPosition238_g118058 = temp_output_279_0_g118058;
				half4 localSamplePlanar2D238_g118058 = SamplePlanar2D( Texture238_g118058 , Sampler238_g118058 , Coords238_g118058 , WorldPosition238_g118058 );
				TEXTURE2D(Texture246_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler246_g118058 = SS19_g118087;
				half4 Coords246_g118058 = temp_output_37_0_g118058;
				half3 WorldPosition246_g118058 = temp_output_279_0_g118058;
				half3 Model_NormalWS712_g118054 = Out_NormalWS15_g118089;
				float3 temp_output_280_0_g118058 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118058 = temp_output_280_0_g118058;
				half4 localSamplePlanar3D246_g118058 = SamplePlanar3D( Texture246_g118058 , Sampler246_g118058 , Coords246_g118058 , WorldPosition246_g118058 , WorldNormal246_g118058 );
				TEXTURE2D(Texture234_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler234_g118058 = SS19_g118087;
				float4 Coords234_g118058 = temp_output_37_0_g118058;
				float3 WorldPosition234_g118058 = temp_output_279_0_g118058;
				float4 localSampleStochastic2D234_g118058 = SampleStochastic2D( Texture234_g118058 , Sampler234_g118058 , Coords234_g118058 , WorldPosition234_g118058 );
				TEXTURE2D(Texture263_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler263_g118058 = SS19_g118087;
				half4 Coords263_g118058 = temp_output_37_0_g118058;
				half3 WorldPosition263_g118058 = temp_output_279_0_g118058;
				half3 WorldNormal263_g118058 = temp_output_280_0_g118058;
				half4 localSampleStochastic3D263_g118058 = SampleStochastic3D( Texture263_g118058 , Sampler263_g118058 , Coords263_g118058 , WorldPosition263_g118058 , WorldNormal263_g118058 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch676_g118054 = localSamplePlanar2D238_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch676_g118054 = localSamplePlanar3D246_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch676_g118054 = localSampleStochastic2D234_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch676_g118054 = localSampleStochastic3D263_g118058;
				#else
				float4 staticSwitch676_g118054 = localSamplePlanar2D238_g118058;
				#endif
				half3 Overlay_Albedo526_g118054 = (staticSwitch676_g118054).xyz;
				#ifdef TVE_OVERLAY_TEX
				float3 staticSwitch578_g118054 = ( temp_output_622_0_g118054 * Overlay_Albedo526_g118054 );
				#else
				float3 staticSwitch578_g118054 = temp_output_622_0_g118054;
				#endif
				float3 temp_output_6_0_g118065 = staticSwitch578_g118054;
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g118065 = ( temp_output_6_0_g118065 + ( _OverlayTextureMode * 0.0 ) );
				#else
				float3 staticSwitch14_g118065 = temp_output_6_0_g118065;
				#endif
				float3 temp_cast_34 = (0.0).xxx;
				TEXTURE2D(Texture246_g118062) = _OverlayGlitterTexRT;
				SamplerState Sampler246_g118062 = sampler_Linear_Repeat;
				float4 appendResult863_g118054 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g118062 = appendResult863_g118054;
				half4 Coords246_g118062 = temp_output_37_0_g118062;
				float3 temp_output_279_0_g118062 = Model_PositionWO602_g118054;
				half3 WorldPosition246_g118062 = temp_output_279_0_g118062;
				float3 temp_output_280_0_g118062 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118062 = temp_output_280_0_g118062;
				half4 localSamplePlanar3D246_g118062 = SamplePlanar3D( Texture246_g118062 , Sampler246_g118062 , Coords246_g118062 , WorldPosition246_g118062 , WorldNormal246_g118062 );
				half Overlay_GlitterTex854_g118054 = (localSamplePlanar3D246_g118062).x;
				half3 Model_PositionWS879_g118054 = Out_PositionWS15_g118089;
				#ifdef TVE_OVERLAY_GLITTER
				float3 staticSwitch868_g118054 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g118054 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g118054 ) / _OverlayGlitterDistValue ) ) ) );
				#else
				float3 staticSwitch868_g118054 = temp_cast_34;
				#endif
				half3 Overlay_GlitterColor865_g118054 = staticSwitch868_g118054;
				half Overlay_TexMask908_g118054 = 1.0;
				float3 temp_output_739_21_g118054 = Out_NormalWS4_g118055;
				half3 Visual_NormalWS749_g118054 = temp_output_739_21_g118054;
				float clampResult17_g118075 = clamp( saturate( (Visual_NormalWS749_g118054).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g118074 = _OverlayProjRemap.x;
				float temp_output_10_0_g118074 = ( _OverlayProjRemap.y - temp_output_7_0_g118074 );
				float lerpResult842_g118054 = lerp( 1.0 , saturate( ( ( clampResult17_g118075 - temp_output_7_0_g118074 ) / ( temp_output_10_0_g118074 + 0.0001 ) ) ) , _OverlayProjValue);
				half Overlay_MaskProj457_g118054 = lerpResult842_g118054;
				float temp_output_739_15_g118054 = Out_Luminosity4_g118055;
				half Visual_Luminosity654_g118054 = temp_output_739_15_g118054;
				float clampResult17_g118077 = clamp( Visual_Luminosity654_g118054 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118076 = _OverlayLumaRemap.x;
				float temp_output_10_0_g118076 = ( _OverlayLumaRemap.y - temp_output_7_0_g118076 );
				float lerpResult587_g118054 = lerp( 1.0 , saturate( ( ( clampResult17_g118077 - temp_output_7_0_g118076 ) / ( temp_output_10_0_g118076 + 0.0001 ) ) ) , _OverlayLumaValue);
				half Overlay_MaskLuma438_g118054 = lerpResult587_g118054;
				half Overlay_VertMask801_g118054 = 1.0;
				half Overlay_MaskNoise427_g118054 = 1.0;
				TVEGlobalData Data15_g118056 = Data204_g117810;
				float Out_Dummy15_g118056 = 0;
				float4 Out_CoatParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118056 = float4( 0,0,0,0 );
				Out_Dummy15_g118056 = Data15_g118056.Dummy;
				Out_CoatParams15_g118056 = Data15_g118056.CoatParams;
				Out_PaintParams15_g118056 = Data15_g118056.PaintParams;
				Out_GlowParams15_g118056 = Data15_g118056.GlowParams;
				Out_AtmoParams15_g118056= Data15_g118056.AtmoParams;
				Out_FadeParams15_g118056= Data15_g118056.FadeParams;
				Out_FormParams15_g118056 = Data15_g118056.FormParams;
				Out_LandParams15_g118056 = Data15_g118056.LandParams;
				Out_WindParams15_g118056 = Data15_g118056.WindParams;
				Out_PushParams15_g118056 = Data15_g118056.PushParams;
				half4 Global_AtmoParams516_g118054 = Out_AtmoParams15_g118056;
				#ifdef TVE_OVERLAY_ELEMENT
				float staticSwitch705_g118054 = ( (Global_AtmoParams516_g118054).z * TVE_IsEnabled );
				#else
				float staticSwitch705_g118054 = 1.0;
				#endif
				half Overlay_MaskGlobal429_g118054 = staticSwitch705_g118054;
				half Custom_Mask646_g118054 = 1.0;
				float temp_output_7_0_g118083 = _OverlayBlendRemap1.x;
				float temp_output_10_0_g118083 = ( _OverlayBlendRemap1.y - temp_output_7_0_g118083 );
				half Overlay_Mask494_g118054 = saturate( ( ( ( _OverlayIntensityValue * Overlay_TexMask908_g118054 * Overlay_MaskProj457_g118054 * Overlay_MaskLuma438_g118054 * Overlay_VertMask801_g118054 * Overlay_MaskNoise427_g118054 * Overlay_MaskGlobal429_g118054 * Custom_Mask646_g118054 ) - temp_output_7_0_g118083 ) / ( temp_output_10_0_g118083 + 0.0001 ) ) );
				float3 lerpResult467_g118054 = lerp( Visual_Albedo127_g118054 , ( staticSwitch14_g118065 + Overlay_GlitterColor865_g118054 ) , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float3 staticSwitch577_g118054 = lerpResult467_g118054;
				#else
				float3 staticSwitch577_g118054 = Visual_Albedo127_g118054;
				#endif
				half3 Final_Albedo493_g118054 = staticSwitch577_g118054;
				float3 In_Albedo3_g118057 = Final_Albedo493_g118054;
				float3 In_AlbedoRaw3_g118057 = Out_AlbedoRaw4_g118055;
				half2 Visual_NormalTS535_g118054 = Out_NormalTS4_g118055;
				TEXTURE2D(Texture238_g118060) = _OverlayNormalTex;
				float localFilterTexture29_g118088 = ( 0.0 );
				SamplerState SamplerDefault29_g118088 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g118088 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g118088 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g118088 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g118088 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g118088 = SamplerDefault29_g118088;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g118088 = SamplerDefault29_g118088;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g118088 = SamplerPoint29_g118088;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g118088 = SamplerLow29_g118088;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g118088 = SamplerMedium29_g118088;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g118088 = SamplerHigh29_g118088;
				#endif
				SamplerState Sampler238_g118060 = SS29_g118088;
				float4 temp_output_37_0_g118060 = Overlay_Coords639_g118054;
				half4 Coords238_g118060 = temp_output_37_0_g118060;
				float3 temp_output_279_0_g118060 = Model_PositionWO602_g118054;
				half3 WorldPosition238_g118060 = temp_output_279_0_g118060;
				half4 localSamplePlanar2D238_g118060 = SamplePlanar2D( Texture238_g118060 , Sampler238_g118060 , Coords238_g118060 , WorldPosition238_g118060 );
				TEXTURE2D(Texture246_g118060) = _OverlayNormalTex;
				SamplerState Sampler246_g118060 = SS29_g118088;
				half4 Coords246_g118060 = temp_output_37_0_g118060;
				half3 WorldPosition246_g118060 = temp_output_279_0_g118060;
				float3 temp_output_280_0_g118060 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118060 = temp_output_280_0_g118060;
				half4 localSamplePlanar3D246_g118060 = SamplePlanar3D( Texture246_g118060 , Sampler246_g118060 , Coords246_g118060 , WorldPosition246_g118060 , WorldNormal246_g118060 );
				TEXTURE2D(Texture234_g118060) = _OverlayNormalTex;
				SamplerState Sampler234_g118060 = SS29_g118088;
				float4 Coords234_g118060 = temp_output_37_0_g118060;
				float3 WorldPosition234_g118060 = temp_output_279_0_g118060;
				float4 localSampleStochastic2D234_g118060 = SampleStochastic2D( Texture234_g118060 , Sampler234_g118060 , Coords234_g118060 , WorldPosition234_g118060 );
				TEXTURE2D(Texture263_g118060) = _OverlayNormalTex;
				SamplerState Sampler263_g118060 = SS29_g118088;
				half4 Coords263_g118060 = temp_output_37_0_g118060;
				half3 WorldPosition263_g118060 = temp_output_279_0_g118060;
				half3 WorldNormal263_g118060 = temp_output_280_0_g118060;
				half4 localSampleStochastic3D263_g118060 = SampleStochastic3D( Texture263_g118060 , Sampler263_g118060 , Coords263_g118060 , WorldPosition263_g118060 , WorldNormal263_g118060 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch686_g118054 = localSamplePlanar2D238_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch686_g118054 = localSamplePlanar3D246_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch686_g118054 = localSampleStochastic2D234_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch686_g118054 = localSampleStochastic3D263_g118060;
				#else
				float4 staticSwitch686_g118054 = localSamplePlanar2D238_g118060;
				#endif
				half4 Normal_Packed45_g118064 = staticSwitch686_g118054;
				float2 appendResult58_g118064 = (float2(( (Normal_Packed45_g118064).x * (Normal_Packed45_g118064).w ) , (Normal_Packed45_g118064).y));
				half2 Normal_Default50_g118064 = appendResult58_g118064;
				half2 Normal_ASTC41_g118064 = (Normal_Packed45_g118064).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g118064 = Normal_ASTC41_g118064;
				#else
				float2 staticSwitch38_g118064 = Normal_Default50_g118064;
				#endif
				half2 Normal_NO_DTX544_g118064 = (Normal_Packed45_g118064).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g118064 = Normal_NO_DTX544_g118064;
				#else
				float2 staticSwitch37_g118064 = staticSwitch38_g118064;
				#endif
				half2 Normal_Planar45_g118063 = (staticSwitch37_g118064*2.0 + -1.0);
				float2 break71_g118063 = Normal_Planar45_g118063;
				float3 appendResult72_g118063 = (float3(break71_g118063.x , 0.0 , break71_g118063.y));
				half2 Overlay_Normal528_g118054 = (mul( ase_worldToTangent, appendResult72_g118063 )).xy;
				#ifdef TVE_OVERLAY_TEX
				float2 staticSwitch579_g118054 = Overlay_Normal528_g118054;
				#else
				float2 staticSwitch579_g118054 = Visual_NormalTS535_g118054;
				#endif
				float2 lerpResult551_g118054 = lerp( Visual_NormalTS535_g118054 , ( staticSwitch579_g118054 * _OverlayNormalValue ) , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float2 staticSwitch583_g118054 = lerpResult551_g118054;
				#else
				float2 staticSwitch583_g118054 = Visual_NormalTS535_g118054;
				#endif
				half2 Final_NormalTS499_g118054 = staticSwitch583_g118054;
				float2 In_NormalTS3_g118057 = Final_NormalTS499_g118054;
				float3 In_NormalWS3_g118057 = temp_output_739_21_g118054;
				half4 Visual_Masks536_g118054 = Out_Shader4_g118055;
				float4 appendResult585_g118054 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
				float4 lerpResult584_g118054 = lerp( Visual_Masks536_g118054 , appendResult585_g118054 , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float4 staticSwitch586_g118054 = lerpResult584_g118054;
				#else
				float4 staticSwitch586_g118054 = Visual_Masks536_g118054;
				#endif
				half4 Final_Masks482_g118054 = staticSwitch586_g118054;
				float4 In_Shader3_g118057 = Final_Masks482_g118054;
				float4 In_Emissive3_g118057 = Out_Emissive4_g118055;
				float temp_output_739_12_g118054 = Out_Grayscale4_g118055;
				float In_Grayscale3_g118057 = temp_output_739_12_g118054;
				float In_Luminosity3_g118057 = temp_output_739_15_g118054;
				float In_MultiMask3_g118057 = Out_MultiMask4_g118055;
				float In_AlphaClip3_g118057 = Out_AlphaClip4_g118055;
				float In_AlphaFade3_g118057 = Out_AlphaFade4_g118055;
				float3 In_Translucency3_g118057 = Out_Translucency4_g118055;
				half Visual_Transmission699_g118054 = Out_Transmission4_g118055;
				float lerpResult746_g118054 = lerp( Visual_Transmission699_g118054 , ( Visual_Transmission699_g118054 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g118054 * Overlay_MaskNoise427_g118054 * Overlay_MaskGlobal429_g118054 ));
				#ifdef TVE_OVERLAY
				float staticSwitch703_g118054 = lerpResult746_g118054;
				#else
				float staticSwitch703_g118054 = Visual_Transmission699_g118054;
				#endif
				half Final_Transmission702_g118054 = staticSwitch703_g118054;
				float In_Transmission3_g118057 = Final_Transmission702_g118054;
				float In_Thickness3_g118057 = Out_Thickness4_g118055;
				float In_Diffusion3_g118057 = Out_Diffusion4_g118055;
				Data3_g118057.Dummy = In_Dummy3_g118057;
				Data3_g118057.Albedo = In_Albedo3_g118057;
				Data3_g118057.AlbedoRaw = In_AlbedoRaw3_g118057;
				Data3_g118057.NormalTS = In_NormalTS3_g118057;
				Data3_g118057.NormalWS = In_NormalWS3_g118057;
				Data3_g118057.Shader = In_Shader3_g118057;
				Data3_g118057.Emissive= In_Emissive3_g118057;
				Data3_g118057.MultiMask = In_MultiMask3_g118057;
				Data3_g118057.Grayscale = In_Grayscale3_g118057;
				Data3_g118057.Luminosity = In_Luminosity3_g118057;
				Data3_g118057.AlphaClip = In_AlphaClip3_g118057;
				Data3_g118057.AlphaFade = In_AlphaFade3_g118057;
				Data3_g118057.Translucency = In_Translucency3_g118057;
				Data3_g118057.Transmission = In_Transmission3_g118057;
				Data3_g118057.Thickness = In_Thickness3_g118057;
				Data3_g118057.Diffusion = In_Diffusion3_g118057;
				TVEVisualData Data4_g118091 = Data3_g118057;
				float Out_Dummy4_g118091 = 0;
				float3 Out_Albedo4_g118091 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118091 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118091 = float2( 0,0 );
				float3 Out_NormalWS4_g118091 = float3( 0,0,0 );
				float4 Out_Shader4_g118091 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118091 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118091 = 0;
				float Out_Grayscale4_g118091 = 0;
				float Out_Luminosity4_g118091 = 0;
				float Out_AlphaClip4_g118091 = 0;
				float Out_AlphaFade4_g118091 = 0;
				float3 Out_Translucency4_g118091 = float3( 0,0,0 );
				float Out_Transmission4_g118091 = 0;
				float Out_Thickness4_g118091 = 0;
				float Out_Diffusion4_g118091 = 0;
				Out_Dummy4_g118091 = Data4_g118091.Dummy;
				Out_Albedo4_g118091 = Data4_g118091.Albedo;
				Out_AlbedoRaw4_g118091 = Data4_g118091.AlbedoRaw;
				Out_NormalTS4_g118091 = Data4_g118091.NormalTS;
				Out_NormalWS4_g118091 = Data4_g118091.NormalWS;
				Out_Shader4_g118091 = Data4_g118091.Shader;
				Out_Emissive4_g118091= Data4_g118091.Emissive;
				Out_MultiMask4_g118091 = Data4_g118091.MultiMask;
				Out_Grayscale4_g118091 = Data4_g118091.Grayscale;
				Out_Luminosity4_g118091= Data4_g118091.Luminosity;
				Out_AlphaClip4_g118091 = Data4_g118091.AlphaClip;
				Out_AlphaFade4_g118091 = Data4_g118091.AlphaFade;
				Out_Translucency4_g118091 = Data4_g118091.Translucency;
				Out_Transmission4_g118091 = Data4_g118091.Transmission;
				Out_Thickness4_g118091 = Data4_g118091.Thickness;
				Out_Diffusion4_g118091 = Data4_g118091.Diffusion;
				half3 Visual_Albedo127_g118090 = Out_Albedo4_g118091;
				TVEGlobalData Data15_g118096 = Data204_g117810;
				float Out_Dummy15_g118096 = 0;
				float4 Out_CoatParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118096 = float4( 0,0,0,0 );
				Out_Dummy15_g118096 = Data15_g118096.Dummy;
				Out_CoatParams15_g118096 = Data15_g118096.CoatParams;
				Out_PaintParams15_g118096 = Data15_g118096.PaintParams;
				Out_GlowParams15_g118096 = Data15_g118096.GlowParams;
				Out_AtmoParams15_g118096= Data15_g118096.AtmoParams;
				Out_FadeParams15_g118096= Data15_g118096.FadeParams;
				Out_FormParams15_g118096 = Data15_g118096.FormParams;
				Out_LandParams15_g118096 = Data15_g118096.LandParams;
				Out_WindParams15_g118096 = Data15_g118096.WindParams;
				Out_PushParams15_g118096 = Data15_g118096.PushParams;
				half4 Global_AtmoParams516_g118090 = Out_AtmoParams15_g118096;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch663_g118090 = ( (Global_AtmoParams516_g118090).y * TVE_IsEnabled );
				#else
				float staticSwitch663_g118090 = 1.0;
				#endif
				half Global_Wetness429_g118090 = staticSwitch663_g118090;
				half Wetness_Value1042_g118090 = ( _WetnessIntensityValue * Global_Wetness429_g118090 );
				half Wetness_VertMask1024_g118090 = 1.0;
				float temp_output_1043_0_g118090 = ( Wetness_Value1042_g118090 * Wetness_VertMask1024_g118090 );
				half Wetness_Mask866_g118090 = temp_output_1043_0_g118090;
				half Water_VertMask1094_g118090 = 1.0;
				half4 Visual_Masks536_g118090 = Out_Shader4_g118091;
				float lerpResult1013_g118090 = lerp( 1.0 , (Visual_Masks536_g118090).z , _WetnessWaterBaseValue);
				half Water_HeightMask782_g118090 = lerpResult1013_g118090;
				float clampResult17_g118105 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g118090 * Water_VertMask1094_g118090 ) - Water_HeightMask782_g118090 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g118106 = _WetnessWaterBlendRemap.x;
				float temp_output_10_0_g118106 = ( _WetnessWaterBlendRemap.y - temp_output_7_0_g118106 );
				TVEModelData Data15_g118104 = Data16_g117809;
				float Out_Dummy15_g118104 = 0;
				float3 Out_PositionWS15_g118104 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118104 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118104 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118104 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118104 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g118104 = float3( 0,0,0 );
				float4 Out_VertexData15_g118104 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118104 = float4( 0,0,0,0 );
				Out_Dummy15_g118104 = Data15_g118104.Dummy;
				Out_PositionWS15_g118104 = Data15_g118104.PositionWS;
				Out_PositionWO15_g118104 = Data15_g118104.PositionWO;
				Out_PivotWS15_g118104 = Data15_g118104.PivotWS;
				Out_PivotWO15_g118104 = Data15_g118104.PivotWO;
				Out_NormalWS15_g118104 = Data15_g118104.NormalWS;
				Out_ViewDirWS15_g118104 = Data15_g118104.ViewDirWS;
				Out_VertexData15_g118104 = Data15_g118104.VertexData;
				Out_BoundsData15_g118104 = Data15_g118104.BoundsData;
				half3 Model_NormalWS798_g118090 = Out_NormalWS15_g118104;
				float temp_output_786_0_g118090 = saturate( (Model_NormalWS798_g118090).y );
				half Wetness_ProjMask790_g118090 = temp_output_786_0_g118090;
				half Water_Mask760_g118090 = ( saturate( ( ( clampResult17_g118105 - temp_output_7_0_g118106 ) / ( temp_output_10_0_g118106 + 0.0001 ) ) ) * Wetness_ProjMask790_g118090 );
				float3 lerpResult918_g118090 = lerp( Visual_Albedo127_g118090 , ( Visual_Albedo127_g118090 * (_WetnessWaterColor).rgb ) , Water_Mask760_g118090);
				#ifdef TVE_WETNESS_WATER
				float3 staticSwitch946_g118090 = lerpResult918_g118090;
				#else
				float3 staticSwitch946_g118090 = Visual_Albedo127_g118090;
				#endif
				float3 lerpResult768_g118090 = lerp( staticSwitch946_g118090 , ( staticSwitch946_g118090 * staticSwitch946_g118090 ) , _WetnessContrastValue);
				float3 lerpResult651_g118090 = lerp( Visual_Albedo127_g118090 , lerpResult768_g118090 , Wetness_Mask866_g118090);
				#ifdef TVE_WETNESS
				float3 staticSwitch577_g118090 = lerpResult651_g118090;
				#else
				float3 staticSwitch577_g118090 = Visual_Albedo127_g118090;
				#endif
				half3 Final_Albedo493_g118090 = staticSwitch577_g118090;
				float3 In_Albedo3_g118092 = Final_Albedo493_g118090;
				float3 In_AlbedoRaw3_g118092 = Out_AlbedoRaw4_g118091;
				half2 Visual_Normal535_g118090 = Out_NormalTS4_g118091;
				float lerpResult877_g118090 = lerp( 1.0 , 0.0 , ( Water_Mask760_g118090 * Water_Mask760_g118090 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch957_g118090 = ( Visual_Normal535_g118090 * lerpResult877_g118090 );
				#else
				float2 staticSwitch957_g118090 = Visual_Normal535_g118090;
				#endif
				float2 temp_cast_35 = (0.0).xx;
				TEXTURE2D(Texture238_g118102) = _WetnessDropsTexRT;
				SamplerState Sampler238_g118102 = sampler_Linear_Repeat_Aniso8;
				float4 appendResult924_g118090 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g118102 = appendResult924_g118090;
				half4 Coords238_g118102 = temp_output_37_0_g118102;
				half3 Model_PositionWO602_g118090 = Out_PositionWO15_g118104;
				float3 temp_output_279_0_g118102 = Model_PositionWO602_g118090;
				half3 WorldPosition238_g118102 = temp_output_279_0_g118102;
				half4 localSamplePlanar2D238_g118102 = SamplePlanar2D( Texture238_g118102 , Sampler238_g118102 , Coords238_g118102 , WorldPosition238_g118102 );
				float4 temp_output_1010_0_g118090 = localSamplePlanar2D238_g118102;
				half2 Rain_DropsNormal919_g118090 = (temp_output_1010_0_g118090).zw;
				float2 temp_output_903_0_g118090 = (Rain_DropsNormal919_g118090*2.0 + -1.0);
				half2 Rain_RingsNormal713_g118090 = (temp_output_1010_0_g118090).xy;
				float2 lerpResult904_g118090 = lerp( temp_output_903_0_g118090 , (Rain_RingsNormal713_g118090*2.0 + -1.0) , ( Water_Mask760_g118090 * Water_Mask760_g118090 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch960_g118090 = lerpResult904_g118090;
				#else
				float2 staticSwitch960_g118090 = temp_output_903_0_g118090;
				#endif
				half2 Rain_Drops1002_g118090 = ( staticSwitch960_g118090 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
				half3 Model_PositionWS823_g118090 = Out_PositionWS15_g118104;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch949_g118090 = ( (Global_AtmoParams516_g118090).w * TVE_IsEnabled );
				#else
				float staticSwitch949_g118090 = 1.0;
				#endif
				half Global_Rain955_g118090 = staticSwitch949_g118090;
				half Rain_Value1067_g118090 = Global_Rain955_g118090;
				half Rain_VertMask1108_g118090 = 1.0;
				half Rain_Mask999_g118090 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g118090 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g118090 * Rain_VertMask1108_g118090 );
				half2 Normal_Planar45_g118101 = ( Rain_Drops1002_g118090 * Rain_Mask999_g118090 * Wetness_ProjMask790_g118090 );
				float2 break71_g118101 = Normal_Planar45_g118101;
				float3 appendResult72_g118101 = (float3(break71_g118101.x , 0.0 , break71_g118101.y));
				half2 Wetness_Normal526_g118090 = (mul( ase_worldToTangent, appendResult72_g118101 )).xy;
				#ifdef TVE_WETNESS_DROPS
				float2 staticSwitch583_g118090 = Wetness_Normal526_g118090;
				#else
				float2 staticSwitch583_g118090 = temp_cast_35;
				#endif
				#ifdef TVE_WETNESS
				float2 staticSwitch774_g118090 = ( staticSwitch957_g118090 + staticSwitch583_g118090 );
				#else
				float2 staticSwitch774_g118090 = Visual_Normal535_g118090;
				#endif
				half2 Final_Normal499_g118090 = staticSwitch774_g118090;
				float2 In_NormalTS3_g118092 = Final_Normal499_g118090;
				float3 In_NormalWS3_g118092 = Out_NormalWS4_g118091;
				float4 break658_g118090 = Visual_Masks536_g118090;
				float temp_output_935_0_g118090 = ( Wetness_Mask866_g118090 * _WetnessSmoothnessValue );
				float lerpResult941_g118090 = lerp( temp_output_935_0_g118090 , 2.0 , Water_Mask760_g118090);
				#ifdef TVE_WETNESS_WATER
				float staticSwitch959_g118090 = lerpResult941_g118090;
				#else
				float staticSwitch959_g118090 = temp_output_935_0_g118090;
				#endif
				float4 appendResult661_g118090 = (float4(break658_g118090.x , break658_g118090.y , break658_g118090.z , saturate( ( break658_g118090.w + staticSwitch959_g118090 ) )));
				#ifdef TVE_WETNESS
				float4 staticSwitch586_g118090 = appendResult661_g118090;
				#else
				float4 staticSwitch586_g118090 = Visual_Masks536_g118090;
				#endif
				half4 Final_Masks482_g118090 = staticSwitch586_g118090;
				float4 In_Shader3_g118092 = Final_Masks482_g118090;
				float4 In_Emissive3_g118092 = Out_Emissive4_g118091;
				float In_Grayscale3_g118092 = Out_Grayscale4_g118091;
				float In_Luminosity3_g118092 = Out_Luminosity4_g118091;
				float In_MultiMask3_g118092 = Out_MultiMask4_g118091;
				float In_AlphaClip3_g118092 = Out_AlphaClip4_g118091;
				float In_AlphaFade3_g118092 = Out_AlphaFade4_g118091;
				float3 In_Translucency3_g118092 = Out_Translucency4_g118091;
				float In_Transmission3_g118092 = Out_Transmission4_g118091;
				float In_Thickness3_g118092 = Out_Thickness4_g118091;
				float In_Diffusion3_g118092 = Out_Diffusion4_g118091;
				Data3_g118092.Dummy = In_Dummy3_g118092;
				Data3_g118092.Albedo = In_Albedo3_g118092;
				Data3_g118092.AlbedoRaw = In_AlbedoRaw3_g118092;
				Data3_g118092.NormalTS = In_NormalTS3_g118092;
				Data3_g118092.NormalWS = In_NormalWS3_g118092;
				Data3_g118092.Shader = In_Shader3_g118092;
				Data3_g118092.Emissive= In_Emissive3_g118092;
				Data3_g118092.MultiMask = In_MultiMask3_g118092;
				Data3_g118092.Grayscale = In_Grayscale3_g118092;
				Data3_g118092.Luminosity = In_Luminosity3_g118092;
				Data3_g118092.AlphaClip = In_AlphaClip3_g118092;
				Data3_g118092.AlphaFade = In_AlphaFade3_g118092;
				Data3_g118092.Translucency = In_Translucency3_g118092;
				Data3_g118092.Transmission = In_Transmission3_g118092;
				Data3_g118092.Thickness = In_Thickness3_g118092;
				Data3_g118092.Diffusion = In_Diffusion3_g118092;
				TVEVisualData Data4_g118128 = Data3_g118092;
				float Out_Dummy4_g118128 = 0;
				float3 Out_Albedo4_g118128 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118128 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118128 = float2( 0,0 );
				float3 Out_NormalWS4_g118128 = float3( 0,0,0 );
				float4 Out_Shader4_g118128 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118128 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118128 = 0;
				float Out_Grayscale4_g118128 = 0;
				float Out_Luminosity4_g118128 = 0;
				float Out_AlphaClip4_g118128 = 0;
				float Out_AlphaFade4_g118128 = 0;
				float3 Out_Translucency4_g118128 = float3( 0,0,0 );
				float Out_Transmission4_g118128 = 0;
				float Out_Thickness4_g118128 = 0;
				float Out_Diffusion4_g118128 = 0;
				Out_Dummy4_g118128 = Data4_g118128.Dummy;
				Out_Albedo4_g118128 = Data4_g118128.Albedo;
				Out_AlbedoRaw4_g118128 = Data4_g118128.AlbedoRaw;
				Out_NormalTS4_g118128 = Data4_g118128.NormalTS;
				Out_NormalWS4_g118128 = Data4_g118128.NormalWS;
				Out_Shader4_g118128 = Data4_g118128.Shader;
				Out_Emissive4_g118128= Data4_g118128.Emissive;
				Out_MultiMask4_g118128 = Data4_g118128.MultiMask;
				Out_Grayscale4_g118128 = Data4_g118128.Grayscale;
				Out_Luminosity4_g118128= Data4_g118128.Luminosity;
				Out_AlphaClip4_g118128 = Data4_g118128.AlphaClip;
				Out_AlphaFade4_g118128 = Data4_g118128.AlphaFade;
				Out_Translucency4_g118128 = Data4_g118128.Translucency;
				Out_Transmission4_g118128 = Data4_g118128.Transmission;
				Out_Thickness4_g118128 = Data4_g118128.Thickness;
				Out_Diffusion4_g118128 = Data4_g118128.Diffusion;
				float3 temp_output_297_0_g118119 = Out_Albedo4_g118128;
				float3 In_Albedo3_g118129 = temp_output_297_0_g118119;
				float3 temp_output_297_23_g118119 = Out_AlbedoRaw4_g118128;
				float3 In_AlbedoRaw3_g118129 = temp_output_297_23_g118119;
				float2 In_NormalTS3_g118129 = Out_NormalTS4_g118128;
				float3 In_NormalWS3_g118129 = Out_NormalWS4_g118128;
				float4 In_Shader3_g118129 = Out_Shader4_g118128;
				float4 temp_cast_36 = (0.0).xxxx;
				half4 Visual_Emissive255_g118119 = Out_Emissive4_g118128;
				half Emissive_MeshMask221_g118119 = 1.0;
				half Emissive_Mask103_g118119 = 1.0;
				float temp_output_279_0_g118119 = ( Emissive_MeshMask221_g118119 * Emissive_Mask103_g118119 );
				float3 appendResult293_g118119 = (float3(temp_output_279_0_g118119 , temp_output_279_0_g118119 , temp_output_279_0_g118119));
				half3 Local_EmissiveColor278_g118119 = appendResult293_g118119;
				float3 temp_cast_37 = (1.0).xxx;
				TVEGlobalData Data15_g118120 = Data204_g117810;
				float Out_Dummy15_g118120 = 0;
				float4 Out_CoatParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118120 = float4( 0,0,0,0 );
				Out_Dummy15_g118120 = Data15_g118120.Dummy;
				Out_CoatParams15_g118120 = Data15_g118120.CoatParams;
				Out_PaintParams15_g118120 = Data15_g118120.PaintParams;
				Out_GlowParams15_g118120 = Data15_g118120.GlowParams;
				Out_AtmoParams15_g118120= Data15_g118120.AtmoParams;
				Out_FadeParams15_g118120= Data15_g118120.FadeParams;
				Out_FormParams15_g118120 = Data15_g118120.FormParams;
				Out_LandParams15_g118120 = Data15_g118120.LandParams;
				Out_WindParams15_g118120 = Data15_g118120.WindParams;
				Out_PushParams15_g118120 = Data15_g118120.PushParams;
				half4 Global_GlowParams179_g118119 = Out_GlowParams15_g118120;
				float3 lerpResult299_g118119 = lerp( float3( 1,1,1 ) , (Global_GlowParams179_g118119).xyz , TVE_IsEnabled);
				#ifdef TVE_EMISSIVE_ELEMENT
				float3 staticSwitch228_g118119 = lerpResult299_g118119;
				#else
				float3 staticSwitch228_g118119 = temp_cast_37;
				#endif
				half3 Emissive_GlobalMask248_g118119 = staticSwitch228_g118119;
				half3 Visual_AlbedoRaw306_g118119 = temp_output_297_23_g118119;
				float3 lerpResult307_g118119 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g118119 , _EmissiveColorMode);
				half3 Local_EmissiveValue88_g118119 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g118119 * lerpResult307_g118119 );
				half3 Emissive_Blend260_g118119 = ( ( (Visual_Emissive255_g118119).xyz * Local_EmissiveColor278_g118119 ) * Local_EmissiveValue88_g118119 );
				float3 temp_output_3_0_g118133 = Emissive_Blend260_g118119;
				float temp_output_15_0_g118133 = _emissive_power_value;
				float3 hdEmission22_g118133 = ASEGetEmissionHDRColor(temp_output_3_0_g118133,temp_output_15_0_g118133,_EmissiveExposureValue,GetInverseCurrentExposureMultiplier());
				half Local_EmissiveMask294_g118119 = temp_output_279_0_g118119;
				float4 appendResult295_g118119 = (float4(hdEmission22_g118133 , Local_EmissiveMask294_g118119));
				#ifdef TVE_EMISSIVE
				float4 staticSwitch129_g118119 = appendResult295_g118119;
				#else
				float4 staticSwitch129_g118119 = temp_cast_36;
				#endif
				half4 Final_Emissive184_g118119 = staticSwitch129_g118119;
				float4 In_Emissive3_g118129 = Final_Emissive184_g118119;
				float In_Grayscale3_g118129 = Out_Grayscale4_g118128;
				float In_Luminosity3_g118129 = Out_Luminosity4_g118128;
				float temp_output_297_11_g118119 = Out_MultiMask4_g118128;
				float In_MultiMask3_g118129 = temp_output_297_11_g118119;
				float In_AlphaClip3_g118129 = Out_AlphaClip4_g118128;
				float In_AlphaFade3_g118129 = Out_AlphaFade4_g118128;
				float3 In_Translucency3_g118129 = Out_Translucency4_g118128;
				float In_Transmission3_g118129 = Out_Transmission4_g118128;
				float In_Thickness3_g118129 = Out_Thickness4_g118128;
				float In_Diffusion3_g118129 = Out_Diffusion4_g118128;
				Data3_g118129.Dummy = In_Dummy3_g118129;
				Data3_g118129.Albedo = In_Albedo3_g118129;
				Data3_g118129.AlbedoRaw = In_AlbedoRaw3_g118129;
				Data3_g118129.NormalTS = In_NormalTS3_g118129;
				Data3_g118129.NormalWS = In_NormalWS3_g118129;
				Data3_g118129.Shader = In_Shader3_g118129;
				Data3_g118129.Emissive= In_Emissive3_g118129;
				Data3_g118129.MultiMask = In_MultiMask3_g118129;
				Data3_g118129.Grayscale = In_Grayscale3_g118129;
				Data3_g118129.Luminosity = In_Luminosity3_g118129;
				Data3_g118129.AlphaClip = In_AlphaClip3_g118129;
				Data3_g118129.AlphaFade = In_AlphaFade3_g118129;
				Data3_g118129.Translucency = In_Translucency3_g118129;
				Data3_g118129.Transmission = In_Transmission3_g118129;
				Data3_g118129.Thickness = In_Thickness3_g118129;
				Data3_g118129.Diffusion = In_Diffusion3_g118129;
				TVEVisualData Data4_g118145 = Data3_g118129;
				float Out_Dummy4_g118145 = 0;
				float3 Out_Albedo4_g118145 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118145 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118145 = float2( 0,0 );
				float3 Out_NormalWS4_g118145 = float3( 0,0,0 );
				float4 Out_Shader4_g118145 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118145 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118145 = 0;
				float Out_Grayscale4_g118145 = 0;
				float Out_Luminosity4_g118145 = 0;
				float Out_AlphaClip4_g118145 = 0;
				float Out_AlphaFade4_g118145 = 0;
				float3 Out_Translucency4_g118145 = float3( 0,0,0 );
				float Out_Transmission4_g118145 = 0;
				float Out_Thickness4_g118145 = 0;
				float Out_Diffusion4_g118145 = 0;
				Out_Dummy4_g118145 = Data4_g118145.Dummy;
				Out_Albedo4_g118145 = Data4_g118145.Albedo;
				Out_AlbedoRaw4_g118145 = Data4_g118145.AlbedoRaw;
				Out_NormalTS4_g118145 = Data4_g118145.NormalTS;
				Out_NormalWS4_g118145 = Data4_g118145.NormalWS;
				Out_Shader4_g118145 = Data4_g118145.Shader;
				Out_Emissive4_g118145= Data4_g118145.Emissive;
				Out_MultiMask4_g118145 = Data4_g118145.MultiMask;
				Out_Grayscale4_g118145 = Data4_g118145.Grayscale;
				Out_Luminosity4_g118145= Data4_g118145.Luminosity;
				Out_AlphaClip4_g118145 = Data4_g118145.AlphaClip;
				Out_AlphaFade4_g118145 = Data4_g118145.AlphaFade;
				Out_Translucency4_g118145 = Data4_g118145.Translucency;
				Out_Transmission4_g118145 = Data4_g118145.Transmission;
				Out_Thickness4_g118145 = Data4_g118145.Thickness;
				Out_Diffusion4_g118145 = Data4_g118145.Diffusion;
				float3 In_Albedo3_g118135 = Out_Albedo4_g118145;
				float3 In_AlbedoRaw3_g118135 = Out_AlbedoRaw4_g118145;
				float2 In_NormalTS3_g118135 = Out_NormalTS4_g118145;
				float3 In_NormalWS3_g118135 = Out_NormalWS4_g118145;
				float4 In_Shader3_g118135 = Out_Shader4_g118145;
				float4 In_Emissive3_g118135 = Out_Emissive4_g118145;
				float In_Grayscale3_g118135 = Out_Grayscale4_g118145;
				float In_Luminosity3_g118135 = Out_Luminosity4_g118145;
				float temp_output_836_11_g118134 = Out_MultiMask4_g118145;
				float In_MultiMask3_g118135 = temp_output_836_11_g118134;
				half Visual_AlphaClip667_g118134 = Out_AlphaClip4_g118145;
				half Input_True57_g118142 = Visual_AlphaClip667_g118134;
				half True36_g118142 = Input_True57_g118142;
				TVEGlobalData Data15_g118144 = Data204_g117810;
				float Out_Dummy15_g118144 = 0;
				float4 Out_CoatParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118144 = float4( 0,0,0,0 );
				Out_Dummy15_g118144 = Data15_g118144.Dummy;
				Out_CoatParams15_g118144 = Data15_g118144.CoatParams;
				Out_PaintParams15_g118144 = Data15_g118144.PaintParams;
				Out_GlowParams15_g118144 = Data15_g118144.GlowParams;
				Out_AtmoParams15_g118144= Data15_g118144.AtmoParams;
				Out_FadeParams15_g118144= Data15_g118144.FadeParams;
				Out_FormParams15_g118144 = Data15_g118144.FormParams;
				Out_LandParams15_g118144 = Data15_g118144.LandParams;
				Out_WindParams15_g118144 = Data15_g118144.WindParams;
				Out_PushParams15_g118144 = Data15_g118144.PushParams;
				half4 Global_FadeParams516_g118134 = Out_FadeParams15_g118144;
				#ifdef TVE_CUTOUT_ELEMENT
				float staticSwitch663_g118134 = saturate( (Global_FadeParams516_g118134).w );
				#else
				float staticSwitch663_g118134 = 1.0;
				#endif
				half Local_GlobalMask429_g118134 = staticSwitch663_g118134;
				half Local_AlphaMask814_g118134 = 1.0;
				half Local_NoiseMask678_g118134 = 1.0;
				half Local_VertMask766_g118134 = 1.0;
				half Local_MultiMask685_g118134 = 1.0;
				float lerpResult728_g118134 = lerp( Visual_AlphaClip667_g118134 , min( Visual_AlphaClip667_g118134 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g118134 ) - ( Local_AlphaMask814_g118134 * Local_NoiseMask678_g118134 * Local_VertMask766_g118134 ) ) ) ) , Local_MultiMask685_g118134);
				half Local_AlphaClip784_g118134 = lerpResult728_g118134;
				half Input_False58_g118142 = Local_AlphaClip784_g118134;
				half False36_g118142 = Input_False58_g118142;
				half localShadowPassCheck36_g118142 = ShadowPassCheck36_g118142( True36_g118142 , False36_g118142 );
				#ifdef TVE_CUTOUT_SHADOW
				float staticSwitch791_g118134 = Local_AlphaClip784_g118134;
				#else
				float staticSwitch791_g118134 = localShadowPassCheck36_g118142;
				#endif
				float temp_output_6_0_g118143 = staticSwitch791_g118134;
				#ifdef TVE_REGISTER
				float staticSwitch14_g118143 = ( temp_output_6_0_g118143 + ( _CutoutShadowMode * 0.0 ) );
				#else
				float staticSwitch14_g118143 = temp_output_6_0_g118143;
				#endif
				float temp_output_798_0_g118134 = staticSwitch14_g118143;
				#ifdef TVE_CUTOUT
				float staticSwitch577_g118134 = temp_output_798_0_g118134;
				#else
				float staticSwitch577_g118134 = Visual_AlphaClip667_g118134;
				#endif
				half Final_AlphaClip795_g118134 = staticSwitch577_g118134;
				float In_AlphaClip3_g118135 = Final_AlphaClip795_g118134;
				float In_AlphaFade3_g118135 = Out_AlphaFade4_g118145;
				float3 In_Translucency3_g118135 = Out_Translucency4_g118145;
				float In_Transmission3_g118135 = Out_Transmission4_g118145;
				float In_Thickness3_g118135 = Out_Thickness4_g118145;
				float In_Diffusion3_g118135 = Out_Diffusion4_g118145;
				Data3_g118135.Dummy = In_Dummy3_g118135;
				Data3_g118135.Albedo = In_Albedo3_g118135;
				Data3_g118135.AlbedoRaw = In_AlbedoRaw3_g118135;
				Data3_g118135.NormalTS = In_NormalTS3_g118135;
				Data3_g118135.NormalWS = In_NormalWS3_g118135;
				Data3_g118135.Shader = In_Shader3_g118135;
				Data3_g118135.Emissive= In_Emissive3_g118135;
				Data3_g118135.MultiMask = In_MultiMask3_g118135;
				Data3_g118135.Grayscale = In_Grayscale3_g118135;
				Data3_g118135.Luminosity = In_Luminosity3_g118135;
				Data3_g118135.AlphaClip = In_AlphaClip3_g118135;
				Data3_g118135.AlphaFade = In_AlphaFade3_g118135;
				Data3_g118135.Translucency = In_Translucency3_g118135;
				Data3_g118135.Transmission = In_Transmission3_g118135;
				Data3_g118135.Thickness = In_Thickness3_g118135;
				Data3_g118135.Diffusion = In_Diffusion3_g118135;
				TVEVisualData Data4_g118158 = Data3_g118135;
				float Out_Dummy4_g118158 = 0;
				float3 Out_Albedo4_g118158 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118158 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118158 = float2( 0,0 );
				float3 Out_NormalWS4_g118158 = float3( 0,0,0 );
				float4 Out_Shader4_g118158 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118158 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118158 = 0;
				float Out_Grayscale4_g118158 = 0;
				float Out_Luminosity4_g118158 = 0;
				float Out_AlphaClip4_g118158 = 0;
				float Out_AlphaFade4_g118158 = 0;
				float3 Out_Translucency4_g118158 = float3( 0,0,0 );
				float Out_Transmission4_g118158 = 0;
				float Out_Thickness4_g118158 = 0;
				float Out_Diffusion4_g118158 = 0;
				Out_Dummy4_g118158 = Data4_g118158.Dummy;
				Out_Albedo4_g118158 = Data4_g118158.Albedo;
				Out_AlbedoRaw4_g118158 = Data4_g118158.AlbedoRaw;
				Out_NormalTS4_g118158 = Data4_g118158.NormalTS;
				Out_NormalWS4_g118158 = Data4_g118158.NormalWS;
				Out_Shader4_g118158 = Data4_g118158.Shader;
				Out_Emissive4_g118158= Data4_g118158.Emissive;
				Out_MultiMask4_g118158 = Data4_g118158.MultiMask;
				Out_Grayscale4_g118158 = Data4_g118158.Grayscale;
				Out_Luminosity4_g118158= Data4_g118158.Luminosity;
				Out_AlphaClip4_g118158 = Data4_g118158.AlphaClip;
				Out_AlphaFade4_g118158 = Data4_g118158.AlphaFade;
				Out_Translucency4_g118158 = Data4_g118158.Translucency;
				Out_Transmission4_g118158 = Data4_g118158.Transmission;
				Out_Thickness4_g118158 = Data4_g118158.Thickness;
				Out_Diffusion4_g118158 = Data4_g118158.Diffusion;
				float temp_output_3_0_g118160 = Out_AlphaClip4_g118158;
				float Alpha19_g118160 = temp_output_3_0_g118160;
				float temp_output_15_0_g118160 = 0.5;
				float Treshold19_g118160 = temp_output_15_0_g118160;
				#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_DITHER)
				#if defined ( TVE_PIPELINE_HD)
				#if !defined(SHADERPASS_FORWARD_BYPASS_ALPHA_TEST) && !defined(SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST)
				clip(Alpha19_g118160 - Treshold19_g118160);
				#endif
				#else
				clip(Alpha19_g118160 - Treshold19_g118160);
				#endif
				#endif
				
				surfaceDescription.Alpha = Alpha19_g118160;

				#ifdef _ALPHATEST_ON
				surfaceDescription.AlphaClipThreshold = _AlphaCutoff;
				#endif

				#ifdef _DEPTHOFFSET_ON
				surfaceDescription.DepthOffset = 0;
				#endif

				SurfaceData surfaceData;
				BuiltinData builtinData;
				GetSurfaceAndBuiltinData(surfaceDescription, input, V, posInput, surfaceData, builtinData);

				#ifdef _DEPTHOFFSET_ON
				outputDepth = posInput.deviceDepth;
				#endif

				outColor = float4( _ObjectId, _PassValue, 1.0, 1.0 );
			}
			ENDHLSL
		}

		UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
	UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"

		Pass
		{
			
			Name "DepthOnly"
			Tags { "LightMode"="DepthOnly" }

			Cull [_CullMode]
			ZWrite On

			Stencil
			{
				Ref [_StencilRefDepth]
				WriteMask [_StencilWriteMaskDepth]
				Comp Always
				Pass Replace
			}


			HLSLPROGRAM
			#define _ENERGY_CONSERVING_SPECULAR 1
			#define SUPPORT_BLENDMODE_PRESERVE_SPECULAR_LIGHTING
			#pragma shader_feature_local_fragment _ _DISABLE_DECALS
			#define _SPECULAR_OCCLUSION_FROM_AO 1
			#define ASE_ABSOLUTE_VERTEX_POS 1
			#define _MATERIAL_FEATURE_SPECULAR_COLOR 1
			#define _AMBIENT_OCCLUSION 1
			#define HAVE_MESH_MODIFICATION
			#define ASE_SRP_VERSION 170003
			#define ASE_USING_SAMPLING_MACROS 1

			#pragma multi_compile _ DOTS_INSTANCING_ON

            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
            #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC _TRANSPARENT_REFRACTIVE_SORT
            #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT

            #pragma multi_compile _ WRITE_NORMAL_BUFFER
            #pragma multi_compile_fragment _ WRITE_MSAA_DEPTH
            #pragma multi_compile_fragment _ WRITE_DECAL_BUFFER WRITE_RENDERING_LAYER

			#pragma vertex Vert
			#pragma fragment Frag

            #define SHADERPASS SHADERPASS_DEPTH_ONLY

			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/DebugMipmapStreamingMacros.hlsl"
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl"

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"

            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
                #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
                #define RAYTRACING_SHADER_GRAPH_LOW
            #endif

            #ifndef SHADER_UNLIT
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif

			#if defined(_DOUBLESIDED_ON) && !defined(ASE_NEED_CULLFACE)
			    #define ASE_NEED_CULLFACE 1
			#endif

            #if _MATERIAL_FEATURE_COLORED_TRANSMISSION
            #undef _MATERIAL_FEATURE_CLEAR_COAT
            #endif

		    #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
			#define OUTPUT_SPLIT_LIGHTING
		    #endif

		    #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
			#undef  _REFRACTION_PLANE
			#undef  _REFRACTION_SPHERE
			#define _REFRACTION_THIN
		    #endif

            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif

            #if SHADERPASS == SHADERPASS_MOTION_VECTORS && defined(WRITE_DECAL_BUFFER_AND_RENDERING_LAYER)
                #define WRITE_DECAL_BUFFER
            #endif

            #ifndef DEBUG_DISPLAY
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif

            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif

            #if (defined(_TRANSPARENT_WRITES_MOTION_VEC) || defined(_TRANSPARENT_REFRACTIVE_SORT)) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif

			CBUFFER_START( UnityPerMaterial )
			half4 _TerrainShaderMax13;
			half4 _TerrainCoord8;
			half4 _TerrainShaderMin8;
			half4 _TerrainShaderMax8;
			half4 _TerrainCoord9;
			half4 _TerrainShaderMin9;
			half4 _TerrainShaderMax9;
			half4 _TerrainCoord10;
			half4 _TerrainShaderMax7;
			half4 _TerrainShaderMin10;
			half4 _TerrainCoord11;
			half4 _TerrainShaderMin11;
			half4 _TerrainShaderMax11;
			half4 _TerrainCoord12;
			half4 _TerrainShaderMin12;
			half4 _TerrainShaderMax12;
			half4 _TerrainCoord13;
			half4 _TerrainShaderMax10;
			half4 _TerrainShaderMin13;
			half4 _TerrainShaderMin7;
			half4 _TerrainShaderMax6;
			half4 _TerrainShaderMin1;
			half4 _TerrainShaderMax1;
			half4 _TerrainCoord2;
			half4 _TerrainShaderMin2;
			half4 _TerrainShaderMax2;
			half4 _TerrainCoord3;
			half4 _TerrainShaderMin3;
			half4 _TerrainCoord7;
			half4 _TerrainShaderMax3;
			half4 _TerrainShaderMin4;
			half4 _TerrainShaderMax4;
			half4 _TerrainCoord5;
			half4 _TerrainShaderMin5;
			half4 _TerrainShaderMax5;
			half4 _TerrainCoord6;
			half4 _TerrainShaderMin6;
			half4 _TerrainCoord4;
			half4 _TerrainCoord1;
			half4 _TerrainParams15;
			half4 _TerrainShaderMin14;
			half4 _TerrainColor13;
			half4 _TerrainColor14;
			half4 _TerrainColor15;
			half4 _TerrainColor16;
			half4 _TerrainColor;
			half4 _TerrainParams1;
			half4 _TerrainParams2;
			half4 _TerrainColor12;
			half4 _TerrainParams3;
			half4 _TerrainParams5;
			half4 _TerrainParams6;
			half4 _TerrainParams7;
			half4 _TerrainParams8;
			half4 _TerrainParams9;
			half4 _TerrainParams10;
			half4 _TerrainParams11;
			half4 _TerrainParams4;
			half4 _TerrainCoord14;
			half4 _TerrainColor11;
			half4 _TerrainColor9;
			half4 _TerrainShaderMax14;
			half4 _TerrainCoord15;
			half4 _TerrainShaderMin15;
			half4 _TerrainShaderMax15;
			half4 _TerrainCoord16;
			half4 _TerrainShaderMin16;
			half4 _TerrainShaderMax16;
			half4 _TerrainColor10;
			half4 _TerrainParams14;
			half4 _TerrainColor2;
			half4 _TerrainColor3;
			half4 _TerrainColor4;
			half4 _TerrainColor5;
			half4 _TerrainColor6;
			half4 _TerrainColor7;
			half4 _TerrainColor8;
			half4 _TerrainColor1;
			half4 _TerrainParams12;
			float4 _TerrainControlTex1_TexelSize;
			half4 _TerrainPosition;
			float4 _TintingColor;
			half4 _TintingLumaRemap;
			half4 _TintingBlendRemap;
			float4 _DrynessColor;
			half4 _DrynessLumaRemap;
			half4 _DrynessBlendRemap;
			half4 _TerrainSize;
			half4 _OverlayColor;
			half4 _overlay_coord_value;
			half4 _OverlayCoordValue;
			half4 _OverlayGlitterColor;
			half4 _OverlayProjRemap;
			half4 _OverlayLumaRemap;
			half4 _OverlayBlendRemap1;
			half4 _WetnessWaterColor;
			half4 _WetnessWaterBlendRemap;
			half4 _EmissiveColor;
			half4 _TerrainSpecular16;
			half4 _TerrainSpecular15;
			half4 _object_phase_mode;
			half4 _TerrainSpecular13;
			half4 _TerrainParams16;
			half4 _TerrainSpecular1;
			half4 _TerrainSpecular14;
			half4 _TerrainSpecular2;
			half4 _TerrainSpecular3;
			half4 _TerrainSpecular4;
			half4 _TerrainSpecular5;
			half4 _TerrainSpecular6;
			half4 _TerrainSpecular7;
			half4 _TerrainSpecular8;
			half4 _TerrainParams13;
			half4 _TerrainSpecular10;
			half4 _TerrainSpecular12;
			half4 _TerrainSpecular11;
			half4 _TerrainSpecular9;
			half _DrynessIntensityValue;
			half _OverlaySubsurfaceValue;
			half _TerrainMetallicValue;
			half _WetnessWaterIntensityValue;
			half _WetnessIntensityValue;
			half _WetnessWaterBaseValue;
			half _TerrainNormalValue;
			half _WetnessContrastValue;
			half _WetnessDropsTillingValue;
			half _WetnessDropsNormalValue;
			half _WetnessDropsDistValue;
			half _WetnessSmoothnessValue;
			half _EmissiveIntensityValue;
			half _TintingElementMode;
			half _EmissiveColorMode;
			float _emissive_power_value;
			half _EmissiveExposureValue;
			half _CutoutIntensityValue;
			half _WetnessDropsIntensityValue;
			half _OverlaySmoothnessValue;
			half _OverlayLumaValue;
			half _TerrainOcclusionValue;
			half _DrynessMultiValue;
			half _DrynessShiftValue;
			half _DrynessLumaValue;
			half _DrynessGrayValue;
			half _DrynessSmoothnessValue;
			half _DrynessSubsurfaceValue;
			half _TintingLumaValue;
			half _OverlaySampleMode;
			half _OverlayNormalValue;
			half _OverlayCoordMode;
			half _OverlayTextureMode;
			half _OverlayGlitterIntensityValue;
			half _TintingIntensityValue;
			half _OverlayGlitterDistValue;
			half _OverlayIntensityValue;
			half _TintingGrayValue;
			half _OverlayProjValue;
			half _TerrainSmoothnessValue;
			half _TintingMultiValue;
			half _OverlayGlitterTillingValue;
			half _TerrainLayersMode;
			half _CutoutShadowMode;
			half _RenderEnd;
			half _IsTVEShader;
			half _IsCustomShader;
			half _IsShared;
			half _HasDefaultTextures;
			half _IsCollected;
			half _IsConverted;
			half _IsIdentifier;
			half _RenderDecals;
			half _RenderSSR;
			half _RenderClip;
			half _IsVersion;
			half _RenderShadow;
			half _RenderFilter;
			half _LandscapeCategory;
			half _RenderCategory;
			half _IsStandardShader;
			half _IsTerrainShader;
			half _TerrainTextureMode;
			half _TerrainSampleMode1;
			half _TerrainSampleMode2;
			half _TerrainSampleMode3;
			half _TerrainSampleMode4;
			half _TerrainSampleMode5;
			half _TerrainSampleMode6;
			half _TerrainSampleMode7;
			half _LandscapeEnd;
			half _TerrainSampleMode8;
			half _TerrainSampleMode10;
			half _TerrainSampleMode11;
			half _TerrainSampleMode12;
			half _TerrainSampleMode13;
			half _TerrainSampleMode14;
			half _TerrainSampleMode15;
			half _TerrainSampleMode16;
			half _TerrainSampleMode9;
			half _LandscapeInfo;
			half _GlobalCategory;
			half _GlobalEnd;
			half _OverlayCategory;
			half _OverlayEnd;
			half _OverlaySpace;
			half _OverlayElementMode;
			half _OverlayBakeInfo;
			half _DrynessCategory;
			half _DrynessEnd;
			half _WetnessBakeInfo;
			half _DrynessSpace;
			half _DrynessBakeInfo;
			half _TintingCategory;
			half _TintingEnd;
			half _TintingSpace;
			half _TintingBakeInfo;
			half _CategoryTerrain;
			half _EndTerrain;
			half _DrynessElementMode;
			half _TerrainHeightBlendValue;
			half _WetnessElementMode;
			half _WetnessCategory;
			half _GlobalPaintLayerValue;
			half _GlobalGlowLayerValue;
			half _GlobalAtmoLayerValue;
			half _GlobalFadeLayerValue;
			half _GlobalLandLayerValue;
			half _LandscapeHeightValue;
			half _CutoutCategory;
			half _WetnessEnd;
			half _CutoutEnd;
			half _CutoutBakeInfo;
			half _EmissiveCategory;
			half _EmissiveEnd;
			half _EmissivePowerMode;
			half _EmissivePowerValue;
			half _EmissiveElementMode;
			half _EmissiveFlagMode;
			half _CutoutElementMode;
			half _RenderSpecular;
			float4 _EmissionColor;
			float _AlphaCutoff;
			float _RenderQueueType;
			#ifdef _ADD_PRECOMPUTED_VELOCITY
			    float _AddPrecomputedVelocity;
			#endif
			float _StencilRef;
			float _StencilWriteMask;
			float _StencilRefDepth;
			float _StencilWriteMaskDepth;
			float _StencilRefMV;
			float _StencilWriteMaskMV;
			float _StencilRefDistortionVec;
			float _StencilWriteMaskDistortionVec;
			float _StencilWriteMaskGBuffer;
			float _StencilRefGBuffer;
			float _ZTestGBuffer;
			float _RequireSplitLighting;
			float _ReceivesSSR;
			float _SurfaceType;
			float _BlendMode;
            #ifdef SUPPORT_BLENDMODE_PRESERVE_SPECULAR_LIGHTING
			    float _EnableBlendModePreserveSpecularLighting;
            #endif
			float _SrcBlend;
			float _DstBlend;
			float _DstBlend2;
			float _AlphaSrcBlend;
			float _AlphaDstBlend;
			float _ZWrite;
			float _TransparentZWrite;
			float _CullMode;
			float _TransparentSortPriority;
			float _EnableFogOnTransparent;
			float _CullModeForward;
			float _TransparentCullMode;
			float _ZTestDepthEqualForOpaque;
			float _ZTestTransparent;
			float _TransparentBackfaceEnable;
			float _AlphaCutoffEnable;
			float _UseShadowThreshold;
			float _DoubleSidedEnable;
			float _DoubleSidedNormalMode;
			float4 _DoubleSidedConstants;
			#ifdef ASE_TESSELLATION
			    float _TessPhongStrength;
			    float _TessValue;
			    float _TessMin;
			    float _TessMax;
			    float _TessEdgeLength;
			    float _TessMaxDisp;
			#endif
			UNITY_TEXTURE_STREAMING_DEBUG_VARS;
			CBUFFER_END

            #ifdef SCENEPICKINGPASS
			float4 _SelectionID;
            #endif

            #ifdef SCENESELECTIONPASS
			int _ObjectId;
			int _PassValue;
            #endif

			float3 TVE_WorldOrigin;
			float4x4 unity_CameraProjection;
			float4x4 unity_CameraInvProjection;
			float4x4 unity_WorldToCamera;
			float4x4 unity_CameraToWorld;
			half4 TVE_CoatParams;
			float TVE_PaintLayers[10];
			TEXTURE2D_ARRAY(TVE_PaintBaseTex);
			half4 TVE_RenderBaseCoords;
			SAMPLER(sampler_Linear_Clamp);
			TEXTURE2D_ARRAY(TVE_PaintNearTex);
			half4 TVE_RenderNearCoords;
			SAMPLER(sampler_Linear_Repeat);
			float4 TVE_RenderNearPositionR;
			half TVE_RenderNearFadeValue;
			half4 TVE_PaintParams;
			float TVE_GlowLayers[10];
			TEXTURE2D_ARRAY(TVE_GlowBaseTex);
			TEXTURE2D_ARRAY(TVE_GlowNearTex);
			half4 TVE_GlowParams;
			float TVE_AtmoLayers[10];
			TEXTURE2D_ARRAY(TVE_AtmoBaseTex);
			TEXTURE2D_ARRAY(TVE_AtmoNearTex);
			half4 TVE_AtmoParams;
			float TVE_FadeLayers[10];
			TEXTURE2D_ARRAY(TVE_FadeBaseTex);
			TEXTURE2D_ARRAY(TVE_FadeNearTex);
			half4 TVE_FadeParams;
			half4 TVE_FormParams;
			float TVE_LandLayers[10];
			TEXTURE2D_ARRAY(TVE_LandBaseTex);
			TEXTURE2D_ARRAY(TVE_LandNearTex);
			half4 TVE_LandParams;
			half4 TVE_WindParams;
			half4 TVE_PushParams;
			half TVE_IsEnabled;
			TEXTURE2D(_TerrainControlTex1);
			TEXTURE2D(_TerrainControlTex2);
			TEXTURE2D(_TerrainControlTex3);
			TEXTURE2D(_TerrainControlTex4);
			TEXTURE2D(_TerrainShaderTex1);
			SAMPLER(sampler_Point_Repeat);
			SAMPLER(sampler_Linear_Repeat_Aniso8);
			TEXTURE2D(_TerrainShaderTex2);
			TEXTURE2D(_TerrainShaderTex3);
			TEXTURE2D(_TerrainShaderTex4);
			TEXTURE2D(_TerrainShaderTex5);
			TEXTURE2D(_TerrainShaderTex6);
			TEXTURE2D(_TerrainShaderTex7);
			TEXTURE2D(_TerrainShaderTex8);
			TEXTURE2D(_TerrainShaderTex9);
			TEXTURE2D(_TerrainShaderTex10);
			TEXTURE2D(_TerrainShaderTex11);
			TEXTURE2D(_TerrainShaderTex12);
			TEXTURE2D(_TerrainShaderTex13);
			TEXTURE2D(_TerrainShaderTex14);
			TEXTURE2D(_TerrainShaderTex15);
			TEXTURE2D(_TerrainShaderTex16);
			TEXTURE2D(_TerrainAlbedoTex1);
			TEXTURE2D(_TerrainAlbedoTex2);
			TEXTURE2D(_TerrainAlbedoTex3);
			TEXTURE2D(_TerrainAlbedoTex4);
			TEXTURE2D(_TerrainAlbedoTex5);
			TEXTURE2D(_TerrainAlbedoTex6);
			TEXTURE2D(_TerrainAlbedoTex7);
			TEXTURE2D(_TerrainAlbedoTex8);
			TEXTURE2D(_TerrainAlbedoTex9);
			TEXTURE2D(_TerrainAlbedoTex10);
			TEXTURE2D(_TerrainAlbedoTex11);
			TEXTURE2D(_TerrainAlbedoTex12);
			TEXTURE2D(_TerrainAlbedoTex13);
			TEXTURE2D(_TerrainAlbedoTex14);
			TEXTURE2D(_TerrainAlbedoTex15);
			TEXTURE2D(_TerrainAlbedoTex16);
			TEXTURE2D(_TerrainNormalTex1);
			TEXTURE2D(_TerrainNormalTex2);
			TEXTURE2D(_TerrainNormalTex3);
			TEXTURE2D(_TerrainNormalTex4);
			TEXTURE2D(_TerrainNormalTex5);
			TEXTURE2D(_TerrainNormalTex6);
			TEXTURE2D(_TerrainNormalTex7);
			TEXTURE2D(_TerrainNormalTex8);
			TEXTURE2D(_TerrainNormalTex9);
			TEXTURE2D(_TerrainNormalTex10);
			TEXTURE2D(_TerrainNormalTex11);
			TEXTURE2D(_TerrainNormalTex12);
			TEXTURE2D(_TerrainNormalTex13);
			TEXTURE2D(_TerrainNormalTex14);
			TEXTURE2D(_TerrainNormalTex15);
			TEXTURE2D(_TerrainNormalTex16);
			TEXTURE2D(_TerrainHolesTex);
			TEXTURE2D(_OverlayAlbedoTex);
			TEXTURE2D(_OverlayGlitterTexRT);
			TEXTURE2D(_OverlayNormalTex);
			TEXTURE2D(_WetnessDropsTexRT);
			#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
				TEXTURE2D(_TerrainHeightmapTexture);//ASE Terrain Instancing
				TEXTURE2D( _TerrainNormalmapTexture);//ASE Terrain Instancing
				SAMPLER(sampler_TerrainNormalmapTexture);//ASE Terrain Instancing
			#endif//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_START( Terrain )//ASE Terrain Instancing
				UNITY_DEFINE_INSTANCED_PROP( float4, _TerrainPatchInstanceData )//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_END( Terrain)//ASE Terrain Instancing
			CBUFFER_START( UnityTerrain)//ASE Terrain Instancing
				#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
					float4 _TerrainHeightmapRecipSize;//ASE Terrain Instancing
					float4 _TerrainHeightmapScale;//ASE Terrain Instancing
				#endif//ASE Terrain Instancing
			CBUFFER_END//ASE Terrain Instancing


            #ifdef DEBUG_DISPLAY
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
            #endif

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitDecalData.hlsl"

        	#ifdef HAVE_VFX_MODIFICATION
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif

			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/CommonLighting.hlsl"
			#define ASE_NEEDS_VERT_POSITION
			#define ASE_NEEDS_VERT_NORMAL
			#define ASE_NEEDS_VERT_TANGENT
			#define ASE_NEEDS_FRAG_RELATIVE_WORLD_POS
			#define ASE_NEEDS_FRAG_WORLD_NORMAL
			#define ASE_NEEDS_FRAG_WORLD_TANGENT
			#pragma shader_feature_local_fragment TVE_PIPELINE_STANDARD TVE_PIPELINE_UNIVERSAL TVE_PIPELINE_HD
			#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
			#pragma shader_feature_local_vertex TVE_LANDSCAPE
			#pragma shader_feature_local_fragment TVE_WETNESS
			#pragma shader_feature_local_fragment TVE_OVERLAY
			#pragma shader_feature_local_fragment TVE_DRYNESS
			#pragma shader_feature_local_fragment TVE_TINTING
			#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
			#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
			#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
			#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
			#pragma shader_feature_local_fragment TVE_DRYNESS_SHIFT
			#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
			#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
			#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_WATER
			#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
			#pragma shader_feature_local_fragment TVE_EMISSIVE
			#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
			#pragma shader_feature_local_fragment TVE_CUTOUT
			#pragma shader_feature_local_fragment TVE_CUTOUT_SHADOW
			#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
			#pragma multi_compile_instancing
			#pragma instancing_options assumeuniformscaling nomatrices nolightprobe nolightmap
			  
			struct TVEVisualData
			{  
				half Dummy;  
				half3 Albedo;
				half3 AlbedoRaw;
				half2 NormalTS;
				half3 NormalWS; 
				half4 Shader;
				half4 Emissive;
				half AlphaClip;
				half AlphaFade;
				half MultiMask;
				half Grayscale;
				half Luminosity;
				half3 Translucency;
				half Transmission;
				half Thickness;
				float Diffusion;
			};  
			    
			struct TVEModelData
			{    
				half Dummy;    
				half3 PositionOS;
				half3 PositionWS;
				half3 PositionWO;
				half3 PositionRawOS;
				half3 PositionAddOS;
				half3 PivotOS;
				half3 PivotWS;
				half3 PivotWO;
				half3 NormalOS;
				half3 NormalWS;
				half3 NormalRawOS;
				half3 NormalRawWS;
				half4 TangentOS;
				half3 ViewDirWS;
				half4 VertexData;
				half4 MotionData;
				half4 BoundsData;
				half4 RotationData;
			};    
			      
			struct TVEGlobalData
			{      
				half Dummy;      
				half4 CoatParams;
				half4 PaintParams;
				half4 GlowParams;
				half4 AtmoParams;
				half4 FadeParams;
				half4 FormParams;
				half4 LandParams;
				half4 WindParams;
				half4 PushParams;
			};      
			        
			//#pragma editor_sync_compilation


			struct AttributesMesh
			{
				float3 positionOS : POSITION;
				float3 normalOS : NORMAL;
				float4 tangentOS : TANGENT;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;
				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct PackedVaryingsMeshToPS
			{
				SV_POSITION_QUALIFIERS float4 positionCS : SV_Position;
				float3 positionRWS : TEXCOORD0;
				float3 normalWS : TEXCOORD1;
				float4 tangentWS : TEXCOORD2;
				float4 ase_texcoord3 : TEXCOORD3;
				float4 ase_texcoord4 : TEXCOORD4;
				float4 ase_color : COLOR;
				float4 ase_texcoord5 : TEXCOORD5;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				UNITY_VERTEX_OUTPUT_STEREO
				#if defined(SHADER_STAGE_FRAGMENT) && defined(ASE_NEED_CULLFACE)
				FRONT_FACE_TYPE cullFace : FRONT_FACE_SEMANTIC;
				#endif
			};

			float3 ObjectPosition_UNITY_MATRIX_M(  )
			{
				return float3(UNITY_MATRIX_M[0].w, UNITY_MATRIX_M[1].w, UNITY_MATRIX_M[2].w );
			}
			
			void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
			{
				ZX = WorldPosition.xz * Coords.xx - Coords.zz;
				ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
				XY = WorldPosition.xy * Coords.xy - Coords.zw;
			}
			
			half4 SamplePlanar2D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
			{
				half3 powNormal = abs( WorldNormal.xyz );
				half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
				weights /= ( weights.x + weights.y + weights.z ).xxx;
				T1 = weights.y;
				T2 = weights.x;
				T3 = weights.z;
			}
			
			half4 SamplePlanar3D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
				half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
				half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
				return tex1 * T1 + tex2 * T2 + tex3 * T3;
			}
			
			void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
			{
				half2 vertex1, vertex2, vertex3;
				// Scaling of the input
				half2 uv = UV * 3.464; // 2 * sqrt (3)
				// Skew input space into simplex triangle grid
				const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
				half2 skewedCoord = mul( gridToSkewedGrid, uv );
				// Compute local triangle vertex IDs and local barycentric coordinates
				int2 baseId = int2( floor( skewedCoord ) );
				half3 temp = half3( frac( skewedCoord ), 0 );
				temp.z = 1.0 - temp.x - temp.y;
				if ( temp.z > 0.0 )
				{
					W1 = temp.z;
					W2 = temp.y;
					W3 = temp.x;
					vertex1 = baseId;
					vertex2 = baseId + int2( 0, 1 );
					vertex3 = baseId + int2( 1, 0 );
				}
				else
				{
					W1 = -temp.z;
					W2 = 1.0 - temp.y;
					W3 = 1.0 - temp.x;
					vertex1 = baseId + int2( 1, 1 );
					vertex2 = baseId + int2( 1, 0 );
					vertex3 = baseId + int2( 0, 1 );
				}
				UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
				UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
				UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
				return;
			}
			
			float4 SampleStochastic2D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
				half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
				half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
				half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
				return tex1 * W1 + tex2 * W2 + tex3 * W3;
			}
			
			half4 SampleStochastic3D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				half4 tex1, tex2, tex3;
				ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
				half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
				half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
				half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				return texZX * T1 + texZY * T2 + texXY * T3;
			}
			
			half3 HSVToRGB( half3 c )
			{
				half4 K = half4( 1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0 );
				half3 p = abs( frac( c.xxx + K.xyz ) * 6.0 - K.www );
				return c.z * lerp( K.xxx, saturate( p - K.xxx ), c.y );
			}
			
			half3 RGBToHSV(half3 c)
			{
				half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
				half4 p = lerp( half4( c.bg, K.wz ), half4( c.gb, K.xy ), step( c.b, c.g ) );
				half4 q = lerp( half4( p.xyw, c.r ), half4( c.r, p.yzx ), step( p.x, c.r ) );
				half d = q.x - min( q.w, q.y );
				half e = 1.0e-10;
				return half3( abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
			}
			float3 ASEGetEmissionHDRColor(float3 ldrColor, float luminanceIntensity, float exposureWeight, float inverseCurrentExposureMultiplier)
			{
				float3 hdrColor = ldrColor * luminanceIntensity;
				hdrColor = lerp( hdrColor* inverseCurrentExposureMultiplier, hdrColor, exposureWeight);
				return hdrColor;
			}
			
			half ShadowPassCheck36_g118142( half True, half False )
			{
				half result;
				#if defined(SHADERPASS) && (SHADERPASS  == SHADERPASS_SHADOWS)
					result = True;
				#else
					result = False;
				#endif
				return result;
			}
			
			AttributesMesh ApplyMeshModification( AttributesMesh inputMesh )
			{
			#ifdef UNITY_INSTANCING_ENABLED
				float2 patchVertex = inputMesh.positionOS.xy;
				float4 instanceData = UNITY_ACCESS_INSTANCED_PROP( Terrain, _TerrainPatchInstanceData );
				float2 sampleCoords = ( patchVertex.xy + instanceData.xy ) * instanceData.z;
				float height = UnpackHeightmap( _TerrainHeightmapTexture.Load( int3( sampleCoords, 0 ) ) );
				inputMesh.positionOS.xz = sampleCoords* _TerrainHeightmapScale.xz;
				inputMesh.positionOS.y = height* _TerrainHeightmapScale.y;
				#ifdef ENABLE_TERRAIN_PERPIXEL_NORMAL
					inputMesh.normalOS = float3(0, 1, 0);
				#else
					inputMesh.normalOS = _TerrainNormalmapTexture.Load(int3(sampleCoords, 0)).rgb* 2 - 1;
				#endif
				inputMesh.ase_texcoord.xy = sampleCoords* _TerrainHeightmapRecipSize.zw;
			#endif
				return inputMesh;
			}
			

			void BuildSurfaceData(FragInputs fragInputs, inout SmoothSurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
			{
				ZERO_INITIALIZE(SurfaceData, surfaceData);

				surfaceData.specularOcclusion = 1.0;
				surfaceData.thickness = 0.0;

				surfaceData.perceptualSmoothness =		surfaceDescription.Smoothness;

				// refraction
                #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                    if (_EnableSSRefraction)
                    {
                        surfaceData.ior =                       surfaceDescription.RefractionIndex;
                        surfaceData.transmittanceColor =        surfaceDescription.RefractionColor;
                        surfaceData.atDistance =                surfaceDescription.RefractionDistance;
        
                        surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                        surfaceDescription.Alpha = 1.0;
                    }
                    else
                    {
                        surfaceData.ior = 1.0;
                        surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                        surfaceData.atDistance = 1.0;
                        surfaceData.transmittanceMask = 0.0;
                        surfaceDescription.Alpha = 1.0;
                    }
                #else
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                #endif

				surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;

				#ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
				#endif

				#ifdef _MATERIAL_FEATURE_TRANSMISSION
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
				#endif

				#ifdef _MATERIAL_FEATURE_COLORED_TRANSMISSION
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_COLORED_TRANSMISSION;
				#endif

                #ifdef _MATERIAL_FEATURE_ANISOTROPY
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
                    surfaceData.normalWS = float3(0, 1, 0);
                #endif

				#ifdef _MATERIAL_FEATURE_CLEAR_COAT
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
				#endif

				#ifdef _MATERIAL_FEATURE_IRIDESCENCE
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
				#endif

				#ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
				#endif

				#if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                    surfaceData.baseColor *= ( 1.0 - Max3( surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b ) );
				#endif

				#ifdef _DOUBLESIDED_ON
				    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
				#else
				    float3 doubleSidedConstants = float3( 1.0, 1.0, 1.0 );
				#endif

				float3 normalTS = float3(0.0f, 0.0f, 1.0f);
				normalTS = surfaceDescription.Normal;

                #ifdef DECAL_NORMAL_BLENDING
					normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(normalTS, fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);

                    #if HAVE_DECALS
                    if (_EnableDecals)
                    {
                        float alpha = 1.0;
                        alpha = surfaceDescription.Alpha;

                        DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                        ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                        ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
                     }
                    #endif

                    GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
                #else
					GetNormalWS(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);

                    #if HAVE_DECALS
                    if (_EnableDecals)
                    {
                        float alpha = 1.0;
                        alpha = surfaceDescription.Alpha;

                        DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                        ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                        ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
                    }
                    #endif
                #endif

				surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
                surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz );
                surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);

				bentNormalWS = surfaceData.normalWS;

                #if defined(DEBUG_DISPLAY)
				    #if !defined(SHADER_STAGE_RAY_TRACING)
				    if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
				    {
					   #ifdef FRAG_INPUTS_USE_TEXCOORD0
                           surfaceData.baseColor = GET_TEXTURE_STREAMING_DEBUG(posInput.positionSS, fragInputs.texCoord0);
                       #else
                           surfaceData.baseColor = GET_TEXTURE_STREAMING_DEBUG_NO_UV(posInput.positionSS);
                       #endif
					   surfaceData.metallic = 0;
				    }
					#endif
                     ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
                #endif

                #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                    surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
                #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                    surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
                #endif

                #ifdef _ENABLE_GEOMETRIC_SPECULAR_AA
                    surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
                #endif
			}

			// Get Surface And BuiltinData
			void GetSurfaceAndBuiltinData(SmoothSurfaceDescription surfaceDescription, FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData)
			{
				#ifdef LOD_FADE_CROSSFADE
                    LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
				#endif

                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants);

				#ifdef _ALPHATEST_ON
                    DoAlphaTest( surfaceDescription.Alpha, surfaceDescription.AlphaClipThreshold );
				#endif

				#ifdef _ALPHATEST_SHADOW_ON
                    DoAlphaTest( surfaceDescription.Alpha, surfaceDescription.AlphaClipThresholdShadow);
				#endif

				#ifdef _DEPTHOFFSET_ON
                    ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
				#endif

                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], fragInputs.texCoord1, fragInputs.texCoord2, builtinData);

				#ifdef _DEPTHOFFSET_ON
                    builtinData.depthOffset = surfaceDescription.DepthOffset;
				#endif

                #ifdef _ALPHATEST_ON
                    builtinData.alphaClipTreshold = surfaceDescription.AlphaClipThreshold;
                #endif

                #ifdef UNITY_VIRTUAL_TEXTURING
                    builtinData.vtPackedFeedback = surfaceDescription.VTPackedFeedback;
                #endif

				#ifdef ASE_BAKEDGI
                    builtinData.bakeDiffuseLighting = surfaceDescription.BakedGI;
				#endif

				#ifdef ASE_BAKEDBACKGI
                    builtinData.backBakeDiffuseLighting = surfaceDescription.BakedBackGI;
				#endif

                builtinData.emissiveColor = surfaceDescription.Emission;

                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
			}

			#if (defined(WRITE_DECAL_BUFFER) && !defined(_DISABLE_DECALS)) || defined(WRITE_RENDERING_LAYER)
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalPrepassBuffer.hlsl"
			#endif

			PackedVaryingsMeshToPS VertexFunction(AttributesMesh inputMesh )
			{
				PackedVaryingsMeshToPS outputPackedVaryingsMeshToPS;

				UNITY_SETUP_INSTANCE_ID(inputMesh);
				UNITY_TRANSFER_INSTANCE_ID(inputMesh, outputPackedVaryingsMeshToPS);
				UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO( outputPackedVaryingsMeshToPS );

				inputMesh = ApplyMeshModification(inputMesh);
				TVEModelData Data16_g118149 = (TVEModelData)0;
				half Dummy181_g118147 = ( _LandscapeCategory + _LandscapeEnd + _LandscapeInfo );
				float In_Dummy16_g118149 = Dummy181_g118147;
				TVEModelData Data16_g117808 = (TVEModelData)0;
				half Dummy207_g117794 = 0.0;
				float In_Dummy16_g117808 = Dummy207_g117794;
				half3 PositionOS131_g117794 = inputMesh.positionOS;
				float3 In_PositionOS16_g117808 = PositionOS131_g117794;
				float3 ase_worldPos = GetAbsolutePositionWS( TransformObjectToWorld( (inputMesh.positionOS).xyz ) );
				float3 vertexToFrag73_g117794 = ase_worldPos;
				half3 PositionWS122_g117794 = vertexToFrag73_g117794;
				float3 In_PositionWS16_g117808 = PositionWS122_g117794;
				float3 localObjectPosition_UNITY_MATRIX_M14_g117796 = ObjectPosition_UNITY_MATRIX_M();
				#ifdef SHADEROPTIONS_CAMERA_RELATIVE_RENDERING
				float3 staticSwitch13_g117796 = ( localObjectPosition_UNITY_MATRIX_M14_g117796 + _WorldSpaceCameraPos );
				#else
				float3 staticSwitch13_g117796 = localObjectPosition_UNITY_MATRIX_M14_g117796;
				#endif
				half3 ObjectData20_g117798 = staticSwitch13_g117796;
				half3 WorldData19_g117798 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g117798 = WorldData19_g117798;
				#else
				float3 staticSwitch14_g117798 = ObjectData20_g117798;
				#endif
				float3 temp_output_124_0_g117796 = staticSwitch14_g117798;
				float3 temp_output_239_7_g117794 = temp_output_124_0_g117796;
				half3 PivotWS121_g117794 = temp_output_239_7_g117794;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g117794 = ( PositionWS122_g117794 - PivotWS121_g117794 );
				#else
				float3 staticSwitch204_g117794 = PositionWS122_g117794;
				#endif
				half3 PositionWO132_g117794 = ( staticSwitch204_g117794 - TVE_WorldOrigin );
				float3 In_PositionWO16_g117808 = PositionWO132_g117794;
				float3 In_PositionRawOS16_g117808 = PositionOS131_g117794;
				float3 In_PositionAddOS16_g117808 = float3( 0,0,0 );
				float3 _Vector0 = float3(0,0,0);
				half3 PivotOS149_g117794 = _Vector0;
				float3 In_PivotOS16_g117808 = PivotOS149_g117794;
				float3 In_PivotWS16_g117808 = PivotWS121_g117794;
				half3 PivotWO133_g117794 = ( PivotWS121_g117794 - TVE_WorldOrigin );
				float3 In_PivotWO16_g117808 = PivotWO133_g117794;
				half3 NormalOS134_g117794 = inputMesh.normalOS;
				float3 In_NormalOS16_g117808 = NormalOS134_g117794;
				float3 ase_worldNormal = TransformObjectToWorldNormal(inputMesh.normalOS);
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g117794 = normalizedWorldNormal;
				float3 In_NormalWS16_g117808 = Normal_WS95_g117794;
				float3 In_NormalRawOS16_g117808 = NormalOS134_g117794;
				float3 objToWorldDir298_g117794 = normalize( mul( GetObjectToWorldMatrix(), float4( inputMesh.normalOS, 0 ) ).xyz );
				half3 Normal_RawWS136_g117794 = objToWorldDir298_g117794;
				float3 In_NormalRawWS16_g117808 = Normal_RawWS136_g117794;
				half4 TangentlOS153_g117794 = inputMesh.tangentOS;
				float4 In_TangentOS16_g117808 = TangentlOS153_g117794;
				float3 normalizeResult296_g117794 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g117794 ) );
				half3 ViewDirWS169_g117794 = normalizeResult296_g117794;
				float3 In_ViewDirWS16_g117808 = ViewDirWS169_g117794;
				half4 VertexMasks171_g117794 = inputMesh.ase_color;
				float4 In_VertexData16_g117808 = VertexMasks171_g117794;
				float4 break33_g117807 = _object_phase_mode;
				float temp_output_30_0_g117807 = ( inputMesh.ase_color.r * break33_g117807.x );
				float temp_output_29_0_g117807 = ( inputMesh.ase_color.g * break33_g117807.y );
				float temp_output_31_0_g117807 = ( inputMesh.ase_color.b * break33_g117807.z );
				float temp_output_28_0_g117807 = ( temp_output_30_0_g117807 + temp_output_29_0_g117807 + temp_output_31_0_g117807 + ( inputMesh.ase_color.a * break33_g117807.w ) );
				float3 break243_g117794 = PivotWO133_g117794;
				float temp_output_315_0_g117794 = (frac( ( temp_output_28_0_g117807 + ( break243_g117794.x + break243_g117794.z ) ) )*2.0 + -1.0);
				float4 appendResult177_g117794 = (float4(1.0 , 1.0 , temp_output_315_0_g117794 , 1.0));
				half4 MotionMasks176_g117794 = appendResult177_g117794;
				float4 In_MotionData16_g117808 = MotionMasks176_g117794;
				half4 BoundsData254_g117794 = float4( 0,0,0,0 );
				float4 In_BoundsData16_g117808 = BoundsData254_g117794;
				float4 In_RotationData16_g117808 = float4( 0,0,0,0 );
				Data16_g117808.Dummy = In_Dummy16_g117808;
				Data16_g117808.PositionOS = In_PositionOS16_g117808;
				Data16_g117808.PositionWS = In_PositionWS16_g117808;
				Data16_g117808.PositionWO = In_PositionWO16_g117808;
				Data16_g117808.PositionRawOS = In_PositionRawOS16_g117808;
				Data16_g117808.PositionAddOS = In_PositionAddOS16_g117808;
				Data16_g117808.PivotOS = In_PivotOS16_g117808;
				Data16_g117808.PivotWS = In_PivotWS16_g117808;
				Data16_g117808.PivotWO = In_PivotWO16_g117808;
				Data16_g117808.NormalOS = In_NormalOS16_g117808;
				Data16_g117808.NormalWS = In_NormalWS16_g117808;
				Data16_g117808.NormalRawOS = In_NormalRawOS16_g117808;
				Data16_g117808.NormalRawWS = In_NormalRawWS16_g117808;
				Data16_g117808.TangentOS = In_TangentOS16_g117808;
				Data16_g117808.ViewDirWS = In_ViewDirWS16_g117808;
				Data16_g117808.VertexData = In_VertexData16_g117808;
				Data16_g117808.MotionData = In_MotionData16_g117808;
				Data16_g117808.BoundsData = In_BoundsData16_g117808;
				Data16_g117808.RotationData = In_RotationData16_g117808;
				TVEModelData Data15_g118148 = Data16_g117808;
				float Out_Dummy15_g118148 = 0;
				float3 Out_PositionOS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionWS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118148 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotOS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118148 = float3( 0,0,0 );
				float3 Out_NormalOS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g118148 = float3( 0,0,0 );
				float4 Out_TangentOS15_g118148 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g118148 = float3( 0,0,0 );
				float4 Out_VertexData15_g118148 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g118148 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118148 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g118148 = float4( 0,0,0,0 );
				Out_Dummy15_g118148 = Data15_g118148.Dummy;
				Out_PositionOS15_g118148 = Data15_g118148.PositionOS;
				Out_PositionWS15_g118148 = Data15_g118148.PositionWS;
				Out_PositionWO15_g118148 = Data15_g118148.PositionWO;
				Out_PositionRawOS15_g118148 = Data15_g118148.PositionRawOS;
				Out_PositionAddOS15_g118148 = Data15_g118148.PositionAddOS;
				Out_PivotOS15_g118148 = Data15_g118148.PivotOS;
				Out_PivotWS15_g118148 = Data15_g118148.PivotWS;
				Out_PivotWO15_g118148 = Data15_g118148.PivotWO;
				Out_NormalOS15_g118148 = Data15_g118148.NormalOS;
				Out_NormalWS15_g118148 = Data15_g118148.NormalWS;
				Out_NormalRawOS15_g118148 = Data15_g118148.NormalRawOS;
				Out_NormalRawWS15_g118148 = Data15_g118148.NormalRawWS;
				Out_TangentOS15_g118148 = Data15_g118148.TangentOS;
				Out_ViewDirWS15_g118148 = Data15_g118148.ViewDirWS;
				Out_VertexData15_g118148 = Data15_g118148.VertexData;
				Out_MotionData15_g118148 = Data15_g118148.MotionData;
				Out_BoundsData15_g118148 = Data15_g118148.BoundsData;
				Out_RotationData15_g118148 = Data15_g118148.RotationData;
				half3 Input_PositionOS147_g118147 = Out_PositionOS15_g118148;
				float3 break592_g118147 = Input_PositionOS147_g118147;
				float localBuildGlobalData204_g117810 = ( 0.0 );
				TVEGlobalData Data204_g117810 = (TVEGlobalData)0;
				half Dummy211_g117810 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g117810 = Dummy211_g117810;
				half4 Coat_Params302_g117810 = TVE_CoatParams;
				float4 In_CoatParams204_g117810 = Coat_Params302_g117810;
				float temp_output_82_0_g117811 = _GlobalPaintLayerValue;
				float temp_output_19_0_g117813 = TVE_PaintLayers[(int)temp_output_82_0_g117811];
				TVEModelData Data16_g117809 = (TVEModelData)0;
				float In_Dummy16_g117809 = 0.0;
				float3 In_PositionWS16_g117809 = PositionWS122_g117794;
				float3 In_PositionWO16_g117809 = PositionWO132_g117794;
				float3 In_PivotWS16_g117809 = PivotWS121_g117794;
				float3 In_PivotWO16_g117809 = PivotWO133_g117794;
				float3 In_NormalWS16_g117809 = Normal_WS95_g117794;
				float3 In_ViewDirWS16_g117809 = ViewDirWS169_g117794;
				float4 In_VertexData16_g117809 = VertexMasks171_g117794;
				float4 In_BoundsData16_g117809 = float4( 1,1,1,1 );
				Data16_g117809.Dummy = In_Dummy16_g117809;
				Data16_g117809.PositionWS = In_PositionWS16_g117809;
				Data16_g117809.PositionWO = In_PositionWO16_g117809;
				Data16_g117809.PivotWS = In_PivotWS16_g117809;
				Data16_g117809.PivotWO = In_PivotWO16_g117809;
				Data16_g117809.NormalWS = In_NormalWS16_g117809;
				Data16_g117809.ViewDirWS = In_ViewDirWS16_g117809;
				Data16_g117809.VertexData = In_VertexData16_g117809;
				Data16_g117809.BoundsData = In_BoundsData16_g117809;
				TVEModelData Data15_g117892 = Data16_g117809;
				float Out_Dummy15_g117892 = 0;
				float3 Out_PositionWS15_g117892 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117892 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117892 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g117892 = float3( 0,0,0 );
				float4 Out_VertexData15_g117892 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117892 = float4( 0,0,0,0 );
				Out_Dummy15_g117892 = Data15_g117892.Dummy;
				Out_PositionWS15_g117892 = Data15_g117892.PositionWS;
				Out_PositionWO15_g117892 = Data15_g117892.PositionWO;
				Out_PivotWS15_g117892 = Data15_g117892.PivotWS;
				Out_PivotWO15_g117892 = Data15_g117892.PivotWO;
				Out_NormalWS15_g117892 = Data15_g117892.NormalWS;
				Out_ViewDirWS15_g117892 = Data15_g117892.ViewDirWS;
				Out_VertexData15_g117892 = Data15_g117892.VertexData;
				Out_BoundsData15_g117892 = Data15_g117892.BoundsData;
				half3 Model_PositionWS143_g117810 = Out_PositionWS15_g117892;
				half3 Input_Position180_g117814 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117814 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_82_0_g117814 = temp_output_82_0_g117811;
				float2 temp_output_119_0_g117814 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_7_0_g117819 = 1.0;
				float temp_output_10_0_g117819 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117819 );
				float4 lerpResult131_g117814 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117814,temp_output_82_0_g117814, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, temp_output_119_0_g117814,temp_output_82_0_g117814, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117814 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117819 ) / temp_output_10_0_g117819 ) ));
				float4 temp_output_17_0_g117813 = lerpResult131_g117814;
				float4 temp_output_3_0_g117813 = TVE_PaintParams;
				float4 ifLocalVar18_g117813 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117813 >= 0.5 )
				ifLocalVar18_g117813 = temp_output_17_0_g117813;
				else
				ifLocalVar18_g117813 = temp_output_3_0_g117813;
				float4 lerpResult22_g117813 = lerp( temp_output_3_0_g117813 , temp_output_17_0_g117813 , temp_output_19_0_g117813);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117813 = lerpResult22_g117813;
				#else
				float4 staticSwitch24_g117813 = ifLocalVar18_g117813;
				#endif
				half4 Paint_Params71_g117810 = staticSwitch24_g117813;
				float4 In_PaintParams204_g117810 = Paint_Params71_g117810;
				float temp_output_82_0_g117829 = _GlobalGlowLayerValue;
				float temp_output_19_0_g117831 = TVE_GlowLayers[(int)temp_output_82_0_g117829];
				half3 Input_Position180_g117832 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117832 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_82_0_g117832 = temp_output_82_0_g117829;
				float2 temp_output_119_0_g117832 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_7_0_g117837 = 1.0;
				float temp_output_10_0_g117837 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117837 );
				float4 lerpResult131_g117832 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117832,temp_output_82_0_g117832, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, temp_output_119_0_g117832,temp_output_82_0_g117832, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117832 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117837 ) / temp_output_10_0_g117837 ) ));
				float4 temp_output_17_0_g117831 = lerpResult131_g117832;
				float4 temp_output_3_0_g117831 = TVE_GlowParams;
				float4 ifLocalVar18_g117831 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117831 >= 0.5 )
				ifLocalVar18_g117831 = temp_output_17_0_g117831;
				else
				ifLocalVar18_g117831 = temp_output_3_0_g117831;
				float4 lerpResult22_g117831 = lerp( temp_output_3_0_g117831 , temp_output_17_0_g117831 , temp_output_19_0_g117831);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117831 = lerpResult22_g117831;
				#else
				float4 staticSwitch24_g117831 = ifLocalVar18_g117831;
				#endif
				half4 Glow_Params248_g117810 = staticSwitch24_g117831;
				float4 In_GlowParams204_g117810 = Glow_Params248_g117810;
				float temp_output_132_0_g117874 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g117876 = TVE_AtmoLayers[(int)temp_output_132_0_g117874];
				half3 Input_Position180_g117877 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117877 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_82_0_g117877 = temp_output_132_0_g117874;
				float2 temp_output_119_0_g117877 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_7_0_g117882 = 1.0;
				float temp_output_10_0_g117882 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117882 );
				float4 lerpResult131_g117877 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117877,temp_output_82_0_g117877, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, temp_output_119_0_g117877,temp_output_82_0_g117877, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117877 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117882 ) / temp_output_10_0_g117882 ) ));
				float4 temp_output_17_0_g117876 = lerpResult131_g117877;
				float4 temp_output_3_0_g117876 = TVE_AtmoParams;
				float4 ifLocalVar18_g117876 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117876 >= 0.5 )
				ifLocalVar18_g117876 = temp_output_17_0_g117876;
				else
				ifLocalVar18_g117876 = temp_output_3_0_g117876;
				float4 lerpResult22_g117876 = lerp( temp_output_3_0_g117876 , temp_output_17_0_g117876 , temp_output_19_0_g117876);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117876 = lerpResult22_g117876;
				#else
				float4 staticSwitch24_g117876 = ifLocalVar18_g117876;
				#endif
				half4 Atmo_Params80_g117810 = staticSwitch24_g117876;
				float4 In_AtmoParams204_g117810 = Atmo_Params80_g117810;
				float temp_output_132_0_g117883 = _GlobalFadeLayerValue;
				float temp_output_19_0_g117885 = TVE_FadeLayers[(int)temp_output_132_0_g117883];
				half3 Input_Position180_g117886 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117886 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_82_0_g117886 = temp_output_132_0_g117883;
				float2 temp_output_119_0_g117886 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_7_0_g117891 = 1.0;
				float temp_output_10_0_g117891 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117891 );
				float4 lerpResult131_g117886 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117886,temp_output_82_0_g117886, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, temp_output_119_0_g117886,temp_output_82_0_g117886, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117886 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117891 ) / temp_output_10_0_g117891 ) ));
				float4 temp_output_17_0_g117885 = lerpResult131_g117886;
				float4 temp_output_3_0_g117885 = TVE_FadeParams;
				float4 ifLocalVar18_g117885 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117885 >= 0.5 )
				ifLocalVar18_g117885 = temp_output_17_0_g117885;
				else
				ifLocalVar18_g117885 = temp_output_3_0_g117885;
				float4 lerpResult22_g117885 = lerp( temp_output_3_0_g117885 , temp_output_17_0_g117885 , temp_output_19_0_g117885);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117885 = lerpResult22_g117885;
				#else
				float4 staticSwitch24_g117885 = ifLocalVar18_g117885;
				#endif
				half4 Fade_Params387_g117810 = staticSwitch24_g117885;
				float4 In_FadeParams204_g117810 = Fade_Params387_g117810;
				half4 Form_Params112_g117810 = TVE_FormParams;
				float4 In_FormParams204_g117810 = Form_Params112_g117810;
				float temp_output_130_0_g117847 = _GlobalLandLayerValue;
				float temp_output_19_0_g117849 = TVE_LandLayers[(int)temp_output_130_0_g117847];
				half3 Input_Position180_g117850 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117850 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_82_0_g117850 = temp_output_130_0_g117847;
				float2 temp_output_119_0_g117850 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_7_0_g117855 = 1.0;
				float temp_output_10_0_g117855 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117855 );
				float4 lerpResult131_g117850 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117850,temp_output_82_0_g117850, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, temp_output_119_0_g117850,temp_output_82_0_g117850, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117850 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117855 ) / temp_output_10_0_g117855 ) ));
				float4 temp_output_17_0_g117849 = lerpResult131_g117850;
				float4 temp_output_3_0_g117849 = TVE_LandParams;
				float4 ifLocalVar18_g117849 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117849 >= 0.5 )
				ifLocalVar18_g117849 = temp_output_17_0_g117849;
				else
				ifLocalVar18_g117849 = temp_output_3_0_g117849;
				float4 lerpResult22_g117849 = lerp( temp_output_3_0_g117849 , temp_output_17_0_g117849 , temp_output_19_0_g117849);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117849 = lerpResult22_g117849;
				#else
				float4 staticSwitch24_g117849 = ifLocalVar18_g117849;
				#endif
				half4 Land_Params375_g117810 = staticSwitch24_g117849;
				float4 In_LandParams204_g117810 = Land_Params375_g117810;
				half4 Wind_Params88_g117810 = TVE_WindParams;
				float4 In_WindParams204_g117810 = Wind_Params88_g117810;
				half4 Push_Params335_g117810 = TVE_PushParams;
				float4 In_PushParams204_g117810 = Push_Params335_g117810;
				Data204_g117810.Dummy = In_Dummy204_g117810;
				Data204_g117810.CoatParams = In_CoatParams204_g117810;
				Data204_g117810.PaintParams = In_PaintParams204_g117810;
				Data204_g117810.GlowParams = In_GlowParams204_g117810;
				Data204_g117810.AtmoParams = In_AtmoParams204_g117810;
				Data204_g117810.FadeParams = In_FadeParams204_g117810;
				Data204_g117810.FormParams= In_FormParams204_g117810;
				Data204_g117810.LandParams = In_LandParams204_g117810;
				Data204_g117810.WindParams = In_WindParams204_g117810;
				Data204_g117810.PushParams = In_PushParams204_g117810;
				TVEGlobalData Data15_g118150 = Data204_g117810;
				float Out_Dummy15_g118150 = 0;
				float4 Out_CoatParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118150 = float4( 0,0,0,0 );
				Out_Dummy15_g118150 = Data15_g118150.Dummy;
				Out_CoatParams15_g118150 = Data15_g118150.CoatParams;
				Out_PaintParams15_g118150 = Data15_g118150.PaintParams;
				Out_GlowParams15_g118150 = Data15_g118150.GlowParams;
				Out_AtmoParams15_g118150= Data15_g118150.AtmoParams;
				Out_FadeParams15_g118150= Data15_g118150.FadeParams;
				Out_FormParams15_g118150 = Data15_g118150.FormParams;
				Out_LandParams15_g118150 = Data15_g118150.LandParams;
				Out_WindParams15_g118150 = Data15_g118150.WindParams;
				Out_PushParams15_g118150 = Data15_g118150.PushParams;
				half4 Input_FormParams214_g118147 = Out_LandParams15_g118150;
				float temp_output_572_0_g118147 = (Input_FormParams214_g118147).z;
				float temp_output_595_0_g118147 = ( break592_g118147.y + temp_output_572_0_g118147 );
				float lerpResult604_g118147 = lerp( break592_g118147.y , temp_output_595_0_g118147 , ( _LandscapeHeightValue * TVE_IsEnabled ));
				float3 appendResult593_g118147 = (float3(break592_g118147.x , lerpResult604_g118147 , break592_g118147.z));
				#ifdef TVE_LANDSCAPE
				float3 staticSwitch575_g118147 = appendResult593_g118147;
				#else
				float3 staticSwitch575_g118147 = Input_PositionOS147_g118147;
				#endif
				half3 Final_PositionOS580_g118147 = staticSwitch575_g118147;
				float3 In_PositionOS16_g118149 = Final_PositionOS580_g118147;
				float3 In_PositionWS16_g118149 = Out_PositionWS15_g118148;
				float3 In_PositionWO16_g118149 = Out_PositionWO15_g118148;
				float3 In_PositionRawOS16_g118149 = Out_PositionRawOS15_g118148;
				float3 In_PositionAddOS16_g118149 = Out_PositionAddOS15_g118148;
				float3 In_PivotOS16_g118149 = Out_PivotOS15_g118148;
				float3 In_PivotWS16_g118149 = Out_PivotWS15_g118148;
				float3 temp_output_481_19_g118147 = Out_PivotWO15_g118148;
				float3 In_PivotWO16_g118149 = temp_output_481_19_g118147;
				float3 temp_output_481_20_g118147 = Out_NormalOS15_g118148;
				float3 In_NormalOS16_g118149 = temp_output_481_20_g118147;
				float3 In_NormalWS16_g118149 = Out_NormalWS15_g118148;
				float3 In_NormalRawOS16_g118149 = Out_NormalRawOS15_g118148;
				float3 In_NormalRawWS16_g118149 = Out_NormalRawWS15_g118148;
				float4 In_TangentOS16_g118149 = Out_TangentOS15_g118148;
				float3 In_ViewDirWS16_g118149 = Out_ViewDirWS15_g118148;
				float4 In_VertexData16_g118149 = Out_VertexData15_g118148;
				float4 In_MotionData16_g118149 = Out_MotionData15_g118148;
				float4 In_BoundsData16_g118149 = Out_BoundsData15_g118148;
				float4 In_RotationData16_g118149 = Out_RotationData15_g118148;
				Data16_g118149.Dummy = In_Dummy16_g118149;
				Data16_g118149.PositionOS = In_PositionOS16_g118149;
				Data16_g118149.PositionWS = In_PositionWS16_g118149;
				Data16_g118149.PositionWO = In_PositionWO16_g118149;
				Data16_g118149.PositionRawOS = In_PositionRawOS16_g118149;
				Data16_g118149.PositionAddOS = In_PositionAddOS16_g118149;
				Data16_g118149.PivotOS = In_PivotOS16_g118149;
				Data16_g118149.PivotWS = In_PivotWS16_g118149;
				Data16_g118149.PivotWO = In_PivotWO16_g118149;
				Data16_g118149.NormalOS = In_NormalOS16_g118149;
				Data16_g118149.NormalWS = In_NormalWS16_g118149;
				Data16_g118149.NormalRawOS = In_NormalRawOS16_g118149;
				Data16_g118149.NormalRawWS = In_NormalRawWS16_g118149;
				Data16_g118149.TangentOS = In_TangentOS16_g118149;
				Data16_g118149.ViewDirWS = In_ViewDirWS16_g118149;
				Data16_g118149.VertexData = In_VertexData16_g118149;
				Data16_g118149.MotionData = In_MotionData16_g118149;
				Data16_g118149.BoundsData = In_BoundsData16_g118149;
				Data16_g118149.RotationData = In_RotationData16_g118149;
				TVEModelData Data15_g118156 = Data16_g118149;
				float Out_Dummy15_g118156 = 0;
				float3 Out_PositionOS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionWS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118156 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotOS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118156 = float3( 0,0,0 );
				float3 Out_NormalOS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g118156 = float3( 0,0,0 );
				float4 Out_TangentOS15_g118156 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g118156 = float3( 0,0,0 );
				float4 Out_VertexData15_g118156 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g118156 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118156 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g118156 = float4( 0,0,0,0 );
				Out_Dummy15_g118156 = Data15_g118156.Dummy;
				Out_PositionOS15_g118156 = Data15_g118156.PositionOS;
				Out_PositionWS15_g118156 = Data15_g118156.PositionWS;
				Out_PositionWO15_g118156 = Data15_g118156.PositionWO;
				Out_PositionRawOS15_g118156 = Data15_g118156.PositionRawOS;
				Out_PositionAddOS15_g118156 = Data15_g118156.PositionAddOS;
				Out_PivotOS15_g118156 = Data15_g118156.PivotOS;
				Out_PivotWS15_g118156 = Data15_g118156.PivotWS;
				Out_PivotWO15_g118156 = Data15_g118156.PivotWO;
				Out_NormalOS15_g118156 = Data15_g118156.NormalOS;
				Out_NormalWS15_g118156 = Data15_g118156.NormalWS;
				Out_NormalRawOS15_g118156 = Data15_g118156.NormalRawOS;
				Out_NormalRawWS15_g118156 = Data15_g118156.NormalRawWS;
				Out_TangentOS15_g118156 = Data15_g118156.TangentOS;
				Out_ViewDirWS15_g118156 = Data15_g118156.ViewDirWS;
				Out_VertexData15_g118156 = Data15_g118156.VertexData;
				Out_MotionData15_g118156 = Data15_g118156.MotionData;
				Out_BoundsData15_g118156 = Data15_g118156.BoundsData;
				Out_RotationData15_g118156 = Data15_g118156.RotationData;
				float3 temp_output_31_0_g118154 = Out_PositionOS15_g118156;
				
				float3 ase_worldTangent = TransformObjectToWorldDir(inputMesh.tangentOS.xyz);
				float ase_vertexTangentSign = inputMesh.tangentOS.w * ( unity_WorldTransformParams.w >= 0.0 ? 1.0 : -1.0 );
				float3 ase_worldBitangent = cross( ase_worldNormal, ase_worldTangent ) * ase_vertexTangentSign;
				outputPackedVaryingsMeshToPS.ase_texcoord3.xyz = ase_worldBitangent;
				outputPackedVaryingsMeshToPS.ase_texcoord4.xyz = vertexToFrag73_g117794;
				
				outputPackedVaryingsMeshToPS.ase_color = inputMesh.ase_color;
				outputPackedVaryingsMeshToPS.ase_texcoord5 = inputMesh.ase_texcoord;
				
				//setting value to unused interpolator channels and avoid initialization warnings
				outputPackedVaryingsMeshToPS.ase_texcoord3.w = 0;
				outputPackedVaryingsMeshToPS.ase_texcoord4.w = 0;

				#ifdef ASE_ABSOLUTE_VERTEX_POS
				float3 defaultVertexValue = inputMesh.positionOS.xyz;
				#else
				float3 defaultVertexValue = float3( 0, 0, 0 );
				#endif
				float3 vertexValue = temp_output_31_0_g118154;

				#ifdef ASE_ABSOLUTE_VERTEX_POS
				inputMesh.positionOS.xyz = vertexValue;
				#else
				inputMesh.positionOS.xyz += vertexValue;
				#endif

				inputMesh.normalOS = Out_NormalOS15_g118156;
				inputMesh.tangentOS = Out_TangentOS15_g118156;

				float3 positionRWS = TransformObjectToWorld(inputMesh.positionOS);
				float3 normalWS = TransformObjectToWorldNormal(inputMesh.normalOS);
				float4 tangentWS = float4(TransformObjectToWorldDir(inputMesh.tangentOS.xyz), inputMesh.tangentOS.w);

				outputPackedVaryingsMeshToPS.positionCS = TransformWorldToHClip(positionRWS);
				outputPackedVaryingsMeshToPS.positionRWS.xyz = positionRWS;
				outputPackedVaryingsMeshToPS.normalWS.xyz = normalWS;
				outputPackedVaryingsMeshToPS.tangentWS.xyzw = tangentWS;
				return outputPackedVaryingsMeshToPS;
			}

			#if defined(ASE_TESSELLATION)
			struct VertexControl
			{
				float3 positionOS : INTERNALTESSPOS;
				float3 normalOS : NORMAL;
				float4 tangentOS : TANGENT;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;

				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct TessellationFactors
			{
				float edge[3] : SV_TessFactor;
				float inside : SV_InsideTessFactor;
			};

			VertexControl Vert ( AttributesMesh v )
			{
				VertexControl o;
				UNITY_SETUP_INSTANCE_ID(v);
				UNITY_TRANSFER_INSTANCE_ID(v, o);
				o.positionOS = v.positionOS;
				o.normalOS = v.normalOS;
				o.tangentOS = v.tangentOS;
				o.ase_color = v.ase_color;
				o.ase_texcoord = v.ase_texcoord;
				return o;
			}

			TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
			{
				TessellationFactors o;
				float4 tf = 1;
				float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
				float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
				#if (SHADEROPTIONS_CAMERA_RELATIVE_RENDERING != 0)
				float3 cameraPos = 0;
				#else
				float3 cameraPos = _WorldSpaceCameraPos;
				#endif
				#if defined(ASE_FIXED_TESSELLATION)
				tf = FixedTess( tessValue );
				#elif defined(ASE_DISTANCE_TESSELLATION)
				tf = DistanceBasedTess(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), tessValue, tessMin, tessMax, GetObjectToWorldMatrix(), cameraPos );
				#elif defined(ASE_LENGTH_TESSELLATION)
				tf = EdgeLengthBasedTess(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), edgeLength, GetObjectToWorldMatrix(), cameraPos, _ScreenParams );
				#elif defined(ASE_LENGTH_CULL_TESSELLATION)
				tf = EdgeLengthBasedTessCull(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), edgeLength, tessMaxDisp, GetObjectToWorldMatrix(), cameraPos, _ScreenParams, _FrustumPlanes );
				#endif
				o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
				return o;
			}

			[domain("tri")]
			[partitioning("fractional_odd")]
			[outputtopology("triangle_cw")]
			[patchconstantfunc("TessellationFunction")]
			[outputcontrolpoints(3)]
			VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
			{
			   return patch[id];
			}

			[domain("tri")]
			PackedVaryingsMeshToPS DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
			{
				AttributesMesh o = (AttributesMesh) 0;
				o.positionOS = patch[0].positionOS * bary.x + patch[1].positionOS * bary.y + patch[2].positionOS * bary.z;
				o.normalOS = patch[0].normalOS * bary.x + patch[1].normalOS * bary.y + patch[2].normalOS * bary.z;
				o.tangentOS = patch[0].tangentOS * bary.x + patch[1].tangentOS * bary.y + patch[2].tangentOS * bary.z;
				o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
				o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
				#if defined(ASE_PHONG_TESSELLATION)
				float3 pp[3];
				for (int i = 0; i < 3; ++i)
					pp[i] = o.positionOS.xyz - patch[i].normalOS * (dot(o.positionOS.xyz, patch[i].normalOS) - dot(patch[i].positionOS.xyz, patch[i].normalOS));
				float phongStrength = _TessPhongStrength;
				o.positionOS.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.positionOS.xyz;
				#endif
				UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
				return VertexFunction(o);
			}
			#else
			PackedVaryingsMeshToPS Vert ( AttributesMesh v )
			{
				return VertexFunction( v );
			}
			#endif

			#if defined(WRITE_NORMAL_BUFFER) && defined(WRITE_MSAA_DEPTH)
			#define SV_TARGET_DECAL SV_Target2
			#elif defined(WRITE_NORMAL_BUFFER) || defined(WRITE_MSAA_DEPTH)
			#define SV_TARGET_DECAL SV_Target1
			#else
			#define SV_TARGET_DECAL SV_Target0
			#endif

			void Frag( PackedVaryingsMeshToPS packedInput
						#if defined(SCENESELECTIONPASS) || defined(SCENEPICKINGPASS)
						, out float4 outColor : SV_Target0
						#else
							#ifdef WRITE_MSAA_DEPTH
							, out float4 depthColor : SV_Target0
								#ifdef WRITE_NORMAL_BUFFER
								, out float4 outNormalBuffer : SV_Target1
								#endif
							#else
								#ifdef WRITE_NORMAL_BUFFER
								, out float4 outNormalBuffer : SV_Target0
								#endif
							#endif

							#if (defined(WRITE_DECAL_BUFFER) && !defined(_DISABLE_DECALS)) || defined(WRITE_RENDERING_LAYER)
							, out float4 outDecalBuffer : SV_TARGET_DECAL
							#endif
						#endif

						#if defined(_DEPTHOFFSET_ON) && !defined(SCENEPICKINGPASS)
						, out float outputDepth : DEPTH_OFFSET_SEMANTIC
						#endif
						
					)
			{
			UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(packedInput);
			UNITY_SETUP_INSTANCE_ID(packedInput);

				float3 positionRWS = packedInput.positionRWS.xyz;
				float3 normalWS = packedInput.normalWS.xyz;
				float4 tangentWS = packedInput.tangentWS.xyzw;

				FragInputs input;
				ZERO_INITIALIZE(FragInputs, input);

				input.tangentToWorld = k_identity3x3;
				input.positionSS = packedInput.positionCS;

				input.positionRWS = positionRWS;
				input.tangentToWorld = BuildTangentToWorld(tangentWS, normalWS);

				#if _DOUBLESIDED_ON && SHADER_STAGE_FRAGMENT
				input.isFrontFace = IS_FRONT_VFACE( packedInput.cullFace, true, false);
				#elif SHADER_STAGE_FRAGMENT
				#if defined(ASE_NEED_CULLFACE)
				input.isFrontFace = IS_FRONT_VFACE( packedInput.cullFace, true, false );
				#endif
				#endif
				half isFrontFace = input.isFrontFace;

				PositionInputs posInput = GetPositionInput(input.positionSS.xy, _ScreenSize.zw, input.positionSS.z, input.positionSS.w, input.positionRWS);

				float3 V = GetWorldSpaceNormalizeViewDir(input.positionRWS);

				SmoothSurfaceDescription surfaceDescription = (SmoothSurfaceDescription)0;
				float localBreakData4_g118158 = ( 0.0 );
				float localCompData3_g118135 = ( 0.0 );
				TVEVisualData Data3_g118135 = (TVEVisualData)0;
				half Dummy594_g118134 = ( _CutoutCategory + _CutoutEnd + _CutoutElementMode + _CutoutBakeInfo );
				float In_Dummy3_g118135 = Dummy594_g118134;
				float localBreakData4_g118145 = ( 0.0 );
				float localCompData3_g118129 = ( 0.0 );
				TVEVisualData Data3_g118129 = (TVEVisualData)0;
				half Dummy145_g118119 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveElementMode + _EmissiveFlagMode );
				float In_Dummy3_g118129 = Dummy145_g118119;
				float localBreakData4_g118128 = ( 0.0 );
				float localCompData3_g118092 = ( 0.0 );
				TVEVisualData Data3_g118092 = (TVEVisualData)0;
				half Dummy594_g118090 = ( _WetnessCategory + _WetnessEnd + _WetnessElementMode + _WetnessBakeInfo );
				float In_Dummy3_g118092 = Dummy594_g118090;
				float localBreakData4_g118091 = ( 0.0 );
				float localCompData3_g118057 = ( 0.0 );
				TVEVisualData Data3_g118057 = (TVEVisualData)0;
				half Dummy594_g118054 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayElementMode + _OverlayBakeInfo );
				float In_Dummy3_g118057 = Dummy594_g118054;
				float localBreakData4_g118055 = ( 0.0 );
				float localCompData3_g118034 = ( 0.0 );
				TVEVisualData Data3_g118034 = (TVEVisualData)0;
				half Dummy205_g118031 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessElementMode + _DrynessBakeInfo );
				float In_Dummy3_g118034 = Dummy205_g118031;
				float localBreakData4_g118033 = ( 0.0 );
				float localCompData3_g118028 = ( 0.0 );
				TVEVisualData Data3_g118028 = (TVEVisualData)0;
				half Dummy205_g118007 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeInfo );
				float In_Dummy3_g118028 = Dummy205_g118007;
				float localBreakData4_g118029 = ( 0.0 );
				float localCompData3_g117894 = ( 0.0 );
				TVEVisualData Data3_g117894 = (TVEVisualData)0;
				half Dummy9163_g117893 = ( _CategoryTerrain + _EndTerrain );
				float In_Dummy3_g117894 = Dummy9163_g117893;
				float localHeightBasedBlending7362_g117895 = ( 0.0 );
				float3 ase_worldPos = GetAbsolutePositionWS( positionRWS );
				float4 appendResult9125_g117895 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
				float4 temp_output_35_0_g118003 = appendResult9125_g117895;
				float2 InputScale48_g118003 = (temp_output_35_0_g118003).zw;
				half2 FinalScale53_g118003 = ( 1.0 / InputScale48_g118003 );
				float2 InputPosition52_g118003 = (temp_output_35_0_g118003).xy;
				half2 FinalPosition58_g118003 = -( FinalScale53_g118003 * InputPosition52_g118003 );
				float2 temp_output_65_0_g118003 = ( ( (ase_worldPos).xz * FinalScale53_g118003 ) + FinalPosition58_g118003 );
				float4 temp_output_70_0_g118003 = _TerrainControlTex1_TexelSize;
				float2 InputTexelSize68_g118003 = (temp_output_70_0_g118003).zw;
				float2 temp_cast_0 = (1.0).xx;
				float2 InputTexelRecip69_g118003 = (temp_output_70_0_g118003).xy;
				float2 Terrain_Control_UV7873_g117895 = ( ( ( temp_output_65_0_g118003 / ( 1.0 / ( InputTexelSize68_g118003 - temp_cast_0 ) ) ) + 0.5 ) * InputTexelRecip69_g118003 );
				half4 Terrain_Control_047365_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_047362_g117895 = Terrain_Control_047365_g117895;
				half4 Terrain_Control_087366_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_087362_g117895 = Terrain_Control_087366_g117895;
				half4 Terrain_Control_127712_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_127362_g117895 = Terrain_Control_127712_g117895;
				half4 Terrain_Control_167711_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_167362_g117895 = Terrain_Control_167711_g117895;
				TEXTURE2D(Texture238_g117940) = _TerrainShaderTex1;
				float localFilterTexture30_g118001 = ( 0.0 );
				SamplerState SamplerDefault30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g118001 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g118001 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g118001 = SamplerDefault30_g118001;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g118001 = SamplerDefault30_g118001;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g118001 = SamplerPoint30_g118001;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g118001 = SamplerLow30_g118001;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g118001 = SamplerMedium30_g118001;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g118001 = SamplerHigh30_g118001;
				#endif
				SamplerState Sampler238_g117940 = SS30_g118001;
				half4 Input_Terrain_Coords_016785_g117895 = _TerrainCoord1;
				float4 temp_output_37_0_g117940 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117940 = temp_output_37_0_g117940;
				half3 Input_Position9197_g117895 = ase_worldPos;
				float3 temp_output_279_0_g117940 = Input_Position9197_g117895;
				half3 WorldPosition238_g117940 = temp_output_279_0_g117940;
				half4 localSamplePlanar2D238_g117940 = SamplePlanar2D( Texture238_g117940 , Sampler238_g117940 , Coords238_g117940 , WorldPosition238_g117940 );
				TEXTURE2D(Texture246_g117940) = _TerrainShaderTex1;
				SamplerState Sampler246_g117940 = SS30_g118001;
				half4 Coords246_g117940 = temp_output_37_0_g117940;
				half3 WorldPosition246_g117940 = temp_output_279_0_g117940;
				half3 Input_Normal9199_g117895 = normalWS;
				float3 temp_output_280_0_g117940 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117940 = temp_output_280_0_g117940;
				half4 localSamplePlanar3D246_g117940 = SamplePlanar3D( Texture246_g117940 , Sampler246_g117940 , Coords246_g117940 , WorldPosition246_g117940 , WorldNormal246_g117940 );
				TEXTURE2D(Texture234_g117940) = _TerrainShaderTex1;
				SamplerState Sampler234_g117940 = SS30_g118001;
				float4 Coords234_g117940 = temp_output_37_0_g117940;
				float3 WorldPosition234_g117940 = temp_output_279_0_g117940;
				float4 localSampleStochastic2D234_g117940 = SampleStochastic2D( Texture234_g117940 , Sampler234_g117940 , Coords234_g117940 , WorldPosition234_g117940 );
				TEXTURE2D(Texture263_g117940) = _TerrainShaderTex1;
				SamplerState Sampler263_g117940 = SS30_g118001;
				half4 Coords263_g117940 = temp_output_37_0_g117940;
				half3 WorldPosition263_g117940 = temp_output_279_0_g117940;
				half3 WorldNormal263_g117940 = temp_output_280_0_g117940;
				half4 localSampleStochastic3D263_g117940 = SampleStochastic3D( Texture263_g117940 , Sampler263_g117940 , Coords263_g117940 , WorldPosition263_g117940 , WorldNormal263_g117940 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8639_g117895 = localSamplePlanar2D238_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8639_g117895 = localSamplePlanar3D246_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8639_g117895 = localSampleStochastic2D234_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8639_g117895 = localSampleStochastic3D263_g117940;
				#else
				float4 staticSwitch8639_g117895 = localSamplePlanar2D238_g117940;
				#endif
				float4 temp_output_7_0_g117897 = _TerrainShaderMin1;
				float4 temp_output_10_0_g117897 = ( _TerrainShaderMax1 - temp_output_7_0_g117897 );
				float4 temp_output_6970_0_g117895 = saturate( ( ( staticSwitch8639_g117895 - temp_output_7_0_g117897 ) / ( temp_output_10_0_g117897 + 0.0001 ) ) );
				half4 Masks_015_g117901 = temp_output_6970_0_g117895;
				TEXTURE2D(Texture238_g117944) = _TerrainShaderTex2;
				SamplerState Sampler238_g117944 = SS30_g118001;
				half4 Input_Terrain_Coords_026787_g117895 = _TerrainCoord2;
				float4 temp_output_37_0_g117944 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117944 = temp_output_37_0_g117944;
				float3 temp_output_279_0_g117944 = Input_Position9197_g117895;
				half3 WorldPosition238_g117944 = temp_output_279_0_g117944;
				half4 localSamplePlanar2D238_g117944 = SamplePlanar2D( Texture238_g117944 , Sampler238_g117944 , Coords238_g117944 , WorldPosition238_g117944 );
				TEXTURE2D(Texture246_g117944) = _TerrainShaderTex2;
				SamplerState Sampler246_g117944 = SS30_g118001;
				half4 Coords246_g117944 = temp_output_37_0_g117944;
				half3 WorldPosition246_g117944 = temp_output_279_0_g117944;
				float3 temp_output_280_0_g117944 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117944 = temp_output_280_0_g117944;
				half4 localSamplePlanar3D246_g117944 = SamplePlanar3D( Texture246_g117944 , Sampler246_g117944 , Coords246_g117944 , WorldPosition246_g117944 , WorldNormal246_g117944 );
				TEXTURE2D(Texture234_g117944) = _TerrainShaderTex2;
				SamplerState Sampler234_g117944 = SS30_g118001;
				float4 Coords234_g117944 = temp_output_37_0_g117944;
				float3 WorldPosition234_g117944 = temp_output_279_0_g117944;
				float4 localSampleStochastic2D234_g117944 = SampleStochastic2D( Texture234_g117944 , Sampler234_g117944 , Coords234_g117944 , WorldPosition234_g117944 );
				TEXTURE2D(Texture263_g117944) = _TerrainShaderTex2;
				SamplerState Sampler263_g117944 = SS30_g118001;
				half4 Coords263_g117944 = temp_output_37_0_g117944;
				half3 WorldPosition263_g117944 = temp_output_279_0_g117944;
				half3 WorldNormal263_g117944 = temp_output_280_0_g117944;
				half4 localSampleStochastic3D263_g117944 = SampleStochastic3D( Texture263_g117944 , Sampler263_g117944 , Coords263_g117944 , WorldPosition263_g117944 , WorldNormal263_g117944 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8640_g117895 = localSamplePlanar2D238_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8640_g117895 = localSamplePlanar3D246_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8640_g117895 = localSampleStochastic2D234_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8640_g117895 = localSampleStochastic3D263_g117944;
				#else
				float4 staticSwitch8640_g117895 = localSamplePlanar2D238_g117944;
				#endif
				float4 temp_output_7_0_g117907 = _TerrainShaderMin2;
				float4 temp_output_10_0_g117907 = ( _TerrainShaderMax2 - temp_output_7_0_g117907 );
				float4 temp_output_6977_0_g117895 = saturate( ( ( staticSwitch8640_g117895 - temp_output_7_0_g117907 ) / ( temp_output_10_0_g117907 + 0.0001 ) ) );
				half4 Masks_0210_g117901 = temp_output_6977_0_g117895;
				TEXTURE2D(Texture238_g117949) = _TerrainShaderTex3;
				SamplerState Sampler238_g117949 = SS30_g118001;
				half4 Input_Terrain_Coords_036789_g117895 = _TerrainCoord3;
				float4 temp_output_37_0_g117949 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117949 = temp_output_37_0_g117949;
				float3 temp_output_279_0_g117949 = Input_Position9197_g117895;
				half3 WorldPosition238_g117949 = temp_output_279_0_g117949;
				half4 localSamplePlanar2D238_g117949 = SamplePlanar2D( Texture238_g117949 , Sampler238_g117949 , Coords238_g117949 , WorldPosition238_g117949 );
				TEXTURE2D(Texture246_g117949) = _TerrainShaderTex3;
				SamplerState Sampler246_g117949 = SS30_g118001;
				half4 Coords246_g117949 = temp_output_37_0_g117949;
				half3 WorldPosition246_g117949 = temp_output_279_0_g117949;
				float3 temp_output_280_0_g117949 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117949 = temp_output_280_0_g117949;
				half4 localSamplePlanar3D246_g117949 = SamplePlanar3D( Texture246_g117949 , Sampler246_g117949 , Coords246_g117949 , WorldPosition246_g117949 , WorldNormal246_g117949 );
				TEXTURE2D(Texture234_g117949) = _TerrainShaderTex3;
				SamplerState Sampler234_g117949 = SS30_g118001;
				float4 Coords234_g117949 = temp_output_37_0_g117949;
				float3 WorldPosition234_g117949 = temp_output_279_0_g117949;
				float4 localSampleStochastic2D234_g117949 = SampleStochastic2D( Texture234_g117949 , Sampler234_g117949 , Coords234_g117949 , WorldPosition234_g117949 );
				TEXTURE2D(Texture263_g117949) = _TerrainShaderTex3;
				SamplerState Sampler263_g117949 = SS30_g118001;
				half4 Coords263_g117949 = temp_output_37_0_g117949;
				half3 WorldPosition263_g117949 = temp_output_279_0_g117949;
				half3 WorldNormal263_g117949 = temp_output_280_0_g117949;
				half4 localSampleStochastic3D263_g117949 = SampleStochastic3D( Texture263_g117949 , Sampler263_g117949 , Coords263_g117949 , WorldPosition263_g117949 , WorldNormal263_g117949 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8641_g117895 = localSamplePlanar2D238_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8641_g117895 = localSamplePlanar3D246_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8641_g117895 = localSampleStochastic2D234_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8641_g117895 = localSampleStochastic3D263_g117949;
				#else
				float4 staticSwitch8641_g117895 = localSamplePlanar2D238_g117949;
				#endif
				float4 temp_output_7_0_g117908 = _TerrainShaderMin3;
				float4 temp_output_10_0_g117908 = ( _TerrainShaderMax3 - temp_output_7_0_g117908 );
				float4 temp_output_6978_0_g117895 = saturate( ( ( staticSwitch8641_g117895 - temp_output_7_0_g117908 ) / ( temp_output_10_0_g117908 + 0.0001 ) ) );
				half4 Masks_0312_g117901 = temp_output_6978_0_g117895;
				TEXTURE2D(Texture238_g117950) = _TerrainShaderTex4;
				SamplerState Sampler238_g117950 = SS30_g118001;
				half4 Input_Terrain_Coords_046791_g117895 = _TerrainCoord4;
				float4 temp_output_37_0_g117950 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117950 = temp_output_37_0_g117950;
				float3 temp_output_279_0_g117950 = Input_Position9197_g117895;
				half3 WorldPosition238_g117950 = temp_output_279_0_g117950;
				half4 localSamplePlanar2D238_g117950 = SamplePlanar2D( Texture238_g117950 , Sampler238_g117950 , Coords238_g117950 , WorldPosition238_g117950 );
				TEXTURE2D(Texture246_g117950) = _TerrainShaderTex4;
				SamplerState Sampler246_g117950 = SS30_g118001;
				half4 Coords246_g117950 = temp_output_37_0_g117950;
				half3 WorldPosition246_g117950 = temp_output_279_0_g117950;
				float3 temp_output_280_0_g117950 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117950 = temp_output_280_0_g117950;
				half4 localSamplePlanar3D246_g117950 = SamplePlanar3D( Texture246_g117950 , Sampler246_g117950 , Coords246_g117950 , WorldPosition246_g117950 , WorldNormal246_g117950 );
				TEXTURE2D(Texture234_g117950) = _TerrainShaderTex4;
				SamplerState Sampler234_g117950 = SS30_g118001;
				float4 Coords234_g117950 = temp_output_37_0_g117950;
				float3 WorldPosition234_g117950 = temp_output_279_0_g117950;
				float4 localSampleStochastic2D234_g117950 = SampleStochastic2D( Texture234_g117950 , Sampler234_g117950 , Coords234_g117950 , WorldPosition234_g117950 );
				TEXTURE2D(Texture263_g117950) = _TerrainShaderTex4;
				SamplerState Sampler263_g117950 = SS30_g118001;
				half4 Coords263_g117950 = temp_output_37_0_g117950;
				half3 WorldPosition263_g117950 = temp_output_279_0_g117950;
				half3 WorldNormal263_g117950 = temp_output_280_0_g117950;
				half4 localSampleStochastic3D263_g117950 = SampleStochastic3D( Texture263_g117950 , Sampler263_g117950 , Coords263_g117950 , WorldPosition263_g117950 , WorldNormal263_g117950 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8642_g117895 = localSamplePlanar2D238_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8642_g117895 = localSamplePlanar3D246_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8642_g117895 = localSampleStochastic2D234_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8642_g117895 = localSampleStochastic3D263_g117950;
				#else
				float4 staticSwitch8642_g117895 = localSamplePlanar2D238_g117950;
				#endif
				float4 temp_output_7_0_g117909 = _TerrainShaderMin4;
				float4 temp_output_10_0_g117909 = ( _TerrainShaderMax4 - temp_output_7_0_g117909 );
				float4 temp_output_6983_0_g117895 = saturate( ( ( staticSwitch8642_g117895 - temp_output_7_0_g117909 ) / ( temp_output_10_0_g117909 + 0.0001 ) ) );
				half4 Masks_0414_g117901 = temp_output_6983_0_g117895;
				float4 appendResult29_g117901 = (float4((Masks_015_g117901).z , (Masks_0210_g117901).z , (Masks_0312_g117901).z , (Masks_0414_g117901).z));
				half4 Control31_g117901 = Terrain_Control_047365_g117895;
				half4 Terrain_Height_047210_g117895 = ( appendResult29_g117901 * Control31_g117901 );
				float4 heights_047362_g117895 = Terrain_Height_047210_g117895;
				TEXTURE2D(Texture238_g117953) = _TerrainShaderTex5;
				SamplerState Sampler238_g117953 = SS30_g118001;
				half4 Input_Terrain_Coords_058750_g117895 = _TerrainCoord5;
				float4 temp_output_37_0_g117953 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117953 = temp_output_37_0_g117953;
				float3 temp_output_279_0_g117953 = Input_Position9197_g117895;
				half3 WorldPosition238_g117953 = temp_output_279_0_g117953;
				half4 localSamplePlanar2D238_g117953 = SamplePlanar2D( Texture238_g117953 , Sampler238_g117953 , Coords238_g117953 , WorldPosition238_g117953 );
				TEXTURE2D(Texture246_g117953) = _TerrainShaderTex5;
				SamplerState Sampler246_g117953 = SS30_g118001;
				half4 Coords246_g117953 = temp_output_37_0_g117953;
				half3 WorldPosition246_g117953 = temp_output_279_0_g117953;
				float3 temp_output_280_0_g117953 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117953 = temp_output_280_0_g117953;
				half4 localSamplePlanar3D246_g117953 = SamplePlanar3D( Texture246_g117953 , Sampler246_g117953 , Coords246_g117953 , WorldPosition246_g117953 , WorldNormal246_g117953 );
				TEXTURE2D(Texture234_g117953) = _TerrainShaderTex5;
				SamplerState Sampler234_g117953 = SS30_g118001;
				float4 Coords234_g117953 = temp_output_37_0_g117953;
				float3 WorldPosition234_g117953 = temp_output_279_0_g117953;
				float4 localSampleStochastic2D234_g117953 = SampleStochastic2D( Texture234_g117953 , Sampler234_g117953 , Coords234_g117953 , WorldPosition234_g117953 );
				TEXTURE2D(Texture263_g117953) = _TerrainShaderTex5;
				SamplerState Sampler263_g117953 = SS30_g118001;
				half4 Coords263_g117953 = temp_output_37_0_g117953;
				half3 WorldPosition263_g117953 = temp_output_279_0_g117953;
				half3 WorldNormal263_g117953 = temp_output_280_0_g117953;
				half4 localSampleStochastic3D263_g117953 = SampleStochastic3D( Texture263_g117953 , Sampler263_g117953 , Coords263_g117953 , WorldPosition263_g117953 , WorldNormal263_g117953 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8710_g117895 = localSamplePlanar2D238_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8710_g117895 = localSamplePlanar3D246_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8710_g117895 = localSampleStochastic2D234_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8710_g117895 = localSampleStochastic3D263_g117953;
				#else
				float4 staticSwitch8710_g117895 = localSamplePlanar2D238_g117953;
				#endif
				float4 temp_output_7_0_g117912 = _TerrainShaderMin5;
				float4 temp_output_10_0_g117912 = ( _TerrainShaderMax5 - temp_output_7_0_g117912 );
				float4 temp_output_8714_0_g117895 = saturate( ( ( staticSwitch8710_g117895 - temp_output_7_0_g117912 ) / ( temp_output_10_0_g117912 + 0.0001 ) ) );
				half4 Masks_015_g117913 = temp_output_8714_0_g117895;
				TEXTURE2D(Texture238_g117984) = _TerrainShaderTex6;
				SamplerState Sampler238_g117984 = SS30_g118001;
				half4 Input_Terrain_Coords_068751_g117895 = _TerrainCoord6;
				float4 temp_output_37_0_g117984 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117984 = temp_output_37_0_g117984;
				float3 temp_output_279_0_g117984 = Input_Position9197_g117895;
				half3 WorldPosition238_g117984 = temp_output_279_0_g117984;
				half4 localSamplePlanar2D238_g117984 = SamplePlanar2D( Texture238_g117984 , Sampler238_g117984 , Coords238_g117984 , WorldPosition238_g117984 );
				TEXTURE2D(Texture246_g117984) = _TerrainShaderTex6;
				SamplerState Sampler246_g117984 = SS30_g118001;
				half4 Coords246_g117984 = temp_output_37_0_g117984;
				half3 WorldPosition246_g117984 = temp_output_279_0_g117984;
				float3 temp_output_280_0_g117984 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117984 = temp_output_280_0_g117984;
				half4 localSamplePlanar3D246_g117984 = SamplePlanar3D( Texture246_g117984 , Sampler246_g117984 , Coords246_g117984 , WorldPosition246_g117984 , WorldNormal246_g117984 );
				TEXTURE2D(Texture234_g117984) = _TerrainShaderTex6;
				SamplerState Sampler234_g117984 = SS30_g118001;
				float4 Coords234_g117984 = temp_output_37_0_g117984;
				float3 WorldPosition234_g117984 = temp_output_279_0_g117984;
				float4 localSampleStochastic2D234_g117984 = SampleStochastic2D( Texture234_g117984 , Sampler234_g117984 , Coords234_g117984 , WorldPosition234_g117984 );
				TEXTURE2D(Texture263_g117984) = _TerrainShaderTex6;
				SamplerState Sampler263_g117984 = SS30_g118001;
				half4 Coords263_g117984 = temp_output_37_0_g117984;
				half3 WorldPosition263_g117984 = temp_output_279_0_g117984;
				half3 WorldNormal263_g117984 = temp_output_280_0_g117984;
				half4 localSampleStochastic3D263_g117984 = SampleStochastic3D( Texture263_g117984 , Sampler263_g117984 , Coords263_g117984 , WorldPosition263_g117984 , WorldNormal263_g117984 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8711_g117895 = localSamplePlanar2D238_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8711_g117895 = localSamplePlanar3D246_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8711_g117895 = localSampleStochastic2D234_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8711_g117895 = localSampleStochastic3D263_g117984;
				#else
				float4 staticSwitch8711_g117895 = localSamplePlanar2D238_g117984;
				#endif
				float4 temp_output_7_0_g117937 = _TerrainShaderMin6;
				float4 temp_output_10_0_g117937 = ( _TerrainShaderMax6 - temp_output_7_0_g117937 );
				float4 temp_output_8721_0_g117895 = saturate( ( ( staticSwitch8711_g117895 - temp_output_7_0_g117937 ) / ( temp_output_10_0_g117937 + 0.0001 ) ) );
				half4 Masks_0210_g117913 = temp_output_8721_0_g117895;
				TEXTURE2D(Texture238_g117985) = _TerrainShaderTex7;
				SamplerState Sampler238_g117985 = SS30_g118001;
				half4 Input_Terrain_Coords_078752_g117895 = _TerrainCoord7;
				float4 temp_output_37_0_g117985 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117985 = temp_output_37_0_g117985;
				float3 temp_output_279_0_g117985 = Input_Position9197_g117895;
				half3 WorldPosition238_g117985 = temp_output_279_0_g117985;
				half4 localSamplePlanar2D238_g117985 = SamplePlanar2D( Texture238_g117985 , Sampler238_g117985 , Coords238_g117985 , WorldPosition238_g117985 );
				TEXTURE2D(Texture246_g117985) = _TerrainShaderTex7;
				SamplerState Sampler246_g117985 = SS30_g118001;
				half4 Coords246_g117985 = temp_output_37_0_g117985;
				half3 WorldPosition246_g117985 = temp_output_279_0_g117985;
				float3 temp_output_280_0_g117985 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117985 = temp_output_280_0_g117985;
				half4 localSamplePlanar3D246_g117985 = SamplePlanar3D( Texture246_g117985 , Sampler246_g117985 , Coords246_g117985 , WorldPosition246_g117985 , WorldNormal246_g117985 );
				TEXTURE2D(Texture234_g117985) = _TerrainShaderTex7;
				SamplerState Sampler234_g117985 = SS30_g118001;
				float4 Coords234_g117985 = temp_output_37_0_g117985;
				float3 WorldPosition234_g117985 = temp_output_279_0_g117985;
				float4 localSampleStochastic2D234_g117985 = SampleStochastic2D( Texture234_g117985 , Sampler234_g117985 , Coords234_g117985 , WorldPosition234_g117985 );
				TEXTURE2D(Texture263_g117985) = _TerrainShaderTex7;
				SamplerState Sampler263_g117985 = SS30_g118001;
				half4 Coords263_g117985 = temp_output_37_0_g117985;
				half3 WorldPosition263_g117985 = temp_output_279_0_g117985;
				half3 WorldNormal263_g117985 = temp_output_280_0_g117985;
				half4 localSampleStochastic3D263_g117985 = SampleStochastic3D( Texture263_g117985 , Sampler263_g117985 , Coords263_g117985 , WorldPosition263_g117985 , WorldNormal263_g117985 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8712_g117895 = localSamplePlanar2D238_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8712_g117895 = localSamplePlanar3D246_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8712_g117895 = localSampleStochastic2D234_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8712_g117895 = localSampleStochastic3D263_g117985;
				#else
				float4 staticSwitch8712_g117895 = localSamplePlanar2D238_g117985;
				#endif
				float4 temp_output_7_0_g117938 = _TerrainShaderMin7;
				float4 temp_output_10_0_g117938 = ( _TerrainShaderMax7 - temp_output_7_0_g117938 );
				float4 temp_output_8724_0_g117895 = saturate( ( ( staticSwitch8712_g117895 - temp_output_7_0_g117938 ) / ( temp_output_10_0_g117938 + 0.0001 ) ) );
				half4 Masks_0312_g117913 = temp_output_8724_0_g117895;
				TEXTURE2D(Texture238_g117986) = _TerrainShaderTex8;
				SamplerState Sampler238_g117986 = SS30_g118001;
				half4 Input_Terrain_Coords_088749_g117895 = _TerrainCoord8;
				float4 temp_output_37_0_g117986 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117986 = temp_output_37_0_g117986;
				float3 temp_output_279_0_g117986 = Input_Position9197_g117895;
				half3 WorldPosition238_g117986 = temp_output_279_0_g117986;
				half4 localSamplePlanar2D238_g117986 = SamplePlanar2D( Texture238_g117986 , Sampler238_g117986 , Coords238_g117986 , WorldPosition238_g117986 );
				TEXTURE2D(Texture246_g117986) = _TerrainShaderTex8;
				SamplerState Sampler246_g117986 = SS30_g118001;
				half4 Coords246_g117986 = temp_output_37_0_g117986;
				half3 WorldPosition246_g117986 = temp_output_279_0_g117986;
				float3 temp_output_280_0_g117986 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117986 = temp_output_280_0_g117986;
				half4 localSamplePlanar3D246_g117986 = SamplePlanar3D( Texture246_g117986 , Sampler246_g117986 , Coords246_g117986 , WorldPosition246_g117986 , WorldNormal246_g117986 );
				TEXTURE2D(Texture234_g117986) = _TerrainShaderTex8;
				SamplerState Sampler234_g117986 = SS30_g118001;
				float4 Coords234_g117986 = temp_output_37_0_g117986;
				float3 WorldPosition234_g117986 = temp_output_279_0_g117986;
				float4 localSampleStochastic2D234_g117986 = SampleStochastic2D( Texture234_g117986 , Sampler234_g117986 , Coords234_g117986 , WorldPosition234_g117986 );
				TEXTURE2D(Texture263_g117986) = _TerrainShaderTex8;
				SamplerState Sampler263_g117986 = SS30_g118001;
				half4 Coords263_g117986 = temp_output_37_0_g117986;
				half3 WorldPosition263_g117986 = temp_output_279_0_g117986;
				half3 WorldNormal263_g117986 = temp_output_280_0_g117986;
				half4 localSampleStochastic3D263_g117986 = SampleStochastic3D( Texture263_g117986 , Sampler263_g117986 , Coords263_g117986 , WorldPosition263_g117986 , WorldNormal263_g117986 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8713_g117895 = localSamplePlanar2D238_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8713_g117895 = localSamplePlanar3D246_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8713_g117895 = localSampleStochastic2D234_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8713_g117895 = localSampleStochastic3D263_g117986;
				#else
				float4 staticSwitch8713_g117895 = localSamplePlanar2D238_g117986;
				#endif
				float4 temp_output_7_0_g117939 = _TerrainShaderMin8;
				float4 temp_output_10_0_g117939 = ( _TerrainShaderMax8 - temp_output_7_0_g117939 );
				float4 temp_output_8727_0_g117895 = saturate( ( ( staticSwitch8713_g117895 - temp_output_7_0_g117939 ) / ( temp_output_10_0_g117939 + 0.0001 ) ) );
				half4 Masks_0414_g117913 = temp_output_8727_0_g117895;
				float4 appendResult29_g117913 = (float4((Masks_015_g117913).z , (Masks_0210_g117913).z , (Masks_0312_g117913).z , (Masks_0414_g117913).z));
				half4 Control31_g117913 = Terrain_Control_087366_g117895;
				half4 Terrain_Height_088731_g117895 = ( appendResult29_g117913 * Control31_g117913 );
				float4 heights_087362_g117895 = Terrain_Height_088731_g117895;
				TEXTURE2D(Texture238_g117956) = _TerrainShaderTex9;
				SamplerState Sampler238_g117956 = SS30_g118001;
				half4 Input_Terrain_Coords_098833_g117895 = _TerrainCoord9;
				float4 temp_output_37_0_g117956 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117956 = temp_output_37_0_g117956;
				float3 temp_output_279_0_g117956 = Input_Position9197_g117895;
				half3 WorldPosition238_g117956 = temp_output_279_0_g117956;
				half4 localSamplePlanar2D238_g117956 = SamplePlanar2D( Texture238_g117956 , Sampler238_g117956 , Coords238_g117956 , WorldPosition238_g117956 );
				TEXTURE2D(Texture246_g117956) = _TerrainShaderTex9;
				SamplerState Sampler246_g117956 = SS30_g118001;
				half4 Coords246_g117956 = temp_output_37_0_g117956;
				half3 WorldPosition246_g117956 = temp_output_279_0_g117956;
				float3 temp_output_280_0_g117956 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117956 = temp_output_280_0_g117956;
				half4 localSamplePlanar3D246_g117956 = SamplePlanar3D( Texture246_g117956 , Sampler246_g117956 , Coords246_g117956 , WorldPosition246_g117956 , WorldNormal246_g117956 );
				TEXTURE2D(Texture234_g117956) = _TerrainShaderTex9;
				SamplerState Sampler234_g117956 = SS30_g118001;
				float4 Coords234_g117956 = temp_output_37_0_g117956;
				float3 WorldPosition234_g117956 = temp_output_279_0_g117956;
				float4 localSampleStochastic2D234_g117956 = SampleStochastic2D( Texture234_g117956 , Sampler234_g117956 , Coords234_g117956 , WorldPosition234_g117956 );
				TEXTURE2D(Texture263_g117956) = _TerrainShaderTex9;
				SamplerState Sampler263_g117956 = SS30_g118001;
				half4 Coords263_g117956 = temp_output_37_0_g117956;
				half3 WorldPosition263_g117956 = temp_output_279_0_g117956;
				half3 WorldNormal263_g117956 = temp_output_280_0_g117956;
				half4 localSampleStochastic3D263_g117956 = SampleStochastic3D( Texture263_g117956 , Sampler263_g117956 , Coords263_g117956 , WorldPosition263_g117956 , WorldNormal263_g117956 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8878_g117895 = localSamplePlanar2D238_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8878_g117895 = localSamplePlanar3D246_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8878_g117895 = localSampleStochastic2D234_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8878_g117895 = localSampleStochastic3D263_g117956;
				#else
				float4 staticSwitch8878_g117895 = localSamplePlanar2D238_g117956;
				#endif
				float4 temp_output_7_0_g117919 = _TerrainShaderMin9;
				float4 temp_output_10_0_g117919 = ( _TerrainShaderMax9 - temp_output_7_0_g117919 );
				float4 temp_output_8815_0_g117895 = saturate( ( ( staticSwitch8878_g117895 - temp_output_7_0_g117919 ) / ( temp_output_10_0_g117919 + 0.0001 ) ) );
				half4 Masks_015_g117920 = temp_output_8815_0_g117895;
				TEXTURE2D(Texture238_g117966) = _TerrainShaderTex10;
				SamplerState Sampler238_g117966 = SS30_g118001;
				half4 Input_Terrain_Coords_108834_g117895 = _TerrainCoord10;
				float4 temp_output_37_0_g117966 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117966 = temp_output_37_0_g117966;
				float3 temp_output_279_0_g117966 = Input_Position9197_g117895;
				half3 WorldPosition238_g117966 = temp_output_279_0_g117966;
				half4 localSamplePlanar2D238_g117966 = SamplePlanar2D( Texture238_g117966 , Sampler238_g117966 , Coords238_g117966 , WorldPosition238_g117966 );
				TEXTURE2D(Texture246_g117966) = _TerrainShaderTex10;
				SamplerState Sampler246_g117966 = SS30_g118001;
				half4 Coords246_g117966 = temp_output_37_0_g117966;
				half3 WorldPosition246_g117966 = temp_output_279_0_g117966;
				float3 temp_output_280_0_g117966 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117966 = temp_output_280_0_g117966;
				half4 localSamplePlanar3D246_g117966 = SamplePlanar3D( Texture246_g117966 , Sampler246_g117966 , Coords246_g117966 , WorldPosition246_g117966 , WorldNormal246_g117966 );
				TEXTURE2D(Texture234_g117966) = _TerrainShaderTex10;
				SamplerState Sampler234_g117966 = SS30_g118001;
				float4 Coords234_g117966 = temp_output_37_0_g117966;
				float3 WorldPosition234_g117966 = temp_output_279_0_g117966;
				float4 localSampleStochastic2D234_g117966 = SampleStochastic2D( Texture234_g117966 , Sampler234_g117966 , Coords234_g117966 , WorldPosition234_g117966 );
				TEXTURE2D(Texture263_g117966) = _TerrainShaderTex10;
				SamplerState Sampler263_g117966 = SS30_g118001;
				half4 Coords263_g117966 = temp_output_37_0_g117966;
				half3 WorldPosition263_g117966 = temp_output_279_0_g117966;
				half3 WorldNormal263_g117966 = temp_output_280_0_g117966;
				half4 localSampleStochastic3D263_g117966 = SampleStochastic3D( Texture263_g117966 , Sampler263_g117966 , Coords263_g117966 , WorldPosition263_g117966 , WorldNormal263_g117966 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8860_g117895 = localSamplePlanar2D238_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8860_g117895 = localSamplePlanar3D246_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8860_g117895 = localSampleStochastic2D234_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8860_g117895 = localSampleStochastic3D263_g117966;
				#else
				float4 staticSwitch8860_g117895 = localSamplePlanar2D238_g117966;
				#endif
				float4 temp_output_7_0_g117931 = _TerrainShaderMin10;
				float4 temp_output_10_0_g117931 = ( _TerrainShaderMax10 - temp_output_7_0_g117931 );
				float4 temp_output_8818_0_g117895 = saturate( ( ( staticSwitch8860_g117895 - temp_output_7_0_g117931 ) / ( temp_output_10_0_g117931 + 0.0001 ) ) );
				half4 Masks_0210_g117920 = temp_output_8818_0_g117895;
				TEXTURE2D(Texture238_g117967) = _TerrainShaderTex11;
				SamplerState Sampler238_g117967 = SS30_g118001;
				half4 Input_Terrain_Coords_118835_g117895 = _TerrainCoord11;
				float4 temp_output_37_0_g117967 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117967 = temp_output_37_0_g117967;
				float3 temp_output_279_0_g117967 = Input_Position9197_g117895;
				half3 WorldPosition238_g117967 = temp_output_279_0_g117967;
				half4 localSamplePlanar2D238_g117967 = SamplePlanar2D( Texture238_g117967 , Sampler238_g117967 , Coords238_g117967 , WorldPosition238_g117967 );
				TEXTURE2D(Texture246_g117967) = _TerrainShaderTex11;
				SamplerState Sampler246_g117967 = SS30_g118001;
				half4 Coords246_g117967 = temp_output_37_0_g117967;
				half3 WorldPosition246_g117967 = temp_output_279_0_g117967;
				float3 temp_output_280_0_g117967 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117967 = temp_output_280_0_g117967;
				half4 localSamplePlanar3D246_g117967 = SamplePlanar3D( Texture246_g117967 , Sampler246_g117967 , Coords246_g117967 , WorldPosition246_g117967 , WorldNormal246_g117967 );
				TEXTURE2D(Texture234_g117967) = _TerrainShaderTex11;
				SamplerState Sampler234_g117967 = SS30_g118001;
				float4 Coords234_g117967 = temp_output_37_0_g117967;
				float3 WorldPosition234_g117967 = temp_output_279_0_g117967;
				float4 localSampleStochastic2D234_g117967 = SampleStochastic2D( Texture234_g117967 , Sampler234_g117967 , Coords234_g117967 , WorldPosition234_g117967 );
				TEXTURE2D(Texture263_g117967) = _TerrainShaderTex11;
				SamplerState Sampler263_g117967 = SS30_g118001;
				half4 Coords263_g117967 = temp_output_37_0_g117967;
				half3 WorldPosition263_g117967 = temp_output_279_0_g117967;
				half3 WorldNormal263_g117967 = temp_output_280_0_g117967;
				half4 localSampleStochastic3D263_g117967 = SampleStochastic3D( Texture263_g117967 , Sampler263_g117967 , Coords263_g117967 , WorldPosition263_g117967 , WorldNormal263_g117967 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8861_g117895 = localSamplePlanar2D238_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8861_g117895 = localSamplePlanar3D246_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8861_g117895 = localSampleStochastic2D234_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8861_g117895 = localSampleStochastic3D263_g117967;
				#else
				float4 staticSwitch8861_g117895 = localSamplePlanar2D238_g117967;
				#endif
				float4 temp_output_7_0_g117932 = _TerrainShaderMin11;
				float4 temp_output_10_0_g117932 = ( _TerrainShaderMax11 - temp_output_7_0_g117932 );
				float4 temp_output_8819_0_g117895 = saturate( ( ( staticSwitch8861_g117895 - temp_output_7_0_g117932 ) / ( temp_output_10_0_g117932 + 0.0001 ) ) );
				half4 Masks_0312_g117920 = temp_output_8819_0_g117895;
				TEXTURE2D(Texture238_g117968) = _TerrainShaderTex12;
				SamplerState Sampler238_g117968 = SS30_g118001;
				half4 Input_Terrain_Coords_128836_g117895 = _TerrainCoord12;
				float4 temp_output_37_0_g117968 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117968 = temp_output_37_0_g117968;
				float3 temp_output_279_0_g117968 = Input_Position9197_g117895;
				half3 WorldPosition238_g117968 = temp_output_279_0_g117968;
				half4 localSamplePlanar2D238_g117968 = SamplePlanar2D( Texture238_g117968 , Sampler238_g117968 , Coords238_g117968 , WorldPosition238_g117968 );
				TEXTURE2D(Texture246_g117968) = _TerrainShaderTex12;
				SamplerState Sampler246_g117968 = SS30_g118001;
				half4 Coords246_g117968 = temp_output_37_0_g117968;
				half3 WorldPosition246_g117968 = temp_output_279_0_g117968;
				float3 temp_output_280_0_g117968 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117968 = temp_output_280_0_g117968;
				half4 localSamplePlanar3D246_g117968 = SamplePlanar3D( Texture246_g117968 , Sampler246_g117968 , Coords246_g117968 , WorldPosition246_g117968 , WorldNormal246_g117968 );
				TEXTURE2D(Texture234_g117968) = _TerrainShaderTex12;
				SamplerState Sampler234_g117968 = SS30_g118001;
				float4 Coords234_g117968 = temp_output_37_0_g117968;
				float3 WorldPosition234_g117968 = temp_output_279_0_g117968;
				float4 localSampleStochastic2D234_g117968 = SampleStochastic2D( Texture234_g117968 , Sampler234_g117968 , Coords234_g117968 , WorldPosition234_g117968 );
				TEXTURE2D(Texture263_g117968) = _TerrainShaderTex12;
				SamplerState Sampler263_g117968 = SS30_g118001;
				half4 Coords263_g117968 = temp_output_37_0_g117968;
				half3 WorldPosition263_g117968 = temp_output_279_0_g117968;
				half3 WorldNormal263_g117968 = temp_output_280_0_g117968;
				half4 localSampleStochastic3D263_g117968 = SampleStochastic3D( Texture263_g117968 , Sampler263_g117968 , Coords263_g117968 , WorldPosition263_g117968 , WorldNormal263_g117968 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8879_g117895 = localSamplePlanar2D238_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8879_g117895 = localSamplePlanar3D246_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8879_g117895 = localSampleStochastic2D234_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8879_g117895 = localSampleStochastic3D263_g117968;
				#else
				float4 staticSwitch8879_g117895 = localSamplePlanar2D238_g117968;
				#endif
				float4 temp_output_7_0_g117933 = _TerrainShaderMin12;
				float4 temp_output_10_0_g117933 = ( _TerrainShaderMax12 - temp_output_7_0_g117933 );
				float4 temp_output_8820_0_g117895 = saturate( ( ( staticSwitch8879_g117895 - temp_output_7_0_g117933 ) / ( temp_output_10_0_g117933 + 0.0001 ) ) );
				half4 Masks_0414_g117920 = temp_output_8820_0_g117895;
				float4 appendResult29_g117920 = (float4((Masks_015_g117920).z , (Masks_0210_g117920).z , (Masks_0312_g117920).z , (Masks_0414_g117920).z));
				half4 Control31_g117920 = Terrain_Control_127712_g117895;
				half4 Terrain_Height_128870_g117895 = ( appendResult29_g117920 * Control31_g117920 );
				float4 heights_127362_g117895 = Terrain_Height_128870_g117895;
				TEXTURE2D(Texture238_g117964) = _TerrainShaderTex13;
				SamplerState Sampler238_g117964 = SS30_g118001;
				half4 Input_Terrain_Coords_138960_g117895 = _TerrainCoord13;
				float4 temp_output_37_0_g117964 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117964 = temp_output_37_0_g117964;
				float3 temp_output_279_0_g117964 = Input_Position9197_g117895;
				half3 WorldPosition238_g117964 = temp_output_279_0_g117964;
				half4 localSamplePlanar2D238_g117964 = SamplePlanar2D( Texture238_g117964 , Sampler238_g117964 , Coords238_g117964 , WorldPosition238_g117964 );
				TEXTURE2D(Texture246_g117964) = _TerrainShaderTex13;
				SamplerState Sampler246_g117964 = SS30_g118001;
				half4 Coords246_g117964 = temp_output_37_0_g117964;
				half3 WorldPosition246_g117964 = temp_output_279_0_g117964;
				float3 temp_output_280_0_g117964 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117964 = temp_output_280_0_g117964;
				half4 localSamplePlanar3D246_g117964 = SamplePlanar3D( Texture246_g117964 , Sampler246_g117964 , Coords246_g117964 , WorldPosition246_g117964 , WorldNormal246_g117964 );
				TEXTURE2D(Texture234_g117964) = _TerrainShaderTex13;
				SamplerState Sampler234_g117964 = SS30_g118001;
				float4 Coords234_g117964 = temp_output_37_0_g117964;
				float3 WorldPosition234_g117964 = temp_output_279_0_g117964;
				float4 localSampleStochastic2D234_g117964 = SampleStochastic2D( Texture234_g117964 , Sampler234_g117964 , Coords234_g117964 , WorldPosition234_g117964 );
				TEXTURE2D(Texture263_g117964) = _TerrainShaderTex13;
				SamplerState Sampler263_g117964 = SS30_g118001;
				half4 Coords263_g117964 = temp_output_37_0_g117964;
				half3 WorldPosition263_g117964 = temp_output_279_0_g117964;
				half3 WorldNormal263_g117964 = temp_output_280_0_g117964;
				half4 localSampleStochastic3D263_g117964 = SampleStochastic3D( Texture263_g117964 , Sampler263_g117964 , Coords263_g117964 , WorldPosition263_g117964 , WorldNormal263_g117964 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch9000_g117895 = localSamplePlanar2D238_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch9000_g117895 = localSamplePlanar3D246_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch9000_g117895 = localSampleStochastic2D234_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch9000_g117895 = localSampleStochastic3D263_g117964;
				#else
				float4 staticSwitch9000_g117895 = localSamplePlanar2D238_g117964;
				#endif
				float4 temp_output_7_0_g117926 = _TerrainShaderMin13;
				float4 temp_output_10_0_g117926 = ( _TerrainShaderMax13 - temp_output_7_0_g117926 );
				float4 temp_output_8931_0_g117895 = saturate( ( ( staticSwitch9000_g117895 - temp_output_7_0_g117926 ) / ( temp_output_10_0_g117926 + 0.0001 ) ) );
				half4 Masks_015_g117927 = temp_output_8931_0_g117895;
				TEXTURE2D(Texture238_g117975) = _TerrainShaderTex14;
				SamplerState Sampler238_g117975 = SS30_g118001;
				half4 Input_Terrain_Coords_148961_g117895 = _TerrainCoord14;
				float4 temp_output_37_0_g117975 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117975 = temp_output_37_0_g117975;
				float3 temp_output_279_0_g117975 = Input_Position9197_g117895;
				half3 WorldPosition238_g117975 = temp_output_279_0_g117975;
				half4 localSamplePlanar2D238_g117975 = SamplePlanar2D( Texture238_g117975 , Sampler238_g117975 , Coords238_g117975 , WorldPosition238_g117975 );
				TEXTURE2D(Texture246_g117975) = _TerrainShaderTex14;
				SamplerState Sampler246_g117975 = SS30_g118001;
				half4 Coords246_g117975 = temp_output_37_0_g117975;
				half3 WorldPosition246_g117975 = temp_output_279_0_g117975;
				float3 temp_output_280_0_g117975 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117975 = temp_output_280_0_g117975;
				half4 localSamplePlanar3D246_g117975 = SamplePlanar3D( Texture246_g117975 , Sampler246_g117975 , Coords246_g117975 , WorldPosition246_g117975 , WorldNormal246_g117975 );
				TEXTURE2D(Texture234_g117975) = _TerrainShaderTex14;
				SamplerState Sampler234_g117975 = SS30_g118001;
				float4 Coords234_g117975 = temp_output_37_0_g117975;
				float3 WorldPosition234_g117975 = temp_output_279_0_g117975;
				float4 localSampleStochastic2D234_g117975 = SampleStochastic2D( Texture234_g117975 , Sampler234_g117975 , Coords234_g117975 , WorldPosition234_g117975 );
				TEXTURE2D(Texture263_g117975) = _TerrainShaderTex14;
				SamplerState Sampler263_g117975 = SS30_g118001;
				half4 Coords263_g117975 = temp_output_37_0_g117975;
				half3 WorldPosition263_g117975 = temp_output_279_0_g117975;
				half3 WorldNormal263_g117975 = temp_output_280_0_g117975;
				half4 localSampleStochastic3D263_g117975 = SampleStochastic3D( Texture263_g117975 , Sampler263_g117975 , Coords263_g117975 , WorldPosition263_g117975 , WorldNormal263_g117975 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch9001_g117895 = localSamplePlanar2D238_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch9001_g117895 = localSamplePlanar3D246_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch9001_g117895 = localSampleStochastic2D234_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch9001_g117895 = localSampleStochastic3D263_g117975;
				#else
				float4 staticSwitch9001_g117895 = localSamplePlanar2D238_g117975;
				#endif
				float4 temp_output_7_0_g117934 = _TerrainShaderMin14;
				float4 temp_output_10_0_g117934 = ( _TerrainShaderMax14 - temp_output_7_0_g117934 );
				float4 temp_output_8934_0_g117895 = saturate( ( ( staticSwitch9001_g117895 - temp_output_7_0_g117934 ) / ( temp_output_10_0_g117934 + 0.0001 ) ) );
				half4 Masks_0210_g117927 = temp_output_8934_0_g117895;
				TEXTURE2D(Texture238_g117976) = _TerrainShaderTex15;
				SamplerState Sampler238_g117976 = SS30_g118001;
				half4 Input_Terrain_Coords_158962_g117895 = _TerrainCoord15;
				float4 temp_output_37_0_g117976 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117976 = temp_output_37_0_g117976;
				float3 temp_output_279_0_g117976 = Input_Position9197_g117895;
				half3 WorldPosition238_g117976 = temp_output_279_0_g117976;
				half4 localSamplePlanar2D238_g117976 = SamplePlanar2D( Texture238_g117976 , Sampler238_g117976 , Coords238_g117976 , WorldPosition238_g117976 );
				TEXTURE2D(Texture246_g117976) = _TerrainShaderTex15;
				SamplerState Sampler246_g117976 = SS30_g118001;
				half4 Coords246_g117976 = temp_output_37_0_g117976;
				half3 WorldPosition246_g117976 = temp_output_279_0_g117976;
				float3 temp_output_280_0_g117976 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117976 = temp_output_280_0_g117976;
				half4 localSamplePlanar3D246_g117976 = SamplePlanar3D( Texture246_g117976 , Sampler246_g117976 , Coords246_g117976 , WorldPosition246_g117976 , WorldNormal246_g117976 );
				TEXTURE2D(Texture234_g117976) = _TerrainShaderTex15;
				SamplerState Sampler234_g117976 = SS30_g118001;
				float4 Coords234_g117976 = temp_output_37_0_g117976;
				float3 WorldPosition234_g117976 = temp_output_279_0_g117976;
				float4 localSampleStochastic2D234_g117976 = SampleStochastic2D( Texture234_g117976 , Sampler234_g117976 , Coords234_g117976 , WorldPosition234_g117976 );
				TEXTURE2D(Texture263_g117976) = _TerrainShaderTex15;
				SamplerState Sampler263_g117976 = SS30_g118001;
				half4 Coords263_g117976 = temp_output_37_0_g117976;
				half3 WorldPosition263_g117976 = temp_output_279_0_g117976;
				half3 WorldNormal263_g117976 = temp_output_280_0_g117976;
				half4 localSampleStochastic3D263_g117976 = SampleStochastic3D( Texture263_g117976 , Sampler263_g117976 , Coords263_g117976 , WorldPosition263_g117976 , WorldNormal263_g117976 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch9002_g117895 = localSamplePlanar2D238_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch9002_g117895 = localSamplePlanar3D246_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch9002_g117895 = localSampleStochastic2D234_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch9002_g117895 = localSampleStochastic3D263_g117976;
				#else
				float4 staticSwitch9002_g117895 = localSamplePlanar2D238_g117976;
				#endif
				float4 temp_output_7_0_g117935 = _TerrainShaderMin15;
				float4 temp_output_10_0_g117935 = ( _TerrainShaderMax15 - temp_output_7_0_g117935 );
				float4 temp_output_8935_0_g117895 = saturate( ( ( staticSwitch9002_g117895 - temp_output_7_0_g117935 ) / ( temp_output_10_0_g117935 + 0.0001 ) ) );
				half4 Masks_0312_g117927 = temp_output_8935_0_g117895;
				TEXTURE2D(Texture238_g117977) = _TerrainShaderTex16;
				SamplerState Sampler238_g117977 = SS30_g118001;
				half4 Input_Terrain_Coords_168959_g117895 = _TerrainCoord16;
				float4 temp_output_37_0_g117977 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117977 = temp_output_37_0_g117977;
				float3 temp_output_279_0_g117977 = Input_Position9197_g117895;
				half3 WorldPosition238_g117977 = temp_output_279_0_g117977;
				half4 localSamplePlanar2D238_g117977 = SamplePlanar2D( Texture238_g117977 , Sampler238_g117977 , Coords238_g117977 , WorldPosition238_g117977 );
				TEXTURE2D(Texture246_g117977) = _TerrainShaderTex16;
				SamplerState Sampler246_g117977 = SS30_g118001;
				half4 Coords246_g117977 = temp_output_37_0_g117977;
				half3 WorldPosition246_g117977 = temp_output_279_0_g117977;
				float3 temp_output_280_0_g117977 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117977 = temp_output_280_0_g117977;
				half4 localSamplePlanar3D246_g117977 = SamplePlanar3D( Texture246_g117977 , Sampler246_g117977 , Coords246_g117977 , WorldPosition246_g117977 , WorldNormal246_g117977 );
				TEXTURE2D(Texture234_g117977) = _TerrainShaderTex16;
				SamplerState Sampler234_g117977 = SS30_g118001;
				float4 Coords234_g117977 = temp_output_37_0_g117977;
				float3 WorldPosition234_g117977 = temp_output_279_0_g117977;
				float4 localSampleStochastic2D234_g117977 = SampleStochastic2D( Texture234_g117977 , Sampler234_g117977 , Coords234_g117977 , WorldPosition234_g117977 );
				TEXTURE2D(Texture263_g117977) = _TerrainShaderTex16;
				SamplerState Sampler263_g117977 = SS30_g118001;
				half4 Coords263_g117977 = temp_output_37_0_g117977;
				half3 WorldPosition263_g117977 = temp_output_279_0_g117977;
				half3 WorldNormal263_g117977 = temp_output_280_0_g117977;
				half4 localSampleStochastic3D263_g117977 = SampleStochastic3D( Texture263_g117977 , Sampler263_g117977 , Coords263_g117977 , WorldPosition263_g117977 , WorldNormal263_g117977 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch9003_g117895 = localSamplePlanar2D238_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch9003_g117895 = localSamplePlanar3D246_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch9003_g117895 = localSampleStochastic2D234_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch9003_g117895 = localSampleStochastic3D263_g117977;
				#else
				float4 staticSwitch9003_g117895 = localSamplePlanar2D238_g117977;
				#endif
				float4 temp_output_7_0_g117936 = _TerrainShaderMin16;
				float4 temp_output_10_0_g117936 = ( _TerrainShaderMax16 - temp_output_7_0_g117936 );
				float4 temp_output_8936_0_g117895 = saturate( ( ( staticSwitch9003_g117895 - temp_output_7_0_g117936 ) / ( temp_output_10_0_g117936 + 0.0001 ) ) );
				half4 Masks_0414_g117927 = temp_output_8936_0_g117895;
				float4 appendResult29_g117927 = (float4((Masks_015_g117927).z , (Masks_0210_g117927).z , (Masks_0312_g117927).z , (Masks_0414_g117927).z));
				half4 Control31_g117927 = Terrain_Control_167711_g117895;
				half4 Terrain_Height_169015_g117895 = ( appendResult29_g117927 * Control31_g117927 );
				float4 heights_167362_g117895 = Terrain_Height_169015_g117895;
				float heightTransition7362_g117895 = ( 1.0 - _TerrainHeightBlendValue );
				float4 weights_047362_g117895 = float4( 0,0,0,0 );
				float4 weights_087362_g117895 = float4( 0,0,0,0 );
				float4 weights_127362_g117895 = float4( 0,0,0,0 );
				float4 weights_167362_g117895 = float4( 0,0,0,0 );
				//Modified version of the HDRP terrain height based blending
				float maxHeight = 0;
				float4 weightedHeights_04 = float4( 0,0,0,0 );
				float4 weightedHeights_08 = float4( 0,0,0,0 );
				float4 weightedHeights_12 = float4( 0,0,0,0 );
				float4 weightedHeights_16 = float4( 0,0,0,0 );
				maxHeight = heights_047362_g117895.x;
				maxHeight = max(maxHeight, heights_047362_g117895.y);
				maxHeight = max(maxHeight, heights_047362_g117895.z);
				maxHeight = max(maxHeight, heights_047362_g117895.w);
				#ifdef TVE_TERRAIN_08
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				#endif
				#ifdef TVE_TERRAIN_12
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				maxHeight = max(maxHeight, heights_127362_g117895.x);
				maxHeight = max(maxHeight, heights_127362_g117895.y);
				maxHeight = max(maxHeight, heights_127362_g117895.z);
				maxHeight = max(maxHeight, heights_127362_g117895.w);
				#endif
				#ifdef TVE_TERRAIN_16
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				maxHeight = max(maxHeight, heights_127362_g117895.x);
				maxHeight = max(maxHeight, heights_127362_g117895.y);
				maxHeight = max(maxHeight, heights_127362_g117895.z);
				maxHeight = max(maxHeight, heights_127362_g117895.w);
				maxHeight = max(maxHeight, heights_167362_g117895.x);
				maxHeight = max(maxHeight, heights_167362_g117895.y);
				maxHeight = max(maxHeight, heights_167362_g117895.z);
				maxHeight = max(maxHeight, heights_167362_g117895.w);
				#endif
				float transition = max(heightTransition7362_g117895, 0.01);
				weightedHeights_04 = float4 ( heights_047362_g117895.x, heights_047362_g117895.y, heights_047362_g117895.z, heights_047362_g117895.w );
				weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
				weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g117895;
				#ifdef TVE_TERRAIN_08
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				#endif
				#ifdef TVE_TERRAIN_12
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				weightedHeights_12 = float4 ( heights_127362_g117895.x, heights_127362_g117895.y, heights_127362_g117895.z, heights_127362_g117895.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g117895;
				#endif
				#ifdef TVE_TERRAIN_16
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				weightedHeights_12 = float4 ( heights_127362_g117895.x, heights_127362_g117895.y, heights_127362_g117895.z, heights_127362_g117895.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g117895;
				weightedHeights_16 = float4 ( heights_167362_g117895.x, heights_167362_g117895.y, heights_167362_g117895.z, heights_167362_g117895.w );
				weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
				weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g117895;
				#endif
				float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
				float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
				float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
				float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
				float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
				weights_047362_g117895 = weightedHeights_04 / sumHeight.xxxx;
				#ifdef TVE_TERRAIN_08
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_12
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g117895 = weightedHeights_12 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_16
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g117895 = weightedHeights_12 / sumHeight.xxxx;
				weights_167362_g117895 = weightedHeights_16 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8792_g117895 = weights_047362_g117895;
				#else
				float4 staticSwitch8792_g117895 = control_047362_g117895;
				#endif
				half4 Terrain_Weights_046781_g117895 = staticSwitch8792_g117895;
				half4 Weights52_g117900 = Terrain_Weights_046781_g117895;
				TEXTURE2D(Texture238_g117941) = _TerrainAlbedoTex1;
				float localFilterTexture19_g117998 = ( 0.0 );
				SamplerState SamplerDefault19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g117998 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g117998 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g117998 = SamplerDefault19_g117998;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g117998 = SamplerDefault19_g117998;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g117998 = SamplerPoint19_g117998;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g117998 = SamplerLow19_g117998;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g117998 = SamplerMedium19_g117998;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g117998 = SamplerHigh19_g117998;
				#endif
				SamplerState Sampler238_g117941 = SS19_g117998;
				float4 temp_output_37_0_g117941 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117941 = temp_output_37_0_g117941;
				float3 temp_output_279_0_g117941 = Input_Position9197_g117895;
				half3 WorldPosition238_g117941 = temp_output_279_0_g117941;
				half4 localSamplePlanar2D238_g117941 = SamplePlanar2D( Texture238_g117941 , Sampler238_g117941 , Coords238_g117941 , WorldPosition238_g117941 );
				TEXTURE2D(Texture246_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler246_g117941 = SS19_g117998;
				half4 Coords246_g117941 = temp_output_37_0_g117941;
				half3 WorldPosition246_g117941 = temp_output_279_0_g117941;
				float3 temp_output_280_0_g117941 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117941 = temp_output_280_0_g117941;
				half4 localSamplePlanar3D246_g117941 = SamplePlanar3D( Texture246_g117941 , Sampler246_g117941 , Coords246_g117941 , WorldPosition246_g117941 , WorldNormal246_g117941 );
				TEXTURE2D(Texture234_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler234_g117941 = SS19_g117998;
				float4 Coords234_g117941 = temp_output_37_0_g117941;
				float3 WorldPosition234_g117941 = temp_output_279_0_g117941;
				float4 localSampleStochastic2D234_g117941 = SampleStochastic2D( Texture234_g117941 , Sampler234_g117941 , Coords234_g117941 , WorldPosition234_g117941 );
				TEXTURE2D(Texture263_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler263_g117941 = SS19_g117998;
				half4 Coords263_g117941 = temp_output_37_0_g117941;
				half3 WorldPosition263_g117941 = temp_output_279_0_g117941;
				half3 WorldNormal263_g117941 = temp_output_280_0_g117941;
				half4 localSampleStochastic3D263_g117941 = SampleStochastic3D( Texture263_g117941 , Sampler263_g117941 , Coords263_g117941 , WorldPosition263_g117941 , WorldNormal263_g117941 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8614_g117895 = localSamplePlanar2D238_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8614_g117895 = localSamplePlanar3D246_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8614_g117895 = localSampleStochastic2D234_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8614_g117895 = localSampleStochastic3D263_g117941;
				#else
				float4 staticSwitch8614_g117895 = localSamplePlanar2D238_g117941;
				#endif
				half4 Layer133_g117900 = staticSwitch8614_g117895;
				TEXTURE2D(Texture238_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler238_g117942 = SS19_g117998;
				float4 temp_output_37_0_g117942 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117942 = temp_output_37_0_g117942;
				float3 temp_output_279_0_g117942 = Input_Position9197_g117895;
				half3 WorldPosition238_g117942 = temp_output_279_0_g117942;
				half4 localSamplePlanar2D238_g117942 = SamplePlanar2D( Texture238_g117942 , Sampler238_g117942 , Coords238_g117942 , WorldPosition238_g117942 );
				TEXTURE2D(Texture246_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler246_g117942 = SS19_g117998;
				half4 Coords246_g117942 = temp_output_37_0_g117942;
				half3 WorldPosition246_g117942 = temp_output_279_0_g117942;
				float3 temp_output_280_0_g117942 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117942 = temp_output_280_0_g117942;
				half4 localSamplePlanar3D246_g117942 = SamplePlanar3D( Texture246_g117942 , Sampler246_g117942 , Coords246_g117942 , WorldPosition246_g117942 , WorldNormal246_g117942 );
				TEXTURE2D(Texture234_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler234_g117942 = SS19_g117998;
				float4 Coords234_g117942 = temp_output_37_0_g117942;
				float3 WorldPosition234_g117942 = temp_output_279_0_g117942;
				float4 localSampleStochastic2D234_g117942 = SampleStochastic2D( Texture234_g117942 , Sampler234_g117942 , Coords234_g117942 , WorldPosition234_g117942 );
				TEXTURE2D(Texture263_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler263_g117942 = SS19_g117998;
				half4 Coords263_g117942 = temp_output_37_0_g117942;
				half3 WorldPosition263_g117942 = temp_output_279_0_g117942;
				half3 WorldNormal263_g117942 = temp_output_280_0_g117942;
				half4 localSampleStochastic3D263_g117942 = SampleStochastic3D( Texture263_g117942 , Sampler263_g117942 , Coords263_g117942 , WorldPosition263_g117942 , WorldNormal263_g117942 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8629_g117895 = localSamplePlanar2D238_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8629_g117895 = localSamplePlanar3D246_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8629_g117895 = localSampleStochastic2D234_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8629_g117895 = localSampleStochastic3D263_g117942;
				#else
				float4 staticSwitch8629_g117895 = localSamplePlanar2D238_g117942;
				#endif
				half4 Layer237_g117900 = staticSwitch8629_g117895;
				TEXTURE2D(Texture238_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler238_g117945 = SS19_g117998;
				float4 temp_output_37_0_g117945 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117945 = temp_output_37_0_g117945;
				float3 temp_output_279_0_g117945 = Input_Position9197_g117895;
				half3 WorldPosition238_g117945 = temp_output_279_0_g117945;
				half4 localSamplePlanar2D238_g117945 = SamplePlanar2D( Texture238_g117945 , Sampler238_g117945 , Coords238_g117945 , WorldPosition238_g117945 );
				TEXTURE2D(Texture246_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler246_g117945 = SS19_g117998;
				half4 Coords246_g117945 = temp_output_37_0_g117945;
				half3 WorldPosition246_g117945 = temp_output_279_0_g117945;
				float3 temp_output_280_0_g117945 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117945 = temp_output_280_0_g117945;
				half4 localSamplePlanar3D246_g117945 = SamplePlanar3D( Texture246_g117945 , Sampler246_g117945 , Coords246_g117945 , WorldPosition246_g117945 , WorldNormal246_g117945 );
				TEXTURE2D(Texture234_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler234_g117945 = SS19_g117998;
				float4 Coords234_g117945 = temp_output_37_0_g117945;
				float3 WorldPosition234_g117945 = temp_output_279_0_g117945;
				float4 localSampleStochastic2D234_g117945 = SampleStochastic2D( Texture234_g117945 , Sampler234_g117945 , Coords234_g117945 , WorldPosition234_g117945 );
				TEXTURE2D(Texture263_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler263_g117945 = SS19_g117998;
				half4 Coords263_g117945 = temp_output_37_0_g117945;
				half3 WorldPosition263_g117945 = temp_output_279_0_g117945;
				half3 WorldNormal263_g117945 = temp_output_280_0_g117945;
				half4 localSampleStochastic3D263_g117945 = SampleStochastic3D( Texture263_g117945 , Sampler263_g117945 , Coords263_g117945 , WorldPosition263_g117945 , WorldNormal263_g117945 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8630_g117895 = localSamplePlanar2D238_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8630_g117895 = localSamplePlanar3D246_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8630_g117895 = localSampleStochastic2D234_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8630_g117895 = localSampleStochastic3D263_g117945;
				#else
				float4 staticSwitch8630_g117895 = localSamplePlanar2D238_g117945;
				#endif
				half4 Layer338_g117900 = staticSwitch8630_g117895;
				TEXTURE2D(Texture238_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler238_g117947 = SS19_g117998;
				float4 temp_output_37_0_g117947 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117947 = temp_output_37_0_g117947;
				float3 temp_output_279_0_g117947 = Input_Position9197_g117895;
				half3 WorldPosition238_g117947 = temp_output_279_0_g117947;
				half4 localSamplePlanar2D238_g117947 = SamplePlanar2D( Texture238_g117947 , Sampler238_g117947 , Coords238_g117947 , WorldPosition238_g117947 );
				TEXTURE2D(Texture246_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler246_g117947 = SS19_g117998;
				half4 Coords246_g117947 = temp_output_37_0_g117947;
				half3 WorldPosition246_g117947 = temp_output_279_0_g117947;
				float3 temp_output_280_0_g117947 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117947 = temp_output_280_0_g117947;
				half4 localSamplePlanar3D246_g117947 = SamplePlanar3D( Texture246_g117947 , Sampler246_g117947 , Coords246_g117947 , WorldPosition246_g117947 , WorldNormal246_g117947 );
				TEXTURE2D(Texture234_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler234_g117947 = SS19_g117998;
				float4 Coords234_g117947 = temp_output_37_0_g117947;
				float3 WorldPosition234_g117947 = temp_output_279_0_g117947;
				float4 localSampleStochastic2D234_g117947 = SampleStochastic2D( Texture234_g117947 , Sampler234_g117947 , Coords234_g117947 , WorldPosition234_g117947 );
				TEXTURE2D(Texture263_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler263_g117947 = SS19_g117998;
				half4 Coords263_g117947 = temp_output_37_0_g117947;
				half3 WorldPosition263_g117947 = temp_output_279_0_g117947;
				half3 WorldNormal263_g117947 = temp_output_280_0_g117947;
				half4 localSampleStochastic3D263_g117947 = SampleStochastic3D( Texture263_g117947 , Sampler263_g117947 , Coords263_g117947 , WorldPosition263_g117947 , WorldNormal263_g117947 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8631_g117895 = localSamplePlanar2D238_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8631_g117895 = localSamplePlanar3D246_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8631_g117895 = localSampleStochastic2D234_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8631_g117895 = localSampleStochastic3D263_g117947;
				#else
				float4 staticSwitch8631_g117895 = localSamplePlanar2D238_g117947;
				#endif
				half4 Layer439_g117900 = staticSwitch8631_g117895;
				float4 weightedBlendVar31_g117900 = Weights52_g117900;
				float4 weightedBlend31_g117900 = ( weightedBlendVar31_g117900.x*Layer133_g117900 + weightedBlendVar31_g117900.y*Layer237_g117900 + weightedBlendVar31_g117900.z*Layer338_g117900 + weightedBlendVar31_g117900.w*Layer439_g117900 );
				half4 Terrain_AAAA_047200_g117895 = weightedBlend31_g117900;
				half4 Layer_045_g117903 = Terrain_AAAA_047200_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8793_g117895 = weights_087362_g117895;
				#else
				float4 staticSwitch8793_g117895 = control_087362_g117895;
				#endif
				half4 Terrain_Weights_087340_g117895 = staticSwitch8793_g117895;
				half4 Weights52_g117910 = Terrain_Weights_087340_g117895;
				TEXTURE2D(Texture238_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler238_g117951 = SS19_g117998;
				float4 temp_output_37_0_g117951 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117951 = temp_output_37_0_g117951;
				float3 temp_output_279_0_g117951 = Input_Position9197_g117895;
				half3 WorldPosition238_g117951 = temp_output_279_0_g117951;
				half4 localSamplePlanar2D238_g117951 = SamplePlanar2D( Texture238_g117951 , Sampler238_g117951 , Coords238_g117951 , WorldPosition238_g117951 );
				TEXTURE2D(Texture246_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler246_g117951 = SS19_g117998;
				half4 Coords246_g117951 = temp_output_37_0_g117951;
				half3 WorldPosition246_g117951 = temp_output_279_0_g117951;
				float3 temp_output_280_0_g117951 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117951 = temp_output_280_0_g117951;
				half4 localSamplePlanar3D246_g117951 = SamplePlanar3D( Texture246_g117951 , Sampler246_g117951 , Coords246_g117951 , WorldPosition246_g117951 , WorldNormal246_g117951 );
				TEXTURE2D(Texture234_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler234_g117951 = SS19_g117998;
				float4 Coords234_g117951 = temp_output_37_0_g117951;
				float3 WorldPosition234_g117951 = temp_output_279_0_g117951;
				float4 localSampleStochastic2D234_g117951 = SampleStochastic2D( Texture234_g117951 , Sampler234_g117951 , Coords234_g117951 , WorldPosition234_g117951 );
				TEXTURE2D(Texture263_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler263_g117951 = SS19_g117998;
				half4 Coords263_g117951 = temp_output_37_0_g117951;
				half3 WorldPosition263_g117951 = temp_output_279_0_g117951;
				half3 WorldNormal263_g117951 = temp_output_280_0_g117951;
				half4 localSampleStochastic3D263_g117951 = SampleStochastic3D( Texture263_g117951 , Sampler263_g117951 , Coords263_g117951 , WorldPosition263_g117951 , WorldNormal263_g117951 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8690_g117895 = localSamplePlanar2D238_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8690_g117895 = localSamplePlanar3D246_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8690_g117895 = localSampleStochastic2D234_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8690_g117895 = localSampleStochastic3D263_g117951;
				#else
				float4 staticSwitch8690_g117895 = localSamplePlanar2D238_g117951;
				#endif
				half4 Layer133_g117910 = staticSwitch8690_g117895;
				TEXTURE2D(Texture238_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler238_g117978 = SS19_g117998;
				float4 temp_output_37_0_g117978 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117978 = temp_output_37_0_g117978;
				float3 temp_output_279_0_g117978 = Input_Position9197_g117895;
				half3 WorldPosition238_g117978 = temp_output_279_0_g117978;
				half4 localSamplePlanar2D238_g117978 = SamplePlanar2D( Texture238_g117978 , Sampler238_g117978 , Coords238_g117978 , WorldPosition238_g117978 );
				TEXTURE2D(Texture246_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler246_g117978 = SS19_g117998;
				half4 Coords246_g117978 = temp_output_37_0_g117978;
				half3 WorldPosition246_g117978 = temp_output_279_0_g117978;
				float3 temp_output_280_0_g117978 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117978 = temp_output_280_0_g117978;
				half4 localSamplePlanar3D246_g117978 = SamplePlanar3D( Texture246_g117978 , Sampler246_g117978 , Coords246_g117978 , WorldPosition246_g117978 , WorldNormal246_g117978 );
				TEXTURE2D(Texture234_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler234_g117978 = SS19_g117998;
				float4 Coords234_g117978 = temp_output_37_0_g117978;
				float3 WorldPosition234_g117978 = temp_output_279_0_g117978;
				float4 localSampleStochastic2D234_g117978 = SampleStochastic2D( Texture234_g117978 , Sampler234_g117978 , Coords234_g117978 , WorldPosition234_g117978 );
				TEXTURE2D(Texture263_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler263_g117978 = SS19_g117998;
				half4 Coords263_g117978 = temp_output_37_0_g117978;
				half3 WorldPosition263_g117978 = temp_output_279_0_g117978;
				half3 WorldNormal263_g117978 = temp_output_280_0_g117978;
				half4 localSampleStochastic3D263_g117978 = SampleStochastic3D( Texture263_g117978 , Sampler263_g117978 , Coords263_g117978 , WorldPosition263_g117978 , WorldNormal263_g117978 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8691_g117895 = localSamplePlanar2D238_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8691_g117895 = localSamplePlanar3D246_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8691_g117895 = localSampleStochastic2D234_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8691_g117895 = localSampleStochastic3D263_g117978;
				#else
				float4 staticSwitch8691_g117895 = localSamplePlanar2D238_g117978;
				#endif
				half4 Layer237_g117910 = staticSwitch8691_g117895;
				TEXTURE2D(Texture238_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler238_g117979 = SS19_g117998;
				float4 temp_output_37_0_g117979 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117979 = temp_output_37_0_g117979;
				float3 temp_output_279_0_g117979 = Input_Position9197_g117895;
				half3 WorldPosition238_g117979 = temp_output_279_0_g117979;
				half4 localSamplePlanar2D238_g117979 = SamplePlanar2D( Texture238_g117979 , Sampler238_g117979 , Coords238_g117979 , WorldPosition238_g117979 );
				TEXTURE2D(Texture246_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler246_g117979 = SS19_g117998;
				half4 Coords246_g117979 = temp_output_37_0_g117979;
				half3 WorldPosition246_g117979 = temp_output_279_0_g117979;
				float3 temp_output_280_0_g117979 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117979 = temp_output_280_0_g117979;
				half4 localSamplePlanar3D246_g117979 = SamplePlanar3D( Texture246_g117979 , Sampler246_g117979 , Coords246_g117979 , WorldPosition246_g117979 , WorldNormal246_g117979 );
				TEXTURE2D(Texture234_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler234_g117979 = SS19_g117998;
				float4 Coords234_g117979 = temp_output_37_0_g117979;
				float3 WorldPosition234_g117979 = temp_output_279_0_g117979;
				float4 localSampleStochastic2D234_g117979 = SampleStochastic2D( Texture234_g117979 , Sampler234_g117979 , Coords234_g117979 , WorldPosition234_g117979 );
				TEXTURE2D(Texture263_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler263_g117979 = SS19_g117998;
				half4 Coords263_g117979 = temp_output_37_0_g117979;
				half3 WorldPosition263_g117979 = temp_output_279_0_g117979;
				half3 WorldNormal263_g117979 = temp_output_280_0_g117979;
				half4 localSampleStochastic3D263_g117979 = SampleStochastic3D( Texture263_g117979 , Sampler263_g117979 , Coords263_g117979 , WorldPosition263_g117979 , WorldNormal263_g117979 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8692_g117895 = localSamplePlanar2D238_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8692_g117895 = localSamplePlanar3D246_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8692_g117895 = localSampleStochastic2D234_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8692_g117895 = localSampleStochastic3D263_g117979;
				#else
				float4 staticSwitch8692_g117895 = localSamplePlanar2D238_g117979;
				#endif
				half4 Layer338_g117910 = staticSwitch8692_g117895;
				TEXTURE2D(Texture238_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler238_g117980 = SS19_g117998;
				float4 temp_output_37_0_g117980 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117980 = temp_output_37_0_g117980;
				float3 temp_output_279_0_g117980 = Input_Position9197_g117895;
				half3 WorldPosition238_g117980 = temp_output_279_0_g117980;
				half4 localSamplePlanar2D238_g117980 = SamplePlanar2D( Texture238_g117980 , Sampler238_g117980 , Coords238_g117980 , WorldPosition238_g117980 );
				TEXTURE2D(Texture246_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler246_g117980 = SS19_g117998;
				half4 Coords246_g117980 = temp_output_37_0_g117980;
				half3 WorldPosition246_g117980 = temp_output_279_0_g117980;
				float3 temp_output_280_0_g117980 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117980 = temp_output_280_0_g117980;
				half4 localSamplePlanar3D246_g117980 = SamplePlanar3D( Texture246_g117980 , Sampler246_g117980 , Coords246_g117980 , WorldPosition246_g117980 , WorldNormal246_g117980 );
				TEXTURE2D(Texture234_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler234_g117980 = SS19_g117998;
				float4 Coords234_g117980 = temp_output_37_0_g117980;
				float3 WorldPosition234_g117980 = temp_output_279_0_g117980;
				float4 localSampleStochastic2D234_g117980 = SampleStochastic2D( Texture234_g117980 , Sampler234_g117980 , Coords234_g117980 , WorldPosition234_g117980 );
				TEXTURE2D(Texture263_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler263_g117980 = SS19_g117998;
				half4 Coords263_g117980 = temp_output_37_0_g117980;
				half3 WorldPosition263_g117980 = temp_output_279_0_g117980;
				half3 WorldNormal263_g117980 = temp_output_280_0_g117980;
				half4 localSampleStochastic3D263_g117980 = SampleStochastic3D( Texture263_g117980 , Sampler263_g117980 , Coords263_g117980 , WorldPosition263_g117980 , WorldNormal263_g117980 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8693_g117895 = localSamplePlanar2D238_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8693_g117895 = localSamplePlanar3D246_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8693_g117895 = localSampleStochastic2D234_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8693_g117895 = localSampleStochastic3D263_g117980;
				#else
				float4 staticSwitch8693_g117895 = localSamplePlanar2D238_g117980;
				#endif
				half4 Layer439_g117910 = staticSwitch8693_g117895;
				float4 weightedBlendVar31_g117910 = Weights52_g117910;
				float4 weightedBlend31_g117910 = ( weightedBlendVar31_g117910.x*Layer133_g117910 + weightedBlendVar31_g117910.y*Layer237_g117910 + weightedBlendVar31_g117910.z*Layer338_g117910 + weightedBlendVar31_g117910.w*Layer439_g117910 );
				half4 Terrain_AAAA_088665_g117895 = weightedBlend31_g117910;
				half4 Layer_0810_g117903 = Terrain_AAAA_088665_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8794_g117895 = weights_127362_g117895;
				#else
				float4 staticSwitch8794_g117895 = control_127362_g117895;
				#endif
				half4 Terrain_Weights_127710_g117895 = staticSwitch8794_g117895;
				half4 Weights52_g117917 = Terrain_Weights_127710_g117895;
				TEXTURE2D(Texture238_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler238_g117954 = SS19_g117998;
				float4 temp_output_37_0_g117954 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117954 = temp_output_37_0_g117954;
				float3 temp_output_279_0_g117954 = Input_Position9197_g117895;
				half3 WorldPosition238_g117954 = temp_output_279_0_g117954;
				half4 localSamplePlanar2D238_g117954 = SamplePlanar2D( Texture238_g117954 , Sampler238_g117954 , Coords238_g117954 , WorldPosition238_g117954 );
				TEXTURE2D(Texture246_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler246_g117954 = SS19_g117998;
				half4 Coords246_g117954 = temp_output_37_0_g117954;
				half3 WorldPosition246_g117954 = temp_output_279_0_g117954;
				float3 temp_output_280_0_g117954 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117954 = temp_output_280_0_g117954;
				half4 localSamplePlanar3D246_g117954 = SamplePlanar3D( Texture246_g117954 , Sampler246_g117954 , Coords246_g117954 , WorldPosition246_g117954 , WorldNormal246_g117954 );
				TEXTURE2D(Texture234_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler234_g117954 = SS19_g117998;
				float4 Coords234_g117954 = temp_output_37_0_g117954;
				float3 WorldPosition234_g117954 = temp_output_279_0_g117954;
				float4 localSampleStochastic2D234_g117954 = SampleStochastic2D( Texture234_g117954 , Sampler234_g117954 , Coords234_g117954 , WorldPosition234_g117954 );
				TEXTURE2D(Texture263_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler263_g117954 = SS19_g117998;
				half4 Coords263_g117954 = temp_output_37_0_g117954;
				half3 WorldPosition263_g117954 = temp_output_279_0_g117954;
				half3 WorldNormal263_g117954 = temp_output_280_0_g117954;
				half4 localSampleStochastic3D263_g117954 = SampleStochastic3D( Texture263_g117954 , Sampler263_g117954 , Coords263_g117954 , WorldPosition263_g117954 , WorldNormal263_g117954 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8872_g117895 = localSamplePlanar2D238_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8872_g117895 = localSamplePlanar3D246_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8872_g117895 = localSampleStochastic2D234_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8872_g117895 = localSampleStochastic3D263_g117954;
				#else
				float4 staticSwitch8872_g117895 = localSamplePlanar2D238_g117954;
				#endif
				half4 Layer133_g117917 = staticSwitch8872_g117895;
				TEXTURE2D(Texture238_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler238_g117957 = SS19_g117998;
				float4 temp_output_37_0_g117957 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117957 = temp_output_37_0_g117957;
				float3 temp_output_279_0_g117957 = Input_Position9197_g117895;
				half3 WorldPosition238_g117957 = temp_output_279_0_g117957;
				half4 localSamplePlanar2D238_g117957 = SamplePlanar2D( Texture238_g117957 , Sampler238_g117957 , Coords238_g117957 , WorldPosition238_g117957 );
				TEXTURE2D(Texture246_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler246_g117957 = SS19_g117998;
				half4 Coords246_g117957 = temp_output_37_0_g117957;
				half3 WorldPosition246_g117957 = temp_output_279_0_g117957;
				float3 temp_output_280_0_g117957 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117957 = temp_output_280_0_g117957;
				half4 localSamplePlanar3D246_g117957 = SamplePlanar3D( Texture246_g117957 , Sampler246_g117957 , Coords246_g117957 , WorldPosition246_g117957 , WorldNormal246_g117957 );
				TEXTURE2D(Texture234_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler234_g117957 = SS19_g117998;
				float4 Coords234_g117957 = temp_output_37_0_g117957;
				float3 WorldPosition234_g117957 = temp_output_279_0_g117957;
				float4 localSampleStochastic2D234_g117957 = SampleStochastic2D( Texture234_g117957 , Sampler234_g117957 , Coords234_g117957 , WorldPosition234_g117957 );
				TEXTURE2D(Texture263_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler263_g117957 = SS19_g117998;
				half4 Coords263_g117957 = temp_output_37_0_g117957;
				half3 WorldPosition263_g117957 = temp_output_279_0_g117957;
				half3 WorldNormal263_g117957 = temp_output_280_0_g117957;
				half4 localSampleStochastic3D263_g117957 = SampleStochastic3D( Texture263_g117957 , Sampler263_g117957 , Coords263_g117957 , WorldPosition263_g117957 , WorldNormal263_g117957 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8873_g117895 = localSamplePlanar2D238_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8873_g117895 = localSamplePlanar3D246_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8873_g117895 = localSampleStochastic2D234_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8873_g117895 = localSampleStochastic3D263_g117957;
				#else
				float4 staticSwitch8873_g117895 = localSamplePlanar2D238_g117957;
				#endif
				half4 Layer237_g117917 = staticSwitch8873_g117895;
				TEXTURE2D(Texture238_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler238_g117958 = SS19_g117998;
				float4 temp_output_37_0_g117958 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117958 = temp_output_37_0_g117958;
				float3 temp_output_279_0_g117958 = Input_Position9197_g117895;
				half3 WorldPosition238_g117958 = temp_output_279_0_g117958;
				half4 localSamplePlanar2D238_g117958 = SamplePlanar2D( Texture238_g117958 , Sampler238_g117958 , Coords238_g117958 , WorldPosition238_g117958 );
				TEXTURE2D(Texture246_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler246_g117958 = SS19_g117998;
				half4 Coords246_g117958 = temp_output_37_0_g117958;
				half3 WorldPosition246_g117958 = temp_output_279_0_g117958;
				float3 temp_output_280_0_g117958 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117958 = temp_output_280_0_g117958;
				half4 localSamplePlanar3D246_g117958 = SamplePlanar3D( Texture246_g117958 , Sampler246_g117958 , Coords246_g117958 , WorldPosition246_g117958 , WorldNormal246_g117958 );
				TEXTURE2D(Texture234_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler234_g117958 = SS19_g117998;
				float4 Coords234_g117958 = temp_output_37_0_g117958;
				float3 WorldPosition234_g117958 = temp_output_279_0_g117958;
				float4 localSampleStochastic2D234_g117958 = SampleStochastic2D( Texture234_g117958 , Sampler234_g117958 , Coords234_g117958 , WorldPosition234_g117958 );
				TEXTURE2D(Texture263_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler263_g117958 = SS19_g117998;
				half4 Coords263_g117958 = temp_output_37_0_g117958;
				half3 WorldPosition263_g117958 = temp_output_279_0_g117958;
				half3 WorldNormal263_g117958 = temp_output_280_0_g117958;
				half4 localSampleStochastic3D263_g117958 = SampleStochastic3D( Texture263_g117958 , Sampler263_g117958 , Coords263_g117958 , WorldPosition263_g117958 , WorldNormal263_g117958 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8874_g117895 = localSamplePlanar2D238_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8874_g117895 = localSamplePlanar3D246_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8874_g117895 = localSampleStochastic2D234_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8874_g117895 = localSampleStochastic3D263_g117958;
				#else
				float4 staticSwitch8874_g117895 = localSamplePlanar2D238_g117958;
				#endif
				half4 Layer338_g117917 = staticSwitch8874_g117895;
				TEXTURE2D(Texture238_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler238_g117959 = SS19_g117998;
				float4 temp_output_37_0_g117959 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117959 = temp_output_37_0_g117959;
				float3 temp_output_279_0_g117959 = Input_Position9197_g117895;
				half3 WorldPosition238_g117959 = temp_output_279_0_g117959;
				half4 localSamplePlanar2D238_g117959 = SamplePlanar2D( Texture238_g117959 , Sampler238_g117959 , Coords238_g117959 , WorldPosition238_g117959 );
				TEXTURE2D(Texture246_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler246_g117959 = SS19_g117998;
				half4 Coords246_g117959 = temp_output_37_0_g117959;
				half3 WorldPosition246_g117959 = temp_output_279_0_g117959;
				float3 temp_output_280_0_g117959 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117959 = temp_output_280_0_g117959;
				half4 localSamplePlanar3D246_g117959 = SamplePlanar3D( Texture246_g117959 , Sampler246_g117959 , Coords246_g117959 , WorldPosition246_g117959 , WorldNormal246_g117959 );
				TEXTURE2D(Texture234_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler234_g117959 = SS19_g117998;
				float4 Coords234_g117959 = temp_output_37_0_g117959;
				float3 WorldPosition234_g117959 = temp_output_279_0_g117959;
				float4 localSampleStochastic2D234_g117959 = SampleStochastic2D( Texture234_g117959 , Sampler234_g117959 , Coords234_g117959 , WorldPosition234_g117959 );
				TEXTURE2D(Texture263_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler263_g117959 = SS19_g117998;
				half4 Coords263_g117959 = temp_output_37_0_g117959;
				half3 WorldPosition263_g117959 = temp_output_279_0_g117959;
				half3 WorldNormal263_g117959 = temp_output_280_0_g117959;
				half4 localSampleStochastic3D263_g117959 = SampleStochastic3D( Texture263_g117959 , Sampler263_g117959 , Coords263_g117959 , WorldPosition263_g117959 , WorldNormal263_g117959 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8875_g117895 = localSamplePlanar2D238_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8875_g117895 = localSamplePlanar3D246_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8875_g117895 = localSampleStochastic2D234_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8875_g117895 = localSampleStochastic3D263_g117959;
				#else
				float4 staticSwitch8875_g117895 = localSamplePlanar2D238_g117959;
				#endif
				half4 Layer439_g117917 = staticSwitch8875_g117895;
				float4 weightedBlendVar31_g117917 = Weights52_g117917;
				float4 weightedBlend31_g117917 = ( weightedBlendVar31_g117917.x*Layer133_g117917 + weightedBlendVar31_g117917.y*Layer237_g117917 + weightedBlendVar31_g117917.z*Layer338_g117917 + weightedBlendVar31_g117917.w*Layer439_g117917 );
				half4 Terrain_AAAA_128851_g117895 = weightedBlend31_g117917;
				half4 Layer_1243_g117903 = Terrain_AAAA_128851_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8795_g117895 = weights_167362_g117895;
				#else
				float4 staticSwitch8795_g117895 = control_167362_g117895;
				#endif
				half4 Terrain_Weights_167709_g117895 = staticSwitch8795_g117895;
				half4 Weights52_g117924 = Terrain_Weights_167709_g117895;
				TEXTURE2D(Texture238_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler238_g117963 = SS19_g117998;
				float4 temp_output_37_0_g117963 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117963 = temp_output_37_0_g117963;
				float3 temp_output_279_0_g117963 = Input_Position9197_g117895;
				half3 WorldPosition238_g117963 = temp_output_279_0_g117963;
				half4 localSamplePlanar2D238_g117963 = SamplePlanar2D( Texture238_g117963 , Sampler238_g117963 , Coords238_g117963 , WorldPosition238_g117963 );
				TEXTURE2D(Texture246_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler246_g117963 = SS19_g117998;
				half4 Coords246_g117963 = temp_output_37_0_g117963;
				half3 WorldPosition246_g117963 = temp_output_279_0_g117963;
				float3 temp_output_280_0_g117963 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117963 = temp_output_280_0_g117963;
				half4 localSamplePlanar3D246_g117963 = SamplePlanar3D( Texture246_g117963 , Sampler246_g117963 , Coords246_g117963 , WorldPosition246_g117963 , WorldNormal246_g117963 );
				TEXTURE2D(Texture234_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler234_g117963 = SS19_g117998;
				float4 Coords234_g117963 = temp_output_37_0_g117963;
				float3 WorldPosition234_g117963 = temp_output_279_0_g117963;
				float4 localSampleStochastic2D234_g117963 = SampleStochastic2D( Texture234_g117963 , Sampler234_g117963 , Coords234_g117963 , WorldPosition234_g117963 );
				TEXTURE2D(Texture263_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler263_g117963 = SS19_g117998;
				half4 Coords263_g117963 = temp_output_37_0_g117963;
				half3 WorldPosition263_g117963 = temp_output_279_0_g117963;
				half3 WorldNormal263_g117963 = temp_output_280_0_g117963;
				half4 localSampleStochastic3D263_g117963 = SampleStochastic3D( Texture263_g117963 , Sampler263_g117963 , Coords263_g117963 , WorldPosition263_g117963 , WorldNormal263_g117963 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8972_g117895 = localSamplePlanar2D238_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8972_g117895 = localSamplePlanar3D246_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8972_g117895 = localSampleStochastic2D234_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8972_g117895 = localSampleStochastic3D263_g117963;
				#else
				float4 staticSwitch8972_g117895 = localSamplePlanar2D238_g117963;
				#endif
				half4 Layer133_g117924 = staticSwitch8972_g117895;
				TEXTURE2D(Texture238_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler238_g117969 = SS19_g117998;
				float4 temp_output_37_0_g117969 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117969 = temp_output_37_0_g117969;
				float3 temp_output_279_0_g117969 = Input_Position9197_g117895;
				half3 WorldPosition238_g117969 = temp_output_279_0_g117969;
				half4 localSamplePlanar2D238_g117969 = SamplePlanar2D( Texture238_g117969 , Sampler238_g117969 , Coords238_g117969 , WorldPosition238_g117969 );
				TEXTURE2D(Texture246_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler246_g117969 = SS19_g117998;
				half4 Coords246_g117969 = temp_output_37_0_g117969;
				half3 WorldPosition246_g117969 = temp_output_279_0_g117969;
				float3 temp_output_280_0_g117969 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117969 = temp_output_280_0_g117969;
				half4 localSamplePlanar3D246_g117969 = SamplePlanar3D( Texture246_g117969 , Sampler246_g117969 , Coords246_g117969 , WorldPosition246_g117969 , WorldNormal246_g117969 );
				TEXTURE2D(Texture234_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler234_g117969 = SS19_g117998;
				float4 Coords234_g117969 = temp_output_37_0_g117969;
				float3 WorldPosition234_g117969 = temp_output_279_0_g117969;
				float4 localSampleStochastic2D234_g117969 = SampleStochastic2D( Texture234_g117969 , Sampler234_g117969 , Coords234_g117969 , WorldPosition234_g117969 );
				TEXTURE2D(Texture263_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler263_g117969 = SS19_g117998;
				half4 Coords263_g117969 = temp_output_37_0_g117969;
				half3 WorldPosition263_g117969 = temp_output_279_0_g117969;
				half3 WorldNormal263_g117969 = temp_output_280_0_g117969;
				half4 localSampleStochastic3D263_g117969 = SampleStochastic3D( Texture263_g117969 , Sampler263_g117969 , Coords263_g117969 , WorldPosition263_g117969 , WorldNormal263_g117969 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8973_g117895 = localSamplePlanar2D238_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8973_g117895 = localSamplePlanar3D246_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8973_g117895 = localSampleStochastic2D234_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8973_g117895 = localSampleStochastic3D263_g117969;
				#else
				float4 staticSwitch8973_g117895 = localSamplePlanar2D238_g117969;
				#endif
				half4 Layer237_g117924 = staticSwitch8973_g117895;
				TEXTURE2D(Texture238_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler238_g117970 = SS19_g117998;
				float4 temp_output_37_0_g117970 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117970 = temp_output_37_0_g117970;
				float3 temp_output_279_0_g117970 = Input_Position9197_g117895;
				half3 WorldPosition238_g117970 = temp_output_279_0_g117970;
				half4 localSamplePlanar2D238_g117970 = SamplePlanar2D( Texture238_g117970 , Sampler238_g117970 , Coords238_g117970 , WorldPosition238_g117970 );
				TEXTURE2D(Texture246_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler246_g117970 = SS19_g117998;
				half4 Coords246_g117970 = temp_output_37_0_g117970;
				half3 WorldPosition246_g117970 = temp_output_279_0_g117970;
				float3 temp_output_280_0_g117970 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117970 = temp_output_280_0_g117970;
				half4 localSamplePlanar3D246_g117970 = SamplePlanar3D( Texture246_g117970 , Sampler246_g117970 , Coords246_g117970 , WorldPosition246_g117970 , WorldNormal246_g117970 );
				TEXTURE2D(Texture234_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler234_g117970 = SS19_g117998;
				float4 Coords234_g117970 = temp_output_37_0_g117970;
				float3 WorldPosition234_g117970 = temp_output_279_0_g117970;
				float4 localSampleStochastic2D234_g117970 = SampleStochastic2D( Texture234_g117970 , Sampler234_g117970 , Coords234_g117970 , WorldPosition234_g117970 );
				TEXTURE2D(Texture263_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler263_g117970 = SS19_g117998;
				half4 Coords263_g117970 = temp_output_37_0_g117970;
				half3 WorldPosition263_g117970 = temp_output_279_0_g117970;
				half3 WorldNormal263_g117970 = temp_output_280_0_g117970;
				half4 localSampleStochastic3D263_g117970 = SampleStochastic3D( Texture263_g117970 , Sampler263_g117970 , Coords263_g117970 , WorldPosition263_g117970 , WorldNormal263_g117970 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8974_g117895 = localSamplePlanar2D238_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8974_g117895 = localSamplePlanar3D246_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8974_g117895 = localSampleStochastic2D234_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8974_g117895 = localSampleStochastic3D263_g117970;
				#else
				float4 staticSwitch8974_g117895 = localSamplePlanar2D238_g117970;
				#endif
				half4 Layer338_g117924 = staticSwitch8974_g117895;
				TEXTURE2D(Texture238_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler238_g117971 = SS19_g117998;
				float4 temp_output_37_0_g117971 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117971 = temp_output_37_0_g117971;
				float3 temp_output_279_0_g117971 = Input_Position9197_g117895;
				half3 WorldPosition238_g117971 = temp_output_279_0_g117971;
				half4 localSamplePlanar2D238_g117971 = SamplePlanar2D( Texture238_g117971 , Sampler238_g117971 , Coords238_g117971 , WorldPosition238_g117971 );
				TEXTURE2D(Texture246_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler246_g117971 = SS19_g117998;
				half4 Coords246_g117971 = temp_output_37_0_g117971;
				half3 WorldPosition246_g117971 = temp_output_279_0_g117971;
				float3 temp_output_280_0_g117971 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117971 = temp_output_280_0_g117971;
				half4 localSamplePlanar3D246_g117971 = SamplePlanar3D( Texture246_g117971 , Sampler246_g117971 , Coords246_g117971 , WorldPosition246_g117971 , WorldNormal246_g117971 );
				TEXTURE2D(Texture234_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler234_g117971 = SS19_g117998;
				float4 Coords234_g117971 = temp_output_37_0_g117971;
				float3 WorldPosition234_g117971 = temp_output_279_0_g117971;
				float4 localSampleStochastic2D234_g117971 = SampleStochastic2D( Texture234_g117971 , Sampler234_g117971 , Coords234_g117971 , WorldPosition234_g117971 );
				TEXTURE2D(Texture263_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler263_g117971 = SS19_g117998;
				half4 Coords263_g117971 = temp_output_37_0_g117971;
				half3 WorldPosition263_g117971 = temp_output_279_0_g117971;
				half3 WorldNormal263_g117971 = temp_output_280_0_g117971;
				half4 localSampleStochastic3D263_g117971 = SampleStochastic3D( Texture263_g117971 , Sampler263_g117971 , Coords263_g117971 , WorldPosition263_g117971 , WorldNormal263_g117971 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8975_g117895 = localSamplePlanar2D238_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8975_g117895 = localSamplePlanar3D246_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8975_g117895 = localSampleStochastic2D234_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8975_g117895 = localSampleStochastic3D263_g117971;
				#else
				float4 staticSwitch8975_g117895 = localSamplePlanar2D238_g117971;
				#endif
				half4 Layer439_g117924 = staticSwitch8975_g117895;
				float4 weightedBlendVar31_g117924 = Weights52_g117924;
				float4 weightedBlend31_g117924 = ( weightedBlendVar31_g117924.x*Layer133_g117924 + weightedBlendVar31_g117924.y*Layer237_g117924 + weightedBlendVar31_g117924.z*Layer338_g117924 + weightedBlendVar31_g117924.w*Layer439_g117924 );
				half4 Terrain_AAAA_168986_g117895 = weightedBlend31_g117924;
				half4 Layer_1644_g117903 = Terrain_AAAA_168986_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117903 = Layer_045_g117903;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 + Layer_1243_g117903 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 + Layer_1243_g117903 + Layer_1644_g117903 );
				#else
				float4 staticSwitch40_g117903 = Layer_045_g117903;
				#endif
				half4 Blend_Albedo7468_g117895 = staticSwitch40_g117903;
				half4 Weights52_g117989 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117989 = _TerrainColor1;
				half4 Layer237_g117989 = _TerrainColor2;
				half4 Layer338_g117989 = _TerrainColor3;
				half4 Layer439_g117989 = _TerrainColor4;
				float4 weightedBlendVar31_g117989 = Weights52_g117989;
				float4 weightedBlend31_g117989 = ( weightedBlendVar31_g117989.x*Layer133_g117989 + weightedBlendVar31_g117989.y*Layer237_g117989 + weightedBlendVar31_g117989.z*Layer338_g117989 + weightedBlendVar31_g117989.w*Layer439_g117989 );
				half4 Terrain_Color_049349_g117895 = weightedBlend31_g117989;
				half4 Layer_045_g117994 = Terrain_Color_049349_g117895;
				half4 Weights52_g117990 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117990 = _TerrainColor5;
				half4 Layer237_g117990 = _TerrainColor6;
				half4 Layer338_g117990 = _TerrainColor7;
				half4 Layer439_g117990 = _TerrainColor8;
				float4 weightedBlendVar31_g117990 = Weights52_g117990;
				float4 weightedBlend31_g117990 = ( weightedBlendVar31_g117990.x*Layer133_g117990 + weightedBlendVar31_g117990.y*Layer237_g117990 + weightedBlendVar31_g117990.z*Layer338_g117990 + weightedBlendVar31_g117990.w*Layer439_g117990 );
				half4 Terrain_Color_089361_g117895 = weightedBlend31_g117990;
				half4 Layer_0810_g117994 = Terrain_Color_089361_g117895;
				half4 Weights52_g117991 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117991 = _TerrainColor9;
				half4 Layer237_g117991 = _TerrainColor10;
				half4 Layer338_g117991 = _TerrainColor11;
				half4 Layer439_g117991 = _TerrainColor12;
				float4 weightedBlendVar31_g117991 = Weights52_g117991;
				float4 weightedBlend31_g117991 = ( weightedBlendVar31_g117991.x*Layer133_g117991 + weightedBlendVar31_g117991.y*Layer237_g117991 + weightedBlendVar31_g117991.z*Layer338_g117991 + weightedBlendVar31_g117991.w*Layer439_g117991 );
				half4 Terrain_Color_129373_g117895 = weightedBlend31_g117991;
				half4 Layer_1243_g117994 = Terrain_Color_129373_g117895;
				half4 Weights52_g117992 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117992 = _TerrainColor13;
				half4 Layer237_g117992 = _TerrainColor14;
				half4 Layer338_g117992 = _TerrainColor15;
				half4 Layer439_g117992 = _TerrainColor16;
				float4 weightedBlendVar31_g117992 = Weights52_g117992;
				float4 weightedBlend31_g117992 = ( weightedBlendVar31_g117992.x*Layer133_g117992 + weightedBlendVar31_g117992.y*Layer237_g117992 + weightedBlendVar31_g117992.z*Layer338_g117992 + weightedBlendVar31_g117992.w*Layer439_g117992 );
				half4 Terrain_Color_169381_g117895 = weightedBlend31_g117992;
				half4 Layer_1644_g117994 = Terrain_Color_169381_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117994 = Layer_045_g117994;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 + Layer_1243_g117994 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 + Layer_1243_g117994 + Layer_1644_g117994 );
				#else
				float4 staticSwitch40_g117994 = Layer_045_g117994;
				#endif
				half4 Blend_TerrainColor9387_g117895 = staticSwitch40_g117994;
				half3 Final_Albedo9144_g117895 = ( (Blend_Albedo7468_g117895).xyz * (Blend_TerrainColor9387_g117895).rgb * (_TerrainColor).rgb );
				half3 Local_Albedo9199_g117893 = Final_Albedo9144_g117895;
				float3 In_Albedo3_g117894 = Local_Albedo9199_g117893;
				float3 In_AlbedoRaw3_g117894 = Local_Albedo9199_g117893;
				float3 ase_worldBitangent = packedInput.ase_texcoord3.xyz;
				float3x3 ase_worldToTangent = float3x3(tangentWS.xyz,ase_worldBitangent,normalWS);
				half4 Weights52_g117896 = Terrain_Weights_046781_g117895;
				TEXTURE2D(Texture238_g117987) = _TerrainNormalTex1;
				float localFilterTexture29_g118002 = ( 0.0 );
				SamplerState SamplerDefault29_g118002 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g118002 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g118002 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g118002 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g118002 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g118002 = SamplerDefault29_g118002;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g118002 = SamplerDefault29_g118002;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g118002 = SamplerPoint29_g118002;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g118002 = SamplerLow29_g118002;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g118002 = SamplerMedium29_g118002;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g118002 = SamplerHigh29_g118002;
				#endif
				SamplerState Sampler238_g117987 = SS29_g118002;
				float4 temp_output_37_0_g117987 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117987 = temp_output_37_0_g117987;
				float3 temp_output_279_0_g117987 = Input_Position9197_g117895;
				half3 WorldPosition238_g117987 = temp_output_279_0_g117987;
				half4 localSamplePlanar2D238_g117987 = SamplePlanar2D( Texture238_g117987 , Sampler238_g117987 , Coords238_g117987 , WorldPosition238_g117987 );
				TEXTURE2D(Texture246_g117987) = _TerrainNormalTex1;
				SamplerState Sampler246_g117987 = SS29_g118002;
				half4 Coords246_g117987 = temp_output_37_0_g117987;
				half3 WorldPosition246_g117987 = temp_output_279_0_g117987;
				float3 temp_output_280_0_g117987 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117987 = temp_output_280_0_g117987;
				half4 localSamplePlanar3D246_g117987 = SamplePlanar3D( Texture246_g117987 , Sampler246_g117987 , Coords246_g117987 , WorldPosition246_g117987 , WorldNormal246_g117987 );
				TEXTURE2D(Texture234_g117987) = _TerrainNormalTex1;
				SamplerState Sampler234_g117987 = SS29_g118002;
				float4 Coords234_g117987 = temp_output_37_0_g117987;
				float3 WorldPosition234_g117987 = temp_output_279_0_g117987;
				float4 localSampleStochastic2D234_g117987 = SampleStochastic2D( Texture234_g117987 , Sampler234_g117987 , Coords234_g117987 , WorldPosition234_g117987 );
				TEXTURE2D(Texture263_g117987) = _TerrainNormalTex1;
				SamplerState Sampler263_g117987 = SS29_g118002;
				half4 Coords263_g117987 = temp_output_37_0_g117987;
				half3 WorldPosition263_g117987 = temp_output_279_0_g117987;
				half3 WorldNormal263_g117987 = temp_output_280_0_g117987;
				half4 localSampleStochastic3D263_g117987 = SampleStochastic3D( Texture263_g117987 , Sampler263_g117987 , Coords263_g117987 , WorldPosition263_g117987 , WorldNormal263_g117987 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8635_g117895 = localSamplePlanar2D238_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8635_g117895 = localSamplePlanar3D246_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8635_g117895 = localSampleStochastic2D234_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8635_g117895 = localSampleStochastic3D263_g117987;
				#else
				float4 staticSwitch8635_g117895 = localSamplePlanar2D238_g117987;
				#endif
				half4 Layer133_g117896 = staticSwitch8635_g117895;
				TEXTURE2D(Texture238_g117943) = _TerrainNormalTex2;
				SamplerState Sampler238_g117943 = SS29_g118002;
				float4 temp_output_37_0_g117943 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117943 = temp_output_37_0_g117943;
				float3 temp_output_279_0_g117943 = Input_Position9197_g117895;
				half3 WorldPosition238_g117943 = temp_output_279_0_g117943;
				half4 localSamplePlanar2D238_g117943 = SamplePlanar2D( Texture238_g117943 , Sampler238_g117943 , Coords238_g117943 , WorldPosition238_g117943 );
				TEXTURE2D(Texture246_g117943) = _TerrainNormalTex2;
				SamplerState Sampler246_g117943 = SS29_g118002;
				half4 Coords246_g117943 = temp_output_37_0_g117943;
				half3 WorldPosition246_g117943 = temp_output_279_0_g117943;
				float3 temp_output_280_0_g117943 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117943 = temp_output_280_0_g117943;
				half4 localSamplePlanar3D246_g117943 = SamplePlanar3D( Texture246_g117943 , Sampler246_g117943 , Coords246_g117943 , WorldPosition246_g117943 , WorldNormal246_g117943 );
				TEXTURE2D(Texture234_g117943) = _TerrainNormalTex2;
				SamplerState Sampler234_g117943 = SS29_g118002;
				float4 Coords234_g117943 = temp_output_37_0_g117943;
				float3 WorldPosition234_g117943 = temp_output_279_0_g117943;
				float4 localSampleStochastic2D234_g117943 = SampleStochastic2D( Texture234_g117943 , Sampler234_g117943 , Coords234_g117943 , WorldPosition234_g117943 );
				TEXTURE2D(Texture263_g117943) = _TerrainNormalTex2;
				SamplerState Sampler263_g117943 = SS29_g118002;
				half4 Coords263_g117943 = temp_output_37_0_g117943;
				half3 WorldPosition263_g117943 = temp_output_279_0_g117943;
				half3 WorldNormal263_g117943 = temp_output_280_0_g117943;
				half4 localSampleStochastic3D263_g117943 = SampleStochastic3D( Texture263_g117943 , Sampler263_g117943 , Coords263_g117943 , WorldPosition263_g117943 , WorldNormal263_g117943 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8636_g117895 = localSamplePlanar2D238_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8636_g117895 = localSamplePlanar3D246_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8636_g117895 = localSampleStochastic2D234_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8636_g117895 = localSampleStochastic3D263_g117943;
				#else
				float4 staticSwitch8636_g117895 = localSamplePlanar2D238_g117943;
				#endif
				half4 Layer237_g117896 = staticSwitch8636_g117895;
				TEXTURE2D(Texture238_g117946) = _TerrainNormalTex3;
				SamplerState Sampler238_g117946 = SS29_g118002;
				float4 temp_output_37_0_g117946 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117946 = temp_output_37_0_g117946;
				float3 temp_output_279_0_g117946 = Input_Position9197_g117895;
				half3 WorldPosition238_g117946 = temp_output_279_0_g117946;
				half4 localSamplePlanar2D238_g117946 = SamplePlanar2D( Texture238_g117946 , Sampler238_g117946 , Coords238_g117946 , WorldPosition238_g117946 );
				TEXTURE2D(Texture246_g117946) = _TerrainNormalTex3;
				SamplerState Sampler246_g117946 = SS29_g118002;
				half4 Coords246_g117946 = temp_output_37_0_g117946;
				half3 WorldPosition246_g117946 = temp_output_279_0_g117946;
				float3 temp_output_280_0_g117946 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117946 = temp_output_280_0_g117946;
				half4 localSamplePlanar3D246_g117946 = SamplePlanar3D( Texture246_g117946 , Sampler246_g117946 , Coords246_g117946 , WorldPosition246_g117946 , WorldNormal246_g117946 );
				TEXTURE2D(Texture234_g117946) = _TerrainNormalTex3;
				SamplerState Sampler234_g117946 = SS29_g118002;
				float4 Coords234_g117946 = temp_output_37_0_g117946;
				float3 WorldPosition234_g117946 = temp_output_279_0_g117946;
				float4 localSampleStochastic2D234_g117946 = SampleStochastic2D( Texture234_g117946 , Sampler234_g117946 , Coords234_g117946 , WorldPosition234_g117946 );
				TEXTURE2D(Texture263_g117946) = _TerrainNormalTex3;
				SamplerState Sampler263_g117946 = SS29_g118002;
				half4 Coords263_g117946 = temp_output_37_0_g117946;
				half3 WorldPosition263_g117946 = temp_output_279_0_g117946;
				half3 WorldNormal263_g117946 = temp_output_280_0_g117946;
				half4 localSampleStochastic3D263_g117946 = SampleStochastic3D( Texture263_g117946 , Sampler263_g117946 , Coords263_g117946 , WorldPosition263_g117946 , WorldNormal263_g117946 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8637_g117895 = localSamplePlanar2D238_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8637_g117895 = localSamplePlanar3D246_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8637_g117895 = localSampleStochastic2D234_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8637_g117895 = localSampleStochastic3D263_g117946;
				#else
				float4 staticSwitch8637_g117895 = localSamplePlanar2D238_g117946;
				#endif
				half4 Layer338_g117896 = staticSwitch8637_g117895;
				TEXTURE2D(Texture238_g117948) = _TerrainNormalTex4;
				SamplerState Sampler238_g117948 = SS29_g118002;
				float4 temp_output_37_0_g117948 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117948 = temp_output_37_0_g117948;
				float3 temp_output_279_0_g117948 = Input_Position9197_g117895;
				half3 WorldPosition238_g117948 = temp_output_279_0_g117948;
				half4 localSamplePlanar2D238_g117948 = SamplePlanar2D( Texture238_g117948 , Sampler238_g117948 , Coords238_g117948 , WorldPosition238_g117948 );
				TEXTURE2D(Texture246_g117948) = _TerrainNormalTex4;
				SamplerState Sampler246_g117948 = SS29_g118002;
				half4 Coords246_g117948 = temp_output_37_0_g117948;
				half3 WorldPosition246_g117948 = temp_output_279_0_g117948;
				float3 temp_output_280_0_g117948 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117948 = temp_output_280_0_g117948;
				half4 localSamplePlanar3D246_g117948 = SamplePlanar3D( Texture246_g117948 , Sampler246_g117948 , Coords246_g117948 , WorldPosition246_g117948 , WorldNormal246_g117948 );
				TEXTURE2D(Texture234_g117948) = _TerrainNormalTex4;
				SamplerState Sampler234_g117948 = SS29_g118002;
				float4 Coords234_g117948 = temp_output_37_0_g117948;
				float3 WorldPosition234_g117948 = temp_output_279_0_g117948;
				float4 localSampleStochastic2D234_g117948 = SampleStochastic2D( Texture234_g117948 , Sampler234_g117948 , Coords234_g117948 , WorldPosition234_g117948 );
				TEXTURE2D(Texture263_g117948) = _TerrainNormalTex4;
				SamplerState Sampler263_g117948 = SS29_g118002;
				half4 Coords263_g117948 = temp_output_37_0_g117948;
				half3 WorldPosition263_g117948 = temp_output_279_0_g117948;
				half3 WorldNormal263_g117948 = temp_output_280_0_g117948;
				half4 localSampleStochastic3D263_g117948 = SampleStochastic3D( Texture263_g117948 , Sampler263_g117948 , Coords263_g117948 , WorldPosition263_g117948 , WorldNormal263_g117948 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8638_g117895 = localSamplePlanar2D238_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8638_g117895 = localSamplePlanar3D246_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8638_g117895 = localSampleStochastic2D234_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8638_g117895 = localSampleStochastic3D263_g117948;
				#else
				float4 staticSwitch8638_g117895 = localSamplePlanar2D238_g117948;
				#endif
				half4 Layer439_g117896 = staticSwitch8638_g117895;
				float4 weightedBlendVar31_g117896 = Weights52_g117896;
				float4 weightedBlend31_g117896 = ( weightedBlendVar31_g117896.x*Layer133_g117896 + weightedBlendVar31_g117896.y*Layer237_g117896 + weightedBlendVar31_g117896.z*Layer338_g117896 + weightedBlendVar31_g117896.w*Layer439_g117896 );
				half4 Terrain_B_047202_g117895 = weightedBlend31_g117896;
				half4 Layer_045_g117902 = Terrain_B_047202_g117895;
				half4 Weights52_g117911 = Terrain_Weights_087340_g117895;
				TEXTURE2D(Texture238_g117952) = _TerrainNormalTex5;
				SamplerState Sampler238_g117952 = SS29_g118002;
				float4 temp_output_37_0_g117952 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117952 = temp_output_37_0_g117952;
				float3 temp_output_279_0_g117952 = Input_Position9197_g117895;
				half3 WorldPosition238_g117952 = temp_output_279_0_g117952;
				half4 localSamplePlanar2D238_g117952 = SamplePlanar2D( Texture238_g117952 , Sampler238_g117952 , Coords238_g117952 , WorldPosition238_g117952 );
				TEXTURE2D(Texture246_g117952) = _TerrainNormalTex5;
				SamplerState Sampler246_g117952 = SS29_g118002;
				half4 Coords246_g117952 = temp_output_37_0_g117952;
				half3 WorldPosition246_g117952 = temp_output_279_0_g117952;
				float3 temp_output_280_0_g117952 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117952 = temp_output_280_0_g117952;
				half4 localSamplePlanar3D246_g117952 = SamplePlanar3D( Texture246_g117952 , Sampler246_g117952 , Coords246_g117952 , WorldPosition246_g117952 , WorldNormal246_g117952 );
				TEXTURE2D(Texture234_g117952) = _TerrainNormalTex5;
				SamplerState Sampler234_g117952 = SS29_g118002;
				float4 Coords234_g117952 = temp_output_37_0_g117952;
				float3 WorldPosition234_g117952 = temp_output_279_0_g117952;
				float4 localSampleStochastic2D234_g117952 = SampleStochastic2D( Texture234_g117952 , Sampler234_g117952 , Coords234_g117952 , WorldPosition234_g117952 );
				TEXTURE2D(Texture263_g117952) = _TerrainNormalTex5;
				SamplerState Sampler263_g117952 = SS29_g118002;
				half4 Coords263_g117952 = temp_output_37_0_g117952;
				half3 WorldPosition263_g117952 = temp_output_279_0_g117952;
				half3 WorldNormal263_g117952 = temp_output_280_0_g117952;
				half4 localSampleStochastic3D263_g117952 = SampleStochastic3D( Texture263_g117952 , Sampler263_g117952 , Coords263_g117952 , WorldPosition263_g117952 , WorldNormal263_g117952 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8686_g117895 = localSamplePlanar2D238_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8686_g117895 = localSamplePlanar3D246_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8686_g117895 = localSampleStochastic2D234_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8686_g117895 = localSampleStochastic3D263_g117952;
				#else
				float4 staticSwitch8686_g117895 = localSamplePlanar2D238_g117952;
				#endif
				half4 Layer133_g117911 = staticSwitch8686_g117895;
				TEXTURE2D(Texture238_g117981) = _TerrainNormalTex6;
				SamplerState Sampler238_g117981 = SS29_g118002;
				float4 temp_output_37_0_g117981 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117981 = temp_output_37_0_g117981;
				float3 temp_output_279_0_g117981 = Input_Position9197_g117895;
				half3 WorldPosition238_g117981 = temp_output_279_0_g117981;
				half4 localSamplePlanar2D238_g117981 = SamplePlanar2D( Texture238_g117981 , Sampler238_g117981 , Coords238_g117981 , WorldPosition238_g117981 );
				TEXTURE2D(Texture246_g117981) = _TerrainNormalTex6;
				SamplerState Sampler246_g117981 = SS29_g118002;
				half4 Coords246_g117981 = temp_output_37_0_g117981;
				half3 WorldPosition246_g117981 = temp_output_279_0_g117981;
				float3 temp_output_280_0_g117981 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117981 = temp_output_280_0_g117981;
				half4 localSamplePlanar3D246_g117981 = SamplePlanar3D( Texture246_g117981 , Sampler246_g117981 , Coords246_g117981 , WorldPosition246_g117981 , WorldNormal246_g117981 );
				TEXTURE2D(Texture234_g117981) = _TerrainNormalTex6;
				SamplerState Sampler234_g117981 = SS29_g118002;
				float4 Coords234_g117981 = temp_output_37_0_g117981;
				float3 WorldPosition234_g117981 = temp_output_279_0_g117981;
				float4 localSampleStochastic2D234_g117981 = SampleStochastic2D( Texture234_g117981 , Sampler234_g117981 , Coords234_g117981 , WorldPosition234_g117981 );
				TEXTURE2D(Texture263_g117981) = _TerrainNormalTex6;
				SamplerState Sampler263_g117981 = SS29_g118002;
				half4 Coords263_g117981 = temp_output_37_0_g117981;
				half3 WorldPosition263_g117981 = temp_output_279_0_g117981;
				half3 WorldNormal263_g117981 = temp_output_280_0_g117981;
				half4 localSampleStochastic3D263_g117981 = SampleStochastic3D( Texture263_g117981 , Sampler263_g117981 , Coords263_g117981 , WorldPosition263_g117981 , WorldNormal263_g117981 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8687_g117895 = localSamplePlanar2D238_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8687_g117895 = localSamplePlanar3D246_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8687_g117895 = localSampleStochastic2D234_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8687_g117895 = localSampleStochastic3D263_g117981;
				#else
				float4 staticSwitch8687_g117895 = localSamplePlanar2D238_g117981;
				#endif
				half4 Layer237_g117911 = staticSwitch8687_g117895;
				TEXTURE2D(Texture238_g117982) = _TerrainNormalTex7;
				SamplerState Sampler238_g117982 = SS29_g118002;
				float4 temp_output_37_0_g117982 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117982 = temp_output_37_0_g117982;
				float3 temp_output_279_0_g117982 = Input_Position9197_g117895;
				half3 WorldPosition238_g117982 = temp_output_279_0_g117982;
				half4 localSamplePlanar2D238_g117982 = SamplePlanar2D( Texture238_g117982 , Sampler238_g117982 , Coords238_g117982 , WorldPosition238_g117982 );
				TEXTURE2D(Texture246_g117982) = _TerrainNormalTex7;
				SamplerState Sampler246_g117982 = SS29_g118002;
				half4 Coords246_g117982 = temp_output_37_0_g117982;
				half3 WorldPosition246_g117982 = temp_output_279_0_g117982;
				float3 temp_output_280_0_g117982 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117982 = temp_output_280_0_g117982;
				half4 localSamplePlanar3D246_g117982 = SamplePlanar3D( Texture246_g117982 , Sampler246_g117982 , Coords246_g117982 , WorldPosition246_g117982 , WorldNormal246_g117982 );
				TEXTURE2D(Texture234_g117982) = _TerrainNormalTex7;
				SamplerState Sampler234_g117982 = SS29_g118002;
				float4 Coords234_g117982 = temp_output_37_0_g117982;
				float3 WorldPosition234_g117982 = temp_output_279_0_g117982;
				float4 localSampleStochastic2D234_g117982 = SampleStochastic2D( Texture234_g117982 , Sampler234_g117982 , Coords234_g117982 , WorldPosition234_g117982 );
				TEXTURE2D(Texture263_g117982) = _TerrainNormalTex7;
				SamplerState Sampler263_g117982 = SS29_g118002;
				half4 Coords263_g117982 = temp_output_37_0_g117982;
				half3 WorldPosition263_g117982 = temp_output_279_0_g117982;
				half3 WorldNormal263_g117982 = temp_output_280_0_g117982;
				half4 localSampleStochastic3D263_g117982 = SampleStochastic3D( Texture263_g117982 , Sampler263_g117982 , Coords263_g117982 , WorldPosition263_g117982 , WorldNormal263_g117982 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8688_g117895 = localSamplePlanar2D238_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8688_g117895 = localSamplePlanar3D246_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8688_g117895 = localSampleStochastic2D234_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8688_g117895 = localSampleStochastic3D263_g117982;
				#else
				float4 staticSwitch8688_g117895 = localSamplePlanar2D238_g117982;
				#endif
				half4 Layer338_g117911 = staticSwitch8688_g117895;
				TEXTURE2D(Texture238_g117983) = _TerrainNormalTex8;
				SamplerState Sampler238_g117983 = SS29_g118002;
				float4 temp_output_37_0_g117983 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117983 = temp_output_37_0_g117983;
				float3 temp_output_279_0_g117983 = Input_Position9197_g117895;
				half3 WorldPosition238_g117983 = temp_output_279_0_g117983;
				half4 localSamplePlanar2D238_g117983 = SamplePlanar2D( Texture238_g117983 , Sampler238_g117983 , Coords238_g117983 , WorldPosition238_g117983 );
				TEXTURE2D(Texture246_g117983) = _TerrainNormalTex8;
				SamplerState Sampler246_g117983 = SS29_g118002;
				half4 Coords246_g117983 = temp_output_37_0_g117983;
				half3 WorldPosition246_g117983 = temp_output_279_0_g117983;
				float3 temp_output_280_0_g117983 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117983 = temp_output_280_0_g117983;
				half4 localSamplePlanar3D246_g117983 = SamplePlanar3D( Texture246_g117983 , Sampler246_g117983 , Coords246_g117983 , WorldPosition246_g117983 , WorldNormal246_g117983 );
				TEXTURE2D(Texture234_g117983) = _TerrainNormalTex8;
				SamplerState Sampler234_g117983 = SS29_g118002;
				float4 Coords234_g117983 = temp_output_37_0_g117983;
				float3 WorldPosition234_g117983 = temp_output_279_0_g117983;
				float4 localSampleStochastic2D234_g117983 = SampleStochastic2D( Texture234_g117983 , Sampler234_g117983 , Coords234_g117983 , WorldPosition234_g117983 );
				TEXTURE2D(Texture263_g117983) = _TerrainNormalTex8;
				SamplerState Sampler263_g117983 = SS29_g118002;
				half4 Coords263_g117983 = temp_output_37_0_g117983;
				half3 WorldPosition263_g117983 = temp_output_279_0_g117983;
				half3 WorldNormal263_g117983 = temp_output_280_0_g117983;
				half4 localSampleStochastic3D263_g117983 = SampleStochastic3D( Texture263_g117983 , Sampler263_g117983 , Coords263_g117983 , WorldPosition263_g117983 , WorldNormal263_g117983 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8689_g117895 = localSamplePlanar2D238_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8689_g117895 = localSamplePlanar3D246_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8689_g117895 = localSampleStochastic2D234_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8689_g117895 = localSampleStochastic3D263_g117983;
				#else
				float4 staticSwitch8689_g117895 = localSamplePlanar2D238_g117983;
				#endif
				half4 Layer439_g117911 = staticSwitch8689_g117895;
				float4 weightedBlendVar31_g117911 = Weights52_g117911;
				float4 weightedBlend31_g117911 = ( weightedBlendVar31_g117911.x*Layer133_g117911 + weightedBlendVar31_g117911.y*Layer237_g117911 + weightedBlendVar31_g117911.z*Layer338_g117911 + weightedBlendVar31_g117911.w*Layer439_g117911 );
				half4 Terrain_B_088684_g117895 = weightedBlend31_g117911;
				half4 Layer_0810_g117902 = Terrain_B_088684_g117895;
				half4 Weights52_g117918 = Terrain_Weights_127710_g117895;
				TEXTURE2D(Texture238_g117955) = _TerrainNormalTex9;
				SamplerState Sampler238_g117955 = SS29_g118002;
				float4 temp_output_37_0_g117955 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117955 = temp_output_37_0_g117955;
				float3 temp_output_279_0_g117955 = Input_Position9197_g117895;
				half3 WorldPosition238_g117955 = temp_output_279_0_g117955;
				half4 localSamplePlanar2D238_g117955 = SamplePlanar2D( Texture238_g117955 , Sampler238_g117955 , Coords238_g117955 , WorldPosition238_g117955 );
				TEXTURE2D(Texture246_g117955) = _TerrainNormalTex9;
				SamplerState Sampler246_g117955 = SS29_g118002;
				half4 Coords246_g117955 = temp_output_37_0_g117955;
				half3 WorldPosition246_g117955 = temp_output_279_0_g117955;
				float3 temp_output_280_0_g117955 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117955 = temp_output_280_0_g117955;
				half4 localSamplePlanar3D246_g117955 = SamplePlanar3D( Texture246_g117955 , Sampler246_g117955 , Coords246_g117955 , WorldPosition246_g117955 , WorldNormal246_g117955 );
				TEXTURE2D(Texture234_g117955) = _TerrainNormalTex9;
				SamplerState Sampler234_g117955 = SS29_g118002;
				float4 Coords234_g117955 = temp_output_37_0_g117955;
				float3 WorldPosition234_g117955 = temp_output_279_0_g117955;
				float4 localSampleStochastic2D234_g117955 = SampleStochastic2D( Texture234_g117955 , Sampler234_g117955 , Coords234_g117955 , WorldPosition234_g117955 );
				TEXTURE2D(Texture263_g117955) = _TerrainNormalTex9;
				SamplerState Sampler263_g117955 = SS29_g118002;
				half4 Coords263_g117955 = temp_output_37_0_g117955;
				half3 WorldPosition263_g117955 = temp_output_279_0_g117955;
				half3 WorldNormal263_g117955 = temp_output_280_0_g117955;
				half4 localSampleStochastic3D263_g117955 = SampleStochastic3D( Texture263_g117955 , Sampler263_g117955 , Coords263_g117955 , WorldPosition263_g117955 , WorldNormal263_g117955 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8849_g117895 = localSamplePlanar2D238_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8849_g117895 = localSamplePlanar3D246_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8849_g117895 = localSampleStochastic2D234_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8849_g117895 = localSampleStochastic3D263_g117955;
				#else
				float4 staticSwitch8849_g117895 = localSamplePlanar2D238_g117955;
				#endif
				half4 Layer133_g117918 = staticSwitch8849_g117895;
				TEXTURE2D(Texture238_g117960) = _TerrainNormalTex10;
				SamplerState Sampler238_g117960 = SS29_g118002;
				float4 temp_output_37_0_g117960 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117960 = temp_output_37_0_g117960;
				float3 temp_output_279_0_g117960 = Input_Position9197_g117895;
				half3 WorldPosition238_g117960 = temp_output_279_0_g117960;
				half4 localSamplePlanar2D238_g117960 = SamplePlanar2D( Texture238_g117960 , Sampler238_g117960 , Coords238_g117960 , WorldPosition238_g117960 );
				TEXTURE2D(Texture246_g117960) = _TerrainNormalTex10;
				SamplerState Sampler246_g117960 = SS29_g118002;
				half4 Coords246_g117960 = temp_output_37_0_g117960;
				half3 WorldPosition246_g117960 = temp_output_279_0_g117960;
				float3 temp_output_280_0_g117960 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117960 = temp_output_280_0_g117960;
				half4 localSamplePlanar3D246_g117960 = SamplePlanar3D( Texture246_g117960 , Sampler246_g117960 , Coords246_g117960 , WorldPosition246_g117960 , WorldNormal246_g117960 );
				TEXTURE2D(Texture234_g117960) = _TerrainNormalTex10;
				SamplerState Sampler234_g117960 = SS29_g118002;
				float4 Coords234_g117960 = temp_output_37_0_g117960;
				float3 WorldPosition234_g117960 = temp_output_279_0_g117960;
				float4 localSampleStochastic2D234_g117960 = SampleStochastic2D( Texture234_g117960 , Sampler234_g117960 , Coords234_g117960 , WorldPosition234_g117960 );
				TEXTURE2D(Texture263_g117960) = _TerrainNormalTex10;
				SamplerState Sampler263_g117960 = SS29_g118002;
				half4 Coords263_g117960 = temp_output_37_0_g117960;
				half3 WorldPosition263_g117960 = temp_output_279_0_g117960;
				half3 WorldNormal263_g117960 = temp_output_280_0_g117960;
				half4 localSampleStochastic3D263_g117960 = SampleStochastic3D( Texture263_g117960 , Sampler263_g117960 , Coords263_g117960 , WorldPosition263_g117960 , WorldNormal263_g117960 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8876_g117895 = localSamplePlanar2D238_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8876_g117895 = localSamplePlanar3D246_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8876_g117895 = localSampleStochastic2D234_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8876_g117895 = localSampleStochastic3D263_g117960;
				#else
				float4 staticSwitch8876_g117895 = localSamplePlanar2D238_g117960;
				#endif
				half4 Layer237_g117918 = staticSwitch8876_g117895;
				TEXTURE2D(Texture238_g117961) = _TerrainNormalTex11;
				SamplerState Sampler238_g117961 = SS29_g118002;
				float4 temp_output_37_0_g117961 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117961 = temp_output_37_0_g117961;
				float3 temp_output_279_0_g117961 = Input_Position9197_g117895;
				half3 WorldPosition238_g117961 = temp_output_279_0_g117961;
				half4 localSamplePlanar2D238_g117961 = SamplePlanar2D( Texture238_g117961 , Sampler238_g117961 , Coords238_g117961 , WorldPosition238_g117961 );
				TEXTURE2D(Texture246_g117961) = _TerrainNormalTex11;
				SamplerState Sampler246_g117961 = SS29_g118002;
				half4 Coords246_g117961 = temp_output_37_0_g117961;
				half3 WorldPosition246_g117961 = temp_output_279_0_g117961;
				float3 temp_output_280_0_g117961 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117961 = temp_output_280_0_g117961;
				half4 localSamplePlanar3D246_g117961 = SamplePlanar3D( Texture246_g117961 , Sampler246_g117961 , Coords246_g117961 , WorldPosition246_g117961 , WorldNormal246_g117961 );
				TEXTURE2D(Texture234_g117961) = _TerrainNormalTex11;
				SamplerState Sampler234_g117961 = SS29_g118002;
				float4 Coords234_g117961 = temp_output_37_0_g117961;
				float3 WorldPosition234_g117961 = temp_output_279_0_g117961;
				float4 localSampleStochastic2D234_g117961 = SampleStochastic2D( Texture234_g117961 , Sampler234_g117961 , Coords234_g117961 , WorldPosition234_g117961 );
				TEXTURE2D(Texture263_g117961) = _TerrainNormalTex11;
				SamplerState Sampler263_g117961 = SS29_g118002;
				half4 Coords263_g117961 = temp_output_37_0_g117961;
				half3 WorldPosition263_g117961 = temp_output_279_0_g117961;
				half3 WorldNormal263_g117961 = temp_output_280_0_g117961;
				half4 localSampleStochastic3D263_g117961 = SampleStochastic3D( Texture263_g117961 , Sampler263_g117961 , Coords263_g117961 , WorldPosition263_g117961 , WorldNormal263_g117961 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8850_g117895 = localSamplePlanar2D238_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8850_g117895 = localSamplePlanar3D246_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8850_g117895 = localSampleStochastic2D234_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8850_g117895 = localSampleStochastic3D263_g117961;
				#else
				float4 staticSwitch8850_g117895 = localSamplePlanar2D238_g117961;
				#endif
				half4 Layer338_g117918 = staticSwitch8850_g117895;
				TEXTURE2D(Texture238_g117962) = _TerrainNormalTex12;
				SamplerState Sampler238_g117962 = SS29_g118002;
				float4 temp_output_37_0_g117962 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117962 = temp_output_37_0_g117962;
				float3 temp_output_279_0_g117962 = Input_Position9197_g117895;
				half3 WorldPosition238_g117962 = temp_output_279_0_g117962;
				half4 localSamplePlanar2D238_g117962 = SamplePlanar2D( Texture238_g117962 , Sampler238_g117962 , Coords238_g117962 , WorldPosition238_g117962 );
				TEXTURE2D(Texture246_g117962) = _TerrainNormalTex12;
				SamplerState Sampler246_g117962 = SS29_g118002;
				half4 Coords246_g117962 = temp_output_37_0_g117962;
				half3 WorldPosition246_g117962 = temp_output_279_0_g117962;
				float3 temp_output_280_0_g117962 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117962 = temp_output_280_0_g117962;
				half4 localSamplePlanar3D246_g117962 = SamplePlanar3D( Texture246_g117962 , Sampler246_g117962 , Coords246_g117962 , WorldPosition246_g117962 , WorldNormal246_g117962 );
				TEXTURE2D(Texture234_g117962) = _TerrainNormalTex12;
				SamplerState Sampler234_g117962 = SS29_g118002;
				float4 Coords234_g117962 = temp_output_37_0_g117962;
				float3 WorldPosition234_g117962 = temp_output_279_0_g117962;
				float4 localSampleStochastic2D234_g117962 = SampleStochastic2D( Texture234_g117962 , Sampler234_g117962 , Coords234_g117962 , WorldPosition234_g117962 );
				TEXTURE2D(Texture263_g117962) = _TerrainNormalTex12;
				SamplerState Sampler263_g117962 = SS29_g118002;
				half4 Coords263_g117962 = temp_output_37_0_g117962;
				half3 WorldPosition263_g117962 = temp_output_279_0_g117962;
				half3 WorldNormal263_g117962 = temp_output_280_0_g117962;
				half4 localSampleStochastic3D263_g117962 = SampleStochastic3D( Texture263_g117962 , Sampler263_g117962 , Coords263_g117962 , WorldPosition263_g117962 , WorldNormal263_g117962 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8877_g117895 = localSamplePlanar2D238_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8877_g117895 = localSamplePlanar3D246_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8877_g117895 = localSampleStochastic2D234_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8877_g117895 = localSampleStochastic3D263_g117962;
				#else
				float4 staticSwitch8877_g117895 = localSamplePlanar2D238_g117962;
				#endif
				half4 Layer439_g117918 = staticSwitch8877_g117895;
				float4 weightedBlendVar31_g117918 = Weights52_g117918;
				float4 weightedBlend31_g117918 = ( weightedBlendVar31_g117918.x*Layer133_g117918 + weightedBlendVar31_g117918.y*Layer237_g117918 + weightedBlendVar31_g117918.z*Layer338_g117918 + weightedBlendVar31_g117918.w*Layer439_g117918 );
				half4 Terrain_B_128865_g117895 = weightedBlend31_g117918;
				half4 Layer_1243_g117902 = Terrain_B_128865_g117895;
				half4 Weights52_g117925 = Terrain_Weights_167709_g117895;
				TEXTURE2D(Texture238_g117965) = _TerrainNormalTex13;
				SamplerState Sampler238_g117965 = SS29_g118002;
				float4 temp_output_37_0_g117965 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117965 = temp_output_37_0_g117965;
				float3 temp_output_279_0_g117965 = Input_Position9197_g117895;
				half3 WorldPosition238_g117965 = temp_output_279_0_g117965;
				half4 localSamplePlanar2D238_g117965 = SamplePlanar2D( Texture238_g117965 , Sampler238_g117965 , Coords238_g117965 , WorldPosition238_g117965 );
				TEXTURE2D(Texture246_g117965) = _TerrainNormalTex13;
				SamplerState Sampler246_g117965 = SS29_g118002;
				half4 Coords246_g117965 = temp_output_37_0_g117965;
				half3 WorldPosition246_g117965 = temp_output_279_0_g117965;
				float3 temp_output_280_0_g117965 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117965 = temp_output_280_0_g117965;
				half4 localSamplePlanar3D246_g117965 = SamplePlanar3D( Texture246_g117965 , Sampler246_g117965 , Coords246_g117965 , WorldPosition246_g117965 , WorldNormal246_g117965 );
				TEXTURE2D(Texture234_g117965) = _TerrainNormalTex13;
				SamplerState Sampler234_g117965 = SS29_g118002;
				float4 Coords234_g117965 = temp_output_37_0_g117965;
				float3 WorldPosition234_g117965 = temp_output_279_0_g117965;
				float4 localSampleStochastic2D234_g117965 = SampleStochastic2D( Texture234_g117965 , Sampler234_g117965 , Coords234_g117965 , WorldPosition234_g117965 );
				TEXTURE2D(Texture263_g117965) = _TerrainNormalTex13;
				SamplerState Sampler263_g117965 = SS29_g118002;
				half4 Coords263_g117965 = temp_output_37_0_g117965;
				half3 WorldPosition263_g117965 = temp_output_279_0_g117965;
				half3 WorldNormal263_g117965 = temp_output_280_0_g117965;
				half4 localSampleStochastic3D263_g117965 = SampleStochastic3D( Texture263_g117965 , Sampler263_g117965 , Coords263_g117965 , WorldPosition263_g117965 , WorldNormal263_g117965 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8991_g117895 = localSamplePlanar2D238_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8991_g117895 = localSamplePlanar3D246_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8991_g117895 = localSampleStochastic2D234_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8991_g117895 = localSampleStochastic3D263_g117965;
				#else
				float4 staticSwitch8991_g117895 = localSamplePlanar2D238_g117965;
				#endif
				half4 Layer133_g117925 = staticSwitch8991_g117895;
				TEXTURE2D(Texture238_g117972) = _TerrainNormalTex14;
				SamplerState Sampler238_g117972 = SS29_g118002;
				float4 temp_output_37_0_g117972 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117972 = temp_output_37_0_g117972;
				float3 temp_output_279_0_g117972 = Input_Position9197_g117895;
				half3 WorldPosition238_g117972 = temp_output_279_0_g117972;
				half4 localSamplePlanar2D238_g117972 = SamplePlanar2D( Texture238_g117972 , Sampler238_g117972 , Coords238_g117972 , WorldPosition238_g117972 );
				TEXTURE2D(Texture246_g117972) = _TerrainNormalTex14;
				SamplerState Sampler246_g117972 = SS29_g118002;
				half4 Coords246_g117972 = temp_output_37_0_g117972;
				half3 WorldPosition246_g117972 = temp_output_279_0_g117972;
				float3 temp_output_280_0_g117972 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117972 = temp_output_280_0_g117972;
				half4 localSamplePlanar3D246_g117972 = SamplePlanar3D( Texture246_g117972 , Sampler246_g117972 , Coords246_g117972 , WorldPosition246_g117972 , WorldNormal246_g117972 );
				TEXTURE2D(Texture234_g117972) = _TerrainNormalTex14;
				SamplerState Sampler234_g117972 = SS29_g118002;
				float4 Coords234_g117972 = temp_output_37_0_g117972;
				float3 WorldPosition234_g117972 = temp_output_279_0_g117972;
				float4 localSampleStochastic2D234_g117972 = SampleStochastic2D( Texture234_g117972 , Sampler234_g117972 , Coords234_g117972 , WorldPosition234_g117972 );
				TEXTURE2D(Texture263_g117972) = _TerrainNormalTex14;
				SamplerState Sampler263_g117972 = SS29_g118002;
				half4 Coords263_g117972 = temp_output_37_0_g117972;
				half3 WorldPosition263_g117972 = temp_output_279_0_g117972;
				half3 WorldNormal263_g117972 = temp_output_280_0_g117972;
				half4 localSampleStochastic3D263_g117972 = SampleStochastic3D( Texture263_g117972 , Sampler263_g117972 , Coords263_g117972 , WorldPosition263_g117972 , WorldNormal263_g117972 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8990_g117895 = localSamplePlanar2D238_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8990_g117895 = localSamplePlanar3D246_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8990_g117895 = localSampleStochastic2D234_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8990_g117895 = localSampleStochastic3D263_g117972;
				#else
				float4 staticSwitch8990_g117895 = localSamplePlanar2D238_g117972;
				#endif
				half4 Layer237_g117925 = staticSwitch8990_g117895;
				TEXTURE2D(Texture238_g117973) = _TerrainNormalTex15;
				SamplerState Sampler238_g117973 = SS29_g118002;
				float4 temp_output_37_0_g117973 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117973 = temp_output_37_0_g117973;
				float3 temp_output_279_0_g117973 = Input_Position9197_g117895;
				half3 WorldPosition238_g117973 = temp_output_279_0_g117973;
				half4 localSamplePlanar2D238_g117973 = SamplePlanar2D( Texture238_g117973 , Sampler238_g117973 , Coords238_g117973 , WorldPosition238_g117973 );
				TEXTURE2D(Texture246_g117973) = _TerrainNormalTex15;
				SamplerState Sampler246_g117973 = SS29_g118002;
				half4 Coords246_g117973 = temp_output_37_0_g117973;
				half3 WorldPosition246_g117973 = temp_output_279_0_g117973;
				float3 temp_output_280_0_g117973 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117973 = temp_output_280_0_g117973;
				half4 localSamplePlanar3D246_g117973 = SamplePlanar3D( Texture246_g117973 , Sampler246_g117973 , Coords246_g117973 , WorldPosition246_g117973 , WorldNormal246_g117973 );
				TEXTURE2D(Texture234_g117973) = _TerrainNormalTex15;
				SamplerState Sampler234_g117973 = SS29_g118002;
				float4 Coords234_g117973 = temp_output_37_0_g117973;
				float3 WorldPosition234_g117973 = temp_output_279_0_g117973;
				float4 localSampleStochastic2D234_g117973 = SampleStochastic2D( Texture234_g117973 , Sampler234_g117973 , Coords234_g117973 , WorldPosition234_g117973 );
				TEXTURE2D(Texture263_g117973) = _TerrainNormalTex15;
				SamplerState Sampler263_g117973 = SS29_g118002;
				half4 Coords263_g117973 = temp_output_37_0_g117973;
				half3 WorldPosition263_g117973 = temp_output_279_0_g117973;
				half3 WorldNormal263_g117973 = temp_output_280_0_g117973;
				half4 localSampleStochastic3D263_g117973 = SampleStochastic3D( Texture263_g117973 , Sampler263_g117973 , Coords263_g117973 , WorldPosition263_g117973 , WorldNormal263_g117973 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8989_g117895 = localSamplePlanar2D238_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8989_g117895 = localSamplePlanar3D246_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8989_g117895 = localSampleStochastic2D234_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8989_g117895 = localSampleStochastic3D263_g117973;
				#else
				float4 staticSwitch8989_g117895 = localSamplePlanar2D238_g117973;
				#endif
				half4 Layer338_g117925 = staticSwitch8989_g117895;
				TEXTURE2D(Texture238_g117974) = _TerrainNormalTex16;
				SamplerState Sampler238_g117974 = SS29_g118002;
				float4 temp_output_37_0_g117974 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117974 = temp_output_37_0_g117974;
				float3 temp_output_279_0_g117974 = Input_Position9197_g117895;
				half3 WorldPosition238_g117974 = temp_output_279_0_g117974;
				half4 localSamplePlanar2D238_g117974 = SamplePlanar2D( Texture238_g117974 , Sampler238_g117974 , Coords238_g117974 , WorldPosition238_g117974 );
				TEXTURE2D(Texture246_g117974) = _TerrainNormalTex16;
				SamplerState Sampler246_g117974 = SS29_g118002;
				half4 Coords246_g117974 = temp_output_37_0_g117974;
				half3 WorldPosition246_g117974 = temp_output_279_0_g117974;
				float3 temp_output_280_0_g117974 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117974 = temp_output_280_0_g117974;
				half4 localSamplePlanar3D246_g117974 = SamplePlanar3D( Texture246_g117974 , Sampler246_g117974 , Coords246_g117974 , WorldPosition246_g117974 , WorldNormal246_g117974 );
				TEXTURE2D(Texture234_g117974) = _TerrainNormalTex16;
				SamplerState Sampler234_g117974 = SS29_g118002;
				float4 Coords234_g117974 = temp_output_37_0_g117974;
				float3 WorldPosition234_g117974 = temp_output_279_0_g117974;
				float4 localSampleStochastic2D234_g117974 = SampleStochastic2D( Texture234_g117974 , Sampler234_g117974 , Coords234_g117974 , WorldPosition234_g117974 );
				TEXTURE2D(Texture263_g117974) = _TerrainNormalTex16;
				SamplerState Sampler263_g117974 = SS29_g118002;
				half4 Coords263_g117974 = temp_output_37_0_g117974;
				half3 WorldPosition263_g117974 = temp_output_279_0_g117974;
				half3 WorldNormal263_g117974 = temp_output_280_0_g117974;
				half4 localSampleStochastic3D263_g117974 = SampleStochastic3D( Texture263_g117974 , Sampler263_g117974 , Coords263_g117974 , WorldPosition263_g117974 , WorldNormal263_g117974 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8988_g117895 = localSamplePlanar2D238_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8988_g117895 = localSamplePlanar3D246_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8988_g117895 = localSampleStochastic2D234_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8988_g117895 = localSampleStochastic3D263_g117974;
				#else
				float4 staticSwitch8988_g117895 = localSamplePlanar2D238_g117974;
				#endif
				half4 Layer439_g117925 = staticSwitch8988_g117895;
				float4 weightedBlendVar31_g117925 = Weights52_g117925;
				float4 weightedBlend31_g117925 = ( weightedBlendVar31_g117925.x*Layer133_g117925 + weightedBlendVar31_g117925.y*Layer237_g117925 + weightedBlendVar31_g117925.z*Layer338_g117925 + weightedBlendVar31_g117925.w*Layer439_g117925 );
				half4 Terrain_B_168987_g117895 = weightedBlend31_g117925;
				half4 Layer_1644_g117902 = Terrain_B_168987_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117902 = Layer_045_g117902;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 + Layer_1243_g117902 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 + Layer_1243_g117902 + Layer_1644_g117902 );
				#else
				float4 staticSwitch40_g117902 = Layer_045_g117902;
				#endif
				half4 Blend_Normal7512_g117895 = staticSwitch40_g117902;
				half4 Normal_Packed45_g117996 = Blend_Normal7512_g117895;
				float2 appendResult58_g117996 = (float2(( (Normal_Packed45_g117996).x * (Normal_Packed45_g117996).w ) , (Normal_Packed45_g117996).y));
				half2 Normal_Default50_g117996 = appendResult58_g117996;
				half2 Normal_ASTC41_g117996 = (Normal_Packed45_g117996).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g117996 = Normal_ASTC41_g117996;
				#else
				float2 staticSwitch38_g117996 = Normal_Default50_g117996;
				#endif
				half2 Normal_NO_DTX544_g117996 = (Normal_Packed45_g117996).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g117996 = Normal_NO_DTX544_g117996;
				#else
				float2 staticSwitch37_g117996 = staticSwitch38_g117996;
				#endif
				half4 Weights52_g117898 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117898 = temp_output_6970_0_g117895;
				half4 Layer237_g117898 = temp_output_6977_0_g117895;
				half4 Layer338_g117898 = temp_output_6978_0_g117895;
				half4 Layer439_g117898 = temp_output_6983_0_g117895;
				float4 weightedBlendVar31_g117898 = Weights52_g117898;
				float4 weightedBlend31_g117898 = ( weightedBlendVar31_g117898.x*Layer133_g117898 + weightedBlendVar31_g117898.y*Layer237_g117898 + weightedBlendVar31_g117898.z*Layer338_g117898 + weightedBlendVar31_g117898.w*Layer439_g117898 );
				half4 Terrain_Shaders_047203_g117895 = weightedBlend31_g117898;
				half4 Layer_045_g117904 = Terrain_Shaders_047203_g117895;
				half4 Weights52_g117914 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117914 = temp_output_8714_0_g117895;
				half4 Layer237_g117914 = temp_output_8721_0_g117895;
				half4 Layer338_g117914 = temp_output_8724_0_g117895;
				half4 Layer439_g117914 = temp_output_8727_0_g117895;
				float4 weightedBlendVar31_g117914 = Weights52_g117914;
				float4 weightedBlend31_g117914 = ( weightedBlendVar31_g117914.x*Layer133_g117914 + weightedBlendVar31_g117914.y*Layer237_g117914 + weightedBlendVar31_g117914.z*Layer338_g117914 + weightedBlendVar31_g117914.w*Layer439_g117914 );
				half4 Terrain_Shaders_088730_g117895 = weightedBlend31_g117914;
				half4 Layer_0810_g117904 = Terrain_Shaders_088730_g117895;
				half4 Weights52_g117921 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117921 = temp_output_8815_0_g117895;
				half4 Layer237_g117921 = temp_output_8818_0_g117895;
				half4 Layer338_g117921 = temp_output_8819_0_g117895;
				half4 Layer439_g117921 = temp_output_8820_0_g117895;
				float4 weightedBlendVar31_g117921 = Weights52_g117921;
				float4 weightedBlend31_g117921 = ( weightedBlendVar31_g117921.x*Layer133_g117921 + weightedBlendVar31_g117921.y*Layer237_g117921 + weightedBlendVar31_g117921.z*Layer338_g117921 + weightedBlendVar31_g117921.w*Layer439_g117921 );
				half4 Terrain_Shaders_128871_g117895 = weightedBlend31_g117921;
				half4 Layer_1243_g117904 = Terrain_Shaders_128871_g117895;
				half4 Weights52_g117928 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117928 = temp_output_8931_0_g117895;
				half4 Layer237_g117928 = temp_output_8934_0_g117895;
				half4 Layer338_g117928 = temp_output_8935_0_g117895;
				half4 Layer439_g117928 = temp_output_8936_0_g117895;
				float4 weightedBlendVar31_g117928 = Weights52_g117928;
				float4 weightedBlend31_g117928 = ( weightedBlendVar31_g117928.x*Layer133_g117928 + weightedBlendVar31_g117928.y*Layer237_g117928 + weightedBlendVar31_g117928.z*Layer338_g117928 + weightedBlendVar31_g117928.w*Layer439_g117928 );
				half4 Terrain_Shaders_169014_g117895 = weightedBlend31_g117928;
				half4 Layer_1644_g117904 = Terrain_Shaders_169014_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117904 = Layer_045_g117904;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 + Layer_1243_g117904 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 + Layer_1243_g117904 + Layer_1644_g117904 );
				#else
				float4 staticSwitch40_g117904 = Layer_045_g117904;
				#endif
				half4 Blend_Shaders7420_g117895 = staticSwitch40_g117904;
				half4 Normal_Packed45_g117995 = Blend_Shaders7420_g117895;
				half2 Normal_NO_DTX544_g117995 = (Normal_Packed45_g117995).wy;
				#ifdef TVE_TERRAIN_PACKED
				float2 staticSwitch9080_g117895 = (Normal_NO_DTX544_g117995*2.0 + -1.0);
				#else
				float2 staticSwitch9080_g117895 = (staticSwitch37_g117996*2.0 + -1.0);
				#endif
				half4 Weights52_g117899 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117899 = _TerrainParams1;
				half4 Layer237_g117899 = _TerrainParams2;
				half4 Layer338_g117899 = _TerrainParams3;
				half4 Layer439_g117899 = _TerrainParams4;
				float4 weightedBlendVar31_g117899 = Weights52_g117899;
				float4 weightedBlend31_g117899 = ( weightedBlendVar31_g117899.x*Layer133_g117899 + weightedBlendVar31_g117899.y*Layer237_g117899 + weightedBlendVar31_g117899.z*Layer338_g117899 + weightedBlendVar31_g117899.w*Layer439_g117899 );
				half4 Terrain_Params_047533_g117895 = weightedBlend31_g117899;
				half4 Layer_045_g117905 = Terrain_Params_047533_g117895;
				half4 Weights52_g117915 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117915 = _TerrainParams5;
				half4 Layer237_g117915 = _TerrainParams6;
				half4 Layer338_g117915 = _TerrainParams7;
				half4 Layer439_g117915 = _TerrainParams8;
				float4 weightedBlendVar31_g117915 = Weights52_g117915;
				float4 weightedBlend31_g117915 = ( weightedBlendVar31_g117915.x*Layer133_g117915 + weightedBlendVar31_g117915.y*Layer237_g117915 + weightedBlendVar31_g117915.z*Layer338_g117915 + weightedBlendVar31_g117915.w*Layer439_g117915 );
				half4 Terrain_Params_088739_g117895 = weightedBlend31_g117915;
				half4 Layer_0810_g117905 = Terrain_Params_088739_g117895;
				half4 Weights52_g117922 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117922 = _TerrainParams9;
				half4 Layer237_g117922 = _TerrainParams10;
				half4 Layer338_g117922 = _TerrainParams11;
				half4 Layer439_g117922 = _TerrainParams12;
				float4 weightedBlendVar31_g117922 = Weights52_g117922;
				float4 weightedBlend31_g117922 = ( weightedBlendVar31_g117922.x*Layer133_g117922 + weightedBlendVar31_g117922.y*Layer237_g117922 + weightedBlendVar31_g117922.z*Layer338_g117922 + weightedBlendVar31_g117922.w*Layer439_g117922 );
				half4 Terrain_Params_128867_g117895 = weightedBlend31_g117922;
				half4 Layer_1243_g117905 = Terrain_Params_128867_g117895;
				half4 Weights52_g117929 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117929 = _TerrainParams13;
				half4 Layer237_g117929 = _TerrainParams14;
				half4 Layer338_g117929 = _TerrainParams15;
				half4 Layer439_g117929 = _TerrainParams16;
				float4 weightedBlendVar31_g117929 = Weights52_g117929;
				float4 weightedBlend31_g117929 = ( weightedBlendVar31_g117929.x*Layer133_g117929 + weightedBlendVar31_g117929.y*Layer237_g117929 + weightedBlendVar31_g117929.z*Layer338_g117929 + weightedBlendVar31_g117929.w*Layer439_g117929 );
				half4 Terrain_Params_169017_g117895 = weightedBlend31_g117929;
				half4 Layer_1644_g117905 = Terrain_Params_169017_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117905 = Layer_045_g117905;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 + Layer_1243_g117905 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 + Layer_1243_g117905 + Layer_1644_g117905 );
				#else
				float4 staticSwitch40_g117905 = Layer_045_g117905;
				#endif
				half4 Blend_Params7547_g117895 = staticSwitch40_g117905;
				half2 Normal_Planar45_g117997 = ( ( staticSwitch9080_g117895 * (Blend_Params7547_g117895).z ) * _TerrainNormalValue );
				float2 break71_g117997 = Normal_Planar45_g117997;
				float3 appendResult72_g117997 = (float3(break71_g117997.x , 0.0 , break71_g117997.y));
				half2 Final_NormalTS9145_g117895 = (mul( ase_worldToTangent, appendResult72_g117997 )).xy;
				half2 Local_Normal9200_g117893 = Final_NormalTS9145_g117895;
				float2 In_NormalTS3_g117894 = Local_Normal9200_g117893;
				float3 appendResult68_g118005 = (float3(Local_Normal9200_g117893 , 1.0));
				float3 tanToWorld0 = float3( tangentWS.xyz.x, ase_worldBitangent.x, normalWS.x );
				float3 tanToWorld1 = float3( tangentWS.xyz.y, ase_worldBitangent.y, normalWS.y );
				float3 tanToWorld2 = float3( tangentWS.xyz.z, ase_worldBitangent.z, normalWS.z );
				float3 tanNormal74_g118005 = appendResult68_g118005;
				float3 worldNormal74_g118005 = normalize( float3(dot(tanToWorld0,tanNormal74_g118005), dot(tanToWorld1,tanNormal74_g118005), dot(tanToWorld2,tanNormal74_g118005)) );
				float3 In_NormalWS3_g117894 = worldNormal74_g118005;
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9139_g117895 = 0.0;
				#else
				float staticSwitch9139_g117895 = ( (Blend_Shaders7420_g117895).x * (Blend_Params7547_g117895).x * _TerrainMetallicValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9097_g117895 = 1.0;
				#else
				float staticSwitch9097_g117895 = ( (Blend_Shaders7420_g117895).y * _TerrainOcclusionValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9105_g117895 = (Blend_Shaders7420_g117895).x;
				#else
				float staticSwitch9105_g117895 = (Blend_Shaders7420_g117895).w;
				#endif
				float4 appendResult9147_g117895 = (float4(staticSwitch9139_g117895 , staticSwitch9097_g117895 , (Blend_Shaders7420_g117895).z , ( staticSwitch9105_g117895 * (Blend_Params7547_g117895).w * _TerrainSmoothnessValue )));
				half4 Final_Shaders9146_g117895 = appendResult9147_g117895;
				half4 Local_Shader9201_g117893 = Final_Shaders9146_g117895;
				float4 In_Shader3_g117894 = Local_Shader9201_g117893;
				half4 Weights52_g117988 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117988 = _TerrainSpecular1;
				half4 Layer237_g117988 = _TerrainSpecular2;
				half4 Layer338_g117988 = _TerrainSpecular3;
				half4 Layer439_g117988 = _TerrainSpecular4;
				float4 weightedBlendVar31_g117988 = Weights52_g117988;
				float4 weightedBlend31_g117988 = ( weightedBlendVar31_g117988.x*Layer133_g117988 + weightedBlendVar31_g117988.y*Layer237_g117988 + weightedBlendVar31_g117988.z*Layer338_g117988 + weightedBlendVar31_g117988.w*Layer439_g117988 );
				half4 Terrain_Specular_047390_g117895 = weightedBlend31_g117988;
				half4 Layer_045_g117993 = Terrain_Specular_047390_g117895;
				half4 Weights52_g117916 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117916 = _TerrainSpecular5;
				half4 Layer237_g117916 = _TerrainSpecular6;
				half4 Layer338_g117916 = _TerrainSpecular7;
				half4 Layer439_g117916 = _TerrainSpecular8;
				float4 weightedBlendVar31_g117916 = Weights52_g117916;
				float4 weightedBlend31_g117916 = ( weightedBlendVar31_g117916.x*Layer133_g117916 + weightedBlendVar31_g117916.y*Layer237_g117916 + weightedBlendVar31_g117916.z*Layer338_g117916 + weightedBlendVar31_g117916.w*Layer439_g117916 );
				half4 Terrain_Specular_088745_g117895 = weightedBlend31_g117916;
				half4 Layer_0810_g117993 = Terrain_Specular_088745_g117895;
				half4 Weights52_g117923 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117923 = _TerrainSpecular9;
				half4 Layer237_g117923 = _TerrainSpecular10;
				half4 Layer338_g117923 = _TerrainSpecular11;
				half4 Layer439_g117923 = _TerrainSpecular12;
				float4 weightedBlendVar31_g117923 = Weights52_g117923;
				float4 weightedBlend31_g117923 = ( weightedBlendVar31_g117923.x*Layer133_g117923 + weightedBlendVar31_g117923.y*Layer237_g117923 + weightedBlendVar31_g117923.z*Layer338_g117923 + weightedBlendVar31_g117923.w*Layer439_g117923 );
				half4 Terrain_Specular_128869_g117895 = weightedBlend31_g117923;
				half4 Layer_1243_g117993 = Terrain_Specular_128869_g117895;
				half4 Weights52_g117930 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117930 = _TerrainSpecular13;
				half4 Layer237_g117930 = _TerrainSpecular14;
				half4 Layer338_g117930 = _TerrainSpecular15;
				half4 Layer439_g117930 = _TerrainSpecular16;
				float4 weightedBlendVar31_g117930 = Weights52_g117930;
				float4 weightedBlend31_g117930 = ( weightedBlendVar31_g117930.x*Layer133_g117930 + weightedBlendVar31_g117930.y*Layer237_g117930 + weightedBlendVar31_g117930.z*Layer338_g117930 + weightedBlendVar31_g117930.w*Layer439_g117930 );
				half4 Terrain_Specular_169019_g117895 = weightedBlend31_g117930;
				half4 Layer_1644_g117993 = Terrain_Specular_169019_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117993 = Layer_045_g117993;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 + Layer_1243_g117993 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 + Layer_1243_g117993 + Layer_1644_g117993 );
				#else
				float4 staticSwitch40_g117993 = Layer_045_g117993;
				#endif
				half4 Blend_TerrainSpecular7446_g117895 = staticSwitch40_g117993;
				float3 temp_output_9088_0_g117895 = (Blend_TerrainSpecular7446_g117895).rgb;
				float4 appendResult9189_g117895 = (float4(temp_output_9088_0_g117895 , 1.0));
				half4 Final_Emissive9151_g117895 = appendResult9189_g117895;
				half4 Local_EmissiveLDR9202_g117893 = Final_Emissive9151_g117895;
				float4 In_Emissive3_g117894 = Local_EmissiveLDR9202_g117893;
				float3 temp_output_3_0_g118006 = Local_Albedo9199_g117893;
				float dotResult20_g118006 = dot( temp_output_3_0_g118006 , float3(0.2126,0.7152,0.0722) );
				float temp_output_9165_0_g117893 = dotResult20_g118006;
				float In_Grayscale3_g117894 = temp_output_9165_0_g117893;
				float clampResult9168_g117893 = clamp( saturate( ( temp_output_9165_0_g117893 * 5.0 ) ) , 0.2 , 1.0 );
				float In_Luminosity3_g117894 = clampResult9168_g117893;
				half Final_MultiShader9150_g117895 = ( (Blend_TerrainSpecular7446_g117895).a * (Blend_Albedo7468_g117895).w );
				half Local_MultiMask9203_g117893 = Final_MultiShader9150_g117895;
				float In_MultiMask3_g117894 = Local_MultiMask9203_g117893;
				float4 temp_output_35_0_g118004 = appendResult9125_g117895;
				float2 InputScale48_g118004 = (temp_output_35_0_g118004).zw;
				half2 FinalScale53_g118004 = ( 1.0 / InputScale48_g118004 );
				float2 InputPosition52_g118004 = (temp_output_35_0_g118004).xy;
				half2 FinalPosition58_g118004 = -( FinalScale53_g118004 * InputPosition52_g118004 );
				float2 temp_output_65_0_g118004 = ( ( (ase_worldPos).xz * FinalScale53_g118004 ) + FinalPosition58_g118004 );
				float2 Terrain_Holes_UV9406_g117895 = temp_output_65_0_g118004;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch9188_g117895 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9406_g117895 ).r;
				#else
				float staticSwitch9188_g117895 = 1.0;
				#endif
				half Terrain_Holes7437_g117895 = staticSwitch9188_g117895;
				half Local_HoleMask9204_g117893 = Terrain_Holes7437_g117895;
				float In_AlphaClip3_g117894 = Local_HoleMask9204_g117893;
				float In_AlphaFade3_g117894 = 1.0;
				float3 temp_cast_9 = (1.0).xxx;
				float3 In_Translucency3_g117894 = temp_cast_9;
				float In_Transmission3_g117894 = 1.0;
				float In_Thickness3_g117894 = 0.0;
				float In_Diffusion3_g117894 = 0.0;
				Data3_g117894.Dummy = In_Dummy3_g117894;
				Data3_g117894.Albedo = In_Albedo3_g117894;
				Data3_g117894.AlbedoRaw = In_AlbedoRaw3_g117894;
				Data3_g117894.NormalTS = In_NormalTS3_g117894;
				Data3_g117894.NormalWS = In_NormalWS3_g117894;
				Data3_g117894.Shader = In_Shader3_g117894;
				Data3_g117894.Emissive= In_Emissive3_g117894;
				Data3_g117894.MultiMask = In_MultiMask3_g117894;
				Data3_g117894.Grayscale = In_Grayscale3_g117894;
				Data3_g117894.Luminosity = In_Luminosity3_g117894;
				Data3_g117894.AlphaClip = In_AlphaClip3_g117894;
				Data3_g117894.AlphaFade = In_AlphaFade3_g117894;
				Data3_g117894.Translucency = In_Translucency3_g117894;
				Data3_g117894.Transmission = In_Transmission3_g117894;
				Data3_g117894.Thickness = In_Thickness3_g117894;
				Data3_g117894.Diffusion = In_Diffusion3_g117894;
				TVEVisualData Data4_g118029 = Data3_g117894;
				float Out_Dummy4_g118029 = 0;
				float3 Out_Albedo4_g118029 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118029 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118029 = float2( 0,0 );
				float3 Out_NormalWS4_g118029 = float3( 0,0,0 );
				float4 Out_Shader4_g118029 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118029 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118029 = 0;
				float Out_Grayscale4_g118029 = 0;
				float Out_Luminosity4_g118029 = 0;
				float Out_AlphaClip4_g118029 = 0;
				float Out_AlphaFade4_g118029 = 0;
				float3 Out_Translucency4_g118029 = float3( 0,0,0 );
				float Out_Transmission4_g118029 = 0;
				float Out_Thickness4_g118029 = 0;
				float Out_Diffusion4_g118029 = 0;
				Out_Dummy4_g118029 = Data4_g118029.Dummy;
				Out_Albedo4_g118029 = Data4_g118029.Albedo;
				Out_AlbedoRaw4_g118029 = Data4_g118029.AlbedoRaw;
				Out_NormalTS4_g118029 = Data4_g118029.NormalTS;
				Out_NormalWS4_g118029 = Data4_g118029.NormalWS;
				Out_Shader4_g118029 = Data4_g118029.Shader;
				Out_Emissive4_g118029= Data4_g118029.Emissive;
				Out_MultiMask4_g118029 = Data4_g118029.MultiMask;
				Out_Grayscale4_g118029 = Data4_g118029.Grayscale;
				Out_Luminosity4_g118029= Data4_g118029.Luminosity;
				Out_AlphaClip4_g118029 = Data4_g118029.AlphaClip;
				Out_AlphaFade4_g118029 = Data4_g118029.AlphaFade;
				Out_Translucency4_g118029 = Data4_g118029.Translucency;
				Out_Transmission4_g118029 = Data4_g118029.Transmission;
				Out_Thickness4_g118029 = Data4_g118029.Thickness;
				Out_Diffusion4_g118029 = Data4_g118029.Diffusion;
				half3 Visual_Albedo139_g118007 = Out_Albedo4_g118029;
				float temp_output_200_12_g118007 = Out_Grayscale4_g118029;
				half Visual_Grayscale150_g118007 = temp_output_200_12_g118007;
				float3 temp_cast_10 = (Visual_Grayscale150_g118007).xxx;
				float localBuildGlobalData204_g117810 = ( 0.0 );
				TVEGlobalData Data204_g117810 = (TVEGlobalData)0;
				half Dummy211_g117810 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g117810 = Dummy211_g117810;
				half4 Coat_Params302_g117810 = TVE_CoatParams;
				float4 In_CoatParams204_g117810 = Coat_Params302_g117810;
				float temp_output_82_0_g117811 = _GlobalPaintLayerValue;
				float temp_output_19_0_g117813 = TVE_PaintLayers[(int)temp_output_82_0_g117811];
				TVEModelData Data16_g117809 = (TVEModelData)0;
				float In_Dummy16_g117809 = 0.0;
				float3 vertexToFrag73_g117794 = packedInput.ase_texcoord4.xyz;
				half3 PositionWS122_g117794 = vertexToFrag73_g117794;
				float3 In_PositionWS16_g117809 = PositionWS122_g117794;
				float3 localObjectPosition_UNITY_MATRIX_M14_g117796 = ObjectPosition_UNITY_MATRIX_M();
				#ifdef SHADEROPTIONS_CAMERA_RELATIVE_RENDERING
				float3 staticSwitch13_g117796 = ( localObjectPosition_UNITY_MATRIX_M14_g117796 + _WorldSpaceCameraPos );
				#else
				float3 staticSwitch13_g117796 = localObjectPosition_UNITY_MATRIX_M14_g117796;
				#endif
				half3 ObjectData20_g117798 = staticSwitch13_g117796;
				half3 WorldData19_g117798 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g117798 = WorldData19_g117798;
				#else
				float3 staticSwitch14_g117798 = ObjectData20_g117798;
				#endif
				float3 temp_output_124_0_g117796 = staticSwitch14_g117798;
				float3 temp_output_239_7_g117794 = temp_output_124_0_g117796;
				half3 PivotWS121_g117794 = temp_output_239_7_g117794;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g117794 = ( PositionWS122_g117794 - PivotWS121_g117794 );
				#else
				float3 staticSwitch204_g117794 = PositionWS122_g117794;
				#endif
				half3 PositionWO132_g117794 = ( staticSwitch204_g117794 - TVE_WorldOrigin );
				float3 In_PositionWO16_g117809 = PositionWO132_g117794;
				float3 In_PivotWS16_g117809 = PivotWS121_g117794;
				half3 PivotWO133_g117794 = ( PivotWS121_g117794 - TVE_WorldOrigin );
				float3 In_PivotWO16_g117809 = PivotWO133_g117794;
				float3 normalizedWorldNormal = normalize( normalWS );
				half3 Normal_WS95_g117794 = normalizedWorldNormal;
				float3 In_NormalWS16_g117809 = Normal_WS95_g117794;
				float3 normalizeResult296_g117794 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g117794 ) );
				half3 ViewDirWS169_g117794 = normalizeResult296_g117794;
				float3 In_ViewDirWS16_g117809 = ViewDirWS169_g117794;
				half4 VertexMasks171_g117794 = packedInput.ase_color;
				float4 In_VertexData16_g117809 = VertexMasks171_g117794;
				float4 In_BoundsData16_g117809 = float4( 1,1,1,1 );
				Data16_g117809.Dummy = In_Dummy16_g117809;
				Data16_g117809.PositionWS = In_PositionWS16_g117809;
				Data16_g117809.PositionWO = In_PositionWO16_g117809;
				Data16_g117809.PivotWS = In_PivotWS16_g117809;
				Data16_g117809.PivotWO = In_PivotWO16_g117809;
				Data16_g117809.NormalWS = In_NormalWS16_g117809;
				Data16_g117809.ViewDirWS = In_ViewDirWS16_g117809;
				Data16_g117809.VertexData = In_VertexData16_g117809;
				Data16_g117809.BoundsData = In_BoundsData16_g117809;
				TVEModelData Data15_g117892 = Data16_g117809;
				float Out_Dummy15_g117892 = 0;
				float3 Out_PositionWS15_g117892 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117892 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117892 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g117892 = float3( 0,0,0 );
				float4 Out_VertexData15_g117892 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117892 = float4( 0,0,0,0 );
				Out_Dummy15_g117892 = Data15_g117892.Dummy;
				Out_PositionWS15_g117892 = Data15_g117892.PositionWS;
				Out_PositionWO15_g117892 = Data15_g117892.PositionWO;
				Out_PivotWS15_g117892 = Data15_g117892.PivotWS;
				Out_PivotWO15_g117892 = Data15_g117892.PivotWO;
				Out_NormalWS15_g117892 = Data15_g117892.NormalWS;
				Out_ViewDirWS15_g117892 = Data15_g117892.ViewDirWS;
				Out_VertexData15_g117892 = Data15_g117892.VertexData;
				Out_BoundsData15_g117892 = Data15_g117892.BoundsData;
				half3 Model_PositionWS143_g117810 = Out_PositionWS15_g117892;
				half3 Input_Position180_g117814 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117814 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_82_0_g117814 = temp_output_82_0_g117811;
				float2 temp_output_119_0_g117814 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_7_0_g117819 = 1.0;
				float temp_output_10_0_g117819 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117819 );
				float4 lerpResult131_g117814 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117814,temp_output_82_0_g117814, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, temp_output_119_0_g117814,temp_output_82_0_g117814, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117814 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117819 ) / temp_output_10_0_g117819 ) ));
				float4 temp_output_17_0_g117813 = lerpResult131_g117814;
				float4 temp_output_3_0_g117813 = TVE_PaintParams;
				float4 ifLocalVar18_g117813 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117813 >= 0.5 )
				ifLocalVar18_g117813 = temp_output_17_0_g117813;
				else
				ifLocalVar18_g117813 = temp_output_3_0_g117813;
				float4 lerpResult22_g117813 = lerp( temp_output_3_0_g117813 , temp_output_17_0_g117813 , temp_output_19_0_g117813);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117813 = lerpResult22_g117813;
				#else
				float4 staticSwitch24_g117813 = ifLocalVar18_g117813;
				#endif
				half4 Paint_Params71_g117810 = staticSwitch24_g117813;
				float4 In_PaintParams204_g117810 = Paint_Params71_g117810;
				float temp_output_82_0_g117829 = _GlobalGlowLayerValue;
				float temp_output_19_0_g117831 = TVE_GlowLayers[(int)temp_output_82_0_g117829];
				half3 Input_Position180_g117832 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117832 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_82_0_g117832 = temp_output_82_0_g117829;
				float2 temp_output_119_0_g117832 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_7_0_g117837 = 1.0;
				float temp_output_10_0_g117837 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117837 );
				float4 lerpResult131_g117832 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117832,temp_output_82_0_g117832, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, temp_output_119_0_g117832,temp_output_82_0_g117832, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117832 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117837 ) / temp_output_10_0_g117837 ) ));
				float4 temp_output_17_0_g117831 = lerpResult131_g117832;
				float4 temp_output_3_0_g117831 = TVE_GlowParams;
				float4 ifLocalVar18_g117831 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117831 >= 0.5 )
				ifLocalVar18_g117831 = temp_output_17_0_g117831;
				else
				ifLocalVar18_g117831 = temp_output_3_0_g117831;
				float4 lerpResult22_g117831 = lerp( temp_output_3_0_g117831 , temp_output_17_0_g117831 , temp_output_19_0_g117831);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117831 = lerpResult22_g117831;
				#else
				float4 staticSwitch24_g117831 = ifLocalVar18_g117831;
				#endif
				half4 Glow_Params248_g117810 = staticSwitch24_g117831;
				float4 In_GlowParams204_g117810 = Glow_Params248_g117810;
				float temp_output_132_0_g117874 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g117876 = TVE_AtmoLayers[(int)temp_output_132_0_g117874];
				half3 Input_Position180_g117877 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117877 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_82_0_g117877 = temp_output_132_0_g117874;
				float2 temp_output_119_0_g117877 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_7_0_g117882 = 1.0;
				float temp_output_10_0_g117882 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117882 );
				float4 lerpResult131_g117877 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117877,temp_output_82_0_g117877, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, temp_output_119_0_g117877,temp_output_82_0_g117877, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117877 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117882 ) / temp_output_10_0_g117882 ) ));
				float4 temp_output_17_0_g117876 = lerpResult131_g117877;
				float4 temp_output_3_0_g117876 = TVE_AtmoParams;
				float4 ifLocalVar18_g117876 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117876 >= 0.5 )
				ifLocalVar18_g117876 = temp_output_17_0_g117876;
				else
				ifLocalVar18_g117876 = temp_output_3_0_g117876;
				float4 lerpResult22_g117876 = lerp( temp_output_3_0_g117876 , temp_output_17_0_g117876 , temp_output_19_0_g117876);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117876 = lerpResult22_g117876;
				#else
				float4 staticSwitch24_g117876 = ifLocalVar18_g117876;
				#endif
				half4 Atmo_Params80_g117810 = staticSwitch24_g117876;
				float4 In_AtmoParams204_g117810 = Atmo_Params80_g117810;
				float temp_output_132_0_g117883 = _GlobalFadeLayerValue;
				float temp_output_19_0_g117885 = TVE_FadeLayers[(int)temp_output_132_0_g117883];
				half3 Input_Position180_g117886 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117886 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_82_0_g117886 = temp_output_132_0_g117883;
				float2 temp_output_119_0_g117886 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_7_0_g117891 = 1.0;
				float temp_output_10_0_g117891 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117891 );
				float4 lerpResult131_g117886 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117886,temp_output_82_0_g117886, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, temp_output_119_0_g117886,temp_output_82_0_g117886, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117886 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117891 ) / temp_output_10_0_g117891 ) ));
				float4 temp_output_17_0_g117885 = lerpResult131_g117886;
				float4 temp_output_3_0_g117885 = TVE_FadeParams;
				float4 ifLocalVar18_g117885 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117885 >= 0.5 )
				ifLocalVar18_g117885 = temp_output_17_0_g117885;
				else
				ifLocalVar18_g117885 = temp_output_3_0_g117885;
				float4 lerpResult22_g117885 = lerp( temp_output_3_0_g117885 , temp_output_17_0_g117885 , temp_output_19_0_g117885);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117885 = lerpResult22_g117885;
				#else
				float4 staticSwitch24_g117885 = ifLocalVar18_g117885;
				#endif
				half4 Fade_Params387_g117810 = staticSwitch24_g117885;
				float4 In_FadeParams204_g117810 = Fade_Params387_g117810;
				half4 Form_Params112_g117810 = TVE_FormParams;
				float4 In_FormParams204_g117810 = Form_Params112_g117810;
				float temp_output_130_0_g117847 = _GlobalLandLayerValue;
				float temp_output_19_0_g117849 = TVE_LandLayers[(int)temp_output_130_0_g117847];
				half3 Input_Position180_g117850 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117850 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_82_0_g117850 = temp_output_130_0_g117847;
				float2 temp_output_119_0_g117850 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_7_0_g117855 = 1.0;
				float temp_output_10_0_g117855 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117855 );
				float4 lerpResult131_g117850 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117850,temp_output_82_0_g117850, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, temp_output_119_0_g117850,temp_output_82_0_g117850, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117850 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117855 ) / temp_output_10_0_g117855 ) ));
				float4 temp_output_17_0_g117849 = lerpResult131_g117850;
				float4 temp_output_3_0_g117849 = TVE_LandParams;
				float4 ifLocalVar18_g117849 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117849 >= 0.5 )
				ifLocalVar18_g117849 = temp_output_17_0_g117849;
				else
				ifLocalVar18_g117849 = temp_output_3_0_g117849;
				float4 lerpResult22_g117849 = lerp( temp_output_3_0_g117849 , temp_output_17_0_g117849 , temp_output_19_0_g117849);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117849 = lerpResult22_g117849;
				#else
				float4 staticSwitch24_g117849 = ifLocalVar18_g117849;
				#endif
				half4 Land_Params375_g117810 = staticSwitch24_g117849;
				float4 In_LandParams204_g117810 = Land_Params375_g117810;
				half4 Wind_Params88_g117810 = TVE_WindParams;
				float4 In_WindParams204_g117810 = Wind_Params88_g117810;
				half4 Push_Params335_g117810 = TVE_PushParams;
				float4 In_PushParams204_g117810 = Push_Params335_g117810;
				Data204_g117810.Dummy = In_Dummy204_g117810;
				Data204_g117810.CoatParams = In_CoatParams204_g117810;
				Data204_g117810.PaintParams = In_PaintParams204_g117810;
				Data204_g117810.GlowParams = In_GlowParams204_g117810;
				Data204_g117810.AtmoParams = In_AtmoParams204_g117810;
				Data204_g117810.FadeParams = In_FadeParams204_g117810;
				Data204_g117810.FormParams= In_FormParams204_g117810;
				Data204_g117810.LandParams = In_LandParams204_g117810;
				Data204_g117810.WindParams = In_WindParams204_g117810;
				Data204_g117810.PushParams = In_PushParams204_g117810;
				TVEGlobalData Data15_g118008 = Data204_g117810;
				float Out_Dummy15_g118008 = 0;
				float4 Out_CoatParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118008 = float4( 0,0,0,0 );
				Out_Dummy15_g118008 = Data15_g118008.Dummy;
				Out_CoatParams15_g118008 = Data15_g118008.CoatParams;
				Out_PaintParams15_g118008 = Data15_g118008.PaintParams;
				Out_GlowParams15_g118008 = Data15_g118008.GlowParams;
				Out_AtmoParams15_g118008= Data15_g118008.AtmoParams;
				Out_FadeParams15_g118008= Data15_g118008.FadeParams;
				Out_FormParams15_g118008 = Data15_g118008.FormParams;
				Out_LandParams15_g118008 = Data15_g118008.LandParams;
				Out_WindParams15_g118008 = Data15_g118008.WindParams;
				Out_PushParams15_g118008 = Data15_g118008.PushParams;
				half4 Global_PaintParams209_g118007 = Out_PaintParams15_g118008;
				float temp_output_6_0_g118009 = ( saturate( (Global_PaintParams209_g118007).w ) * TVE_IsEnabled );
				#ifdef TVE_REGISTER
				float staticSwitch14_g118009 = ( temp_output_6_0_g118009 + ( _TintingElementMode * 0.0 ) );
				#else
				float staticSwitch14_g118009 = temp_output_6_0_g118009;
				#endif
				#ifdef TVE_TINTING_ELEMENT
				float staticSwitch283_g118007 = staticSwitch14_g118009;
				#else
				float staticSwitch283_g118007 = 1.0;
				#endif
				half Tinting_GlobalValue285_g118007 = staticSwitch283_g118007;
				float3 lerpResult368_g118007 = lerp( Visual_Albedo139_g118007 , temp_cast_10 , ( Tinting_GlobalValue285_g118007 * _TintingGrayValue ));
				float3 temp_cast_32 = (1.0).xxx;
				#ifdef TVE_TINTING_ELEMENT
				float3 staticSwitch288_g118007 = (Global_PaintParams209_g118007).xyz;
				#else
				float3 staticSwitch288_g118007 = temp_cast_32;
				#endif
				half3 Tinting_ColorGlobal290_g118007 = staticSwitch288_g118007;
				float temp_output_200_11_g118007 = Out_MultiMask4_g118029;
				half Visual_MultiMask181_g118007 = temp_output_200_11_g118007;
				float lerpResult147_g118007 = lerp( 1.0 , Visual_MultiMask181_g118007 , _TintingMultiValue);
				half Tinting_MutiMask121_g118007 = lerpResult147_g118007;
				half Tinting_TexMask385_g118007 = 1.0;
				float temp_output_200_15_g118007 = Out_Luminosity4_g118029;
				half Visual_Luminosity257_g118007 = temp_output_200_15_g118007;
				float clampResult17_g118021 = clamp( Visual_Luminosity257_g118007 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118020 = _TintingLumaRemap.x;
				float temp_output_10_0_g118020 = ( _TintingLumaRemap.y - temp_output_7_0_g118020 );
				float lerpResult228_g118007 = lerp( 1.0 , saturate( ( ( clampResult17_g118021 - temp_output_7_0_g118020 ) / ( temp_output_10_0_g118020 + 0.0001 ) ) ) , _TintingLumaValue);
				half Tinting_LumaMask153_g118007 = lerpResult228_g118007;
				half Tinting_VertMask309_g118007 = 1.0;
				half Tinting_NoiseMask213_g118007 = 1.0;
				half Custom_Mask345_g118007 = 1.0;
				float temp_output_7_0_g118016 = _TintingBlendRemap.x;
				float temp_output_10_0_g118016 = ( _TintingBlendRemap.y - temp_output_7_0_g118016 );
				half Tinting_Mask242_g118007 = ( saturate( ( ( ( _TintingIntensityValue * Tinting_MutiMask121_g118007 * Tinting_TexMask385_g118007 * Tinting_LumaMask153_g118007 * Tinting_VertMask309_g118007 * Tinting_NoiseMask213_g118007 * Tinting_GlobalValue285_g118007 * Custom_Mask345_g118007 ) - temp_output_7_0_g118016 ) / ( temp_output_10_0_g118016 + 0.0001 ) ) ) * TVE_IsEnabled );
				float3 lerpResult90_g118007 = lerp( Visual_Albedo139_g118007 , ( lerpResult368_g118007 * 4.594794 * Tinting_ColorGlobal290_g118007 * (_TintingColor).rgb ) , Tinting_Mask242_g118007);
				#ifdef TVE_TINTING
				float3 staticSwitch286_g118007 = lerpResult90_g118007;
				#else
				float3 staticSwitch286_g118007 = Visual_Albedo139_g118007;
				#endif
				half3 Final_Albedo97_g118007 = staticSwitch286_g118007;
				float3 In_Albedo3_g118028 = Final_Albedo97_g118007;
				float3 In_AlbedoRaw3_g118028 = Out_AlbedoRaw4_g118029;
				float2 In_NormalTS3_g118028 = Out_NormalTS4_g118029;
				float3 In_NormalWS3_g118028 = Out_NormalWS4_g118029;
				float4 In_Shader3_g118028 = Out_Shader4_g118029;
				float4 In_Emissive3_g118028 = Out_Emissive4_g118029;
				float In_Grayscale3_g118028 = temp_output_200_12_g118007;
				float In_Luminosity3_g118028 = temp_output_200_15_g118007;
				float In_MultiMask3_g118028 = temp_output_200_11_g118007;
				float In_AlphaClip3_g118028 = Out_AlphaClip4_g118029;
				float In_AlphaFade3_g118028 = Out_AlphaFade4_g118029;
				float3 In_Translucency3_g118028 = Out_Translucency4_g118029;
				float In_Transmission3_g118028 = Out_Transmission4_g118029;
				float In_Thickness3_g118028 = Out_Thickness4_g118029;
				float In_Diffusion3_g118028 = Out_Diffusion4_g118029;
				Data3_g118028.Dummy = In_Dummy3_g118028;
				Data3_g118028.Albedo = In_Albedo3_g118028;
				Data3_g118028.AlbedoRaw = In_AlbedoRaw3_g118028;
				Data3_g118028.NormalTS = In_NormalTS3_g118028;
				Data3_g118028.NormalWS = In_NormalWS3_g118028;
				Data3_g118028.Shader = In_Shader3_g118028;
				Data3_g118028.Emissive= In_Emissive3_g118028;
				Data3_g118028.MultiMask = In_MultiMask3_g118028;
				Data3_g118028.Grayscale = In_Grayscale3_g118028;
				Data3_g118028.Luminosity = In_Luminosity3_g118028;
				Data3_g118028.AlphaClip = In_AlphaClip3_g118028;
				Data3_g118028.AlphaFade = In_AlphaFade3_g118028;
				Data3_g118028.Translucency = In_Translucency3_g118028;
				Data3_g118028.Transmission = In_Transmission3_g118028;
				Data3_g118028.Thickness = In_Thickness3_g118028;
				Data3_g118028.Diffusion = In_Diffusion3_g118028;
				TVEVisualData Data4_g118033 = Data3_g118028;
				float Out_Dummy4_g118033 = 0;
				float3 Out_Albedo4_g118033 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118033 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118033 = float2( 0,0 );
				float3 Out_NormalWS4_g118033 = float3( 0,0,0 );
				float4 Out_Shader4_g118033 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118033 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118033 = 0;
				float Out_Grayscale4_g118033 = 0;
				float Out_Luminosity4_g118033 = 0;
				float Out_AlphaClip4_g118033 = 0;
				float Out_AlphaFade4_g118033 = 0;
				float3 Out_Translucency4_g118033 = float3( 0,0,0 );
				float Out_Transmission4_g118033 = 0;
				float Out_Thickness4_g118033 = 0;
				float Out_Diffusion4_g118033 = 0;
				Out_Dummy4_g118033 = Data4_g118033.Dummy;
				Out_Albedo4_g118033 = Data4_g118033.Albedo;
				Out_AlbedoRaw4_g118033 = Data4_g118033.AlbedoRaw;
				Out_NormalTS4_g118033 = Data4_g118033.NormalTS;
				Out_NormalWS4_g118033 = Data4_g118033.NormalWS;
				Out_Shader4_g118033 = Data4_g118033.Shader;
				Out_Emissive4_g118033= Data4_g118033.Emissive;
				Out_MultiMask4_g118033 = Data4_g118033.MultiMask;
				Out_Grayscale4_g118033 = Data4_g118033.Grayscale;
				Out_Luminosity4_g118033= Data4_g118033.Luminosity;
				Out_AlphaClip4_g118033 = Data4_g118033.AlphaClip;
				Out_AlphaFade4_g118033 = Data4_g118033.AlphaFade;
				Out_Translucency4_g118033 = Data4_g118033.Translucency;
				Out_Transmission4_g118033 = Data4_g118033.Transmission;
				Out_Thickness4_g118033 = Data4_g118033.Thickness;
				Out_Diffusion4_g118033 = Data4_g118033.Diffusion;
				half3 Visual_Albedo292_g118031 = Out_Albedo4_g118033;
				float temp_output_280_12_g118031 = Out_Grayscale4_g118033;
				half Visual_Grayscale308_g118031 = temp_output_280_12_g118031;
				float3 temp_cast_33 = (Visual_Grayscale308_g118031).xxx;
				TVEGlobalData Data15_g118032 = Data204_g117810;
				float Out_Dummy15_g118032 = 0;
				float4 Out_CoatParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118032 = float4( 0,0,0,0 );
				Out_Dummy15_g118032 = Data15_g118032.Dummy;
				Out_CoatParams15_g118032 = Data15_g118032.CoatParams;
				Out_PaintParams15_g118032 = Data15_g118032.PaintParams;
				Out_GlowParams15_g118032 = Data15_g118032.GlowParams;
				Out_AtmoParams15_g118032= Data15_g118032.AtmoParams;
				Out_FadeParams15_g118032= Data15_g118032.FadeParams;
				Out_FormParams15_g118032 = Data15_g118032.FormParams;
				Out_LandParams15_g118032 = Data15_g118032.LandParams;
				Out_WindParams15_g118032 = Data15_g118032.WindParams;
				Out_PushParams15_g118032 = Data15_g118032.PushParams;
				half4 Global_AtmoParams314_g118031 = Out_AtmoParams15_g118032;
				#ifdef TVE_DRYNESS_ELEMENT
				float staticSwitch351_g118031 = ( (Global_AtmoParams314_g118031).x * TVE_IsEnabled );
				#else
				float staticSwitch351_g118031 = 1.0;
				#endif
				half Dryness_GlobalMask352_g118031 = staticSwitch351_g118031;
				float3 lerpResult485_g118031 = lerp( Visual_Albedo292_g118031 , temp_cast_33 , ( Dryness_GlobalMask352_g118031 * _DrynessGrayValue ));
				half3 hsvTorgb58_g118052 = RGBToHSV( lerpResult485_g118031 );
				half3 hsvTorgb61_g118052 = HSVToRGB( half3(( hsvTorgb58_g118052.x + _DrynessShiftValue ),hsvTorgb58_g118052.y,hsvTorgb58_g118052.z) );
				#ifdef TVE_DRYNESS_SHIFT
				float3 staticSwitch499_g118031 = hsvTorgb61_g118052;
				#else
				float3 staticSwitch499_g118031 = lerpResult485_g118031;
				#endif
				half Dryness_TexMask478_g118031 = 1.0;
				float temp_output_280_11_g118031 = Out_MultiMask4_g118033;
				half Visual_MultiMask310_g118031 = temp_output_280_11_g118031;
				float lerpResult283_g118031 = lerp( 1.0 , Visual_MultiMask310_g118031 , _DrynessMultiValue);
				half Dryness_MultiMask302_g118031 = lerpResult283_g118031;
				float temp_output_280_15_g118031 = Out_Luminosity4_g118033;
				half Visual_Luminosity309_g118031 = temp_output_280_15_g118031;
				float clampResult17_g118047 = clamp( Visual_Luminosity309_g118031 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118046 = _DrynessLumaRemap.x;
				float temp_output_10_0_g118046 = ( _DrynessLumaRemap.y - temp_output_7_0_g118046 );
				float lerpResult295_g118031 = lerp( 1.0 , saturate( ( ( clampResult17_g118047 - temp_output_7_0_g118046 ) / ( temp_output_10_0_g118046 + 0.0001 ) ) ) , _DrynessLumaValue);
				half Dryness_LumaMask301_g118031 = lerpResult295_g118031;
				half Dryness_VertMask378_g118031 = 1.0;
				half Dryness_MaskNoise291_g118031 = 1.0;
				half Custom_Mask411_g118031 = 1.0;
				float temp_output_7_0_g118045 = _DrynessBlendRemap.x;
				float temp_output_10_0_g118045 = ( _DrynessBlendRemap.y - temp_output_7_0_g118045 );
				half Dryness_Mask329_g118031 = saturate( ( ( ( _DrynessIntensityValue * Dryness_TexMask478_g118031 * Dryness_MultiMask302_g118031 * Dryness_LumaMask301_g118031 * Dryness_VertMask378_g118031 * Dryness_MaskNoise291_g118031 * Dryness_GlobalMask352_g118031 * Custom_Mask411_g118031 ) - temp_output_7_0_g118045 ) / ( temp_output_10_0_g118045 + 0.0001 ) ) );
				float3 lerpResult336_g118031 = lerp( Visual_Albedo292_g118031 , ( staticSwitch499_g118031 * 4.594794 * (_DrynessColor).rgb ) , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float3 staticSwitch356_g118031 = lerpResult336_g118031;
				#else
				float3 staticSwitch356_g118031 = Visual_Albedo292_g118031;
				#endif
				half3 Final_Albedo331_g118031 = staticSwitch356_g118031;
				float3 In_Albedo3_g118034 = Final_Albedo331_g118031;
				float3 In_AlbedoRaw3_g118034 = Out_AlbedoRaw4_g118033;
				float2 In_NormalTS3_g118034 = Out_NormalTS4_g118033;
				float3 In_NormalWS3_g118034 = Out_NormalWS4_g118033;
				half4 Visual_Shader415_g118031 = Out_Shader4_g118033;
				float4 break438_g118031 = Visual_Shader415_g118031;
				float4 appendResult439_g118031 = (float4(break438_g118031.x , break438_g118031.y , break438_g118031.z , ( break438_g118031.w * _DrynessSmoothnessValue )));
				float4 lerpResult427_g118031 = lerp( Visual_Shader415_g118031 , appendResult439_g118031 , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float4 staticSwitch426_g118031 = lerpResult427_g118031;
				#else
				float4 staticSwitch426_g118031 = Visual_Shader415_g118031;
				#endif
				half4 Final_Shader433_g118031 = staticSwitch426_g118031;
				float4 In_Shader3_g118034 = Final_Shader433_g118031;
				float4 In_Emissive3_g118034 = Out_Emissive4_g118033;
				float In_Grayscale3_g118034 = temp_output_280_12_g118031;
				float In_Luminosity3_g118034 = temp_output_280_15_g118031;
				float In_MultiMask3_g118034 = temp_output_280_11_g118031;
				float In_AlphaClip3_g118034 = Out_AlphaClip4_g118033;
				float In_AlphaFade3_g118034 = Out_AlphaFade4_g118033;
				float3 In_Translucency3_g118034 = Out_Translucency4_g118033;
				half Visual_Transmission416_g118031 = Out_Transmission4_g118033;
				float lerpResult421_g118031 = lerp( Visual_Transmission416_g118031 , ( Visual_Transmission416_g118031 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float staticSwitch418_g118031 = lerpResult421_g118031;
				#else
				float staticSwitch418_g118031 = Visual_Transmission416_g118031;
				#endif
				half Final_Transmission425_g118031 = staticSwitch418_g118031;
				float In_Transmission3_g118034 = Final_Transmission425_g118031;
				float In_Thickness3_g118034 = Out_Thickness4_g118033;
				float In_Diffusion3_g118034 = Out_Diffusion4_g118033;
				Data3_g118034.Dummy = In_Dummy3_g118034;
				Data3_g118034.Albedo = In_Albedo3_g118034;
				Data3_g118034.AlbedoRaw = In_AlbedoRaw3_g118034;
				Data3_g118034.NormalTS = In_NormalTS3_g118034;
				Data3_g118034.NormalWS = In_NormalWS3_g118034;
				Data3_g118034.Shader = In_Shader3_g118034;
				Data3_g118034.Emissive= In_Emissive3_g118034;
				Data3_g118034.MultiMask = In_MultiMask3_g118034;
				Data3_g118034.Grayscale = In_Grayscale3_g118034;
				Data3_g118034.Luminosity = In_Luminosity3_g118034;
				Data3_g118034.AlphaClip = In_AlphaClip3_g118034;
				Data3_g118034.AlphaFade = In_AlphaFade3_g118034;
				Data3_g118034.Translucency = In_Translucency3_g118034;
				Data3_g118034.Transmission = In_Transmission3_g118034;
				Data3_g118034.Thickness = In_Thickness3_g118034;
				Data3_g118034.Diffusion = In_Diffusion3_g118034;
				TVEVisualData Data4_g118055 = Data3_g118034;
				float Out_Dummy4_g118055 = 0;
				float3 Out_Albedo4_g118055 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118055 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118055 = float2( 0,0 );
				float3 Out_NormalWS4_g118055 = float3( 0,0,0 );
				float4 Out_Shader4_g118055 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118055 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118055 = 0;
				float Out_Grayscale4_g118055 = 0;
				float Out_Luminosity4_g118055 = 0;
				float Out_AlphaClip4_g118055 = 0;
				float Out_AlphaFade4_g118055 = 0;
				float3 Out_Translucency4_g118055 = float3( 0,0,0 );
				float Out_Transmission4_g118055 = 0;
				float Out_Thickness4_g118055 = 0;
				float Out_Diffusion4_g118055 = 0;
				Out_Dummy4_g118055 = Data4_g118055.Dummy;
				Out_Albedo4_g118055 = Data4_g118055.Albedo;
				Out_AlbedoRaw4_g118055 = Data4_g118055.AlbedoRaw;
				Out_NormalTS4_g118055 = Data4_g118055.NormalTS;
				Out_NormalWS4_g118055 = Data4_g118055.NormalWS;
				Out_Shader4_g118055 = Data4_g118055.Shader;
				Out_Emissive4_g118055= Data4_g118055.Emissive;
				Out_MultiMask4_g118055 = Data4_g118055.MultiMask;
				Out_Grayscale4_g118055 = Data4_g118055.Grayscale;
				Out_Luminosity4_g118055= Data4_g118055.Luminosity;
				Out_AlphaClip4_g118055 = Data4_g118055.AlphaClip;
				Out_AlphaFade4_g118055 = Data4_g118055.AlphaFade;
				Out_Translucency4_g118055 = Data4_g118055.Translucency;
				Out_Transmission4_g118055 = Data4_g118055.Transmission;
				Out_Thickness4_g118055 = Data4_g118055.Thickness;
				Out_Diffusion4_g118055 = Data4_g118055.Diffusion;
				half3 Visual_Albedo127_g118054 = Out_Albedo4_g118055;
				float3 temp_output_622_0_g118054 = (_OverlayColor).rgb;
				TEXTURE2D(Texture238_g118058) = _OverlayAlbedoTex;
				float localFilterTexture19_g118087 = ( 0.0 );
				SamplerState SamplerDefault19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g118087 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g118087 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g118087 = SamplerDefault19_g118087;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g118087 = SamplerDefault19_g118087;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g118087 = SamplerPoint19_g118087;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g118087 = SamplerLow19_g118087;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g118087 = SamplerMedium19_g118087;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g118087 = SamplerHigh19_g118087;
				#endif
				SamplerState Sampler238_g118058 = SS19_g118087;
				float4 temp_output_6_0_g118059 = _overlay_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g118059 = ( temp_output_6_0_g118059 + ( ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g118059 = temp_output_6_0_g118059;
				#endif
				half4 Overlay_Coords639_g118054 = staticSwitch14_g118059;
				float4 temp_output_37_0_g118058 = Overlay_Coords639_g118054;
				half4 Coords238_g118058 = temp_output_37_0_g118058;
				TVEModelData Data15_g118089 = Data16_g117809;
				float Out_Dummy15_g118089 = 0;
				float3 Out_PositionWS15_g118089 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118089 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118089 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118089 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118089 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g118089 = float3( 0,0,0 );
				float4 Out_VertexData15_g118089 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118089 = float4( 0,0,0,0 );
				Out_Dummy15_g118089 = Data15_g118089.Dummy;
				Out_PositionWS15_g118089 = Data15_g118089.PositionWS;
				Out_PositionWO15_g118089 = Data15_g118089.PositionWO;
				Out_PivotWS15_g118089 = Data15_g118089.PivotWS;
				Out_PivotWO15_g118089 = Data15_g118089.PivotWO;
				Out_NormalWS15_g118089 = Data15_g118089.NormalWS;
				Out_ViewDirWS15_g118089 = Data15_g118089.ViewDirWS;
				Out_VertexData15_g118089 = Data15_g118089.VertexData;
				Out_BoundsData15_g118089 = Data15_g118089.BoundsData;
				half3 Model_PositionWO602_g118054 = Out_PositionWO15_g118089;
				float3 temp_output_279_0_g118058 = Model_PositionWO602_g118054;
				half3 WorldPosition238_g118058 = temp_output_279_0_g118058;
				half4 localSamplePlanar2D238_g118058 = SamplePlanar2D( Texture238_g118058 , Sampler238_g118058 , Coords238_g118058 , WorldPosition238_g118058 );
				TEXTURE2D(Texture246_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler246_g118058 = SS19_g118087;
				half4 Coords246_g118058 = temp_output_37_0_g118058;
				half3 WorldPosition246_g118058 = temp_output_279_0_g118058;
				half3 Model_NormalWS712_g118054 = Out_NormalWS15_g118089;
				float3 temp_output_280_0_g118058 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118058 = temp_output_280_0_g118058;
				half4 localSamplePlanar3D246_g118058 = SamplePlanar3D( Texture246_g118058 , Sampler246_g118058 , Coords246_g118058 , WorldPosition246_g118058 , WorldNormal246_g118058 );
				TEXTURE2D(Texture234_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler234_g118058 = SS19_g118087;
				float4 Coords234_g118058 = temp_output_37_0_g118058;
				float3 WorldPosition234_g118058 = temp_output_279_0_g118058;
				float4 localSampleStochastic2D234_g118058 = SampleStochastic2D( Texture234_g118058 , Sampler234_g118058 , Coords234_g118058 , WorldPosition234_g118058 );
				TEXTURE2D(Texture263_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler263_g118058 = SS19_g118087;
				half4 Coords263_g118058 = temp_output_37_0_g118058;
				half3 WorldPosition263_g118058 = temp_output_279_0_g118058;
				half3 WorldNormal263_g118058 = temp_output_280_0_g118058;
				half4 localSampleStochastic3D263_g118058 = SampleStochastic3D( Texture263_g118058 , Sampler263_g118058 , Coords263_g118058 , WorldPosition263_g118058 , WorldNormal263_g118058 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch676_g118054 = localSamplePlanar2D238_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch676_g118054 = localSamplePlanar3D246_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch676_g118054 = localSampleStochastic2D234_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch676_g118054 = localSampleStochastic3D263_g118058;
				#else
				float4 staticSwitch676_g118054 = localSamplePlanar2D238_g118058;
				#endif
				half3 Overlay_Albedo526_g118054 = (staticSwitch676_g118054).xyz;
				#ifdef TVE_OVERLAY_TEX
				float3 staticSwitch578_g118054 = ( temp_output_622_0_g118054 * Overlay_Albedo526_g118054 );
				#else
				float3 staticSwitch578_g118054 = temp_output_622_0_g118054;
				#endif
				float3 temp_output_6_0_g118065 = staticSwitch578_g118054;
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g118065 = ( temp_output_6_0_g118065 + ( _OverlayTextureMode * 0.0 ) );
				#else
				float3 staticSwitch14_g118065 = temp_output_6_0_g118065;
				#endif
				float3 temp_cast_34 = (0.0).xxx;
				TEXTURE2D(Texture246_g118062) = _OverlayGlitterTexRT;
				SamplerState Sampler246_g118062 = sampler_Linear_Repeat;
				float4 appendResult863_g118054 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g118062 = appendResult863_g118054;
				half4 Coords246_g118062 = temp_output_37_0_g118062;
				float3 temp_output_279_0_g118062 = Model_PositionWO602_g118054;
				half3 WorldPosition246_g118062 = temp_output_279_0_g118062;
				float3 temp_output_280_0_g118062 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118062 = temp_output_280_0_g118062;
				half4 localSamplePlanar3D246_g118062 = SamplePlanar3D( Texture246_g118062 , Sampler246_g118062 , Coords246_g118062 , WorldPosition246_g118062 , WorldNormal246_g118062 );
				half Overlay_GlitterTex854_g118054 = (localSamplePlanar3D246_g118062).x;
				half3 Model_PositionWS879_g118054 = Out_PositionWS15_g118089;
				#ifdef TVE_OVERLAY_GLITTER
				float3 staticSwitch868_g118054 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g118054 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g118054 ) / _OverlayGlitterDistValue ) ) ) );
				#else
				float3 staticSwitch868_g118054 = temp_cast_34;
				#endif
				half3 Overlay_GlitterColor865_g118054 = staticSwitch868_g118054;
				half Overlay_TexMask908_g118054 = 1.0;
				float3 temp_output_739_21_g118054 = Out_NormalWS4_g118055;
				half3 Visual_NormalWS749_g118054 = temp_output_739_21_g118054;
				float clampResult17_g118075 = clamp( saturate( (Visual_NormalWS749_g118054).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g118074 = _OverlayProjRemap.x;
				float temp_output_10_0_g118074 = ( _OverlayProjRemap.y - temp_output_7_0_g118074 );
				float lerpResult842_g118054 = lerp( 1.0 , saturate( ( ( clampResult17_g118075 - temp_output_7_0_g118074 ) / ( temp_output_10_0_g118074 + 0.0001 ) ) ) , _OverlayProjValue);
				half Overlay_MaskProj457_g118054 = lerpResult842_g118054;
				float temp_output_739_15_g118054 = Out_Luminosity4_g118055;
				half Visual_Luminosity654_g118054 = temp_output_739_15_g118054;
				float clampResult17_g118077 = clamp( Visual_Luminosity654_g118054 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118076 = _OverlayLumaRemap.x;
				float temp_output_10_0_g118076 = ( _OverlayLumaRemap.y - temp_output_7_0_g118076 );
				float lerpResult587_g118054 = lerp( 1.0 , saturate( ( ( clampResult17_g118077 - temp_output_7_0_g118076 ) / ( temp_output_10_0_g118076 + 0.0001 ) ) ) , _OverlayLumaValue);
				half Overlay_MaskLuma438_g118054 = lerpResult587_g118054;
				half Overlay_VertMask801_g118054 = 1.0;
				half Overlay_MaskNoise427_g118054 = 1.0;
				TVEGlobalData Data15_g118056 = Data204_g117810;
				float Out_Dummy15_g118056 = 0;
				float4 Out_CoatParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118056 = float4( 0,0,0,0 );
				Out_Dummy15_g118056 = Data15_g118056.Dummy;
				Out_CoatParams15_g118056 = Data15_g118056.CoatParams;
				Out_PaintParams15_g118056 = Data15_g118056.PaintParams;
				Out_GlowParams15_g118056 = Data15_g118056.GlowParams;
				Out_AtmoParams15_g118056= Data15_g118056.AtmoParams;
				Out_FadeParams15_g118056= Data15_g118056.FadeParams;
				Out_FormParams15_g118056 = Data15_g118056.FormParams;
				Out_LandParams15_g118056 = Data15_g118056.LandParams;
				Out_WindParams15_g118056 = Data15_g118056.WindParams;
				Out_PushParams15_g118056 = Data15_g118056.PushParams;
				half4 Global_AtmoParams516_g118054 = Out_AtmoParams15_g118056;
				#ifdef TVE_OVERLAY_ELEMENT
				float staticSwitch705_g118054 = ( (Global_AtmoParams516_g118054).z * TVE_IsEnabled );
				#else
				float staticSwitch705_g118054 = 1.0;
				#endif
				half Overlay_MaskGlobal429_g118054 = staticSwitch705_g118054;
				half Custom_Mask646_g118054 = 1.0;
				float temp_output_7_0_g118083 = _OverlayBlendRemap1.x;
				float temp_output_10_0_g118083 = ( _OverlayBlendRemap1.y - temp_output_7_0_g118083 );
				half Overlay_Mask494_g118054 = saturate( ( ( ( _OverlayIntensityValue * Overlay_TexMask908_g118054 * Overlay_MaskProj457_g118054 * Overlay_MaskLuma438_g118054 * Overlay_VertMask801_g118054 * Overlay_MaskNoise427_g118054 * Overlay_MaskGlobal429_g118054 * Custom_Mask646_g118054 ) - temp_output_7_0_g118083 ) / ( temp_output_10_0_g118083 + 0.0001 ) ) );
				float3 lerpResult467_g118054 = lerp( Visual_Albedo127_g118054 , ( staticSwitch14_g118065 + Overlay_GlitterColor865_g118054 ) , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float3 staticSwitch577_g118054 = lerpResult467_g118054;
				#else
				float3 staticSwitch577_g118054 = Visual_Albedo127_g118054;
				#endif
				half3 Final_Albedo493_g118054 = staticSwitch577_g118054;
				float3 In_Albedo3_g118057 = Final_Albedo493_g118054;
				float3 In_AlbedoRaw3_g118057 = Out_AlbedoRaw4_g118055;
				half2 Visual_NormalTS535_g118054 = Out_NormalTS4_g118055;
				TEXTURE2D(Texture238_g118060) = _OverlayNormalTex;
				float localFilterTexture29_g118088 = ( 0.0 );
				SamplerState SamplerDefault29_g118088 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g118088 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g118088 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g118088 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g118088 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g118088 = SamplerDefault29_g118088;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g118088 = SamplerDefault29_g118088;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g118088 = SamplerPoint29_g118088;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g118088 = SamplerLow29_g118088;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g118088 = SamplerMedium29_g118088;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g118088 = SamplerHigh29_g118088;
				#endif
				SamplerState Sampler238_g118060 = SS29_g118088;
				float4 temp_output_37_0_g118060 = Overlay_Coords639_g118054;
				half4 Coords238_g118060 = temp_output_37_0_g118060;
				float3 temp_output_279_0_g118060 = Model_PositionWO602_g118054;
				half3 WorldPosition238_g118060 = temp_output_279_0_g118060;
				half4 localSamplePlanar2D238_g118060 = SamplePlanar2D( Texture238_g118060 , Sampler238_g118060 , Coords238_g118060 , WorldPosition238_g118060 );
				TEXTURE2D(Texture246_g118060) = _OverlayNormalTex;
				SamplerState Sampler246_g118060 = SS29_g118088;
				half4 Coords246_g118060 = temp_output_37_0_g118060;
				half3 WorldPosition246_g118060 = temp_output_279_0_g118060;
				float3 temp_output_280_0_g118060 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118060 = temp_output_280_0_g118060;
				half4 localSamplePlanar3D246_g118060 = SamplePlanar3D( Texture246_g118060 , Sampler246_g118060 , Coords246_g118060 , WorldPosition246_g118060 , WorldNormal246_g118060 );
				TEXTURE2D(Texture234_g118060) = _OverlayNormalTex;
				SamplerState Sampler234_g118060 = SS29_g118088;
				float4 Coords234_g118060 = temp_output_37_0_g118060;
				float3 WorldPosition234_g118060 = temp_output_279_0_g118060;
				float4 localSampleStochastic2D234_g118060 = SampleStochastic2D( Texture234_g118060 , Sampler234_g118060 , Coords234_g118060 , WorldPosition234_g118060 );
				TEXTURE2D(Texture263_g118060) = _OverlayNormalTex;
				SamplerState Sampler263_g118060 = SS29_g118088;
				half4 Coords263_g118060 = temp_output_37_0_g118060;
				half3 WorldPosition263_g118060 = temp_output_279_0_g118060;
				half3 WorldNormal263_g118060 = temp_output_280_0_g118060;
				half4 localSampleStochastic3D263_g118060 = SampleStochastic3D( Texture263_g118060 , Sampler263_g118060 , Coords263_g118060 , WorldPosition263_g118060 , WorldNormal263_g118060 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch686_g118054 = localSamplePlanar2D238_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch686_g118054 = localSamplePlanar3D246_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch686_g118054 = localSampleStochastic2D234_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch686_g118054 = localSampleStochastic3D263_g118060;
				#else
				float4 staticSwitch686_g118054 = localSamplePlanar2D238_g118060;
				#endif
				half4 Normal_Packed45_g118064 = staticSwitch686_g118054;
				float2 appendResult58_g118064 = (float2(( (Normal_Packed45_g118064).x * (Normal_Packed45_g118064).w ) , (Normal_Packed45_g118064).y));
				half2 Normal_Default50_g118064 = appendResult58_g118064;
				half2 Normal_ASTC41_g118064 = (Normal_Packed45_g118064).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g118064 = Normal_ASTC41_g118064;
				#else
				float2 staticSwitch38_g118064 = Normal_Default50_g118064;
				#endif
				half2 Normal_NO_DTX544_g118064 = (Normal_Packed45_g118064).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g118064 = Normal_NO_DTX544_g118064;
				#else
				float2 staticSwitch37_g118064 = staticSwitch38_g118064;
				#endif
				half2 Normal_Planar45_g118063 = (staticSwitch37_g118064*2.0 + -1.0);
				float2 break71_g118063 = Normal_Planar45_g118063;
				float3 appendResult72_g118063 = (float3(break71_g118063.x , 0.0 , break71_g118063.y));
				half2 Overlay_Normal528_g118054 = (mul( ase_worldToTangent, appendResult72_g118063 )).xy;
				#ifdef TVE_OVERLAY_TEX
				float2 staticSwitch579_g118054 = Overlay_Normal528_g118054;
				#else
				float2 staticSwitch579_g118054 = Visual_NormalTS535_g118054;
				#endif
				float2 lerpResult551_g118054 = lerp( Visual_NormalTS535_g118054 , ( staticSwitch579_g118054 * _OverlayNormalValue ) , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float2 staticSwitch583_g118054 = lerpResult551_g118054;
				#else
				float2 staticSwitch583_g118054 = Visual_NormalTS535_g118054;
				#endif
				half2 Final_NormalTS499_g118054 = staticSwitch583_g118054;
				float2 In_NormalTS3_g118057 = Final_NormalTS499_g118054;
				float3 In_NormalWS3_g118057 = temp_output_739_21_g118054;
				half4 Visual_Masks536_g118054 = Out_Shader4_g118055;
				float4 appendResult585_g118054 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
				float4 lerpResult584_g118054 = lerp( Visual_Masks536_g118054 , appendResult585_g118054 , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float4 staticSwitch586_g118054 = lerpResult584_g118054;
				#else
				float4 staticSwitch586_g118054 = Visual_Masks536_g118054;
				#endif
				half4 Final_Masks482_g118054 = staticSwitch586_g118054;
				float4 In_Shader3_g118057 = Final_Masks482_g118054;
				float4 In_Emissive3_g118057 = Out_Emissive4_g118055;
				float temp_output_739_12_g118054 = Out_Grayscale4_g118055;
				float In_Grayscale3_g118057 = temp_output_739_12_g118054;
				float In_Luminosity3_g118057 = temp_output_739_15_g118054;
				float In_MultiMask3_g118057 = Out_MultiMask4_g118055;
				float In_AlphaClip3_g118057 = Out_AlphaClip4_g118055;
				float In_AlphaFade3_g118057 = Out_AlphaFade4_g118055;
				float3 In_Translucency3_g118057 = Out_Translucency4_g118055;
				half Visual_Transmission699_g118054 = Out_Transmission4_g118055;
				float lerpResult746_g118054 = lerp( Visual_Transmission699_g118054 , ( Visual_Transmission699_g118054 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g118054 * Overlay_MaskNoise427_g118054 * Overlay_MaskGlobal429_g118054 ));
				#ifdef TVE_OVERLAY
				float staticSwitch703_g118054 = lerpResult746_g118054;
				#else
				float staticSwitch703_g118054 = Visual_Transmission699_g118054;
				#endif
				half Final_Transmission702_g118054 = staticSwitch703_g118054;
				float In_Transmission3_g118057 = Final_Transmission702_g118054;
				float In_Thickness3_g118057 = Out_Thickness4_g118055;
				float In_Diffusion3_g118057 = Out_Diffusion4_g118055;
				Data3_g118057.Dummy = In_Dummy3_g118057;
				Data3_g118057.Albedo = In_Albedo3_g118057;
				Data3_g118057.AlbedoRaw = In_AlbedoRaw3_g118057;
				Data3_g118057.NormalTS = In_NormalTS3_g118057;
				Data3_g118057.NormalWS = In_NormalWS3_g118057;
				Data3_g118057.Shader = In_Shader3_g118057;
				Data3_g118057.Emissive= In_Emissive3_g118057;
				Data3_g118057.MultiMask = In_MultiMask3_g118057;
				Data3_g118057.Grayscale = In_Grayscale3_g118057;
				Data3_g118057.Luminosity = In_Luminosity3_g118057;
				Data3_g118057.AlphaClip = In_AlphaClip3_g118057;
				Data3_g118057.AlphaFade = In_AlphaFade3_g118057;
				Data3_g118057.Translucency = In_Translucency3_g118057;
				Data3_g118057.Transmission = In_Transmission3_g118057;
				Data3_g118057.Thickness = In_Thickness3_g118057;
				Data3_g118057.Diffusion = In_Diffusion3_g118057;
				TVEVisualData Data4_g118091 = Data3_g118057;
				float Out_Dummy4_g118091 = 0;
				float3 Out_Albedo4_g118091 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118091 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118091 = float2( 0,0 );
				float3 Out_NormalWS4_g118091 = float3( 0,0,0 );
				float4 Out_Shader4_g118091 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118091 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118091 = 0;
				float Out_Grayscale4_g118091 = 0;
				float Out_Luminosity4_g118091 = 0;
				float Out_AlphaClip4_g118091 = 0;
				float Out_AlphaFade4_g118091 = 0;
				float3 Out_Translucency4_g118091 = float3( 0,0,0 );
				float Out_Transmission4_g118091 = 0;
				float Out_Thickness4_g118091 = 0;
				float Out_Diffusion4_g118091 = 0;
				Out_Dummy4_g118091 = Data4_g118091.Dummy;
				Out_Albedo4_g118091 = Data4_g118091.Albedo;
				Out_AlbedoRaw4_g118091 = Data4_g118091.AlbedoRaw;
				Out_NormalTS4_g118091 = Data4_g118091.NormalTS;
				Out_NormalWS4_g118091 = Data4_g118091.NormalWS;
				Out_Shader4_g118091 = Data4_g118091.Shader;
				Out_Emissive4_g118091= Data4_g118091.Emissive;
				Out_MultiMask4_g118091 = Data4_g118091.MultiMask;
				Out_Grayscale4_g118091 = Data4_g118091.Grayscale;
				Out_Luminosity4_g118091= Data4_g118091.Luminosity;
				Out_AlphaClip4_g118091 = Data4_g118091.AlphaClip;
				Out_AlphaFade4_g118091 = Data4_g118091.AlphaFade;
				Out_Translucency4_g118091 = Data4_g118091.Translucency;
				Out_Transmission4_g118091 = Data4_g118091.Transmission;
				Out_Thickness4_g118091 = Data4_g118091.Thickness;
				Out_Diffusion4_g118091 = Data4_g118091.Diffusion;
				half3 Visual_Albedo127_g118090 = Out_Albedo4_g118091;
				TVEGlobalData Data15_g118096 = Data204_g117810;
				float Out_Dummy15_g118096 = 0;
				float4 Out_CoatParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118096 = float4( 0,0,0,0 );
				Out_Dummy15_g118096 = Data15_g118096.Dummy;
				Out_CoatParams15_g118096 = Data15_g118096.CoatParams;
				Out_PaintParams15_g118096 = Data15_g118096.PaintParams;
				Out_GlowParams15_g118096 = Data15_g118096.GlowParams;
				Out_AtmoParams15_g118096= Data15_g118096.AtmoParams;
				Out_FadeParams15_g118096= Data15_g118096.FadeParams;
				Out_FormParams15_g118096 = Data15_g118096.FormParams;
				Out_LandParams15_g118096 = Data15_g118096.LandParams;
				Out_WindParams15_g118096 = Data15_g118096.WindParams;
				Out_PushParams15_g118096 = Data15_g118096.PushParams;
				half4 Global_AtmoParams516_g118090 = Out_AtmoParams15_g118096;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch663_g118090 = ( (Global_AtmoParams516_g118090).y * TVE_IsEnabled );
				#else
				float staticSwitch663_g118090 = 1.0;
				#endif
				half Global_Wetness429_g118090 = staticSwitch663_g118090;
				half Wetness_Value1042_g118090 = ( _WetnessIntensityValue * Global_Wetness429_g118090 );
				half Wetness_VertMask1024_g118090 = 1.0;
				float temp_output_1043_0_g118090 = ( Wetness_Value1042_g118090 * Wetness_VertMask1024_g118090 );
				half Wetness_Mask866_g118090 = temp_output_1043_0_g118090;
				half Water_VertMask1094_g118090 = 1.0;
				half4 Visual_Masks536_g118090 = Out_Shader4_g118091;
				float lerpResult1013_g118090 = lerp( 1.0 , (Visual_Masks536_g118090).z , _WetnessWaterBaseValue);
				half Water_HeightMask782_g118090 = lerpResult1013_g118090;
				float clampResult17_g118105 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g118090 * Water_VertMask1094_g118090 ) - Water_HeightMask782_g118090 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g118106 = _WetnessWaterBlendRemap.x;
				float temp_output_10_0_g118106 = ( _WetnessWaterBlendRemap.y - temp_output_7_0_g118106 );
				TVEModelData Data15_g118104 = Data16_g117809;
				float Out_Dummy15_g118104 = 0;
				float3 Out_PositionWS15_g118104 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118104 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118104 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118104 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118104 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g118104 = float3( 0,0,0 );
				float4 Out_VertexData15_g118104 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118104 = float4( 0,0,0,0 );
				Out_Dummy15_g118104 = Data15_g118104.Dummy;
				Out_PositionWS15_g118104 = Data15_g118104.PositionWS;
				Out_PositionWO15_g118104 = Data15_g118104.PositionWO;
				Out_PivotWS15_g118104 = Data15_g118104.PivotWS;
				Out_PivotWO15_g118104 = Data15_g118104.PivotWO;
				Out_NormalWS15_g118104 = Data15_g118104.NormalWS;
				Out_ViewDirWS15_g118104 = Data15_g118104.ViewDirWS;
				Out_VertexData15_g118104 = Data15_g118104.VertexData;
				Out_BoundsData15_g118104 = Data15_g118104.BoundsData;
				half3 Model_NormalWS798_g118090 = Out_NormalWS15_g118104;
				float temp_output_786_0_g118090 = saturate( (Model_NormalWS798_g118090).y );
				half Wetness_ProjMask790_g118090 = temp_output_786_0_g118090;
				half Water_Mask760_g118090 = ( saturate( ( ( clampResult17_g118105 - temp_output_7_0_g118106 ) / ( temp_output_10_0_g118106 + 0.0001 ) ) ) * Wetness_ProjMask790_g118090 );
				float3 lerpResult918_g118090 = lerp( Visual_Albedo127_g118090 , ( Visual_Albedo127_g118090 * (_WetnessWaterColor).rgb ) , Water_Mask760_g118090);
				#ifdef TVE_WETNESS_WATER
				float3 staticSwitch946_g118090 = lerpResult918_g118090;
				#else
				float3 staticSwitch946_g118090 = Visual_Albedo127_g118090;
				#endif
				float3 lerpResult768_g118090 = lerp( staticSwitch946_g118090 , ( staticSwitch946_g118090 * staticSwitch946_g118090 ) , _WetnessContrastValue);
				float3 lerpResult651_g118090 = lerp( Visual_Albedo127_g118090 , lerpResult768_g118090 , Wetness_Mask866_g118090);
				#ifdef TVE_WETNESS
				float3 staticSwitch577_g118090 = lerpResult651_g118090;
				#else
				float3 staticSwitch577_g118090 = Visual_Albedo127_g118090;
				#endif
				half3 Final_Albedo493_g118090 = staticSwitch577_g118090;
				float3 In_Albedo3_g118092 = Final_Albedo493_g118090;
				float3 In_AlbedoRaw3_g118092 = Out_AlbedoRaw4_g118091;
				half2 Visual_Normal535_g118090 = Out_NormalTS4_g118091;
				float lerpResult877_g118090 = lerp( 1.0 , 0.0 , ( Water_Mask760_g118090 * Water_Mask760_g118090 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch957_g118090 = ( Visual_Normal535_g118090 * lerpResult877_g118090 );
				#else
				float2 staticSwitch957_g118090 = Visual_Normal535_g118090;
				#endif
				float2 temp_cast_35 = (0.0).xx;
				TEXTURE2D(Texture238_g118102) = _WetnessDropsTexRT;
				SamplerState Sampler238_g118102 = sampler_Linear_Repeat_Aniso8;
				float4 appendResult924_g118090 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g118102 = appendResult924_g118090;
				half4 Coords238_g118102 = temp_output_37_0_g118102;
				half3 Model_PositionWO602_g118090 = Out_PositionWO15_g118104;
				float3 temp_output_279_0_g118102 = Model_PositionWO602_g118090;
				half3 WorldPosition238_g118102 = temp_output_279_0_g118102;
				half4 localSamplePlanar2D238_g118102 = SamplePlanar2D( Texture238_g118102 , Sampler238_g118102 , Coords238_g118102 , WorldPosition238_g118102 );
				float4 temp_output_1010_0_g118090 = localSamplePlanar2D238_g118102;
				half2 Rain_DropsNormal919_g118090 = (temp_output_1010_0_g118090).zw;
				float2 temp_output_903_0_g118090 = (Rain_DropsNormal919_g118090*2.0 + -1.0);
				half2 Rain_RingsNormal713_g118090 = (temp_output_1010_0_g118090).xy;
				float2 lerpResult904_g118090 = lerp( temp_output_903_0_g118090 , (Rain_RingsNormal713_g118090*2.0 + -1.0) , ( Water_Mask760_g118090 * Water_Mask760_g118090 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch960_g118090 = lerpResult904_g118090;
				#else
				float2 staticSwitch960_g118090 = temp_output_903_0_g118090;
				#endif
				half2 Rain_Drops1002_g118090 = ( staticSwitch960_g118090 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
				half3 Model_PositionWS823_g118090 = Out_PositionWS15_g118104;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch949_g118090 = ( (Global_AtmoParams516_g118090).w * TVE_IsEnabled );
				#else
				float staticSwitch949_g118090 = 1.0;
				#endif
				half Global_Rain955_g118090 = staticSwitch949_g118090;
				half Rain_Value1067_g118090 = Global_Rain955_g118090;
				half Rain_VertMask1108_g118090 = 1.0;
				half Rain_Mask999_g118090 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g118090 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g118090 * Rain_VertMask1108_g118090 );
				half2 Normal_Planar45_g118101 = ( Rain_Drops1002_g118090 * Rain_Mask999_g118090 * Wetness_ProjMask790_g118090 );
				float2 break71_g118101 = Normal_Planar45_g118101;
				float3 appendResult72_g118101 = (float3(break71_g118101.x , 0.0 , break71_g118101.y));
				half2 Wetness_Normal526_g118090 = (mul( ase_worldToTangent, appendResult72_g118101 )).xy;
				#ifdef TVE_WETNESS_DROPS
				float2 staticSwitch583_g118090 = Wetness_Normal526_g118090;
				#else
				float2 staticSwitch583_g118090 = temp_cast_35;
				#endif
				#ifdef TVE_WETNESS
				float2 staticSwitch774_g118090 = ( staticSwitch957_g118090 + staticSwitch583_g118090 );
				#else
				float2 staticSwitch774_g118090 = Visual_Normal535_g118090;
				#endif
				half2 Final_Normal499_g118090 = staticSwitch774_g118090;
				float2 In_NormalTS3_g118092 = Final_Normal499_g118090;
				float3 In_NormalWS3_g118092 = Out_NormalWS4_g118091;
				float4 break658_g118090 = Visual_Masks536_g118090;
				float temp_output_935_0_g118090 = ( Wetness_Mask866_g118090 * _WetnessSmoothnessValue );
				float lerpResult941_g118090 = lerp( temp_output_935_0_g118090 , 2.0 , Water_Mask760_g118090);
				#ifdef TVE_WETNESS_WATER
				float staticSwitch959_g118090 = lerpResult941_g118090;
				#else
				float staticSwitch959_g118090 = temp_output_935_0_g118090;
				#endif
				float4 appendResult661_g118090 = (float4(break658_g118090.x , break658_g118090.y , break658_g118090.z , saturate( ( break658_g118090.w + staticSwitch959_g118090 ) )));
				#ifdef TVE_WETNESS
				float4 staticSwitch586_g118090 = appendResult661_g118090;
				#else
				float4 staticSwitch586_g118090 = Visual_Masks536_g118090;
				#endif
				half4 Final_Masks482_g118090 = staticSwitch586_g118090;
				float4 In_Shader3_g118092 = Final_Masks482_g118090;
				float4 In_Emissive3_g118092 = Out_Emissive4_g118091;
				float In_Grayscale3_g118092 = Out_Grayscale4_g118091;
				float In_Luminosity3_g118092 = Out_Luminosity4_g118091;
				float In_MultiMask3_g118092 = Out_MultiMask4_g118091;
				float In_AlphaClip3_g118092 = Out_AlphaClip4_g118091;
				float In_AlphaFade3_g118092 = Out_AlphaFade4_g118091;
				float3 In_Translucency3_g118092 = Out_Translucency4_g118091;
				float In_Transmission3_g118092 = Out_Transmission4_g118091;
				float In_Thickness3_g118092 = Out_Thickness4_g118091;
				float In_Diffusion3_g118092 = Out_Diffusion4_g118091;
				Data3_g118092.Dummy = In_Dummy3_g118092;
				Data3_g118092.Albedo = In_Albedo3_g118092;
				Data3_g118092.AlbedoRaw = In_AlbedoRaw3_g118092;
				Data3_g118092.NormalTS = In_NormalTS3_g118092;
				Data3_g118092.NormalWS = In_NormalWS3_g118092;
				Data3_g118092.Shader = In_Shader3_g118092;
				Data3_g118092.Emissive= In_Emissive3_g118092;
				Data3_g118092.MultiMask = In_MultiMask3_g118092;
				Data3_g118092.Grayscale = In_Grayscale3_g118092;
				Data3_g118092.Luminosity = In_Luminosity3_g118092;
				Data3_g118092.AlphaClip = In_AlphaClip3_g118092;
				Data3_g118092.AlphaFade = In_AlphaFade3_g118092;
				Data3_g118092.Translucency = In_Translucency3_g118092;
				Data3_g118092.Transmission = In_Transmission3_g118092;
				Data3_g118092.Thickness = In_Thickness3_g118092;
				Data3_g118092.Diffusion = In_Diffusion3_g118092;
				TVEVisualData Data4_g118128 = Data3_g118092;
				float Out_Dummy4_g118128 = 0;
				float3 Out_Albedo4_g118128 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118128 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118128 = float2( 0,0 );
				float3 Out_NormalWS4_g118128 = float3( 0,0,0 );
				float4 Out_Shader4_g118128 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118128 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118128 = 0;
				float Out_Grayscale4_g118128 = 0;
				float Out_Luminosity4_g118128 = 0;
				float Out_AlphaClip4_g118128 = 0;
				float Out_AlphaFade4_g118128 = 0;
				float3 Out_Translucency4_g118128 = float3( 0,0,0 );
				float Out_Transmission4_g118128 = 0;
				float Out_Thickness4_g118128 = 0;
				float Out_Diffusion4_g118128 = 0;
				Out_Dummy4_g118128 = Data4_g118128.Dummy;
				Out_Albedo4_g118128 = Data4_g118128.Albedo;
				Out_AlbedoRaw4_g118128 = Data4_g118128.AlbedoRaw;
				Out_NormalTS4_g118128 = Data4_g118128.NormalTS;
				Out_NormalWS4_g118128 = Data4_g118128.NormalWS;
				Out_Shader4_g118128 = Data4_g118128.Shader;
				Out_Emissive4_g118128= Data4_g118128.Emissive;
				Out_MultiMask4_g118128 = Data4_g118128.MultiMask;
				Out_Grayscale4_g118128 = Data4_g118128.Grayscale;
				Out_Luminosity4_g118128= Data4_g118128.Luminosity;
				Out_AlphaClip4_g118128 = Data4_g118128.AlphaClip;
				Out_AlphaFade4_g118128 = Data4_g118128.AlphaFade;
				Out_Translucency4_g118128 = Data4_g118128.Translucency;
				Out_Transmission4_g118128 = Data4_g118128.Transmission;
				Out_Thickness4_g118128 = Data4_g118128.Thickness;
				Out_Diffusion4_g118128 = Data4_g118128.Diffusion;
				float3 temp_output_297_0_g118119 = Out_Albedo4_g118128;
				float3 In_Albedo3_g118129 = temp_output_297_0_g118119;
				float3 temp_output_297_23_g118119 = Out_AlbedoRaw4_g118128;
				float3 In_AlbedoRaw3_g118129 = temp_output_297_23_g118119;
				float2 In_NormalTS3_g118129 = Out_NormalTS4_g118128;
				float3 In_NormalWS3_g118129 = Out_NormalWS4_g118128;
				float4 In_Shader3_g118129 = Out_Shader4_g118128;
				float4 temp_cast_36 = (0.0).xxxx;
				half4 Visual_Emissive255_g118119 = Out_Emissive4_g118128;
				half Emissive_MeshMask221_g118119 = 1.0;
				half Emissive_Mask103_g118119 = 1.0;
				float temp_output_279_0_g118119 = ( Emissive_MeshMask221_g118119 * Emissive_Mask103_g118119 );
				float3 appendResult293_g118119 = (float3(temp_output_279_0_g118119 , temp_output_279_0_g118119 , temp_output_279_0_g118119));
				half3 Local_EmissiveColor278_g118119 = appendResult293_g118119;
				float3 temp_cast_37 = (1.0).xxx;
				TVEGlobalData Data15_g118120 = Data204_g117810;
				float Out_Dummy15_g118120 = 0;
				float4 Out_CoatParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118120 = float4( 0,0,0,0 );
				Out_Dummy15_g118120 = Data15_g118120.Dummy;
				Out_CoatParams15_g118120 = Data15_g118120.CoatParams;
				Out_PaintParams15_g118120 = Data15_g118120.PaintParams;
				Out_GlowParams15_g118120 = Data15_g118120.GlowParams;
				Out_AtmoParams15_g118120= Data15_g118120.AtmoParams;
				Out_FadeParams15_g118120= Data15_g118120.FadeParams;
				Out_FormParams15_g118120 = Data15_g118120.FormParams;
				Out_LandParams15_g118120 = Data15_g118120.LandParams;
				Out_WindParams15_g118120 = Data15_g118120.WindParams;
				Out_PushParams15_g118120 = Data15_g118120.PushParams;
				half4 Global_GlowParams179_g118119 = Out_GlowParams15_g118120;
				float3 lerpResult299_g118119 = lerp( float3( 1,1,1 ) , (Global_GlowParams179_g118119).xyz , TVE_IsEnabled);
				#ifdef TVE_EMISSIVE_ELEMENT
				float3 staticSwitch228_g118119 = lerpResult299_g118119;
				#else
				float3 staticSwitch228_g118119 = temp_cast_37;
				#endif
				half3 Emissive_GlobalMask248_g118119 = staticSwitch228_g118119;
				half3 Visual_AlbedoRaw306_g118119 = temp_output_297_23_g118119;
				float3 lerpResult307_g118119 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g118119 , _EmissiveColorMode);
				half3 Local_EmissiveValue88_g118119 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g118119 * lerpResult307_g118119 );
				half3 Emissive_Blend260_g118119 = ( ( (Visual_Emissive255_g118119).xyz * Local_EmissiveColor278_g118119 ) * Local_EmissiveValue88_g118119 );
				float3 temp_output_3_0_g118133 = Emissive_Blend260_g118119;
				float temp_output_15_0_g118133 = _emissive_power_value;
				float3 hdEmission22_g118133 = ASEGetEmissionHDRColor(temp_output_3_0_g118133,temp_output_15_0_g118133,_EmissiveExposureValue,GetInverseCurrentExposureMultiplier());
				half Local_EmissiveMask294_g118119 = temp_output_279_0_g118119;
				float4 appendResult295_g118119 = (float4(hdEmission22_g118133 , Local_EmissiveMask294_g118119));
				#ifdef TVE_EMISSIVE
				float4 staticSwitch129_g118119 = appendResult295_g118119;
				#else
				float4 staticSwitch129_g118119 = temp_cast_36;
				#endif
				half4 Final_Emissive184_g118119 = staticSwitch129_g118119;
				float4 In_Emissive3_g118129 = Final_Emissive184_g118119;
				float In_Grayscale3_g118129 = Out_Grayscale4_g118128;
				float In_Luminosity3_g118129 = Out_Luminosity4_g118128;
				float temp_output_297_11_g118119 = Out_MultiMask4_g118128;
				float In_MultiMask3_g118129 = temp_output_297_11_g118119;
				float In_AlphaClip3_g118129 = Out_AlphaClip4_g118128;
				float In_AlphaFade3_g118129 = Out_AlphaFade4_g118128;
				float3 In_Translucency3_g118129 = Out_Translucency4_g118128;
				float In_Transmission3_g118129 = Out_Transmission4_g118128;
				float In_Thickness3_g118129 = Out_Thickness4_g118128;
				float In_Diffusion3_g118129 = Out_Diffusion4_g118128;
				Data3_g118129.Dummy = In_Dummy3_g118129;
				Data3_g118129.Albedo = In_Albedo3_g118129;
				Data3_g118129.AlbedoRaw = In_AlbedoRaw3_g118129;
				Data3_g118129.NormalTS = In_NormalTS3_g118129;
				Data3_g118129.NormalWS = In_NormalWS3_g118129;
				Data3_g118129.Shader = In_Shader3_g118129;
				Data3_g118129.Emissive= In_Emissive3_g118129;
				Data3_g118129.MultiMask = In_MultiMask3_g118129;
				Data3_g118129.Grayscale = In_Grayscale3_g118129;
				Data3_g118129.Luminosity = In_Luminosity3_g118129;
				Data3_g118129.AlphaClip = In_AlphaClip3_g118129;
				Data3_g118129.AlphaFade = In_AlphaFade3_g118129;
				Data3_g118129.Translucency = In_Translucency3_g118129;
				Data3_g118129.Transmission = In_Transmission3_g118129;
				Data3_g118129.Thickness = In_Thickness3_g118129;
				Data3_g118129.Diffusion = In_Diffusion3_g118129;
				TVEVisualData Data4_g118145 = Data3_g118129;
				float Out_Dummy4_g118145 = 0;
				float3 Out_Albedo4_g118145 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118145 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118145 = float2( 0,0 );
				float3 Out_NormalWS4_g118145 = float3( 0,0,0 );
				float4 Out_Shader4_g118145 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118145 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118145 = 0;
				float Out_Grayscale4_g118145 = 0;
				float Out_Luminosity4_g118145 = 0;
				float Out_AlphaClip4_g118145 = 0;
				float Out_AlphaFade4_g118145 = 0;
				float3 Out_Translucency4_g118145 = float3( 0,0,0 );
				float Out_Transmission4_g118145 = 0;
				float Out_Thickness4_g118145 = 0;
				float Out_Diffusion4_g118145 = 0;
				Out_Dummy4_g118145 = Data4_g118145.Dummy;
				Out_Albedo4_g118145 = Data4_g118145.Albedo;
				Out_AlbedoRaw4_g118145 = Data4_g118145.AlbedoRaw;
				Out_NormalTS4_g118145 = Data4_g118145.NormalTS;
				Out_NormalWS4_g118145 = Data4_g118145.NormalWS;
				Out_Shader4_g118145 = Data4_g118145.Shader;
				Out_Emissive4_g118145= Data4_g118145.Emissive;
				Out_MultiMask4_g118145 = Data4_g118145.MultiMask;
				Out_Grayscale4_g118145 = Data4_g118145.Grayscale;
				Out_Luminosity4_g118145= Data4_g118145.Luminosity;
				Out_AlphaClip4_g118145 = Data4_g118145.AlphaClip;
				Out_AlphaFade4_g118145 = Data4_g118145.AlphaFade;
				Out_Translucency4_g118145 = Data4_g118145.Translucency;
				Out_Transmission4_g118145 = Data4_g118145.Transmission;
				Out_Thickness4_g118145 = Data4_g118145.Thickness;
				Out_Diffusion4_g118145 = Data4_g118145.Diffusion;
				float3 In_Albedo3_g118135 = Out_Albedo4_g118145;
				float3 In_AlbedoRaw3_g118135 = Out_AlbedoRaw4_g118145;
				float2 In_NormalTS3_g118135 = Out_NormalTS4_g118145;
				float3 In_NormalWS3_g118135 = Out_NormalWS4_g118145;
				float4 In_Shader3_g118135 = Out_Shader4_g118145;
				float4 In_Emissive3_g118135 = Out_Emissive4_g118145;
				float In_Grayscale3_g118135 = Out_Grayscale4_g118145;
				float In_Luminosity3_g118135 = Out_Luminosity4_g118145;
				float temp_output_836_11_g118134 = Out_MultiMask4_g118145;
				float In_MultiMask3_g118135 = temp_output_836_11_g118134;
				half Visual_AlphaClip667_g118134 = Out_AlphaClip4_g118145;
				half Input_True57_g118142 = Visual_AlphaClip667_g118134;
				half True36_g118142 = Input_True57_g118142;
				TVEGlobalData Data15_g118144 = Data204_g117810;
				float Out_Dummy15_g118144 = 0;
				float4 Out_CoatParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118144 = float4( 0,0,0,0 );
				Out_Dummy15_g118144 = Data15_g118144.Dummy;
				Out_CoatParams15_g118144 = Data15_g118144.CoatParams;
				Out_PaintParams15_g118144 = Data15_g118144.PaintParams;
				Out_GlowParams15_g118144 = Data15_g118144.GlowParams;
				Out_AtmoParams15_g118144= Data15_g118144.AtmoParams;
				Out_FadeParams15_g118144= Data15_g118144.FadeParams;
				Out_FormParams15_g118144 = Data15_g118144.FormParams;
				Out_LandParams15_g118144 = Data15_g118144.LandParams;
				Out_WindParams15_g118144 = Data15_g118144.WindParams;
				Out_PushParams15_g118144 = Data15_g118144.PushParams;
				half4 Global_FadeParams516_g118134 = Out_FadeParams15_g118144;
				#ifdef TVE_CUTOUT_ELEMENT
				float staticSwitch663_g118134 = saturate( (Global_FadeParams516_g118134).w );
				#else
				float staticSwitch663_g118134 = 1.0;
				#endif
				half Local_GlobalMask429_g118134 = staticSwitch663_g118134;
				half Local_AlphaMask814_g118134 = 1.0;
				half Local_NoiseMask678_g118134 = 1.0;
				half Local_VertMask766_g118134 = 1.0;
				half Local_MultiMask685_g118134 = 1.0;
				float lerpResult728_g118134 = lerp( Visual_AlphaClip667_g118134 , min( Visual_AlphaClip667_g118134 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g118134 ) - ( Local_AlphaMask814_g118134 * Local_NoiseMask678_g118134 * Local_VertMask766_g118134 ) ) ) ) , Local_MultiMask685_g118134);
				half Local_AlphaClip784_g118134 = lerpResult728_g118134;
				half Input_False58_g118142 = Local_AlphaClip784_g118134;
				half False36_g118142 = Input_False58_g118142;
				half localShadowPassCheck36_g118142 = ShadowPassCheck36_g118142( True36_g118142 , False36_g118142 );
				#ifdef TVE_CUTOUT_SHADOW
				float staticSwitch791_g118134 = Local_AlphaClip784_g118134;
				#else
				float staticSwitch791_g118134 = localShadowPassCheck36_g118142;
				#endif
				float temp_output_6_0_g118143 = staticSwitch791_g118134;
				#ifdef TVE_REGISTER
				float staticSwitch14_g118143 = ( temp_output_6_0_g118143 + ( _CutoutShadowMode * 0.0 ) );
				#else
				float staticSwitch14_g118143 = temp_output_6_0_g118143;
				#endif
				float temp_output_798_0_g118134 = staticSwitch14_g118143;
				#ifdef TVE_CUTOUT
				float staticSwitch577_g118134 = temp_output_798_0_g118134;
				#else
				float staticSwitch577_g118134 = Visual_AlphaClip667_g118134;
				#endif
				half Final_AlphaClip795_g118134 = staticSwitch577_g118134;
				float In_AlphaClip3_g118135 = Final_AlphaClip795_g118134;
				float In_AlphaFade3_g118135 = Out_AlphaFade4_g118145;
				float3 In_Translucency3_g118135 = Out_Translucency4_g118145;
				float In_Transmission3_g118135 = Out_Transmission4_g118145;
				float In_Thickness3_g118135 = Out_Thickness4_g118145;
				float In_Diffusion3_g118135 = Out_Diffusion4_g118145;
				Data3_g118135.Dummy = In_Dummy3_g118135;
				Data3_g118135.Albedo = In_Albedo3_g118135;
				Data3_g118135.AlbedoRaw = In_AlbedoRaw3_g118135;
				Data3_g118135.NormalTS = In_NormalTS3_g118135;
				Data3_g118135.NormalWS = In_NormalWS3_g118135;
				Data3_g118135.Shader = In_Shader3_g118135;
				Data3_g118135.Emissive= In_Emissive3_g118135;
				Data3_g118135.MultiMask = In_MultiMask3_g118135;
				Data3_g118135.Grayscale = In_Grayscale3_g118135;
				Data3_g118135.Luminosity = In_Luminosity3_g118135;
				Data3_g118135.AlphaClip = In_AlphaClip3_g118135;
				Data3_g118135.AlphaFade = In_AlphaFade3_g118135;
				Data3_g118135.Translucency = In_Translucency3_g118135;
				Data3_g118135.Transmission = In_Transmission3_g118135;
				Data3_g118135.Thickness = In_Thickness3_g118135;
				Data3_g118135.Diffusion = In_Diffusion3_g118135;
				TVEVisualData Data4_g118158 = Data3_g118135;
				float Out_Dummy4_g118158 = 0;
				float3 Out_Albedo4_g118158 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118158 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118158 = float2( 0,0 );
				float3 Out_NormalWS4_g118158 = float3( 0,0,0 );
				float4 Out_Shader4_g118158 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118158 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118158 = 0;
				float Out_Grayscale4_g118158 = 0;
				float Out_Luminosity4_g118158 = 0;
				float Out_AlphaClip4_g118158 = 0;
				float Out_AlphaFade4_g118158 = 0;
				float3 Out_Translucency4_g118158 = float3( 0,0,0 );
				float Out_Transmission4_g118158 = 0;
				float Out_Thickness4_g118158 = 0;
				float Out_Diffusion4_g118158 = 0;
				Out_Dummy4_g118158 = Data4_g118158.Dummy;
				Out_Albedo4_g118158 = Data4_g118158.Albedo;
				Out_AlbedoRaw4_g118158 = Data4_g118158.AlbedoRaw;
				Out_NormalTS4_g118158 = Data4_g118158.NormalTS;
				Out_NormalWS4_g118158 = Data4_g118158.NormalWS;
				Out_Shader4_g118158 = Data4_g118158.Shader;
				Out_Emissive4_g118158= Data4_g118158.Emissive;
				Out_MultiMask4_g118158 = Data4_g118158.MultiMask;
				Out_Grayscale4_g118158 = Data4_g118158.Grayscale;
				Out_Luminosity4_g118158= Data4_g118158.Luminosity;
				Out_AlphaClip4_g118158 = Data4_g118158.AlphaClip;
				Out_AlphaFade4_g118158 = Data4_g118158.AlphaFade;
				Out_Translucency4_g118158 = Data4_g118158.Translucency;
				Out_Transmission4_g118158 = Data4_g118158.Transmission;
				Out_Thickness4_g118158 = Data4_g118158.Thickness;
				Out_Diffusion4_g118158 = Data4_g118158.Diffusion;
				float3 appendResult23_g118154 = (float3(Out_NormalTS4_g118158 , 1.0));
				
				float4 break24_g118154 = Out_Shader4_g118158;
				
				float localCustomAlphaClip19_g118160 = ( 0.0 );
				float temp_output_3_0_g118160 = Out_AlphaClip4_g118158;
				float Alpha19_g118160 = temp_output_3_0_g118160;
				float temp_output_15_0_g118160 = 0.5;
				float Treshold19_g118160 = temp_output_15_0_g118160;
				#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_DITHER)
				#if defined ( TVE_PIPELINE_HD)
				#if !defined(SHADERPASS_FORWARD_BYPASS_ALPHA_TEST) && !defined(SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST)
				clip(Alpha19_g118160 - Treshold19_g118160);
				#endif
				#else
				clip(Alpha19_g118160 - Treshold19_g118160);
				#endif
				#endif
				
				surfaceDescription.Normal = appendResult23_g118154;
				surfaceDescription.Smoothness = break24_g118154.w;
				surfaceDescription.Alpha = Alpha19_g118160;

				#ifdef _ALPHATEST_ON
				surfaceDescription.AlphaClipThreshold = _AlphaCutoff;
				#endif

				#ifdef _DEPTHOFFSET_ON
				surfaceDescription.DepthOffset = 0;
				#endif

				SurfaceData surfaceData;
				BuiltinData builtinData;
				GetSurfaceAndBuiltinData(surfaceDescription, input, V, posInput, surfaceData, builtinData);

                #if defined(_DEPTHOFFSET_ON) && !defined(SCENEPICKINGPASS)
				outputDepth = posInput.deviceDepth;
				#endif

                #if SHADERPASS == SHADERPASS_SHADOWS
                float bias = max(abs(ddx(posInput.deviceDepth)), abs(ddy(posInput.deviceDepth))) * _SlopeScaleDepthBias;
                outputDepth += bias;
                #endif

				#ifdef SCENESELECTIONPASS
    				outColor = float4(_ObjectId, _PassValue, 1.0, 1.0);
				#elif defined(SCENEPICKINGPASS)
    				outColor = unity_SelectionID;
				#else
    				#ifdef WRITE_MSAA_DEPTH
    				depthColor = packedInput.positionCS.z;
    				depthColor.a = SharpenAlpha(builtinData.opacity, builtinData.alphaClipTreshold);
    				#endif

    				#if defined(WRITE_NORMAL_BUFFER)
    				EncodeIntoNormalBuffer(ConvertSurfaceDataToNormalData(surfaceData), outNormalBuffer);
    				#endif

    				#if (defined(WRITE_DECAL_BUFFER) && !defined(_DISABLE_DECALS)) || defined(WRITE_RENDERING_LAYER)
    				DecalPrepassData decalPrepassData;
                    #ifdef _DISABLE_DECALS
				    ZERO_INITIALIZE(DecalPrepassData, decalPrepassData);
                    #else
    				decalPrepassData.geomNormalWS = surfaceData.geomNormalWS;
                    #endif
    				decalPrepassData.renderingLayerMask = GetMeshRenderingLayerMask();
    				EncodeIntoDecalPrepassBuffer(decalPrepassData, outDecalBuffer);
    				#endif

				#endif // SCENESELECTIONPASS

			}

			ENDHLSL
		}

		UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
	UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"

		Pass
		{
			
			Name "Forward"
			Tags { "LightMode"="Forward" }

			Blend [_SrcBlend] [_DstBlend], [_AlphaSrcBlend] [_AlphaDstBlend]
			Blend 1 SrcAlpha OneMinusSrcAlpha
			Blend 2 One [_DstBlend2]
			Blend 3 One [_DstBlend2]
			Blend 4 One OneMinusSrcAlpha

			Cull [_CullModeForward]
			ZTest [_ZTestDepthEqualForOpaque]
			ZWrite [_ZWrite]

			Stencil
			{
				Ref [_StencilRef]
				WriteMask [_StencilWriteMask]
				Comp Always
				Pass Replace
			}


            ColorMask [_ColorMaskTransparentVelOne] 1
            ColorMask [_ColorMaskTransparentVelTwo] 2

			HLSLPROGRAM
			#define _ENERGY_CONSERVING_SPECULAR 1
			#define SUPPORT_BLENDMODE_PRESERVE_SPECULAR_LIGHTING
			#pragma shader_feature_local_fragment _ _DISABLE_DECALS
			#define _SPECULAR_OCCLUSION_FROM_AO 1
			#define ASE_ABSOLUTE_VERTEX_POS 1
			#define _MATERIAL_FEATURE_SPECULAR_COLOR 1
			#define _AMBIENT_OCCLUSION 1
			#define HAVE_MESH_MODIFICATION
			#define ASE_SRP_VERSION 170003
			#define ASE_USING_SAMPLING_MACROS 1

			#pragma multi_compile _ DOTS_INSTANCING_ON

            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
            #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC _TRANSPARENT_REFRACTIVE_SORT
            #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT

            #pragma multi_compile_fragment _ SHADOWS_SHADOWMASK
            #pragma multi_compile_fragment PUNCTUAL_SHADOW_LOW PUNCTUAL_SHADOW_MEDIUM PUNCTUAL_SHADOW_HIGH
            #pragma multi_compile_fragment DIRECTIONAL_SHADOW_LOW DIRECTIONAL_SHADOW_MEDIUM DIRECTIONAL_SHADOW_HIGH
            #pragma multi_compile_fragment AREA_SHADOW_MEDIUM AREA_SHADOW_HIGH
            #pragma multi_compile_fragment _ PROBE_VOLUMES_L1 PROBE_VOLUMES_L2
            #pragma multi_compile_fragment SCREEN_SPACE_SHADOWS_OFF SCREEN_SPACE_SHADOWS_ON
            #pragma multi_compile_fragment USE_FPTL_LIGHTLIST USE_CLUSTERED_LIGHTLIST

            #pragma multi_compile _ DEBUG_DISPLAY
            #pragma multi_compile _ LIGHTMAP_ON
            #pragma multi_compile _ DIRLIGHTMAP_COMBINED
            #pragma multi_compile _ DYNAMICLIGHTMAP_ON
            #pragma multi_compile_fragment DECALS_OFF DECALS_3RT DECALS_4RT
            #pragma multi_compile_fragment _ DECAL_SURFACE_GRADIENT
            #pragma multi_compile _ USE_LEGACY_LIGHTMAPS

			#ifndef SHADER_STAGE_FRAGMENT
			#define SHADOW_LOW
			#define USE_FPTL_LIGHTLIST
			#endif

			#pragma vertex Vert
			#pragma fragment Frag

			#define SHADERPASS SHADERPASS_FORWARD
		    #define HAS_LIGHTLOOP 1

			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/DebugMipmapStreamingMacros.hlsl"
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl"

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"

            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
                #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif

            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
                #define RAYTRACING_SHADER_GRAPH_LOW
            #endif

            #ifndef SHADER_UNLIT
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif

			#if defined(_DOUBLESIDED_ON) && !defined(ASE_NEED_CULLFACE)
			    #define ASE_NEED_CULLFACE 1
			#endif

            #if _MATERIAL_FEATURE_COLORED_TRANSMISSION
            #undef _MATERIAL_FEATURE_CLEAR_COAT
            #endif

		    #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
			#define OUTPUT_SPLIT_LIGHTING
		    #endif

		    #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
			#undef  _REFRACTION_PLANE
			#undef  _REFRACTION_SPHERE
			#define _REFRACTION_THIN
		    #endif

            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif

            #if SHADERPASS == SHADERPASS_MOTION_VECTORS && defined(WRITE_DECAL_BUFFER_AND_RENDERING_LAYER)
                #define WRITE_DECAL_BUFFER
            #endif

            #ifndef DEBUG_DISPLAY
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif

            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            #if (defined(_TRANSPARENT_WRITES_MOTION_VEC) || defined(_TRANSPARENT_REFRACTIVE_SORT)) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif

			CBUFFER_START( UnityPerMaterial )
			half4 _TerrainShaderMax13;
			half4 _TerrainCoord8;
			half4 _TerrainShaderMin8;
			half4 _TerrainShaderMax8;
			half4 _TerrainCoord9;
			half4 _TerrainShaderMin9;
			half4 _TerrainShaderMax9;
			half4 _TerrainCoord10;
			half4 _TerrainShaderMax7;
			half4 _TerrainShaderMin10;
			half4 _TerrainCoord11;
			half4 _TerrainShaderMin11;
			half4 _TerrainShaderMax11;
			half4 _TerrainCoord12;
			half4 _TerrainShaderMin12;
			half4 _TerrainShaderMax12;
			half4 _TerrainCoord13;
			half4 _TerrainShaderMax10;
			half4 _TerrainShaderMin13;
			half4 _TerrainShaderMin7;
			half4 _TerrainShaderMax6;
			half4 _TerrainShaderMin1;
			half4 _TerrainShaderMax1;
			half4 _TerrainCoord2;
			half4 _TerrainShaderMin2;
			half4 _TerrainShaderMax2;
			half4 _TerrainCoord3;
			half4 _TerrainShaderMin3;
			half4 _TerrainCoord7;
			half4 _TerrainShaderMax3;
			half4 _TerrainShaderMin4;
			half4 _TerrainShaderMax4;
			half4 _TerrainCoord5;
			half4 _TerrainShaderMin5;
			half4 _TerrainShaderMax5;
			half4 _TerrainCoord6;
			half4 _TerrainShaderMin6;
			half4 _TerrainCoord4;
			half4 _TerrainCoord1;
			half4 _TerrainParams15;
			half4 _TerrainShaderMin14;
			half4 _TerrainColor13;
			half4 _TerrainColor14;
			half4 _TerrainColor15;
			half4 _TerrainColor16;
			half4 _TerrainColor;
			half4 _TerrainParams1;
			half4 _TerrainParams2;
			half4 _TerrainColor12;
			half4 _TerrainParams3;
			half4 _TerrainParams5;
			half4 _TerrainParams6;
			half4 _TerrainParams7;
			half4 _TerrainParams8;
			half4 _TerrainParams9;
			half4 _TerrainParams10;
			half4 _TerrainParams11;
			half4 _TerrainParams4;
			half4 _TerrainCoord14;
			half4 _TerrainColor11;
			half4 _TerrainColor9;
			half4 _TerrainShaderMax14;
			half4 _TerrainCoord15;
			half4 _TerrainShaderMin15;
			half4 _TerrainShaderMax15;
			half4 _TerrainCoord16;
			half4 _TerrainShaderMin16;
			half4 _TerrainShaderMax16;
			half4 _TerrainColor10;
			half4 _TerrainParams14;
			half4 _TerrainColor2;
			half4 _TerrainColor3;
			half4 _TerrainColor4;
			half4 _TerrainColor5;
			half4 _TerrainColor6;
			half4 _TerrainColor7;
			half4 _TerrainColor8;
			half4 _TerrainColor1;
			half4 _TerrainParams12;
			float4 _TerrainControlTex1_TexelSize;
			half4 _TerrainPosition;
			float4 _TintingColor;
			half4 _TintingLumaRemap;
			half4 _TintingBlendRemap;
			float4 _DrynessColor;
			half4 _DrynessLumaRemap;
			half4 _DrynessBlendRemap;
			half4 _TerrainSize;
			half4 _OverlayColor;
			half4 _overlay_coord_value;
			half4 _OverlayCoordValue;
			half4 _OverlayGlitterColor;
			half4 _OverlayProjRemap;
			half4 _OverlayLumaRemap;
			half4 _OverlayBlendRemap1;
			half4 _WetnessWaterColor;
			half4 _WetnessWaterBlendRemap;
			half4 _EmissiveColor;
			half4 _TerrainSpecular16;
			half4 _TerrainSpecular15;
			half4 _object_phase_mode;
			half4 _TerrainSpecular13;
			half4 _TerrainParams16;
			half4 _TerrainSpecular1;
			half4 _TerrainSpecular14;
			half4 _TerrainSpecular2;
			half4 _TerrainSpecular3;
			half4 _TerrainSpecular4;
			half4 _TerrainSpecular5;
			half4 _TerrainSpecular6;
			half4 _TerrainSpecular7;
			half4 _TerrainSpecular8;
			half4 _TerrainParams13;
			half4 _TerrainSpecular10;
			half4 _TerrainSpecular12;
			half4 _TerrainSpecular11;
			half4 _TerrainSpecular9;
			half _DrynessIntensityValue;
			half _OverlaySubsurfaceValue;
			half _TerrainMetallicValue;
			half _WetnessWaterIntensityValue;
			half _WetnessIntensityValue;
			half _WetnessWaterBaseValue;
			half _TerrainNormalValue;
			half _WetnessContrastValue;
			half _WetnessDropsTillingValue;
			half _WetnessDropsNormalValue;
			half _WetnessDropsDistValue;
			half _WetnessSmoothnessValue;
			half _EmissiveIntensityValue;
			half _TintingElementMode;
			half _EmissiveColorMode;
			float _emissive_power_value;
			half _EmissiveExposureValue;
			half _CutoutIntensityValue;
			half _WetnessDropsIntensityValue;
			half _OverlaySmoothnessValue;
			half _OverlayLumaValue;
			half _TerrainOcclusionValue;
			half _DrynessMultiValue;
			half _DrynessShiftValue;
			half _DrynessLumaValue;
			half _DrynessGrayValue;
			half _DrynessSmoothnessValue;
			half _DrynessSubsurfaceValue;
			half _TintingLumaValue;
			half _OverlaySampleMode;
			half _OverlayNormalValue;
			half _OverlayCoordMode;
			half _OverlayTextureMode;
			half _OverlayGlitterIntensityValue;
			half _TintingIntensityValue;
			half _OverlayGlitterDistValue;
			half _OverlayIntensityValue;
			half _TintingGrayValue;
			half _OverlayProjValue;
			half _TerrainSmoothnessValue;
			half _TintingMultiValue;
			half _OverlayGlitterTillingValue;
			half _TerrainLayersMode;
			half _CutoutShadowMode;
			half _RenderEnd;
			half _IsTVEShader;
			half _IsCustomShader;
			half _IsShared;
			half _HasDefaultTextures;
			half _IsCollected;
			half _IsConverted;
			half _IsIdentifier;
			half _RenderDecals;
			half _RenderSSR;
			half _RenderClip;
			half _IsVersion;
			half _RenderShadow;
			half _RenderFilter;
			half _LandscapeCategory;
			half _RenderCategory;
			half _IsStandardShader;
			half _IsTerrainShader;
			half _TerrainTextureMode;
			half _TerrainSampleMode1;
			half _TerrainSampleMode2;
			half _TerrainSampleMode3;
			half _TerrainSampleMode4;
			half _TerrainSampleMode5;
			half _TerrainSampleMode6;
			half _TerrainSampleMode7;
			half _LandscapeEnd;
			half _TerrainSampleMode8;
			half _TerrainSampleMode10;
			half _TerrainSampleMode11;
			half _TerrainSampleMode12;
			half _TerrainSampleMode13;
			half _TerrainSampleMode14;
			half _TerrainSampleMode15;
			half _TerrainSampleMode16;
			half _TerrainSampleMode9;
			half _LandscapeInfo;
			half _GlobalCategory;
			half _GlobalEnd;
			half _OverlayCategory;
			half _OverlayEnd;
			half _OverlaySpace;
			half _OverlayElementMode;
			half _OverlayBakeInfo;
			half _DrynessCategory;
			half _DrynessEnd;
			half _WetnessBakeInfo;
			half _DrynessSpace;
			half _DrynessBakeInfo;
			half _TintingCategory;
			half _TintingEnd;
			half _TintingSpace;
			half _TintingBakeInfo;
			half _CategoryTerrain;
			half _EndTerrain;
			half _DrynessElementMode;
			half _TerrainHeightBlendValue;
			half _WetnessElementMode;
			half _WetnessCategory;
			half _GlobalPaintLayerValue;
			half _GlobalGlowLayerValue;
			half _GlobalAtmoLayerValue;
			half _GlobalFadeLayerValue;
			half _GlobalLandLayerValue;
			half _LandscapeHeightValue;
			half _CutoutCategory;
			half _WetnessEnd;
			half _CutoutEnd;
			half _CutoutBakeInfo;
			half _EmissiveCategory;
			half _EmissiveEnd;
			half _EmissivePowerMode;
			half _EmissivePowerValue;
			half _EmissiveElementMode;
			half _EmissiveFlagMode;
			half _CutoutElementMode;
			half _RenderSpecular;
			float4 _EmissionColor;
			float _AlphaCutoff;
			float _RenderQueueType;
			#ifdef _ADD_PRECOMPUTED_VELOCITY
			    float _AddPrecomputedVelocity;
			#endif
			float _StencilRef;
			float _StencilWriteMask;
			float _StencilRefDepth;
			float _StencilWriteMaskDepth;
			float _StencilRefMV;
			float _StencilWriteMaskMV;
			float _StencilRefDistortionVec;
			float _StencilWriteMaskDistortionVec;
			float _StencilWriteMaskGBuffer;
			float _StencilRefGBuffer;
			float _ZTestGBuffer;
			float _RequireSplitLighting;
			float _ReceivesSSR;
			float _SurfaceType;
			float _BlendMode;
            #ifdef SUPPORT_BLENDMODE_PRESERVE_SPECULAR_LIGHTING
			    float _EnableBlendModePreserveSpecularLighting;
            #endif
			float _SrcBlend;
			float _DstBlend;
			float _DstBlend2;
			float _AlphaSrcBlend;
			float _AlphaDstBlend;
			float _ZWrite;
			float _TransparentZWrite;
			float _CullMode;
			float _TransparentSortPriority;
			float _EnableFogOnTransparent;
			float _CullModeForward;
			float _TransparentCullMode;
			float _ZTestDepthEqualForOpaque;
			float _ZTestTransparent;
			float _TransparentBackfaceEnable;
			float _AlphaCutoffEnable;
			float _UseShadowThreshold;
			float _DoubleSidedEnable;
			float _DoubleSidedNormalMode;
			float4 _DoubleSidedConstants;
			#ifdef ASE_TESSELLATION
			    float _TessPhongStrength;
			    float _TessValue;
			    float _TessMin;
			    float _TessMax;
			    float _TessEdgeLength;
			    float _TessMaxDisp;
			#endif
			UNITY_TEXTURE_STREAMING_DEBUG_VARS;
			CBUFFER_END

            #ifdef SCENEPICKINGPASS
			float4 _SelectionID;
            #endif

            #ifdef SCENESELECTIONPASS
			int _ObjectId;
			int _PassValue;
            #endif

			float3 TVE_WorldOrigin;
			float4x4 unity_CameraProjection;
			float4x4 unity_CameraInvProjection;
			float4x4 unity_WorldToCamera;
			float4x4 unity_CameraToWorld;
			half4 TVE_CoatParams;
			float TVE_PaintLayers[10];
			TEXTURE2D_ARRAY(TVE_PaintBaseTex);
			half4 TVE_RenderBaseCoords;
			SAMPLER(sampler_Linear_Clamp);
			TEXTURE2D_ARRAY(TVE_PaintNearTex);
			half4 TVE_RenderNearCoords;
			SAMPLER(sampler_Linear_Repeat);
			float4 TVE_RenderNearPositionR;
			half TVE_RenderNearFadeValue;
			half4 TVE_PaintParams;
			float TVE_GlowLayers[10];
			TEXTURE2D_ARRAY(TVE_GlowBaseTex);
			TEXTURE2D_ARRAY(TVE_GlowNearTex);
			half4 TVE_GlowParams;
			float TVE_AtmoLayers[10];
			TEXTURE2D_ARRAY(TVE_AtmoBaseTex);
			TEXTURE2D_ARRAY(TVE_AtmoNearTex);
			half4 TVE_AtmoParams;
			float TVE_FadeLayers[10];
			TEXTURE2D_ARRAY(TVE_FadeBaseTex);
			TEXTURE2D_ARRAY(TVE_FadeNearTex);
			half4 TVE_FadeParams;
			half4 TVE_FormParams;
			float TVE_LandLayers[10];
			TEXTURE2D_ARRAY(TVE_LandBaseTex);
			TEXTURE2D_ARRAY(TVE_LandNearTex);
			half4 TVE_LandParams;
			half4 TVE_WindParams;
			half4 TVE_PushParams;
			half TVE_IsEnabled;
			TEXTURE2D(_TerrainControlTex1);
			TEXTURE2D(_TerrainControlTex2);
			TEXTURE2D(_TerrainControlTex3);
			TEXTURE2D(_TerrainControlTex4);
			TEXTURE2D(_TerrainShaderTex1);
			SAMPLER(sampler_Point_Repeat);
			SAMPLER(sampler_Linear_Repeat_Aniso8);
			TEXTURE2D(_TerrainShaderTex2);
			TEXTURE2D(_TerrainShaderTex3);
			TEXTURE2D(_TerrainShaderTex4);
			TEXTURE2D(_TerrainShaderTex5);
			TEXTURE2D(_TerrainShaderTex6);
			TEXTURE2D(_TerrainShaderTex7);
			TEXTURE2D(_TerrainShaderTex8);
			TEXTURE2D(_TerrainShaderTex9);
			TEXTURE2D(_TerrainShaderTex10);
			TEXTURE2D(_TerrainShaderTex11);
			TEXTURE2D(_TerrainShaderTex12);
			TEXTURE2D(_TerrainShaderTex13);
			TEXTURE2D(_TerrainShaderTex14);
			TEXTURE2D(_TerrainShaderTex15);
			TEXTURE2D(_TerrainShaderTex16);
			TEXTURE2D(_TerrainAlbedoTex1);
			TEXTURE2D(_TerrainAlbedoTex2);
			TEXTURE2D(_TerrainAlbedoTex3);
			TEXTURE2D(_TerrainAlbedoTex4);
			TEXTURE2D(_TerrainAlbedoTex5);
			TEXTURE2D(_TerrainAlbedoTex6);
			TEXTURE2D(_TerrainAlbedoTex7);
			TEXTURE2D(_TerrainAlbedoTex8);
			TEXTURE2D(_TerrainAlbedoTex9);
			TEXTURE2D(_TerrainAlbedoTex10);
			TEXTURE2D(_TerrainAlbedoTex11);
			TEXTURE2D(_TerrainAlbedoTex12);
			TEXTURE2D(_TerrainAlbedoTex13);
			TEXTURE2D(_TerrainAlbedoTex14);
			TEXTURE2D(_TerrainAlbedoTex15);
			TEXTURE2D(_TerrainAlbedoTex16);
			TEXTURE2D(_TerrainNormalTex1);
			TEXTURE2D(_TerrainNormalTex2);
			TEXTURE2D(_TerrainNormalTex3);
			TEXTURE2D(_TerrainNormalTex4);
			TEXTURE2D(_TerrainNormalTex5);
			TEXTURE2D(_TerrainNormalTex6);
			TEXTURE2D(_TerrainNormalTex7);
			TEXTURE2D(_TerrainNormalTex8);
			TEXTURE2D(_TerrainNormalTex9);
			TEXTURE2D(_TerrainNormalTex10);
			TEXTURE2D(_TerrainNormalTex11);
			TEXTURE2D(_TerrainNormalTex12);
			TEXTURE2D(_TerrainNormalTex13);
			TEXTURE2D(_TerrainNormalTex14);
			TEXTURE2D(_TerrainNormalTex15);
			TEXTURE2D(_TerrainNormalTex16);
			TEXTURE2D(_TerrainHolesTex);
			TEXTURE2D(_OverlayAlbedoTex);
			TEXTURE2D(_OverlayGlitterTexRT);
			TEXTURE2D(_OverlayNormalTex);
			TEXTURE2D(_WetnessDropsTexRT);
			#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
				TEXTURE2D(_TerrainHeightmapTexture);//ASE Terrain Instancing
				TEXTURE2D( _TerrainNormalmapTexture);//ASE Terrain Instancing
				SAMPLER(sampler_TerrainNormalmapTexture);//ASE Terrain Instancing
			#endif//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_START( Terrain )//ASE Terrain Instancing
				UNITY_DEFINE_INSTANCED_PROP( float4, _TerrainPatchInstanceData )//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_END( Terrain)//ASE Terrain Instancing
			CBUFFER_START( UnityTerrain)//ASE Terrain Instancing
				#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
					float4 _TerrainHeightmapRecipSize;//ASE Terrain Instancing
					float4 _TerrainHeightmapScale;//ASE Terrain Instancing
				#endif//ASE Terrain Instancing
			CBUFFER_END//ASE Terrain Instancing


            #ifdef DEBUG_DISPLAY
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
            #endif

            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Lighting/Lighting.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Lighting/LightLoop/LightLoopDef.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Lighting/LightLoop/LightLoop.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"

            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitDecalData.hlsl"

        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif

			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/CommonLighting.hlsl"
			#define ASE_NEEDS_VERT_POSITION
			#define ASE_NEEDS_VERT_NORMAL
			#define ASE_NEEDS_VERT_TANGENT
			#define ASE_NEEDS_FRAG_RELATIVE_WORLD_POS
			#define ASE_NEEDS_FRAG_WORLD_NORMAL
			#define ASE_NEEDS_FRAG_WORLD_TANGENT
			#pragma shader_feature_local_fragment TVE_PIPELINE_STANDARD TVE_PIPELINE_UNIVERSAL TVE_PIPELINE_HD
			#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
			#pragma shader_feature_local_vertex TVE_LANDSCAPE
			#pragma shader_feature_local_fragment TVE_WETNESS
			#pragma shader_feature_local_fragment TVE_OVERLAY
			#pragma shader_feature_local_fragment TVE_DRYNESS
			#pragma shader_feature_local_fragment TVE_TINTING
			#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
			#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
			#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
			#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
			#pragma shader_feature_local_fragment TVE_DRYNESS_SHIFT
			#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
			#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
			#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_WATER
			#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
			#pragma shader_feature_local_fragment TVE_EMISSIVE
			#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
			#pragma shader_feature_local_fragment TVE_CUTOUT
			#pragma shader_feature_local_fragment TVE_CUTOUT_SHADOW
			#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
			#pragma multi_compile_instancing
			#pragma instancing_options assumeuniformscaling nomatrices nolightprobe nolightmap
			  
			struct TVEVisualData
			{  
				half Dummy;  
				half3 Albedo;
				half3 AlbedoRaw;
				half2 NormalTS;
				half3 NormalWS; 
				half4 Shader;
				half4 Emissive;
				half AlphaClip;
				half AlphaFade;
				half MultiMask;
				half Grayscale;
				half Luminosity;
				half3 Translucency;
				half Transmission;
				half Thickness;
				float Diffusion;
			};  
			    
			struct TVEModelData
			{    
				half Dummy;    
				half3 PositionOS;
				half3 PositionWS;
				half3 PositionWO;
				half3 PositionRawOS;
				half3 PositionAddOS;
				half3 PivotOS;
				half3 PivotWS;
				half3 PivotWO;
				half3 NormalOS;
				half3 NormalWS;
				half3 NormalRawOS;
				half3 NormalRawWS;
				half4 TangentOS;
				half3 ViewDirWS;
				half4 VertexData;
				half4 MotionData;
				half4 BoundsData;
				half4 RotationData;
			};    
			      
			struct TVEGlobalData
			{      
				half Dummy;      
				half4 CoatParams;
				half4 PaintParams;
				half4 GlowParams;
				half4 AtmoParams;
				half4 FadeParams;
				half4 FormParams;
				half4 LandParams;
				half4 WindParams;
				half4 PushParams;
			};      
			        
			//#pragma editor_sync_compilation


			struct AttributesMesh
			{
				float3 positionOS : POSITION;
				float3 normalOS : NORMAL;
				float4 tangentOS : TANGENT;
				float4 uv1 : TEXCOORD1;
				float4 uv2 : TEXCOORD2;
				float3 previousPositionOS : TEXCOORD4;
				float3 precomputedVelocity : TEXCOORD5;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;
				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct PackedVaryingsMeshToPS
			{
				SV_POSITION_QUALIFIERS float4 positionCS : SV_Position;
				float3 positionRWS : TEXCOORD0;
				float3 normalWS : TEXCOORD1;
				float4 tangentWS : TEXCOORD2;
				float4 uv1 : TEXCOORD3;
				float4 uv2 : TEXCOORD4;
				#ifdef _WRITE_TRANSPARENT_MOTION_VECTOR
					float3 vpassPositionCS : TEXCOORD5;
					float3 vpassPreviousPositionCS : TEXCOORD6;
				#endif
				float4 ase_texcoord7 : TEXCOORD7;
				float4 ase_texcoord8 : TEXCOORD8;
				float4 ase_color : COLOR;
				float4 ase_texcoord9 : TEXCOORD9;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				UNITY_VERTEX_OUTPUT_STEREO
				#if defined(SHADER_STAGE_FRAGMENT) && defined(ASE_NEED_CULLFACE)
				FRONT_FACE_TYPE cullFace : FRONT_FACE_SEMANTIC;
				#endif
			};

			float3 ObjectPosition_UNITY_MATRIX_M(  )
			{
				return float3(UNITY_MATRIX_M[0].w, UNITY_MATRIX_M[1].w, UNITY_MATRIX_M[2].w );
			}
			
			void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
			{
				ZX = WorldPosition.xz * Coords.xx - Coords.zz;
				ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
				XY = WorldPosition.xy * Coords.xy - Coords.zw;
			}
			
			half4 SamplePlanar2D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
			{
				half3 powNormal = abs( WorldNormal.xyz );
				half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
				weights /= ( weights.x + weights.y + weights.z ).xxx;
				T1 = weights.y;
				T2 = weights.x;
				T3 = weights.z;
			}
			
			half4 SamplePlanar3D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
				half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
				half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
				return tex1 * T1 + tex2 * T2 + tex3 * T3;
			}
			
			void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
			{
				half2 vertex1, vertex2, vertex3;
				// Scaling of the input
				half2 uv = UV * 3.464; // 2 * sqrt (3)
				// Skew input space into simplex triangle grid
				const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
				half2 skewedCoord = mul( gridToSkewedGrid, uv );
				// Compute local triangle vertex IDs and local barycentric coordinates
				int2 baseId = int2( floor( skewedCoord ) );
				half3 temp = half3( frac( skewedCoord ), 0 );
				temp.z = 1.0 - temp.x - temp.y;
				if ( temp.z > 0.0 )
				{
					W1 = temp.z;
					W2 = temp.y;
					W3 = temp.x;
					vertex1 = baseId;
					vertex2 = baseId + int2( 0, 1 );
					vertex3 = baseId + int2( 1, 0 );
				}
				else
				{
					W1 = -temp.z;
					W2 = 1.0 - temp.y;
					W3 = 1.0 - temp.x;
					vertex1 = baseId + int2( 1, 1 );
					vertex2 = baseId + int2( 1, 0 );
					vertex3 = baseId + int2( 0, 1 );
				}
				UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
				UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
				UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
				return;
			}
			
			float4 SampleStochastic2D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
				half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
				half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
				half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
				return tex1 * W1 + tex2 * W2 + tex3 * W3;
			}
			
			half4 SampleStochastic3D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				half4 tex1, tex2, tex3;
				ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
				half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
				half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
				half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				return texZX * T1 + texZY * T2 + texXY * T3;
			}
			
			half3 HSVToRGB( half3 c )
			{
				half4 K = half4( 1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0 );
				half3 p = abs( frac( c.xxx + K.xyz ) * 6.0 - K.www );
				return c.z * lerp( K.xxx, saturate( p - K.xxx ), c.y );
			}
			
			half3 RGBToHSV(half3 c)
			{
				half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
				half4 p = lerp( half4( c.bg, K.wz ), half4( c.gb, K.xy ), step( c.b, c.g ) );
				half4 q = lerp( half4( p.xyw, c.r ), half4( c.r, p.yzx ), step( p.x, c.r ) );
				half d = q.x - min( q.w, q.y );
				half e = 1.0e-10;
				return half3( abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
			}
			float3 ASEGetEmissionHDRColor(float3 ldrColor, float luminanceIntensity, float exposureWeight, float inverseCurrentExposureMultiplier)
			{
				float3 hdrColor = ldrColor * luminanceIntensity;
				hdrColor = lerp( hdrColor* inverseCurrentExposureMultiplier, hdrColor, exposureWeight);
				return hdrColor;
			}
			
			half ShadowPassCheck36_g118142( half True, half False )
			{
				half result;
				#if defined(SHADERPASS) && (SHADERPASS  == SHADERPASS_SHADOWS)
					result = True;
				#else
					result = False;
				#endif
				return result;
			}
			
			AttributesMesh ApplyMeshModification( AttributesMesh inputMesh )
			{
			#ifdef UNITY_INSTANCING_ENABLED
				float2 patchVertex = inputMesh.positionOS.xy;
				float4 instanceData = UNITY_ACCESS_INSTANCED_PROP( Terrain, _TerrainPatchInstanceData );
				float2 sampleCoords = ( patchVertex.xy + instanceData.xy ) * instanceData.z;
				float height = UnpackHeightmap( _TerrainHeightmapTexture.Load( int3( sampleCoords, 0 ) ) );
				inputMesh.positionOS.xz = sampleCoords* _TerrainHeightmapScale.xz;
				inputMesh.positionOS.y = height* _TerrainHeightmapScale.y;
				#ifdef ENABLE_TERRAIN_PERPIXEL_NORMAL
					inputMesh.normalOS = float3(0, 1, 0);
				#else
					inputMesh.normalOS = _TerrainNormalmapTexture.Load(int3(sampleCoords, 0)).rgb* 2 - 1;
				#endif
				inputMesh.ase_texcoord.xy = sampleCoords* _TerrainHeightmapRecipSize.zw;
			#endif
				return inputMesh;
			}
			

			void BuildSurfaceData(FragInputs fragInputs, inout GlobalSurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
			{
				ZERO_INITIALIZE(SurfaceData, surfaceData);
				surfaceData.specularOcclusion = 1.0;
				surfaceData.thickness = 0.0;

				surfaceData.baseColor =                 surfaceDescription.BaseColor;
				surfaceData.perceptualSmoothness =		surfaceDescription.Smoothness;
				surfaceData.ambientOcclusion =			surfaceDescription.Occlusion;
				surfaceData.metallic =					surfaceDescription.Metallic;
				surfaceData.coatMask =					surfaceDescription.CoatMask;

				#ifdef _SPECULAR_OCCLUSION_CUSTOM
				surfaceData.specularOcclusion =			surfaceDescription.SpecularOcclusion;
				#endif

				#ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
				surfaceData.subsurfaceMask =			surfaceDescription.SubsurfaceMask;
				#endif

				#if defined(_HAS_REFRACTION) || defined(_MATERIAL_FEATURE_TRANSMISSION)
				surfaceData.thickness = 				surfaceDescription.Thickness;
				#endif

				#ifdef _MATERIAL_FEATURE_TRANSMISSION
				surfaceData.transmissionMask =			surfaceDescription.TransmissionMask;
				#endif

				#if defined( _MATERIAL_FEATURE_SUBSURFACE_SCATTERING ) || defined( _MATERIAL_FEATURE_TRANSMISSION )
				surfaceData.diffusionProfileHash =		asuint(surfaceDescription.DiffusionProfile);
				#endif

				#ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
				surfaceData.specularColor =				surfaceDescription.Specular;
				#endif

				#ifdef _MATERIAL_FEATURE_ANISOTROPY
				surfaceData.anisotropy =				surfaceDescription.Anisotropy;
				#endif

				#ifdef _MATERIAL_FEATURE_IRIDESCENCE
				surfaceData.iridescenceMask =			surfaceDescription.IridescenceMask;
				surfaceData.iridescenceThickness =		surfaceDescription.IridescenceThickness;
				#endif

				// refraction
                #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                    if (_EnableSSRefraction)
                    {
                        surfaceData.ior =                       surfaceDescription.RefractionIndex;
                        surfaceData.transmittanceColor =        surfaceDescription.RefractionColor;
                        surfaceData.atDistance =                surfaceDescription.RefractionDistance;
        
                        surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                        surfaceDescription.Alpha = 1.0;
                    }
                    else
                    {
                        surfaceData.ior = 1.0;
                        surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                        surfaceData.atDistance = 1.0;
                        surfaceData.transmittanceMask = 0.0;
                        surfaceDescription.Alpha = 1.0;
                    }
                #else
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                #endif

				surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;

				#ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
				#endif

				#ifdef _MATERIAL_FEATURE_TRANSMISSION
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
				#endif

				#ifdef _MATERIAL_FEATURE_COLORED_TRANSMISSION
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_COLORED_TRANSMISSION;
				#endif

                #ifdef _MATERIAL_FEATURE_ANISOTROPY
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
                    surfaceData.normalWS = float3(0, 1, 0);
                #endif

				#ifdef _MATERIAL_FEATURE_CLEAR_COAT
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
				#endif

				#ifdef _MATERIAL_FEATURE_IRIDESCENCE
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
				#endif

				#ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                    surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
				#endif

				#if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                    surfaceData.baseColor *= ( 1.0 - Max3( surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b ) );
				#endif

				#ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
				#else
                    float3 doubleSidedConstants = float3( 1.0, 1.0, 1.0 );
				#endif

				float3 normalTS = float3(0.0f, 0.0f, 1.0f);
				normalTS = surfaceDescription.Normal;

                #ifdef DECAL_NORMAL_BLENDING
					normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(normalTS, fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);

                    #if HAVE_DECALS
                    if (_EnableDecals)
                    {
                        float alpha = 1.0;
                        alpha = surfaceDescription.Alpha;

                        DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                        ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                        ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
                     }
                    #endif

                    GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
                #else
					GetNormalWS(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);

                    #if HAVE_DECALS
                    if (_EnableDecals)
                    {
                        float alpha = 1.0;
                        alpha = surfaceDescription.Alpha;
        
                        DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                        ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                        ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
                    }
                    #endif
                #endif

				surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
                surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz );
                surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);

				bentNormalWS = surfaceData.normalWS;

				#ifdef ASE_BENT_NORMAL
                    GetNormalWS( fragInputs, surfaceDescription.BentNormal, bentNormalWS, doubleSidedConstants );
				#endif

				#ifdef _MATERIAL_FEATURE_ANISOTROPY
                    surfaceData.tangentWS = TransformTangentToWorld(surfaceDescription.Tangent, fragInputs.tangentToWorld);
				#endif

				#if defined(DEBUG_DISPLAY)
				    #if !defined(SHADER_STAGE_RAY_TRACING)
				    if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
				    {
					   #ifdef FRAG_INPUTS_USE_TEXCOORD0
                           surfaceData.baseColor = GET_TEXTURE_STREAMING_DEBUG(posInput.positionSS, fragInputs.texCoord0);
                       #else
                           surfaceData.baseColor = GET_TEXTURE_STREAMING_DEBUG_NO_UV(posInput.positionSS);
                       #endif
					   surfaceData.metallic = 0;
				    }
					#endif
				    ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData); 
				#endif

                #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                    surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
                #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                    surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
                #endif

                #ifdef _ENABLE_GEOMETRIC_SPECULAR_AA
                    surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
                #endif
			}

			// Get Surface And BuiltinData
			void GetSurfaceAndBuiltinData(GlobalSurfaceDescription surfaceDescription, FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData)
			{
				#ifdef LOD_FADE_CROSSFADE
                    LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
				#endif

                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif  
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants);

				#ifdef _ALPHATEST_ON
                    DoAlphaTest( surfaceDescription.Alpha, surfaceDescription.AlphaClipThreshold );
				#endif

				#ifdef _ALPHATEST_SHADOW_ON
                    DoAlphaTest( surfaceDescription.Alpha, surfaceDescription.AlphaClipThresholdShadow);
				#endif

				#ifdef _DEPTHOFFSET_ON
                    ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
				#endif

				float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], fragInputs.texCoord1, fragInputs.texCoord2, builtinData);

				#ifdef _DEPTHOFFSET_ON
                    builtinData.depthOffset = surfaceDescription.DepthOffset;
				#endif

                #ifdef _ALPHATEST_ON
                    builtinData.alphaClipTreshold = surfaceDescription.AlphaClipThreshold;
                #endif

                #ifdef UNITY_VIRTUAL_TEXTURING
                    builtinData.vtPackedFeedback = surfaceDescription.VTPackedFeedback;
                #endif

				#ifdef ASE_BAKEDGI
                    builtinData.bakeDiffuseLighting = surfaceDescription.BakedGI;
				#endif

				#ifdef ASE_BAKEDBACKGI
                    builtinData.backBakeDiffuseLighting = surfaceDescription.BakedBackGI;
				#endif

                builtinData.emissiveColor = surfaceDescription.Emission;

				PostInitBuiltinData(V, posInput, surfaceData, builtinData);
			}

			AttributesMesh ApplyMeshModification(AttributesMesh inputMesh, float3 timeParameters, inout PackedVaryingsMeshToPS outputPackedVaryingsMeshToPS )
			{
				_TimeParameters.xyz = timeParameters;
				inputMesh = ApplyMeshModification(inputMesh);
				TVEModelData Data16_g118149 = (TVEModelData)0;
				half Dummy181_g118147 = ( _LandscapeCategory + _LandscapeEnd + _LandscapeInfo );
				float In_Dummy16_g118149 = Dummy181_g118147;
				TVEModelData Data16_g117808 = (TVEModelData)0;
				half Dummy207_g117794 = 0.0;
				float In_Dummy16_g117808 = Dummy207_g117794;
				half3 PositionOS131_g117794 = inputMesh.positionOS;
				float3 In_PositionOS16_g117808 = PositionOS131_g117794;
				float3 ase_worldPos = GetAbsolutePositionWS( TransformObjectToWorld( (inputMesh.positionOS).xyz ) );
				float3 vertexToFrag73_g117794 = ase_worldPos;
				half3 PositionWS122_g117794 = vertexToFrag73_g117794;
				float3 In_PositionWS16_g117808 = PositionWS122_g117794;
				float3 localObjectPosition_UNITY_MATRIX_M14_g117796 = ObjectPosition_UNITY_MATRIX_M();
				#ifdef SHADEROPTIONS_CAMERA_RELATIVE_RENDERING
				float3 staticSwitch13_g117796 = ( localObjectPosition_UNITY_MATRIX_M14_g117796 + _WorldSpaceCameraPos );
				#else
				float3 staticSwitch13_g117796 = localObjectPosition_UNITY_MATRIX_M14_g117796;
				#endif
				half3 ObjectData20_g117798 = staticSwitch13_g117796;
				half3 WorldData19_g117798 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g117798 = WorldData19_g117798;
				#else
				float3 staticSwitch14_g117798 = ObjectData20_g117798;
				#endif
				float3 temp_output_124_0_g117796 = staticSwitch14_g117798;
				float3 temp_output_239_7_g117794 = temp_output_124_0_g117796;
				half3 PivotWS121_g117794 = temp_output_239_7_g117794;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g117794 = ( PositionWS122_g117794 - PivotWS121_g117794 );
				#else
				float3 staticSwitch204_g117794 = PositionWS122_g117794;
				#endif
				half3 PositionWO132_g117794 = ( staticSwitch204_g117794 - TVE_WorldOrigin );
				float3 In_PositionWO16_g117808 = PositionWO132_g117794;
				float3 In_PositionRawOS16_g117808 = PositionOS131_g117794;
				float3 In_PositionAddOS16_g117808 = float3( 0,0,0 );
				float3 _Vector0 = float3(0,0,0);
				half3 PivotOS149_g117794 = _Vector0;
				float3 In_PivotOS16_g117808 = PivotOS149_g117794;
				float3 In_PivotWS16_g117808 = PivotWS121_g117794;
				half3 PivotWO133_g117794 = ( PivotWS121_g117794 - TVE_WorldOrigin );
				float3 In_PivotWO16_g117808 = PivotWO133_g117794;
				half3 NormalOS134_g117794 = inputMesh.normalOS;
				float3 In_NormalOS16_g117808 = NormalOS134_g117794;
				float3 ase_worldNormal = TransformObjectToWorldNormal(inputMesh.normalOS);
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g117794 = normalizedWorldNormal;
				float3 In_NormalWS16_g117808 = Normal_WS95_g117794;
				float3 In_NormalRawOS16_g117808 = NormalOS134_g117794;
				float3 objToWorldDir298_g117794 = normalize( mul( GetObjectToWorldMatrix(), float4( inputMesh.normalOS, 0 ) ).xyz );
				half3 Normal_RawWS136_g117794 = objToWorldDir298_g117794;
				float3 In_NormalRawWS16_g117808 = Normal_RawWS136_g117794;
				half4 TangentlOS153_g117794 = inputMesh.tangentOS;
				float4 In_TangentOS16_g117808 = TangentlOS153_g117794;
				float3 normalizeResult296_g117794 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g117794 ) );
				half3 ViewDirWS169_g117794 = normalizeResult296_g117794;
				float3 In_ViewDirWS16_g117808 = ViewDirWS169_g117794;
				half4 VertexMasks171_g117794 = inputMesh.ase_color;
				float4 In_VertexData16_g117808 = VertexMasks171_g117794;
				float4 break33_g117807 = _object_phase_mode;
				float temp_output_30_0_g117807 = ( inputMesh.ase_color.r * break33_g117807.x );
				float temp_output_29_0_g117807 = ( inputMesh.ase_color.g * break33_g117807.y );
				float temp_output_31_0_g117807 = ( inputMesh.ase_color.b * break33_g117807.z );
				float temp_output_28_0_g117807 = ( temp_output_30_0_g117807 + temp_output_29_0_g117807 + temp_output_31_0_g117807 + ( inputMesh.ase_color.a * break33_g117807.w ) );
				float3 break243_g117794 = PivotWO133_g117794;
				float temp_output_315_0_g117794 = (frac( ( temp_output_28_0_g117807 + ( break243_g117794.x + break243_g117794.z ) ) )*2.0 + -1.0);
				float4 appendResult177_g117794 = (float4(1.0 , 1.0 , temp_output_315_0_g117794 , 1.0));
				half4 MotionMasks176_g117794 = appendResult177_g117794;
				float4 In_MotionData16_g117808 = MotionMasks176_g117794;
				half4 BoundsData254_g117794 = float4( 0,0,0,0 );
				float4 In_BoundsData16_g117808 = BoundsData254_g117794;
				float4 In_RotationData16_g117808 = float4( 0,0,0,0 );
				Data16_g117808.Dummy = In_Dummy16_g117808;
				Data16_g117808.PositionOS = In_PositionOS16_g117808;
				Data16_g117808.PositionWS = In_PositionWS16_g117808;
				Data16_g117808.PositionWO = In_PositionWO16_g117808;
				Data16_g117808.PositionRawOS = In_PositionRawOS16_g117808;
				Data16_g117808.PositionAddOS = In_PositionAddOS16_g117808;
				Data16_g117808.PivotOS = In_PivotOS16_g117808;
				Data16_g117808.PivotWS = In_PivotWS16_g117808;
				Data16_g117808.PivotWO = In_PivotWO16_g117808;
				Data16_g117808.NormalOS = In_NormalOS16_g117808;
				Data16_g117808.NormalWS = In_NormalWS16_g117808;
				Data16_g117808.NormalRawOS = In_NormalRawOS16_g117808;
				Data16_g117808.NormalRawWS = In_NormalRawWS16_g117808;
				Data16_g117808.TangentOS = In_TangentOS16_g117808;
				Data16_g117808.ViewDirWS = In_ViewDirWS16_g117808;
				Data16_g117808.VertexData = In_VertexData16_g117808;
				Data16_g117808.MotionData = In_MotionData16_g117808;
				Data16_g117808.BoundsData = In_BoundsData16_g117808;
				Data16_g117808.RotationData = In_RotationData16_g117808;
				TVEModelData Data15_g118148 = Data16_g117808;
				float Out_Dummy15_g118148 = 0;
				float3 Out_PositionOS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionWS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118148 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotOS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118148 = float3( 0,0,0 );
				float3 Out_NormalOS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g118148 = float3( 0,0,0 );
				float4 Out_TangentOS15_g118148 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g118148 = float3( 0,0,0 );
				float4 Out_VertexData15_g118148 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g118148 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118148 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g118148 = float4( 0,0,0,0 );
				Out_Dummy15_g118148 = Data15_g118148.Dummy;
				Out_PositionOS15_g118148 = Data15_g118148.PositionOS;
				Out_PositionWS15_g118148 = Data15_g118148.PositionWS;
				Out_PositionWO15_g118148 = Data15_g118148.PositionWO;
				Out_PositionRawOS15_g118148 = Data15_g118148.PositionRawOS;
				Out_PositionAddOS15_g118148 = Data15_g118148.PositionAddOS;
				Out_PivotOS15_g118148 = Data15_g118148.PivotOS;
				Out_PivotWS15_g118148 = Data15_g118148.PivotWS;
				Out_PivotWO15_g118148 = Data15_g118148.PivotWO;
				Out_NormalOS15_g118148 = Data15_g118148.NormalOS;
				Out_NormalWS15_g118148 = Data15_g118148.NormalWS;
				Out_NormalRawOS15_g118148 = Data15_g118148.NormalRawOS;
				Out_NormalRawWS15_g118148 = Data15_g118148.NormalRawWS;
				Out_TangentOS15_g118148 = Data15_g118148.TangentOS;
				Out_ViewDirWS15_g118148 = Data15_g118148.ViewDirWS;
				Out_VertexData15_g118148 = Data15_g118148.VertexData;
				Out_MotionData15_g118148 = Data15_g118148.MotionData;
				Out_BoundsData15_g118148 = Data15_g118148.BoundsData;
				Out_RotationData15_g118148 = Data15_g118148.RotationData;
				half3 Input_PositionOS147_g118147 = Out_PositionOS15_g118148;
				float3 break592_g118147 = Input_PositionOS147_g118147;
				float localBuildGlobalData204_g117810 = ( 0.0 );
				TVEGlobalData Data204_g117810 = (TVEGlobalData)0;
				half Dummy211_g117810 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g117810 = Dummy211_g117810;
				half4 Coat_Params302_g117810 = TVE_CoatParams;
				float4 In_CoatParams204_g117810 = Coat_Params302_g117810;
				float temp_output_82_0_g117811 = _GlobalPaintLayerValue;
				float temp_output_19_0_g117813 = TVE_PaintLayers[(int)temp_output_82_0_g117811];
				TVEModelData Data16_g117809 = (TVEModelData)0;
				float In_Dummy16_g117809 = 0.0;
				float3 In_PositionWS16_g117809 = PositionWS122_g117794;
				float3 In_PositionWO16_g117809 = PositionWO132_g117794;
				float3 In_PivotWS16_g117809 = PivotWS121_g117794;
				float3 In_PivotWO16_g117809 = PivotWO133_g117794;
				float3 In_NormalWS16_g117809 = Normal_WS95_g117794;
				float3 In_ViewDirWS16_g117809 = ViewDirWS169_g117794;
				float4 In_VertexData16_g117809 = VertexMasks171_g117794;
				float4 In_BoundsData16_g117809 = float4( 1,1,1,1 );
				Data16_g117809.Dummy = In_Dummy16_g117809;
				Data16_g117809.PositionWS = In_PositionWS16_g117809;
				Data16_g117809.PositionWO = In_PositionWO16_g117809;
				Data16_g117809.PivotWS = In_PivotWS16_g117809;
				Data16_g117809.PivotWO = In_PivotWO16_g117809;
				Data16_g117809.NormalWS = In_NormalWS16_g117809;
				Data16_g117809.ViewDirWS = In_ViewDirWS16_g117809;
				Data16_g117809.VertexData = In_VertexData16_g117809;
				Data16_g117809.BoundsData = In_BoundsData16_g117809;
				TVEModelData Data15_g117892 = Data16_g117809;
				float Out_Dummy15_g117892 = 0;
				float3 Out_PositionWS15_g117892 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117892 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117892 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g117892 = float3( 0,0,0 );
				float4 Out_VertexData15_g117892 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117892 = float4( 0,0,0,0 );
				Out_Dummy15_g117892 = Data15_g117892.Dummy;
				Out_PositionWS15_g117892 = Data15_g117892.PositionWS;
				Out_PositionWO15_g117892 = Data15_g117892.PositionWO;
				Out_PivotWS15_g117892 = Data15_g117892.PivotWS;
				Out_PivotWO15_g117892 = Data15_g117892.PivotWO;
				Out_NormalWS15_g117892 = Data15_g117892.NormalWS;
				Out_ViewDirWS15_g117892 = Data15_g117892.ViewDirWS;
				Out_VertexData15_g117892 = Data15_g117892.VertexData;
				Out_BoundsData15_g117892 = Data15_g117892.BoundsData;
				half3 Model_PositionWS143_g117810 = Out_PositionWS15_g117892;
				half3 Input_Position180_g117814 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117814 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_82_0_g117814 = temp_output_82_0_g117811;
				float2 temp_output_119_0_g117814 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_7_0_g117819 = 1.0;
				float temp_output_10_0_g117819 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117819 );
				float4 lerpResult131_g117814 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117814,temp_output_82_0_g117814, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, temp_output_119_0_g117814,temp_output_82_0_g117814, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117814 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117819 ) / temp_output_10_0_g117819 ) ));
				float4 temp_output_17_0_g117813 = lerpResult131_g117814;
				float4 temp_output_3_0_g117813 = TVE_PaintParams;
				float4 ifLocalVar18_g117813 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117813 >= 0.5 )
				ifLocalVar18_g117813 = temp_output_17_0_g117813;
				else
				ifLocalVar18_g117813 = temp_output_3_0_g117813;
				float4 lerpResult22_g117813 = lerp( temp_output_3_0_g117813 , temp_output_17_0_g117813 , temp_output_19_0_g117813);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117813 = lerpResult22_g117813;
				#else
				float4 staticSwitch24_g117813 = ifLocalVar18_g117813;
				#endif
				half4 Paint_Params71_g117810 = staticSwitch24_g117813;
				float4 In_PaintParams204_g117810 = Paint_Params71_g117810;
				float temp_output_82_0_g117829 = _GlobalGlowLayerValue;
				float temp_output_19_0_g117831 = TVE_GlowLayers[(int)temp_output_82_0_g117829];
				half3 Input_Position180_g117832 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117832 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_82_0_g117832 = temp_output_82_0_g117829;
				float2 temp_output_119_0_g117832 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_7_0_g117837 = 1.0;
				float temp_output_10_0_g117837 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117837 );
				float4 lerpResult131_g117832 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117832,temp_output_82_0_g117832, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, temp_output_119_0_g117832,temp_output_82_0_g117832, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117832 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117837 ) / temp_output_10_0_g117837 ) ));
				float4 temp_output_17_0_g117831 = lerpResult131_g117832;
				float4 temp_output_3_0_g117831 = TVE_GlowParams;
				float4 ifLocalVar18_g117831 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117831 >= 0.5 )
				ifLocalVar18_g117831 = temp_output_17_0_g117831;
				else
				ifLocalVar18_g117831 = temp_output_3_0_g117831;
				float4 lerpResult22_g117831 = lerp( temp_output_3_0_g117831 , temp_output_17_0_g117831 , temp_output_19_0_g117831);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117831 = lerpResult22_g117831;
				#else
				float4 staticSwitch24_g117831 = ifLocalVar18_g117831;
				#endif
				half4 Glow_Params248_g117810 = staticSwitch24_g117831;
				float4 In_GlowParams204_g117810 = Glow_Params248_g117810;
				float temp_output_132_0_g117874 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g117876 = TVE_AtmoLayers[(int)temp_output_132_0_g117874];
				half3 Input_Position180_g117877 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117877 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_82_0_g117877 = temp_output_132_0_g117874;
				float2 temp_output_119_0_g117877 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_7_0_g117882 = 1.0;
				float temp_output_10_0_g117882 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117882 );
				float4 lerpResult131_g117877 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117877,temp_output_82_0_g117877, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, temp_output_119_0_g117877,temp_output_82_0_g117877, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117877 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117882 ) / temp_output_10_0_g117882 ) ));
				float4 temp_output_17_0_g117876 = lerpResult131_g117877;
				float4 temp_output_3_0_g117876 = TVE_AtmoParams;
				float4 ifLocalVar18_g117876 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117876 >= 0.5 )
				ifLocalVar18_g117876 = temp_output_17_0_g117876;
				else
				ifLocalVar18_g117876 = temp_output_3_0_g117876;
				float4 lerpResult22_g117876 = lerp( temp_output_3_0_g117876 , temp_output_17_0_g117876 , temp_output_19_0_g117876);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117876 = lerpResult22_g117876;
				#else
				float4 staticSwitch24_g117876 = ifLocalVar18_g117876;
				#endif
				half4 Atmo_Params80_g117810 = staticSwitch24_g117876;
				float4 In_AtmoParams204_g117810 = Atmo_Params80_g117810;
				float temp_output_132_0_g117883 = _GlobalFadeLayerValue;
				float temp_output_19_0_g117885 = TVE_FadeLayers[(int)temp_output_132_0_g117883];
				half3 Input_Position180_g117886 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117886 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_82_0_g117886 = temp_output_132_0_g117883;
				float2 temp_output_119_0_g117886 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_7_0_g117891 = 1.0;
				float temp_output_10_0_g117891 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117891 );
				float4 lerpResult131_g117886 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117886,temp_output_82_0_g117886, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, temp_output_119_0_g117886,temp_output_82_0_g117886, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117886 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117891 ) / temp_output_10_0_g117891 ) ));
				float4 temp_output_17_0_g117885 = lerpResult131_g117886;
				float4 temp_output_3_0_g117885 = TVE_FadeParams;
				float4 ifLocalVar18_g117885 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117885 >= 0.5 )
				ifLocalVar18_g117885 = temp_output_17_0_g117885;
				else
				ifLocalVar18_g117885 = temp_output_3_0_g117885;
				float4 lerpResult22_g117885 = lerp( temp_output_3_0_g117885 , temp_output_17_0_g117885 , temp_output_19_0_g117885);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117885 = lerpResult22_g117885;
				#else
				float4 staticSwitch24_g117885 = ifLocalVar18_g117885;
				#endif
				half4 Fade_Params387_g117810 = staticSwitch24_g117885;
				float4 In_FadeParams204_g117810 = Fade_Params387_g117810;
				half4 Form_Params112_g117810 = TVE_FormParams;
				float4 In_FormParams204_g117810 = Form_Params112_g117810;
				float temp_output_130_0_g117847 = _GlobalLandLayerValue;
				float temp_output_19_0_g117849 = TVE_LandLayers[(int)temp_output_130_0_g117847];
				half3 Input_Position180_g117850 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117850 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_82_0_g117850 = temp_output_130_0_g117847;
				float2 temp_output_119_0_g117850 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_7_0_g117855 = 1.0;
				float temp_output_10_0_g117855 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117855 );
				float4 lerpResult131_g117850 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117850,temp_output_82_0_g117850, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, temp_output_119_0_g117850,temp_output_82_0_g117850, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117850 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117855 ) / temp_output_10_0_g117855 ) ));
				float4 temp_output_17_0_g117849 = lerpResult131_g117850;
				float4 temp_output_3_0_g117849 = TVE_LandParams;
				float4 ifLocalVar18_g117849 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117849 >= 0.5 )
				ifLocalVar18_g117849 = temp_output_17_0_g117849;
				else
				ifLocalVar18_g117849 = temp_output_3_0_g117849;
				float4 lerpResult22_g117849 = lerp( temp_output_3_0_g117849 , temp_output_17_0_g117849 , temp_output_19_0_g117849);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117849 = lerpResult22_g117849;
				#else
				float4 staticSwitch24_g117849 = ifLocalVar18_g117849;
				#endif
				half4 Land_Params375_g117810 = staticSwitch24_g117849;
				float4 In_LandParams204_g117810 = Land_Params375_g117810;
				half4 Wind_Params88_g117810 = TVE_WindParams;
				float4 In_WindParams204_g117810 = Wind_Params88_g117810;
				half4 Push_Params335_g117810 = TVE_PushParams;
				float4 In_PushParams204_g117810 = Push_Params335_g117810;
				Data204_g117810.Dummy = In_Dummy204_g117810;
				Data204_g117810.CoatParams = In_CoatParams204_g117810;
				Data204_g117810.PaintParams = In_PaintParams204_g117810;
				Data204_g117810.GlowParams = In_GlowParams204_g117810;
				Data204_g117810.AtmoParams = In_AtmoParams204_g117810;
				Data204_g117810.FadeParams = In_FadeParams204_g117810;
				Data204_g117810.FormParams= In_FormParams204_g117810;
				Data204_g117810.LandParams = In_LandParams204_g117810;
				Data204_g117810.WindParams = In_WindParams204_g117810;
				Data204_g117810.PushParams = In_PushParams204_g117810;
				TVEGlobalData Data15_g118150 = Data204_g117810;
				float Out_Dummy15_g118150 = 0;
				float4 Out_CoatParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118150 = float4( 0,0,0,0 );
				Out_Dummy15_g118150 = Data15_g118150.Dummy;
				Out_CoatParams15_g118150 = Data15_g118150.CoatParams;
				Out_PaintParams15_g118150 = Data15_g118150.PaintParams;
				Out_GlowParams15_g118150 = Data15_g118150.GlowParams;
				Out_AtmoParams15_g118150= Data15_g118150.AtmoParams;
				Out_FadeParams15_g118150= Data15_g118150.FadeParams;
				Out_FormParams15_g118150 = Data15_g118150.FormParams;
				Out_LandParams15_g118150 = Data15_g118150.LandParams;
				Out_WindParams15_g118150 = Data15_g118150.WindParams;
				Out_PushParams15_g118150 = Data15_g118150.PushParams;
				half4 Input_FormParams214_g118147 = Out_LandParams15_g118150;
				float temp_output_572_0_g118147 = (Input_FormParams214_g118147).z;
				float temp_output_595_0_g118147 = ( break592_g118147.y + temp_output_572_0_g118147 );
				float lerpResult604_g118147 = lerp( break592_g118147.y , temp_output_595_0_g118147 , ( _LandscapeHeightValue * TVE_IsEnabled ));
				float3 appendResult593_g118147 = (float3(break592_g118147.x , lerpResult604_g118147 , break592_g118147.z));
				#ifdef TVE_LANDSCAPE
				float3 staticSwitch575_g118147 = appendResult593_g118147;
				#else
				float3 staticSwitch575_g118147 = Input_PositionOS147_g118147;
				#endif
				half3 Final_PositionOS580_g118147 = staticSwitch575_g118147;
				float3 In_PositionOS16_g118149 = Final_PositionOS580_g118147;
				float3 In_PositionWS16_g118149 = Out_PositionWS15_g118148;
				float3 In_PositionWO16_g118149 = Out_PositionWO15_g118148;
				float3 In_PositionRawOS16_g118149 = Out_PositionRawOS15_g118148;
				float3 In_PositionAddOS16_g118149 = Out_PositionAddOS15_g118148;
				float3 In_PivotOS16_g118149 = Out_PivotOS15_g118148;
				float3 In_PivotWS16_g118149 = Out_PivotWS15_g118148;
				float3 temp_output_481_19_g118147 = Out_PivotWO15_g118148;
				float3 In_PivotWO16_g118149 = temp_output_481_19_g118147;
				float3 temp_output_481_20_g118147 = Out_NormalOS15_g118148;
				float3 In_NormalOS16_g118149 = temp_output_481_20_g118147;
				float3 In_NormalWS16_g118149 = Out_NormalWS15_g118148;
				float3 In_NormalRawOS16_g118149 = Out_NormalRawOS15_g118148;
				float3 In_NormalRawWS16_g118149 = Out_NormalRawWS15_g118148;
				float4 In_TangentOS16_g118149 = Out_TangentOS15_g118148;
				float3 In_ViewDirWS16_g118149 = Out_ViewDirWS15_g118148;
				float4 In_VertexData16_g118149 = Out_VertexData15_g118148;
				float4 In_MotionData16_g118149 = Out_MotionData15_g118148;
				float4 In_BoundsData16_g118149 = Out_BoundsData15_g118148;
				float4 In_RotationData16_g118149 = Out_RotationData15_g118148;
				Data16_g118149.Dummy = In_Dummy16_g118149;
				Data16_g118149.PositionOS = In_PositionOS16_g118149;
				Data16_g118149.PositionWS = In_PositionWS16_g118149;
				Data16_g118149.PositionWO = In_PositionWO16_g118149;
				Data16_g118149.PositionRawOS = In_PositionRawOS16_g118149;
				Data16_g118149.PositionAddOS = In_PositionAddOS16_g118149;
				Data16_g118149.PivotOS = In_PivotOS16_g118149;
				Data16_g118149.PivotWS = In_PivotWS16_g118149;
				Data16_g118149.PivotWO = In_PivotWO16_g118149;
				Data16_g118149.NormalOS = In_NormalOS16_g118149;
				Data16_g118149.NormalWS = In_NormalWS16_g118149;
				Data16_g118149.NormalRawOS = In_NormalRawOS16_g118149;
				Data16_g118149.NormalRawWS = In_NormalRawWS16_g118149;
				Data16_g118149.TangentOS = In_TangentOS16_g118149;
				Data16_g118149.ViewDirWS = In_ViewDirWS16_g118149;
				Data16_g118149.VertexData = In_VertexData16_g118149;
				Data16_g118149.MotionData = In_MotionData16_g118149;
				Data16_g118149.BoundsData = In_BoundsData16_g118149;
				Data16_g118149.RotationData = In_RotationData16_g118149;
				TVEModelData Data15_g118156 = Data16_g118149;
				float Out_Dummy15_g118156 = 0;
				float3 Out_PositionOS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionWS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118156 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotOS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118156 = float3( 0,0,0 );
				float3 Out_NormalOS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g118156 = float3( 0,0,0 );
				float4 Out_TangentOS15_g118156 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g118156 = float3( 0,0,0 );
				float4 Out_VertexData15_g118156 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g118156 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118156 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g118156 = float4( 0,0,0,0 );
				Out_Dummy15_g118156 = Data15_g118156.Dummy;
				Out_PositionOS15_g118156 = Data15_g118156.PositionOS;
				Out_PositionWS15_g118156 = Data15_g118156.PositionWS;
				Out_PositionWO15_g118156 = Data15_g118156.PositionWO;
				Out_PositionRawOS15_g118156 = Data15_g118156.PositionRawOS;
				Out_PositionAddOS15_g118156 = Data15_g118156.PositionAddOS;
				Out_PivotOS15_g118156 = Data15_g118156.PivotOS;
				Out_PivotWS15_g118156 = Data15_g118156.PivotWS;
				Out_PivotWO15_g118156 = Data15_g118156.PivotWO;
				Out_NormalOS15_g118156 = Data15_g118156.NormalOS;
				Out_NormalWS15_g118156 = Data15_g118156.NormalWS;
				Out_NormalRawOS15_g118156 = Data15_g118156.NormalRawOS;
				Out_NormalRawWS15_g118156 = Data15_g118156.NormalRawWS;
				Out_TangentOS15_g118156 = Data15_g118156.TangentOS;
				Out_ViewDirWS15_g118156 = Data15_g118156.ViewDirWS;
				Out_VertexData15_g118156 = Data15_g118156.VertexData;
				Out_MotionData15_g118156 = Data15_g118156.MotionData;
				Out_BoundsData15_g118156 = Data15_g118156.BoundsData;
				Out_RotationData15_g118156 = Data15_g118156.RotationData;
				float3 temp_output_31_0_g118154 = Out_PositionOS15_g118156;
				
				float3 ase_worldTangent = TransformObjectToWorldDir(inputMesh.tangentOS.xyz);
				float ase_vertexTangentSign = inputMesh.tangentOS.w * ( unity_WorldTransformParams.w >= 0.0 ? 1.0 : -1.0 );
				float3 ase_worldBitangent = cross( ase_worldNormal, ase_worldTangent ) * ase_vertexTangentSign;
				outputPackedVaryingsMeshToPS.ase_texcoord7.xyz = ase_worldBitangent;
				outputPackedVaryingsMeshToPS.ase_texcoord8.xyz = vertexToFrag73_g117794;
				
				outputPackedVaryingsMeshToPS.ase_color = inputMesh.ase_color;
				outputPackedVaryingsMeshToPS.ase_texcoord9 = inputMesh.ase_texcoord;
				
				//setting value to unused interpolator channels and avoid initialization warnings
				outputPackedVaryingsMeshToPS.ase_texcoord7.w = 0;
				outputPackedVaryingsMeshToPS.ase_texcoord8.w = 0;

				#ifdef ASE_ABSOLUTE_VERTEX_POS
				float3 defaultVertexValue = inputMesh.positionOS.xyz;
				#else
				float3 defaultVertexValue = float3( 0, 0, 0 );
				#endif
				float3 vertexValue = temp_output_31_0_g118154;

				#ifdef ASE_ABSOLUTE_VERTEX_POS
				inputMesh.positionOS.xyz = vertexValue;
				#else
				inputMesh.positionOS.xyz += vertexValue;
				#endif
				inputMesh.normalOS = Out_NormalOS15_g118156;
				inputMesh.tangentOS = Out_TangentOS15_g118156;
				return inputMesh;
			}

			PackedVaryingsMeshToPS VertexFunction(AttributesMesh inputMesh)
			{
				PackedVaryingsMeshToPS outputPackedVaryingsMeshToPS = (PackedVaryingsMeshToPS)0;
				AttributesMesh defaultMesh = inputMesh;

				UNITY_SETUP_INSTANCE_ID(inputMesh);
				UNITY_TRANSFER_INSTANCE_ID(inputMesh, outputPackedVaryingsMeshToPS);
				UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO( outputPackedVaryingsMeshToPS );

				inputMesh = ApplyMeshModification( inputMesh, _TimeParameters.xyz, outputPackedVaryingsMeshToPS);

				float3 positionRWS = TransformObjectToWorld(inputMesh.positionOS);
				float3 normalWS = TransformObjectToWorldNormal(inputMesh.normalOS);
				float4 tangentWS = float4(TransformObjectToWorldDir(inputMesh.tangentOS.xyz), inputMesh.tangentOS.w);

				#ifdef _WRITE_TRANSPARENT_MOTION_VECTOR
				float4 VPASSpreviousPositionCS;
				float4 VPASSpositionCS = mul(UNITY_MATRIX_UNJITTERED_VP, float4(positionRWS, 1.0));

				bool forceNoMotion = unity_MotionVectorsParams.y == 0.0;
				if (forceNoMotion)
				{
					VPASSpreviousPositionCS = float4(0.0, 0.0, 0.0, 1.0);
				}
				else
				{
					bool hasDeformation = unity_MotionVectorsParams.x > 0.0;
					float3 effectivePositionOS = (hasDeformation ? inputMesh.previousPositionOS : defaultMesh.positionOS);
					#if defined(_ADD_PRECOMPUTED_VELOCITY)
					effectivePositionOS -= inputMesh.precomputedVelocity;
					#endif

					#if defined(HAVE_MESH_MODIFICATION)
						AttributesMesh previousMesh = defaultMesh;
						previousMesh.positionOS = effectivePositionOS ;
						PackedVaryingsMeshToPS test = (PackedVaryingsMeshToPS)0;
						float3 curTime = _TimeParameters.xyz;
						previousMesh = ApplyMeshModification(previousMesh, _LastTimeParameters.xyz, test);
						_TimeParameters.xyz = curTime;
						float3 previousPositionRWS = TransformPreviousObjectToWorld(previousMesh.positionOS);
					#else
						float3 previousPositionRWS = TransformPreviousObjectToWorld(effectivePositionOS);
					#endif

					#ifdef ATTRIBUTES_NEED_NORMAL
						float3 normalWS = TransformPreviousObjectToWorldNormal(defaultMesh.normalOS);
					#else
						float3 normalWS = float3(0.0, 0.0, 0.0);
					#endif

					#if defined(HAVE_VERTEX_MODIFICATION)
						ApplyVertexModification(inputMesh, normalWS, previousPositionRWS, _LastTimeParameters.xyz);
					#endif

					VPASSpreviousPositionCS = mul(UNITY_MATRIX_PREV_VP, float4(previousPositionRWS, 1.0));
				}
				#endif

				outputPackedVaryingsMeshToPS.positionCS = TransformWorldToHClip(positionRWS);
				outputPackedVaryingsMeshToPS.positionRWS.xyz = positionRWS;
				outputPackedVaryingsMeshToPS.normalWS.xyz = normalWS;
				outputPackedVaryingsMeshToPS.tangentWS.xyzw = tangentWS;
				outputPackedVaryingsMeshToPS.uv1.xyzw = inputMesh.uv1;
				outputPackedVaryingsMeshToPS.uv2.xyzw = inputMesh.uv2;

				#ifdef _WRITE_TRANSPARENT_MOTION_VECTOR
					outputPackedVaryingsMeshToPS.vpassPositionCS = float3(VPASSpositionCS.xyw);
					outputPackedVaryingsMeshToPS.vpassPreviousPositionCS = float3(VPASSpreviousPositionCS.xyw);
				#endif
				return outputPackedVaryingsMeshToPS;
			}

			#if defined(ASE_TESSELLATION)
			struct VertexControl
			{
				float3 positionOS : INTERNALTESSPOS;
				float3 normalOS : NORMAL;
				float4 tangentOS : TANGENT;
				float4 uv1 : TEXCOORD1;
				float4 uv2 : TEXCOORD2;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;

				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct TessellationFactors
			{
				float edge[3] : SV_TessFactor;
				float inside : SV_InsideTessFactor;
			};

			VertexControl Vert ( AttributesMesh v )
			{
				VertexControl o;
				UNITY_SETUP_INSTANCE_ID(v);
				UNITY_TRANSFER_INSTANCE_ID(v, o);
				o.positionOS = v.positionOS;
				o.normalOS = v.normalOS;
				o.tangentOS = v.tangentOS;
				o.uv1 = v.uv1;
				o.uv2 = v.uv2;
				o.ase_color = v.ase_color;
				o.ase_texcoord = v.ase_texcoord;
				return o;
			}

			TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
			{
				TessellationFactors o;
				float4 tf = 1;
				float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
				float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
				#if (SHADEROPTIONS_CAMERA_RELATIVE_RENDERING != 0)
				float3 cameraPos = 0;
				#else
				float3 cameraPos = _WorldSpaceCameraPos;
				#endif
				#if defined(ASE_FIXED_TESSELLATION)
				tf = FixedTess( tessValue );
				#elif defined(ASE_DISTANCE_TESSELLATION)
				tf = DistanceBasedTess(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), tessValue, tessMin, tessMax, GetObjectToWorldMatrix(), cameraPos );
				#elif defined(ASE_LENGTH_TESSELLATION)
				tf = EdgeLengthBasedTess(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), edgeLength, GetObjectToWorldMatrix(), cameraPos, _ScreenParams );
				#elif defined(ASE_LENGTH_CULL_TESSELLATION)
				tf = EdgeLengthBasedTessCull(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), edgeLength, tessMaxDisp, GetObjectToWorldMatrix(), cameraPos, _ScreenParams, _FrustumPlanes );
				#endif
				o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
				return o;
			}

			[domain("tri")]
			[partitioning("fractional_odd")]
			[outputtopology("triangle_cw")]
			[patchconstantfunc("TessellationFunction")]
			[outputcontrolpoints(3)]
			VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
			{
			   return patch[id];
			}

			[domain("tri")]
			PackedVaryingsMeshToPS DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
			{
				AttributesMesh o = (AttributesMesh) 0;
				o.positionOS = patch[0].positionOS * bary.x + patch[1].positionOS * bary.y + patch[2].positionOS * bary.z;
				o.normalOS = patch[0].normalOS * bary.x + patch[1].normalOS * bary.y + patch[2].normalOS * bary.z;
				o.tangentOS = patch[0].tangentOS * bary.x + patch[1].tangentOS * bary.y + patch[2].tangentOS * bary.z;
				o.uv1 = patch[0].uv1 * bary.x + patch[1].uv1 * bary.y + patch[2].uv1 * bary.z;
				o.uv2 = patch[0].uv2 * bary.x + patch[1].uv2 * bary.y + patch[2].uv2 * bary.z;
				o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
				o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
				#if defined(ASE_PHONG_TESSELLATION)
				float3 pp[3];
				for (int i = 0; i < 3; ++i)
					pp[i] = o.positionOS.xyz - patch[i].normalOS * (dot(o.positionOS.xyz, patch[i].normalOS) - dot(patch[i].positionOS.xyz, patch[i].normalOS));
				float phongStrength = _TessPhongStrength;
				o.positionOS.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.positionOS.xyz;
				#endif
				UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
				return VertexFunction(o);
			}
			#else
			PackedVaryingsMeshToPS Vert ( AttributesMesh v )
			{
				return VertexFunction( v );
			}
			#endif

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplayMaterial.hlsl"

            #if defined(_TRANSPARENT_REFRACTIVE_SORT) || defined(_ENABLE_FOG_ON_TRANSPARENT)
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Water/Shaders/UnderWaterUtilities.hlsl"
            #endif

            #ifdef UNITY_VIRTUAL_TEXTURING
                #ifdef OUTPUT_SPLIT_LIGHTING
                   #define DIFFUSE_LIGHTING_TARGET SV_Target2
                   #define SSS_BUFFER_TARGET SV_Target3
                #elif defined(_WRITE_TRANSPARENT_MOTION_VECTOR)
                   #define MOTION_VECTOR_TARGET SV_Target2
                    #ifdef _TRANSPARENT_REFRACTIVE_SORT
                        #define BEFORE_REFRACTION_TARGET SV_Target3
                        #define BEFORE_REFRACTION_ALPHA_TARGET SV_Target4
                #endif
            	#endif
            #if defined(SHADER_API_PSSL)
            	#pragma PSSL_target_output_format(target 1 FMT_32_ABGR)
            #endif
            #else
                #ifdef OUTPUT_SPLIT_LIGHTING
                #define DIFFUSE_LIGHTING_TARGET SV_Target1
                #define SSS_BUFFER_TARGET SV_Target2
                #elif defined(_WRITE_TRANSPARENT_MOTION_VECTOR)
                #define MOTION_VECTOR_TARGET SV_Target1
                #ifdef _TRANSPARENT_REFRACTIVE_SORT
                     #define BEFORE_REFRACTION_TARGET SV_Target2
                     #define BEFORE_REFRACTION_ALPHA_TARGET SV_Target3
                #endif
            #endif
            #endif

			void Frag(PackedVaryingsMeshToPS packedInput
				, out float4 outColor:SV_Target0
            #ifdef UNITY_VIRTUAL_TEXTURING
				, out float4 outVTFeedback : SV_Target1
            #endif
            #ifdef OUTPUT_SPLIT_LIGHTING
				, out float4 outDiffuseLighting : DIFFUSE_LIGHTING_TARGET
				, OUTPUT_SSSBUFFER(outSSSBuffer) : SSS_BUFFER_TARGET
            #elif defined(_WRITE_TRANSPARENT_MOTION_VECTOR)
				, out float4 outMotionVec : MOTION_VECTOR_TARGET
                #ifdef _TRANSPARENT_REFRACTIVE_SORT
                , out float4 outBeforeRefractionColor : BEFORE_REFRACTION_TARGET
                , out float4 outBeforeRefractionAlpha : BEFORE_REFRACTION_ALPHA_TARGET
                #endif
            #endif
            #ifdef _DEPTHOFFSET_ON
				, out float outputDepth : DEPTH_OFFSET_SEMANTIC
            #endif
		    
						)
			{
				#ifdef _WRITE_TRANSPARENT_MOTION_VECTOR
					outMotionVec = float4(2.0, 0.0, 0.0, 1.0);
				#endif

				UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX( packedInput );
				UNITY_SETUP_INSTANCE_ID( packedInput );
				float3 positionRWS = packedInput.positionRWS.xyz;
				float3 normalWS = packedInput.normalWS.xyz;
				float4 tangentWS = packedInput.tangentWS.xyzw;

				FragInputs input;
				ZERO_INITIALIZE(FragInputs, input);
				input.tangentToWorld = k_identity3x3;
				input.positionSS = packedInput.positionCS;
				input.positionRWS = positionRWS;
				input.tangentToWorld = BuildTangentToWorld(tangentWS, normalWS);
				input.texCoord1 = packedInput.uv1.xyzw;
				input.texCoord2 = packedInput.uv2.xyzw;

				#if _DOUBLESIDED_ON && SHADER_STAGE_FRAGMENT
				input.isFrontFace = IS_FRONT_VFACE( packedInput.cullFace, true, false);
				#elif SHADER_STAGE_FRAGMENT
				#if defined(ASE_NEED_CULLFACE)
				input.isFrontFace = IS_FRONT_VFACE(packedInput.cullFace, true, false);
				#endif
				#endif
				half isFrontFace = input.isFrontFace;

				AdjustFragInputsToOffScreenRendering(input, _OffScreenRendering > 0, _OffScreenDownsampleFactor);
				uint2 tileIndex = uint2(input.positionSS.xy) / GetTileSize ();

				PositionInputs posInput = GetPositionInput( input.positionSS.xy, _ScreenSize.zw, input.positionSS.z, input.positionSS.w, input.positionRWS.xyz, tileIndex );

				float3 V = GetWorldSpaceNormalizeViewDir(input.positionRWS);

				GlobalSurfaceDescription surfaceDescription = (GlobalSurfaceDescription)0;
				float localBreakData4_g118158 = ( 0.0 );
				float localCompData3_g118135 = ( 0.0 );
				TVEVisualData Data3_g118135 = (TVEVisualData)0;
				half Dummy594_g118134 = ( _CutoutCategory + _CutoutEnd + _CutoutElementMode + _CutoutBakeInfo );
				float In_Dummy3_g118135 = Dummy594_g118134;
				float localBreakData4_g118145 = ( 0.0 );
				float localCompData3_g118129 = ( 0.0 );
				TVEVisualData Data3_g118129 = (TVEVisualData)0;
				half Dummy145_g118119 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveElementMode + _EmissiveFlagMode );
				float In_Dummy3_g118129 = Dummy145_g118119;
				float localBreakData4_g118128 = ( 0.0 );
				float localCompData3_g118092 = ( 0.0 );
				TVEVisualData Data3_g118092 = (TVEVisualData)0;
				half Dummy594_g118090 = ( _WetnessCategory + _WetnessEnd + _WetnessElementMode + _WetnessBakeInfo );
				float In_Dummy3_g118092 = Dummy594_g118090;
				float localBreakData4_g118091 = ( 0.0 );
				float localCompData3_g118057 = ( 0.0 );
				TVEVisualData Data3_g118057 = (TVEVisualData)0;
				half Dummy594_g118054 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayElementMode + _OverlayBakeInfo );
				float In_Dummy3_g118057 = Dummy594_g118054;
				float localBreakData4_g118055 = ( 0.0 );
				float localCompData3_g118034 = ( 0.0 );
				TVEVisualData Data3_g118034 = (TVEVisualData)0;
				half Dummy205_g118031 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessElementMode + _DrynessBakeInfo );
				float In_Dummy3_g118034 = Dummy205_g118031;
				float localBreakData4_g118033 = ( 0.0 );
				float localCompData3_g118028 = ( 0.0 );
				TVEVisualData Data3_g118028 = (TVEVisualData)0;
				half Dummy205_g118007 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeInfo );
				float In_Dummy3_g118028 = Dummy205_g118007;
				float localBreakData4_g118029 = ( 0.0 );
				float localCompData3_g117894 = ( 0.0 );
				TVEVisualData Data3_g117894 = (TVEVisualData)0;
				half Dummy9163_g117893 = ( _CategoryTerrain + _EndTerrain );
				float In_Dummy3_g117894 = Dummy9163_g117893;
				float localHeightBasedBlending7362_g117895 = ( 0.0 );
				float3 ase_worldPos = GetAbsolutePositionWS( positionRWS );
				float4 appendResult9125_g117895 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
				float4 temp_output_35_0_g118003 = appendResult9125_g117895;
				float2 InputScale48_g118003 = (temp_output_35_0_g118003).zw;
				half2 FinalScale53_g118003 = ( 1.0 / InputScale48_g118003 );
				float2 InputPosition52_g118003 = (temp_output_35_0_g118003).xy;
				half2 FinalPosition58_g118003 = -( FinalScale53_g118003 * InputPosition52_g118003 );
				float2 temp_output_65_0_g118003 = ( ( (ase_worldPos).xz * FinalScale53_g118003 ) + FinalPosition58_g118003 );
				float4 temp_output_70_0_g118003 = _TerrainControlTex1_TexelSize;
				float2 InputTexelSize68_g118003 = (temp_output_70_0_g118003).zw;
				float2 temp_cast_0 = (1.0).xx;
				float2 InputTexelRecip69_g118003 = (temp_output_70_0_g118003).xy;
				float2 Terrain_Control_UV7873_g117895 = ( ( ( temp_output_65_0_g118003 / ( 1.0 / ( InputTexelSize68_g118003 - temp_cast_0 ) ) ) + 0.5 ) * InputTexelRecip69_g118003 );
				half4 Terrain_Control_047365_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_047362_g117895 = Terrain_Control_047365_g117895;
				half4 Terrain_Control_087366_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_087362_g117895 = Terrain_Control_087366_g117895;
				half4 Terrain_Control_127712_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_127362_g117895 = Terrain_Control_127712_g117895;
				half4 Terrain_Control_167711_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_167362_g117895 = Terrain_Control_167711_g117895;
				TEXTURE2D(Texture238_g117940) = _TerrainShaderTex1;
				float localFilterTexture30_g118001 = ( 0.0 );
				SamplerState SamplerDefault30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g118001 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g118001 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g118001 = SamplerDefault30_g118001;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g118001 = SamplerDefault30_g118001;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g118001 = SamplerPoint30_g118001;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g118001 = SamplerLow30_g118001;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g118001 = SamplerMedium30_g118001;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g118001 = SamplerHigh30_g118001;
				#endif
				SamplerState Sampler238_g117940 = SS30_g118001;
				half4 Input_Terrain_Coords_016785_g117895 = _TerrainCoord1;
				float4 temp_output_37_0_g117940 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117940 = temp_output_37_0_g117940;
				half3 Input_Position9197_g117895 = ase_worldPos;
				float3 temp_output_279_0_g117940 = Input_Position9197_g117895;
				half3 WorldPosition238_g117940 = temp_output_279_0_g117940;
				half4 localSamplePlanar2D238_g117940 = SamplePlanar2D( Texture238_g117940 , Sampler238_g117940 , Coords238_g117940 , WorldPosition238_g117940 );
				TEXTURE2D(Texture246_g117940) = _TerrainShaderTex1;
				SamplerState Sampler246_g117940 = SS30_g118001;
				half4 Coords246_g117940 = temp_output_37_0_g117940;
				half3 WorldPosition246_g117940 = temp_output_279_0_g117940;
				half3 Input_Normal9199_g117895 = normalWS;
				float3 temp_output_280_0_g117940 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117940 = temp_output_280_0_g117940;
				half4 localSamplePlanar3D246_g117940 = SamplePlanar3D( Texture246_g117940 , Sampler246_g117940 , Coords246_g117940 , WorldPosition246_g117940 , WorldNormal246_g117940 );
				TEXTURE2D(Texture234_g117940) = _TerrainShaderTex1;
				SamplerState Sampler234_g117940 = SS30_g118001;
				float4 Coords234_g117940 = temp_output_37_0_g117940;
				float3 WorldPosition234_g117940 = temp_output_279_0_g117940;
				float4 localSampleStochastic2D234_g117940 = SampleStochastic2D( Texture234_g117940 , Sampler234_g117940 , Coords234_g117940 , WorldPosition234_g117940 );
				TEXTURE2D(Texture263_g117940) = _TerrainShaderTex1;
				SamplerState Sampler263_g117940 = SS30_g118001;
				half4 Coords263_g117940 = temp_output_37_0_g117940;
				half3 WorldPosition263_g117940 = temp_output_279_0_g117940;
				half3 WorldNormal263_g117940 = temp_output_280_0_g117940;
				half4 localSampleStochastic3D263_g117940 = SampleStochastic3D( Texture263_g117940 , Sampler263_g117940 , Coords263_g117940 , WorldPosition263_g117940 , WorldNormal263_g117940 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8639_g117895 = localSamplePlanar2D238_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8639_g117895 = localSamplePlanar3D246_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8639_g117895 = localSampleStochastic2D234_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8639_g117895 = localSampleStochastic3D263_g117940;
				#else
				float4 staticSwitch8639_g117895 = localSamplePlanar2D238_g117940;
				#endif
				float4 temp_output_7_0_g117897 = _TerrainShaderMin1;
				float4 temp_output_10_0_g117897 = ( _TerrainShaderMax1 - temp_output_7_0_g117897 );
				float4 temp_output_6970_0_g117895 = saturate( ( ( staticSwitch8639_g117895 - temp_output_7_0_g117897 ) / ( temp_output_10_0_g117897 + 0.0001 ) ) );
				half4 Masks_015_g117901 = temp_output_6970_0_g117895;
				TEXTURE2D(Texture238_g117944) = _TerrainShaderTex2;
				SamplerState Sampler238_g117944 = SS30_g118001;
				half4 Input_Terrain_Coords_026787_g117895 = _TerrainCoord2;
				float4 temp_output_37_0_g117944 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117944 = temp_output_37_0_g117944;
				float3 temp_output_279_0_g117944 = Input_Position9197_g117895;
				half3 WorldPosition238_g117944 = temp_output_279_0_g117944;
				half4 localSamplePlanar2D238_g117944 = SamplePlanar2D( Texture238_g117944 , Sampler238_g117944 , Coords238_g117944 , WorldPosition238_g117944 );
				TEXTURE2D(Texture246_g117944) = _TerrainShaderTex2;
				SamplerState Sampler246_g117944 = SS30_g118001;
				half4 Coords246_g117944 = temp_output_37_0_g117944;
				half3 WorldPosition246_g117944 = temp_output_279_0_g117944;
				float3 temp_output_280_0_g117944 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117944 = temp_output_280_0_g117944;
				half4 localSamplePlanar3D246_g117944 = SamplePlanar3D( Texture246_g117944 , Sampler246_g117944 , Coords246_g117944 , WorldPosition246_g117944 , WorldNormal246_g117944 );
				TEXTURE2D(Texture234_g117944) = _TerrainShaderTex2;
				SamplerState Sampler234_g117944 = SS30_g118001;
				float4 Coords234_g117944 = temp_output_37_0_g117944;
				float3 WorldPosition234_g117944 = temp_output_279_0_g117944;
				float4 localSampleStochastic2D234_g117944 = SampleStochastic2D( Texture234_g117944 , Sampler234_g117944 , Coords234_g117944 , WorldPosition234_g117944 );
				TEXTURE2D(Texture263_g117944) = _TerrainShaderTex2;
				SamplerState Sampler263_g117944 = SS30_g118001;
				half4 Coords263_g117944 = temp_output_37_0_g117944;
				half3 WorldPosition263_g117944 = temp_output_279_0_g117944;
				half3 WorldNormal263_g117944 = temp_output_280_0_g117944;
				half4 localSampleStochastic3D263_g117944 = SampleStochastic3D( Texture263_g117944 , Sampler263_g117944 , Coords263_g117944 , WorldPosition263_g117944 , WorldNormal263_g117944 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8640_g117895 = localSamplePlanar2D238_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8640_g117895 = localSamplePlanar3D246_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8640_g117895 = localSampleStochastic2D234_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8640_g117895 = localSampleStochastic3D263_g117944;
				#else
				float4 staticSwitch8640_g117895 = localSamplePlanar2D238_g117944;
				#endif
				float4 temp_output_7_0_g117907 = _TerrainShaderMin2;
				float4 temp_output_10_0_g117907 = ( _TerrainShaderMax2 - temp_output_7_0_g117907 );
				float4 temp_output_6977_0_g117895 = saturate( ( ( staticSwitch8640_g117895 - temp_output_7_0_g117907 ) / ( temp_output_10_0_g117907 + 0.0001 ) ) );
				half4 Masks_0210_g117901 = temp_output_6977_0_g117895;
				TEXTURE2D(Texture238_g117949) = _TerrainShaderTex3;
				SamplerState Sampler238_g117949 = SS30_g118001;
				half4 Input_Terrain_Coords_036789_g117895 = _TerrainCoord3;
				float4 temp_output_37_0_g117949 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117949 = temp_output_37_0_g117949;
				float3 temp_output_279_0_g117949 = Input_Position9197_g117895;
				half3 WorldPosition238_g117949 = temp_output_279_0_g117949;
				half4 localSamplePlanar2D238_g117949 = SamplePlanar2D( Texture238_g117949 , Sampler238_g117949 , Coords238_g117949 , WorldPosition238_g117949 );
				TEXTURE2D(Texture246_g117949) = _TerrainShaderTex3;
				SamplerState Sampler246_g117949 = SS30_g118001;
				half4 Coords246_g117949 = temp_output_37_0_g117949;
				half3 WorldPosition246_g117949 = temp_output_279_0_g117949;
				float3 temp_output_280_0_g117949 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117949 = temp_output_280_0_g117949;
				half4 localSamplePlanar3D246_g117949 = SamplePlanar3D( Texture246_g117949 , Sampler246_g117949 , Coords246_g117949 , WorldPosition246_g117949 , WorldNormal246_g117949 );
				TEXTURE2D(Texture234_g117949) = _TerrainShaderTex3;
				SamplerState Sampler234_g117949 = SS30_g118001;
				float4 Coords234_g117949 = temp_output_37_0_g117949;
				float3 WorldPosition234_g117949 = temp_output_279_0_g117949;
				float4 localSampleStochastic2D234_g117949 = SampleStochastic2D( Texture234_g117949 , Sampler234_g117949 , Coords234_g117949 , WorldPosition234_g117949 );
				TEXTURE2D(Texture263_g117949) = _TerrainShaderTex3;
				SamplerState Sampler263_g117949 = SS30_g118001;
				half4 Coords263_g117949 = temp_output_37_0_g117949;
				half3 WorldPosition263_g117949 = temp_output_279_0_g117949;
				half3 WorldNormal263_g117949 = temp_output_280_0_g117949;
				half4 localSampleStochastic3D263_g117949 = SampleStochastic3D( Texture263_g117949 , Sampler263_g117949 , Coords263_g117949 , WorldPosition263_g117949 , WorldNormal263_g117949 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8641_g117895 = localSamplePlanar2D238_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8641_g117895 = localSamplePlanar3D246_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8641_g117895 = localSampleStochastic2D234_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8641_g117895 = localSampleStochastic3D263_g117949;
				#else
				float4 staticSwitch8641_g117895 = localSamplePlanar2D238_g117949;
				#endif
				float4 temp_output_7_0_g117908 = _TerrainShaderMin3;
				float4 temp_output_10_0_g117908 = ( _TerrainShaderMax3 - temp_output_7_0_g117908 );
				float4 temp_output_6978_0_g117895 = saturate( ( ( staticSwitch8641_g117895 - temp_output_7_0_g117908 ) / ( temp_output_10_0_g117908 + 0.0001 ) ) );
				half4 Masks_0312_g117901 = temp_output_6978_0_g117895;
				TEXTURE2D(Texture238_g117950) = _TerrainShaderTex4;
				SamplerState Sampler238_g117950 = SS30_g118001;
				half4 Input_Terrain_Coords_046791_g117895 = _TerrainCoord4;
				float4 temp_output_37_0_g117950 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117950 = temp_output_37_0_g117950;
				float3 temp_output_279_0_g117950 = Input_Position9197_g117895;
				half3 WorldPosition238_g117950 = temp_output_279_0_g117950;
				half4 localSamplePlanar2D238_g117950 = SamplePlanar2D( Texture238_g117950 , Sampler238_g117950 , Coords238_g117950 , WorldPosition238_g117950 );
				TEXTURE2D(Texture246_g117950) = _TerrainShaderTex4;
				SamplerState Sampler246_g117950 = SS30_g118001;
				half4 Coords246_g117950 = temp_output_37_0_g117950;
				half3 WorldPosition246_g117950 = temp_output_279_0_g117950;
				float3 temp_output_280_0_g117950 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117950 = temp_output_280_0_g117950;
				half4 localSamplePlanar3D246_g117950 = SamplePlanar3D( Texture246_g117950 , Sampler246_g117950 , Coords246_g117950 , WorldPosition246_g117950 , WorldNormal246_g117950 );
				TEXTURE2D(Texture234_g117950) = _TerrainShaderTex4;
				SamplerState Sampler234_g117950 = SS30_g118001;
				float4 Coords234_g117950 = temp_output_37_0_g117950;
				float3 WorldPosition234_g117950 = temp_output_279_0_g117950;
				float4 localSampleStochastic2D234_g117950 = SampleStochastic2D( Texture234_g117950 , Sampler234_g117950 , Coords234_g117950 , WorldPosition234_g117950 );
				TEXTURE2D(Texture263_g117950) = _TerrainShaderTex4;
				SamplerState Sampler263_g117950 = SS30_g118001;
				half4 Coords263_g117950 = temp_output_37_0_g117950;
				half3 WorldPosition263_g117950 = temp_output_279_0_g117950;
				half3 WorldNormal263_g117950 = temp_output_280_0_g117950;
				half4 localSampleStochastic3D263_g117950 = SampleStochastic3D( Texture263_g117950 , Sampler263_g117950 , Coords263_g117950 , WorldPosition263_g117950 , WorldNormal263_g117950 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8642_g117895 = localSamplePlanar2D238_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8642_g117895 = localSamplePlanar3D246_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8642_g117895 = localSampleStochastic2D234_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8642_g117895 = localSampleStochastic3D263_g117950;
				#else
				float4 staticSwitch8642_g117895 = localSamplePlanar2D238_g117950;
				#endif
				float4 temp_output_7_0_g117909 = _TerrainShaderMin4;
				float4 temp_output_10_0_g117909 = ( _TerrainShaderMax4 - temp_output_7_0_g117909 );
				float4 temp_output_6983_0_g117895 = saturate( ( ( staticSwitch8642_g117895 - temp_output_7_0_g117909 ) / ( temp_output_10_0_g117909 + 0.0001 ) ) );
				half4 Masks_0414_g117901 = temp_output_6983_0_g117895;
				float4 appendResult29_g117901 = (float4((Masks_015_g117901).z , (Masks_0210_g117901).z , (Masks_0312_g117901).z , (Masks_0414_g117901).z));
				half4 Control31_g117901 = Terrain_Control_047365_g117895;
				half4 Terrain_Height_047210_g117895 = ( appendResult29_g117901 * Control31_g117901 );
				float4 heights_047362_g117895 = Terrain_Height_047210_g117895;
				TEXTURE2D(Texture238_g117953) = _TerrainShaderTex5;
				SamplerState Sampler238_g117953 = SS30_g118001;
				half4 Input_Terrain_Coords_058750_g117895 = _TerrainCoord5;
				float4 temp_output_37_0_g117953 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117953 = temp_output_37_0_g117953;
				float3 temp_output_279_0_g117953 = Input_Position9197_g117895;
				half3 WorldPosition238_g117953 = temp_output_279_0_g117953;
				half4 localSamplePlanar2D238_g117953 = SamplePlanar2D( Texture238_g117953 , Sampler238_g117953 , Coords238_g117953 , WorldPosition238_g117953 );
				TEXTURE2D(Texture246_g117953) = _TerrainShaderTex5;
				SamplerState Sampler246_g117953 = SS30_g118001;
				half4 Coords246_g117953 = temp_output_37_0_g117953;
				half3 WorldPosition246_g117953 = temp_output_279_0_g117953;
				float3 temp_output_280_0_g117953 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117953 = temp_output_280_0_g117953;
				half4 localSamplePlanar3D246_g117953 = SamplePlanar3D( Texture246_g117953 , Sampler246_g117953 , Coords246_g117953 , WorldPosition246_g117953 , WorldNormal246_g117953 );
				TEXTURE2D(Texture234_g117953) = _TerrainShaderTex5;
				SamplerState Sampler234_g117953 = SS30_g118001;
				float4 Coords234_g117953 = temp_output_37_0_g117953;
				float3 WorldPosition234_g117953 = temp_output_279_0_g117953;
				float4 localSampleStochastic2D234_g117953 = SampleStochastic2D( Texture234_g117953 , Sampler234_g117953 , Coords234_g117953 , WorldPosition234_g117953 );
				TEXTURE2D(Texture263_g117953) = _TerrainShaderTex5;
				SamplerState Sampler263_g117953 = SS30_g118001;
				half4 Coords263_g117953 = temp_output_37_0_g117953;
				half3 WorldPosition263_g117953 = temp_output_279_0_g117953;
				half3 WorldNormal263_g117953 = temp_output_280_0_g117953;
				half4 localSampleStochastic3D263_g117953 = SampleStochastic3D( Texture263_g117953 , Sampler263_g117953 , Coords263_g117953 , WorldPosition263_g117953 , WorldNormal263_g117953 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8710_g117895 = localSamplePlanar2D238_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8710_g117895 = localSamplePlanar3D246_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8710_g117895 = localSampleStochastic2D234_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8710_g117895 = localSampleStochastic3D263_g117953;
				#else
				float4 staticSwitch8710_g117895 = localSamplePlanar2D238_g117953;
				#endif
				float4 temp_output_7_0_g117912 = _TerrainShaderMin5;
				float4 temp_output_10_0_g117912 = ( _TerrainShaderMax5 - temp_output_7_0_g117912 );
				float4 temp_output_8714_0_g117895 = saturate( ( ( staticSwitch8710_g117895 - temp_output_7_0_g117912 ) / ( temp_output_10_0_g117912 + 0.0001 ) ) );
				half4 Masks_015_g117913 = temp_output_8714_0_g117895;
				TEXTURE2D(Texture238_g117984) = _TerrainShaderTex6;
				SamplerState Sampler238_g117984 = SS30_g118001;
				half4 Input_Terrain_Coords_068751_g117895 = _TerrainCoord6;
				float4 temp_output_37_0_g117984 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117984 = temp_output_37_0_g117984;
				float3 temp_output_279_0_g117984 = Input_Position9197_g117895;
				half3 WorldPosition238_g117984 = temp_output_279_0_g117984;
				half4 localSamplePlanar2D238_g117984 = SamplePlanar2D( Texture238_g117984 , Sampler238_g117984 , Coords238_g117984 , WorldPosition238_g117984 );
				TEXTURE2D(Texture246_g117984) = _TerrainShaderTex6;
				SamplerState Sampler246_g117984 = SS30_g118001;
				half4 Coords246_g117984 = temp_output_37_0_g117984;
				half3 WorldPosition246_g117984 = temp_output_279_0_g117984;
				float3 temp_output_280_0_g117984 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117984 = temp_output_280_0_g117984;
				half4 localSamplePlanar3D246_g117984 = SamplePlanar3D( Texture246_g117984 , Sampler246_g117984 , Coords246_g117984 , WorldPosition246_g117984 , WorldNormal246_g117984 );
				TEXTURE2D(Texture234_g117984) = _TerrainShaderTex6;
				SamplerState Sampler234_g117984 = SS30_g118001;
				float4 Coords234_g117984 = temp_output_37_0_g117984;
				float3 WorldPosition234_g117984 = temp_output_279_0_g117984;
				float4 localSampleStochastic2D234_g117984 = SampleStochastic2D( Texture234_g117984 , Sampler234_g117984 , Coords234_g117984 , WorldPosition234_g117984 );
				TEXTURE2D(Texture263_g117984) = _TerrainShaderTex6;
				SamplerState Sampler263_g117984 = SS30_g118001;
				half4 Coords263_g117984 = temp_output_37_0_g117984;
				half3 WorldPosition263_g117984 = temp_output_279_0_g117984;
				half3 WorldNormal263_g117984 = temp_output_280_0_g117984;
				half4 localSampleStochastic3D263_g117984 = SampleStochastic3D( Texture263_g117984 , Sampler263_g117984 , Coords263_g117984 , WorldPosition263_g117984 , WorldNormal263_g117984 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8711_g117895 = localSamplePlanar2D238_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8711_g117895 = localSamplePlanar3D246_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8711_g117895 = localSampleStochastic2D234_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8711_g117895 = localSampleStochastic3D263_g117984;
				#else
				float4 staticSwitch8711_g117895 = localSamplePlanar2D238_g117984;
				#endif
				float4 temp_output_7_0_g117937 = _TerrainShaderMin6;
				float4 temp_output_10_0_g117937 = ( _TerrainShaderMax6 - temp_output_7_0_g117937 );
				float4 temp_output_8721_0_g117895 = saturate( ( ( staticSwitch8711_g117895 - temp_output_7_0_g117937 ) / ( temp_output_10_0_g117937 + 0.0001 ) ) );
				half4 Masks_0210_g117913 = temp_output_8721_0_g117895;
				TEXTURE2D(Texture238_g117985) = _TerrainShaderTex7;
				SamplerState Sampler238_g117985 = SS30_g118001;
				half4 Input_Terrain_Coords_078752_g117895 = _TerrainCoord7;
				float4 temp_output_37_0_g117985 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117985 = temp_output_37_0_g117985;
				float3 temp_output_279_0_g117985 = Input_Position9197_g117895;
				half3 WorldPosition238_g117985 = temp_output_279_0_g117985;
				half4 localSamplePlanar2D238_g117985 = SamplePlanar2D( Texture238_g117985 , Sampler238_g117985 , Coords238_g117985 , WorldPosition238_g117985 );
				TEXTURE2D(Texture246_g117985) = _TerrainShaderTex7;
				SamplerState Sampler246_g117985 = SS30_g118001;
				half4 Coords246_g117985 = temp_output_37_0_g117985;
				half3 WorldPosition246_g117985 = temp_output_279_0_g117985;
				float3 temp_output_280_0_g117985 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117985 = temp_output_280_0_g117985;
				half4 localSamplePlanar3D246_g117985 = SamplePlanar3D( Texture246_g117985 , Sampler246_g117985 , Coords246_g117985 , WorldPosition246_g117985 , WorldNormal246_g117985 );
				TEXTURE2D(Texture234_g117985) = _TerrainShaderTex7;
				SamplerState Sampler234_g117985 = SS30_g118001;
				float4 Coords234_g117985 = temp_output_37_0_g117985;
				float3 WorldPosition234_g117985 = temp_output_279_0_g117985;
				float4 localSampleStochastic2D234_g117985 = SampleStochastic2D( Texture234_g117985 , Sampler234_g117985 , Coords234_g117985 , WorldPosition234_g117985 );
				TEXTURE2D(Texture263_g117985) = _TerrainShaderTex7;
				SamplerState Sampler263_g117985 = SS30_g118001;
				half4 Coords263_g117985 = temp_output_37_0_g117985;
				half3 WorldPosition263_g117985 = temp_output_279_0_g117985;
				half3 WorldNormal263_g117985 = temp_output_280_0_g117985;
				half4 localSampleStochastic3D263_g117985 = SampleStochastic3D( Texture263_g117985 , Sampler263_g117985 , Coords263_g117985 , WorldPosition263_g117985 , WorldNormal263_g117985 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8712_g117895 = localSamplePlanar2D238_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8712_g117895 = localSamplePlanar3D246_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8712_g117895 = localSampleStochastic2D234_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8712_g117895 = localSampleStochastic3D263_g117985;
				#else
				float4 staticSwitch8712_g117895 = localSamplePlanar2D238_g117985;
				#endif
				float4 temp_output_7_0_g117938 = _TerrainShaderMin7;
				float4 temp_output_10_0_g117938 = ( _TerrainShaderMax7 - temp_output_7_0_g117938 );
				float4 temp_output_8724_0_g117895 = saturate( ( ( staticSwitch8712_g117895 - temp_output_7_0_g117938 ) / ( temp_output_10_0_g117938 + 0.0001 ) ) );
				half4 Masks_0312_g117913 = temp_output_8724_0_g117895;
				TEXTURE2D(Texture238_g117986) = _TerrainShaderTex8;
				SamplerState Sampler238_g117986 = SS30_g118001;
				half4 Input_Terrain_Coords_088749_g117895 = _TerrainCoord8;
				float4 temp_output_37_0_g117986 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117986 = temp_output_37_0_g117986;
				float3 temp_output_279_0_g117986 = Input_Position9197_g117895;
				half3 WorldPosition238_g117986 = temp_output_279_0_g117986;
				half4 localSamplePlanar2D238_g117986 = SamplePlanar2D( Texture238_g117986 , Sampler238_g117986 , Coords238_g117986 , WorldPosition238_g117986 );
				TEXTURE2D(Texture246_g117986) = _TerrainShaderTex8;
				SamplerState Sampler246_g117986 = SS30_g118001;
				half4 Coords246_g117986 = temp_output_37_0_g117986;
				half3 WorldPosition246_g117986 = temp_output_279_0_g117986;
				float3 temp_output_280_0_g117986 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117986 = temp_output_280_0_g117986;
				half4 localSamplePlanar3D246_g117986 = SamplePlanar3D( Texture246_g117986 , Sampler246_g117986 , Coords246_g117986 , WorldPosition246_g117986 , WorldNormal246_g117986 );
				TEXTURE2D(Texture234_g117986) = _TerrainShaderTex8;
				SamplerState Sampler234_g117986 = SS30_g118001;
				float4 Coords234_g117986 = temp_output_37_0_g117986;
				float3 WorldPosition234_g117986 = temp_output_279_0_g117986;
				float4 localSampleStochastic2D234_g117986 = SampleStochastic2D( Texture234_g117986 , Sampler234_g117986 , Coords234_g117986 , WorldPosition234_g117986 );
				TEXTURE2D(Texture263_g117986) = _TerrainShaderTex8;
				SamplerState Sampler263_g117986 = SS30_g118001;
				half4 Coords263_g117986 = temp_output_37_0_g117986;
				half3 WorldPosition263_g117986 = temp_output_279_0_g117986;
				half3 WorldNormal263_g117986 = temp_output_280_0_g117986;
				half4 localSampleStochastic3D263_g117986 = SampleStochastic3D( Texture263_g117986 , Sampler263_g117986 , Coords263_g117986 , WorldPosition263_g117986 , WorldNormal263_g117986 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8713_g117895 = localSamplePlanar2D238_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8713_g117895 = localSamplePlanar3D246_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8713_g117895 = localSampleStochastic2D234_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8713_g117895 = localSampleStochastic3D263_g117986;
				#else
				float4 staticSwitch8713_g117895 = localSamplePlanar2D238_g117986;
				#endif
				float4 temp_output_7_0_g117939 = _TerrainShaderMin8;
				float4 temp_output_10_0_g117939 = ( _TerrainShaderMax8 - temp_output_7_0_g117939 );
				float4 temp_output_8727_0_g117895 = saturate( ( ( staticSwitch8713_g117895 - temp_output_7_0_g117939 ) / ( temp_output_10_0_g117939 + 0.0001 ) ) );
				half4 Masks_0414_g117913 = temp_output_8727_0_g117895;
				float4 appendResult29_g117913 = (float4((Masks_015_g117913).z , (Masks_0210_g117913).z , (Masks_0312_g117913).z , (Masks_0414_g117913).z));
				half4 Control31_g117913 = Terrain_Control_087366_g117895;
				half4 Terrain_Height_088731_g117895 = ( appendResult29_g117913 * Control31_g117913 );
				float4 heights_087362_g117895 = Terrain_Height_088731_g117895;
				TEXTURE2D(Texture238_g117956) = _TerrainShaderTex9;
				SamplerState Sampler238_g117956 = SS30_g118001;
				half4 Input_Terrain_Coords_098833_g117895 = _TerrainCoord9;
				float4 temp_output_37_0_g117956 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117956 = temp_output_37_0_g117956;
				float3 temp_output_279_0_g117956 = Input_Position9197_g117895;
				half3 WorldPosition238_g117956 = temp_output_279_0_g117956;
				half4 localSamplePlanar2D238_g117956 = SamplePlanar2D( Texture238_g117956 , Sampler238_g117956 , Coords238_g117956 , WorldPosition238_g117956 );
				TEXTURE2D(Texture246_g117956) = _TerrainShaderTex9;
				SamplerState Sampler246_g117956 = SS30_g118001;
				half4 Coords246_g117956 = temp_output_37_0_g117956;
				half3 WorldPosition246_g117956 = temp_output_279_0_g117956;
				float3 temp_output_280_0_g117956 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117956 = temp_output_280_0_g117956;
				half4 localSamplePlanar3D246_g117956 = SamplePlanar3D( Texture246_g117956 , Sampler246_g117956 , Coords246_g117956 , WorldPosition246_g117956 , WorldNormal246_g117956 );
				TEXTURE2D(Texture234_g117956) = _TerrainShaderTex9;
				SamplerState Sampler234_g117956 = SS30_g118001;
				float4 Coords234_g117956 = temp_output_37_0_g117956;
				float3 WorldPosition234_g117956 = temp_output_279_0_g117956;
				float4 localSampleStochastic2D234_g117956 = SampleStochastic2D( Texture234_g117956 , Sampler234_g117956 , Coords234_g117956 , WorldPosition234_g117956 );
				TEXTURE2D(Texture263_g117956) = _TerrainShaderTex9;
				SamplerState Sampler263_g117956 = SS30_g118001;
				half4 Coords263_g117956 = temp_output_37_0_g117956;
				half3 WorldPosition263_g117956 = temp_output_279_0_g117956;
				half3 WorldNormal263_g117956 = temp_output_280_0_g117956;
				half4 localSampleStochastic3D263_g117956 = SampleStochastic3D( Texture263_g117956 , Sampler263_g117956 , Coords263_g117956 , WorldPosition263_g117956 , WorldNormal263_g117956 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8878_g117895 = localSamplePlanar2D238_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8878_g117895 = localSamplePlanar3D246_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8878_g117895 = localSampleStochastic2D234_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8878_g117895 = localSampleStochastic3D263_g117956;
				#else
				float4 staticSwitch8878_g117895 = localSamplePlanar2D238_g117956;
				#endif
				float4 temp_output_7_0_g117919 = _TerrainShaderMin9;
				float4 temp_output_10_0_g117919 = ( _TerrainShaderMax9 - temp_output_7_0_g117919 );
				float4 temp_output_8815_0_g117895 = saturate( ( ( staticSwitch8878_g117895 - temp_output_7_0_g117919 ) / ( temp_output_10_0_g117919 + 0.0001 ) ) );
				half4 Masks_015_g117920 = temp_output_8815_0_g117895;
				TEXTURE2D(Texture238_g117966) = _TerrainShaderTex10;
				SamplerState Sampler238_g117966 = SS30_g118001;
				half4 Input_Terrain_Coords_108834_g117895 = _TerrainCoord10;
				float4 temp_output_37_0_g117966 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117966 = temp_output_37_0_g117966;
				float3 temp_output_279_0_g117966 = Input_Position9197_g117895;
				half3 WorldPosition238_g117966 = temp_output_279_0_g117966;
				half4 localSamplePlanar2D238_g117966 = SamplePlanar2D( Texture238_g117966 , Sampler238_g117966 , Coords238_g117966 , WorldPosition238_g117966 );
				TEXTURE2D(Texture246_g117966) = _TerrainShaderTex10;
				SamplerState Sampler246_g117966 = SS30_g118001;
				half4 Coords246_g117966 = temp_output_37_0_g117966;
				half3 WorldPosition246_g117966 = temp_output_279_0_g117966;
				float3 temp_output_280_0_g117966 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117966 = temp_output_280_0_g117966;
				half4 localSamplePlanar3D246_g117966 = SamplePlanar3D( Texture246_g117966 , Sampler246_g117966 , Coords246_g117966 , WorldPosition246_g117966 , WorldNormal246_g117966 );
				TEXTURE2D(Texture234_g117966) = _TerrainShaderTex10;
				SamplerState Sampler234_g117966 = SS30_g118001;
				float4 Coords234_g117966 = temp_output_37_0_g117966;
				float3 WorldPosition234_g117966 = temp_output_279_0_g117966;
				float4 localSampleStochastic2D234_g117966 = SampleStochastic2D( Texture234_g117966 , Sampler234_g117966 , Coords234_g117966 , WorldPosition234_g117966 );
				TEXTURE2D(Texture263_g117966) = _TerrainShaderTex10;
				SamplerState Sampler263_g117966 = SS30_g118001;
				half4 Coords263_g117966 = temp_output_37_0_g117966;
				half3 WorldPosition263_g117966 = temp_output_279_0_g117966;
				half3 WorldNormal263_g117966 = temp_output_280_0_g117966;
				half4 localSampleStochastic3D263_g117966 = SampleStochastic3D( Texture263_g117966 , Sampler263_g117966 , Coords263_g117966 , WorldPosition263_g117966 , WorldNormal263_g117966 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8860_g117895 = localSamplePlanar2D238_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8860_g117895 = localSamplePlanar3D246_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8860_g117895 = localSampleStochastic2D234_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8860_g117895 = localSampleStochastic3D263_g117966;
				#else
				float4 staticSwitch8860_g117895 = localSamplePlanar2D238_g117966;
				#endif
				float4 temp_output_7_0_g117931 = _TerrainShaderMin10;
				float4 temp_output_10_0_g117931 = ( _TerrainShaderMax10 - temp_output_7_0_g117931 );
				float4 temp_output_8818_0_g117895 = saturate( ( ( staticSwitch8860_g117895 - temp_output_7_0_g117931 ) / ( temp_output_10_0_g117931 + 0.0001 ) ) );
				half4 Masks_0210_g117920 = temp_output_8818_0_g117895;
				TEXTURE2D(Texture238_g117967) = _TerrainShaderTex11;
				SamplerState Sampler238_g117967 = SS30_g118001;
				half4 Input_Terrain_Coords_118835_g117895 = _TerrainCoord11;
				float4 temp_output_37_0_g117967 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117967 = temp_output_37_0_g117967;
				float3 temp_output_279_0_g117967 = Input_Position9197_g117895;
				half3 WorldPosition238_g117967 = temp_output_279_0_g117967;
				half4 localSamplePlanar2D238_g117967 = SamplePlanar2D( Texture238_g117967 , Sampler238_g117967 , Coords238_g117967 , WorldPosition238_g117967 );
				TEXTURE2D(Texture246_g117967) = _TerrainShaderTex11;
				SamplerState Sampler246_g117967 = SS30_g118001;
				half4 Coords246_g117967 = temp_output_37_0_g117967;
				half3 WorldPosition246_g117967 = temp_output_279_0_g117967;
				float3 temp_output_280_0_g117967 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117967 = temp_output_280_0_g117967;
				half4 localSamplePlanar3D246_g117967 = SamplePlanar3D( Texture246_g117967 , Sampler246_g117967 , Coords246_g117967 , WorldPosition246_g117967 , WorldNormal246_g117967 );
				TEXTURE2D(Texture234_g117967) = _TerrainShaderTex11;
				SamplerState Sampler234_g117967 = SS30_g118001;
				float4 Coords234_g117967 = temp_output_37_0_g117967;
				float3 WorldPosition234_g117967 = temp_output_279_0_g117967;
				float4 localSampleStochastic2D234_g117967 = SampleStochastic2D( Texture234_g117967 , Sampler234_g117967 , Coords234_g117967 , WorldPosition234_g117967 );
				TEXTURE2D(Texture263_g117967) = _TerrainShaderTex11;
				SamplerState Sampler263_g117967 = SS30_g118001;
				half4 Coords263_g117967 = temp_output_37_0_g117967;
				half3 WorldPosition263_g117967 = temp_output_279_0_g117967;
				half3 WorldNormal263_g117967 = temp_output_280_0_g117967;
				half4 localSampleStochastic3D263_g117967 = SampleStochastic3D( Texture263_g117967 , Sampler263_g117967 , Coords263_g117967 , WorldPosition263_g117967 , WorldNormal263_g117967 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8861_g117895 = localSamplePlanar2D238_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8861_g117895 = localSamplePlanar3D246_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8861_g117895 = localSampleStochastic2D234_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8861_g117895 = localSampleStochastic3D263_g117967;
				#else
				float4 staticSwitch8861_g117895 = localSamplePlanar2D238_g117967;
				#endif
				float4 temp_output_7_0_g117932 = _TerrainShaderMin11;
				float4 temp_output_10_0_g117932 = ( _TerrainShaderMax11 - temp_output_7_0_g117932 );
				float4 temp_output_8819_0_g117895 = saturate( ( ( staticSwitch8861_g117895 - temp_output_7_0_g117932 ) / ( temp_output_10_0_g117932 + 0.0001 ) ) );
				half4 Masks_0312_g117920 = temp_output_8819_0_g117895;
				TEXTURE2D(Texture238_g117968) = _TerrainShaderTex12;
				SamplerState Sampler238_g117968 = SS30_g118001;
				half4 Input_Terrain_Coords_128836_g117895 = _TerrainCoord12;
				float4 temp_output_37_0_g117968 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117968 = temp_output_37_0_g117968;
				float3 temp_output_279_0_g117968 = Input_Position9197_g117895;
				half3 WorldPosition238_g117968 = temp_output_279_0_g117968;
				half4 localSamplePlanar2D238_g117968 = SamplePlanar2D( Texture238_g117968 , Sampler238_g117968 , Coords238_g117968 , WorldPosition238_g117968 );
				TEXTURE2D(Texture246_g117968) = _TerrainShaderTex12;
				SamplerState Sampler246_g117968 = SS30_g118001;
				half4 Coords246_g117968 = temp_output_37_0_g117968;
				half3 WorldPosition246_g117968 = temp_output_279_0_g117968;
				float3 temp_output_280_0_g117968 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117968 = temp_output_280_0_g117968;
				half4 localSamplePlanar3D246_g117968 = SamplePlanar3D( Texture246_g117968 , Sampler246_g117968 , Coords246_g117968 , WorldPosition246_g117968 , WorldNormal246_g117968 );
				TEXTURE2D(Texture234_g117968) = _TerrainShaderTex12;
				SamplerState Sampler234_g117968 = SS30_g118001;
				float4 Coords234_g117968 = temp_output_37_0_g117968;
				float3 WorldPosition234_g117968 = temp_output_279_0_g117968;
				float4 localSampleStochastic2D234_g117968 = SampleStochastic2D( Texture234_g117968 , Sampler234_g117968 , Coords234_g117968 , WorldPosition234_g117968 );
				TEXTURE2D(Texture263_g117968) = _TerrainShaderTex12;
				SamplerState Sampler263_g117968 = SS30_g118001;
				half4 Coords263_g117968 = temp_output_37_0_g117968;
				half3 WorldPosition263_g117968 = temp_output_279_0_g117968;
				half3 WorldNormal263_g117968 = temp_output_280_0_g117968;
				half4 localSampleStochastic3D263_g117968 = SampleStochastic3D( Texture263_g117968 , Sampler263_g117968 , Coords263_g117968 , WorldPosition263_g117968 , WorldNormal263_g117968 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8879_g117895 = localSamplePlanar2D238_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8879_g117895 = localSamplePlanar3D246_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8879_g117895 = localSampleStochastic2D234_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8879_g117895 = localSampleStochastic3D263_g117968;
				#else
				float4 staticSwitch8879_g117895 = localSamplePlanar2D238_g117968;
				#endif
				float4 temp_output_7_0_g117933 = _TerrainShaderMin12;
				float4 temp_output_10_0_g117933 = ( _TerrainShaderMax12 - temp_output_7_0_g117933 );
				float4 temp_output_8820_0_g117895 = saturate( ( ( staticSwitch8879_g117895 - temp_output_7_0_g117933 ) / ( temp_output_10_0_g117933 + 0.0001 ) ) );
				half4 Masks_0414_g117920 = temp_output_8820_0_g117895;
				float4 appendResult29_g117920 = (float4((Masks_015_g117920).z , (Masks_0210_g117920).z , (Masks_0312_g117920).z , (Masks_0414_g117920).z));
				half4 Control31_g117920 = Terrain_Control_127712_g117895;
				half4 Terrain_Height_128870_g117895 = ( appendResult29_g117920 * Control31_g117920 );
				float4 heights_127362_g117895 = Terrain_Height_128870_g117895;
				TEXTURE2D(Texture238_g117964) = _TerrainShaderTex13;
				SamplerState Sampler238_g117964 = SS30_g118001;
				half4 Input_Terrain_Coords_138960_g117895 = _TerrainCoord13;
				float4 temp_output_37_0_g117964 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117964 = temp_output_37_0_g117964;
				float3 temp_output_279_0_g117964 = Input_Position9197_g117895;
				half3 WorldPosition238_g117964 = temp_output_279_0_g117964;
				half4 localSamplePlanar2D238_g117964 = SamplePlanar2D( Texture238_g117964 , Sampler238_g117964 , Coords238_g117964 , WorldPosition238_g117964 );
				TEXTURE2D(Texture246_g117964) = _TerrainShaderTex13;
				SamplerState Sampler246_g117964 = SS30_g118001;
				half4 Coords246_g117964 = temp_output_37_0_g117964;
				half3 WorldPosition246_g117964 = temp_output_279_0_g117964;
				float3 temp_output_280_0_g117964 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117964 = temp_output_280_0_g117964;
				half4 localSamplePlanar3D246_g117964 = SamplePlanar3D( Texture246_g117964 , Sampler246_g117964 , Coords246_g117964 , WorldPosition246_g117964 , WorldNormal246_g117964 );
				TEXTURE2D(Texture234_g117964) = _TerrainShaderTex13;
				SamplerState Sampler234_g117964 = SS30_g118001;
				float4 Coords234_g117964 = temp_output_37_0_g117964;
				float3 WorldPosition234_g117964 = temp_output_279_0_g117964;
				float4 localSampleStochastic2D234_g117964 = SampleStochastic2D( Texture234_g117964 , Sampler234_g117964 , Coords234_g117964 , WorldPosition234_g117964 );
				TEXTURE2D(Texture263_g117964) = _TerrainShaderTex13;
				SamplerState Sampler263_g117964 = SS30_g118001;
				half4 Coords263_g117964 = temp_output_37_0_g117964;
				half3 WorldPosition263_g117964 = temp_output_279_0_g117964;
				half3 WorldNormal263_g117964 = temp_output_280_0_g117964;
				half4 localSampleStochastic3D263_g117964 = SampleStochastic3D( Texture263_g117964 , Sampler263_g117964 , Coords263_g117964 , WorldPosition263_g117964 , WorldNormal263_g117964 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch9000_g117895 = localSamplePlanar2D238_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch9000_g117895 = localSamplePlanar3D246_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch9000_g117895 = localSampleStochastic2D234_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch9000_g117895 = localSampleStochastic3D263_g117964;
				#else
				float4 staticSwitch9000_g117895 = localSamplePlanar2D238_g117964;
				#endif
				float4 temp_output_7_0_g117926 = _TerrainShaderMin13;
				float4 temp_output_10_0_g117926 = ( _TerrainShaderMax13 - temp_output_7_0_g117926 );
				float4 temp_output_8931_0_g117895 = saturate( ( ( staticSwitch9000_g117895 - temp_output_7_0_g117926 ) / ( temp_output_10_0_g117926 + 0.0001 ) ) );
				half4 Masks_015_g117927 = temp_output_8931_0_g117895;
				TEXTURE2D(Texture238_g117975) = _TerrainShaderTex14;
				SamplerState Sampler238_g117975 = SS30_g118001;
				half4 Input_Terrain_Coords_148961_g117895 = _TerrainCoord14;
				float4 temp_output_37_0_g117975 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117975 = temp_output_37_0_g117975;
				float3 temp_output_279_0_g117975 = Input_Position9197_g117895;
				half3 WorldPosition238_g117975 = temp_output_279_0_g117975;
				half4 localSamplePlanar2D238_g117975 = SamplePlanar2D( Texture238_g117975 , Sampler238_g117975 , Coords238_g117975 , WorldPosition238_g117975 );
				TEXTURE2D(Texture246_g117975) = _TerrainShaderTex14;
				SamplerState Sampler246_g117975 = SS30_g118001;
				half4 Coords246_g117975 = temp_output_37_0_g117975;
				half3 WorldPosition246_g117975 = temp_output_279_0_g117975;
				float3 temp_output_280_0_g117975 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117975 = temp_output_280_0_g117975;
				half4 localSamplePlanar3D246_g117975 = SamplePlanar3D( Texture246_g117975 , Sampler246_g117975 , Coords246_g117975 , WorldPosition246_g117975 , WorldNormal246_g117975 );
				TEXTURE2D(Texture234_g117975) = _TerrainShaderTex14;
				SamplerState Sampler234_g117975 = SS30_g118001;
				float4 Coords234_g117975 = temp_output_37_0_g117975;
				float3 WorldPosition234_g117975 = temp_output_279_0_g117975;
				float4 localSampleStochastic2D234_g117975 = SampleStochastic2D( Texture234_g117975 , Sampler234_g117975 , Coords234_g117975 , WorldPosition234_g117975 );
				TEXTURE2D(Texture263_g117975) = _TerrainShaderTex14;
				SamplerState Sampler263_g117975 = SS30_g118001;
				half4 Coords263_g117975 = temp_output_37_0_g117975;
				half3 WorldPosition263_g117975 = temp_output_279_0_g117975;
				half3 WorldNormal263_g117975 = temp_output_280_0_g117975;
				half4 localSampleStochastic3D263_g117975 = SampleStochastic3D( Texture263_g117975 , Sampler263_g117975 , Coords263_g117975 , WorldPosition263_g117975 , WorldNormal263_g117975 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch9001_g117895 = localSamplePlanar2D238_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch9001_g117895 = localSamplePlanar3D246_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch9001_g117895 = localSampleStochastic2D234_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch9001_g117895 = localSampleStochastic3D263_g117975;
				#else
				float4 staticSwitch9001_g117895 = localSamplePlanar2D238_g117975;
				#endif
				float4 temp_output_7_0_g117934 = _TerrainShaderMin14;
				float4 temp_output_10_0_g117934 = ( _TerrainShaderMax14 - temp_output_7_0_g117934 );
				float4 temp_output_8934_0_g117895 = saturate( ( ( staticSwitch9001_g117895 - temp_output_7_0_g117934 ) / ( temp_output_10_0_g117934 + 0.0001 ) ) );
				half4 Masks_0210_g117927 = temp_output_8934_0_g117895;
				TEXTURE2D(Texture238_g117976) = _TerrainShaderTex15;
				SamplerState Sampler238_g117976 = SS30_g118001;
				half4 Input_Terrain_Coords_158962_g117895 = _TerrainCoord15;
				float4 temp_output_37_0_g117976 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117976 = temp_output_37_0_g117976;
				float3 temp_output_279_0_g117976 = Input_Position9197_g117895;
				half3 WorldPosition238_g117976 = temp_output_279_0_g117976;
				half4 localSamplePlanar2D238_g117976 = SamplePlanar2D( Texture238_g117976 , Sampler238_g117976 , Coords238_g117976 , WorldPosition238_g117976 );
				TEXTURE2D(Texture246_g117976) = _TerrainShaderTex15;
				SamplerState Sampler246_g117976 = SS30_g118001;
				half4 Coords246_g117976 = temp_output_37_0_g117976;
				half3 WorldPosition246_g117976 = temp_output_279_0_g117976;
				float3 temp_output_280_0_g117976 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117976 = temp_output_280_0_g117976;
				half4 localSamplePlanar3D246_g117976 = SamplePlanar3D( Texture246_g117976 , Sampler246_g117976 , Coords246_g117976 , WorldPosition246_g117976 , WorldNormal246_g117976 );
				TEXTURE2D(Texture234_g117976) = _TerrainShaderTex15;
				SamplerState Sampler234_g117976 = SS30_g118001;
				float4 Coords234_g117976 = temp_output_37_0_g117976;
				float3 WorldPosition234_g117976 = temp_output_279_0_g117976;
				float4 localSampleStochastic2D234_g117976 = SampleStochastic2D( Texture234_g117976 , Sampler234_g117976 , Coords234_g117976 , WorldPosition234_g117976 );
				TEXTURE2D(Texture263_g117976) = _TerrainShaderTex15;
				SamplerState Sampler263_g117976 = SS30_g118001;
				half4 Coords263_g117976 = temp_output_37_0_g117976;
				half3 WorldPosition263_g117976 = temp_output_279_0_g117976;
				half3 WorldNormal263_g117976 = temp_output_280_0_g117976;
				half4 localSampleStochastic3D263_g117976 = SampleStochastic3D( Texture263_g117976 , Sampler263_g117976 , Coords263_g117976 , WorldPosition263_g117976 , WorldNormal263_g117976 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch9002_g117895 = localSamplePlanar2D238_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch9002_g117895 = localSamplePlanar3D246_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch9002_g117895 = localSampleStochastic2D234_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch9002_g117895 = localSampleStochastic3D263_g117976;
				#else
				float4 staticSwitch9002_g117895 = localSamplePlanar2D238_g117976;
				#endif
				float4 temp_output_7_0_g117935 = _TerrainShaderMin15;
				float4 temp_output_10_0_g117935 = ( _TerrainShaderMax15 - temp_output_7_0_g117935 );
				float4 temp_output_8935_0_g117895 = saturate( ( ( staticSwitch9002_g117895 - temp_output_7_0_g117935 ) / ( temp_output_10_0_g117935 + 0.0001 ) ) );
				half4 Masks_0312_g117927 = temp_output_8935_0_g117895;
				TEXTURE2D(Texture238_g117977) = _TerrainShaderTex16;
				SamplerState Sampler238_g117977 = SS30_g118001;
				half4 Input_Terrain_Coords_168959_g117895 = _TerrainCoord16;
				float4 temp_output_37_0_g117977 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117977 = temp_output_37_0_g117977;
				float3 temp_output_279_0_g117977 = Input_Position9197_g117895;
				half3 WorldPosition238_g117977 = temp_output_279_0_g117977;
				half4 localSamplePlanar2D238_g117977 = SamplePlanar2D( Texture238_g117977 , Sampler238_g117977 , Coords238_g117977 , WorldPosition238_g117977 );
				TEXTURE2D(Texture246_g117977) = _TerrainShaderTex16;
				SamplerState Sampler246_g117977 = SS30_g118001;
				half4 Coords246_g117977 = temp_output_37_0_g117977;
				half3 WorldPosition246_g117977 = temp_output_279_0_g117977;
				float3 temp_output_280_0_g117977 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117977 = temp_output_280_0_g117977;
				half4 localSamplePlanar3D246_g117977 = SamplePlanar3D( Texture246_g117977 , Sampler246_g117977 , Coords246_g117977 , WorldPosition246_g117977 , WorldNormal246_g117977 );
				TEXTURE2D(Texture234_g117977) = _TerrainShaderTex16;
				SamplerState Sampler234_g117977 = SS30_g118001;
				float4 Coords234_g117977 = temp_output_37_0_g117977;
				float3 WorldPosition234_g117977 = temp_output_279_0_g117977;
				float4 localSampleStochastic2D234_g117977 = SampleStochastic2D( Texture234_g117977 , Sampler234_g117977 , Coords234_g117977 , WorldPosition234_g117977 );
				TEXTURE2D(Texture263_g117977) = _TerrainShaderTex16;
				SamplerState Sampler263_g117977 = SS30_g118001;
				half4 Coords263_g117977 = temp_output_37_0_g117977;
				half3 WorldPosition263_g117977 = temp_output_279_0_g117977;
				half3 WorldNormal263_g117977 = temp_output_280_0_g117977;
				half4 localSampleStochastic3D263_g117977 = SampleStochastic3D( Texture263_g117977 , Sampler263_g117977 , Coords263_g117977 , WorldPosition263_g117977 , WorldNormal263_g117977 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch9003_g117895 = localSamplePlanar2D238_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch9003_g117895 = localSamplePlanar3D246_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch9003_g117895 = localSampleStochastic2D234_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch9003_g117895 = localSampleStochastic3D263_g117977;
				#else
				float4 staticSwitch9003_g117895 = localSamplePlanar2D238_g117977;
				#endif
				float4 temp_output_7_0_g117936 = _TerrainShaderMin16;
				float4 temp_output_10_0_g117936 = ( _TerrainShaderMax16 - temp_output_7_0_g117936 );
				float4 temp_output_8936_0_g117895 = saturate( ( ( staticSwitch9003_g117895 - temp_output_7_0_g117936 ) / ( temp_output_10_0_g117936 + 0.0001 ) ) );
				half4 Masks_0414_g117927 = temp_output_8936_0_g117895;
				float4 appendResult29_g117927 = (float4((Masks_015_g117927).z , (Masks_0210_g117927).z , (Masks_0312_g117927).z , (Masks_0414_g117927).z));
				half4 Control31_g117927 = Terrain_Control_167711_g117895;
				half4 Terrain_Height_169015_g117895 = ( appendResult29_g117927 * Control31_g117927 );
				float4 heights_167362_g117895 = Terrain_Height_169015_g117895;
				float heightTransition7362_g117895 = ( 1.0 - _TerrainHeightBlendValue );
				float4 weights_047362_g117895 = float4( 0,0,0,0 );
				float4 weights_087362_g117895 = float4( 0,0,0,0 );
				float4 weights_127362_g117895 = float4( 0,0,0,0 );
				float4 weights_167362_g117895 = float4( 0,0,0,0 );
				//Modified version of the HDRP terrain height based blending
				float maxHeight = 0;
				float4 weightedHeights_04 = float4( 0,0,0,0 );
				float4 weightedHeights_08 = float4( 0,0,0,0 );
				float4 weightedHeights_12 = float4( 0,0,0,0 );
				float4 weightedHeights_16 = float4( 0,0,0,0 );
				maxHeight = heights_047362_g117895.x;
				maxHeight = max(maxHeight, heights_047362_g117895.y);
				maxHeight = max(maxHeight, heights_047362_g117895.z);
				maxHeight = max(maxHeight, heights_047362_g117895.w);
				#ifdef TVE_TERRAIN_08
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				#endif
				#ifdef TVE_TERRAIN_12
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				maxHeight = max(maxHeight, heights_127362_g117895.x);
				maxHeight = max(maxHeight, heights_127362_g117895.y);
				maxHeight = max(maxHeight, heights_127362_g117895.z);
				maxHeight = max(maxHeight, heights_127362_g117895.w);
				#endif
				#ifdef TVE_TERRAIN_16
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				maxHeight = max(maxHeight, heights_127362_g117895.x);
				maxHeight = max(maxHeight, heights_127362_g117895.y);
				maxHeight = max(maxHeight, heights_127362_g117895.z);
				maxHeight = max(maxHeight, heights_127362_g117895.w);
				maxHeight = max(maxHeight, heights_167362_g117895.x);
				maxHeight = max(maxHeight, heights_167362_g117895.y);
				maxHeight = max(maxHeight, heights_167362_g117895.z);
				maxHeight = max(maxHeight, heights_167362_g117895.w);
				#endif
				float transition = max(heightTransition7362_g117895, 0.01);
				weightedHeights_04 = float4 ( heights_047362_g117895.x, heights_047362_g117895.y, heights_047362_g117895.z, heights_047362_g117895.w );
				weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
				weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g117895;
				#ifdef TVE_TERRAIN_08
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				#endif
				#ifdef TVE_TERRAIN_12
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				weightedHeights_12 = float4 ( heights_127362_g117895.x, heights_127362_g117895.y, heights_127362_g117895.z, heights_127362_g117895.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g117895;
				#endif
				#ifdef TVE_TERRAIN_16
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				weightedHeights_12 = float4 ( heights_127362_g117895.x, heights_127362_g117895.y, heights_127362_g117895.z, heights_127362_g117895.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g117895;
				weightedHeights_16 = float4 ( heights_167362_g117895.x, heights_167362_g117895.y, heights_167362_g117895.z, heights_167362_g117895.w );
				weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
				weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g117895;
				#endif
				float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
				float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
				float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
				float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
				float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
				weights_047362_g117895 = weightedHeights_04 / sumHeight.xxxx;
				#ifdef TVE_TERRAIN_08
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_12
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g117895 = weightedHeights_12 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_16
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g117895 = weightedHeights_12 / sumHeight.xxxx;
				weights_167362_g117895 = weightedHeights_16 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8792_g117895 = weights_047362_g117895;
				#else
				float4 staticSwitch8792_g117895 = control_047362_g117895;
				#endif
				half4 Terrain_Weights_046781_g117895 = staticSwitch8792_g117895;
				half4 Weights52_g117900 = Terrain_Weights_046781_g117895;
				TEXTURE2D(Texture238_g117941) = _TerrainAlbedoTex1;
				float localFilterTexture19_g117998 = ( 0.0 );
				SamplerState SamplerDefault19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g117998 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g117998 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g117998 = SamplerDefault19_g117998;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g117998 = SamplerDefault19_g117998;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g117998 = SamplerPoint19_g117998;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g117998 = SamplerLow19_g117998;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g117998 = SamplerMedium19_g117998;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g117998 = SamplerHigh19_g117998;
				#endif
				SamplerState Sampler238_g117941 = SS19_g117998;
				float4 temp_output_37_0_g117941 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117941 = temp_output_37_0_g117941;
				float3 temp_output_279_0_g117941 = Input_Position9197_g117895;
				half3 WorldPosition238_g117941 = temp_output_279_0_g117941;
				half4 localSamplePlanar2D238_g117941 = SamplePlanar2D( Texture238_g117941 , Sampler238_g117941 , Coords238_g117941 , WorldPosition238_g117941 );
				TEXTURE2D(Texture246_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler246_g117941 = SS19_g117998;
				half4 Coords246_g117941 = temp_output_37_0_g117941;
				half3 WorldPosition246_g117941 = temp_output_279_0_g117941;
				float3 temp_output_280_0_g117941 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117941 = temp_output_280_0_g117941;
				half4 localSamplePlanar3D246_g117941 = SamplePlanar3D( Texture246_g117941 , Sampler246_g117941 , Coords246_g117941 , WorldPosition246_g117941 , WorldNormal246_g117941 );
				TEXTURE2D(Texture234_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler234_g117941 = SS19_g117998;
				float4 Coords234_g117941 = temp_output_37_0_g117941;
				float3 WorldPosition234_g117941 = temp_output_279_0_g117941;
				float4 localSampleStochastic2D234_g117941 = SampleStochastic2D( Texture234_g117941 , Sampler234_g117941 , Coords234_g117941 , WorldPosition234_g117941 );
				TEXTURE2D(Texture263_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler263_g117941 = SS19_g117998;
				half4 Coords263_g117941 = temp_output_37_0_g117941;
				half3 WorldPosition263_g117941 = temp_output_279_0_g117941;
				half3 WorldNormal263_g117941 = temp_output_280_0_g117941;
				half4 localSampleStochastic3D263_g117941 = SampleStochastic3D( Texture263_g117941 , Sampler263_g117941 , Coords263_g117941 , WorldPosition263_g117941 , WorldNormal263_g117941 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8614_g117895 = localSamplePlanar2D238_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8614_g117895 = localSamplePlanar3D246_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8614_g117895 = localSampleStochastic2D234_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8614_g117895 = localSampleStochastic3D263_g117941;
				#else
				float4 staticSwitch8614_g117895 = localSamplePlanar2D238_g117941;
				#endif
				half4 Layer133_g117900 = staticSwitch8614_g117895;
				TEXTURE2D(Texture238_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler238_g117942 = SS19_g117998;
				float4 temp_output_37_0_g117942 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117942 = temp_output_37_0_g117942;
				float3 temp_output_279_0_g117942 = Input_Position9197_g117895;
				half3 WorldPosition238_g117942 = temp_output_279_0_g117942;
				half4 localSamplePlanar2D238_g117942 = SamplePlanar2D( Texture238_g117942 , Sampler238_g117942 , Coords238_g117942 , WorldPosition238_g117942 );
				TEXTURE2D(Texture246_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler246_g117942 = SS19_g117998;
				half4 Coords246_g117942 = temp_output_37_0_g117942;
				half3 WorldPosition246_g117942 = temp_output_279_0_g117942;
				float3 temp_output_280_0_g117942 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117942 = temp_output_280_0_g117942;
				half4 localSamplePlanar3D246_g117942 = SamplePlanar3D( Texture246_g117942 , Sampler246_g117942 , Coords246_g117942 , WorldPosition246_g117942 , WorldNormal246_g117942 );
				TEXTURE2D(Texture234_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler234_g117942 = SS19_g117998;
				float4 Coords234_g117942 = temp_output_37_0_g117942;
				float3 WorldPosition234_g117942 = temp_output_279_0_g117942;
				float4 localSampleStochastic2D234_g117942 = SampleStochastic2D( Texture234_g117942 , Sampler234_g117942 , Coords234_g117942 , WorldPosition234_g117942 );
				TEXTURE2D(Texture263_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler263_g117942 = SS19_g117998;
				half4 Coords263_g117942 = temp_output_37_0_g117942;
				half3 WorldPosition263_g117942 = temp_output_279_0_g117942;
				half3 WorldNormal263_g117942 = temp_output_280_0_g117942;
				half4 localSampleStochastic3D263_g117942 = SampleStochastic3D( Texture263_g117942 , Sampler263_g117942 , Coords263_g117942 , WorldPosition263_g117942 , WorldNormal263_g117942 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8629_g117895 = localSamplePlanar2D238_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8629_g117895 = localSamplePlanar3D246_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8629_g117895 = localSampleStochastic2D234_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8629_g117895 = localSampleStochastic3D263_g117942;
				#else
				float4 staticSwitch8629_g117895 = localSamplePlanar2D238_g117942;
				#endif
				half4 Layer237_g117900 = staticSwitch8629_g117895;
				TEXTURE2D(Texture238_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler238_g117945 = SS19_g117998;
				float4 temp_output_37_0_g117945 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117945 = temp_output_37_0_g117945;
				float3 temp_output_279_0_g117945 = Input_Position9197_g117895;
				half3 WorldPosition238_g117945 = temp_output_279_0_g117945;
				half4 localSamplePlanar2D238_g117945 = SamplePlanar2D( Texture238_g117945 , Sampler238_g117945 , Coords238_g117945 , WorldPosition238_g117945 );
				TEXTURE2D(Texture246_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler246_g117945 = SS19_g117998;
				half4 Coords246_g117945 = temp_output_37_0_g117945;
				half3 WorldPosition246_g117945 = temp_output_279_0_g117945;
				float3 temp_output_280_0_g117945 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117945 = temp_output_280_0_g117945;
				half4 localSamplePlanar3D246_g117945 = SamplePlanar3D( Texture246_g117945 , Sampler246_g117945 , Coords246_g117945 , WorldPosition246_g117945 , WorldNormal246_g117945 );
				TEXTURE2D(Texture234_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler234_g117945 = SS19_g117998;
				float4 Coords234_g117945 = temp_output_37_0_g117945;
				float3 WorldPosition234_g117945 = temp_output_279_0_g117945;
				float4 localSampleStochastic2D234_g117945 = SampleStochastic2D( Texture234_g117945 , Sampler234_g117945 , Coords234_g117945 , WorldPosition234_g117945 );
				TEXTURE2D(Texture263_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler263_g117945 = SS19_g117998;
				half4 Coords263_g117945 = temp_output_37_0_g117945;
				half3 WorldPosition263_g117945 = temp_output_279_0_g117945;
				half3 WorldNormal263_g117945 = temp_output_280_0_g117945;
				half4 localSampleStochastic3D263_g117945 = SampleStochastic3D( Texture263_g117945 , Sampler263_g117945 , Coords263_g117945 , WorldPosition263_g117945 , WorldNormal263_g117945 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8630_g117895 = localSamplePlanar2D238_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8630_g117895 = localSamplePlanar3D246_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8630_g117895 = localSampleStochastic2D234_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8630_g117895 = localSampleStochastic3D263_g117945;
				#else
				float4 staticSwitch8630_g117895 = localSamplePlanar2D238_g117945;
				#endif
				half4 Layer338_g117900 = staticSwitch8630_g117895;
				TEXTURE2D(Texture238_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler238_g117947 = SS19_g117998;
				float4 temp_output_37_0_g117947 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117947 = temp_output_37_0_g117947;
				float3 temp_output_279_0_g117947 = Input_Position9197_g117895;
				half3 WorldPosition238_g117947 = temp_output_279_0_g117947;
				half4 localSamplePlanar2D238_g117947 = SamplePlanar2D( Texture238_g117947 , Sampler238_g117947 , Coords238_g117947 , WorldPosition238_g117947 );
				TEXTURE2D(Texture246_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler246_g117947 = SS19_g117998;
				half4 Coords246_g117947 = temp_output_37_0_g117947;
				half3 WorldPosition246_g117947 = temp_output_279_0_g117947;
				float3 temp_output_280_0_g117947 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117947 = temp_output_280_0_g117947;
				half4 localSamplePlanar3D246_g117947 = SamplePlanar3D( Texture246_g117947 , Sampler246_g117947 , Coords246_g117947 , WorldPosition246_g117947 , WorldNormal246_g117947 );
				TEXTURE2D(Texture234_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler234_g117947 = SS19_g117998;
				float4 Coords234_g117947 = temp_output_37_0_g117947;
				float3 WorldPosition234_g117947 = temp_output_279_0_g117947;
				float4 localSampleStochastic2D234_g117947 = SampleStochastic2D( Texture234_g117947 , Sampler234_g117947 , Coords234_g117947 , WorldPosition234_g117947 );
				TEXTURE2D(Texture263_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler263_g117947 = SS19_g117998;
				half4 Coords263_g117947 = temp_output_37_0_g117947;
				half3 WorldPosition263_g117947 = temp_output_279_0_g117947;
				half3 WorldNormal263_g117947 = temp_output_280_0_g117947;
				half4 localSampleStochastic3D263_g117947 = SampleStochastic3D( Texture263_g117947 , Sampler263_g117947 , Coords263_g117947 , WorldPosition263_g117947 , WorldNormal263_g117947 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8631_g117895 = localSamplePlanar2D238_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8631_g117895 = localSamplePlanar3D246_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8631_g117895 = localSampleStochastic2D234_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8631_g117895 = localSampleStochastic3D263_g117947;
				#else
				float4 staticSwitch8631_g117895 = localSamplePlanar2D238_g117947;
				#endif
				half4 Layer439_g117900 = staticSwitch8631_g117895;
				float4 weightedBlendVar31_g117900 = Weights52_g117900;
				float4 weightedBlend31_g117900 = ( weightedBlendVar31_g117900.x*Layer133_g117900 + weightedBlendVar31_g117900.y*Layer237_g117900 + weightedBlendVar31_g117900.z*Layer338_g117900 + weightedBlendVar31_g117900.w*Layer439_g117900 );
				half4 Terrain_AAAA_047200_g117895 = weightedBlend31_g117900;
				half4 Layer_045_g117903 = Terrain_AAAA_047200_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8793_g117895 = weights_087362_g117895;
				#else
				float4 staticSwitch8793_g117895 = control_087362_g117895;
				#endif
				half4 Terrain_Weights_087340_g117895 = staticSwitch8793_g117895;
				half4 Weights52_g117910 = Terrain_Weights_087340_g117895;
				TEXTURE2D(Texture238_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler238_g117951 = SS19_g117998;
				float4 temp_output_37_0_g117951 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117951 = temp_output_37_0_g117951;
				float3 temp_output_279_0_g117951 = Input_Position9197_g117895;
				half3 WorldPosition238_g117951 = temp_output_279_0_g117951;
				half4 localSamplePlanar2D238_g117951 = SamplePlanar2D( Texture238_g117951 , Sampler238_g117951 , Coords238_g117951 , WorldPosition238_g117951 );
				TEXTURE2D(Texture246_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler246_g117951 = SS19_g117998;
				half4 Coords246_g117951 = temp_output_37_0_g117951;
				half3 WorldPosition246_g117951 = temp_output_279_0_g117951;
				float3 temp_output_280_0_g117951 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117951 = temp_output_280_0_g117951;
				half4 localSamplePlanar3D246_g117951 = SamplePlanar3D( Texture246_g117951 , Sampler246_g117951 , Coords246_g117951 , WorldPosition246_g117951 , WorldNormal246_g117951 );
				TEXTURE2D(Texture234_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler234_g117951 = SS19_g117998;
				float4 Coords234_g117951 = temp_output_37_0_g117951;
				float3 WorldPosition234_g117951 = temp_output_279_0_g117951;
				float4 localSampleStochastic2D234_g117951 = SampleStochastic2D( Texture234_g117951 , Sampler234_g117951 , Coords234_g117951 , WorldPosition234_g117951 );
				TEXTURE2D(Texture263_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler263_g117951 = SS19_g117998;
				half4 Coords263_g117951 = temp_output_37_0_g117951;
				half3 WorldPosition263_g117951 = temp_output_279_0_g117951;
				half3 WorldNormal263_g117951 = temp_output_280_0_g117951;
				half4 localSampleStochastic3D263_g117951 = SampleStochastic3D( Texture263_g117951 , Sampler263_g117951 , Coords263_g117951 , WorldPosition263_g117951 , WorldNormal263_g117951 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8690_g117895 = localSamplePlanar2D238_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8690_g117895 = localSamplePlanar3D246_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8690_g117895 = localSampleStochastic2D234_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8690_g117895 = localSampleStochastic3D263_g117951;
				#else
				float4 staticSwitch8690_g117895 = localSamplePlanar2D238_g117951;
				#endif
				half4 Layer133_g117910 = staticSwitch8690_g117895;
				TEXTURE2D(Texture238_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler238_g117978 = SS19_g117998;
				float4 temp_output_37_0_g117978 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117978 = temp_output_37_0_g117978;
				float3 temp_output_279_0_g117978 = Input_Position9197_g117895;
				half3 WorldPosition238_g117978 = temp_output_279_0_g117978;
				half4 localSamplePlanar2D238_g117978 = SamplePlanar2D( Texture238_g117978 , Sampler238_g117978 , Coords238_g117978 , WorldPosition238_g117978 );
				TEXTURE2D(Texture246_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler246_g117978 = SS19_g117998;
				half4 Coords246_g117978 = temp_output_37_0_g117978;
				half3 WorldPosition246_g117978 = temp_output_279_0_g117978;
				float3 temp_output_280_0_g117978 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117978 = temp_output_280_0_g117978;
				half4 localSamplePlanar3D246_g117978 = SamplePlanar3D( Texture246_g117978 , Sampler246_g117978 , Coords246_g117978 , WorldPosition246_g117978 , WorldNormal246_g117978 );
				TEXTURE2D(Texture234_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler234_g117978 = SS19_g117998;
				float4 Coords234_g117978 = temp_output_37_0_g117978;
				float3 WorldPosition234_g117978 = temp_output_279_0_g117978;
				float4 localSampleStochastic2D234_g117978 = SampleStochastic2D( Texture234_g117978 , Sampler234_g117978 , Coords234_g117978 , WorldPosition234_g117978 );
				TEXTURE2D(Texture263_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler263_g117978 = SS19_g117998;
				half4 Coords263_g117978 = temp_output_37_0_g117978;
				half3 WorldPosition263_g117978 = temp_output_279_0_g117978;
				half3 WorldNormal263_g117978 = temp_output_280_0_g117978;
				half4 localSampleStochastic3D263_g117978 = SampleStochastic3D( Texture263_g117978 , Sampler263_g117978 , Coords263_g117978 , WorldPosition263_g117978 , WorldNormal263_g117978 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8691_g117895 = localSamplePlanar2D238_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8691_g117895 = localSamplePlanar3D246_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8691_g117895 = localSampleStochastic2D234_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8691_g117895 = localSampleStochastic3D263_g117978;
				#else
				float4 staticSwitch8691_g117895 = localSamplePlanar2D238_g117978;
				#endif
				half4 Layer237_g117910 = staticSwitch8691_g117895;
				TEXTURE2D(Texture238_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler238_g117979 = SS19_g117998;
				float4 temp_output_37_0_g117979 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117979 = temp_output_37_0_g117979;
				float3 temp_output_279_0_g117979 = Input_Position9197_g117895;
				half3 WorldPosition238_g117979 = temp_output_279_0_g117979;
				half4 localSamplePlanar2D238_g117979 = SamplePlanar2D( Texture238_g117979 , Sampler238_g117979 , Coords238_g117979 , WorldPosition238_g117979 );
				TEXTURE2D(Texture246_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler246_g117979 = SS19_g117998;
				half4 Coords246_g117979 = temp_output_37_0_g117979;
				half3 WorldPosition246_g117979 = temp_output_279_0_g117979;
				float3 temp_output_280_0_g117979 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117979 = temp_output_280_0_g117979;
				half4 localSamplePlanar3D246_g117979 = SamplePlanar3D( Texture246_g117979 , Sampler246_g117979 , Coords246_g117979 , WorldPosition246_g117979 , WorldNormal246_g117979 );
				TEXTURE2D(Texture234_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler234_g117979 = SS19_g117998;
				float4 Coords234_g117979 = temp_output_37_0_g117979;
				float3 WorldPosition234_g117979 = temp_output_279_0_g117979;
				float4 localSampleStochastic2D234_g117979 = SampleStochastic2D( Texture234_g117979 , Sampler234_g117979 , Coords234_g117979 , WorldPosition234_g117979 );
				TEXTURE2D(Texture263_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler263_g117979 = SS19_g117998;
				half4 Coords263_g117979 = temp_output_37_0_g117979;
				half3 WorldPosition263_g117979 = temp_output_279_0_g117979;
				half3 WorldNormal263_g117979 = temp_output_280_0_g117979;
				half4 localSampleStochastic3D263_g117979 = SampleStochastic3D( Texture263_g117979 , Sampler263_g117979 , Coords263_g117979 , WorldPosition263_g117979 , WorldNormal263_g117979 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8692_g117895 = localSamplePlanar2D238_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8692_g117895 = localSamplePlanar3D246_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8692_g117895 = localSampleStochastic2D234_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8692_g117895 = localSampleStochastic3D263_g117979;
				#else
				float4 staticSwitch8692_g117895 = localSamplePlanar2D238_g117979;
				#endif
				half4 Layer338_g117910 = staticSwitch8692_g117895;
				TEXTURE2D(Texture238_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler238_g117980 = SS19_g117998;
				float4 temp_output_37_0_g117980 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117980 = temp_output_37_0_g117980;
				float3 temp_output_279_0_g117980 = Input_Position9197_g117895;
				half3 WorldPosition238_g117980 = temp_output_279_0_g117980;
				half4 localSamplePlanar2D238_g117980 = SamplePlanar2D( Texture238_g117980 , Sampler238_g117980 , Coords238_g117980 , WorldPosition238_g117980 );
				TEXTURE2D(Texture246_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler246_g117980 = SS19_g117998;
				half4 Coords246_g117980 = temp_output_37_0_g117980;
				half3 WorldPosition246_g117980 = temp_output_279_0_g117980;
				float3 temp_output_280_0_g117980 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117980 = temp_output_280_0_g117980;
				half4 localSamplePlanar3D246_g117980 = SamplePlanar3D( Texture246_g117980 , Sampler246_g117980 , Coords246_g117980 , WorldPosition246_g117980 , WorldNormal246_g117980 );
				TEXTURE2D(Texture234_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler234_g117980 = SS19_g117998;
				float4 Coords234_g117980 = temp_output_37_0_g117980;
				float3 WorldPosition234_g117980 = temp_output_279_0_g117980;
				float4 localSampleStochastic2D234_g117980 = SampleStochastic2D( Texture234_g117980 , Sampler234_g117980 , Coords234_g117980 , WorldPosition234_g117980 );
				TEXTURE2D(Texture263_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler263_g117980 = SS19_g117998;
				half4 Coords263_g117980 = temp_output_37_0_g117980;
				half3 WorldPosition263_g117980 = temp_output_279_0_g117980;
				half3 WorldNormal263_g117980 = temp_output_280_0_g117980;
				half4 localSampleStochastic3D263_g117980 = SampleStochastic3D( Texture263_g117980 , Sampler263_g117980 , Coords263_g117980 , WorldPosition263_g117980 , WorldNormal263_g117980 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8693_g117895 = localSamplePlanar2D238_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8693_g117895 = localSamplePlanar3D246_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8693_g117895 = localSampleStochastic2D234_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8693_g117895 = localSampleStochastic3D263_g117980;
				#else
				float4 staticSwitch8693_g117895 = localSamplePlanar2D238_g117980;
				#endif
				half4 Layer439_g117910 = staticSwitch8693_g117895;
				float4 weightedBlendVar31_g117910 = Weights52_g117910;
				float4 weightedBlend31_g117910 = ( weightedBlendVar31_g117910.x*Layer133_g117910 + weightedBlendVar31_g117910.y*Layer237_g117910 + weightedBlendVar31_g117910.z*Layer338_g117910 + weightedBlendVar31_g117910.w*Layer439_g117910 );
				half4 Terrain_AAAA_088665_g117895 = weightedBlend31_g117910;
				half4 Layer_0810_g117903 = Terrain_AAAA_088665_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8794_g117895 = weights_127362_g117895;
				#else
				float4 staticSwitch8794_g117895 = control_127362_g117895;
				#endif
				half4 Terrain_Weights_127710_g117895 = staticSwitch8794_g117895;
				half4 Weights52_g117917 = Terrain_Weights_127710_g117895;
				TEXTURE2D(Texture238_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler238_g117954 = SS19_g117998;
				float4 temp_output_37_0_g117954 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117954 = temp_output_37_0_g117954;
				float3 temp_output_279_0_g117954 = Input_Position9197_g117895;
				half3 WorldPosition238_g117954 = temp_output_279_0_g117954;
				half4 localSamplePlanar2D238_g117954 = SamplePlanar2D( Texture238_g117954 , Sampler238_g117954 , Coords238_g117954 , WorldPosition238_g117954 );
				TEXTURE2D(Texture246_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler246_g117954 = SS19_g117998;
				half4 Coords246_g117954 = temp_output_37_0_g117954;
				half3 WorldPosition246_g117954 = temp_output_279_0_g117954;
				float3 temp_output_280_0_g117954 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117954 = temp_output_280_0_g117954;
				half4 localSamplePlanar3D246_g117954 = SamplePlanar3D( Texture246_g117954 , Sampler246_g117954 , Coords246_g117954 , WorldPosition246_g117954 , WorldNormal246_g117954 );
				TEXTURE2D(Texture234_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler234_g117954 = SS19_g117998;
				float4 Coords234_g117954 = temp_output_37_0_g117954;
				float3 WorldPosition234_g117954 = temp_output_279_0_g117954;
				float4 localSampleStochastic2D234_g117954 = SampleStochastic2D( Texture234_g117954 , Sampler234_g117954 , Coords234_g117954 , WorldPosition234_g117954 );
				TEXTURE2D(Texture263_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler263_g117954 = SS19_g117998;
				half4 Coords263_g117954 = temp_output_37_0_g117954;
				half3 WorldPosition263_g117954 = temp_output_279_0_g117954;
				half3 WorldNormal263_g117954 = temp_output_280_0_g117954;
				half4 localSampleStochastic3D263_g117954 = SampleStochastic3D( Texture263_g117954 , Sampler263_g117954 , Coords263_g117954 , WorldPosition263_g117954 , WorldNormal263_g117954 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8872_g117895 = localSamplePlanar2D238_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8872_g117895 = localSamplePlanar3D246_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8872_g117895 = localSampleStochastic2D234_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8872_g117895 = localSampleStochastic3D263_g117954;
				#else
				float4 staticSwitch8872_g117895 = localSamplePlanar2D238_g117954;
				#endif
				half4 Layer133_g117917 = staticSwitch8872_g117895;
				TEXTURE2D(Texture238_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler238_g117957 = SS19_g117998;
				float4 temp_output_37_0_g117957 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117957 = temp_output_37_0_g117957;
				float3 temp_output_279_0_g117957 = Input_Position9197_g117895;
				half3 WorldPosition238_g117957 = temp_output_279_0_g117957;
				half4 localSamplePlanar2D238_g117957 = SamplePlanar2D( Texture238_g117957 , Sampler238_g117957 , Coords238_g117957 , WorldPosition238_g117957 );
				TEXTURE2D(Texture246_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler246_g117957 = SS19_g117998;
				half4 Coords246_g117957 = temp_output_37_0_g117957;
				half3 WorldPosition246_g117957 = temp_output_279_0_g117957;
				float3 temp_output_280_0_g117957 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117957 = temp_output_280_0_g117957;
				half4 localSamplePlanar3D246_g117957 = SamplePlanar3D( Texture246_g117957 , Sampler246_g117957 , Coords246_g117957 , WorldPosition246_g117957 , WorldNormal246_g117957 );
				TEXTURE2D(Texture234_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler234_g117957 = SS19_g117998;
				float4 Coords234_g117957 = temp_output_37_0_g117957;
				float3 WorldPosition234_g117957 = temp_output_279_0_g117957;
				float4 localSampleStochastic2D234_g117957 = SampleStochastic2D( Texture234_g117957 , Sampler234_g117957 , Coords234_g117957 , WorldPosition234_g117957 );
				TEXTURE2D(Texture263_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler263_g117957 = SS19_g117998;
				half4 Coords263_g117957 = temp_output_37_0_g117957;
				half3 WorldPosition263_g117957 = temp_output_279_0_g117957;
				half3 WorldNormal263_g117957 = temp_output_280_0_g117957;
				half4 localSampleStochastic3D263_g117957 = SampleStochastic3D( Texture263_g117957 , Sampler263_g117957 , Coords263_g117957 , WorldPosition263_g117957 , WorldNormal263_g117957 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8873_g117895 = localSamplePlanar2D238_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8873_g117895 = localSamplePlanar3D246_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8873_g117895 = localSampleStochastic2D234_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8873_g117895 = localSampleStochastic3D263_g117957;
				#else
				float4 staticSwitch8873_g117895 = localSamplePlanar2D238_g117957;
				#endif
				half4 Layer237_g117917 = staticSwitch8873_g117895;
				TEXTURE2D(Texture238_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler238_g117958 = SS19_g117998;
				float4 temp_output_37_0_g117958 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117958 = temp_output_37_0_g117958;
				float3 temp_output_279_0_g117958 = Input_Position9197_g117895;
				half3 WorldPosition238_g117958 = temp_output_279_0_g117958;
				half4 localSamplePlanar2D238_g117958 = SamplePlanar2D( Texture238_g117958 , Sampler238_g117958 , Coords238_g117958 , WorldPosition238_g117958 );
				TEXTURE2D(Texture246_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler246_g117958 = SS19_g117998;
				half4 Coords246_g117958 = temp_output_37_0_g117958;
				half3 WorldPosition246_g117958 = temp_output_279_0_g117958;
				float3 temp_output_280_0_g117958 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117958 = temp_output_280_0_g117958;
				half4 localSamplePlanar3D246_g117958 = SamplePlanar3D( Texture246_g117958 , Sampler246_g117958 , Coords246_g117958 , WorldPosition246_g117958 , WorldNormal246_g117958 );
				TEXTURE2D(Texture234_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler234_g117958 = SS19_g117998;
				float4 Coords234_g117958 = temp_output_37_0_g117958;
				float3 WorldPosition234_g117958 = temp_output_279_0_g117958;
				float4 localSampleStochastic2D234_g117958 = SampleStochastic2D( Texture234_g117958 , Sampler234_g117958 , Coords234_g117958 , WorldPosition234_g117958 );
				TEXTURE2D(Texture263_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler263_g117958 = SS19_g117998;
				half4 Coords263_g117958 = temp_output_37_0_g117958;
				half3 WorldPosition263_g117958 = temp_output_279_0_g117958;
				half3 WorldNormal263_g117958 = temp_output_280_0_g117958;
				half4 localSampleStochastic3D263_g117958 = SampleStochastic3D( Texture263_g117958 , Sampler263_g117958 , Coords263_g117958 , WorldPosition263_g117958 , WorldNormal263_g117958 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8874_g117895 = localSamplePlanar2D238_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8874_g117895 = localSamplePlanar3D246_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8874_g117895 = localSampleStochastic2D234_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8874_g117895 = localSampleStochastic3D263_g117958;
				#else
				float4 staticSwitch8874_g117895 = localSamplePlanar2D238_g117958;
				#endif
				half4 Layer338_g117917 = staticSwitch8874_g117895;
				TEXTURE2D(Texture238_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler238_g117959 = SS19_g117998;
				float4 temp_output_37_0_g117959 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117959 = temp_output_37_0_g117959;
				float3 temp_output_279_0_g117959 = Input_Position9197_g117895;
				half3 WorldPosition238_g117959 = temp_output_279_0_g117959;
				half4 localSamplePlanar2D238_g117959 = SamplePlanar2D( Texture238_g117959 , Sampler238_g117959 , Coords238_g117959 , WorldPosition238_g117959 );
				TEXTURE2D(Texture246_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler246_g117959 = SS19_g117998;
				half4 Coords246_g117959 = temp_output_37_0_g117959;
				half3 WorldPosition246_g117959 = temp_output_279_0_g117959;
				float3 temp_output_280_0_g117959 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117959 = temp_output_280_0_g117959;
				half4 localSamplePlanar3D246_g117959 = SamplePlanar3D( Texture246_g117959 , Sampler246_g117959 , Coords246_g117959 , WorldPosition246_g117959 , WorldNormal246_g117959 );
				TEXTURE2D(Texture234_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler234_g117959 = SS19_g117998;
				float4 Coords234_g117959 = temp_output_37_0_g117959;
				float3 WorldPosition234_g117959 = temp_output_279_0_g117959;
				float4 localSampleStochastic2D234_g117959 = SampleStochastic2D( Texture234_g117959 , Sampler234_g117959 , Coords234_g117959 , WorldPosition234_g117959 );
				TEXTURE2D(Texture263_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler263_g117959 = SS19_g117998;
				half4 Coords263_g117959 = temp_output_37_0_g117959;
				half3 WorldPosition263_g117959 = temp_output_279_0_g117959;
				half3 WorldNormal263_g117959 = temp_output_280_0_g117959;
				half4 localSampleStochastic3D263_g117959 = SampleStochastic3D( Texture263_g117959 , Sampler263_g117959 , Coords263_g117959 , WorldPosition263_g117959 , WorldNormal263_g117959 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8875_g117895 = localSamplePlanar2D238_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8875_g117895 = localSamplePlanar3D246_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8875_g117895 = localSampleStochastic2D234_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8875_g117895 = localSampleStochastic3D263_g117959;
				#else
				float4 staticSwitch8875_g117895 = localSamplePlanar2D238_g117959;
				#endif
				half4 Layer439_g117917 = staticSwitch8875_g117895;
				float4 weightedBlendVar31_g117917 = Weights52_g117917;
				float4 weightedBlend31_g117917 = ( weightedBlendVar31_g117917.x*Layer133_g117917 + weightedBlendVar31_g117917.y*Layer237_g117917 + weightedBlendVar31_g117917.z*Layer338_g117917 + weightedBlendVar31_g117917.w*Layer439_g117917 );
				half4 Terrain_AAAA_128851_g117895 = weightedBlend31_g117917;
				half4 Layer_1243_g117903 = Terrain_AAAA_128851_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8795_g117895 = weights_167362_g117895;
				#else
				float4 staticSwitch8795_g117895 = control_167362_g117895;
				#endif
				half4 Terrain_Weights_167709_g117895 = staticSwitch8795_g117895;
				half4 Weights52_g117924 = Terrain_Weights_167709_g117895;
				TEXTURE2D(Texture238_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler238_g117963 = SS19_g117998;
				float4 temp_output_37_0_g117963 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117963 = temp_output_37_0_g117963;
				float3 temp_output_279_0_g117963 = Input_Position9197_g117895;
				half3 WorldPosition238_g117963 = temp_output_279_0_g117963;
				half4 localSamplePlanar2D238_g117963 = SamplePlanar2D( Texture238_g117963 , Sampler238_g117963 , Coords238_g117963 , WorldPosition238_g117963 );
				TEXTURE2D(Texture246_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler246_g117963 = SS19_g117998;
				half4 Coords246_g117963 = temp_output_37_0_g117963;
				half3 WorldPosition246_g117963 = temp_output_279_0_g117963;
				float3 temp_output_280_0_g117963 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117963 = temp_output_280_0_g117963;
				half4 localSamplePlanar3D246_g117963 = SamplePlanar3D( Texture246_g117963 , Sampler246_g117963 , Coords246_g117963 , WorldPosition246_g117963 , WorldNormal246_g117963 );
				TEXTURE2D(Texture234_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler234_g117963 = SS19_g117998;
				float4 Coords234_g117963 = temp_output_37_0_g117963;
				float3 WorldPosition234_g117963 = temp_output_279_0_g117963;
				float4 localSampleStochastic2D234_g117963 = SampleStochastic2D( Texture234_g117963 , Sampler234_g117963 , Coords234_g117963 , WorldPosition234_g117963 );
				TEXTURE2D(Texture263_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler263_g117963 = SS19_g117998;
				half4 Coords263_g117963 = temp_output_37_0_g117963;
				half3 WorldPosition263_g117963 = temp_output_279_0_g117963;
				half3 WorldNormal263_g117963 = temp_output_280_0_g117963;
				half4 localSampleStochastic3D263_g117963 = SampleStochastic3D( Texture263_g117963 , Sampler263_g117963 , Coords263_g117963 , WorldPosition263_g117963 , WorldNormal263_g117963 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8972_g117895 = localSamplePlanar2D238_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8972_g117895 = localSamplePlanar3D246_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8972_g117895 = localSampleStochastic2D234_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8972_g117895 = localSampleStochastic3D263_g117963;
				#else
				float4 staticSwitch8972_g117895 = localSamplePlanar2D238_g117963;
				#endif
				half4 Layer133_g117924 = staticSwitch8972_g117895;
				TEXTURE2D(Texture238_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler238_g117969 = SS19_g117998;
				float4 temp_output_37_0_g117969 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117969 = temp_output_37_0_g117969;
				float3 temp_output_279_0_g117969 = Input_Position9197_g117895;
				half3 WorldPosition238_g117969 = temp_output_279_0_g117969;
				half4 localSamplePlanar2D238_g117969 = SamplePlanar2D( Texture238_g117969 , Sampler238_g117969 , Coords238_g117969 , WorldPosition238_g117969 );
				TEXTURE2D(Texture246_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler246_g117969 = SS19_g117998;
				half4 Coords246_g117969 = temp_output_37_0_g117969;
				half3 WorldPosition246_g117969 = temp_output_279_0_g117969;
				float3 temp_output_280_0_g117969 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117969 = temp_output_280_0_g117969;
				half4 localSamplePlanar3D246_g117969 = SamplePlanar3D( Texture246_g117969 , Sampler246_g117969 , Coords246_g117969 , WorldPosition246_g117969 , WorldNormal246_g117969 );
				TEXTURE2D(Texture234_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler234_g117969 = SS19_g117998;
				float4 Coords234_g117969 = temp_output_37_0_g117969;
				float3 WorldPosition234_g117969 = temp_output_279_0_g117969;
				float4 localSampleStochastic2D234_g117969 = SampleStochastic2D( Texture234_g117969 , Sampler234_g117969 , Coords234_g117969 , WorldPosition234_g117969 );
				TEXTURE2D(Texture263_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler263_g117969 = SS19_g117998;
				half4 Coords263_g117969 = temp_output_37_0_g117969;
				half3 WorldPosition263_g117969 = temp_output_279_0_g117969;
				half3 WorldNormal263_g117969 = temp_output_280_0_g117969;
				half4 localSampleStochastic3D263_g117969 = SampleStochastic3D( Texture263_g117969 , Sampler263_g117969 , Coords263_g117969 , WorldPosition263_g117969 , WorldNormal263_g117969 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8973_g117895 = localSamplePlanar2D238_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8973_g117895 = localSamplePlanar3D246_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8973_g117895 = localSampleStochastic2D234_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8973_g117895 = localSampleStochastic3D263_g117969;
				#else
				float4 staticSwitch8973_g117895 = localSamplePlanar2D238_g117969;
				#endif
				half4 Layer237_g117924 = staticSwitch8973_g117895;
				TEXTURE2D(Texture238_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler238_g117970 = SS19_g117998;
				float4 temp_output_37_0_g117970 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117970 = temp_output_37_0_g117970;
				float3 temp_output_279_0_g117970 = Input_Position9197_g117895;
				half3 WorldPosition238_g117970 = temp_output_279_0_g117970;
				half4 localSamplePlanar2D238_g117970 = SamplePlanar2D( Texture238_g117970 , Sampler238_g117970 , Coords238_g117970 , WorldPosition238_g117970 );
				TEXTURE2D(Texture246_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler246_g117970 = SS19_g117998;
				half4 Coords246_g117970 = temp_output_37_0_g117970;
				half3 WorldPosition246_g117970 = temp_output_279_0_g117970;
				float3 temp_output_280_0_g117970 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117970 = temp_output_280_0_g117970;
				half4 localSamplePlanar3D246_g117970 = SamplePlanar3D( Texture246_g117970 , Sampler246_g117970 , Coords246_g117970 , WorldPosition246_g117970 , WorldNormal246_g117970 );
				TEXTURE2D(Texture234_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler234_g117970 = SS19_g117998;
				float4 Coords234_g117970 = temp_output_37_0_g117970;
				float3 WorldPosition234_g117970 = temp_output_279_0_g117970;
				float4 localSampleStochastic2D234_g117970 = SampleStochastic2D( Texture234_g117970 , Sampler234_g117970 , Coords234_g117970 , WorldPosition234_g117970 );
				TEXTURE2D(Texture263_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler263_g117970 = SS19_g117998;
				half4 Coords263_g117970 = temp_output_37_0_g117970;
				half3 WorldPosition263_g117970 = temp_output_279_0_g117970;
				half3 WorldNormal263_g117970 = temp_output_280_0_g117970;
				half4 localSampleStochastic3D263_g117970 = SampleStochastic3D( Texture263_g117970 , Sampler263_g117970 , Coords263_g117970 , WorldPosition263_g117970 , WorldNormal263_g117970 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8974_g117895 = localSamplePlanar2D238_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8974_g117895 = localSamplePlanar3D246_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8974_g117895 = localSampleStochastic2D234_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8974_g117895 = localSampleStochastic3D263_g117970;
				#else
				float4 staticSwitch8974_g117895 = localSamplePlanar2D238_g117970;
				#endif
				half4 Layer338_g117924 = staticSwitch8974_g117895;
				TEXTURE2D(Texture238_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler238_g117971 = SS19_g117998;
				float4 temp_output_37_0_g117971 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117971 = temp_output_37_0_g117971;
				float3 temp_output_279_0_g117971 = Input_Position9197_g117895;
				half3 WorldPosition238_g117971 = temp_output_279_0_g117971;
				half4 localSamplePlanar2D238_g117971 = SamplePlanar2D( Texture238_g117971 , Sampler238_g117971 , Coords238_g117971 , WorldPosition238_g117971 );
				TEXTURE2D(Texture246_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler246_g117971 = SS19_g117998;
				half4 Coords246_g117971 = temp_output_37_0_g117971;
				half3 WorldPosition246_g117971 = temp_output_279_0_g117971;
				float3 temp_output_280_0_g117971 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117971 = temp_output_280_0_g117971;
				half4 localSamplePlanar3D246_g117971 = SamplePlanar3D( Texture246_g117971 , Sampler246_g117971 , Coords246_g117971 , WorldPosition246_g117971 , WorldNormal246_g117971 );
				TEXTURE2D(Texture234_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler234_g117971 = SS19_g117998;
				float4 Coords234_g117971 = temp_output_37_0_g117971;
				float3 WorldPosition234_g117971 = temp_output_279_0_g117971;
				float4 localSampleStochastic2D234_g117971 = SampleStochastic2D( Texture234_g117971 , Sampler234_g117971 , Coords234_g117971 , WorldPosition234_g117971 );
				TEXTURE2D(Texture263_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler263_g117971 = SS19_g117998;
				half4 Coords263_g117971 = temp_output_37_0_g117971;
				half3 WorldPosition263_g117971 = temp_output_279_0_g117971;
				half3 WorldNormal263_g117971 = temp_output_280_0_g117971;
				half4 localSampleStochastic3D263_g117971 = SampleStochastic3D( Texture263_g117971 , Sampler263_g117971 , Coords263_g117971 , WorldPosition263_g117971 , WorldNormal263_g117971 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8975_g117895 = localSamplePlanar2D238_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8975_g117895 = localSamplePlanar3D246_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8975_g117895 = localSampleStochastic2D234_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8975_g117895 = localSampleStochastic3D263_g117971;
				#else
				float4 staticSwitch8975_g117895 = localSamplePlanar2D238_g117971;
				#endif
				half4 Layer439_g117924 = staticSwitch8975_g117895;
				float4 weightedBlendVar31_g117924 = Weights52_g117924;
				float4 weightedBlend31_g117924 = ( weightedBlendVar31_g117924.x*Layer133_g117924 + weightedBlendVar31_g117924.y*Layer237_g117924 + weightedBlendVar31_g117924.z*Layer338_g117924 + weightedBlendVar31_g117924.w*Layer439_g117924 );
				half4 Terrain_AAAA_168986_g117895 = weightedBlend31_g117924;
				half4 Layer_1644_g117903 = Terrain_AAAA_168986_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117903 = Layer_045_g117903;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 + Layer_1243_g117903 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 + Layer_1243_g117903 + Layer_1644_g117903 );
				#else
				float4 staticSwitch40_g117903 = Layer_045_g117903;
				#endif
				half4 Blend_Albedo7468_g117895 = staticSwitch40_g117903;
				half4 Weights52_g117989 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117989 = _TerrainColor1;
				half4 Layer237_g117989 = _TerrainColor2;
				half4 Layer338_g117989 = _TerrainColor3;
				half4 Layer439_g117989 = _TerrainColor4;
				float4 weightedBlendVar31_g117989 = Weights52_g117989;
				float4 weightedBlend31_g117989 = ( weightedBlendVar31_g117989.x*Layer133_g117989 + weightedBlendVar31_g117989.y*Layer237_g117989 + weightedBlendVar31_g117989.z*Layer338_g117989 + weightedBlendVar31_g117989.w*Layer439_g117989 );
				half4 Terrain_Color_049349_g117895 = weightedBlend31_g117989;
				half4 Layer_045_g117994 = Terrain_Color_049349_g117895;
				half4 Weights52_g117990 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117990 = _TerrainColor5;
				half4 Layer237_g117990 = _TerrainColor6;
				half4 Layer338_g117990 = _TerrainColor7;
				half4 Layer439_g117990 = _TerrainColor8;
				float4 weightedBlendVar31_g117990 = Weights52_g117990;
				float4 weightedBlend31_g117990 = ( weightedBlendVar31_g117990.x*Layer133_g117990 + weightedBlendVar31_g117990.y*Layer237_g117990 + weightedBlendVar31_g117990.z*Layer338_g117990 + weightedBlendVar31_g117990.w*Layer439_g117990 );
				half4 Terrain_Color_089361_g117895 = weightedBlend31_g117990;
				half4 Layer_0810_g117994 = Terrain_Color_089361_g117895;
				half4 Weights52_g117991 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117991 = _TerrainColor9;
				half4 Layer237_g117991 = _TerrainColor10;
				half4 Layer338_g117991 = _TerrainColor11;
				half4 Layer439_g117991 = _TerrainColor12;
				float4 weightedBlendVar31_g117991 = Weights52_g117991;
				float4 weightedBlend31_g117991 = ( weightedBlendVar31_g117991.x*Layer133_g117991 + weightedBlendVar31_g117991.y*Layer237_g117991 + weightedBlendVar31_g117991.z*Layer338_g117991 + weightedBlendVar31_g117991.w*Layer439_g117991 );
				half4 Terrain_Color_129373_g117895 = weightedBlend31_g117991;
				half4 Layer_1243_g117994 = Terrain_Color_129373_g117895;
				half4 Weights52_g117992 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117992 = _TerrainColor13;
				half4 Layer237_g117992 = _TerrainColor14;
				half4 Layer338_g117992 = _TerrainColor15;
				half4 Layer439_g117992 = _TerrainColor16;
				float4 weightedBlendVar31_g117992 = Weights52_g117992;
				float4 weightedBlend31_g117992 = ( weightedBlendVar31_g117992.x*Layer133_g117992 + weightedBlendVar31_g117992.y*Layer237_g117992 + weightedBlendVar31_g117992.z*Layer338_g117992 + weightedBlendVar31_g117992.w*Layer439_g117992 );
				half4 Terrain_Color_169381_g117895 = weightedBlend31_g117992;
				half4 Layer_1644_g117994 = Terrain_Color_169381_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117994 = Layer_045_g117994;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 + Layer_1243_g117994 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 + Layer_1243_g117994 + Layer_1644_g117994 );
				#else
				float4 staticSwitch40_g117994 = Layer_045_g117994;
				#endif
				half4 Blend_TerrainColor9387_g117895 = staticSwitch40_g117994;
				half3 Final_Albedo9144_g117895 = ( (Blend_Albedo7468_g117895).xyz * (Blend_TerrainColor9387_g117895).rgb * (_TerrainColor).rgb );
				half3 Local_Albedo9199_g117893 = Final_Albedo9144_g117895;
				float3 In_Albedo3_g117894 = Local_Albedo9199_g117893;
				float3 In_AlbedoRaw3_g117894 = Local_Albedo9199_g117893;
				float3 ase_worldBitangent = packedInput.ase_texcoord7.xyz;
				float3x3 ase_worldToTangent = float3x3(tangentWS.xyz,ase_worldBitangent,normalWS);
				half4 Weights52_g117896 = Terrain_Weights_046781_g117895;
				TEXTURE2D(Texture238_g117987) = _TerrainNormalTex1;
				float localFilterTexture29_g118002 = ( 0.0 );
				SamplerState SamplerDefault29_g118002 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g118002 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g118002 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g118002 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g118002 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g118002 = SamplerDefault29_g118002;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g118002 = SamplerDefault29_g118002;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g118002 = SamplerPoint29_g118002;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g118002 = SamplerLow29_g118002;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g118002 = SamplerMedium29_g118002;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g118002 = SamplerHigh29_g118002;
				#endif
				SamplerState Sampler238_g117987 = SS29_g118002;
				float4 temp_output_37_0_g117987 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117987 = temp_output_37_0_g117987;
				float3 temp_output_279_0_g117987 = Input_Position9197_g117895;
				half3 WorldPosition238_g117987 = temp_output_279_0_g117987;
				half4 localSamplePlanar2D238_g117987 = SamplePlanar2D( Texture238_g117987 , Sampler238_g117987 , Coords238_g117987 , WorldPosition238_g117987 );
				TEXTURE2D(Texture246_g117987) = _TerrainNormalTex1;
				SamplerState Sampler246_g117987 = SS29_g118002;
				half4 Coords246_g117987 = temp_output_37_0_g117987;
				half3 WorldPosition246_g117987 = temp_output_279_0_g117987;
				float3 temp_output_280_0_g117987 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117987 = temp_output_280_0_g117987;
				half4 localSamplePlanar3D246_g117987 = SamplePlanar3D( Texture246_g117987 , Sampler246_g117987 , Coords246_g117987 , WorldPosition246_g117987 , WorldNormal246_g117987 );
				TEXTURE2D(Texture234_g117987) = _TerrainNormalTex1;
				SamplerState Sampler234_g117987 = SS29_g118002;
				float4 Coords234_g117987 = temp_output_37_0_g117987;
				float3 WorldPosition234_g117987 = temp_output_279_0_g117987;
				float4 localSampleStochastic2D234_g117987 = SampleStochastic2D( Texture234_g117987 , Sampler234_g117987 , Coords234_g117987 , WorldPosition234_g117987 );
				TEXTURE2D(Texture263_g117987) = _TerrainNormalTex1;
				SamplerState Sampler263_g117987 = SS29_g118002;
				half4 Coords263_g117987 = temp_output_37_0_g117987;
				half3 WorldPosition263_g117987 = temp_output_279_0_g117987;
				half3 WorldNormal263_g117987 = temp_output_280_0_g117987;
				half4 localSampleStochastic3D263_g117987 = SampleStochastic3D( Texture263_g117987 , Sampler263_g117987 , Coords263_g117987 , WorldPosition263_g117987 , WorldNormal263_g117987 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8635_g117895 = localSamplePlanar2D238_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8635_g117895 = localSamplePlanar3D246_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8635_g117895 = localSampleStochastic2D234_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8635_g117895 = localSampleStochastic3D263_g117987;
				#else
				float4 staticSwitch8635_g117895 = localSamplePlanar2D238_g117987;
				#endif
				half4 Layer133_g117896 = staticSwitch8635_g117895;
				TEXTURE2D(Texture238_g117943) = _TerrainNormalTex2;
				SamplerState Sampler238_g117943 = SS29_g118002;
				float4 temp_output_37_0_g117943 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117943 = temp_output_37_0_g117943;
				float3 temp_output_279_0_g117943 = Input_Position9197_g117895;
				half3 WorldPosition238_g117943 = temp_output_279_0_g117943;
				half4 localSamplePlanar2D238_g117943 = SamplePlanar2D( Texture238_g117943 , Sampler238_g117943 , Coords238_g117943 , WorldPosition238_g117943 );
				TEXTURE2D(Texture246_g117943) = _TerrainNormalTex2;
				SamplerState Sampler246_g117943 = SS29_g118002;
				half4 Coords246_g117943 = temp_output_37_0_g117943;
				half3 WorldPosition246_g117943 = temp_output_279_0_g117943;
				float3 temp_output_280_0_g117943 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117943 = temp_output_280_0_g117943;
				half4 localSamplePlanar3D246_g117943 = SamplePlanar3D( Texture246_g117943 , Sampler246_g117943 , Coords246_g117943 , WorldPosition246_g117943 , WorldNormal246_g117943 );
				TEXTURE2D(Texture234_g117943) = _TerrainNormalTex2;
				SamplerState Sampler234_g117943 = SS29_g118002;
				float4 Coords234_g117943 = temp_output_37_0_g117943;
				float3 WorldPosition234_g117943 = temp_output_279_0_g117943;
				float4 localSampleStochastic2D234_g117943 = SampleStochastic2D( Texture234_g117943 , Sampler234_g117943 , Coords234_g117943 , WorldPosition234_g117943 );
				TEXTURE2D(Texture263_g117943) = _TerrainNormalTex2;
				SamplerState Sampler263_g117943 = SS29_g118002;
				half4 Coords263_g117943 = temp_output_37_0_g117943;
				half3 WorldPosition263_g117943 = temp_output_279_0_g117943;
				half3 WorldNormal263_g117943 = temp_output_280_0_g117943;
				half4 localSampleStochastic3D263_g117943 = SampleStochastic3D( Texture263_g117943 , Sampler263_g117943 , Coords263_g117943 , WorldPosition263_g117943 , WorldNormal263_g117943 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8636_g117895 = localSamplePlanar2D238_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8636_g117895 = localSamplePlanar3D246_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8636_g117895 = localSampleStochastic2D234_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8636_g117895 = localSampleStochastic3D263_g117943;
				#else
				float4 staticSwitch8636_g117895 = localSamplePlanar2D238_g117943;
				#endif
				half4 Layer237_g117896 = staticSwitch8636_g117895;
				TEXTURE2D(Texture238_g117946) = _TerrainNormalTex3;
				SamplerState Sampler238_g117946 = SS29_g118002;
				float4 temp_output_37_0_g117946 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117946 = temp_output_37_0_g117946;
				float3 temp_output_279_0_g117946 = Input_Position9197_g117895;
				half3 WorldPosition238_g117946 = temp_output_279_0_g117946;
				half4 localSamplePlanar2D238_g117946 = SamplePlanar2D( Texture238_g117946 , Sampler238_g117946 , Coords238_g117946 , WorldPosition238_g117946 );
				TEXTURE2D(Texture246_g117946) = _TerrainNormalTex3;
				SamplerState Sampler246_g117946 = SS29_g118002;
				half4 Coords246_g117946 = temp_output_37_0_g117946;
				half3 WorldPosition246_g117946 = temp_output_279_0_g117946;
				float3 temp_output_280_0_g117946 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117946 = temp_output_280_0_g117946;
				half4 localSamplePlanar3D246_g117946 = SamplePlanar3D( Texture246_g117946 , Sampler246_g117946 , Coords246_g117946 , WorldPosition246_g117946 , WorldNormal246_g117946 );
				TEXTURE2D(Texture234_g117946) = _TerrainNormalTex3;
				SamplerState Sampler234_g117946 = SS29_g118002;
				float4 Coords234_g117946 = temp_output_37_0_g117946;
				float3 WorldPosition234_g117946 = temp_output_279_0_g117946;
				float4 localSampleStochastic2D234_g117946 = SampleStochastic2D( Texture234_g117946 , Sampler234_g117946 , Coords234_g117946 , WorldPosition234_g117946 );
				TEXTURE2D(Texture263_g117946) = _TerrainNormalTex3;
				SamplerState Sampler263_g117946 = SS29_g118002;
				half4 Coords263_g117946 = temp_output_37_0_g117946;
				half3 WorldPosition263_g117946 = temp_output_279_0_g117946;
				half3 WorldNormal263_g117946 = temp_output_280_0_g117946;
				half4 localSampleStochastic3D263_g117946 = SampleStochastic3D( Texture263_g117946 , Sampler263_g117946 , Coords263_g117946 , WorldPosition263_g117946 , WorldNormal263_g117946 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8637_g117895 = localSamplePlanar2D238_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8637_g117895 = localSamplePlanar3D246_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8637_g117895 = localSampleStochastic2D234_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8637_g117895 = localSampleStochastic3D263_g117946;
				#else
				float4 staticSwitch8637_g117895 = localSamplePlanar2D238_g117946;
				#endif
				half4 Layer338_g117896 = staticSwitch8637_g117895;
				TEXTURE2D(Texture238_g117948) = _TerrainNormalTex4;
				SamplerState Sampler238_g117948 = SS29_g118002;
				float4 temp_output_37_0_g117948 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117948 = temp_output_37_0_g117948;
				float3 temp_output_279_0_g117948 = Input_Position9197_g117895;
				half3 WorldPosition238_g117948 = temp_output_279_0_g117948;
				half4 localSamplePlanar2D238_g117948 = SamplePlanar2D( Texture238_g117948 , Sampler238_g117948 , Coords238_g117948 , WorldPosition238_g117948 );
				TEXTURE2D(Texture246_g117948) = _TerrainNormalTex4;
				SamplerState Sampler246_g117948 = SS29_g118002;
				half4 Coords246_g117948 = temp_output_37_0_g117948;
				half3 WorldPosition246_g117948 = temp_output_279_0_g117948;
				float3 temp_output_280_0_g117948 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117948 = temp_output_280_0_g117948;
				half4 localSamplePlanar3D246_g117948 = SamplePlanar3D( Texture246_g117948 , Sampler246_g117948 , Coords246_g117948 , WorldPosition246_g117948 , WorldNormal246_g117948 );
				TEXTURE2D(Texture234_g117948) = _TerrainNormalTex4;
				SamplerState Sampler234_g117948 = SS29_g118002;
				float4 Coords234_g117948 = temp_output_37_0_g117948;
				float3 WorldPosition234_g117948 = temp_output_279_0_g117948;
				float4 localSampleStochastic2D234_g117948 = SampleStochastic2D( Texture234_g117948 , Sampler234_g117948 , Coords234_g117948 , WorldPosition234_g117948 );
				TEXTURE2D(Texture263_g117948) = _TerrainNormalTex4;
				SamplerState Sampler263_g117948 = SS29_g118002;
				half4 Coords263_g117948 = temp_output_37_0_g117948;
				half3 WorldPosition263_g117948 = temp_output_279_0_g117948;
				half3 WorldNormal263_g117948 = temp_output_280_0_g117948;
				half4 localSampleStochastic3D263_g117948 = SampleStochastic3D( Texture263_g117948 , Sampler263_g117948 , Coords263_g117948 , WorldPosition263_g117948 , WorldNormal263_g117948 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8638_g117895 = localSamplePlanar2D238_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8638_g117895 = localSamplePlanar3D246_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8638_g117895 = localSampleStochastic2D234_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8638_g117895 = localSampleStochastic3D263_g117948;
				#else
				float4 staticSwitch8638_g117895 = localSamplePlanar2D238_g117948;
				#endif
				half4 Layer439_g117896 = staticSwitch8638_g117895;
				float4 weightedBlendVar31_g117896 = Weights52_g117896;
				float4 weightedBlend31_g117896 = ( weightedBlendVar31_g117896.x*Layer133_g117896 + weightedBlendVar31_g117896.y*Layer237_g117896 + weightedBlendVar31_g117896.z*Layer338_g117896 + weightedBlendVar31_g117896.w*Layer439_g117896 );
				half4 Terrain_B_047202_g117895 = weightedBlend31_g117896;
				half4 Layer_045_g117902 = Terrain_B_047202_g117895;
				half4 Weights52_g117911 = Terrain_Weights_087340_g117895;
				TEXTURE2D(Texture238_g117952) = _TerrainNormalTex5;
				SamplerState Sampler238_g117952 = SS29_g118002;
				float4 temp_output_37_0_g117952 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117952 = temp_output_37_0_g117952;
				float3 temp_output_279_0_g117952 = Input_Position9197_g117895;
				half3 WorldPosition238_g117952 = temp_output_279_0_g117952;
				half4 localSamplePlanar2D238_g117952 = SamplePlanar2D( Texture238_g117952 , Sampler238_g117952 , Coords238_g117952 , WorldPosition238_g117952 );
				TEXTURE2D(Texture246_g117952) = _TerrainNormalTex5;
				SamplerState Sampler246_g117952 = SS29_g118002;
				half4 Coords246_g117952 = temp_output_37_0_g117952;
				half3 WorldPosition246_g117952 = temp_output_279_0_g117952;
				float3 temp_output_280_0_g117952 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117952 = temp_output_280_0_g117952;
				half4 localSamplePlanar3D246_g117952 = SamplePlanar3D( Texture246_g117952 , Sampler246_g117952 , Coords246_g117952 , WorldPosition246_g117952 , WorldNormal246_g117952 );
				TEXTURE2D(Texture234_g117952) = _TerrainNormalTex5;
				SamplerState Sampler234_g117952 = SS29_g118002;
				float4 Coords234_g117952 = temp_output_37_0_g117952;
				float3 WorldPosition234_g117952 = temp_output_279_0_g117952;
				float4 localSampleStochastic2D234_g117952 = SampleStochastic2D( Texture234_g117952 , Sampler234_g117952 , Coords234_g117952 , WorldPosition234_g117952 );
				TEXTURE2D(Texture263_g117952) = _TerrainNormalTex5;
				SamplerState Sampler263_g117952 = SS29_g118002;
				half4 Coords263_g117952 = temp_output_37_0_g117952;
				half3 WorldPosition263_g117952 = temp_output_279_0_g117952;
				half3 WorldNormal263_g117952 = temp_output_280_0_g117952;
				half4 localSampleStochastic3D263_g117952 = SampleStochastic3D( Texture263_g117952 , Sampler263_g117952 , Coords263_g117952 , WorldPosition263_g117952 , WorldNormal263_g117952 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8686_g117895 = localSamplePlanar2D238_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8686_g117895 = localSamplePlanar3D246_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8686_g117895 = localSampleStochastic2D234_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8686_g117895 = localSampleStochastic3D263_g117952;
				#else
				float4 staticSwitch8686_g117895 = localSamplePlanar2D238_g117952;
				#endif
				half4 Layer133_g117911 = staticSwitch8686_g117895;
				TEXTURE2D(Texture238_g117981) = _TerrainNormalTex6;
				SamplerState Sampler238_g117981 = SS29_g118002;
				float4 temp_output_37_0_g117981 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117981 = temp_output_37_0_g117981;
				float3 temp_output_279_0_g117981 = Input_Position9197_g117895;
				half3 WorldPosition238_g117981 = temp_output_279_0_g117981;
				half4 localSamplePlanar2D238_g117981 = SamplePlanar2D( Texture238_g117981 , Sampler238_g117981 , Coords238_g117981 , WorldPosition238_g117981 );
				TEXTURE2D(Texture246_g117981) = _TerrainNormalTex6;
				SamplerState Sampler246_g117981 = SS29_g118002;
				half4 Coords246_g117981 = temp_output_37_0_g117981;
				half3 WorldPosition246_g117981 = temp_output_279_0_g117981;
				float3 temp_output_280_0_g117981 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117981 = temp_output_280_0_g117981;
				half4 localSamplePlanar3D246_g117981 = SamplePlanar3D( Texture246_g117981 , Sampler246_g117981 , Coords246_g117981 , WorldPosition246_g117981 , WorldNormal246_g117981 );
				TEXTURE2D(Texture234_g117981) = _TerrainNormalTex6;
				SamplerState Sampler234_g117981 = SS29_g118002;
				float4 Coords234_g117981 = temp_output_37_0_g117981;
				float3 WorldPosition234_g117981 = temp_output_279_0_g117981;
				float4 localSampleStochastic2D234_g117981 = SampleStochastic2D( Texture234_g117981 , Sampler234_g117981 , Coords234_g117981 , WorldPosition234_g117981 );
				TEXTURE2D(Texture263_g117981) = _TerrainNormalTex6;
				SamplerState Sampler263_g117981 = SS29_g118002;
				half4 Coords263_g117981 = temp_output_37_0_g117981;
				half3 WorldPosition263_g117981 = temp_output_279_0_g117981;
				half3 WorldNormal263_g117981 = temp_output_280_0_g117981;
				half4 localSampleStochastic3D263_g117981 = SampleStochastic3D( Texture263_g117981 , Sampler263_g117981 , Coords263_g117981 , WorldPosition263_g117981 , WorldNormal263_g117981 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8687_g117895 = localSamplePlanar2D238_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8687_g117895 = localSamplePlanar3D246_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8687_g117895 = localSampleStochastic2D234_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8687_g117895 = localSampleStochastic3D263_g117981;
				#else
				float4 staticSwitch8687_g117895 = localSamplePlanar2D238_g117981;
				#endif
				half4 Layer237_g117911 = staticSwitch8687_g117895;
				TEXTURE2D(Texture238_g117982) = _TerrainNormalTex7;
				SamplerState Sampler238_g117982 = SS29_g118002;
				float4 temp_output_37_0_g117982 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117982 = temp_output_37_0_g117982;
				float3 temp_output_279_0_g117982 = Input_Position9197_g117895;
				half3 WorldPosition238_g117982 = temp_output_279_0_g117982;
				half4 localSamplePlanar2D238_g117982 = SamplePlanar2D( Texture238_g117982 , Sampler238_g117982 , Coords238_g117982 , WorldPosition238_g117982 );
				TEXTURE2D(Texture246_g117982) = _TerrainNormalTex7;
				SamplerState Sampler246_g117982 = SS29_g118002;
				half4 Coords246_g117982 = temp_output_37_0_g117982;
				half3 WorldPosition246_g117982 = temp_output_279_0_g117982;
				float3 temp_output_280_0_g117982 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117982 = temp_output_280_0_g117982;
				half4 localSamplePlanar3D246_g117982 = SamplePlanar3D( Texture246_g117982 , Sampler246_g117982 , Coords246_g117982 , WorldPosition246_g117982 , WorldNormal246_g117982 );
				TEXTURE2D(Texture234_g117982) = _TerrainNormalTex7;
				SamplerState Sampler234_g117982 = SS29_g118002;
				float4 Coords234_g117982 = temp_output_37_0_g117982;
				float3 WorldPosition234_g117982 = temp_output_279_0_g117982;
				float4 localSampleStochastic2D234_g117982 = SampleStochastic2D( Texture234_g117982 , Sampler234_g117982 , Coords234_g117982 , WorldPosition234_g117982 );
				TEXTURE2D(Texture263_g117982) = _TerrainNormalTex7;
				SamplerState Sampler263_g117982 = SS29_g118002;
				half4 Coords263_g117982 = temp_output_37_0_g117982;
				half3 WorldPosition263_g117982 = temp_output_279_0_g117982;
				half3 WorldNormal263_g117982 = temp_output_280_0_g117982;
				half4 localSampleStochastic3D263_g117982 = SampleStochastic3D( Texture263_g117982 , Sampler263_g117982 , Coords263_g117982 , WorldPosition263_g117982 , WorldNormal263_g117982 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8688_g117895 = localSamplePlanar2D238_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8688_g117895 = localSamplePlanar3D246_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8688_g117895 = localSampleStochastic2D234_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8688_g117895 = localSampleStochastic3D263_g117982;
				#else
				float4 staticSwitch8688_g117895 = localSamplePlanar2D238_g117982;
				#endif
				half4 Layer338_g117911 = staticSwitch8688_g117895;
				TEXTURE2D(Texture238_g117983) = _TerrainNormalTex8;
				SamplerState Sampler238_g117983 = SS29_g118002;
				float4 temp_output_37_0_g117983 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117983 = temp_output_37_0_g117983;
				float3 temp_output_279_0_g117983 = Input_Position9197_g117895;
				half3 WorldPosition238_g117983 = temp_output_279_0_g117983;
				half4 localSamplePlanar2D238_g117983 = SamplePlanar2D( Texture238_g117983 , Sampler238_g117983 , Coords238_g117983 , WorldPosition238_g117983 );
				TEXTURE2D(Texture246_g117983) = _TerrainNormalTex8;
				SamplerState Sampler246_g117983 = SS29_g118002;
				half4 Coords246_g117983 = temp_output_37_0_g117983;
				half3 WorldPosition246_g117983 = temp_output_279_0_g117983;
				float3 temp_output_280_0_g117983 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117983 = temp_output_280_0_g117983;
				half4 localSamplePlanar3D246_g117983 = SamplePlanar3D( Texture246_g117983 , Sampler246_g117983 , Coords246_g117983 , WorldPosition246_g117983 , WorldNormal246_g117983 );
				TEXTURE2D(Texture234_g117983) = _TerrainNormalTex8;
				SamplerState Sampler234_g117983 = SS29_g118002;
				float4 Coords234_g117983 = temp_output_37_0_g117983;
				float3 WorldPosition234_g117983 = temp_output_279_0_g117983;
				float4 localSampleStochastic2D234_g117983 = SampleStochastic2D( Texture234_g117983 , Sampler234_g117983 , Coords234_g117983 , WorldPosition234_g117983 );
				TEXTURE2D(Texture263_g117983) = _TerrainNormalTex8;
				SamplerState Sampler263_g117983 = SS29_g118002;
				half4 Coords263_g117983 = temp_output_37_0_g117983;
				half3 WorldPosition263_g117983 = temp_output_279_0_g117983;
				half3 WorldNormal263_g117983 = temp_output_280_0_g117983;
				half4 localSampleStochastic3D263_g117983 = SampleStochastic3D( Texture263_g117983 , Sampler263_g117983 , Coords263_g117983 , WorldPosition263_g117983 , WorldNormal263_g117983 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8689_g117895 = localSamplePlanar2D238_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8689_g117895 = localSamplePlanar3D246_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8689_g117895 = localSampleStochastic2D234_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8689_g117895 = localSampleStochastic3D263_g117983;
				#else
				float4 staticSwitch8689_g117895 = localSamplePlanar2D238_g117983;
				#endif
				half4 Layer439_g117911 = staticSwitch8689_g117895;
				float4 weightedBlendVar31_g117911 = Weights52_g117911;
				float4 weightedBlend31_g117911 = ( weightedBlendVar31_g117911.x*Layer133_g117911 + weightedBlendVar31_g117911.y*Layer237_g117911 + weightedBlendVar31_g117911.z*Layer338_g117911 + weightedBlendVar31_g117911.w*Layer439_g117911 );
				half4 Terrain_B_088684_g117895 = weightedBlend31_g117911;
				half4 Layer_0810_g117902 = Terrain_B_088684_g117895;
				half4 Weights52_g117918 = Terrain_Weights_127710_g117895;
				TEXTURE2D(Texture238_g117955) = _TerrainNormalTex9;
				SamplerState Sampler238_g117955 = SS29_g118002;
				float4 temp_output_37_0_g117955 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117955 = temp_output_37_0_g117955;
				float3 temp_output_279_0_g117955 = Input_Position9197_g117895;
				half3 WorldPosition238_g117955 = temp_output_279_0_g117955;
				half4 localSamplePlanar2D238_g117955 = SamplePlanar2D( Texture238_g117955 , Sampler238_g117955 , Coords238_g117955 , WorldPosition238_g117955 );
				TEXTURE2D(Texture246_g117955) = _TerrainNormalTex9;
				SamplerState Sampler246_g117955 = SS29_g118002;
				half4 Coords246_g117955 = temp_output_37_0_g117955;
				half3 WorldPosition246_g117955 = temp_output_279_0_g117955;
				float3 temp_output_280_0_g117955 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117955 = temp_output_280_0_g117955;
				half4 localSamplePlanar3D246_g117955 = SamplePlanar3D( Texture246_g117955 , Sampler246_g117955 , Coords246_g117955 , WorldPosition246_g117955 , WorldNormal246_g117955 );
				TEXTURE2D(Texture234_g117955) = _TerrainNormalTex9;
				SamplerState Sampler234_g117955 = SS29_g118002;
				float4 Coords234_g117955 = temp_output_37_0_g117955;
				float3 WorldPosition234_g117955 = temp_output_279_0_g117955;
				float4 localSampleStochastic2D234_g117955 = SampleStochastic2D( Texture234_g117955 , Sampler234_g117955 , Coords234_g117955 , WorldPosition234_g117955 );
				TEXTURE2D(Texture263_g117955) = _TerrainNormalTex9;
				SamplerState Sampler263_g117955 = SS29_g118002;
				half4 Coords263_g117955 = temp_output_37_0_g117955;
				half3 WorldPosition263_g117955 = temp_output_279_0_g117955;
				half3 WorldNormal263_g117955 = temp_output_280_0_g117955;
				half4 localSampleStochastic3D263_g117955 = SampleStochastic3D( Texture263_g117955 , Sampler263_g117955 , Coords263_g117955 , WorldPosition263_g117955 , WorldNormal263_g117955 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8849_g117895 = localSamplePlanar2D238_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8849_g117895 = localSamplePlanar3D246_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8849_g117895 = localSampleStochastic2D234_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8849_g117895 = localSampleStochastic3D263_g117955;
				#else
				float4 staticSwitch8849_g117895 = localSamplePlanar2D238_g117955;
				#endif
				half4 Layer133_g117918 = staticSwitch8849_g117895;
				TEXTURE2D(Texture238_g117960) = _TerrainNormalTex10;
				SamplerState Sampler238_g117960 = SS29_g118002;
				float4 temp_output_37_0_g117960 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117960 = temp_output_37_0_g117960;
				float3 temp_output_279_0_g117960 = Input_Position9197_g117895;
				half3 WorldPosition238_g117960 = temp_output_279_0_g117960;
				half4 localSamplePlanar2D238_g117960 = SamplePlanar2D( Texture238_g117960 , Sampler238_g117960 , Coords238_g117960 , WorldPosition238_g117960 );
				TEXTURE2D(Texture246_g117960) = _TerrainNormalTex10;
				SamplerState Sampler246_g117960 = SS29_g118002;
				half4 Coords246_g117960 = temp_output_37_0_g117960;
				half3 WorldPosition246_g117960 = temp_output_279_0_g117960;
				float3 temp_output_280_0_g117960 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117960 = temp_output_280_0_g117960;
				half4 localSamplePlanar3D246_g117960 = SamplePlanar3D( Texture246_g117960 , Sampler246_g117960 , Coords246_g117960 , WorldPosition246_g117960 , WorldNormal246_g117960 );
				TEXTURE2D(Texture234_g117960) = _TerrainNormalTex10;
				SamplerState Sampler234_g117960 = SS29_g118002;
				float4 Coords234_g117960 = temp_output_37_0_g117960;
				float3 WorldPosition234_g117960 = temp_output_279_0_g117960;
				float4 localSampleStochastic2D234_g117960 = SampleStochastic2D( Texture234_g117960 , Sampler234_g117960 , Coords234_g117960 , WorldPosition234_g117960 );
				TEXTURE2D(Texture263_g117960) = _TerrainNormalTex10;
				SamplerState Sampler263_g117960 = SS29_g118002;
				half4 Coords263_g117960 = temp_output_37_0_g117960;
				half3 WorldPosition263_g117960 = temp_output_279_0_g117960;
				half3 WorldNormal263_g117960 = temp_output_280_0_g117960;
				half4 localSampleStochastic3D263_g117960 = SampleStochastic3D( Texture263_g117960 , Sampler263_g117960 , Coords263_g117960 , WorldPosition263_g117960 , WorldNormal263_g117960 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8876_g117895 = localSamplePlanar2D238_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8876_g117895 = localSamplePlanar3D246_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8876_g117895 = localSampleStochastic2D234_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8876_g117895 = localSampleStochastic3D263_g117960;
				#else
				float4 staticSwitch8876_g117895 = localSamplePlanar2D238_g117960;
				#endif
				half4 Layer237_g117918 = staticSwitch8876_g117895;
				TEXTURE2D(Texture238_g117961) = _TerrainNormalTex11;
				SamplerState Sampler238_g117961 = SS29_g118002;
				float4 temp_output_37_0_g117961 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117961 = temp_output_37_0_g117961;
				float3 temp_output_279_0_g117961 = Input_Position9197_g117895;
				half3 WorldPosition238_g117961 = temp_output_279_0_g117961;
				half4 localSamplePlanar2D238_g117961 = SamplePlanar2D( Texture238_g117961 , Sampler238_g117961 , Coords238_g117961 , WorldPosition238_g117961 );
				TEXTURE2D(Texture246_g117961) = _TerrainNormalTex11;
				SamplerState Sampler246_g117961 = SS29_g118002;
				half4 Coords246_g117961 = temp_output_37_0_g117961;
				half3 WorldPosition246_g117961 = temp_output_279_0_g117961;
				float3 temp_output_280_0_g117961 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117961 = temp_output_280_0_g117961;
				half4 localSamplePlanar3D246_g117961 = SamplePlanar3D( Texture246_g117961 , Sampler246_g117961 , Coords246_g117961 , WorldPosition246_g117961 , WorldNormal246_g117961 );
				TEXTURE2D(Texture234_g117961) = _TerrainNormalTex11;
				SamplerState Sampler234_g117961 = SS29_g118002;
				float4 Coords234_g117961 = temp_output_37_0_g117961;
				float3 WorldPosition234_g117961 = temp_output_279_0_g117961;
				float4 localSampleStochastic2D234_g117961 = SampleStochastic2D( Texture234_g117961 , Sampler234_g117961 , Coords234_g117961 , WorldPosition234_g117961 );
				TEXTURE2D(Texture263_g117961) = _TerrainNormalTex11;
				SamplerState Sampler263_g117961 = SS29_g118002;
				half4 Coords263_g117961 = temp_output_37_0_g117961;
				half3 WorldPosition263_g117961 = temp_output_279_0_g117961;
				half3 WorldNormal263_g117961 = temp_output_280_0_g117961;
				half4 localSampleStochastic3D263_g117961 = SampleStochastic3D( Texture263_g117961 , Sampler263_g117961 , Coords263_g117961 , WorldPosition263_g117961 , WorldNormal263_g117961 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8850_g117895 = localSamplePlanar2D238_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8850_g117895 = localSamplePlanar3D246_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8850_g117895 = localSampleStochastic2D234_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8850_g117895 = localSampleStochastic3D263_g117961;
				#else
				float4 staticSwitch8850_g117895 = localSamplePlanar2D238_g117961;
				#endif
				half4 Layer338_g117918 = staticSwitch8850_g117895;
				TEXTURE2D(Texture238_g117962) = _TerrainNormalTex12;
				SamplerState Sampler238_g117962 = SS29_g118002;
				float4 temp_output_37_0_g117962 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117962 = temp_output_37_0_g117962;
				float3 temp_output_279_0_g117962 = Input_Position9197_g117895;
				half3 WorldPosition238_g117962 = temp_output_279_0_g117962;
				half4 localSamplePlanar2D238_g117962 = SamplePlanar2D( Texture238_g117962 , Sampler238_g117962 , Coords238_g117962 , WorldPosition238_g117962 );
				TEXTURE2D(Texture246_g117962) = _TerrainNormalTex12;
				SamplerState Sampler246_g117962 = SS29_g118002;
				half4 Coords246_g117962 = temp_output_37_0_g117962;
				half3 WorldPosition246_g117962 = temp_output_279_0_g117962;
				float3 temp_output_280_0_g117962 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117962 = temp_output_280_0_g117962;
				half4 localSamplePlanar3D246_g117962 = SamplePlanar3D( Texture246_g117962 , Sampler246_g117962 , Coords246_g117962 , WorldPosition246_g117962 , WorldNormal246_g117962 );
				TEXTURE2D(Texture234_g117962) = _TerrainNormalTex12;
				SamplerState Sampler234_g117962 = SS29_g118002;
				float4 Coords234_g117962 = temp_output_37_0_g117962;
				float3 WorldPosition234_g117962 = temp_output_279_0_g117962;
				float4 localSampleStochastic2D234_g117962 = SampleStochastic2D( Texture234_g117962 , Sampler234_g117962 , Coords234_g117962 , WorldPosition234_g117962 );
				TEXTURE2D(Texture263_g117962) = _TerrainNormalTex12;
				SamplerState Sampler263_g117962 = SS29_g118002;
				half4 Coords263_g117962 = temp_output_37_0_g117962;
				half3 WorldPosition263_g117962 = temp_output_279_0_g117962;
				half3 WorldNormal263_g117962 = temp_output_280_0_g117962;
				half4 localSampleStochastic3D263_g117962 = SampleStochastic3D( Texture263_g117962 , Sampler263_g117962 , Coords263_g117962 , WorldPosition263_g117962 , WorldNormal263_g117962 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8877_g117895 = localSamplePlanar2D238_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8877_g117895 = localSamplePlanar3D246_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8877_g117895 = localSampleStochastic2D234_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8877_g117895 = localSampleStochastic3D263_g117962;
				#else
				float4 staticSwitch8877_g117895 = localSamplePlanar2D238_g117962;
				#endif
				half4 Layer439_g117918 = staticSwitch8877_g117895;
				float4 weightedBlendVar31_g117918 = Weights52_g117918;
				float4 weightedBlend31_g117918 = ( weightedBlendVar31_g117918.x*Layer133_g117918 + weightedBlendVar31_g117918.y*Layer237_g117918 + weightedBlendVar31_g117918.z*Layer338_g117918 + weightedBlendVar31_g117918.w*Layer439_g117918 );
				half4 Terrain_B_128865_g117895 = weightedBlend31_g117918;
				half4 Layer_1243_g117902 = Terrain_B_128865_g117895;
				half4 Weights52_g117925 = Terrain_Weights_167709_g117895;
				TEXTURE2D(Texture238_g117965) = _TerrainNormalTex13;
				SamplerState Sampler238_g117965 = SS29_g118002;
				float4 temp_output_37_0_g117965 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117965 = temp_output_37_0_g117965;
				float3 temp_output_279_0_g117965 = Input_Position9197_g117895;
				half3 WorldPosition238_g117965 = temp_output_279_0_g117965;
				half4 localSamplePlanar2D238_g117965 = SamplePlanar2D( Texture238_g117965 , Sampler238_g117965 , Coords238_g117965 , WorldPosition238_g117965 );
				TEXTURE2D(Texture246_g117965) = _TerrainNormalTex13;
				SamplerState Sampler246_g117965 = SS29_g118002;
				half4 Coords246_g117965 = temp_output_37_0_g117965;
				half3 WorldPosition246_g117965 = temp_output_279_0_g117965;
				float3 temp_output_280_0_g117965 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117965 = temp_output_280_0_g117965;
				half4 localSamplePlanar3D246_g117965 = SamplePlanar3D( Texture246_g117965 , Sampler246_g117965 , Coords246_g117965 , WorldPosition246_g117965 , WorldNormal246_g117965 );
				TEXTURE2D(Texture234_g117965) = _TerrainNormalTex13;
				SamplerState Sampler234_g117965 = SS29_g118002;
				float4 Coords234_g117965 = temp_output_37_0_g117965;
				float3 WorldPosition234_g117965 = temp_output_279_0_g117965;
				float4 localSampleStochastic2D234_g117965 = SampleStochastic2D( Texture234_g117965 , Sampler234_g117965 , Coords234_g117965 , WorldPosition234_g117965 );
				TEXTURE2D(Texture263_g117965) = _TerrainNormalTex13;
				SamplerState Sampler263_g117965 = SS29_g118002;
				half4 Coords263_g117965 = temp_output_37_0_g117965;
				half3 WorldPosition263_g117965 = temp_output_279_0_g117965;
				half3 WorldNormal263_g117965 = temp_output_280_0_g117965;
				half4 localSampleStochastic3D263_g117965 = SampleStochastic3D( Texture263_g117965 , Sampler263_g117965 , Coords263_g117965 , WorldPosition263_g117965 , WorldNormal263_g117965 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8991_g117895 = localSamplePlanar2D238_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8991_g117895 = localSamplePlanar3D246_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8991_g117895 = localSampleStochastic2D234_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8991_g117895 = localSampleStochastic3D263_g117965;
				#else
				float4 staticSwitch8991_g117895 = localSamplePlanar2D238_g117965;
				#endif
				half4 Layer133_g117925 = staticSwitch8991_g117895;
				TEXTURE2D(Texture238_g117972) = _TerrainNormalTex14;
				SamplerState Sampler238_g117972 = SS29_g118002;
				float4 temp_output_37_0_g117972 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117972 = temp_output_37_0_g117972;
				float3 temp_output_279_0_g117972 = Input_Position9197_g117895;
				half3 WorldPosition238_g117972 = temp_output_279_0_g117972;
				half4 localSamplePlanar2D238_g117972 = SamplePlanar2D( Texture238_g117972 , Sampler238_g117972 , Coords238_g117972 , WorldPosition238_g117972 );
				TEXTURE2D(Texture246_g117972) = _TerrainNormalTex14;
				SamplerState Sampler246_g117972 = SS29_g118002;
				half4 Coords246_g117972 = temp_output_37_0_g117972;
				half3 WorldPosition246_g117972 = temp_output_279_0_g117972;
				float3 temp_output_280_0_g117972 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117972 = temp_output_280_0_g117972;
				half4 localSamplePlanar3D246_g117972 = SamplePlanar3D( Texture246_g117972 , Sampler246_g117972 , Coords246_g117972 , WorldPosition246_g117972 , WorldNormal246_g117972 );
				TEXTURE2D(Texture234_g117972) = _TerrainNormalTex14;
				SamplerState Sampler234_g117972 = SS29_g118002;
				float4 Coords234_g117972 = temp_output_37_0_g117972;
				float3 WorldPosition234_g117972 = temp_output_279_0_g117972;
				float4 localSampleStochastic2D234_g117972 = SampleStochastic2D( Texture234_g117972 , Sampler234_g117972 , Coords234_g117972 , WorldPosition234_g117972 );
				TEXTURE2D(Texture263_g117972) = _TerrainNormalTex14;
				SamplerState Sampler263_g117972 = SS29_g118002;
				half4 Coords263_g117972 = temp_output_37_0_g117972;
				half3 WorldPosition263_g117972 = temp_output_279_0_g117972;
				half3 WorldNormal263_g117972 = temp_output_280_0_g117972;
				half4 localSampleStochastic3D263_g117972 = SampleStochastic3D( Texture263_g117972 , Sampler263_g117972 , Coords263_g117972 , WorldPosition263_g117972 , WorldNormal263_g117972 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8990_g117895 = localSamplePlanar2D238_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8990_g117895 = localSamplePlanar3D246_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8990_g117895 = localSampleStochastic2D234_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8990_g117895 = localSampleStochastic3D263_g117972;
				#else
				float4 staticSwitch8990_g117895 = localSamplePlanar2D238_g117972;
				#endif
				half4 Layer237_g117925 = staticSwitch8990_g117895;
				TEXTURE2D(Texture238_g117973) = _TerrainNormalTex15;
				SamplerState Sampler238_g117973 = SS29_g118002;
				float4 temp_output_37_0_g117973 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117973 = temp_output_37_0_g117973;
				float3 temp_output_279_0_g117973 = Input_Position9197_g117895;
				half3 WorldPosition238_g117973 = temp_output_279_0_g117973;
				half4 localSamplePlanar2D238_g117973 = SamplePlanar2D( Texture238_g117973 , Sampler238_g117973 , Coords238_g117973 , WorldPosition238_g117973 );
				TEXTURE2D(Texture246_g117973) = _TerrainNormalTex15;
				SamplerState Sampler246_g117973 = SS29_g118002;
				half4 Coords246_g117973 = temp_output_37_0_g117973;
				half3 WorldPosition246_g117973 = temp_output_279_0_g117973;
				float3 temp_output_280_0_g117973 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117973 = temp_output_280_0_g117973;
				half4 localSamplePlanar3D246_g117973 = SamplePlanar3D( Texture246_g117973 , Sampler246_g117973 , Coords246_g117973 , WorldPosition246_g117973 , WorldNormal246_g117973 );
				TEXTURE2D(Texture234_g117973) = _TerrainNormalTex15;
				SamplerState Sampler234_g117973 = SS29_g118002;
				float4 Coords234_g117973 = temp_output_37_0_g117973;
				float3 WorldPosition234_g117973 = temp_output_279_0_g117973;
				float4 localSampleStochastic2D234_g117973 = SampleStochastic2D( Texture234_g117973 , Sampler234_g117973 , Coords234_g117973 , WorldPosition234_g117973 );
				TEXTURE2D(Texture263_g117973) = _TerrainNormalTex15;
				SamplerState Sampler263_g117973 = SS29_g118002;
				half4 Coords263_g117973 = temp_output_37_0_g117973;
				half3 WorldPosition263_g117973 = temp_output_279_0_g117973;
				half3 WorldNormal263_g117973 = temp_output_280_0_g117973;
				half4 localSampleStochastic3D263_g117973 = SampleStochastic3D( Texture263_g117973 , Sampler263_g117973 , Coords263_g117973 , WorldPosition263_g117973 , WorldNormal263_g117973 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8989_g117895 = localSamplePlanar2D238_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8989_g117895 = localSamplePlanar3D246_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8989_g117895 = localSampleStochastic2D234_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8989_g117895 = localSampleStochastic3D263_g117973;
				#else
				float4 staticSwitch8989_g117895 = localSamplePlanar2D238_g117973;
				#endif
				half4 Layer338_g117925 = staticSwitch8989_g117895;
				TEXTURE2D(Texture238_g117974) = _TerrainNormalTex16;
				SamplerState Sampler238_g117974 = SS29_g118002;
				float4 temp_output_37_0_g117974 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117974 = temp_output_37_0_g117974;
				float3 temp_output_279_0_g117974 = Input_Position9197_g117895;
				half3 WorldPosition238_g117974 = temp_output_279_0_g117974;
				half4 localSamplePlanar2D238_g117974 = SamplePlanar2D( Texture238_g117974 , Sampler238_g117974 , Coords238_g117974 , WorldPosition238_g117974 );
				TEXTURE2D(Texture246_g117974) = _TerrainNormalTex16;
				SamplerState Sampler246_g117974 = SS29_g118002;
				half4 Coords246_g117974 = temp_output_37_0_g117974;
				half3 WorldPosition246_g117974 = temp_output_279_0_g117974;
				float3 temp_output_280_0_g117974 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117974 = temp_output_280_0_g117974;
				half4 localSamplePlanar3D246_g117974 = SamplePlanar3D( Texture246_g117974 , Sampler246_g117974 , Coords246_g117974 , WorldPosition246_g117974 , WorldNormal246_g117974 );
				TEXTURE2D(Texture234_g117974) = _TerrainNormalTex16;
				SamplerState Sampler234_g117974 = SS29_g118002;
				float4 Coords234_g117974 = temp_output_37_0_g117974;
				float3 WorldPosition234_g117974 = temp_output_279_0_g117974;
				float4 localSampleStochastic2D234_g117974 = SampleStochastic2D( Texture234_g117974 , Sampler234_g117974 , Coords234_g117974 , WorldPosition234_g117974 );
				TEXTURE2D(Texture263_g117974) = _TerrainNormalTex16;
				SamplerState Sampler263_g117974 = SS29_g118002;
				half4 Coords263_g117974 = temp_output_37_0_g117974;
				half3 WorldPosition263_g117974 = temp_output_279_0_g117974;
				half3 WorldNormal263_g117974 = temp_output_280_0_g117974;
				half4 localSampleStochastic3D263_g117974 = SampleStochastic3D( Texture263_g117974 , Sampler263_g117974 , Coords263_g117974 , WorldPosition263_g117974 , WorldNormal263_g117974 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8988_g117895 = localSamplePlanar2D238_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8988_g117895 = localSamplePlanar3D246_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8988_g117895 = localSampleStochastic2D234_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8988_g117895 = localSampleStochastic3D263_g117974;
				#else
				float4 staticSwitch8988_g117895 = localSamplePlanar2D238_g117974;
				#endif
				half4 Layer439_g117925 = staticSwitch8988_g117895;
				float4 weightedBlendVar31_g117925 = Weights52_g117925;
				float4 weightedBlend31_g117925 = ( weightedBlendVar31_g117925.x*Layer133_g117925 + weightedBlendVar31_g117925.y*Layer237_g117925 + weightedBlendVar31_g117925.z*Layer338_g117925 + weightedBlendVar31_g117925.w*Layer439_g117925 );
				half4 Terrain_B_168987_g117895 = weightedBlend31_g117925;
				half4 Layer_1644_g117902 = Terrain_B_168987_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117902 = Layer_045_g117902;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 + Layer_1243_g117902 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 + Layer_1243_g117902 + Layer_1644_g117902 );
				#else
				float4 staticSwitch40_g117902 = Layer_045_g117902;
				#endif
				half4 Blend_Normal7512_g117895 = staticSwitch40_g117902;
				half4 Normal_Packed45_g117996 = Blend_Normal7512_g117895;
				float2 appendResult58_g117996 = (float2(( (Normal_Packed45_g117996).x * (Normal_Packed45_g117996).w ) , (Normal_Packed45_g117996).y));
				half2 Normal_Default50_g117996 = appendResult58_g117996;
				half2 Normal_ASTC41_g117996 = (Normal_Packed45_g117996).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g117996 = Normal_ASTC41_g117996;
				#else
				float2 staticSwitch38_g117996 = Normal_Default50_g117996;
				#endif
				half2 Normal_NO_DTX544_g117996 = (Normal_Packed45_g117996).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g117996 = Normal_NO_DTX544_g117996;
				#else
				float2 staticSwitch37_g117996 = staticSwitch38_g117996;
				#endif
				half4 Weights52_g117898 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117898 = temp_output_6970_0_g117895;
				half4 Layer237_g117898 = temp_output_6977_0_g117895;
				half4 Layer338_g117898 = temp_output_6978_0_g117895;
				half4 Layer439_g117898 = temp_output_6983_0_g117895;
				float4 weightedBlendVar31_g117898 = Weights52_g117898;
				float4 weightedBlend31_g117898 = ( weightedBlendVar31_g117898.x*Layer133_g117898 + weightedBlendVar31_g117898.y*Layer237_g117898 + weightedBlendVar31_g117898.z*Layer338_g117898 + weightedBlendVar31_g117898.w*Layer439_g117898 );
				half4 Terrain_Shaders_047203_g117895 = weightedBlend31_g117898;
				half4 Layer_045_g117904 = Terrain_Shaders_047203_g117895;
				half4 Weights52_g117914 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117914 = temp_output_8714_0_g117895;
				half4 Layer237_g117914 = temp_output_8721_0_g117895;
				half4 Layer338_g117914 = temp_output_8724_0_g117895;
				half4 Layer439_g117914 = temp_output_8727_0_g117895;
				float4 weightedBlendVar31_g117914 = Weights52_g117914;
				float4 weightedBlend31_g117914 = ( weightedBlendVar31_g117914.x*Layer133_g117914 + weightedBlendVar31_g117914.y*Layer237_g117914 + weightedBlendVar31_g117914.z*Layer338_g117914 + weightedBlendVar31_g117914.w*Layer439_g117914 );
				half4 Terrain_Shaders_088730_g117895 = weightedBlend31_g117914;
				half4 Layer_0810_g117904 = Terrain_Shaders_088730_g117895;
				half4 Weights52_g117921 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117921 = temp_output_8815_0_g117895;
				half4 Layer237_g117921 = temp_output_8818_0_g117895;
				half4 Layer338_g117921 = temp_output_8819_0_g117895;
				half4 Layer439_g117921 = temp_output_8820_0_g117895;
				float4 weightedBlendVar31_g117921 = Weights52_g117921;
				float4 weightedBlend31_g117921 = ( weightedBlendVar31_g117921.x*Layer133_g117921 + weightedBlendVar31_g117921.y*Layer237_g117921 + weightedBlendVar31_g117921.z*Layer338_g117921 + weightedBlendVar31_g117921.w*Layer439_g117921 );
				half4 Terrain_Shaders_128871_g117895 = weightedBlend31_g117921;
				half4 Layer_1243_g117904 = Terrain_Shaders_128871_g117895;
				half4 Weights52_g117928 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117928 = temp_output_8931_0_g117895;
				half4 Layer237_g117928 = temp_output_8934_0_g117895;
				half4 Layer338_g117928 = temp_output_8935_0_g117895;
				half4 Layer439_g117928 = temp_output_8936_0_g117895;
				float4 weightedBlendVar31_g117928 = Weights52_g117928;
				float4 weightedBlend31_g117928 = ( weightedBlendVar31_g117928.x*Layer133_g117928 + weightedBlendVar31_g117928.y*Layer237_g117928 + weightedBlendVar31_g117928.z*Layer338_g117928 + weightedBlendVar31_g117928.w*Layer439_g117928 );
				half4 Terrain_Shaders_169014_g117895 = weightedBlend31_g117928;
				half4 Layer_1644_g117904 = Terrain_Shaders_169014_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117904 = Layer_045_g117904;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 + Layer_1243_g117904 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 + Layer_1243_g117904 + Layer_1644_g117904 );
				#else
				float4 staticSwitch40_g117904 = Layer_045_g117904;
				#endif
				half4 Blend_Shaders7420_g117895 = staticSwitch40_g117904;
				half4 Normal_Packed45_g117995 = Blend_Shaders7420_g117895;
				half2 Normal_NO_DTX544_g117995 = (Normal_Packed45_g117995).wy;
				#ifdef TVE_TERRAIN_PACKED
				float2 staticSwitch9080_g117895 = (Normal_NO_DTX544_g117995*2.0 + -1.0);
				#else
				float2 staticSwitch9080_g117895 = (staticSwitch37_g117996*2.0 + -1.0);
				#endif
				half4 Weights52_g117899 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117899 = _TerrainParams1;
				half4 Layer237_g117899 = _TerrainParams2;
				half4 Layer338_g117899 = _TerrainParams3;
				half4 Layer439_g117899 = _TerrainParams4;
				float4 weightedBlendVar31_g117899 = Weights52_g117899;
				float4 weightedBlend31_g117899 = ( weightedBlendVar31_g117899.x*Layer133_g117899 + weightedBlendVar31_g117899.y*Layer237_g117899 + weightedBlendVar31_g117899.z*Layer338_g117899 + weightedBlendVar31_g117899.w*Layer439_g117899 );
				half4 Terrain_Params_047533_g117895 = weightedBlend31_g117899;
				half4 Layer_045_g117905 = Terrain_Params_047533_g117895;
				half4 Weights52_g117915 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117915 = _TerrainParams5;
				half4 Layer237_g117915 = _TerrainParams6;
				half4 Layer338_g117915 = _TerrainParams7;
				half4 Layer439_g117915 = _TerrainParams8;
				float4 weightedBlendVar31_g117915 = Weights52_g117915;
				float4 weightedBlend31_g117915 = ( weightedBlendVar31_g117915.x*Layer133_g117915 + weightedBlendVar31_g117915.y*Layer237_g117915 + weightedBlendVar31_g117915.z*Layer338_g117915 + weightedBlendVar31_g117915.w*Layer439_g117915 );
				half4 Terrain_Params_088739_g117895 = weightedBlend31_g117915;
				half4 Layer_0810_g117905 = Terrain_Params_088739_g117895;
				half4 Weights52_g117922 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117922 = _TerrainParams9;
				half4 Layer237_g117922 = _TerrainParams10;
				half4 Layer338_g117922 = _TerrainParams11;
				half4 Layer439_g117922 = _TerrainParams12;
				float4 weightedBlendVar31_g117922 = Weights52_g117922;
				float4 weightedBlend31_g117922 = ( weightedBlendVar31_g117922.x*Layer133_g117922 + weightedBlendVar31_g117922.y*Layer237_g117922 + weightedBlendVar31_g117922.z*Layer338_g117922 + weightedBlendVar31_g117922.w*Layer439_g117922 );
				half4 Terrain_Params_128867_g117895 = weightedBlend31_g117922;
				half4 Layer_1243_g117905 = Terrain_Params_128867_g117895;
				half4 Weights52_g117929 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117929 = _TerrainParams13;
				half4 Layer237_g117929 = _TerrainParams14;
				half4 Layer338_g117929 = _TerrainParams15;
				half4 Layer439_g117929 = _TerrainParams16;
				float4 weightedBlendVar31_g117929 = Weights52_g117929;
				float4 weightedBlend31_g117929 = ( weightedBlendVar31_g117929.x*Layer133_g117929 + weightedBlendVar31_g117929.y*Layer237_g117929 + weightedBlendVar31_g117929.z*Layer338_g117929 + weightedBlendVar31_g117929.w*Layer439_g117929 );
				half4 Terrain_Params_169017_g117895 = weightedBlend31_g117929;
				half4 Layer_1644_g117905 = Terrain_Params_169017_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117905 = Layer_045_g117905;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 + Layer_1243_g117905 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 + Layer_1243_g117905 + Layer_1644_g117905 );
				#else
				float4 staticSwitch40_g117905 = Layer_045_g117905;
				#endif
				half4 Blend_Params7547_g117895 = staticSwitch40_g117905;
				half2 Normal_Planar45_g117997 = ( ( staticSwitch9080_g117895 * (Blend_Params7547_g117895).z ) * _TerrainNormalValue );
				float2 break71_g117997 = Normal_Planar45_g117997;
				float3 appendResult72_g117997 = (float3(break71_g117997.x , 0.0 , break71_g117997.y));
				half2 Final_NormalTS9145_g117895 = (mul( ase_worldToTangent, appendResult72_g117997 )).xy;
				half2 Local_Normal9200_g117893 = Final_NormalTS9145_g117895;
				float2 In_NormalTS3_g117894 = Local_Normal9200_g117893;
				float3 appendResult68_g118005 = (float3(Local_Normal9200_g117893 , 1.0));
				float3 tanToWorld0 = float3( tangentWS.xyz.x, ase_worldBitangent.x, normalWS.x );
				float3 tanToWorld1 = float3( tangentWS.xyz.y, ase_worldBitangent.y, normalWS.y );
				float3 tanToWorld2 = float3( tangentWS.xyz.z, ase_worldBitangent.z, normalWS.z );
				float3 tanNormal74_g118005 = appendResult68_g118005;
				float3 worldNormal74_g118005 = normalize( float3(dot(tanToWorld0,tanNormal74_g118005), dot(tanToWorld1,tanNormal74_g118005), dot(tanToWorld2,tanNormal74_g118005)) );
				float3 In_NormalWS3_g117894 = worldNormal74_g118005;
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9139_g117895 = 0.0;
				#else
				float staticSwitch9139_g117895 = ( (Blend_Shaders7420_g117895).x * (Blend_Params7547_g117895).x * _TerrainMetallicValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9097_g117895 = 1.0;
				#else
				float staticSwitch9097_g117895 = ( (Blend_Shaders7420_g117895).y * _TerrainOcclusionValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9105_g117895 = (Blend_Shaders7420_g117895).x;
				#else
				float staticSwitch9105_g117895 = (Blend_Shaders7420_g117895).w;
				#endif
				float4 appendResult9147_g117895 = (float4(staticSwitch9139_g117895 , staticSwitch9097_g117895 , (Blend_Shaders7420_g117895).z , ( staticSwitch9105_g117895 * (Blend_Params7547_g117895).w * _TerrainSmoothnessValue )));
				half4 Final_Shaders9146_g117895 = appendResult9147_g117895;
				half4 Local_Shader9201_g117893 = Final_Shaders9146_g117895;
				float4 In_Shader3_g117894 = Local_Shader9201_g117893;
				half4 Weights52_g117988 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117988 = _TerrainSpecular1;
				half4 Layer237_g117988 = _TerrainSpecular2;
				half4 Layer338_g117988 = _TerrainSpecular3;
				half4 Layer439_g117988 = _TerrainSpecular4;
				float4 weightedBlendVar31_g117988 = Weights52_g117988;
				float4 weightedBlend31_g117988 = ( weightedBlendVar31_g117988.x*Layer133_g117988 + weightedBlendVar31_g117988.y*Layer237_g117988 + weightedBlendVar31_g117988.z*Layer338_g117988 + weightedBlendVar31_g117988.w*Layer439_g117988 );
				half4 Terrain_Specular_047390_g117895 = weightedBlend31_g117988;
				half4 Layer_045_g117993 = Terrain_Specular_047390_g117895;
				half4 Weights52_g117916 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117916 = _TerrainSpecular5;
				half4 Layer237_g117916 = _TerrainSpecular6;
				half4 Layer338_g117916 = _TerrainSpecular7;
				half4 Layer439_g117916 = _TerrainSpecular8;
				float4 weightedBlendVar31_g117916 = Weights52_g117916;
				float4 weightedBlend31_g117916 = ( weightedBlendVar31_g117916.x*Layer133_g117916 + weightedBlendVar31_g117916.y*Layer237_g117916 + weightedBlendVar31_g117916.z*Layer338_g117916 + weightedBlendVar31_g117916.w*Layer439_g117916 );
				half4 Terrain_Specular_088745_g117895 = weightedBlend31_g117916;
				half4 Layer_0810_g117993 = Terrain_Specular_088745_g117895;
				half4 Weights52_g117923 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117923 = _TerrainSpecular9;
				half4 Layer237_g117923 = _TerrainSpecular10;
				half4 Layer338_g117923 = _TerrainSpecular11;
				half4 Layer439_g117923 = _TerrainSpecular12;
				float4 weightedBlendVar31_g117923 = Weights52_g117923;
				float4 weightedBlend31_g117923 = ( weightedBlendVar31_g117923.x*Layer133_g117923 + weightedBlendVar31_g117923.y*Layer237_g117923 + weightedBlendVar31_g117923.z*Layer338_g117923 + weightedBlendVar31_g117923.w*Layer439_g117923 );
				half4 Terrain_Specular_128869_g117895 = weightedBlend31_g117923;
				half4 Layer_1243_g117993 = Terrain_Specular_128869_g117895;
				half4 Weights52_g117930 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117930 = _TerrainSpecular13;
				half4 Layer237_g117930 = _TerrainSpecular14;
				half4 Layer338_g117930 = _TerrainSpecular15;
				half4 Layer439_g117930 = _TerrainSpecular16;
				float4 weightedBlendVar31_g117930 = Weights52_g117930;
				float4 weightedBlend31_g117930 = ( weightedBlendVar31_g117930.x*Layer133_g117930 + weightedBlendVar31_g117930.y*Layer237_g117930 + weightedBlendVar31_g117930.z*Layer338_g117930 + weightedBlendVar31_g117930.w*Layer439_g117930 );
				half4 Terrain_Specular_169019_g117895 = weightedBlend31_g117930;
				half4 Layer_1644_g117993 = Terrain_Specular_169019_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117993 = Layer_045_g117993;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 + Layer_1243_g117993 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 + Layer_1243_g117993 + Layer_1644_g117993 );
				#else
				float4 staticSwitch40_g117993 = Layer_045_g117993;
				#endif
				half4 Blend_TerrainSpecular7446_g117895 = staticSwitch40_g117993;
				float3 temp_output_9088_0_g117895 = (Blend_TerrainSpecular7446_g117895).rgb;
				float4 appendResult9189_g117895 = (float4(temp_output_9088_0_g117895 , 1.0));
				half4 Final_Emissive9151_g117895 = appendResult9189_g117895;
				half4 Local_EmissiveLDR9202_g117893 = Final_Emissive9151_g117895;
				float4 In_Emissive3_g117894 = Local_EmissiveLDR9202_g117893;
				float3 temp_output_3_0_g118006 = Local_Albedo9199_g117893;
				float dotResult20_g118006 = dot( temp_output_3_0_g118006 , float3(0.2126,0.7152,0.0722) );
				float temp_output_9165_0_g117893 = dotResult20_g118006;
				float In_Grayscale3_g117894 = temp_output_9165_0_g117893;
				float clampResult9168_g117893 = clamp( saturate( ( temp_output_9165_0_g117893 * 5.0 ) ) , 0.2 , 1.0 );
				float In_Luminosity3_g117894 = clampResult9168_g117893;
				half Final_MultiShader9150_g117895 = ( (Blend_TerrainSpecular7446_g117895).a * (Blend_Albedo7468_g117895).w );
				half Local_MultiMask9203_g117893 = Final_MultiShader9150_g117895;
				float In_MultiMask3_g117894 = Local_MultiMask9203_g117893;
				float4 temp_output_35_0_g118004 = appendResult9125_g117895;
				float2 InputScale48_g118004 = (temp_output_35_0_g118004).zw;
				half2 FinalScale53_g118004 = ( 1.0 / InputScale48_g118004 );
				float2 InputPosition52_g118004 = (temp_output_35_0_g118004).xy;
				half2 FinalPosition58_g118004 = -( FinalScale53_g118004 * InputPosition52_g118004 );
				float2 temp_output_65_0_g118004 = ( ( (ase_worldPos).xz * FinalScale53_g118004 ) + FinalPosition58_g118004 );
				float2 Terrain_Holes_UV9406_g117895 = temp_output_65_0_g118004;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch9188_g117895 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9406_g117895 ).r;
				#else
				float staticSwitch9188_g117895 = 1.0;
				#endif
				half Terrain_Holes7437_g117895 = staticSwitch9188_g117895;
				half Local_HoleMask9204_g117893 = Terrain_Holes7437_g117895;
				float In_AlphaClip3_g117894 = Local_HoleMask9204_g117893;
				float In_AlphaFade3_g117894 = 1.0;
				float3 temp_cast_9 = (1.0).xxx;
				float3 In_Translucency3_g117894 = temp_cast_9;
				float In_Transmission3_g117894 = 1.0;
				float In_Thickness3_g117894 = 0.0;
				float In_Diffusion3_g117894 = 0.0;
				Data3_g117894.Dummy = In_Dummy3_g117894;
				Data3_g117894.Albedo = In_Albedo3_g117894;
				Data3_g117894.AlbedoRaw = In_AlbedoRaw3_g117894;
				Data3_g117894.NormalTS = In_NormalTS3_g117894;
				Data3_g117894.NormalWS = In_NormalWS3_g117894;
				Data3_g117894.Shader = In_Shader3_g117894;
				Data3_g117894.Emissive= In_Emissive3_g117894;
				Data3_g117894.MultiMask = In_MultiMask3_g117894;
				Data3_g117894.Grayscale = In_Grayscale3_g117894;
				Data3_g117894.Luminosity = In_Luminosity3_g117894;
				Data3_g117894.AlphaClip = In_AlphaClip3_g117894;
				Data3_g117894.AlphaFade = In_AlphaFade3_g117894;
				Data3_g117894.Translucency = In_Translucency3_g117894;
				Data3_g117894.Transmission = In_Transmission3_g117894;
				Data3_g117894.Thickness = In_Thickness3_g117894;
				Data3_g117894.Diffusion = In_Diffusion3_g117894;
				TVEVisualData Data4_g118029 = Data3_g117894;
				float Out_Dummy4_g118029 = 0;
				float3 Out_Albedo4_g118029 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118029 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118029 = float2( 0,0 );
				float3 Out_NormalWS4_g118029 = float3( 0,0,0 );
				float4 Out_Shader4_g118029 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118029 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118029 = 0;
				float Out_Grayscale4_g118029 = 0;
				float Out_Luminosity4_g118029 = 0;
				float Out_AlphaClip4_g118029 = 0;
				float Out_AlphaFade4_g118029 = 0;
				float3 Out_Translucency4_g118029 = float3( 0,0,0 );
				float Out_Transmission4_g118029 = 0;
				float Out_Thickness4_g118029 = 0;
				float Out_Diffusion4_g118029 = 0;
				Out_Dummy4_g118029 = Data4_g118029.Dummy;
				Out_Albedo4_g118029 = Data4_g118029.Albedo;
				Out_AlbedoRaw4_g118029 = Data4_g118029.AlbedoRaw;
				Out_NormalTS4_g118029 = Data4_g118029.NormalTS;
				Out_NormalWS4_g118029 = Data4_g118029.NormalWS;
				Out_Shader4_g118029 = Data4_g118029.Shader;
				Out_Emissive4_g118029= Data4_g118029.Emissive;
				Out_MultiMask4_g118029 = Data4_g118029.MultiMask;
				Out_Grayscale4_g118029 = Data4_g118029.Grayscale;
				Out_Luminosity4_g118029= Data4_g118029.Luminosity;
				Out_AlphaClip4_g118029 = Data4_g118029.AlphaClip;
				Out_AlphaFade4_g118029 = Data4_g118029.AlphaFade;
				Out_Translucency4_g118029 = Data4_g118029.Translucency;
				Out_Transmission4_g118029 = Data4_g118029.Transmission;
				Out_Thickness4_g118029 = Data4_g118029.Thickness;
				Out_Diffusion4_g118029 = Data4_g118029.Diffusion;
				half3 Visual_Albedo139_g118007 = Out_Albedo4_g118029;
				float temp_output_200_12_g118007 = Out_Grayscale4_g118029;
				half Visual_Grayscale150_g118007 = temp_output_200_12_g118007;
				float3 temp_cast_10 = (Visual_Grayscale150_g118007).xxx;
				float localBuildGlobalData204_g117810 = ( 0.0 );
				TVEGlobalData Data204_g117810 = (TVEGlobalData)0;
				half Dummy211_g117810 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g117810 = Dummy211_g117810;
				half4 Coat_Params302_g117810 = TVE_CoatParams;
				float4 In_CoatParams204_g117810 = Coat_Params302_g117810;
				float temp_output_82_0_g117811 = _GlobalPaintLayerValue;
				float temp_output_19_0_g117813 = TVE_PaintLayers[(int)temp_output_82_0_g117811];
				TVEModelData Data16_g117809 = (TVEModelData)0;
				float In_Dummy16_g117809 = 0.0;
				float3 vertexToFrag73_g117794 = packedInput.ase_texcoord8.xyz;
				half3 PositionWS122_g117794 = vertexToFrag73_g117794;
				float3 In_PositionWS16_g117809 = PositionWS122_g117794;
				float3 localObjectPosition_UNITY_MATRIX_M14_g117796 = ObjectPosition_UNITY_MATRIX_M();
				#ifdef SHADEROPTIONS_CAMERA_RELATIVE_RENDERING
				float3 staticSwitch13_g117796 = ( localObjectPosition_UNITY_MATRIX_M14_g117796 + _WorldSpaceCameraPos );
				#else
				float3 staticSwitch13_g117796 = localObjectPosition_UNITY_MATRIX_M14_g117796;
				#endif
				half3 ObjectData20_g117798 = staticSwitch13_g117796;
				half3 WorldData19_g117798 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g117798 = WorldData19_g117798;
				#else
				float3 staticSwitch14_g117798 = ObjectData20_g117798;
				#endif
				float3 temp_output_124_0_g117796 = staticSwitch14_g117798;
				float3 temp_output_239_7_g117794 = temp_output_124_0_g117796;
				half3 PivotWS121_g117794 = temp_output_239_7_g117794;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g117794 = ( PositionWS122_g117794 - PivotWS121_g117794 );
				#else
				float3 staticSwitch204_g117794 = PositionWS122_g117794;
				#endif
				half3 PositionWO132_g117794 = ( staticSwitch204_g117794 - TVE_WorldOrigin );
				float3 In_PositionWO16_g117809 = PositionWO132_g117794;
				float3 In_PivotWS16_g117809 = PivotWS121_g117794;
				half3 PivotWO133_g117794 = ( PivotWS121_g117794 - TVE_WorldOrigin );
				float3 In_PivotWO16_g117809 = PivotWO133_g117794;
				float3 normalizedWorldNormal = normalize( normalWS );
				half3 Normal_WS95_g117794 = normalizedWorldNormal;
				float3 In_NormalWS16_g117809 = Normal_WS95_g117794;
				float3 normalizeResult296_g117794 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g117794 ) );
				half3 ViewDirWS169_g117794 = normalizeResult296_g117794;
				float3 In_ViewDirWS16_g117809 = ViewDirWS169_g117794;
				half4 VertexMasks171_g117794 = packedInput.ase_color;
				float4 In_VertexData16_g117809 = VertexMasks171_g117794;
				float4 In_BoundsData16_g117809 = float4( 1,1,1,1 );
				Data16_g117809.Dummy = In_Dummy16_g117809;
				Data16_g117809.PositionWS = In_PositionWS16_g117809;
				Data16_g117809.PositionWO = In_PositionWO16_g117809;
				Data16_g117809.PivotWS = In_PivotWS16_g117809;
				Data16_g117809.PivotWO = In_PivotWO16_g117809;
				Data16_g117809.NormalWS = In_NormalWS16_g117809;
				Data16_g117809.ViewDirWS = In_ViewDirWS16_g117809;
				Data16_g117809.VertexData = In_VertexData16_g117809;
				Data16_g117809.BoundsData = In_BoundsData16_g117809;
				TVEModelData Data15_g117892 = Data16_g117809;
				float Out_Dummy15_g117892 = 0;
				float3 Out_PositionWS15_g117892 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117892 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117892 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g117892 = float3( 0,0,0 );
				float4 Out_VertexData15_g117892 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117892 = float4( 0,0,0,0 );
				Out_Dummy15_g117892 = Data15_g117892.Dummy;
				Out_PositionWS15_g117892 = Data15_g117892.PositionWS;
				Out_PositionWO15_g117892 = Data15_g117892.PositionWO;
				Out_PivotWS15_g117892 = Data15_g117892.PivotWS;
				Out_PivotWO15_g117892 = Data15_g117892.PivotWO;
				Out_NormalWS15_g117892 = Data15_g117892.NormalWS;
				Out_ViewDirWS15_g117892 = Data15_g117892.ViewDirWS;
				Out_VertexData15_g117892 = Data15_g117892.VertexData;
				Out_BoundsData15_g117892 = Data15_g117892.BoundsData;
				half3 Model_PositionWS143_g117810 = Out_PositionWS15_g117892;
				half3 Input_Position180_g117814 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117814 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_82_0_g117814 = temp_output_82_0_g117811;
				float2 temp_output_119_0_g117814 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_7_0_g117819 = 1.0;
				float temp_output_10_0_g117819 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117819 );
				float4 lerpResult131_g117814 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117814,temp_output_82_0_g117814, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, temp_output_119_0_g117814,temp_output_82_0_g117814, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117814 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117819 ) / temp_output_10_0_g117819 ) ));
				float4 temp_output_17_0_g117813 = lerpResult131_g117814;
				float4 temp_output_3_0_g117813 = TVE_PaintParams;
				float4 ifLocalVar18_g117813 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117813 >= 0.5 )
				ifLocalVar18_g117813 = temp_output_17_0_g117813;
				else
				ifLocalVar18_g117813 = temp_output_3_0_g117813;
				float4 lerpResult22_g117813 = lerp( temp_output_3_0_g117813 , temp_output_17_0_g117813 , temp_output_19_0_g117813);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117813 = lerpResult22_g117813;
				#else
				float4 staticSwitch24_g117813 = ifLocalVar18_g117813;
				#endif
				half4 Paint_Params71_g117810 = staticSwitch24_g117813;
				float4 In_PaintParams204_g117810 = Paint_Params71_g117810;
				float temp_output_82_0_g117829 = _GlobalGlowLayerValue;
				float temp_output_19_0_g117831 = TVE_GlowLayers[(int)temp_output_82_0_g117829];
				half3 Input_Position180_g117832 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117832 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_82_0_g117832 = temp_output_82_0_g117829;
				float2 temp_output_119_0_g117832 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_7_0_g117837 = 1.0;
				float temp_output_10_0_g117837 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117837 );
				float4 lerpResult131_g117832 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117832,temp_output_82_0_g117832, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, temp_output_119_0_g117832,temp_output_82_0_g117832, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117832 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117837 ) / temp_output_10_0_g117837 ) ));
				float4 temp_output_17_0_g117831 = lerpResult131_g117832;
				float4 temp_output_3_0_g117831 = TVE_GlowParams;
				float4 ifLocalVar18_g117831 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117831 >= 0.5 )
				ifLocalVar18_g117831 = temp_output_17_0_g117831;
				else
				ifLocalVar18_g117831 = temp_output_3_0_g117831;
				float4 lerpResult22_g117831 = lerp( temp_output_3_0_g117831 , temp_output_17_0_g117831 , temp_output_19_0_g117831);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117831 = lerpResult22_g117831;
				#else
				float4 staticSwitch24_g117831 = ifLocalVar18_g117831;
				#endif
				half4 Glow_Params248_g117810 = staticSwitch24_g117831;
				float4 In_GlowParams204_g117810 = Glow_Params248_g117810;
				float temp_output_132_0_g117874 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g117876 = TVE_AtmoLayers[(int)temp_output_132_0_g117874];
				half3 Input_Position180_g117877 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117877 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_82_0_g117877 = temp_output_132_0_g117874;
				float2 temp_output_119_0_g117877 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_7_0_g117882 = 1.0;
				float temp_output_10_0_g117882 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117882 );
				float4 lerpResult131_g117877 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117877,temp_output_82_0_g117877, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, temp_output_119_0_g117877,temp_output_82_0_g117877, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117877 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117882 ) / temp_output_10_0_g117882 ) ));
				float4 temp_output_17_0_g117876 = lerpResult131_g117877;
				float4 temp_output_3_0_g117876 = TVE_AtmoParams;
				float4 ifLocalVar18_g117876 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117876 >= 0.5 )
				ifLocalVar18_g117876 = temp_output_17_0_g117876;
				else
				ifLocalVar18_g117876 = temp_output_3_0_g117876;
				float4 lerpResult22_g117876 = lerp( temp_output_3_0_g117876 , temp_output_17_0_g117876 , temp_output_19_0_g117876);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117876 = lerpResult22_g117876;
				#else
				float4 staticSwitch24_g117876 = ifLocalVar18_g117876;
				#endif
				half4 Atmo_Params80_g117810 = staticSwitch24_g117876;
				float4 In_AtmoParams204_g117810 = Atmo_Params80_g117810;
				float temp_output_132_0_g117883 = _GlobalFadeLayerValue;
				float temp_output_19_0_g117885 = TVE_FadeLayers[(int)temp_output_132_0_g117883];
				half3 Input_Position180_g117886 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117886 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_82_0_g117886 = temp_output_132_0_g117883;
				float2 temp_output_119_0_g117886 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_7_0_g117891 = 1.0;
				float temp_output_10_0_g117891 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117891 );
				float4 lerpResult131_g117886 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117886,temp_output_82_0_g117886, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, temp_output_119_0_g117886,temp_output_82_0_g117886, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117886 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117891 ) / temp_output_10_0_g117891 ) ));
				float4 temp_output_17_0_g117885 = lerpResult131_g117886;
				float4 temp_output_3_0_g117885 = TVE_FadeParams;
				float4 ifLocalVar18_g117885 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117885 >= 0.5 )
				ifLocalVar18_g117885 = temp_output_17_0_g117885;
				else
				ifLocalVar18_g117885 = temp_output_3_0_g117885;
				float4 lerpResult22_g117885 = lerp( temp_output_3_0_g117885 , temp_output_17_0_g117885 , temp_output_19_0_g117885);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117885 = lerpResult22_g117885;
				#else
				float4 staticSwitch24_g117885 = ifLocalVar18_g117885;
				#endif
				half4 Fade_Params387_g117810 = staticSwitch24_g117885;
				float4 In_FadeParams204_g117810 = Fade_Params387_g117810;
				half4 Form_Params112_g117810 = TVE_FormParams;
				float4 In_FormParams204_g117810 = Form_Params112_g117810;
				float temp_output_130_0_g117847 = _GlobalLandLayerValue;
				float temp_output_19_0_g117849 = TVE_LandLayers[(int)temp_output_130_0_g117847];
				half3 Input_Position180_g117850 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117850 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_82_0_g117850 = temp_output_130_0_g117847;
				float2 temp_output_119_0_g117850 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_7_0_g117855 = 1.0;
				float temp_output_10_0_g117855 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117855 );
				float4 lerpResult131_g117850 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117850,temp_output_82_0_g117850, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, temp_output_119_0_g117850,temp_output_82_0_g117850, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117850 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117855 ) / temp_output_10_0_g117855 ) ));
				float4 temp_output_17_0_g117849 = lerpResult131_g117850;
				float4 temp_output_3_0_g117849 = TVE_LandParams;
				float4 ifLocalVar18_g117849 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117849 >= 0.5 )
				ifLocalVar18_g117849 = temp_output_17_0_g117849;
				else
				ifLocalVar18_g117849 = temp_output_3_0_g117849;
				float4 lerpResult22_g117849 = lerp( temp_output_3_0_g117849 , temp_output_17_0_g117849 , temp_output_19_0_g117849);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117849 = lerpResult22_g117849;
				#else
				float4 staticSwitch24_g117849 = ifLocalVar18_g117849;
				#endif
				half4 Land_Params375_g117810 = staticSwitch24_g117849;
				float4 In_LandParams204_g117810 = Land_Params375_g117810;
				half4 Wind_Params88_g117810 = TVE_WindParams;
				float4 In_WindParams204_g117810 = Wind_Params88_g117810;
				half4 Push_Params335_g117810 = TVE_PushParams;
				float4 In_PushParams204_g117810 = Push_Params335_g117810;
				Data204_g117810.Dummy = In_Dummy204_g117810;
				Data204_g117810.CoatParams = In_CoatParams204_g117810;
				Data204_g117810.PaintParams = In_PaintParams204_g117810;
				Data204_g117810.GlowParams = In_GlowParams204_g117810;
				Data204_g117810.AtmoParams = In_AtmoParams204_g117810;
				Data204_g117810.FadeParams = In_FadeParams204_g117810;
				Data204_g117810.FormParams= In_FormParams204_g117810;
				Data204_g117810.LandParams = In_LandParams204_g117810;
				Data204_g117810.WindParams = In_WindParams204_g117810;
				Data204_g117810.PushParams = In_PushParams204_g117810;
				TVEGlobalData Data15_g118008 = Data204_g117810;
				float Out_Dummy15_g118008 = 0;
				float4 Out_CoatParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118008 = float4( 0,0,0,0 );
				Out_Dummy15_g118008 = Data15_g118008.Dummy;
				Out_CoatParams15_g118008 = Data15_g118008.CoatParams;
				Out_PaintParams15_g118008 = Data15_g118008.PaintParams;
				Out_GlowParams15_g118008 = Data15_g118008.GlowParams;
				Out_AtmoParams15_g118008= Data15_g118008.AtmoParams;
				Out_FadeParams15_g118008= Data15_g118008.FadeParams;
				Out_FormParams15_g118008 = Data15_g118008.FormParams;
				Out_LandParams15_g118008 = Data15_g118008.LandParams;
				Out_WindParams15_g118008 = Data15_g118008.WindParams;
				Out_PushParams15_g118008 = Data15_g118008.PushParams;
				half4 Global_PaintParams209_g118007 = Out_PaintParams15_g118008;
				float temp_output_6_0_g118009 = ( saturate( (Global_PaintParams209_g118007).w ) * TVE_IsEnabled );
				#ifdef TVE_REGISTER
				float staticSwitch14_g118009 = ( temp_output_6_0_g118009 + ( _TintingElementMode * 0.0 ) );
				#else
				float staticSwitch14_g118009 = temp_output_6_0_g118009;
				#endif
				#ifdef TVE_TINTING_ELEMENT
				float staticSwitch283_g118007 = staticSwitch14_g118009;
				#else
				float staticSwitch283_g118007 = 1.0;
				#endif
				half Tinting_GlobalValue285_g118007 = staticSwitch283_g118007;
				float3 lerpResult368_g118007 = lerp( Visual_Albedo139_g118007 , temp_cast_10 , ( Tinting_GlobalValue285_g118007 * _TintingGrayValue ));
				float3 temp_cast_32 = (1.0).xxx;
				#ifdef TVE_TINTING_ELEMENT
				float3 staticSwitch288_g118007 = (Global_PaintParams209_g118007).xyz;
				#else
				float3 staticSwitch288_g118007 = temp_cast_32;
				#endif
				half3 Tinting_ColorGlobal290_g118007 = staticSwitch288_g118007;
				float temp_output_200_11_g118007 = Out_MultiMask4_g118029;
				half Visual_MultiMask181_g118007 = temp_output_200_11_g118007;
				float lerpResult147_g118007 = lerp( 1.0 , Visual_MultiMask181_g118007 , _TintingMultiValue);
				half Tinting_MutiMask121_g118007 = lerpResult147_g118007;
				half Tinting_TexMask385_g118007 = 1.0;
				float temp_output_200_15_g118007 = Out_Luminosity4_g118029;
				half Visual_Luminosity257_g118007 = temp_output_200_15_g118007;
				float clampResult17_g118021 = clamp( Visual_Luminosity257_g118007 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118020 = _TintingLumaRemap.x;
				float temp_output_10_0_g118020 = ( _TintingLumaRemap.y - temp_output_7_0_g118020 );
				float lerpResult228_g118007 = lerp( 1.0 , saturate( ( ( clampResult17_g118021 - temp_output_7_0_g118020 ) / ( temp_output_10_0_g118020 + 0.0001 ) ) ) , _TintingLumaValue);
				half Tinting_LumaMask153_g118007 = lerpResult228_g118007;
				half Tinting_VertMask309_g118007 = 1.0;
				half Tinting_NoiseMask213_g118007 = 1.0;
				half Custom_Mask345_g118007 = 1.0;
				float temp_output_7_0_g118016 = _TintingBlendRemap.x;
				float temp_output_10_0_g118016 = ( _TintingBlendRemap.y - temp_output_7_0_g118016 );
				half Tinting_Mask242_g118007 = ( saturate( ( ( ( _TintingIntensityValue * Tinting_MutiMask121_g118007 * Tinting_TexMask385_g118007 * Tinting_LumaMask153_g118007 * Tinting_VertMask309_g118007 * Tinting_NoiseMask213_g118007 * Tinting_GlobalValue285_g118007 * Custom_Mask345_g118007 ) - temp_output_7_0_g118016 ) / ( temp_output_10_0_g118016 + 0.0001 ) ) ) * TVE_IsEnabled );
				float3 lerpResult90_g118007 = lerp( Visual_Albedo139_g118007 , ( lerpResult368_g118007 * 4.594794 * Tinting_ColorGlobal290_g118007 * (_TintingColor).rgb ) , Tinting_Mask242_g118007);
				#ifdef TVE_TINTING
				float3 staticSwitch286_g118007 = lerpResult90_g118007;
				#else
				float3 staticSwitch286_g118007 = Visual_Albedo139_g118007;
				#endif
				half3 Final_Albedo97_g118007 = staticSwitch286_g118007;
				float3 In_Albedo3_g118028 = Final_Albedo97_g118007;
				float3 In_AlbedoRaw3_g118028 = Out_AlbedoRaw4_g118029;
				float2 In_NormalTS3_g118028 = Out_NormalTS4_g118029;
				float3 In_NormalWS3_g118028 = Out_NormalWS4_g118029;
				float4 In_Shader3_g118028 = Out_Shader4_g118029;
				float4 In_Emissive3_g118028 = Out_Emissive4_g118029;
				float In_Grayscale3_g118028 = temp_output_200_12_g118007;
				float In_Luminosity3_g118028 = temp_output_200_15_g118007;
				float In_MultiMask3_g118028 = temp_output_200_11_g118007;
				float In_AlphaClip3_g118028 = Out_AlphaClip4_g118029;
				float In_AlphaFade3_g118028 = Out_AlphaFade4_g118029;
				float3 In_Translucency3_g118028 = Out_Translucency4_g118029;
				float In_Transmission3_g118028 = Out_Transmission4_g118029;
				float In_Thickness3_g118028 = Out_Thickness4_g118029;
				float In_Diffusion3_g118028 = Out_Diffusion4_g118029;
				Data3_g118028.Dummy = In_Dummy3_g118028;
				Data3_g118028.Albedo = In_Albedo3_g118028;
				Data3_g118028.AlbedoRaw = In_AlbedoRaw3_g118028;
				Data3_g118028.NormalTS = In_NormalTS3_g118028;
				Data3_g118028.NormalWS = In_NormalWS3_g118028;
				Data3_g118028.Shader = In_Shader3_g118028;
				Data3_g118028.Emissive= In_Emissive3_g118028;
				Data3_g118028.MultiMask = In_MultiMask3_g118028;
				Data3_g118028.Grayscale = In_Grayscale3_g118028;
				Data3_g118028.Luminosity = In_Luminosity3_g118028;
				Data3_g118028.AlphaClip = In_AlphaClip3_g118028;
				Data3_g118028.AlphaFade = In_AlphaFade3_g118028;
				Data3_g118028.Translucency = In_Translucency3_g118028;
				Data3_g118028.Transmission = In_Transmission3_g118028;
				Data3_g118028.Thickness = In_Thickness3_g118028;
				Data3_g118028.Diffusion = In_Diffusion3_g118028;
				TVEVisualData Data4_g118033 = Data3_g118028;
				float Out_Dummy4_g118033 = 0;
				float3 Out_Albedo4_g118033 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118033 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118033 = float2( 0,0 );
				float3 Out_NormalWS4_g118033 = float3( 0,0,0 );
				float4 Out_Shader4_g118033 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118033 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118033 = 0;
				float Out_Grayscale4_g118033 = 0;
				float Out_Luminosity4_g118033 = 0;
				float Out_AlphaClip4_g118033 = 0;
				float Out_AlphaFade4_g118033 = 0;
				float3 Out_Translucency4_g118033 = float3( 0,0,0 );
				float Out_Transmission4_g118033 = 0;
				float Out_Thickness4_g118033 = 0;
				float Out_Diffusion4_g118033 = 0;
				Out_Dummy4_g118033 = Data4_g118033.Dummy;
				Out_Albedo4_g118033 = Data4_g118033.Albedo;
				Out_AlbedoRaw4_g118033 = Data4_g118033.AlbedoRaw;
				Out_NormalTS4_g118033 = Data4_g118033.NormalTS;
				Out_NormalWS4_g118033 = Data4_g118033.NormalWS;
				Out_Shader4_g118033 = Data4_g118033.Shader;
				Out_Emissive4_g118033= Data4_g118033.Emissive;
				Out_MultiMask4_g118033 = Data4_g118033.MultiMask;
				Out_Grayscale4_g118033 = Data4_g118033.Grayscale;
				Out_Luminosity4_g118033= Data4_g118033.Luminosity;
				Out_AlphaClip4_g118033 = Data4_g118033.AlphaClip;
				Out_AlphaFade4_g118033 = Data4_g118033.AlphaFade;
				Out_Translucency4_g118033 = Data4_g118033.Translucency;
				Out_Transmission4_g118033 = Data4_g118033.Transmission;
				Out_Thickness4_g118033 = Data4_g118033.Thickness;
				Out_Diffusion4_g118033 = Data4_g118033.Diffusion;
				half3 Visual_Albedo292_g118031 = Out_Albedo4_g118033;
				float temp_output_280_12_g118031 = Out_Grayscale4_g118033;
				half Visual_Grayscale308_g118031 = temp_output_280_12_g118031;
				float3 temp_cast_33 = (Visual_Grayscale308_g118031).xxx;
				TVEGlobalData Data15_g118032 = Data204_g117810;
				float Out_Dummy15_g118032 = 0;
				float4 Out_CoatParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118032 = float4( 0,0,0,0 );
				Out_Dummy15_g118032 = Data15_g118032.Dummy;
				Out_CoatParams15_g118032 = Data15_g118032.CoatParams;
				Out_PaintParams15_g118032 = Data15_g118032.PaintParams;
				Out_GlowParams15_g118032 = Data15_g118032.GlowParams;
				Out_AtmoParams15_g118032= Data15_g118032.AtmoParams;
				Out_FadeParams15_g118032= Data15_g118032.FadeParams;
				Out_FormParams15_g118032 = Data15_g118032.FormParams;
				Out_LandParams15_g118032 = Data15_g118032.LandParams;
				Out_WindParams15_g118032 = Data15_g118032.WindParams;
				Out_PushParams15_g118032 = Data15_g118032.PushParams;
				half4 Global_AtmoParams314_g118031 = Out_AtmoParams15_g118032;
				#ifdef TVE_DRYNESS_ELEMENT
				float staticSwitch351_g118031 = ( (Global_AtmoParams314_g118031).x * TVE_IsEnabled );
				#else
				float staticSwitch351_g118031 = 1.0;
				#endif
				half Dryness_GlobalMask352_g118031 = staticSwitch351_g118031;
				float3 lerpResult485_g118031 = lerp( Visual_Albedo292_g118031 , temp_cast_33 , ( Dryness_GlobalMask352_g118031 * _DrynessGrayValue ));
				half3 hsvTorgb58_g118052 = RGBToHSV( lerpResult485_g118031 );
				half3 hsvTorgb61_g118052 = HSVToRGB( half3(( hsvTorgb58_g118052.x + _DrynessShiftValue ),hsvTorgb58_g118052.y,hsvTorgb58_g118052.z) );
				#ifdef TVE_DRYNESS_SHIFT
				float3 staticSwitch499_g118031 = hsvTorgb61_g118052;
				#else
				float3 staticSwitch499_g118031 = lerpResult485_g118031;
				#endif
				half Dryness_TexMask478_g118031 = 1.0;
				float temp_output_280_11_g118031 = Out_MultiMask4_g118033;
				half Visual_MultiMask310_g118031 = temp_output_280_11_g118031;
				float lerpResult283_g118031 = lerp( 1.0 , Visual_MultiMask310_g118031 , _DrynessMultiValue);
				half Dryness_MultiMask302_g118031 = lerpResult283_g118031;
				float temp_output_280_15_g118031 = Out_Luminosity4_g118033;
				half Visual_Luminosity309_g118031 = temp_output_280_15_g118031;
				float clampResult17_g118047 = clamp( Visual_Luminosity309_g118031 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118046 = _DrynessLumaRemap.x;
				float temp_output_10_0_g118046 = ( _DrynessLumaRemap.y - temp_output_7_0_g118046 );
				float lerpResult295_g118031 = lerp( 1.0 , saturate( ( ( clampResult17_g118047 - temp_output_7_0_g118046 ) / ( temp_output_10_0_g118046 + 0.0001 ) ) ) , _DrynessLumaValue);
				half Dryness_LumaMask301_g118031 = lerpResult295_g118031;
				half Dryness_VertMask378_g118031 = 1.0;
				half Dryness_MaskNoise291_g118031 = 1.0;
				half Custom_Mask411_g118031 = 1.0;
				float temp_output_7_0_g118045 = _DrynessBlendRemap.x;
				float temp_output_10_0_g118045 = ( _DrynessBlendRemap.y - temp_output_7_0_g118045 );
				half Dryness_Mask329_g118031 = saturate( ( ( ( _DrynessIntensityValue * Dryness_TexMask478_g118031 * Dryness_MultiMask302_g118031 * Dryness_LumaMask301_g118031 * Dryness_VertMask378_g118031 * Dryness_MaskNoise291_g118031 * Dryness_GlobalMask352_g118031 * Custom_Mask411_g118031 ) - temp_output_7_0_g118045 ) / ( temp_output_10_0_g118045 + 0.0001 ) ) );
				float3 lerpResult336_g118031 = lerp( Visual_Albedo292_g118031 , ( staticSwitch499_g118031 * 4.594794 * (_DrynessColor).rgb ) , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float3 staticSwitch356_g118031 = lerpResult336_g118031;
				#else
				float3 staticSwitch356_g118031 = Visual_Albedo292_g118031;
				#endif
				half3 Final_Albedo331_g118031 = staticSwitch356_g118031;
				float3 In_Albedo3_g118034 = Final_Albedo331_g118031;
				float3 In_AlbedoRaw3_g118034 = Out_AlbedoRaw4_g118033;
				float2 In_NormalTS3_g118034 = Out_NormalTS4_g118033;
				float3 In_NormalWS3_g118034 = Out_NormalWS4_g118033;
				half4 Visual_Shader415_g118031 = Out_Shader4_g118033;
				float4 break438_g118031 = Visual_Shader415_g118031;
				float4 appendResult439_g118031 = (float4(break438_g118031.x , break438_g118031.y , break438_g118031.z , ( break438_g118031.w * _DrynessSmoothnessValue )));
				float4 lerpResult427_g118031 = lerp( Visual_Shader415_g118031 , appendResult439_g118031 , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float4 staticSwitch426_g118031 = lerpResult427_g118031;
				#else
				float4 staticSwitch426_g118031 = Visual_Shader415_g118031;
				#endif
				half4 Final_Shader433_g118031 = staticSwitch426_g118031;
				float4 In_Shader3_g118034 = Final_Shader433_g118031;
				float4 In_Emissive3_g118034 = Out_Emissive4_g118033;
				float In_Grayscale3_g118034 = temp_output_280_12_g118031;
				float In_Luminosity3_g118034 = temp_output_280_15_g118031;
				float In_MultiMask3_g118034 = temp_output_280_11_g118031;
				float In_AlphaClip3_g118034 = Out_AlphaClip4_g118033;
				float In_AlphaFade3_g118034 = Out_AlphaFade4_g118033;
				float3 In_Translucency3_g118034 = Out_Translucency4_g118033;
				half Visual_Transmission416_g118031 = Out_Transmission4_g118033;
				float lerpResult421_g118031 = lerp( Visual_Transmission416_g118031 , ( Visual_Transmission416_g118031 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float staticSwitch418_g118031 = lerpResult421_g118031;
				#else
				float staticSwitch418_g118031 = Visual_Transmission416_g118031;
				#endif
				half Final_Transmission425_g118031 = staticSwitch418_g118031;
				float In_Transmission3_g118034 = Final_Transmission425_g118031;
				float In_Thickness3_g118034 = Out_Thickness4_g118033;
				float In_Diffusion3_g118034 = Out_Diffusion4_g118033;
				Data3_g118034.Dummy = In_Dummy3_g118034;
				Data3_g118034.Albedo = In_Albedo3_g118034;
				Data3_g118034.AlbedoRaw = In_AlbedoRaw3_g118034;
				Data3_g118034.NormalTS = In_NormalTS3_g118034;
				Data3_g118034.NormalWS = In_NormalWS3_g118034;
				Data3_g118034.Shader = In_Shader3_g118034;
				Data3_g118034.Emissive= In_Emissive3_g118034;
				Data3_g118034.MultiMask = In_MultiMask3_g118034;
				Data3_g118034.Grayscale = In_Grayscale3_g118034;
				Data3_g118034.Luminosity = In_Luminosity3_g118034;
				Data3_g118034.AlphaClip = In_AlphaClip3_g118034;
				Data3_g118034.AlphaFade = In_AlphaFade3_g118034;
				Data3_g118034.Translucency = In_Translucency3_g118034;
				Data3_g118034.Transmission = In_Transmission3_g118034;
				Data3_g118034.Thickness = In_Thickness3_g118034;
				Data3_g118034.Diffusion = In_Diffusion3_g118034;
				TVEVisualData Data4_g118055 = Data3_g118034;
				float Out_Dummy4_g118055 = 0;
				float3 Out_Albedo4_g118055 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118055 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118055 = float2( 0,0 );
				float3 Out_NormalWS4_g118055 = float3( 0,0,0 );
				float4 Out_Shader4_g118055 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118055 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118055 = 0;
				float Out_Grayscale4_g118055 = 0;
				float Out_Luminosity4_g118055 = 0;
				float Out_AlphaClip4_g118055 = 0;
				float Out_AlphaFade4_g118055 = 0;
				float3 Out_Translucency4_g118055 = float3( 0,0,0 );
				float Out_Transmission4_g118055 = 0;
				float Out_Thickness4_g118055 = 0;
				float Out_Diffusion4_g118055 = 0;
				Out_Dummy4_g118055 = Data4_g118055.Dummy;
				Out_Albedo4_g118055 = Data4_g118055.Albedo;
				Out_AlbedoRaw4_g118055 = Data4_g118055.AlbedoRaw;
				Out_NormalTS4_g118055 = Data4_g118055.NormalTS;
				Out_NormalWS4_g118055 = Data4_g118055.NormalWS;
				Out_Shader4_g118055 = Data4_g118055.Shader;
				Out_Emissive4_g118055= Data4_g118055.Emissive;
				Out_MultiMask4_g118055 = Data4_g118055.MultiMask;
				Out_Grayscale4_g118055 = Data4_g118055.Grayscale;
				Out_Luminosity4_g118055= Data4_g118055.Luminosity;
				Out_AlphaClip4_g118055 = Data4_g118055.AlphaClip;
				Out_AlphaFade4_g118055 = Data4_g118055.AlphaFade;
				Out_Translucency4_g118055 = Data4_g118055.Translucency;
				Out_Transmission4_g118055 = Data4_g118055.Transmission;
				Out_Thickness4_g118055 = Data4_g118055.Thickness;
				Out_Diffusion4_g118055 = Data4_g118055.Diffusion;
				half3 Visual_Albedo127_g118054 = Out_Albedo4_g118055;
				float3 temp_output_622_0_g118054 = (_OverlayColor).rgb;
				TEXTURE2D(Texture238_g118058) = _OverlayAlbedoTex;
				float localFilterTexture19_g118087 = ( 0.0 );
				SamplerState SamplerDefault19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g118087 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g118087 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g118087 = SamplerDefault19_g118087;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g118087 = SamplerDefault19_g118087;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g118087 = SamplerPoint19_g118087;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g118087 = SamplerLow19_g118087;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g118087 = SamplerMedium19_g118087;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g118087 = SamplerHigh19_g118087;
				#endif
				SamplerState Sampler238_g118058 = SS19_g118087;
				float4 temp_output_6_0_g118059 = _overlay_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g118059 = ( temp_output_6_0_g118059 + ( ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g118059 = temp_output_6_0_g118059;
				#endif
				half4 Overlay_Coords639_g118054 = staticSwitch14_g118059;
				float4 temp_output_37_0_g118058 = Overlay_Coords639_g118054;
				half4 Coords238_g118058 = temp_output_37_0_g118058;
				TVEModelData Data15_g118089 = Data16_g117809;
				float Out_Dummy15_g118089 = 0;
				float3 Out_PositionWS15_g118089 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118089 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118089 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118089 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118089 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g118089 = float3( 0,0,0 );
				float4 Out_VertexData15_g118089 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118089 = float4( 0,0,0,0 );
				Out_Dummy15_g118089 = Data15_g118089.Dummy;
				Out_PositionWS15_g118089 = Data15_g118089.PositionWS;
				Out_PositionWO15_g118089 = Data15_g118089.PositionWO;
				Out_PivotWS15_g118089 = Data15_g118089.PivotWS;
				Out_PivotWO15_g118089 = Data15_g118089.PivotWO;
				Out_NormalWS15_g118089 = Data15_g118089.NormalWS;
				Out_ViewDirWS15_g118089 = Data15_g118089.ViewDirWS;
				Out_VertexData15_g118089 = Data15_g118089.VertexData;
				Out_BoundsData15_g118089 = Data15_g118089.BoundsData;
				half3 Model_PositionWO602_g118054 = Out_PositionWO15_g118089;
				float3 temp_output_279_0_g118058 = Model_PositionWO602_g118054;
				half3 WorldPosition238_g118058 = temp_output_279_0_g118058;
				half4 localSamplePlanar2D238_g118058 = SamplePlanar2D( Texture238_g118058 , Sampler238_g118058 , Coords238_g118058 , WorldPosition238_g118058 );
				TEXTURE2D(Texture246_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler246_g118058 = SS19_g118087;
				half4 Coords246_g118058 = temp_output_37_0_g118058;
				half3 WorldPosition246_g118058 = temp_output_279_0_g118058;
				half3 Model_NormalWS712_g118054 = Out_NormalWS15_g118089;
				float3 temp_output_280_0_g118058 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118058 = temp_output_280_0_g118058;
				half4 localSamplePlanar3D246_g118058 = SamplePlanar3D( Texture246_g118058 , Sampler246_g118058 , Coords246_g118058 , WorldPosition246_g118058 , WorldNormal246_g118058 );
				TEXTURE2D(Texture234_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler234_g118058 = SS19_g118087;
				float4 Coords234_g118058 = temp_output_37_0_g118058;
				float3 WorldPosition234_g118058 = temp_output_279_0_g118058;
				float4 localSampleStochastic2D234_g118058 = SampleStochastic2D( Texture234_g118058 , Sampler234_g118058 , Coords234_g118058 , WorldPosition234_g118058 );
				TEXTURE2D(Texture263_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler263_g118058 = SS19_g118087;
				half4 Coords263_g118058 = temp_output_37_0_g118058;
				half3 WorldPosition263_g118058 = temp_output_279_0_g118058;
				half3 WorldNormal263_g118058 = temp_output_280_0_g118058;
				half4 localSampleStochastic3D263_g118058 = SampleStochastic3D( Texture263_g118058 , Sampler263_g118058 , Coords263_g118058 , WorldPosition263_g118058 , WorldNormal263_g118058 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch676_g118054 = localSamplePlanar2D238_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch676_g118054 = localSamplePlanar3D246_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch676_g118054 = localSampleStochastic2D234_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch676_g118054 = localSampleStochastic3D263_g118058;
				#else
				float4 staticSwitch676_g118054 = localSamplePlanar2D238_g118058;
				#endif
				half3 Overlay_Albedo526_g118054 = (staticSwitch676_g118054).xyz;
				#ifdef TVE_OVERLAY_TEX
				float3 staticSwitch578_g118054 = ( temp_output_622_0_g118054 * Overlay_Albedo526_g118054 );
				#else
				float3 staticSwitch578_g118054 = temp_output_622_0_g118054;
				#endif
				float3 temp_output_6_0_g118065 = staticSwitch578_g118054;
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g118065 = ( temp_output_6_0_g118065 + ( _OverlayTextureMode * 0.0 ) );
				#else
				float3 staticSwitch14_g118065 = temp_output_6_0_g118065;
				#endif
				float3 temp_cast_34 = (0.0).xxx;
				TEXTURE2D(Texture246_g118062) = _OverlayGlitterTexRT;
				SamplerState Sampler246_g118062 = sampler_Linear_Repeat;
				float4 appendResult863_g118054 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g118062 = appendResult863_g118054;
				half4 Coords246_g118062 = temp_output_37_0_g118062;
				float3 temp_output_279_0_g118062 = Model_PositionWO602_g118054;
				half3 WorldPosition246_g118062 = temp_output_279_0_g118062;
				float3 temp_output_280_0_g118062 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118062 = temp_output_280_0_g118062;
				half4 localSamplePlanar3D246_g118062 = SamplePlanar3D( Texture246_g118062 , Sampler246_g118062 , Coords246_g118062 , WorldPosition246_g118062 , WorldNormal246_g118062 );
				half Overlay_GlitterTex854_g118054 = (localSamplePlanar3D246_g118062).x;
				half3 Model_PositionWS879_g118054 = Out_PositionWS15_g118089;
				#ifdef TVE_OVERLAY_GLITTER
				float3 staticSwitch868_g118054 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g118054 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g118054 ) / _OverlayGlitterDistValue ) ) ) );
				#else
				float3 staticSwitch868_g118054 = temp_cast_34;
				#endif
				half3 Overlay_GlitterColor865_g118054 = staticSwitch868_g118054;
				half Overlay_TexMask908_g118054 = 1.0;
				float3 temp_output_739_21_g118054 = Out_NormalWS4_g118055;
				half3 Visual_NormalWS749_g118054 = temp_output_739_21_g118054;
				float clampResult17_g118075 = clamp( saturate( (Visual_NormalWS749_g118054).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g118074 = _OverlayProjRemap.x;
				float temp_output_10_0_g118074 = ( _OverlayProjRemap.y - temp_output_7_0_g118074 );
				float lerpResult842_g118054 = lerp( 1.0 , saturate( ( ( clampResult17_g118075 - temp_output_7_0_g118074 ) / ( temp_output_10_0_g118074 + 0.0001 ) ) ) , _OverlayProjValue);
				half Overlay_MaskProj457_g118054 = lerpResult842_g118054;
				float temp_output_739_15_g118054 = Out_Luminosity4_g118055;
				half Visual_Luminosity654_g118054 = temp_output_739_15_g118054;
				float clampResult17_g118077 = clamp( Visual_Luminosity654_g118054 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118076 = _OverlayLumaRemap.x;
				float temp_output_10_0_g118076 = ( _OverlayLumaRemap.y - temp_output_7_0_g118076 );
				float lerpResult587_g118054 = lerp( 1.0 , saturate( ( ( clampResult17_g118077 - temp_output_7_0_g118076 ) / ( temp_output_10_0_g118076 + 0.0001 ) ) ) , _OverlayLumaValue);
				half Overlay_MaskLuma438_g118054 = lerpResult587_g118054;
				half Overlay_VertMask801_g118054 = 1.0;
				half Overlay_MaskNoise427_g118054 = 1.0;
				TVEGlobalData Data15_g118056 = Data204_g117810;
				float Out_Dummy15_g118056 = 0;
				float4 Out_CoatParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118056 = float4( 0,0,0,0 );
				Out_Dummy15_g118056 = Data15_g118056.Dummy;
				Out_CoatParams15_g118056 = Data15_g118056.CoatParams;
				Out_PaintParams15_g118056 = Data15_g118056.PaintParams;
				Out_GlowParams15_g118056 = Data15_g118056.GlowParams;
				Out_AtmoParams15_g118056= Data15_g118056.AtmoParams;
				Out_FadeParams15_g118056= Data15_g118056.FadeParams;
				Out_FormParams15_g118056 = Data15_g118056.FormParams;
				Out_LandParams15_g118056 = Data15_g118056.LandParams;
				Out_WindParams15_g118056 = Data15_g118056.WindParams;
				Out_PushParams15_g118056 = Data15_g118056.PushParams;
				half4 Global_AtmoParams516_g118054 = Out_AtmoParams15_g118056;
				#ifdef TVE_OVERLAY_ELEMENT
				float staticSwitch705_g118054 = ( (Global_AtmoParams516_g118054).z * TVE_IsEnabled );
				#else
				float staticSwitch705_g118054 = 1.0;
				#endif
				half Overlay_MaskGlobal429_g118054 = staticSwitch705_g118054;
				half Custom_Mask646_g118054 = 1.0;
				float temp_output_7_0_g118083 = _OverlayBlendRemap1.x;
				float temp_output_10_0_g118083 = ( _OverlayBlendRemap1.y - temp_output_7_0_g118083 );
				half Overlay_Mask494_g118054 = saturate( ( ( ( _OverlayIntensityValue * Overlay_TexMask908_g118054 * Overlay_MaskProj457_g118054 * Overlay_MaskLuma438_g118054 * Overlay_VertMask801_g118054 * Overlay_MaskNoise427_g118054 * Overlay_MaskGlobal429_g118054 * Custom_Mask646_g118054 ) - temp_output_7_0_g118083 ) / ( temp_output_10_0_g118083 + 0.0001 ) ) );
				float3 lerpResult467_g118054 = lerp( Visual_Albedo127_g118054 , ( staticSwitch14_g118065 + Overlay_GlitterColor865_g118054 ) , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float3 staticSwitch577_g118054 = lerpResult467_g118054;
				#else
				float3 staticSwitch577_g118054 = Visual_Albedo127_g118054;
				#endif
				half3 Final_Albedo493_g118054 = staticSwitch577_g118054;
				float3 In_Albedo3_g118057 = Final_Albedo493_g118054;
				float3 In_AlbedoRaw3_g118057 = Out_AlbedoRaw4_g118055;
				half2 Visual_NormalTS535_g118054 = Out_NormalTS4_g118055;
				TEXTURE2D(Texture238_g118060) = _OverlayNormalTex;
				float localFilterTexture29_g118088 = ( 0.0 );
				SamplerState SamplerDefault29_g118088 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g118088 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g118088 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g118088 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g118088 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g118088 = SamplerDefault29_g118088;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g118088 = SamplerDefault29_g118088;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g118088 = SamplerPoint29_g118088;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g118088 = SamplerLow29_g118088;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g118088 = SamplerMedium29_g118088;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g118088 = SamplerHigh29_g118088;
				#endif
				SamplerState Sampler238_g118060 = SS29_g118088;
				float4 temp_output_37_0_g118060 = Overlay_Coords639_g118054;
				half4 Coords238_g118060 = temp_output_37_0_g118060;
				float3 temp_output_279_0_g118060 = Model_PositionWO602_g118054;
				half3 WorldPosition238_g118060 = temp_output_279_0_g118060;
				half4 localSamplePlanar2D238_g118060 = SamplePlanar2D( Texture238_g118060 , Sampler238_g118060 , Coords238_g118060 , WorldPosition238_g118060 );
				TEXTURE2D(Texture246_g118060) = _OverlayNormalTex;
				SamplerState Sampler246_g118060 = SS29_g118088;
				half4 Coords246_g118060 = temp_output_37_0_g118060;
				half3 WorldPosition246_g118060 = temp_output_279_0_g118060;
				float3 temp_output_280_0_g118060 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118060 = temp_output_280_0_g118060;
				half4 localSamplePlanar3D246_g118060 = SamplePlanar3D( Texture246_g118060 , Sampler246_g118060 , Coords246_g118060 , WorldPosition246_g118060 , WorldNormal246_g118060 );
				TEXTURE2D(Texture234_g118060) = _OverlayNormalTex;
				SamplerState Sampler234_g118060 = SS29_g118088;
				float4 Coords234_g118060 = temp_output_37_0_g118060;
				float3 WorldPosition234_g118060 = temp_output_279_0_g118060;
				float4 localSampleStochastic2D234_g118060 = SampleStochastic2D( Texture234_g118060 , Sampler234_g118060 , Coords234_g118060 , WorldPosition234_g118060 );
				TEXTURE2D(Texture263_g118060) = _OverlayNormalTex;
				SamplerState Sampler263_g118060 = SS29_g118088;
				half4 Coords263_g118060 = temp_output_37_0_g118060;
				half3 WorldPosition263_g118060 = temp_output_279_0_g118060;
				half3 WorldNormal263_g118060 = temp_output_280_0_g118060;
				half4 localSampleStochastic3D263_g118060 = SampleStochastic3D( Texture263_g118060 , Sampler263_g118060 , Coords263_g118060 , WorldPosition263_g118060 , WorldNormal263_g118060 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch686_g118054 = localSamplePlanar2D238_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch686_g118054 = localSamplePlanar3D246_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch686_g118054 = localSampleStochastic2D234_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch686_g118054 = localSampleStochastic3D263_g118060;
				#else
				float4 staticSwitch686_g118054 = localSamplePlanar2D238_g118060;
				#endif
				half4 Normal_Packed45_g118064 = staticSwitch686_g118054;
				float2 appendResult58_g118064 = (float2(( (Normal_Packed45_g118064).x * (Normal_Packed45_g118064).w ) , (Normal_Packed45_g118064).y));
				half2 Normal_Default50_g118064 = appendResult58_g118064;
				half2 Normal_ASTC41_g118064 = (Normal_Packed45_g118064).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g118064 = Normal_ASTC41_g118064;
				#else
				float2 staticSwitch38_g118064 = Normal_Default50_g118064;
				#endif
				half2 Normal_NO_DTX544_g118064 = (Normal_Packed45_g118064).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g118064 = Normal_NO_DTX544_g118064;
				#else
				float2 staticSwitch37_g118064 = staticSwitch38_g118064;
				#endif
				half2 Normal_Planar45_g118063 = (staticSwitch37_g118064*2.0 + -1.0);
				float2 break71_g118063 = Normal_Planar45_g118063;
				float3 appendResult72_g118063 = (float3(break71_g118063.x , 0.0 , break71_g118063.y));
				half2 Overlay_Normal528_g118054 = (mul( ase_worldToTangent, appendResult72_g118063 )).xy;
				#ifdef TVE_OVERLAY_TEX
				float2 staticSwitch579_g118054 = Overlay_Normal528_g118054;
				#else
				float2 staticSwitch579_g118054 = Visual_NormalTS535_g118054;
				#endif
				float2 lerpResult551_g118054 = lerp( Visual_NormalTS535_g118054 , ( staticSwitch579_g118054 * _OverlayNormalValue ) , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float2 staticSwitch583_g118054 = lerpResult551_g118054;
				#else
				float2 staticSwitch583_g118054 = Visual_NormalTS535_g118054;
				#endif
				half2 Final_NormalTS499_g118054 = staticSwitch583_g118054;
				float2 In_NormalTS3_g118057 = Final_NormalTS499_g118054;
				float3 In_NormalWS3_g118057 = temp_output_739_21_g118054;
				half4 Visual_Masks536_g118054 = Out_Shader4_g118055;
				float4 appendResult585_g118054 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
				float4 lerpResult584_g118054 = lerp( Visual_Masks536_g118054 , appendResult585_g118054 , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float4 staticSwitch586_g118054 = lerpResult584_g118054;
				#else
				float4 staticSwitch586_g118054 = Visual_Masks536_g118054;
				#endif
				half4 Final_Masks482_g118054 = staticSwitch586_g118054;
				float4 In_Shader3_g118057 = Final_Masks482_g118054;
				float4 In_Emissive3_g118057 = Out_Emissive4_g118055;
				float temp_output_739_12_g118054 = Out_Grayscale4_g118055;
				float In_Grayscale3_g118057 = temp_output_739_12_g118054;
				float In_Luminosity3_g118057 = temp_output_739_15_g118054;
				float In_MultiMask3_g118057 = Out_MultiMask4_g118055;
				float In_AlphaClip3_g118057 = Out_AlphaClip4_g118055;
				float In_AlphaFade3_g118057 = Out_AlphaFade4_g118055;
				float3 In_Translucency3_g118057 = Out_Translucency4_g118055;
				half Visual_Transmission699_g118054 = Out_Transmission4_g118055;
				float lerpResult746_g118054 = lerp( Visual_Transmission699_g118054 , ( Visual_Transmission699_g118054 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g118054 * Overlay_MaskNoise427_g118054 * Overlay_MaskGlobal429_g118054 ));
				#ifdef TVE_OVERLAY
				float staticSwitch703_g118054 = lerpResult746_g118054;
				#else
				float staticSwitch703_g118054 = Visual_Transmission699_g118054;
				#endif
				half Final_Transmission702_g118054 = staticSwitch703_g118054;
				float In_Transmission3_g118057 = Final_Transmission702_g118054;
				float In_Thickness3_g118057 = Out_Thickness4_g118055;
				float In_Diffusion3_g118057 = Out_Diffusion4_g118055;
				Data3_g118057.Dummy = In_Dummy3_g118057;
				Data3_g118057.Albedo = In_Albedo3_g118057;
				Data3_g118057.AlbedoRaw = In_AlbedoRaw3_g118057;
				Data3_g118057.NormalTS = In_NormalTS3_g118057;
				Data3_g118057.NormalWS = In_NormalWS3_g118057;
				Data3_g118057.Shader = In_Shader3_g118057;
				Data3_g118057.Emissive= In_Emissive3_g118057;
				Data3_g118057.MultiMask = In_MultiMask3_g118057;
				Data3_g118057.Grayscale = In_Grayscale3_g118057;
				Data3_g118057.Luminosity = In_Luminosity3_g118057;
				Data3_g118057.AlphaClip = In_AlphaClip3_g118057;
				Data3_g118057.AlphaFade = In_AlphaFade3_g118057;
				Data3_g118057.Translucency = In_Translucency3_g118057;
				Data3_g118057.Transmission = In_Transmission3_g118057;
				Data3_g118057.Thickness = In_Thickness3_g118057;
				Data3_g118057.Diffusion = In_Diffusion3_g118057;
				TVEVisualData Data4_g118091 = Data3_g118057;
				float Out_Dummy4_g118091 = 0;
				float3 Out_Albedo4_g118091 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118091 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118091 = float2( 0,0 );
				float3 Out_NormalWS4_g118091 = float3( 0,0,0 );
				float4 Out_Shader4_g118091 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118091 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118091 = 0;
				float Out_Grayscale4_g118091 = 0;
				float Out_Luminosity4_g118091 = 0;
				float Out_AlphaClip4_g118091 = 0;
				float Out_AlphaFade4_g118091 = 0;
				float3 Out_Translucency4_g118091 = float3( 0,0,0 );
				float Out_Transmission4_g118091 = 0;
				float Out_Thickness4_g118091 = 0;
				float Out_Diffusion4_g118091 = 0;
				Out_Dummy4_g118091 = Data4_g118091.Dummy;
				Out_Albedo4_g118091 = Data4_g118091.Albedo;
				Out_AlbedoRaw4_g118091 = Data4_g118091.AlbedoRaw;
				Out_NormalTS4_g118091 = Data4_g118091.NormalTS;
				Out_NormalWS4_g118091 = Data4_g118091.NormalWS;
				Out_Shader4_g118091 = Data4_g118091.Shader;
				Out_Emissive4_g118091= Data4_g118091.Emissive;
				Out_MultiMask4_g118091 = Data4_g118091.MultiMask;
				Out_Grayscale4_g118091 = Data4_g118091.Grayscale;
				Out_Luminosity4_g118091= Data4_g118091.Luminosity;
				Out_AlphaClip4_g118091 = Data4_g118091.AlphaClip;
				Out_AlphaFade4_g118091 = Data4_g118091.AlphaFade;
				Out_Translucency4_g118091 = Data4_g118091.Translucency;
				Out_Transmission4_g118091 = Data4_g118091.Transmission;
				Out_Thickness4_g118091 = Data4_g118091.Thickness;
				Out_Diffusion4_g118091 = Data4_g118091.Diffusion;
				half3 Visual_Albedo127_g118090 = Out_Albedo4_g118091;
				TVEGlobalData Data15_g118096 = Data204_g117810;
				float Out_Dummy15_g118096 = 0;
				float4 Out_CoatParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118096 = float4( 0,0,0,0 );
				Out_Dummy15_g118096 = Data15_g118096.Dummy;
				Out_CoatParams15_g118096 = Data15_g118096.CoatParams;
				Out_PaintParams15_g118096 = Data15_g118096.PaintParams;
				Out_GlowParams15_g118096 = Data15_g118096.GlowParams;
				Out_AtmoParams15_g118096= Data15_g118096.AtmoParams;
				Out_FadeParams15_g118096= Data15_g118096.FadeParams;
				Out_FormParams15_g118096 = Data15_g118096.FormParams;
				Out_LandParams15_g118096 = Data15_g118096.LandParams;
				Out_WindParams15_g118096 = Data15_g118096.WindParams;
				Out_PushParams15_g118096 = Data15_g118096.PushParams;
				half4 Global_AtmoParams516_g118090 = Out_AtmoParams15_g118096;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch663_g118090 = ( (Global_AtmoParams516_g118090).y * TVE_IsEnabled );
				#else
				float staticSwitch663_g118090 = 1.0;
				#endif
				half Global_Wetness429_g118090 = staticSwitch663_g118090;
				half Wetness_Value1042_g118090 = ( _WetnessIntensityValue * Global_Wetness429_g118090 );
				half Wetness_VertMask1024_g118090 = 1.0;
				float temp_output_1043_0_g118090 = ( Wetness_Value1042_g118090 * Wetness_VertMask1024_g118090 );
				half Wetness_Mask866_g118090 = temp_output_1043_0_g118090;
				half Water_VertMask1094_g118090 = 1.0;
				half4 Visual_Masks536_g118090 = Out_Shader4_g118091;
				float lerpResult1013_g118090 = lerp( 1.0 , (Visual_Masks536_g118090).z , _WetnessWaterBaseValue);
				half Water_HeightMask782_g118090 = lerpResult1013_g118090;
				float clampResult17_g118105 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g118090 * Water_VertMask1094_g118090 ) - Water_HeightMask782_g118090 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g118106 = _WetnessWaterBlendRemap.x;
				float temp_output_10_0_g118106 = ( _WetnessWaterBlendRemap.y - temp_output_7_0_g118106 );
				TVEModelData Data15_g118104 = Data16_g117809;
				float Out_Dummy15_g118104 = 0;
				float3 Out_PositionWS15_g118104 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118104 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118104 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118104 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118104 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g118104 = float3( 0,0,0 );
				float4 Out_VertexData15_g118104 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118104 = float4( 0,0,0,0 );
				Out_Dummy15_g118104 = Data15_g118104.Dummy;
				Out_PositionWS15_g118104 = Data15_g118104.PositionWS;
				Out_PositionWO15_g118104 = Data15_g118104.PositionWO;
				Out_PivotWS15_g118104 = Data15_g118104.PivotWS;
				Out_PivotWO15_g118104 = Data15_g118104.PivotWO;
				Out_NormalWS15_g118104 = Data15_g118104.NormalWS;
				Out_ViewDirWS15_g118104 = Data15_g118104.ViewDirWS;
				Out_VertexData15_g118104 = Data15_g118104.VertexData;
				Out_BoundsData15_g118104 = Data15_g118104.BoundsData;
				half3 Model_NormalWS798_g118090 = Out_NormalWS15_g118104;
				float temp_output_786_0_g118090 = saturate( (Model_NormalWS798_g118090).y );
				half Wetness_ProjMask790_g118090 = temp_output_786_0_g118090;
				half Water_Mask760_g118090 = ( saturate( ( ( clampResult17_g118105 - temp_output_7_0_g118106 ) / ( temp_output_10_0_g118106 + 0.0001 ) ) ) * Wetness_ProjMask790_g118090 );
				float3 lerpResult918_g118090 = lerp( Visual_Albedo127_g118090 , ( Visual_Albedo127_g118090 * (_WetnessWaterColor).rgb ) , Water_Mask760_g118090);
				#ifdef TVE_WETNESS_WATER
				float3 staticSwitch946_g118090 = lerpResult918_g118090;
				#else
				float3 staticSwitch946_g118090 = Visual_Albedo127_g118090;
				#endif
				float3 lerpResult768_g118090 = lerp( staticSwitch946_g118090 , ( staticSwitch946_g118090 * staticSwitch946_g118090 ) , _WetnessContrastValue);
				float3 lerpResult651_g118090 = lerp( Visual_Albedo127_g118090 , lerpResult768_g118090 , Wetness_Mask866_g118090);
				#ifdef TVE_WETNESS
				float3 staticSwitch577_g118090 = lerpResult651_g118090;
				#else
				float3 staticSwitch577_g118090 = Visual_Albedo127_g118090;
				#endif
				half3 Final_Albedo493_g118090 = staticSwitch577_g118090;
				float3 In_Albedo3_g118092 = Final_Albedo493_g118090;
				float3 In_AlbedoRaw3_g118092 = Out_AlbedoRaw4_g118091;
				half2 Visual_Normal535_g118090 = Out_NormalTS4_g118091;
				float lerpResult877_g118090 = lerp( 1.0 , 0.0 , ( Water_Mask760_g118090 * Water_Mask760_g118090 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch957_g118090 = ( Visual_Normal535_g118090 * lerpResult877_g118090 );
				#else
				float2 staticSwitch957_g118090 = Visual_Normal535_g118090;
				#endif
				float2 temp_cast_35 = (0.0).xx;
				TEXTURE2D(Texture238_g118102) = _WetnessDropsTexRT;
				SamplerState Sampler238_g118102 = sampler_Linear_Repeat_Aniso8;
				float4 appendResult924_g118090 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g118102 = appendResult924_g118090;
				half4 Coords238_g118102 = temp_output_37_0_g118102;
				half3 Model_PositionWO602_g118090 = Out_PositionWO15_g118104;
				float3 temp_output_279_0_g118102 = Model_PositionWO602_g118090;
				half3 WorldPosition238_g118102 = temp_output_279_0_g118102;
				half4 localSamplePlanar2D238_g118102 = SamplePlanar2D( Texture238_g118102 , Sampler238_g118102 , Coords238_g118102 , WorldPosition238_g118102 );
				float4 temp_output_1010_0_g118090 = localSamplePlanar2D238_g118102;
				half2 Rain_DropsNormal919_g118090 = (temp_output_1010_0_g118090).zw;
				float2 temp_output_903_0_g118090 = (Rain_DropsNormal919_g118090*2.0 + -1.0);
				half2 Rain_RingsNormal713_g118090 = (temp_output_1010_0_g118090).xy;
				float2 lerpResult904_g118090 = lerp( temp_output_903_0_g118090 , (Rain_RingsNormal713_g118090*2.0 + -1.0) , ( Water_Mask760_g118090 * Water_Mask760_g118090 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch960_g118090 = lerpResult904_g118090;
				#else
				float2 staticSwitch960_g118090 = temp_output_903_0_g118090;
				#endif
				half2 Rain_Drops1002_g118090 = ( staticSwitch960_g118090 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
				half3 Model_PositionWS823_g118090 = Out_PositionWS15_g118104;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch949_g118090 = ( (Global_AtmoParams516_g118090).w * TVE_IsEnabled );
				#else
				float staticSwitch949_g118090 = 1.0;
				#endif
				half Global_Rain955_g118090 = staticSwitch949_g118090;
				half Rain_Value1067_g118090 = Global_Rain955_g118090;
				half Rain_VertMask1108_g118090 = 1.0;
				half Rain_Mask999_g118090 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g118090 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g118090 * Rain_VertMask1108_g118090 );
				half2 Normal_Planar45_g118101 = ( Rain_Drops1002_g118090 * Rain_Mask999_g118090 * Wetness_ProjMask790_g118090 );
				float2 break71_g118101 = Normal_Planar45_g118101;
				float3 appendResult72_g118101 = (float3(break71_g118101.x , 0.0 , break71_g118101.y));
				half2 Wetness_Normal526_g118090 = (mul( ase_worldToTangent, appendResult72_g118101 )).xy;
				#ifdef TVE_WETNESS_DROPS
				float2 staticSwitch583_g118090 = Wetness_Normal526_g118090;
				#else
				float2 staticSwitch583_g118090 = temp_cast_35;
				#endif
				#ifdef TVE_WETNESS
				float2 staticSwitch774_g118090 = ( staticSwitch957_g118090 + staticSwitch583_g118090 );
				#else
				float2 staticSwitch774_g118090 = Visual_Normal535_g118090;
				#endif
				half2 Final_Normal499_g118090 = staticSwitch774_g118090;
				float2 In_NormalTS3_g118092 = Final_Normal499_g118090;
				float3 In_NormalWS3_g118092 = Out_NormalWS4_g118091;
				float4 break658_g118090 = Visual_Masks536_g118090;
				float temp_output_935_0_g118090 = ( Wetness_Mask866_g118090 * _WetnessSmoothnessValue );
				float lerpResult941_g118090 = lerp( temp_output_935_0_g118090 , 2.0 , Water_Mask760_g118090);
				#ifdef TVE_WETNESS_WATER
				float staticSwitch959_g118090 = lerpResult941_g118090;
				#else
				float staticSwitch959_g118090 = temp_output_935_0_g118090;
				#endif
				float4 appendResult661_g118090 = (float4(break658_g118090.x , break658_g118090.y , break658_g118090.z , saturate( ( break658_g118090.w + staticSwitch959_g118090 ) )));
				#ifdef TVE_WETNESS
				float4 staticSwitch586_g118090 = appendResult661_g118090;
				#else
				float4 staticSwitch586_g118090 = Visual_Masks536_g118090;
				#endif
				half4 Final_Masks482_g118090 = staticSwitch586_g118090;
				float4 In_Shader3_g118092 = Final_Masks482_g118090;
				float4 In_Emissive3_g118092 = Out_Emissive4_g118091;
				float In_Grayscale3_g118092 = Out_Grayscale4_g118091;
				float In_Luminosity3_g118092 = Out_Luminosity4_g118091;
				float In_MultiMask3_g118092 = Out_MultiMask4_g118091;
				float In_AlphaClip3_g118092 = Out_AlphaClip4_g118091;
				float In_AlphaFade3_g118092 = Out_AlphaFade4_g118091;
				float3 In_Translucency3_g118092 = Out_Translucency4_g118091;
				float In_Transmission3_g118092 = Out_Transmission4_g118091;
				float In_Thickness3_g118092 = Out_Thickness4_g118091;
				float In_Diffusion3_g118092 = Out_Diffusion4_g118091;
				Data3_g118092.Dummy = In_Dummy3_g118092;
				Data3_g118092.Albedo = In_Albedo3_g118092;
				Data3_g118092.AlbedoRaw = In_AlbedoRaw3_g118092;
				Data3_g118092.NormalTS = In_NormalTS3_g118092;
				Data3_g118092.NormalWS = In_NormalWS3_g118092;
				Data3_g118092.Shader = In_Shader3_g118092;
				Data3_g118092.Emissive= In_Emissive3_g118092;
				Data3_g118092.MultiMask = In_MultiMask3_g118092;
				Data3_g118092.Grayscale = In_Grayscale3_g118092;
				Data3_g118092.Luminosity = In_Luminosity3_g118092;
				Data3_g118092.AlphaClip = In_AlphaClip3_g118092;
				Data3_g118092.AlphaFade = In_AlphaFade3_g118092;
				Data3_g118092.Translucency = In_Translucency3_g118092;
				Data3_g118092.Transmission = In_Transmission3_g118092;
				Data3_g118092.Thickness = In_Thickness3_g118092;
				Data3_g118092.Diffusion = In_Diffusion3_g118092;
				TVEVisualData Data4_g118128 = Data3_g118092;
				float Out_Dummy4_g118128 = 0;
				float3 Out_Albedo4_g118128 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118128 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118128 = float2( 0,0 );
				float3 Out_NormalWS4_g118128 = float3( 0,0,0 );
				float4 Out_Shader4_g118128 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118128 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118128 = 0;
				float Out_Grayscale4_g118128 = 0;
				float Out_Luminosity4_g118128 = 0;
				float Out_AlphaClip4_g118128 = 0;
				float Out_AlphaFade4_g118128 = 0;
				float3 Out_Translucency4_g118128 = float3( 0,0,0 );
				float Out_Transmission4_g118128 = 0;
				float Out_Thickness4_g118128 = 0;
				float Out_Diffusion4_g118128 = 0;
				Out_Dummy4_g118128 = Data4_g118128.Dummy;
				Out_Albedo4_g118128 = Data4_g118128.Albedo;
				Out_AlbedoRaw4_g118128 = Data4_g118128.AlbedoRaw;
				Out_NormalTS4_g118128 = Data4_g118128.NormalTS;
				Out_NormalWS4_g118128 = Data4_g118128.NormalWS;
				Out_Shader4_g118128 = Data4_g118128.Shader;
				Out_Emissive4_g118128= Data4_g118128.Emissive;
				Out_MultiMask4_g118128 = Data4_g118128.MultiMask;
				Out_Grayscale4_g118128 = Data4_g118128.Grayscale;
				Out_Luminosity4_g118128= Data4_g118128.Luminosity;
				Out_AlphaClip4_g118128 = Data4_g118128.AlphaClip;
				Out_AlphaFade4_g118128 = Data4_g118128.AlphaFade;
				Out_Translucency4_g118128 = Data4_g118128.Translucency;
				Out_Transmission4_g118128 = Data4_g118128.Transmission;
				Out_Thickness4_g118128 = Data4_g118128.Thickness;
				Out_Diffusion4_g118128 = Data4_g118128.Diffusion;
				float3 temp_output_297_0_g118119 = Out_Albedo4_g118128;
				float3 In_Albedo3_g118129 = temp_output_297_0_g118119;
				float3 temp_output_297_23_g118119 = Out_AlbedoRaw4_g118128;
				float3 In_AlbedoRaw3_g118129 = temp_output_297_23_g118119;
				float2 In_NormalTS3_g118129 = Out_NormalTS4_g118128;
				float3 In_NormalWS3_g118129 = Out_NormalWS4_g118128;
				float4 In_Shader3_g118129 = Out_Shader4_g118128;
				float4 temp_cast_36 = (0.0).xxxx;
				half4 Visual_Emissive255_g118119 = Out_Emissive4_g118128;
				half Emissive_MeshMask221_g118119 = 1.0;
				half Emissive_Mask103_g118119 = 1.0;
				float temp_output_279_0_g118119 = ( Emissive_MeshMask221_g118119 * Emissive_Mask103_g118119 );
				float3 appendResult293_g118119 = (float3(temp_output_279_0_g118119 , temp_output_279_0_g118119 , temp_output_279_0_g118119));
				half3 Local_EmissiveColor278_g118119 = appendResult293_g118119;
				float3 temp_cast_37 = (1.0).xxx;
				TVEGlobalData Data15_g118120 = Data204_g117810;
				float Out_Dummy15_g118120 = 0;
				float4 Out_CoatParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118120 = float4( 0,0,0,0 );
				Out_Dummy15_g118120 = Data15_g118120.Dummy;
				Out_CoatParams15_g118120 = Data15_g118120.CoatParams;
				Out_PaintParams15_g118120 = Data15_g118120.PaintParams;
				Out_GlowParams15_g118120 = Data15_g118120.GlowParams;
				Out_AtmoParams15_g118120= Data15_g118120.AtmoParams;
				Out_FadeParams15_g118120= Data15_g118120.FadeParams;
				Out_FormParams15_g118120 = Data15_g118120.FormParams;
				Out_LandParams15_g118120 = Data15_g118120.LandParams;
				Out_WindParams15_g118120 = Data15_g118120.WindParams;
				Out_PushParams15_g118120 = Data15_g118120.PushParams;
				half4 Global_GlowParams179_g118119 = Out_GlowParams15_g118120;
				float3 lerpResult299_g118119 = lerp( float3( 1,1,1 ) , (Global_GlowParams179_g118119).xyz , TVE_IsEnabled);
				#ifdef TVE_EMISSIVE_ELEMENT
				float3 staticSwitch228_g118119 = lerpResult299_g118119;
				#else
				float3 staticSwitch228_g118119 = temp_cast_37;
				#endif
				half3 Emissive_GlobalMask248_g118119 = staticSwitch228_g118119;
				half3 Visual_AlbedoRaw306_g118119 = temp_output_297_23_g118119;
				float3 lerpResult307_g118119 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g118119 , _EmissiveColorMode);
				half3 Local_EmissiveValue88_g118119 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g118119 * lerpResult307_g118119 );
				half3 Emissive_Blend260_g118119 = ( ( (Visual_Emissive255_g118119).xyz * Local_EmissiveColor278_g118119 ) * Local_EmissiveValue88_g118119 );
				float3 temp_output_3_0_g118133 = Emissive_Blend260_g118119;
				float temp_output_15_0_g118133 = _emissive_power_value;
				float3 hdEmission22_g118133 = ASEGetEmissionHDRColor(temp_output_3_0_g118133,temp_output_15_0_g118133,_EmissiveExposureValue,GetInverseCurrentExposureMultiplier());
				half Local_EmissiveMask294_g118119 = temp_output_279_0_g118119;
				float4 appendResult295_g118119 = (float4(hdEmission22_g118133 , Local_EmissiveMask294_g118119));
				#ifdef TVE_EMISSIVE
				float4 staticSwitch129_g118119 = appendResult295_g118119;
				#else
				float4 staticSwitch129_g118119 = temp_cast_36;
				#endif
				half4 Final_Emissive184_g118119 = staticSwitch129_g118119;
				float4 In_Emissive3_g118129 = Final_Emissive184_g118119;
				float In_Grayscale3_g118129 = Out_Grayscale4_g118128;
				float In_Luminosity3_g118129 = Out_Luminosity4_g118128;
				float temp_output_297_11_g118119 = Out_MultiMask4_g118128;
				float In_MultiMask3_g118129 = temp_output_297_11_g118119;
				float In_AlphaClip3_g118129 = Out_AlphaClip4_g118128;
				float In_AlphaFade3_g118129 = Out_AlphaFade4_g118128;
				float3 In_Translucency3_g118129 = Out_Translucency4_g118128;
				float In_Transmission3_g118129 = Out_Transmission4_g118128;
				float In_Thickness3_g118129 = Out_Thickness4_g118128;
				float In_Diffusion3_g118129 = Out_Diffusion4_g118128;
				Data3_g118129.Dummy = In_Dummy3_g118129;
				Data3_g118129.Albedo = In_Albedo3_g118129;
				Data3_g118129.AlbedoRaw = In_AlbedoRaw3_g118129;
				Data3_g118129.NormalTS = In_NormalTS3_g118129;
				Data3_g118129.NormalWS = In_NormalWS3_g118129;
				Data3_g118129.Shader = In_Shader3_g118129;
				Data3_g118129.Emissive= In_Emissive3_g118129;
				Data3_g118129.MultiMask = In_MultiMask3_g118129;
				Data3_g118129.Grayscale = In_Grayscale3_g118129;
				Data3_g118129.Luminosity = In_Luminosity3_g118129;
				Data3_g118129.AlphaClip = In_AlphaClip3_g118129;
				Data3_g118129.AlphaFade = In_AlphaFade3_g118129;
				Data3_g118129.Translucency = In_Translucency3_g118129;
				Data3_g118129.Transmission = In_Transmission3_g118129;
				Data3_g118129.Thickness = In_Thickness3_g118129;
				Data3_g118129.Diffusion = In_Diffusion3_g118129;
				TVEVisualData Data4_g118145 = Data3_g118129;
				float Out_Dummy4_g118145 = 0;
				float3 Out_Albedo4_g118145 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118145 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118145 = float2( 0,0 );
				float3 Out_NormalWS4_g118145 = float3( 0,0,0 );
				float4 Out_Shader4_g118145 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118145 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118145 = 0;
				float Out_Grayscale4_g118145 = 0;
				float Out_Luminosity4_g118145 = 0;
				float Out_AlphaClip4_g118145 = 0;
				float Out_AlphaFade4_g118145 = 0;
				float3 Out_Translucency4_g118145 = float3( 0,0,0 );
				float Out_Transmission4_g118145 = 0;
				float Out_Thickness4_g118145 = 0;
				float Out_Diffusion4_g118145 = 0;
				Out_Dummy4_g118145 = Data4_g118145.Dummy;
				Out_Albedo4_g118145 = Data4_g118145.Albedo;
				Out_AlbedoRaw4_g118145 = Data4_g118145.AlbedoRaw;
				Out_NormalTS4_g118145 = Data4_g118145.NormalTS;
				Out_NormalWS4_g118145 = Data4_g118145.NormalWS;
				Out_Shader4_g118145 = Data4_g118145.Shader;
				Out_Emissive4_g118145= Data4_g118145.Emissive;
				Out_MultiMask4_g118145 = Data4_g118145.MultiMask;
				Out_Grayscale4_g118145 = Data4_g118145.Grayscale;
				Out_Luminosity4_g118145= Data4_g118145.Luminosity;
				Out_AlphaClip4_g118145 = Data4_g118145.AlphaClip;
				Out_AlphaFade4_g118145 = Data4_g118145.AlphaFade;
				Out_Translucency4_g118145 = Data4_g118145.Translucency;
				Out_Transmission4_g118145 = Data4_g118145.Transmission;
				Out_Thickness4_g118145 = Data4_g118145.Thickness;
				Out_Diffusion4_g118145 = Data4_g118145.Diffusion;
				float3 In_Albedo3_g118135 = Out_Albedo4_g118145;
				float3 In_AlbedoRaw3_g118135 = Out_AlbedoRaw4_g118145;
				float2 In_NormalTS3_g118135 = Out_NormalTS4_g118145;
				float3 In_NormalWS3_g118135 = Out_NormalWS4_g118145;
				float4 In_Shader3_g118135 = Out_Shader4_g118145;
				float4 In_Emissive3_g118135 = Out_Emissive4_g118145;
				float In_Grayscale3_g118135 = Out_Grayscale4_g118145;
				float In_Luminosity3_g118135 = Out_Luminosity4_g118145;
				float temp_output_836_11_g118134 = Out_MultiMask4_g118145;
				float In_MultiMask3_g118135 = temp_output_836_11_g118134;
				half Visual_AlphaClip667_g118134 = Out_AlphaClip4_g118145;
				half Input_True57_g118142 = Visual_AlphaClip667_g118134;
				half True36_g118142 = Input_True57_g118142;
				TVEGlobalData Data15_g118144 = Data204_g117810;
				float Out_Dummy15_g118144 = 0;
				float4 Out_CoatParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118144 = float4( 0,0,0,0 );
				Out_Dummy15_g118144 = Data15_g118144.Dummy;
				Out_CoatParams15_g118144 = Data15_g118144.CoatParams;
				Out_PaintParams15_g118144 = Data15_g118144.PaintParams;
				Out_GlowParams15_g118144 = Data15_g118144.GlowParams;
				Out_AtmoParams15_g118144= Data15_g118144.AtmoParams;
				Out_FadeParams15_g118144= Data15_g118144.FadeParams;
				Out_FormParams15_g118144 = Data15_g118144.FormParams;
				Out_LandParams15_g118144 = Data15_g118144.LandParams;
				Out_WindParams15_g118144 = Data15_g118144.WindParams;
				Out_PushParams15_g118144 = Data15_g118144.PushParams;
				half4 Global_FadeParams516_g118134 = Out_FadeParams15_g118144;
				#ifdef TVE_CUTOUT_ELEMENT
				float staticSwitch663_g118134 = saturate( (Global_FadeParams516_g118134).w );
				#else
				float staticSwitch663_g118134 = 1.0;
				#endif
				half Local_GlobalMask429_g118134 = staticSwitch663_g118134;
				half Local_AlphaMask814_g118134 = 1.0;
				half Local_NoiseMask678_g118134 = 1.0;
				half Local_VertMask766_g118134 = 1.0;
				half Local_MultiMask685_g118134 = 1.0;
				float lerpResult728_g118134 = lerp( Visual_AlphaClip667_g118134 , min( Visual_AlphaClip667_g118134 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g118134 ) - ( Local_AlphaMask814_g118134 * Local_NoiseMask678_g118134 * Local_VertMask766_g118134 ) ) ) ) , Local_MultiMask685_g118134);
				half Local_AlphaClip784_g118134 = lerpResult728_g118134;
				half Input_False58_g118142 = Local_AlphaClip784_g118134;
				half False36_g118142 = Input_False58_g118142;
				half localShadowPassCheck36_g118142 = ShadowPassCheck36_g118142( True36_g118142 , False36_g118142 );
				#ifdef TVE_CUTOUT_SHADOW
				float staticSwitch791_g118134 = Local_AlphaClip784_g118134;
				#else
				float staticSwitch791_g118134 = localShadowPassCheck36_g118142;
				#endif
				float temp_output_6_0_g118143 = staticSwitch791_g118134;
				#ifdef TVE_REGISTER
				float staticSwitch14_g118143 = ( temp_output_6_0_g118143 + ( _CutoutShadowMode * 0.0 ) );
				#else
				float staticSwitch14_g118143 = temp_output_6_0_g118143;
				#endif
				float temp_output_798_0_g118134 = staticSwitch14_g118143;
				#ifdef TVE_CUTOUT
				float staticSwitch577_g118134 = temp_output_798_0_g118134;
				#else
				float staticSwitch577_g118134 = Visual_AlphaClip667_g118134;
				#endif
				half Final_AlphaClip795_g118134 = staticSwitch577_g118134;
				float In_AlphaClip3_g118135 = Final_AlphaClip795_g118134;
				float In_AlphaFade3_g118135 = Out_AlphaFade4_g118145;
				float3 In_Translucency3_g118135 = Out_Translucency4_g118145;
				float In_Transmission3_g118135 = Out_Transmission4_g118145;
				float In_Thickness3_g118135 = Out_Thickness4_g118145;
				float In_Diffusion3_g118135 = Out_Diffusion4_g118145;
				Data3_g118135.Dummy = In_Dummy3_g118135;
				Data3_g118135.Albedo = In_Albedo3_g118135;
				Data3_g118135.AlbedoRaw = In_AlbedoRaw3_g118135;
				Data3_g118135.NormalTS = In_NormalTS3_g118135;
				Data3_g118135.NormalWS = In_NormalWS3_g118135;
				Data3_g118135.Shader = In_Shader3_g118135;
				Data3_g118135.Emissive= In_Emissive3_g118135;
				Data3_g118135.MultiMask = In_MultiMask3_g118135;
				Data3_g118135.Grayscale = In_Grayscale3_g118135;
				Data3_g118135.Luminosity = In_Luminosity3_g118135;
				Data3_g118135.AlphaClip = In_AlphaClip3_g118135;
				Data3_g118135.AlphaFade = In_AlphaFade3_g118135;
				Data3_g118135.Translucency = In_Translucency3_g118135;
				Data3_g118135.Transmission = In_Transmission3_g118135;
				Data3_g118135.Thickness = In_Thickness3_g118135;
				Data3_g118135.Diffusion = In_Diffusion3_g118135;
				TVEVisualData Data4_g118158 = Data3_g118135;
				float Out_Dummy4_g118158 = 0;
				float3 Out_Albedo4_g118158 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118158 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118158 = float2( 0,0 );
				float3 Out_NormalWS4_g118158 = float3( 0,0,0 );
				float4 Out_Shader4_g118158 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118158 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118158 = 0;
				float Out_Grayscale4_g118158 = 0;
				float Out_Luminosity4_g118158 = 0;
				float Out_AlphaClip4_g118158 = 0;
				float Out_AlphaFade4_g118158 = 0;
				float3 Out_Translucency4_g118158 = float3( 0,0,0 );
				float Out_Transmission4_g118158 = 0;
				float Out_Thickness4_g118158 = 0;
				float Out_Diffusion4_g118158 = 0;
				Out_Dummy4_g118158 = Data4_g118158.Dummy;
				Out_Albedo4_g118158 = Data4_g118158.Albedo;
				Out_AlbedoRaw4_g118158 = Data4_g118158.AlbedoRaw;
				Out_NormalTS4_g118158 = Data4_g118158.NormalTS;
				Out_NormalWS4_g118158 = Data4_g118158.NormalWS;
				Out_Shader4_g118158 = Data4_g118158.Shader;
				Out_Emissive4_g118158= Data4_g118158.Emissive;
				Out_MultiMask4_g118158 = Data4_g118158.MultiMask;
				Out_Grayscale4_g118158 = Data4_g118158.Grayscale;
				Out_Luminosity4_g118158= Data4_g118158.Luminosity;
				Out_AlphaClip4_g118158 = Data4_g118158.AlphaClip;
				Out_AlphaFade4_g118158 = Data4_g118158.AlphaFade;
				Out_Translucency4_g118158 = Data4_g118158.Translucency;
				Out_Transmission4_g118158 = Data4_g118158.Transmission;
				Out_Thickness4_g118158 = Data4_g118158.Thickness;
				Out_Diffusion4_g118158 = Data4_g118158.Diffusion;
				half3 Input_Albedo24_g118157 = Out_Albedo4_g118158;
				#ifdef UNITY_COLORSPACE_GAMMA
				float4 staticSwitch22_g118157 = half4(0.2209163,0.2209163,0.2209163,0.7790837);
				#else
				float4 staticSwitch22_g118157 = half4(0.04,0.04,0.04,0.96);
				#endif
				half4 ColorSpaceDielectricSpec23_g118157 = staticSwitch22_g118157;
				float4 break24_g118154 = Out_Shader4_g118158;
				half Metallic95_g118154 = break24_g118154.x;
				half Input_Metallic25_g118157 = Metallic95_g118154;
				half OneMinusReflectivity31_g118157 = ( (ColorSpaceDielectricSpec23_g118157).w - ( (ColorSpaceDielectricSpec23_g118157).w * Input_Metallic25_g118157 ) );
				
				float3 appendResult23_g118154 = (float3(Out_NormalTS4_g118158 , 1.0));
				
				float3 lerpResult28_g118157 = lerp( (ColorSpaceDielectricSpec23_g118157).xyz , Input_Albedo24_g118157 , Input_Metallic25_g118157);
				half Render_Specualr110_g118154 = _RenderSpecular;
				
				float localCustomAlphaClip19_g118160 = ( 0.0 );
				float temp_output_3_0_g118160 = Out_AlphaClip4_g118158;
				float Alpha19_g118160 = temp_output_3_0_g118160;
				float temp_output_15_0_g118160 = 0.5;
				float Treshold19_g118160 = temp_output_15_0_g118160;
				#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_DITHER)
				#if defined ( TVE_PIPELINE_HD)
				#if !defined(SHADERPASS_FORWARD_BYPASS_ALPHA_TEST) && !defined(SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST)
				clip(Alpha19_g118160 - Treshold19_g118160);
				#endif
				#else
				clip(Alpha19_g118160 - Treshold19_g118160);
				#endif
				#endif
				
				surfaceDescription.BaseColor = ( Input_Albedo24_g118157 * OneMinusReflectivity31_g118157 );
				surfaceDescription.Normal = appendResult23_g118154;
				surfaceDescription.BentNormal = float3( 0, 0, 1 );
				surfaceDescription.CoatMask = 0;
				surfaceDescription.Metallic = 0;

				#ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
				surfaceDescription.Specular = ( lerpResult28_g118157 * Render_Specualr110_g118154 );
				#endif

				surfaceDescription.Emission = (Out_Emissive4_g118158).xyz;
				surfaceDescription.Smoothness = break24_g118154.w;
				surfaceDescription.Occlusion = break24_g118154.y;
				surfaceDescription.Alpha = Alpha19_g118160;

				#ifdef _ALPHATEST_ON
				surfaceDescription.AlphaClipThreshold = _AlphaCutoff;
				#endif

				#ifdef _SPECULAR_OCCLUSION_CUSTOM
				surfaceDescription.SpecularOcclusion = 0;
				#endif

				#ifdef _ENABLE_GEOMETRIC_SPECULAR_AA
				surfaceDescription.SpecularAAScreenSpaceVariance = 0;
				surfaceDescription.SpecularAAThreshold = 0;
				#endif

				#if defined(_HAS_REFRACTION) || defined(_MATERIAL_FEATURE_TRANSMISSION)
				surfaceDescription.Thickness = 1;
				#endif

				#ifdef _HAS_REFRACTION
				surfaceDescription.RefractionIndex = 1;
				surfaceDescription.RefractionColor = float3( 1, 1, 1 );
				surfaceDescription.RefractionDistance = 0;
				#endif

				#ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
				surfaceDescription.SubsurfaceMask = 1;
				#endif

				#ifdef _MATERIAL_FEATURE_TRANSMISSION
				surfaceDescription.TransmissionMask = 1;
				#endif

				#if defined( _MATERIAL_FEATURE_SUBSURFACE_SCATTERING ) || defined( _MATERIAL_FEATURE_TRANSMISSION )
				surfaceDescription.DiffusionProfile = 0;
				#endif

				#ifdef _MATERIAL_FEATURE_ANISOTROPY
				surfaceDescription.Anisotropy = 1;
				surfaceDescription.Tangent = float3( 1, 0, 0 );
				#endif

				#ifdef _MATERIAL_FEATURE_IRIDESCENCE
				surfaceDescription.IridescenceMask = 0;
				surfaceDescription.IridescenceThickness = 0;
				#endif

				#ifdef ASE_BAKEDGI
				surfaceDescription.BakedGI = 0;
				#endif

				#ifdef ASE_BAKEDBACKGI
				surfaceDescription.BakedBackGI = 0;
				#endif

				#ifdef _DEPTHOFFSET_ON
				surfaceDescription.DepthOffset = 0;
				#endif

				#ifdef UNITY_VIRTUAL_TEXTURING
				surfaceDescription.VTPackedFeedback = float4(1.0f,1.0f,1.0f,1.0f);
				#endif

				SurfaceData surfaceData;
				BuiltinData builtinData;
				GetSurfaceAndBuiltinData(surfaceDescription,input, V, posInput, surfaceData, builtinData);

				BSDFData bsdfData = ConvertSurfaceDataToBSDFData(input.positionSS.xy, surfaceData);

				PreLightData preLightData = GetPreLightData(V, posInput, bsdfData);

				outColor = float4(0.0, 0.0, 0.0, 0.0);

				#ifdef DEBUG_DISPLAY
				#ifdef OUTPUT_SPLIT_LIGHTING
					outDiffuseLighting = float4(0, 0, 0, 1);
					ENCODE_INTO_SSSBUFFER(surfaceData, posInput.positionSS, outSSSBuffer);
				#endif

			    bool viewMaterial = GetMaterialDebugColor(outColor, input, builtinData, posInput, surfaceData, bsdfData);

				if (!viewMaterial)
				{
					if (_DebugFullScreenMode == FULLSCREENDEBUGMODE_VALIDATE_DIFFUSE_COLOR || _DebugFullScreenMode == FULLSCREENDEBUGMODE_VALIDATE_SPECULAR_COLOR)
					{
						float3 result = float3(0.0, 0.0, 0.0);
						GetPBRValidatorDebug(surfaceData, result);
						outColor = float4(result, 1.0f);
					}
					else if (_DebugFullScreenMode == FULLSCREENDEBUGMODE_TRANSPARENCY_OVERDRAW)
					{
						float4 result = _DebugTransparencyOverdrawWeight * float4(TRANSPARENCY_OVERDRAW_COST, TRANSPARENCY_OVERDRAW_COST, TRANSPARENCY_OVERDRAW_COST, TRANSPARENCY_OVERDRAW_A);
						outColor = result;
					}
					else
                #endif
					{
                #ifdef _SURFACE_TYPE_TRANSPARENT
						uint featureFlags = LIGHT_FEATURE_MASK_FLAGS_TRANSPARENT;
                #else
						uint featureFlags = LIGHT_FEATURE_MASK_FLAGS_OPAQUE;
                #endif
						LightLoopOutput lightLoopOutput;
						LightLoop(V, posInput, preLightData, bsdfData, builtinData, featureFlags, lightLoopOutput);

						// Alias
						float3 diffuseLighting = lightLoopOutput.diffuseLighting;
						float3 specularLighting = lightLoopOutput.specularLighting;

						diffuseLighting *= GetCurrentExposureMultiplier();
						specularLighting *= GetCurrentExposureMultiplier();

                #ifdef OUTPUT_SPLIT_LIGHTING
						if (_EnableSubsurfaceScattering != 0 && ShouldOutputSplitLighting(bsdfData))
						{
							outColor = float4(specularLighting, 1.0);
							outDiffuseLighting = float4(TagLightingForSSS(diffuseLighting), 1.0);
						}
						else
						{
							outColor = float4(diffuseLighting + specularLighting, 1.0);
							outDiffuseLighting = float4(0, 0, 0, 1);
						}
						ENCODE_INTO_SSSBUFFER(surfaceData, posInput.positionSS, outSSSBuffer);
                #else
						outColor = ApplyBlendMode(diffuseLighting, specularLighting, builtinData.opacity);

						#ifdef _ENABLE_FOG_ON_TRANSPARENT
						outColor = EvaluateAtmosphericScattering(posInput, V, outColor);
                        #endif

                        #ifdef _TRANSPARENT_REFRACTIVE_SORT
                        ComputeRefractionSplitColor(posInput, outColor, outBeforeRefractionColor, outBeforeRefractionAlpha);
                        #endif
                #endif

				#ifdef _WRITE_TRANSPARENT_MOTION_VECTOR
						float4 VPASSpositionCS = float4(packedInput.vpassPositionCS.xy, 0.0, packedInput.vpassPositionCS.z);
						float4 VPASSpreviousPositionCS = float4(packedInput.vpassPreviousPositionCS.xy, 0.0, packedInput.vpassPreviousPositionCS.z);
						bool forceNoMotion = any(unity_MotionVectorsParams.yw == 0.0);
                #if defined(HAVE_VFX_MODIFICATION) && !VFX_FEATURE_MOTION_VECTORS
                        forceNoMotion = true;
                #endif
				        if (!forceNoMotion)
						{
							float2 motionVec = CalculateMotionVector(VPASSpositionCS, VPASSpreviousPositionCS);
							EncodeMotionVector(motionVec * 0.5, outMotionVec);
							outMotionVec.zw = 1.0;
						}
				#endif
				}

				#ifdef DEBUG_DISPLAY
				}
				#endif

				#ifdef _DEPTHOFFSET_ON
				outputDepth = posInput.deviceDepth;
				#endif

                #ifdef UNITY_VIRTUAL_TEXTURING
				    float vtAlphaValue = builtinData.opacity;
                    #if defined(HAS_REFRACTION) && HAS_REFRACTION
					vtAlphaValue = 1.0f - bsdfData.transmittanceMask;
                #endif
				outVTFeedback = PackVTFeedbackWithAlpha(builtinData.vtPackedFeedback, input.positionSS.xy, vtAlphaValue);
				outVTFeedback.rgb *= outVTFeedback.a; // premuliplied alpha
                #endif

			}
			ENDHLSL
		}

		UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
	UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"

		Pass
        {
			
            Name "ScenePickingPass"
            Tags { "LightMode"="Picking" }

            Cull [_CullMode]

            HLSLPROGRAM
			#define _ENERGY_CONSERVING_SPECULAR 1
			#define SUPPORT_BLENDMODE_PRESERVE_SPECULAR_LIGHTING
			#pragma shader_feature_local_fragment _ _DISABLE_DECALS
			#define _SPECULAR_OCCLUSION_FROM_AO 1
			#define ASE_ABSOLUTE_VERTEX_POS 1
			#define _MATERIAL_FEATURE_SPECULAR_COLOR 1
			#define _AMBIENT_OCCLUSION 1
			#define HAVE_MESH_MODIFICATION
			#define ASE_SRP_VERSION 170003
			#define ASE_USING_SAMPLING_MACROS 1

			#pragma editor_sync_compilation
            #pragma multi_compile _ DOTS_INSTANCING_ON

            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
            #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC _TRANSPARENT_REFRACTIVE_SORT
            #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT

			#pragma vertex Vert
			#pragma fragment Frag

			#define SHADERPASS SHADERPASS_DEPTH_ONLY
			#define SCENEPICKINGPASS 1

			#define ATTRIBUTES_NEED_NORMAL
			#define ATTRIBUTES_NEED_TANGENT
			#define VARYINGS_NEED_TANGENT_TO_WORLD

            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/DebugMipmapStreamingMacros.hlsl"
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl"

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"

            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
                #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif

            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
                #define RAYTRACING_SHADER_GRAPH_LOW
            #endif

            #ifndef SHADER_UNLIT
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif

			#if defined(_DOUBLESIDED_ON) && !defined(ASE_NEED_CULLFACE)
			    #define ASE_NEED_CULLFACE 1
			#endif

            #if _MATERIAL_FEATURE_COLORED_TRANSMISSION
            #undef _MATERIAL_FEATURE_CLEAR_COAT
            #endif

		    #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
			#define OUTPUT_SPLIT_LIGHTING
		    #endif

            #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
            #endif

            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif

            #if SHADERPASS == SHADERPASS_MOTION_VECTORS && defined(WRITE_DECAL_BUFFER_AND_RENDERING_LAYER)
                #define WRITE_DECAL_BUFFER
            #endif

            #ifndef DEBUG_DISPLAY
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif

            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            #if (defined(_TRANSPARENT_WRITES_MOTION_VEC) || defined(_TRANSPARENT_REFRACTIVE_SORT)) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
	
            CBUFFER_START( UnityPerMaterial )
			half4 _TerrainShaderMax13;
			half4 _TerrainCoord8;
			half4 _TerrainShaderMin8;
			half4 _TerrainShaderMax8;
			half4 _TerrainCoord9;
			half4 _TerrainShaderMin9;
			half4 _TerrainShaderMax9;
			half4 _TerrainCoord10;
			half4 _TerrainShaderMax7;
			half4 _TerrainShaderMin10;
			half4 _TerrainCoord11;
			half4 _TerrainShaderMin11;
			half4 _TerrainShaderMax11;
			half4 _TerrainCoord12;
			half4 _TerrainShaderMin12;
			half4 _TerrainShaderMax12;
			half4 _TerrainCoord13;
			half4 _TerrainShaderMax10;
			half4 _TerrainShaderMin13;
			half4 _TerrainShaderMin7;
			half4 _TerrainShaderMax6;
			half4 _TerrainShaderMin1;
			half4 _TerrainShaderMax1;
			half4 _TerrainCoord2;
			half4 _TerrainShaderMin2;
			half4 _TerrainShaderMax2;
			half4 _TerrainCoord3;
			half4 _TerrainShaderMin3;
			half4 _TerrainCoord7;
			half4 _TerrainShaderMax3;
			half4 _TerrainShaderMin4;
			half4 _TerrainShaderMax4;
			half4 _TerrainCoord5;
			half4 _TerrainShaderMin5;
			half4 _TerrainShaderMax5;
			half4 _TerrainCoord6;
			half4 _TerrainShaderMin6;
			half4 _TerrainCoord4;
			half4 _TerrainCoord1;
			half4 _TerrainParams15;
			half4 _TerrainShaderMin14;
			half4 _TerrainColor13;
			half4 _TerrainColor14;
			half4 _TerrainColor15;
			half4 _TerrainColor16;
			half4 _TerrainColor;
			half4 _TerrainParams1;
			half4 _TerrainParams2;
			half4 _TerrainColor12;
			half4 _TerrainParams3;
			half4 _TerrainParams5;
			half4 _TerrainParams6;
			half4 _TerrainParams7;
			half4 _TerrainParams8;
			half4 _TerrainParams9;
			half4 _TerrainParams10;
			half4 _TerrainParams11;
			half4 _TerrainParams4;
			half4 _TerrainCoord14;
			half4 _TerrainColor11;
			half4 _TerrainColor9;
			half4 _TerrainShaderMax14;
			half4 _TerrainCoord15;
			half4 _TerrainShaderMin15;
			half4 _TerrainShaderMax15;
			half4 _TerrainCoord16;
			half4 _TerrainShaderMin16;
			half4 _TerrainShaderMax16;
			half4 _TerrainColor10;
			half4 _TerrainParams14;
			half4 _TerrainColor2;
			half4 _TerrainColor3;
			half4 _TerrainColor4;
			half4 _TerrainColor5;
			half4 _TerrainColor6;
			half4 _TerrainColor7;
			half4 _TerrainColor8;
			half4 _TerrainColor1;
			half4 _TerrainParams12;
			float4 _TerrainControlTex1_TexelSize;
			half4 _TerrainPosition;
			float4 _TintingColor;
			half4 _TintingLumaRemap;
			half4 _TintingBlendRemap;
			float4 _DrynessColor;
			half4 _DrynessLumaRemap;
			half4 _DrynessBlendRemap;
			half4 _TerrainSize;
			half4 _OverlayColor;
			half4 _overlay_coord_value;
			half4 _OverlayCoordValue;
			half4 _OverlayGlitterColor;
			half4 _OverlayProjRemap;
			half4 _OverlayLumaRemap;
			half4 _OverlayBlendRemap1;
			half4 _WetnessWaterColor;
			half4 _WetnessWaterBlendRemap;
			half4 _EmissiveColor;
			half4 _TerrainSpecular16;
			half4 _TerrainSpecular15;
			half4 _object_phase_mode;
			half4 _TerrainSpecular13;
			half4 _TerrainParams16;
			half4 _TerrainSpecular1;
			half4 _TerrainSpecular14;
			half4 _TerrainSpecular2;
			half4 _TerrainSpecular3;
			half4 _TerrainSpecular4;
			half4 _TerrainSpecular5;
			half4 _TerrainSpecular6;
			half4 _TerrainSpecular7;
			half4 _TerrainSpecular8;
			half4 _TerrainParams13;
			half4 _TerrainSpecular10;
			half4 _TerrainSpecular12;
			half4 _TerrainSpecular11;
			half4 _TerrainSpecular9;
			half _DrynessIntensityValue;
			half _OverlaySubsurfaceValue;
			half _TerrainMetallicValue;
			half _WetnessWaterIntensityValue;
			half _WetnessIntensityValue;
			half _WetnessWaterBaseValue;
			half _TerrainNormalValue;
			half _WetnessContrastValue;
			half _WetnessDropsTillingValue;
			half _WetnessDropsNormalValue;
			half _WetnessDropsDistValue;
			half _WetnessSmoothnessValue;
			half _EmissiveIntensityValue;
			half _TintingElementMode;
			half _EmissiveColorMode;
			float _emissive_power_value;
			half _EmissiveExposureValue;
			half _CutoutIntensityValue;
			half _WetnessDropsIntensityValue;
			half _OverlaySmoothnessValue;
			half _OverlayLumaValue;
			half _TerrainOcclusionValue;
			half _DrynessMultiValue;
			half _DrynessShiftValue;
			half _DrynessLumaValue;
			half _DrynessGrayValue;
			half _DrynessSmoothnessValue;
			half _DrynessSubsurfaceValue;
			half _TintingLumaValue;
			half _OverlaySampleMode;
			half _OverlayNormalValue;
			half _OverlayCoordMode;
			half _OverlayTextureMode;
			half _OverlayGlitterIntensityValue;
			half _TintingIntensityValue;
			half _OverlayGlitterDistValue;
			half _OverlayIntensityValue;
			half _TintingGrayValue;
			half _OverlayProjValue;
			half _TerrainSmoothnessValue;
			half _TintingMultiValue;
			half _OverlayGlitterTillingValue;
			half _TerrainLayersMode;
			half _CutoutShadowMode;
			half _RenderEnd;
			half _IsTVEShader;
			half _IsCustomShader;
			half _IsShared;
			half _HasDefaultTextures;
			half _IsCollected;
			half _IsConverted;
			half _IsIdentifier;
			half _RenderDecals;
			half _RenderSSR;
			half _RenderClip;
			half _IsVersion;
			half _RenderShadow;
			half _RenderFilter;
			half _LandscapeCategory;
			half _RenderCategory;
			half _IsStandardShader;
			half _IsTerrainShader;
			half _TerrainTextureMode;
			half _TerrainSampleMode1;
			half _TerrainSampleMode2;
			half _TerrainSampleMode3;
			half _TerrainSampleMode4;
			half _TerrainSampleMode5;
			half _TerrainSampleMode6;
			half _TerrainSampleMode7;
			half _LandscapeEnd;
			half _TerrainSampleMode8;
			half _TerrainSampleMode10;
			half _TerrainSampleMode11;
			half _TerrainSampleMode12;
			half _TerrainSampleMode13;
			half _TerrainSampleMode14;
			half _TerrainSampleMode15;
			half _TerrainSampleMode16;
			half _TerrainSampleMode9;
			half _LandscapeInfo;
			half _GlobalCategory;
			half _GlobalEnd;
			half _OverlayCategory;
			half _OverlayEnd;
			half _OverlaySpace;
			half _OverlayElementMode;
			half _OverlayBakeInfo;
			half _DrynessCategory;
			half _DrynessEnd;
			half _WetnessBakeInfo;
			half _DrynessSpace;
			half _DrynessBakeInfo;
			half _TintingCategory;
			half _TintingEnd;
			half _TintingSpace;
			half _TintingBakeInfo;
			half _CategoryTerrain;
			half _EndTerrain;
			half _DrynessElementMode;
			half _TerrainHeightBlendValue;
			half _WetnessElementMode;
			half _WetnessCategory;
			half _GlobalPaintLayerValue;
			half _GlobalGlowLayerValue;
			half _GlobalAtmoLayerValue;
			half _GlobalFadeLayerValue;
			half _GlobalLandLayerValue;
			half _LandscapeHeightValue;
			half _CutoutCategory;
			half _WetnessEnd;
			half _CutoutEnd;
			half _CutoutBakeInfo;
			half _EmissiveCategory;
			half _EmissiveEnd;
			half _EmissivePowerMode;
			half _EmissivePowerValue;
			half _EmissiveElementMode;
			half _EmissiveFlagMode;
			half _CutoutElementMode;
			half _RenderSpecular;
			float4 _EmissionColor;
			float _AlphaCutoff;
			float _RenderQueueType;
			#ifdef _ADD_PRECOMPUTED_VELOCITY
			    float _AddPrecomputedVelocity;
			#endif
			float _StencilRef;
			float _StencilWriteMask;
			float _StencilRefDepth;
			float _StencilWriteMaskDepth;
			float _StencilRefMV;
			float _StencilWriteMaskMV;
			float _StencilRefDistortionVec;
			float _StencilWriteMaskDistortionVec;
			float _StencilWriteMaskGBuffer;
			float _StencilRefGBuffer;
			float _ZTestGBuffer;
			float _RequireSplitLighting;
			float _ReceivesSSR;
			float _SurfaceType;
			float _BlendMode;
            #ifdef SUPPORT_BLENDMODE_PRESERVE_SPECULAR_LIGHTING
			    float _EnableBlendModePreserveSpecularLighting;
            #endif
			float _SrcBlend;
			float _DstBlend;
			float _DstBlend2;
			float _AlphaSrcBlend;
			float _AlphaDstBlend;
			float _ZWrite;
			float _TransparentZWrite;
			float _CullMode;
			float _TransparentSortPriority;
			float _EnableFogOnTransparent;
			float _CullModeForward;
			float _TransparentCullMode;
			float _ZTestDepthEqualForOpaque;
			float _ZTestTransparent;
			float _TransparentBackfaceEnable;
			float _AlphaCutoffEnable;
			float _UseShadowThreshold;
			float _DoubleSidedEnable;
			float _DoubleSidedNormalMode;
			float4 _DoubleSidedConstants;
			#ifdef ASE_TESSELLATION
			    float _TessPhongStrength;
			    float _TessValue;
			    float _TessMin;
			    float _TessMax;
			    float _TessEdgeLength;
			    float _TessMaxDisp;
			#endif
			UNITY_TEXTURE_STREAMING_DEBUG_VARS;
			CBUFFER_END

            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif

            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif

			float3 TVE_WorldOrigin;
			float4x4 unity_CameraProjection;
			float4x4 unity_CameraInvProjection;
			float4x4 unity_WorldToCamera;
			float4x4 unity_CameraToWorld;
			half4 TVE_CoatParams;
			float TVE_PaintLayers[10];
			TEXTURE2D_ARRAY(TVE_PaintBaseTex);
			half4 TVE_RenderBaseCoords;
			SAMPLER(sampler_Linear_Clamp);
			TEXTURE2D_ARRAY(TVE_PaintNearTex);
			half4 TVE_RenderNearCoords;
			SAMPLER(sampler_Linear_Repeat);
			float4 TVE_RenderNearPositionR;
			half TVE_RenderNearFadeValue;
			half4 TVE_PaintParams;
			float TVE_GlowLayers[10];
			TEXTURE2D_ARRAY(TVE_GlowBaseTex);
			TEXTURE2D_ARRAY(TVE_GlowNearTex);
			half4 TVE_GlowParams;
			float TVE_AtmoLayers[10];
			TEXTURE2D_ARRAY(TVE_AtmoBaseTex);
			TEXTURE2D_ARRAY(TVE_AtmoNearTex);
			half4 TVE_AtmoParams;
			float TVE_FadeLayers[10];
			TEXTURE2D_ARRAY(TVE_FadeBaseTex);
			TEXTURE2D_ARRAY(TVE_FadeNearTex);
			half4 TVE_FadeParams;
			half4 TVE_FormParams;
			float TVE_LandLayers[10];
			TEXTURE2D_ARRAY(TVE_LandBaseTex);
			TEXTURE2D_ARRAY(TVE_LandNearTex);
			half4 TVE_LandParams;
			half4 TVE_WindParams;
			half4 TVE_PushParams;
			half TVE_IsEnabled;
			TEXTURE2D(_TerrainControlTex1);
			TEXTURE2D(_TerrainControlTex2);
			TEXTURE2D(_TerrainControlTex3);
			TEXTURE2D(_TerrainControlTex4);
			TEXTURE2D(_TerrainShaderTex1);
			SAMPLER(sampler_Point_Repeat);
			SAMPLER(sampler_Linear_Repeat_Aniso8);
			TEXTURE2D(_TerrainShaderTex2);
			TEXTURE2D(_TerrainShaderTex3);
			TEXTURE2D(_TerrainShaderTex4);
			TEXTURE2D(_TerrainShaderTex5);
			TEXTURE2D(_TerrainShaderTex6);
			TEXTURE2D(_TerrainShaderTex7);
			TEXTURE2D(_TerrainShaderTex8);
			TEXTURE2D(_TerrainShaderTex9);
			TEXTURE2D(_TerrainShaderTex10);
			TEXTURE2D(_TerrainShaderTex11);
			TEXTURE2D(_TerrainShaderTex12);
			TEXTURE2D(_TerrainShaderTex13);
			TEXTURE2D(_TerrainShaderTex14);
			TEXTURE2D(_TerrainShaderTex15);
			TEXTURE2D(_TerrainShaderTex16);
			TEXTURE2D(_TerrainAlbedoTex1);
			TEXTURE2D(_TerrainAlbedoTex2);
			TEXTURE2D(_TerrainAlbedoTex3);
			TEXTURE2D(_TerrainAlbedoTex4);
			TEXTURE2D(_TerrainAlbedoTex5);
			TEXTURE2D(_TerrainAlbedoTex6);
			TEXTURE2D(_TerrainAlbedoTex7);
			TEXTURE2D(_TerrainAlbedoTex8);
			TEXTURE2D(_TerrainAlbedoTex9);
			TEXTURE2D(_TerrainAlbedoTex10);
			TEXTURE2D(_TerrainAlbedoTex11);
			TEXTURE2D(_TerrainAlbedoTex12);
			TEXTURE2D(_TerrainAlbedoTex13);
			TEXTURE2D(_TerrainAlbedoTex14);
			TEXTURE2D(_TerrainAlbedoTex15);
			TEXTURE2D(_TerrainAlbedoTex16);
			TEXTURE2D(_TerrainNormalTex1);
			TEXTURE2D(_TerrainNormalTex2);
			TEXTURE2D(_TerrainNormalTex3);
			TEXTURE2D(_TerrainNormalTex4);
			TEXTURE2D(_TerrainNormalTex5);
			TEXTURE2D(_TerrainNormalTex6);
			TEXTURE2D(_TerrainNormalTex7);
			TEXTURE2D(_TerrainNormalTex8);
			TEXTURE2D(_TerrainNormalTex9);
			TEXTURE2D(_TerrainNormalTex10);
			TEXTURE2D(_TerrainNormalTex11);
			TEXTURE2D(_TerrainNormalTex12);
			TEXTURE2D(_TerrainNormalTex13);
			TEXTURE2D(_TerrainNormalTex14);
			TEXTURE2D(_TerrainNormalTex15);
			TEXTURE2D(_TerrainNormalTex16);
			TEXTURE2D(_TerrainHolesTex);
			TEXTURE2D(_OverlayAlbedoTex);
			TEXTURE2D(_OverlayGlitterTexRT);
			TEXTURE2D(_OverlayNormalTex);
			TEXTURE2D(_WetnessDropsTexRT);
			#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
				TEXTURE2D(_TerrainHeightmapTexture);//ASE Terrain Instancing
				TEXTURE2D( _TerrainNormalmapTexture);//ASE Terrain Instancing
				SAMPLER(sampler_TerrainNormalmapTexture);//ASE Terrain Instancing
			#endif//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_START( Terrain )//ASE Terrain Instancing
				UNITY_DEFINE_INSTANCED_PROP( float4, _TerrainPatchInstanceData )//ASE Terrain Instancing
			UNITY_INSTANCING_BUFFER_END( Terrain)//ASE Terrain Instancing
			CBUFFER_START( UnityTerrain)//ASE Terrain Instancing
				#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
					float4 _TerrainHeightmapRecipSize;//ASE Terrain Instancing
					float4 _TerrainHeightmapScale;//ASE Terrain Instancing
				#endif//ASE Terrain Instancing
			CBUFFER_END//ASE Terrain Instancing


            #ifdef DEBUG_DISPLAY
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
            #endif

            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/PickingSpaceTransforms.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"

			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/CommonLighting.hlsl"
			#define ASE_NEEDS_VERT_POSITION
			#define ASE_NEEDS_VERT_NORMAL
			#define ASE_NEEDS_VERT_TANGENT
			#define ASE_NEEDS_FRAG_RELATIVE_WORLD_POS
			#pragma shader_feature_local_fragment TVE_PIPELINE_STANDARD TVE_PIPELINE_UNIVERSAL TVE_PIPELINE_HD
			#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
			#pragma shader_feature_local_vertex TVE_LANDSCAPE
			#pragma shader_feature_local_fragment TVE_WETNESS
			#pragma shader_feature_local_fragment TVE_OVERLAY
			#pragma shader_feature_local_fragment TVE_DRYNESS
			#pragma shader_feature_local_fragment TVE_TINTING
			#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
			#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
			#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
			#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
			#pragma shader_feature_local_fragment TVE_DRYNESS_SHIFT
			#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
			#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
			#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
			#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_WATER
			#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
			#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
			#pragma shader_feature_local_fragment TVE_EMISSIVE
			#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
			#pragma shader_feature_local_fragment TVE_CUTOUT
			#pragma shader_feature_local_fragment TVE_CUTOUT_SHADOW
			#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
			#pragma multi_compile_instancing
			#pragma instancing_options assumeuniformscaling nomatrices nolightprobe nolightmap
			  
			struct TVEVisualData
			{  
				half Dummy;  
				half3 Albedo;
				half3 AlbedoRaw;
				half2 NormalTS;
				half3 NormalWS; 
				half4 Shader;
				half4 Emissive;
				half AlphaClip;
				half AlphaFade;
				half MultiMask;
				half Grayscale;
				half Luminosity;
				half3 Translucency;
				half Transmission;
				half Thickness;
				float Diffusion;
			};  
			    
			struct TVEModelData
			{    
				half Dummy;    
				half3 PositionOS;
				half3 PositionWS;
				half3 PositionWO;
				half3 PositionRawOS;
				half3 PositionAddOS;
				half3 PivotOS;
				half3 PivotWS;
				half3 PivotWO;
				half3 NormalOS;
				half3 NormalWS;
				half3 NormalRawOS;
				half3 NormalRawWS;
				half4 TangentOS;
				half3 ViewDirWS;
				half4 VertexData;
				half4 MotionData;
				half4 BoundsData;
				half4 RotationData;
			};    
			      
			struct TVEGlobalData
			{      
				half Dummy;      
				half4 CoatParams;
				half4 PaintParams;
				half4 GlowParams;
				half4 AtmoParams;
				half4 FadeParams;
				half4 FormParams;
				half4 LandParams;
				half4 WindParams;
				half4 PushParams;
			};      
			        
			//#pragma editor_sync_compilation


			struct AttributesMesh
			{
				float3 positionOS : POSITION;
				float3 normalOS : NORMAL;
				float4 tangentOS : TANGENT;
				float4 uv1 : TEXCOORD1;
				float4 uv2 : TEXCOORD2;
				float3 previousPositionOS : TEXCOORD4;
				float3 precomputedVelocity : TEXCOORD5;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;
				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct PackedVaryingsMeshToPS
			{
				SV_POSITION_QUALIFIERS float4 positionCS : SV_Position;
				float3 positionRWS : TEXCOORD0;
				float3 normalWS : TEXCOORD1;
				float4 tangentWS : TEXCOORD2;
				float4 uv1 : TEXCOORD3;
				float4 uv2 : TEXCOORD4;
				#ifdef _WRITE_TRANSPARENT_MOTION_VECTOR
					float3 vpassPositionCS : TEXCOORD5;
					float3 vpassPreviousPositionCS : TEXCOORD6;
				#endif
				float4 ase_texcoord7 : TEXCOORD7;
				float4 ase_texcoord8 : TEXCOORD8;
				float4 ase_color : COLOR;
				float4 ase_texcoord9 : TEXCOORD9;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				UNITY_VERTEX_OUTPUT_STEREO
				#if defined(SHADER_STAGE_FRAGMENT) && defined(ASE_NEED_CULLFACE)
				FRONT_FACE_TYPE cullFace : FRONT_FACE_SEMANTIC;
				#endif
			};

			float3 ObjectPosition_UNITY_MATRIX_M(  )
			{
				return float3(UNITY_MATRIX_M[0].w, UNITY_MATRIX_M[1].w, UNITY_MATRIX_M[2].w );
			}
			
			void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
			{
				ZX = WorldPosition.xz * Coords.xx - Coords.zz;
				ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
				XY = WorldPosition.xy * Coords.xy - Coords.zw;
			}
			
			half4 SamplePlanar2D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
				return tex;
			}
			
			void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
			{
				half3 powNormal = abs( WorldNormal.xyz );
				half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
				weights /= ( weights.x + weights.y + weights.z ).xxx;
				T1 = weights.y;
				T2 = weights.x;
				T3 = weights.z;
			}
			
			half4 SamplePlanar3D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
				half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
				half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
				return tex1 * T1 + tex2 * T2 + tex3 * T3;
			}
			
			void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
			{
				half2 vertex1, vertex2, vertex3;
				// Scaling of the input
				half2 uv = UV * 3.464; // 2 * sqrt (3)
				// Skew input space into simplex triangle grid
				const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
				half2 skewedCoord = mul( gridToSkewedGrid, uv );
				// Compute local triangle vertex IDs and local barycentric coordinates
				int2 baseId = int2( floor( skewedCoord ) );
				half3 temp = half3( frac( skewedCoord ), 0 );
				temp.z = 1.0 - temp.x - temp.y;
				if ( temp.z > 0.0 )
				{
					W1 = temp.z;
					W2 = temp.y;
					W3 = temp.x;
					vertex1 = baseId;
					vertex2 = baseId + int2( 0, 1 );
					vertex3 = baseId + int2( 1, 0 );
				}
				else
				{
					W1 = -temp.z;
					W2 = 1.0 - temp.y;
					W3 = 1.0 - temp.x;
					vertex1 = baseId + int2( 1, 1 );
					vertex2 = baseId + int2( 1, 0 );
					vertex3 = baseId + int2( 0, 1 );
				}
				UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
				UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
				UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
				return;
			}
			
			float4 SampleStochastic2D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
			{
				half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
				half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
				half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
				half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
				return tex1 * W1 + tex2 * W2 + tex3 * W3;
			}
			
			half4 SampleStochastic3D( TEXTURE2D(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
			{
				half2 ZX, ZY, XY;
				ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
				half2 UV1, UV2, UV3;
				half W1, W2, W3;
				half4 tex1, tex2, tex3;
				ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
				half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
				half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
				tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
				tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
				tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
				half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
				half T1, T2, T3;
				ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
				return texZX * T1 + texZY * T2 + texXY * T3;
			}
			
			half3 HSVToRGB( half3 c )
			{
				half4 K = half4( 1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0 );
				half3 p = abs( frac( c.xxx + K.xyz ) * 6.0 - K.www );
				return c.z * lerp( K.xxx, saturate( p - K.xxx ), c.y );
			}
			
			half3 RGBToHSV(half3 c)
			{
				half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
				half4 p = lerp( half4( c.bg, K.wz ), half4( c.gb, K.xy ), step( c.b, c.g ) );
				half4 q = lerp( half4( p.xyw, c.r ), half4( c.r, p.yzx ), step( p.x, c.r ) );
				half d = q.x - min( q.w, q.y );
				half e = 1.0e-10;
				return half3( abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
			}
			float3 ASEGetEmissionHDRColor(float3 ldrColor, float luminanceIntensity, float exposureWeight, float inverseCurrentExposureMultiplier)
			{
				float3 hdrColor = ldrColor * luminanceIntensity;
				hdrColor = lerp( hdrColor* inverseCurrentExposureMultiplier, hdrColor, exposureWeight);
				return hdrColor;
			}
			
			half ShadowPassCheck36_g118142( half True, half False )
			{
				half result;
				#if defined(SHADERPASS) && (SHADERPASS  == SHADERPASS_SHADOWS)
					result = True;
				#else
					result = False;
				#endif
				return result;
			}
			
			AttributesMesh ApplyMeshModification( AttributesMesh inputMesh )
			{
			#ifdef UNITY_INSTANCING_ENABLED
				float2 patchVertex = inputMesh.positionOS.xy;
				float4 instanceData = UNITY_ACCESS_INSTANCED_PROP( Terrain, _TerrainPatchInstanceData );
				float2 sampleCoords = ( patchVertex.xy + instanceData.xy ) * instanceData.z;
				float height = UnpackHeightmap( _TerrainHeightmapTexture.Load( int3( sampleCoords, 0 ) ) );
				inputMesh.positionOS.xz = sampleCoords* _TerrainHeightmapScale.xz;
				inputMesh.positionOS.y = height* _TerrainHeightmapScale.y;
				#ifdef ENABLE_TERRAIN_PERPIXEL_NORMAL
					inputMesh.normalOS = float3(0, 1, 0);
				#else
					inputMesh.normalOS = _TerrainNormalmapTexture.Load(int3(sampleCoords, 0)).rgb* 2 - 1;
				#endif
				inputMesh.ase_texcoord.xy = sampleCoords* _TerrainHeightmapRecipSize.zw;
			#endif
				return inputMesh;
			}
			

			// Get Surface And BuiltinData
			void GetSurfaceAndBuiltinData(PickingSurfaceDescription surfaceDescription, FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData)
			{
				#ifdef LOD_FADE_CROSSFADE
                    LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
				#endif

                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif  
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants);

                #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    surfaceDescription.Alpha = 1.0f;
                }
                #endif

				#ifdef _ALPHATEST_ON
                    DoAlphaTest( surfaceDescription.Alpha, surfaceDescription.AlphaClipThreshold );
				#endif

				#ifdef _ALPHATEST_SHADOW_ON
                    DoAlphaTest( surfaceDescription.Alpha, surfaceDescription.AlphaClipThresholdShadow);
				#endif

				#ifdef _DEPTHOFFSET_ON
                    ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
				#endif

				float3 bentNormalWS;
                //BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], fragInputs.texCoord1, fragInputs.texCoord2, builtinData);

				#ifdef _DEPTHOFFSET_ON
                    builtinData.depthOffset = surfaceDescription.DepthOffset;
				#endif

                #ifdef _ALPHATEST_ON
                    builtinData.alphaClipTreshold = surfaceDescription.AlphaClipThreshold;
                #endif

                #ifdef UNITY_VIRTUAL_TEXTURING
                    builtinData.vtPackedFeedback = surfaceDescription.VTPackedFeedback;
                #endif

				#ifdef ASE_BAKEDGI
                    builtinData.bakeDiffuseLighting = surfaceDescription.BakedGI;
				#endif

				#ifdef ASE_BAKEDBACKGI
                    builtinData.backBakeDiffuseLighting = surfaceDescription.BakedBackGI;
				#endif

                builtinData.emissiveColor = surfaceDescription.Emission;

				PostInitBuiltinData(V, posInput, surfaceData, builtinData);

            }

			AttributesMesh ApplyMeshModification(AttributesMesh inputMesh, float3 timeParameters, inout PackedVaryingsMeshToPS outputPackedVaryingsMeshToPS )
			{
				_TimeParameters.xyz = timeParameters;
				inputMesh = ApplyMeshModification(inputMesh);
				TVEModelData Data16_g118149 = (TVEModelData)0;
				half Dummy181_g118147 = ( _LandscapeCategory + _LandscapeEnd + _LandscapeInfo );
				float In_Dummy16_g118149 = Dummy181_g118147;
				TVEModelData Data16_g117808 = (TVEModelData)0;
				half Dummy207_g117794 = 0.0;
				float In_Dummy16_g117808 = Dummy207_g117794;
				half3 PositionOS131_g117794 = inputMesh.positionOS;
				float3 In_PositionOS16_g117808 = PositionOS131_g117794;
				float3 ase_worldPos = GetAbsolutePositionWS( TransformObjectToWorld( (inputMesh.positionOS).xyz ) );
				float3 vertexToFrag73_g117794 = ase_worldPos;
				half3 PositionWS122_g117794 = vertexToFrag73_g117794;
				float3 In_PositionWS16_g117808 = PositionWS122_g117794;
				float3 localObjectPosition_UNITY_MATRIX_M14_g117796 = ObjectPosition_UNITY_MATRIX_M();
				#ifdef SHADEROPTIONS_CAMERA_RELATIVE_RENDERING
				float3 staticSwitch13_g117796 = ( localObjectPosition_UNITY_MATRIX_M14_g117796 + _WorldSpaceCameraPos );
				#else
				float3 staticSwitch13_g117796 = localObjectPosition_UNITY_MATRIX_M14_g117796;
				#endif
				half3 ObjectData20_g117798 = staticSwitch13_g117796;
				half3 WorldData19_g117798 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g117798 = WorldData19_g117798;
				#else
				float3 staticSwitch14_g117798 = ObjectData20_g117798;
				#endif
				float3 temp_output_124_0_g117796 = staticSwitch14_g117798;
				float3 temp_output_239_7_g117794 = temp_output_124_0_g117796;
				half3 PivotWS121_g117794 = temp_output_239_7_g117794;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g117794 = ( PositionWS122_g117794 - PivotWS121_g117794 );
				#else
				float3 staticSwitch204_g117794 = PositionWS122_g117794;
				#endif
				half3 PositionWO132_g117794 = ( staticSwitch204_g117794 - TVE_WorldOrigin );
				float3 In_PositionWO16_g117808 = PositionWO132_g117794;
				float3 In_PositionRawOS16_g117808 = PositionOS131_g117794;
				float3 In_PositionAddOS16_g117808 = float3( 0,0,0 );
				float3 _Vector0 = float3(0,0,0);
				half3 PivotOS149_g117794 = _Vector0;
				float3 In_PivotOS16_g117808 = PivotOS149_g117794;
				float3 In_PivotWS16_g117808 = PivotWS121_g117794;
				half3 PivotWO133_g117794 = ( PivotWS121_g117794 - TVE_WorldOrigin );
				float3 In_PivotWO16_g117808 = PivotWO133_g117794;
				half3 NormalOS134_g117794 = inputMesh.normalOS;
				float3 In_NormalOS16_g117808 = NormalOS134_g117794;
				float3 ase_worldNormal = TransformObjectToWorldNormal(inputMesh.normalOS);
				float3 normalizedWorldNormal = normalize( ase_worldNormal );
				half3 Normal_WS95_g117794 = normalizedWorldNormal;
				float3 In_NormalWS16_g117808 = Normal_WS95_g117794;
				float3 In_NormalRawOS16_g117808 = NormalOS134_g117794;
				float3 objToWorldDir298_g117794 = normalize( mul( GetObjectToWorldMatrix(), float4( inputMesh.normalOS, 0 ) ).xyz );
				half3 Normal_RawWS136_g117794 = objToWorldDir298_g117794;
				float3 In_NormalRawWS16_g117808 = Normal_RawWS136_g117794;
				half4 TangentlOS153_g117794 = inputMesh.tangentOS;
				float4 In_TangentOS16_g117808 = TangentlOS153_g117794;
				float3 normalizeResult296_g117794 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g117794 ) );
				half3 ViewDirWS169_g117794 = normalizeResult296_g117794;
				float3 In_ViewDirWS16_g117808 = ViewDirWS169_g117794;
				half4 VertexMasks171_g117794 = inputMesh.ase_color;
				float4 In_VertexData16_g117808 = VertexMasks171_g117794;
				float4 break33_g117807 = _object_phase_mode;
				float temp_output_30_0_g117807 = ( inputMesh.ase_color.r * break33_g117807.x );
				float temp_output_29_0_g117807 = ( inputMesh.ase_color.g * break33_g117807.y );
				float temp_output_31_0_g117807 = ( inputMesh.ase_color.b * break33_g117807.z );
				float temp_output_28_0_g117807 = ( temp_output_30_0_g117807 + temp_output_29_0_g117807 + temp_output_31_0_g117807 + ( inputMesh.ase_color.a * break33_g117807.w ) );
				float3 break243_g117794 = PivotWO133_g117794;
				float temp_output_315_0_g117794 = (frac( ( temp_output_28_0_g117807 + ( break243_g117794.x + break243_g117794.z ) ) )*2.0 + -1.0);
				float4 appendResult177_g117794 = (float4(1.0 , 1.0 , temp_output_315_0_g117794 , 1.0));
				half4 MotionMasks176_g117794 = appendResult177_g117794;
				float4 In_MotionData16_g117808 = MotionMasks176_g117794;
				half4 BoundsData254_g117794 = float4( 0,0,0,0 );
				float4 In_BoundsData16_g117808 = BoundsData254_g117794;
				float4 In_RotationData16_g117808 = float4( 0,0,0,0 );
				Data16_g117808.Dummy = In_Dummy16_g117808;
				Data16_g117808.PositionOS = In_PositionOS16_g117808;
				Data16_g117808.PositionWS = In_PositionWS16_g117808;
				Data16_g117808.PositionWO = In_PositionWO16_g117808;
				Data16_g117808.PositionRawOS = In_PositionRawOS16_g117808;
				Data16_g117808.PositionAddOS = In_PositionAddOS16_g117808;
				Data16_g117808.PivotOS = In_PivotOS16_g117808;
				Data16_g117808.PivotWS = In_PivotWS16_g117808;
				Data16_g117808.PivotWO = In_PivotWO16_g117808;
				Data16_g117808.NormalOS = In_NormalOS16_g117808;
				Data16_g117808.NormalWS = In_NormalWS16_g117808;
				Data16_g117808.NormalRawOS = In_NormalRawOS16_g117808;
				Data16_g117808.NormalRawWS = In_NormalRawWS16_g117808;
				Data16_g117808.TangentOS = In_TangentOS16_g117808;
				Data16_g117808.ViewDirWS = In_ViewDirWS16_g117808;
				Data16_g117808.VertexData = In_VertexData16_g117808;
				Data16_g117808.MotionData = In_MotionData16_g117808;
				Data16_g117808.BoundsData = In_BoundsData16_g117808;
				Data16_g117808.RotationData = In_RotationData16_g117808;
				TVEModelData Data15_g118148 = Data16_g117808;
				float Out_Dummy15_g118148 = 0;
				float3 Out_PositionOS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionWS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118148 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g118148 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotOS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118148 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118148 = float3( 0,0,0 );
				float3 Out_NormalOS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g118148 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g118148 = float3( 0,0,0 );
				float4 Out_TangentOS15_g118148 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g118148 = float3( 0,0,0 );
				float4 Out_VertexData15_g118148 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g118148 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118148 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g118148 = float4( 0,0,0,0 );
				Out_Dummy15_g118148 = Data15_g118148.Dummy;
				Out_PositionOS15_g118148 = Data15_g118148.PositionOS;
				Out_PositionWS15_g118148 = Data15_g118148.PositionWS;
				Out_PositionWO15_g118148 = Data15_g118148.PositionWO;
				Out_PositionRawOS15_g118148 = Data15_g118148.PositionRawOS;
				Out_PositionAddOS15_g118148 = Data15_g118148.PositionAddOS;
				Out_PivotOS15_g118148 = Data15_g118148.PivotOS;
				Out_PivotWS15_g118148 = Data15_g118148.PivotWS;
				Out_PivotWO15_g118148 = Data15_g118148.PivotWO;
				Out_NormalOS15_g118148 = Data15_g118148.NormalOS;
				Out_NormalWS15_g118148 = Data15_g118148.NormalWS;
				Out_NormalRawOS15_g118148 = Data15_g118148.NormalRawOS;
				Out_NormalRawWS15_g118148 = Data15_g118148.NormalRawWS;
				Out_TangentOS15_g118148 = Data15_g118148.TangentOS;
				Out_ViewDirWS15_g118148 = Data15_g118148.ViewDirWS;
				Out_VertexData15_g118148 = Data15_g118148.VertexData;
				Out_MotionData15_g118148 = Data15_g118148.MotionData;
				Out_BoundsData15_g118148 = Data15_g118148.BoundsData;
				Out_RotationData15_g118148 = Data15_g118148.RotationData;
				half3 Input_PositionOS147_g118147 = Out_PositionOS15_g118148;
				float3 break592_g118147 = Input_PositionOS147_g118147;
				float localBuildGlobalData204_g117810 = ( 0.0 );
				TVEGlobalData Data204_g117810 = (TVEGlobalData)0;
				half Dummy211_g117810 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g117810 = Dummy211_g117810;
				half4 Coat_Params302_g117810 = TVE_CoatParams;
				float4 In_CoatParams204_g117810 = Coat_Params302_g117810;
				float temp_output_82_0_g117811 = _GlobalPaintLayerValue;
				float temp_output_19_0_g117813 = TVE_PaintLayers[(int)temp_output_82_0_g117811];
				TVEModelData Data16_g117809 = (TVEModelData)0;
				float In_Dummy16_g117809 = 0.0;
				float3 In_PositionWS16_g117809 = PositionWS122_g117794;
				float3 In_PositionWO16_g117809 = PositionWO132_g117794;
				float3 In_PivotWS16_g117809 = PivotWS121_g117794;
				float3 In_PivotWO16_g117809 = PivotWO133_g117794;
				float3 In_NormalWS16_g117809 = Normal_WS95_g117794;
				float3 In_ViewDirWS16_g117809 = ViewDirWS169_g117794;
				float4 In_VertexData16_g117809 = VertexMasks171_g117794;
				float4 In_BoundsData16_g117809 = float4( 1,1,1,1 );
				Data16_g117809.Dummy = In_Dummy16_g117809;
				Data16_g117809.PositionWS = In_PositionWS16_g117809;
				Data16_g117809.PositionWO = In_PositionWO16_g117809;
				Data16_g117809.PivotWS = In_PivotWS16_g117809;
				Data16_g117809.PivotWO = In_PivotWO16_g117809;
				Data16_g117809.NormalWS = In_NormalWS16_g117809;
				Data16_g117809.ViewDirWS = In_ViewDirWS16_g117809;
				Data16_g117809.VertexData = In_VertexData16_g117809;
				Data16_g117809.BoundsData = In_BoundsData16_g117809;
				TVEModelData Data15_g117892 = Data16_g117809;
				float Out_Dummy15_g117892 = 0;
				float3 Out_PositionWS15_g117892 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117892 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117892 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g117892 = float3( 0,0,0 );
				float4 Out_VertexData15_g117892 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117892 = float4( 0,0,0,0 );
				Out_Dummy15_g117892 = Data15_g117892.Dummy;
				Out_PositionWS15_g117892 = Data15_g117892.PositionWS;
				Out_PositionWO15_g117892 = Data15_g117892.PositionWO;
				Out_PivotWS15_g117892 = Data15_g117892.PivotWS;
				Out_PivotWO15_g117892 = Data15_g117892.PivotWO;
				Out_NormalWS15_g117892 = Data15_g117892.NormalWS;
				Out_ViewDirWS15_g117892 = Data15_g117892.ViewDirWS;
				Out_VertexData15_g117892 = Data15_g117892.VertexData;
				Out_BoundsData15_g117892 = Data15_g117892.BoundsData;
				half3 Model_PositionWS143_g117810 = Out_PositionWS15_g117892;
				half3 Input_Position180_g117814 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117814 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_82_0_g117814 = temp_output_82_0_g117811;
				float2 temp_output_119_0_g117814 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_7_0_g117819 = 1.0;
				float temp_output_10_0_g117819 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117819 );
				float4 lerpResult131_g117814 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117814,temp_output_82_0_g117814, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, temp_output_119_0_g117814,temp_output_82_0_g117814, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117814 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117819 ) / temp_output_10_0_g117819 ) ));
				float4 temp_output_17_0_g117813 = lerpResult131_g117814;
				float4 temp_output_3_0_g117813 = TVE_PaintParams;
				float4 ifLocalVar18_g117813 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117813 >= 0.5 )
				ifLocalVar18_g117813 = temp_output_17_0_g117813;
				else
				ifLocalVar18_g117813 = temp_output_3_0_g117813;
				float4 lerpResult22_g117813 = lerp( temp_output_3_0_g117813 , temp_output_17_0_g117813 , temp_output_19_0_g117813);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117813 = lerpResult22_g117813;
				#else
				float4 staticSwitch24_g117813 = ifLocalVar18_g117813;
				#endif
				half4 Paint_Params71_g117810 = staticSwitch24_g117813;
				float4 In_PaintParams204_g117810 = Paint_Params71_g117810;
				float temp_output_82_0_g117829 = _GlobalGlowLayerValue;
				float temp_output_19_0_g117831 = TVE_GlowLayers[(int)temp_output_82_0_g117829];
				half3 Input_Position180_g117832 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117832 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_82_0_g117832 = temp_output_82_0_g117829;
				float2 temp_output_119_0_g117832 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_7_0_g117837 = 1.0;
				float temp_output_10_0_g117837 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117837 );
				float4 lerpResult131_g117832 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117832,temp_output_82_0_g117832, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, temp_output_119_0_g117832,temp_output_82_0_g117832, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117832 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117837 ) / temp_output_10_0_g117837 ) ));
				float4 temp_output_17_0_g117831 = lerpResult131_g117832;
				float4 temp_output_3_0_g117831 = TVE_GlowParams;
				float4 ifLocalVar18_g117831 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117831 >= 0.5 )
				ifLocalVar18_g117831 = temp_output_17_0_g117831;
				else
				ifLocalVar18_g117831 = temp_output_3_0_g117831;
				float4 lerpResult22_g117831 = lerp( temp_output_3_0_g117831 , temp_output_17_0_g117831 , temp_output_19_0_g117831);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117831 = lerpResult22_g117831;
				#else
				float4 staticSwitch24_g117831 = ifLocalVar18_g117831;
				#endif
				half4 Glow_Params248_g117810 = staticSwitch24_g117831;
				float4 In_GlowParams204_g117810 = Glow_Params248_g117810;
				float temp_output_132_0_g117874 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g117876 = TVE_AtmoLayers[(int)temp_output_132_0_g117874];
				half3 Input_Position180_g117877 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117877 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_82_0_g117877 = temp_output_132_0_g117874;
				float2 temp_output_119_0_g117877 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_7_0_g117882 = 1.0;
				float temp_output_10_0_g117882 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117882 );
				float4 lerpResult131_g117877 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117877,temp_output_82_0_g117877, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, temp_output_119_0_g117877,temp_output_82_0_g117877, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117877 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117882 ) / temp_output_10_0_g117882 ) ));
				float4 temp_output_17_0_g117876 = lerpResult131_g117877;
				float4 temp_output_3_0_g117876 = TVE_AtmoParams;
				float4 ifLocalVar18_g117876 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117876 >= 0.5 )
				ifLocalVar18_g117876 = temp_output_17_0_g117876;
				else
				ifLocalVar18_g117876 = temp_output_3_0_g117876;
				float4 lerpResult22_g117876 = lerp( temp_output_3_0_g117876 , temp_output_17_0_g117876 , temp_output_19_0_g117876);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117876 = lerpResult22_g117876;
				#else
				float4 staticSwitch24_g117876 = ifLocalVar18_g117876;
				#endif
				half4 Atmo_Params80_g117810 = staticSwitch24_g117876;
				float4 In_AtmoParams204_g117810 = Atmo_Params80_g117810;
				float temp_output_132_0_g117883 = _GlobalFadeLayerValue;
				float temp_output_19_0_g117885 = TVE_FadeLayers[(int)temp_output_132_0_g117883];
				half3 Input_Position180_g117886 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117886 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_82_0_g117886 = temp_output_132_0_g117883;
				float2 temp_output_119_0_g117886 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_7_0_g117891 = 1.0;
				float temp_output_10_0_g117891 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117891 );
				float4 lerpResult131_g117886 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117886,temp_output_82_0_g117886, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, temp_output_119_0_g117886,temp_output_82_0_g117886, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117886 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117891 ) / temp_output_10_0_g117891 ) ));
				float4 temp_output_17_0_g117885 = lerpResult131_g117886;
				float4 temp_output_3_0_g117885 = TVE_FadeParams;
				float4 ifLocalVar18_g117885 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117885 >= 0.5 )
				ifLocalVar18_g117885 = temp_output_17_0_g117885;
				else
				ifLocalVar18_g117885 = temp_output_3_0_g117885;
				float4 lerpResult22_g117885 = lerp( temp_output_3_0_g117885 , temp_output_17_0_g117885 , temp_output_19_0_g117885);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117885 = lerpResult22_g117885;
				#else
				float4 staticSwitch24_g117885 = ifLocalVar18_g117885;
				#endif
				half4 Fade_Params387_g117810 = staticSwitch24_g117885;
				float4 In_FadeParams204_g117810 = Fade_Params387_g117810;
				half4 Form_Params112_g117810 = TVE_FormParams;
				float4 In_FormParams204_g117810 = Form_Params112_g117810;
				float temp_output_130_0_g117847 = _GlobalLandLayerValue;
				float temp_output_19_0_g117849 = TVE_LandLayers[(int)temp_output_130_0_g117847];
				half3 Input_Position180_g117850 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117850 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_82_0_g117850 = temp_output_130_0_g117847;
				float2 temp_output_119_0_g117850 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_7_0_g117855 = 1.0;
				float temp_output_10_0_g117855 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117855 );
				float4 lerpResult131_g117850 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117850,temp_output_82_0_g117850, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, temp_output_119_0_g117850,temp_output_82_0_g117850, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117850 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117855 ) / temp_output_10_0_g117855 ) ));
				float4 temp_output_17_0_g117849 = lerpResult131_g117850;
				float4 temp_output_3_0_g117849 = TVE_LandParams;
				float4 ifLocalVar18_g117849 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117849 >= 0.5 )
				ifLocalVar18_g117849 = temp_output_17_0_g117849;
				else
				ifLocalVar18_g117849 = temp_output_3_0_g117849;
				float4 lerpResult22_g117849 = lerp( temp_output_3_0_g117849 , temp_output_17_0_g117849 , temp_output_19_0_g117849);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117849 = lerpResult22_g117849;
				#else
				float4 staticSwitch24_g117849 = ifLocalVar18_g117849;
				#endif
				half4 Land_Params375_g117810 = staticSwitch24_g117849;
				float4 In_LandParams204_g117810 = Land_Params375_g117810;
				half4 Wind_Params88_g117810 = TVE_WindParams;
				float4 In_WindParams204_g117810 = Wind_Params88_g117810;
				half4 Push_Params335_g117810 = TVE_PushParams;
				float4 In_PushParams204_g117810 = Push_Params335_g117810;
				Data204_g117810.Dummy = In_Dummy204_g117810;
				Data204_g117810.CoatParams = In_CoatParams204_g117810;
				Data204_g117810.PaintParams = In_PaintParams204_g117810;
				Data204_g117810.GlowParams = In_GlowParams204_g117810;
				Data204_g117810.AtmoParams = In_AtmoParams204_g117810;
				Data204_g117810.FadeParams = In_FadeParams204_g117810;
				Data204_g117810.FormParams= In_FormParams204_g117810;
				Data204_g117810.LandParams = In_LandParams204_g117810;
				Data204_g117810.WindParams = In_WindParams204_g117810;
				Data204_g117810.PushParams = In_PushParams204_g117810;
				TVEGlobalData Data15_g118150 = Data204_g117810;
				float Out_Dummy15_g118150 = 0;
				float4 Out_CoatParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118150 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118150 = float4( 0,0,0,0 );
				Out_Dummy15_g118150 = Data15_g118150.Dummy;
				Out_CoatParams15_g118150 = Data15_g118150.CoatParams;
				Out_PaintParams15_g118150 = Data15_g118150.PaintParams;
				Out_GlowParams15_g118150 = Data15_g118150.GlowParams;
				Out_AtmoParams15_g118150= Data15_g118150.AtmoParams;
				Out_FadeParams15_g118150= Data15_g118150.FadeParams;
				Out_FormParams15_g118150 = Data15_g118150.FormParams;
				Out_LandParams15_g118150 = Data15_g118150.LandParams;
				Out_WindParams15_g118150 = Data15_g118150.WindParams;
				Out_PushParams15_g118150 = Data15_g118150.PushParams;
				half4 Input_FormParams214_g118147 = Out_LandParams15_g118150;
				float temp_output_572_0_g118147 = (Input_FormParams214_g118147).z;
				float temp_output_595_0_g118147 = ( break592_g118147.y + temp_output_572_0_g118147 );
				float lerpResult604_g118147 = lerp( break592_g118147.y , temp_output_595_0_g118147 , ( _LandscapeHeightValue * TVE_IsEnabled ));
				float3 appendResult593_g118147 = (float3(break592_g118147.x , lerpResult604_g118147 , break592_g118147.z));
				#ifdef TVE_LANDSCAPE
				float3 staticSwitch575_g118147 = appendResult593_g118147;
				#else
				float3 staticSwitch575_g118147 = Input_PositionOS147_g118147;
				#endif
				half3 Final_PositionOS580_g118147 = staticSwitch575_g118147;
				float3 In_PositionOS16_g118149 = Final_PositionOS580_g118147;
				float3 In_PositionWS16_g118149 = Out_PositionWS15_g118148;
				float3 In_PositionWO16_g118149 = Out_PositionWO15_g118148;
				float3 In_PositionRawOS16_g118149 = Out_PositionRawOS15_g118148;
				float3 In_PositionAddOS16_g118149 = Out_PositionAddOS15_g118148;
				float3 In_PivotOS16_g118149 = Out_PivotOS15_g118148;
				float3 In_PivotWS16_g118149 = Out_PivotWS15_g118148;
				float3 temp_output_481_19_g118147 = Out_PivotWO15_g118148;
				float3 In_PivotWO16_g118149 = temp_output_481_19_g118147;
				float3 temp_output_481_20_g118147 = Out_NormalOS15_g118148;
				float3 In_NormalOS16_g118149 = temp_output_481_20_g118147;
				float3 In_NormalWS16_g118149 = Out_NormalWS15_g118148;
				float3 In_NormalRawOS16_g118149 = Out_NormalRawOS15_g118148;
				float3 In_NormalRawWS16_g118149 = Out_NormalRawWS15_g118148;
				float4 In_TangentOS16_g118149 = Out_TangentOS15_g118148;
				float3 In_ViewDirWS16_g118149 = Out_ViewDirWS15_g118148;
				float4 In_VertexData16_g118149 = Out_VertexData15_g118148;
				float4 In_MotionData16_g118149 = Out_MotionData15_g118148;
				float4 In_BoundsData16_g118149 = Out_BoundsData15_g118148;
				float4 In_RotationData16_g118149 = Out_RotationData15_g118148;
				Data16_g118149.Dummy = In_Dummy16_g118149;
				Data16_g118149.PositionOS = In_PositionOS16_g118149;
				Data16_g118149.PositionWS = In_PositionWS16_g118149;
				Data16_g118149.PositionWO = In_PositionWO16_g118149;
				Data16_g118149.PositionRawOS = In_PositionRawOS16_g118149;
				Data16_g118149.PositionAddOS = In_PositionAddOS16_g118149;
				Data16_g118149.PivotOS = In_PivotOS16_g118149;
				Data16_g118149.PivotWS = In_PivotWS16_g118149;
				Data16_g118149.PivotWO = In_PivotWO16_g118149;
				Data16_g118149.NormalOS = In_NormalOS16_g118149;
				Data16_g118149.NormalWS = In_NormalWS16_g118149;
				Data16_g118149.NormalRawOS = In_NormalRawOS16_g118149;
				Data16_g118149.NormalRawWS = In_NormalRawWS16_g118149;
				Data16_g118149.TangentOS = In_TangentOS16_g118149;
				Data16_g118149.ViewDirWS = In_ViewDirWS16_g118149;
				Data16_g118149.VertexData = In_VertexData16_g118149;
				Data16_g118149.MotionData = In_MotionData16_g118149;
				Data16_g118149.BoundsData = In_BoundsData16_g118149;
				Data16_g118149.RotationData = In_RotationData16_g118149;
				TVEModelData Data15_g118156 = Data16_g118149;
				float Out_Dummy15_g118156 = 0;
				float3 Out_PositionOS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionWS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118156 = float3( 0,0,0 );
				float3 Out_PositionRawOS15_g118156 = float3( 0,0,0 );
				float3 Out_PositionAddOS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotOS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118156 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118156 = float3( 0,0,0 );
				float3 Out_NormalOS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalRawOS15_g118156 = float3( 0,0,0 );
				float3 Out_NormalRawWS15_g118156 = float3( 0,0,0 );
				float4 Out_TangentOS15_g118156 = float4( 0,0,0,0 );
				float3 Out_ViewDirWS15_g118156 = float3( 0,0,0 );
				float4 Out_VertexData15_g118156 = float4( 0,0,0,0 );
				float4 Out_MotionData15_g118156 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118156 = float4( 0,0,0,0 );
				float4 Out_RotationData15_g118156 = float4( 0,0,0,0 );
				Out_Dummy15_g118156 = Data15_g118156.Dummy;
				Out_PositionOS15_g118156 = Data15_g118156.PositionOS;
				Out_PositionWS15_g118156 = Data15_g118156.PositionWS;
				Out_PositionWO15_g118156 = Data15_g118156.PositionWO;
				Out_PositionRawOS15_g118156 = Data15_g118156.PositionRawOS;
				Out_PositionAddOS15_g118156 = Data15_g118156.PositionAddOS;
				Out_PivotOS15_g118156 = Data15_g118156.PivotOS;
				Out_PivotWS15_g118156 = Data15_g118156.PivotWS;
				Out_PivotWO15_g118156 = Data15_g118156.PivotWO;
				Out_NormalOS15_g118156 = Data15_g118156.NormalOS;
				Out_NormalWS15_g118156 = Data15_g118156.NormalWS;
				Out_NormalRawOS15_g118156 = Data15_g118156.NormalRawOS;
				Out_NormalRawWS15_g118156 = Data15_g118156.NormalRawWS;
				Out_TangentOS15_g118156 = Data15_g118156.TangentOS;
				Out_ViewDirWS15_g118156 = Data15_g118156.ViewDirWS;
				Out_VertexData15_g118156 = Data15_g118156.VertexData;
				Out_MotionData15_g118156 = Data15_g118156.MotionData;
				Out_BoundsData15_g118156 = Data15_g118156.BoundsData;
				Out_RotationData15_g118156 = Data15_g118156.RotationData;
				float3 temp_output_31_0_g118154 = Out_PositionOS15_g118156;
				
				float3 ase_worldTangent = TransformObjectToWorldDir(inputMesh.tangentOS.xyz);
				float ase_vertexTangentSign = inputMesh.tangentOS.w * ( unity_WorldTransformParams.w >= 0.0 ? 1.0 : -1.0 );
				float3 ase_worldBitangent = cross( ase_worldNormal, ase_worldTangent ) * ase_vertexTangentSign;
				outputPackedVaryingsMeshToPS.ase_texcoord7.xyz = ase_worldBitangent;
				outputPackedVaryingsMeshToPS.ase_texcoord8.xyz = vertexToFrag73_g117794;
				
				outputPackedVaryingsMeshToPS.ase_color = inputMesh.ase_color;
				outputPackedVaryingsMeshToPS.ase_texcoord9 = inputMesh.ase_texcoord;
				
				//setting value to unused interpolator channels and avoid initialization warnings
				outputPackedVaryingsMeshToPS.ase_texcoord7.w = 0;
				outputPackedVaryingsMeshToPS.ase_texcoord8.w = 0;

				#ifdef ASE_ABSOLUTE_VERTEX_POS
				float3 defaultVertexValue = inputMesh.positionOS.xyz;
				#else
				float3 defaultVertexValue = float3( 0, 0, 0 );
				#endif
				float3 vertexValue =  temp_output_31_0_g118154;

				#ifdef ASE_ABSOLUTE_VERTEX_POS
				inputMesh.positionOS.xyz = vertexValue;
				#else
				inputMesh.positionOS.xyz += vertexValue;
				#endif
				inputMesh.normalOS = Out_NormalOS15_g118156;
				inputMesh.tangentOS = Out_TangentOS15_g118156;
				return inputMesh;
			}

			PackedVaryingsMeshToPS VertexFunction(AttributesMesh inputMesh)
			{
				PackedVaryingsMeshToPS outputPackedVaryingsMeshToPS = (PackedVaryingsMeshToPS)0;
				AttributesMesh defaultMesh = inputMesh;

				UNITY_SETUP_INSTANCE_ID(inputMesh);
				UNITY_TRANSFER_INSTANCE_ID(inputMesh, outputPackedVaryingsMeshToPS);
				UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO( outputPackedVaryingsMeshToPS );

				inputMesh = ApplyMeshModification( inputMesh, _TimeParameters.xyz, outputPackedVaryingsMeshToPS);

				float3 positionRWS = TransformObjectToWorld(inputMesh.positionOS);
				float3 normalWS = TransformObjectToWorldNormal(inputMesh.normalOS);
				float4 tangentWS = float4(TransformObjectToWorldDir(inputMesh.tangentOS.xyz), inputMesh.tangentOS.w);

				#ifdef _WRITE_TRANSPARENT_MOTION_VECTOR
				float4 VPASSpreviousPositionCS;
				float4 VPASSpositionCS = mul(UNITY_MATRIX_UNJITTERED_VP, float4(positionRWS, 1.0));

				bool forceNoMotion = unity_MotionVectorsParams.y == 0.0;
				if (forceNoMotion)
				{
					VPASSpreviousPositionCS = float4(0.0, 0.0, 0.0, 1.0);
				}
				else
				{
					bool hasDeformation = unity_MotionVectorsParams.x > 0.0;
					float3 effectivePositionOS = (hasDeformation ? inputMesh.previousPositionOS : defaultMesh.positionOS);
					#if defined(_ADD_PRECOMPUTED_VELOCITY)
					effectivePositionOS -= inputMesh.precomputedVelocity;
					#endif

					#if defined(HAVE_MESH_MODIFICATION)
						AttributesMesh previousMesh = defaultMesh;
						previousMesh.positionOS = effectivePositionOS ;
						PackedVaryingsMeshToPS test = (PackedVaryingsMeshToPS)0;
						float3 curTime = _TimeParameters.xyz;
						previousMesh = ApplyMeshModification(previousMesh, _LastTimeParameters.xyz, test);
						_TimeParameters.xyz = curTime;
						float3 previousPositionRWS = TransformPreviousObjectToWorld(previousMesh.positionOS);
					#else
						float3 previousPositionRWS = TransformPreviousObjectToWorld(effectivePositionOS);
					#endif

					#ifdef ATTRIBUTES_NEED_NORMAL
						float3 normalWS = TransformPreviousObjectToWorldNormal(defaultMesh.normalOS);
					#else
						float3 normalWS = float3(0.0, 0.0, 0.0);
					#endif

					#if defined(HAVE_VERTEX_MODIFICATION)
						ApplyVertexModification(inputMesh, normalWS, previousPositionRWS, _LastTimeParameters.xyz);
					#endif

					VPASSpreviousPositionCS = mul(UNITY_MATRIX_PREV_VP, float4(previousPositionRWS, 1.0));
				}
				#endif

				outputPackedVaryingsMeshToPS.positionCS = TransformWorldToHClip(positionRWS);
				outputPackedVaryingsMeshToPS.positionRWS.xyz = positionRWS;
				outputPackedVaryingsMeshToPS.normalWS.xyz = normalWS;
				outputPackedVaryingsMeshToPS.tangentWS.xyzw = tangentWS;
				outputPackedVaryingsMeshToPS.uv1.xyzw = inputMesh.uv1;
				outputPackedVaryingsMeshToPS.uv2.xyzw = inputMesh.uv2;

				#ifdef _WRITE_TRANSPARENT_MOTION_VECTOR
					outputPackedVaryingsMeshToPS.vpassPositionCS = float3(VPASSpositionCS.xyw);
					outputPackedVaryingsMeshToPS.vpassPreviousPositionCS = float3(VPASSpreviousPositionCS.xyw);
				#endif
				return outputPackedVaryingsMeshToPS;
			}

			#if defined(ASE_TESSELLATION)
			struct VertexControl
			{
				float3 positionOS : INTERNALTESSPOS;
				float3 normalOS : NORMAL;
				float4 tangentOS : TANGENT;
				float4 ase_color : COLOR;
				float4 ase_texcoord : TEXCOORD0;

				UNITY_VERTEX_INPUT_INSTANCE_ID
			};

			struct TessellationFactors
			{
				float edge[3] : SV_TessFactor;
				float inside : SV_InsideTessFactor;
			};

			VertexControl Vert ( AttributesMesh v )
			{
				VertexControl o;
				UNITY_SETUP_INSTANCE_ID(v);
				UNITY_TRANSFER_INSTANCE_ID(v, o);
				o.positionOS = v.positionOS;
				o.normalOS = v.normalOS;
				o.tangentOS = v.tangentOS;
				o.ase_color = v.ase_color;
				o.ase_texcoord = v.ase_texcoord;
				return o;
			}

			TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
			{
				TessellationFactors o;
				float4 tf = 1;
				float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
				float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
				#if (SHADEROPTIONS_CAMERA_RELATIVE_RENDERING != 0)
				float3 cameraPos = 0;
				#else
				float3 cameraPos = _WorldSpaceCameraPos;
				#endif
				#if defined(ASE_FIXED_TESSELLATION)
				tf = FixedTess( tessValue );
				#elif defined(ASE_DISTANCE_TESSELLATION)
				tf = DistanceBasedTess(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), tessValue, tessMin, tessMax, GetObjectToWorldMatrix(), cameraPos );
				#elif defined(ASE_LENGTH_TESSELLATION)
				tf = EdgeLengthBasedTess(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), edgeLength, GetObjectToWorldMatrix(), cameraPos, _ScreenParams );
				#elif defined(ASE_LENGTH_CULL_TESSELLATION)
				tf = EdgeLengthBasedTessCull(float4(v[0].positionOS,1), float4(v[1].positionOS,1), float4(v[2].positionOS,1), edgeLength, tessMaxDisp, GetObjectToWorldMatrix(), cameraPos, _ScreenParams, _FrustumPlanes );
				#endif
				o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
				return o;
			}

			[domain("tri")]
			[partitioning("fractional_odd")]
			[outputtopology("triangle_cw")]
			[patchconstantfunc("TessellationFunction")]
			[outputcontrolpoints(3)]
			VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
			{
			   return patch[id];
			}

			[domain("tri")]
			PackedVaryingsMeshToPS DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
			{
				AttributesMesh o = (AttributesMesh) 0;
				o.positionOS = patch[0].positionOS * bary.x + patch[1].positionOS * bary.y + patch[2].positionOS * bary.z;
				o.normalOS = patch[0].normalOS * bary.x + patch[1].normalOS * bary.y + patch[2].normalOS * bary.z;
				o.tangentOS = patch[0].tangentOS * bary.x + patch[1].tangentOS * bary.y + patch[2].tangentOS * bary.z;
				o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
				o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
				#if defined(ASE_PHONG_TESSELLATION)
				float3 pp[3];
				for (int i = 0; i < 3; ++i)
					pp[i] = o.positionOS.xyz - patch[i].normalOS * (dot(o.positionOS.xyz, patch[i].normalOS) - dot(patch[i].positionOS.xyz, patch[i].normalOS));
				float phongStrength = _TessPhongStrength;
				o.positionOS.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.positionOS.xyz;
				#endif
				UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
				return VertexFunction(o);
			}
			#else
			PackedVaryingsMeshToPS Vert ( AttributesMesh v )
			{
				return VertexFunction( v );
			}
			#endif

			#if defined(WRITE_NORMAL_BUFFER) && defined(WRITE_MSAA_DEPTH)
			#define SV_TARGET_DECAL SV_Target2
			#elif defined(WRITE_NORMAL_BUFFER) || defined(WRITE_MSAA_DEPTH)
			#define SV_TARGET_DECAL SV_Target1
			#else
			#define SV_TARGET_DECAL SV_Target0
			#endif

			void Frag( PackedVaryingsMeshToPS packedInput
						#if defined(SCENESELECTIONPASS) || defined(SCENEPICKINGPASS)
						, out float4 outColor : SV_Target0
						#else
							#ifdef WRITE_MSAA_DEPTH
							, out float4 depthColor : SV_Target0
								#ifdef WRITE_NORMAL_BUFFER
								, out float4 outNormalBuffer : SV_Target1
								#endif
							#else
								#ifdef WRITE_NORMAL_BUFFER
								, out float4 outNormalBuffer : SV_Target0
								#endif
							#endif

							#if (defined(WRITE_DECAL_BUFFER) && !defined(_DISABLE_DECALS)) || defined(WRITE_RENDERING_LAYER)
							, out float4 outDecalBuffer : SV_TARGET_DECAL
							#endif
						#endif

						#if defined(_DEPTHOFFSET_ON) && !defined(SCENEPICKINGPASS)
						, out float outputDepth : DEPTH_OFFSET_SEMANTIC
						#endif
						
					)
			{
			UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(packedInput);
			UNITY_SETUP_INSTANCE_ID(packedInput);

				float3 positionRWS = packedInput.positionRWS.xyz;

				FragInputs input;
				ZERO_INITIALIZE(FragInputs, input);

				input.tangentToWorld = k_identity3x3;
				input.positionSS = packedInput.positionCS;

				input.positionRWS = positionRWS;

				#if _DOUBLESIDED_ON && SHADER_STAGE_FRAGMENT
				input.isFrontFace = IS_FRONT_VFACE( packedInput.cullFace, true, false);
				#elif SHADER_STAGE_FRAGMENT
				#if defined(ASE_NEED_CULLFACE)
				input.isFrontFace = IS_FRONT_VFACE( packedInput.cullFace, true, false );
				#endif
				#endif
				half isFrontFace = input.isFrontFace;

				PositionInputs posInput = GetPositionInput(input.positionSS.xy, _ScreenSize.zw, input.positionSS.z, input.positionSS.w, input.positionRWS);

				float3 V = GetWorldSpaceNormalizeViewDir(input.positionRWS);

				PickingSurfaceDescription surfaceDescription = (PickingSurfaceDescription)0;
				float localCustomAlphaClip19_g118160 = ( 0.0 );
				float localBreakData4_g118158 = ( 0.0 );
				float localCompData3_g118135 = ( 0.0 );
				TVEVisualData Data3_g118135 = (TVEVisualData)0;
				half Dummy594_g118134 = ( _CutoutCategory + _CutoutEnd + _CutoutElementMode + _CutoutBakeInfo );
				float In_Dummy3_g118135 = Dummy594_g118134;
				float localBreakData4_g118145 = ( 0.0 );
				float localCompData3_g118129 = ( 0.0 );
				TVEVisualData Data3_g118129 = (TVEVisualData)0;
				half Dummy145_g118119 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveElementMode + _EmissiveFlagMode );
				float In_Dummy3_g118129 = Dummy145_g118119;
				float localBreakData4_g118128 = ( 0.0 );
				float localCompData3_g118092 = ( 0.0 );
				TVEVisualData Data3_g118092 = (TVEVisualData)0;
				half Dummy594_g118090 = ( _WetnessCategory + _WetnessEnd + _WetnessElementMode + _WetnessBakeInfo );
				float In_Dummy3_g118092 = Dummy594_g118090;
				float localBreakData4_g118091 = ( 0.0 );
				float localCompData3_g118057 = ( 0.0 );
				TVEVisualData Data3_g118057 = (TVEVisualData)0;
				half Dummy594_g118054 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayElementMode + _OverlayBakeInfo );
				float In_Dummy3_g118057 = Dummy594_g118054;
				float localBreakData4_g118055 = ( 0.0 );
				float localCompData3_g118034 = ( 0.0 );
				TVEVisualData Data3_g118034 = (TVEVisualData)0;
				half Dummy205_g118031 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessElementMode + _DrynessBakeInfo );
				float In_Dummy3_g118034 = Dummy205_g118031;
				float localBreakData4_g118033 = ( 0.0 );
				float localCompData3_g118028 = ( 0.0 );
				TVEVisualData Data3_g118028 = (TVEVisualData)0;
				half Dummy205_g118007 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeInfo );
				float In_Dummy3_g118028 = Dummy205_g118007;
				float localBreakData4_g118029 = ( 0.0 );
				float localCompData3_g117894 = ( 0.0 );
				TVEVisualData Data3_g117894 = (TVEVisualData)0;
				half Dummy9163_g117893 = ( _CategoryTerrain + _EndTerrain );
				float In_Dummy3_g117894 = Dummy9163_g117893;
				float localHeightBasedBlending7362_g117895 = ( 0.0 );
				float3 ase_worldPos = GetAbsolutePositionWS( positionRWS );
				float4 appendResult9125_g117895 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
				float4 temp_output_35_0_g118003 = appendResult9125_g117895;
				float2 InputScale48_g118003 = (temp_output_35_0_g118003).zw;
				half2 FinalScale53_g118003 = ( 1.0 / InputScale48_g118003 );
				float2 InputPosition52_g118003 = (temp_output_35_0_g118003).xy;
				half2 FinalPosition58_g118003 = -( FinalScale53_g118003 * InputPosition52_g118003 );
				float2 temp_output_65_0_g118003 = ( ( (ase_worldPos).xz * FinalScale53_g118003 ) + FinalPosition58_g118003 );
				float4 temp_output_70_0_g118003 = _TerrainControlTex1_TexelSize;
				float2 InputTexelSize68_g118003 = (temp_output_70_0_g118003).zw;
				float2 temp_cast_0 = (1.0).xx;
				float2 InputTexelRecip69_g118003 = (temp_output_70_0_g118003).xy;
				float2 Terrain_Control_UV7873_g117895 = ( ( ( temp_output_65_0_g118003 / ( 1.0 / ( InputTexelSize68_g118003 - temp_cast_0 ) ) ) + 0.5 ) * InputTexelRecip69_g118003 );
				half4 Terrain_Control_047365_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_047362_g117895 = Terrain_Control_047365_g117895;
				half4 Terrain_Control_087366_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_087362_g117895 = Terrain_Control_087366_g117895;
				half4 Terrain_Control_127712_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_127362_g117895 = Terrain_Control_127712_g117895;
				half4 Terrain_Control_167711_g117895 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g117895 );
				float4 control_167362_g117895 = Terrain_Control_167711_g117895;
				TEXTURE2D(Texture238_g117940) = _TerrainShaderTex1;
				float localFilterTexture30_g118001 = ( 0.0 );
				SamplerState SamplerDefault30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerPoint30_g118001 = sampler_Point_Repeat;
				SamplerState SamplerLow30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerMedium30_g118001 = sampler_Linear_Repeat;
				SamplerState SamplerHigh30_g118001 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS30_g118001 = SamplerDefault30_g118001;
				#if defined (TVE_FILTER_DEFAULT)
				    SS30_g118001 = SamplerDefault30_g118001;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS30_g118001 = SamplerPoint30_g118001;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS30_g118001 = SamplerLow30_g118001;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS30_g118001 = SamplerMedium30_g118001;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS30_g118001 = SamplerHigh30_g118001;
				#endif
				SamplerState Sampler238_g117940 = SS30_g118001;
				half4 Input_Terrain_Coords_016785_g117895 = _TerrainCoord1;
				float4 temp_output_37_0_g117940 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117940 = temp_output_37_0_g117940;
				half3 Input_Position9197_g117895 = ase_worldPos;
				float3 temp_output_279_0_g117940 = Input_Position9197_g117895;
				half3 WorldPosition238_g117940 = temp_output_279_0_g117940;
				half4 localSamplePlanar2D238_g117940 = SamplePlanar2D( Texture238_g117940 , Sampler238_g117940 , Coords238_g117940 , WorldPosition238_g117940 );
				TEXTURE2D(Texture246_g117940) = _TerrainShaderTex1;
				SamplerState Sampler246_g117940 = SS30_g118001;
				half4 Coords246_g117940 = temp_output_37_0_g117940;
				half3 WorldPosition246_g117940 = temp_output_279_0_g117940;
				half3 Input_Normal9199_g117895 = packedInput.normalWS;
				float3 temp_output_280_0_g117940 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117940 = temp_output_280_0_g117940;
				half4 localSamplePlanar3D246_g117940 = SamplePlanar3D( Texture246_g117940 , Sampler246_g117940 , Coords246_g117940 , WorldPosition246_g117940 , WorldNormal246_g117940 );
				TEXTURE2D(Texture234_g117940) = _TerrainShaderTex1;
				SamplerState Sampler234_g117940 = SS30_g118001;
				float4 Coords234_g117940 = temp_output_37_0_g117940;
				float3 WorldPosition234_g117940 = temp_output_279_0_g117940;
				float4 localSampleStochastic2D234_g117940 = SampleStochastic2D( Texture234_g117940 , Sampler234_g117940 , Coords234_g117940 , WorldPosition234_g117940 );
				TEXTURE2D(Texture263_g117940) = _TerrainShaderTex1;
				SamplerState Sampler263_g117940 = SS30_g118001;
				half4 Coords263_g117940 = temp_output_37_0_g117940;
				half3 WorldPosition263_g117940 = temp_output_279_0_g117940;
				half3 WorldNormal263_g117940 = temp_output_280_0_g117940;
				half4 localSampleStochastic3D263_g117940 = SampleStochastic3D( Texture263_g117940 , Sampler263_g117940 , Coords263_g117940 , WorldPosition263_g117940 , WorldNormal263_g117940 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8639_g117895 = localSamplePlanar2D238_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8639_g117895 = localSamplePlanar3D246_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8639_g117895 = localSampleStochastic2D234_g117940;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8639_g117895 = localSampleStochastic3D263_g117940;
				#else
				float4 staticSwitch8639_g117895 = localSamplePlanar2D238_g117940;
				#endif
				float4 temp_output_7_0_g117897 = _TerrainShaderMin1;
				float4 temp_output_10_0_g117897 = ( _TerrainShaderMax1 - temp_output_7_0_g117897 );
				float4 temp_output_6970_0_g117895 = saturate( ( ( staticSwitch8639_g117895 - temp_output_7_0_g117897 ) / ( temp_output_10_0_g117897 + 0.0001 ) ) );
				half4 Masks_015_g117901 = temp_output_6970_0_g117895;
				TEXTURE2D(Texture238_g117944) = _TerrainShaderTex2;
				SamplerState Sampler238_g117944 = SS30_g118001;
				half4 Input_Terrain_Coords_026787_g117895 = _TerrainCoord2;
				float4 temp_output_37_0_g117944 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117944 = temp_output_37_0_g117944;
				float3 temp_output_279_0_g117944 = Input_Position9197_g117895;
				half3 WorldPosition238_g117944 = temp_output_279_0_g117944;
				half4 localSamplePlanar2D238_g117944 = SamplePlanar2D( Texture238_g117944 , Sampler238_g117944 , Coords238_g117944 , WorldPosition238_g117944 );
				TEXTURE2D(Texture246_g117944) = _TerrainShaderTex2;
				SamplerState Sampler246_g117944 = SS30_g118001;
				half4 Coords246_g117944 = temp_output_37_0_g117944;
				half3 WorldPosition246_g117944 = temp_output_279_0_g117944;
				float3 temp_output_280_0_g117944 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117944 = temp_output_280_0_g117944;
				half4 localSamplePlanar3D246_g117944 = SamplePlanar3D( Texture246_g117944 , Sampler246_g117944 , Coords246_g117944 , WorldPosition246_g117944 , WorldNormal246_g117944 );
				TEXTURE2D(Texture234_g117944) = _TerrainShaderTex2;
				SamplerState Sampler234_g117944 = SS30_g118001;
				float4 Coords234_g117944 = temp_output_37_0_g117944;
				float3 WorldPosition234_g117944 = temp_output_279_0_g117944;
				float4 localSampleStochastic2D234_g117944 = SampleStochastic2D( Texture234_g117944 , Sampler234_g117944 , Coords234_g117944 , WorldPosition234_g117944 );
				TEXTURE2D(Texture263_g117944) = _TerrainShaderTex2;
				SamplerState Sampler263_g117944 = SS30_g118001;
				half4 Coords263_g117944 = temp_output_37_0_g117944;
				half3 WorldPosition263_g117944 = temp_output_279_0_g117944;
				half3 WorldNormal263_g117944 = temp_output_280_0_g117944;
				half4 localSampleStochastic3D263_g117944 = SampleStochastic3D( Texture263_g117944 , Sampler263_g117944 , Coords263_g117944 , WorldPosition263_g117944 , WorldNormal263_g117944 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8640_g117895 = localSamplePlanar2D238_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8640_g117895 = localSamplePlanar3D246_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8640_g117895 = localSampleStochastic2D234_g117944;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8640_g117895 = localSampleStochastic3D263_g117944;
				#else
				float4 staticSwitch8640_g117895 = localSamplePlanar2D238_g117944;
				#endif
				float4 temp_output_7_0_g117907 = _TerrainShaderMin2;
				float4 temp_output_10_0_g117907 = ( _TerrainShaderMax2 - temp_output_7_0_g117907 );
				float4 temp_output_6977_0_g117895 = saturate( ( ( staticSwitch8640_g117895 - temp_output_7_0_g117907 ) / ( temp_output_10_0_g117907 + 0.0001 ) ) );
				half4 Masks_0210_g117901 = temp_output_6977_0_g117895;
				TEXTURE2D(Texture238_g117949) = _TerrainShaderTex3;
				SamplerState Sampler238_g117949 = SS30_g118001;
				half4 Input_Terrain_Coords_036789_g117895 = _TerrainCoord3;
				float4 temp_output_37_0_g117949 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117949 = temp_output_37_0_g117949;
				float3 temp_output_279_0_g117949 = Input_Position9197_g117895;
				half3 WorldPosition238_g117949 = temp_output_279_0_g117949;
				half4 localSamplePlanar2D238_g117949 = SamplePlanar2D( Texture238_g117949 , Sampler238_g117949 , Coords238_g117949 , WorldPosition238_g117949 );
				TEXTURE2D(Texture246_g117949) = _TerrainShaderTex3;
				SamplerState Sampler246_g117949 = SS30_g118001;
				half4 Coords246_g117949 = temp_output_37_0_g117949;
				half3 WorldPosition246_g117949 = temp_output_279_0_g117949;
				float3 temp_output_280_0_g117949 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117949 = temp_output_280_0_g117949;
				half4 localSamplePlanar3D246_g117949 = SamplePlanar3D( Texture246_g117949 , Sampler246_g117949 , Coords246_g117949 , WorldPosition246_g117949 , WorldNormal246_g117949 );
				TEXTURE2D(Texture234_g117949) = _TerrainShaderTex3;
				SamplerState Sampler234_g117949 = SS30_g118001;
				float4 Coords234_g117949 = temp_output_37_0_g117949;
				float3 WorldPosition234_g117949 = temp_output_279_0_g117949;
				float4 localSampleStochastic2D234_g117949 = SampleStochastic2D( Texture234_g117949 , Sampler234_g117949 , Coords234_g117949 , WorldPosition234_g117949 );
				TEXTURE2D(Texture263_g117949) = _TerrainShaderTex3;
				SamplerState Sampler263_g117949 = SS30_g118001;
				half4 Coords263_g117949 = temp_output_37_0_g117949;
				half3 WorldPosition263_g117949 = temp_output_279_0_g117949;
				half3 WorldNormal263_g117949 = temp_output_280_0_g117949;
				half4 localSampleStochastic3D263_g117949 = SampleStochastic3D( Texture263_g117949 , Sampler263_g117949 , Coords263_g117949 , WorldPosition263_g117949 , WorldNormal263_g117949 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8641_g117895 = localSamplePlanar2D238_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8641_g117895 = localSamplePlanar3D246_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8641_g117895 = localSampleStochastic2D234_g117949;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8641_g117895 = localSampleStochastic3D263_g117949;
				#else
				float4 staticSwitch8641_g117895 = localSamplePlanar2D238_g117949;
				#endif
				float4 temp_output_7_0_g117908 = _TerrainShaderMin3;
				float4 temp_output_10_0_g117908 = ( _TerrainShaderMax3 - temp_output_7_0_g117908 );
				float4 temp_output_6978_0_g117895 = saturate( ( ( staticSwitch8641_g117895 - temp_output_7_0_g117908 ) / ( temp_output_10_0_g117908 + 0.0001 ) ) );
				half4 Masks_0312_g117901 = temp_output_6978_0_g117895;
				TEXTURE2D(Texture238_g117950) = _TerrainShaderTex4;
				SamplerState Sampler238_g117950 = SS30_g118001;
				half4 Input_Terrain_Coords_046791_g117895 = _TerrainCoord4;
				float4 temp_output_37_0_g117950 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117950 = temp_output_37_0_g117950;
				float3 temp_output_279_0_g117950 = Input_Position9197_g117895;
				half3 WorldPosition238_g117950 = temp_output_279_0_g117950;
				half4 localSamplePlanar2D238_g117950 = SamplePlanar2D( Texture238_g117950 , Sampler238_g117950 , Coords238_g117950 , WorldPosition238_g117950 );
				TEXTURE2D(Texture246_g117950) = _TerrainShaderTex4;
				SamplerState Sampler246_g117950 = SS30_g118001;
				half4 Coords246_g117950 = temp_output_37_0_g117950;
				half3 WorldPosition246_g117950 = temp_output_279_0_g117950;
				float3 temp_output_280_0_g117950 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117950 = temp_output_280_0_g117950;
				half4 localSamplePlanar3D246_g117950 = SamplePlanar3D( Texture246_g117950 , Sampler246_g117950 , Coords246_g117950 , WorldPosition246_g117950 , WorldNormal246_g117950 );
				TEXTURE2D(Texture234_g117950) = _TerrainShaderTex4;
				SamplerState Sampler234_g117950 = SS30_g118001;
				float4 Coords234_g117950 = temp_output_37_0_g117950;
				float3 WorldPosition234_g117950 = temp_output_279_0_g117950;
				float4 localSampleStochastic2D234_g117950 = SampleStochastic2D( Texture234_g117950 , Sampler234_g117950 , Coords234_g117950 , WorldPosition234_g117950 );
				TEXTURE2D(Texture263_g117950) = _TerrainShaderTex4;
				SamplerState Sampler263_g117950 = SS30_g118001;
				half4 Coords263_g117950 = temp_output_37_0_g117950;
				half3 WorldPosition263_g117950 = temp_output_279_0_g117950;
				half3 WorldNormal263_g117950 = temp_output_280_0_g117950;
				half4 localSampleStochastic3D263_g117950 = SampleStochastic3D( Texture263_g117950 , Sampler263_g117950 , Coords263_g117950 , WorldPosition263_g117950 , WorldNormal263_g117950 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8642_g117895 = localSamplePlanar2D238_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8642_g117895 = localSamplePlanar3D246_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8642_g117895 = localSampleStochastic2D234_g117950;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8642_g117895 = localSampleStochastic3D263_g117950;
				#else
				float4 staticSwitch8642_g117895 = localSamplePlanar2D238_g117950;
				#endif
				float4 temp_output_7_0_g117909 = _TerrainShaderMin4;
				float4 temp_output_10_0_g117909 = ( _TerrainShaderMax4 - temp_output_7_0_g117909 );
				float4 temp_output_6983_0_g117895 = saturate( ( ( staticSwitch8642_g117895 - temp_output_7_0_g117909 ) / ( temp_output_10_0_g117909 + 0.0001 ) ) );
				half4 Masks_0414_g117901 = temp_output_6983_0_g117895;
				float4 appendResult29_g117901 = (float4((Masks_015_g117901).z , (Masks_0210_g117901).z , (Masks_0312_g117901).z , (Masks_0414_g117901).z));
				half4 Control31_g117901 = Terrain_Control_047365_g117895;
				half4 Terrain_Height_047210_g117895 = ( appendResult29_g117901 * Control31_g117901 );
				float4 heights_047362_g117895 = Terrain_Height_047210_g117895;
				TEXTURE2D(Texture238_g117953) = _TerrainShaderTex5;
				SamplerState Sampler238_g117953 = SS30_g118001;
				half4 Input_Terrain_Coords_058750_g117895 = _TerrainCoord5;
				float4 temp_output_37_0_g117953 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117953 = temp_output_37_0_g117953;
				float3 temp_output_279_0_g117953 = Input_Position9197_g117895;
				half3 WorldPosition238_g117953 = temp_output_279_0_g117953;
				half4 localSamplePlanar2D238_g117953 = SamplePlanar2D( Texture238_g117953 , Sampler238_g117953 , Coords238_g117953 , WorldPosition238_g117953 );
				TEXTURE2D(Texture246_g117953) = _TerrainShaderTex5;
				SamplerState Sampler246_g117953 = SS30_g118001;
				half4 Coords246_g117953 = temp_output_37_0_g117953;
				half3 WorldPosition246_g117953 = temp_output_279_0_g117953;
				float3 temp_output_280_0_g117953 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117953 = temp_output_280_0_g117953;
				half4 localSamplePlanar3D246_g117953 = SamplePlanar3D( Texture246_g117953 , Sampler246_g117953 , Coords246_g117953 , WorldPosition246_g117953 , WorldNormal246_g117953 );
				TEXTURE2D(Texture234_g117953) = _TerrainShaderTex5;
				SamplerState Sampler234_g117953 = SS30_g118001;
				float4 Coords234_g117953 = temp_output_37_0_g117953;
				float3 WorldPosition234_g117953 = temp_output_279_0_g117953;
				float4 localSampleStochastic2D234_g117953 = SampleStochastic2D( Texture234_g117953 , Sampler234_g117953 , Coords234_g117953 , WorldPosition234_g117953 );
				TEXTURE2D(Texture263_g117953) = _TerrainShaderTex5;
				SamplerState Sampler263_g117953 = SS30_g118001;
				half4 Coords263_g117953 = temp_output_37_0_g117953;
				half3 WorldPosition263_g117953 = temp_output_279_0_g117953;
				half3 WorldNormal263_g117953 = temp_output_280_0_g117953;
				half4 localSampleStochastic3D263_g117953 = SampleStochastic3D( Texture263_g117953 , Sampler263_g117953 , Coords263_g117953 , WorldPosition263_g117953 , WorldNormal263_g117953 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8710_g117895 = localSamplePlanar2D238_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8710_g117895 = localSamplePlanar3D246_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8710_g117895 = localSampleStochastic2D234_g117953;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8710_g117895 = localSampleStochastic3D263_g117953;
				#else
				float4 staticSwitch8710_g117895 = localSamplePlanar2D238_g117953;
				#endif
				float4 temp_output_7_0_g117912 = _TerrainShaderMin5;
				float4 temp_output_10_0_g117912 = ( _TerrainShaderMax5 - temp_output_7_0_g117912 );
				float4 temp_output_8714_0_g117895 = saturate( ( ( staticSwitch8710_g117895 - temp_output_7_0_g117912 ) / ( temp_output_10_0_g117912 + 0.0001 ) ) );
				half4 Masks_015_g117913 = temp_output_8714_0_g117895;
				TEXTURE2D(Texture238_g117984) = _TerrainShaderTex6;
				SamplerState Sampler238_g117984 = SS30_g118001;
				half4 Input_Terrain_Coords_068751_g117895 = _TerrainCoord6;
				float4 temp_output_37_0_g117984 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117984 = temp_output_37_0_g117984;
				float3 temp_output_279_0_g117984 = Input_Position9197_g117895;
				half3 WorldPosition238_g117984 = temp_output_279_0_g117984;
				half4 localSamplePlanar2D238_g117984 = SamplePlanar2D( Texture238_g117984 , Sampler238_g117984 , Coords238_g117984 , WorldPosition238_g117984 );
				TEXTURE2D(Texture246_g117984) = _TerrainShaderTex6;
				SamplerState Sampler246_g117984 = SS30_g118001;
				half4 Coords246_g117984 = temp_output_37_0_g117984;
				half3 WorldPosition246_g117984 = temp_output_279_0_g117984;
				float3 temp_output_280_0_g117984 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117984 = temp_output_280_0_g117984;
				half4 localSamplePlanar3D246_g117984 = SamplePlanar3D( Texture246_g117984 , Sampler246_g117984 , Coords246_g117984 , WorldPosition246_g117984 , WorldNormal246_g117984 );
				TEXTURE2D(Texture234_g117984) = _TerrainShaderTex6;
				SamplerState Sampler234_g117984 = SS30_g118001;
				float4 Coords234_g117984 = temp_output_37_0_g117984;
				float3 WorldPosition234_g117984 = temp_output_279_0_g117984;
				float4 localSampleStochastic2D234_g117984 = SampleStochastic2D( Texture234_g117984 , Sampler234_g117984 , Coords234_g117984 , WorldPosition234_g117984 );
				TEXTURE2D(Texture263_g117984) = _TerrainShaderTex6;
				SamplerState Sampler263_g117984 = SS30_g118001;
				half4 Coords263_g117984 = temp_output_37_0_g117984;
				half3 WorldPosition263_g117984 = temp_output_279_0_g117984;
				half3 WorldNormal263_g117984 = temp_output_280_0_g117984;
				half4 localSampleStochastic3D263_g117984 = SampleStochastic3D( Texture263_g117984 , Sampler263_g117984 , Coords263_g117984 , WorldPosition263_g117984 , WorldNormal263_g117984 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8711_g117895 = localSamplePlanar2D238_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8711_g117895 = localSamplePlanar3D246_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8711_g117895 = localSampleStochastic2D234_g117984;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8711_g117895 = localSampleStochastic3D263_g117984;
				#else
				float4 staticSwitch8711_g117895 = localSamplePlanar2D238_g117984;
				#endif
				float4 temp_output_7_0_g117937 = _TerrainShaderMin6;
				float4 temp_output_10_0_g117937 = ( _TerrainShaderMax6 - temp_output_7_0_g117937 );
				float4 temp_output_8721_0_g117895 = saturate( ( ( staticSwitch8711_g117895 - temp_output_7_0_g117937 ) / ( temp_output_10_0_g117937 + 0.0001 ) ) );
				half4 Masks_0210_g117913 = temp_output_8721_0_g117895;
				TEXTURE2D(Texture238_g117985) = _TerrainShaderTex7;
				SamplerState Sampler238_g117985 = SS30_g118001;
				half4 Input_Terrain_Coords_078752_g117895 = _TerrainCoord7;
				float4 temp_output_37_0_g117985 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117985 = temp_output_37_0_g117985;
				float3 temp_output_279_0_g117985 = Input_Position9197_g117895;
				half3 WorldPosition238_g117985 = temp_output_279_0_g117985;
				half4 localSamplePlanar2D238_g117985 = SamplePlanar2D( Texture238_g117985 , Sampler238_g117985 , Coords238_g117985 , WorldPosition238_g117985 );
				TEXTURE2D(Texture246_g117985) = _TerrainShaderTex7;
				SamplerState Sampler246_g117985 = SS30_g118001;
				half4 Coords246_g117985 = temp_output_37_0_g117985;
				half3 WorldPosition246_g117985 = temp_output_279_0_g117985;
				float3 temp_output_280_0_g117985 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117985 = temp_output_280_0_g117985;
				half4 localSamplePlanar3D246_g117985 = SamplePlanar3D( Texture246_g117985 , Sampler246_g117985 , Coords246_g117985 , WorldPosition246_g117985 , WorldNormal246_g117985 );
				TEXTURE2D(Texture234_g117985) = _TerrainShaderTex7;
				SamplerState Sampler234_g117985 = SS30_g118001;
				float4 Coords234_g117985 = temp_output_37_0_g117985;
				float3 WorldPosition234_g117985 = temp_output_279_0_g117985;
				float4 localSampleStochastic2D234_g117985 = SampleStochastic2D( Texture234_g117985 , Sampler234_g117985 , Coords234_g117985 , WorldPosition234_g117985 );
				TEXTURE2D(Texture263_g117985) = _TerrainShaderTex7;
				SamplerState Sampler263_g117985 = SS30_g118001;
				half4 Coords263_g117985 = temp_output_37_0_g117985;
				half3 WorldPosition263_g117985 = temp_output_279_0_g117985;
				half3 WorldNormal263_g117985 = temp_output_280_0_g117985;
				half4 localSampleStochastic3D263_g117985 = SampleStochastic3D( Texture263_g117985 , Sampler263_g117985 , Coords263_g117985 , WorldPosition263_g117985 , WorldNormal263_g117985 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8712_g117895 = localSamplePlanar2D238_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8712_g117895 = localSamplePlanar3D246_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8712_g117895 = localSampleStochastic2D234_g117985;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8712_g117895 = localSampleStochastic3D263_g117985;
				#else
				float4 staticSwitch8712_g117895 = localSamplePlanar2D238_g117985;
				#endif
				float4 temp_output_7_0_g117938 = _TerrainShaderMin7;
				float4 temp_output_10_0_g117938 = ( _TerrainShaderMax7 - temp_output_7_0_g117938 );
				float4 temp_output_8724_0_g117895 = saturate( ( ( staticSwitch8712_g117895 - temp_output_7_0_g117938 ) / ( temp_output_10_0_g117938 + 0.0001 ) ) );
				half4 Masks_0312_g117913 = temp_output_8724_0_g117895;
				TEXTURE2D(Texture238_g117986) = _TerrainShaderTex8;
				SamplerState Sampler238_g117986 = SS30_g118001;
				half4 Input_Terrain_Coords_088749_g117895 = _TerrainCoord8;
				float4 temp_output_37_0_g117986 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117986 = temp_output_37_0_g117986;
				float3 temp_output_279_0_g117986 = Input_Position9197_g117895;
				half3 WorldPosition238_g117986 = temp_output_279_0_g117986;
				half4 localSamplePlanar2D238_g117986 = SamplePlanar2D( Texture238_g117986 , Sampler238_g117986 , Coords238_g117986 , WorldPosition238_g117986 );
				TEXTURE2D(Texture246_g117986) = _TerrainShaderTex8;
				SamplerState Sampler246_g117986 = SS30_g118001;
				half4 Coords246_g117986 = temp_output_37_0_g117986;
				half3 WorldPosition246_g117986 = temp_output_279_0_g117986;
				float3 temp_output_280_0_g117986 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117986 = temp_output_280_0_g117986;
				half4 localSamplePlanar3D246_g117986 = SamplePlanar3D( Texture246_g117986 , Sampler246_g117986 , Coords246_g117986 , WorldPosition246_g117986 , WorldNormal246_g117986 );
				TEXTURE2D(Texture234_g117986) = _TerrainShaderTex8;
				SamplerState Sampler234_g117986 = SS30_g118001;
				float4 Coords234_g117986 = temp_output_37_0_g117986;
				float3 WorldPosition234_g117986 = temp_output_279_0_g117986;
				float4 localSampleStochastic2D234_g117986 = SampleStochastic2D( Texture234_g117986 , Sampler234_g117986 , Coords234_g117986 , WorldPosition234_g117986 );
				TEXTURE2D(Texture263_g117986) = _TerrainShaderTex8;
				SamplerState Sampler263_g117986 = SS30_g118001;
				half4 Coords263_g117986 = temp_output_37_0_g117986;
				half3 WorldPosition263_g117986 = temp_output_279_0_g117986;
				half3 WorldNormal263_g117986 = temp_output_280_0_g117986;
				half4 localSampleStochastic3D263_g117986 = SampleStochastic3D( Texture263_g117986 , Sampler263_g117986 , Coords263_g117986 , WorldPosition263_g117986 , WorldNormal263_g117986 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8713_g117895 = localSamplePlanar2D238_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8713_g117895 = localSamplePlanar3D246_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8713_g117895 = localSampleStochastic2D234_g117986;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8713_g117895 = localSampleStochastic3D263_g117986;
				#else
				float4 staticSwitch8713_g117895 = localSamplePlanar2D238_g117986;
				#endif
				float4 temp_output_7_0_g117939 = _TerrainShaderMin8;
				float4 temp_output_10_0_g117939 = ( _TerrainShaderMax8 - temp_output_7_0_g117939 );
				float4 temp_output_8727_0_g117895 = saturate( ( ( staticSwitch8713_g117895 - temp_output_7_0_g117939 ) / ( temp_output_10_0_g117939 + 0.0001 ) ) );
				half4 Masks_0414_g117913 = temp_output_8727_0_g117895;
				float4 appendResult29_g117913 = (float4((Masks_015_g117913).z , (Masks_0210_g117913).z , (Masks_0312_g117913).z , (Masks_0414_g117913).z));
				half4 Control31_g117913 = Terrain_Control_087366_g117895;
				half4 Terrain_Height_088731_g117895 = ( appendResult29_g117913 * Control31_g117913 );
				float4 heights_087362_g117895 = Terrain_Height_088731_g117895;
				TEXTURE2D(Texture238_g117956) = _TerrainShaderTex9;
				SamplerState Sampler238_g117956 = SS30_g118001;
				half4 Input_Terrain_Coords_098833_g117895 = _TerrainCoord9;
				float4 temp_output_37_0_g117956 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117956 = temp_output_37_0_g117956;
				float3 temp_output_279_0_g117956 = Input_Position9197_g117895;
				half3 WorldPosition238_g117956 = temp_output_279_0_g117956;
				half4 localSamplePlanar2D238_g117956 = SamplePlanar2D( Texture238_g117956 , Sampler238_g117956 , Coords238_g117956 , WorldPosition238_g117956 );
				TEXTURE2D(Texture246_g117956) = _TerrainShaderTex9;
				SamplerState Sampler246_g117956 = SS30_g118001;
				half4 Coords246_g117956 = temp_output_37_0_g117956;
				half3 WorldPosition246_g117956 = temp_output_279_0_g117956;
				float3 temp_output_280_0_g117956 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117956 = temp_output_280_0_g117956;
				half4 localSamplePlanar3D246_g117956 = SamplePlanar3D( Texture246_g117956 , Sampler246_g117956 , Coords246_g117956 , WorldPosition246_g117956 , WorldNormal246_g117956 );
				TEXTURE2D(Texture234_g117956) = _TerrainShaderTex9;
				SamplerState Sampler234_g117956 = SS30_g118001;
				float4 Coords234_g117956 = temp_output_37_0_g117956;
				float3 WorldPosition234_g117956 = temp_output_279_0_g117956;
				float4 localSampleStochastic2D234_g117956 = SampleStochastic2D( Texture234_g117956 , Sampler234_g117956 , Coords234_g117956 , WorldPosition234_g117956 );
				TEXTURE2D(Texture263_g117956) = _TerrainShaderTex9;
				SamplerState Sampler263_g117956 = SS30_g118001;
				half4 Coords263_g117956 = temp_output_37_0_g117956;
				half3 WorldPosition263_g117956 = temp_output_279_0_g117956;
				half3 WorldNormal263_g117956 = temp_output_280_0_g117956;
				half4 localSampleStochastic3D263_g117956 = SampleStochastic3D( Texture263_g117956 , Sampler263_g117956 , Coords263_g117956 , WorldPosition263_g117956 , WorldNormal263_g117956 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8878_g117895 = localSamplePlanar2D238_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8878_g117895 = localSamplePlanar3D246_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8878_g117895 = localSampleStochastic2D234_g117956;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8878_g117895 = localSampleStochastic3D263_g117956;
				#else
				float4 staticSwitch8878_g117895 = localSamplePlanar2D238_g117956;
				#endif
				float4 temp_output_7_0_g117919 = _TerrainShaderMin9;
				float4 temp_output_10_0_g117919 = ( _TerrainShaderMax9 - temp_output_7_0_g117919 );
				float4 temp_output_8815_0_g117895 = saturate( ( ( staticSwitch8878_g117895 - temp_output_7_0_g117919 ) / ( temp_output_10_0_g117919 + 0.0001 ) ) );
				half4 Masks_015_g117920 = temp_output_8815_0_g117895;
				TEXTURE2D(Texture238_g117966) = _TerrainShaderTex10;
				SamplerState Sampler238_g117966 = SS30_g118001;
				half4 Input_Terrain_Coords_108834_g117895 = _TerrainCoord10;
				float4 temp_output_37_0_g117966 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117966 = temp_output_37_0_g117966;
				float3 temp_output_279_0_g117966 = Input_Position9197_g117895;
				half3 WorldPosition238_g117966 = temp_output_279_0_g117966;
				half4 localSamplePlanar2D238_g117966 = SamplePlanar2D( Texture238_g117966 , Sampler238_g117966 , Coords238_g117966 , WorldPosition238_g117966 );
				TEXTURE2D(Texture246_g117966) = _TerrainShaderTex10;
				SamplerState Sampler246_g117966 = SS30_g118001;
				half4 Coords246_g117966 = temp_output_37_0_g117966;
				half3 WorldPosition246_g117966 = temp_output_279_0_g117966;
				float3 temp_output_280_0_g117966 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117966 = temp_output_280_0_g117966;
				half4 localSamplePlanar3D246_g117966 = SamplePlanar3D( Texture246_g117966 , Sampler246_g117966 , Coords246_g117966 , WorldPosition246_g117966 , WorldNormal246_g117966 );
				TEXTURE2D(Texture234_g117966) = _TerrainShaderTex10;
				SamplerState Sampler234_g117966 = SS30_g118001;
				float4 Coords234_g117966 = temp_output_37_0_g117966;
				float3 WorldPosition234_g117966 = temp_output_279_0_g117966;
				float4 localSampleStochastic2D234_g117966 = SampleStochastic2D( Texture234_g117966 , Sampler234_g117966 , Coords234_g117966 , WorldPosition234_g117966 );
				TEXTURE2D(Texture263_g117966) = _TerrainShaderTex10;
				SamplerState Sampler263_g117966 = SS30_g118001;
				half4 Coords263_g117966 = temp_output_37_0_g117966;
				half3 WorldPosition263_g117966 = temp_output_279_0_g117966;
				half3 WorldNormal263_g117966 = temp_output_280_0_g117966;
				half4 localSampleStochastic3D263_g117966 = SampleStochastic3D( Texture263_g117966 , Sampler263_g117966 , Coords263_g117966 , WorldPosition263_g117966 , WorldNormal263_g117966 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8860_g117895 = localSamplePlanar2D238_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8860_g117895 = localSamplePlanar3D246_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8860_g117895 = localSampleStochastic2D234_g117966;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8860_g117895 = localSampleStochastic3D263_g117966;
				#else
				float4 staticSwitch8860_g117895 = localSamplePlanar2D238_g117966;
				#endif
				float4 temp_output_7_0_g117931 = _TerrainShaderMin10;
				float4 temp_output_10_0_g117931 = ( _TerrainShaderMax10 - temp_output_7_0_g117931 );
				float4 temp_output_8818_0_g117895 = saturate( ( ( staticSwitch8860_g117895 - temp_output_7_0_g117931 ) / ( temp_output_10_0_g117931 + 0.0001 ) ) );
				half4 Masks_0210_g117920 = temp_output_8818_0_g117895;
				TEXTURE2D(Texture238_g117967) = _TerrainShaderTex11;
				SamplerState Sampler238_g117967 = SS30_g118001;
				half4 Input_Terrain_Coords_118835_g117895 = _TerrainCoord11;
				float4 temp_output_37_0_g117967 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117967 = temp_output_37_0_g117967;
				float3 temp_output_279_0_g117967 = Input_Position9197_g117895;
				half3 WorldPosition238_g117967 = temp_output_279_0_g117967;
				half4 localSamplePlanar2D238_g117967 = SamplePlanar2D( Texture238_g117967 , Sampler238_g117967 , Coords238_g117967 , WorldPosition238_g117967 );
				TEXTURE2D(Texture246_g117967) = _TerrainShaderTex11;
				SamplerState Sampler246_g117967 = SS30_g118001;
				half4 Coords246_g117967 = temp_output_37_0_g117967;
				half3 WorldPosition246_g117967 = temp_output_279_0_g117967;
				float3 temp_output_280_0_g117967 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117967 = temp_output_280_0_g117967;
				half4 localSamplePlanar3D246_g117967 = SamplePlanar3D( Texture246_g117967 , Sampler246_g117967 , Coords246_g117967 , WorldPosition246_g117967 , WorldNormal246_g117967 );
				TEXTURE2D(Texture234_g117967) = _TerrainShaderTex11;
				SamplerState Sampler234_g117967 = SS30_g118001;
				float4 Coords234_g117967 = temp_output_37_0_g117967;
				float3 WorldPosition234_g117967 = temp_output_279_0_g117967;
				float4 localSampleStochastic2D234_g117967 = SampleStochastic2D( Texture234_g117967 , Sampler234_g117967 , Coords234_g117967 , WorldPosition234_g117967 );
				TEXTURE2D(Texture263_g117967) = _TerrainShaderTex11;
				SamplerState Sampler263_g117967 = SS30_g118001;
				half4 Coords263_g117967 = temp_output_37_0_g117967;
				half3 WorldPosition263_g117967 = temp_output_279_0_g117967;
				half3 WorldNormal263_g117967 = temp_output_280_0_g117967;
				half4 localSampleStochastic3D263_g117967 = SampleStochastic3D( Texture263_g117967 , Sampler263_g117967 , Coords263_g117967 , WorldPosition263_g117967 , WorldNormal263_g117967 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8861_g117895 = localSamplePlanar2D238_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8861_g117895 = localSamplePlanar3D246_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8861_g117895 = localSampleStochastic2D234_g117967;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8861_g117895 = localSampleStochastic3D263_g117967;
				#else
				float4 staticSwitch8861_g117895 = localSamplePlanar2D238_g117967;
				#endif
				float4 temp_output_7_0_g117932 = _TerrainShaderMin11;
				float4 temp_output_10_0_g117932 = ( _TerrainShaderMax11 - temp_output_7_0_g117932 );
				float4 temp_output_8819_0_g117895 = saturate( ( ( staticSwitch8861_g117895 - temp_output_7_0_g117932 ) / ( temp_output_10_0_g117932 + 0.0001 ) ) );
				half4 Masks_0312_g117920 = temp_output_8819_0_g117895;
				TEXTURE2D(Texture238_g117968) = _TerrainShaderTex12;
				SamplerState Sampler238_g117968 = SS30_g118001;
				half4 Input_Terrain_Coords_128836_g117895 = _TerrainCoord12;
				float4 temp_output_37_0_g117968 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117968 = temp_output_37_0_g117968;
				float3 temp_output_279_0_g117968 = Input_Position9197_g117895;
				half3 WorldPosition238_g117968 = temp_output_279_0_g117968;
				half4 localSamplePlanar2D238_g117968 = SamplePlanar2D( Texture238_g117968 , Sampler238_g117968 , Coords238_g117968 , WorldPosition238_g117968 );
				TEXTURE2D(Texture246_g117968) = _TerrainShaderTex12;
				SamplerState Sampler246_g117968 = SS30_g118001;
				half4 Coords246_g117968 = temp_output_37_0_g117968;
				half3 WorldPosition246_g117968 = temp_output_279_0_g117968;
				float3 temp_output_280_0_g117968 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117968 = temp_output_280_0_g117968;
				half4 localSamplePlanar3D246_g117968 = SamplePlanar3D( Texture246_g117968 , Sampler246_g117968 , Coords246_g117968 , WorldPosition246_g117968 , WorldNormal246_g117968 );
				TEXTURE2D(Texture234_g117968) = _TerrainShaderTex12;
				SamplerState Sampler234_g117968 = SS30_g118001;
				float4 Coords234_g117968 = temp_output_37_0_g117968;
				float3 WorldPosition234_g117968 = temp_output_279_0_g117968;
				float4 localSampleStochastic2D234_g117968 = SampleStochastic2D( Texture234_g117968 , Sampler234_g117968 , Coords234_g117968 , WorldPosition234_g117968 );
				TEXTURE2D(Texture263_g117968) = _TerrainShaderTex12;
				SamplerState Sampler263_g117968 = SS30_g118001;
				half4 Coords263_g117968 = temp_output_37_0_g117968;
				half3 WorldPosition263_g117968 = temp_output_279_0_g117968;
				half3 WorldNormal263_g117968 = temp_output_280_0_g117968;
				half4 localSampleStochastic3D263_g117968 = SampleStochastic3D( Texture263_g117968 , Sampler263_g117968 , Coords263_g117968 , WorldPosition263_g117968 , WorldNormal263_g117968 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8879_g117895 = localSamplePlanar2D238_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8879_g117895 = localSamplePlanar3D246_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8879_g117895 = localSampleStochastic2D234_g117968;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8879_g117895 = localSampleStochastic3D263_g117968;
				#else
				float4 staticSwitch8879_g117895 = localSamplePlanar2D238_g117968;
				#endif
				float4 temp_output_7_0_g117933 = _TerrainShaderMin12;
				float4 temp_output_10_0_g117933 = ( _TerrainShaderMax12 - temp_output_7_0_g117933 );
				float4 temp_output_8820_0_g117895 = saturate( ( ( staticSwitch8879_g117895 - temp_output_7_0_g117933 ) / ( temp_output_10_0_g117933 + 0.0001 ) ) );
				half4 Masks_0414_g117920 = temp_output_8820_0_g117895;
				float4 appendResult29_g117920 = (float4((Masks_015_g117920).z , (Masks_0210_g117920).z , (Masks_0312_g117920).z , (Masks_0414_g117920).z));
				half4 Control31_g117920 = Terrain_Control_127712_g117895;
				half4 Terrain_Height_128870_g117895 = ( appendResult29_g117920 * Control31_g117920 );
				float4 heights_127362_g117895 = Terrain_Height_128870_g117895;
				TEXTURE2D(Texture238_g117964) = _TerrainShaderTex13;
				SamplerState Sampler238_g117964 = SS30_g118001;
				half4 Input_Terrain_Coords_138960_g117895 = _TerrainCoord13;
				float4 temp_output_37_0_g117964 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117964 = temp_output_37_0_g117964;
				float3 temp_output_279_0_g117964 = Input_Position9197_g117895;
				half3 WorldPosition238_g117964 = temp_output_279_0_g117964;
				half4 localSamplePlanar2D238_g117964 = SamplePlanar2D( Texture238_g117964 , Sampler238_g117964 , Coords238_g117964 , WorldPosition238_g117964 );
				TEXTURE2D(Texture246_g117964) = _TerrainShaderTex13;
				SamplerState Sampler246_g117964 = SS30_g118001;
				half4 Coords246_g117964 = temp_output_37_0_g117964;
				half3 WorldPosition246_g117964 = temp_output_279_0_g117964;
				float3 temp_output_280_0_g117964 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117964 = temp_output_280_0_g117964;
				half4 localSamplePlanar3D246_g117964 = SamplePlanar3D( Texture246_g117964 , Sampler246_g117964 , Coords246_g117964 , WorldPosition246_g117964 , WorldNormal246_g117964 );
				TEXTURE2D(Texture234_g117964) = _TerrainShaderTex13;
				SamplerState Sampler234_g117964 = SS30_g118001;
				float4 Coords234_g117964 = temp_output_37_0_g117964;
				float3 WorldPosition234_g117964 = temp_output_279_0_g117964;
				float4 localSampleStochastic2D234_g117964 = SampleStochastic2D( Texture234_g117964 , Sampler234_g117964 , Coords234_g117964 , WorldPosition234_g117964 );
				TEXTURE2D(Texture263_g117964) = _TerrainShaderTex13;
				SamplerState Sampler263_g117964 = SS30_g118001;
				half4 Coords263_g117964 = temp_output_37_0_g117964;
				half3 WorldPosition263_g117964 = temp_output_279_0_g117964;
				half3 WorldNormal263_g117964 = temp_output_280_0_g117964;
				half4 localSampleStochastic3D263_g117964 = SampleStochastic3D( Texture263_g117964 , Sampler263_g117964 , Coords263_g117964 , WorldPosition263_g117964 , WorldNormal263_g117964 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch9000_g117895 = localSamplePlanar2D238_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch9000_g117895 = localSamplePlanar3D246_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch9000_g117895 = localSampleStochastic2D234_g117964;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch9000_g117895 = localSampleStochastic3D263_g117964;
				#else
				float4 staticSwitch9000_g117895 = localSamplePlanar2D238_g117964;
				#endif
				float4 temp_output_7_0_g117926 = _TerrainShaderMin13;
				float4 temp_output_10_0_g117926 = ( _TerrainShaderMax13 - temp_output_7_0_g117926 );
				float4 temp_output_8931_0_g117895 = saturate( ( ( staticSwitch9000_g117895 - temp_output_7_0_g117926 ) / ( temp_output_10_0_g117926 + 0.0001 ) ) );
				half4 Masks_015_g117927 = temp_output_8931_0_g117895;
				TEXTURE2D(Texture238_g117975) = _TerrainShaderTex14;
				SamplerState Sampler238_g117975 = SS30_g118001;
				half4 Input_Terrain_Coords_148961_g117895 = _TerrainCoord14;
				float4 temp_output_37_0_g117975 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117975 = temp_output_37_0_g117975;
				float3 temp_output_279_0_g117975 = Input_Position9197_g117895;
				half3 WorldPosition238_g117975 = temp_output_279_0_g117975;
				half4 localSamplePlanar2D238_g117975 = SamplePlanar2D( Texture238_g117975 , Sampler238_g117975 , Coords238_g117975 , WorldPosition238_g117975 );
				TEXTURE2D(Texture246_g117975) = _TerrainShaderTex14;
				SamplerState Sampler246_g117975 = SS30_g118001;
				half4 Coords246_g117975 = temp_output_37_0_g117975;
				half3 WorldPosition246_g117975 = temp_output_279_0_g117975;
				float3 temp_output_280_0_g117975 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117975 = temp_output_280_0_g117975;
				half4 localSamplePlanar3D246_g117975 = SamplePlanar3D( Texture246_g117975 , Sampler246_g117975 , Coords246_g117975 , WorldPosition246_g117975 , WorldNormal246_g117975 );
				TEXTURE2D(Texture234_g117975) = _TerrainShaderTex14;
				SamplerState Sampler234_g117975 = SS30_g118001;
				float4 Coords234_g117975 = temp_output_37_0_g117975;
				float3 WorldPosition234_g117975 = temp_output_279_0_g117975;
				float4 localSampleStochastic2D234_g117975 = SampleStochastic2D( Texture234_g117975 , Sampler234_g117975 , Coords234_g117975 , WorldPosition234_g117975 );
				TEXTURE2D(Texture263_g117975) = _TerrainShaderTex14;
				SamplerState Sampler263_g117975 = SS30_g118001;
				half4 Coords263_g117975 = temp_output_37_0_g117975;
				half3 WorldPosition263_g117975 = temp_output_279_0_g117975;
				half3 WorldNormal263_g117975 = temp_output_280_0_g117975;
				half4 localSampleStochastic3D263_g117975 = SampleStochastic3D( Texture263_g117975 , Sampler263_g117975 , Coords263_g117975 , WorldPosition263_g117975 , WorldNormal263_g117975 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch9001_g117895 = localSamplePlanar2D238_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch9001_g117895 = localSamplePlanar3D246_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch9001_g117895 = localSampleStochastic2D234_g117975;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch9001_g117895 = localSampleStochastic3D263_g117975;
				#else
				float4 staticSwitch9001_g117895 = localSamplePlanar2D238_g117975;
				#endif
				float4 temp_output_7_0_g117934 = _TerrainShaderMin14;
				float4 temp_output_10_0_g117934 = ( _TerrainShaderMax14 - temp_output_7_0_g117934 );
				float4 temp_output_8934_0_g117895 = saturate( ( ( staticSwitch9001_g117895 - temp_output_7_0_g117934 ) / ( temp_output_10_0_g117934 + 0.0001 ) ) );
				half4 Masks_0210_g117927 = temp_output_8934_0_g117895;
				TEXTURE2D(Texture238_g117976) = _TerrainShaderTex15;
				SamplerState Sampler238_g117976 = SS30_g118001;
				half4 Input_Terrain_Coords_158962_g117895 = _TerrainCoord15;
				float4 temp_output_37_0_g117976 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117976 = temp_output_37_0_g117976;
				float3 temp_output_279_0_g117976 = Input_Position9197_g117895;
				half3 WorldPosition238_g117976 = temp_output_279_0_g117976;
				half4 localSamplePlanar2D238_g117976 = SamplePlanar2D( Texture238_g117976 , Sampler238_g117976 , Coords238_g117976 , WorldPosition238_g117976 );
				TEXTURE2D(Texture246_g117976) = _TerrainShaderTex15;
				SamplerState Sampler246_g117976 = SS30_g118001;
				half4 Coords246_g117976 = temp_output_37_0_g117976;
				half3 WorldPosition246_g117976 = temp_output_279_0_g117976;
				float3 temp_output_280_0_g117976 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117976 = temp_output_280_0_g117976;
				half4 localSamplePlanar3D246_g117976 = SamplePlanar3D( Texture246_g117976 , Sampler246_g117976 , Coords246_g117976 , WorldPosition246_g117976 , WorldNormal246_g117976 );
				TEXTURE2D(Texture234_g117976) = _TerrainShaderTex15;
				SamplerState Sampler234_g117976 = SS30_g118001;
				float4 Coords234_g117976 = temp_output_37_0_g117976;
				float3 WorldPosition234_g117976 = temp_output_279_0_g117976;
				float4 localSampleStochastic2D234_g117976 = SampleStochastic2D( Texture234_g117976 , Sampler234_g117976 , Coords234_g117976 , WorldPosition234_g117976 );
				TEXTURE2D(Texture263_g117976) = _TerrainShaderTex15;
				SamplerState Sampler263_g117976 = SS30_g118001;
				half4 Coords263_g117976 = temp_output_37_0_g117976;
				half3 WorldPosition263_g117976 = temp_output_279_0_g117976;
				half3 WorldNormal263_g117976 = temp_output_280_0_g117976;
				half4 localSampleStochastic3D263_g117976 = SampleStochastic3D( Texture263_g117976 , Sampler263_g117976 , Coords263_g117976 , WorldPosition263_g117976 , WorldNormal263_g117976 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch9002_g117895 = localSamplePlanar2D238_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch9002_g117895 = localSamplePlanar3D246_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch9002_g117895 = localSampleStochastic2D234_g117976;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch9002_g117895 = localSampleStochastic3D263_g117976;
				#else
				float4 staticSwitch9002_g117895 = localSamplePlanar2D238_g117976;
				#endif
				float4 temp_output_7_0_g117935 = _TerrainShaderMin15;
				float4 temp_output_10_0_g117935 = ( _TerrainShaderMax15 - temp_output_7_0_g117935 );
				float4 temp_output_8935_0_g117895 = saturate( ( ( staticSwitch9002_g117895 - temp_output_7_0_g117935 ) / ( temp_output_10_0_g117935 + 0.0001 ) ) );
				half4 Masks_0312_g117927 = temp_output_8935_0_g117895;
				TEXTURE2D(Texture238_g117977) = _TerrainShaderTex16;
				SamplerState Sampler238_g117977 = SS30_g118001;
				half4 Input_Terrain_Coords_168959_g117895 = _TerrainCoord16;
				float4 temp_output_37_0_g117977 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117977 = temp_output_37_0_g117977;
				float3 temp_output_279_0_g117977 = Input_Position9197_g117895;
				half3 WorldPosition238_g117977 = temp_output_279_0_g117977;
				half4 localSamplePlanar2D238_g117977 = SamplePlanar2D( Texture238_g117977 , Sampler238_g117977 , Coords238_g117977 , WorldPosition238_g117977 );
				TEXTURE2D(Texture246_g117977) = _TerrainShaderTex16;
				SamplerState Sampler246_g117977 = SS30_g118001;
				half4 Coords246_g117977 = temp_output_37_0_g117977;
				half3 WorldPosition246_g117977 = temp_output_279_0_g117977;
				float3 temp_output_280_0_g117977 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117977 = temp_output_280_0_g117977;
				half4 localSamplePlanar3D246_g117977 = SamplePlanar3D( Texture246_g117977 , Sampler246_g117977 , Coords246_g117977 , WorldPosition246_g117977 , WorldNormal246_g117977 );
				TEXTURE2D(Texture234_g117977) = _TerrainShaderTex16;
				SamplerState Sampler234_g117977 = SS30_g118001;
				float4 Coords234_g117977 = temp_output_37_0_g117977;
				float3 WorldPosition234_g117977 = temp_output_279_0_g117977;
				float4 localSampleStochastic2D234_g117977 = SampleStochastic2D( Texture234_g117977 , Sampler234_g117977 , Coords234_g117977 , WorldPosition234_g117977 );
				TEXTURE2D(Texture263_g117977) = _TerrainShaderTex16;
				SamplerState Sampler263_g117977 = SS30_g118001;
				half4 Coords263_g117977 = temp_output_37_0_g117977;
				half3 WorldPosition263_g117977 = temp_output_279_0_g117977;
				half3 WorldNormal263_g117977 = temp_output_280_0_g117977;
				half4 localSampleStochastic3D263_g117977 = SampleStochastic3D( Texture263_g117977 , Sampler263_g117977 , Coords263_g117977 , WorldPosition263_g117977 , WorldNormal263_g117977 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch9003_g117895 = localSamplePlanar2D238_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch9003_g117895 = localSamplePlanar3D246_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch9003_g117895 = localSampleStochastic2D234_g117977;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch9003_g117895 = localSampleStochastic3D263_g117977;
				#else
				float4 staticSwitch9003_g117895 = localSamplePlanar2D238_g117977;
				#endif
				float4 temp_output_7_0_g117936 = _TerrainShaderMin16;
				float4 temp_output_10_0_g117936 = ( _TerrainShaderMax16 - temp_output_7_0_g117936 );
				float4 temp_output_8936_0_g117895 = saturate( ( ( staticSwitch9003_g117895 - temp_output_7_0_g117936 ) / ( temp_output_10_0_g117936 + 0.0001 ) ) );
				half4 Masks_0414_g117927 = temp_output_8936_0_g117895;
				float4 appendResult29_g117927 = (float4((Masks_015_g117927).z , (Masks_0210_g117927).z , (Masks_0312_g117927).z , (Masks_0414_g117927).z));
				half4 Control31_g117927 = Terrain_Control_167711_g117895;
				half4 Terrain_Height_169015_g117895 = ( appendResult29_g117927 * Control31_g117927 );
				float4 heights_167362_g117895 = Terrain_Height_169015_g117895;
				float heightTransition7362_g117895 = ( 1.0 - _TerrainHeightBlendValue );
				float4 weights_047362_g117895 = float4( 0,0,0,0 );
				float4 weights_087362_g117895 = float4( 0,0,0,0 );
				float4 weights_127362_g117895 = float4( 0,0,0,0 );
				float4 weights_167362_g117895 = float4( 0,0,0,0 );
				//Modified version of the HDRP terrain height based blending
				float maxHeight = 0;
				float4 weightedHeights_04 = float4( 0,0,0,0 );
				float4 weightedHeights_08 = float4( 0,0,0,0 );
				float4 weightedHeights_12 = float4( 0,0,0,0 );
				float4 weightedHeights_16 = float4( 0,0,0,0 );
				maxHeight = heights_047362_g117895.x;
				maxHeight = max(maxHeight, heights_047362_g117895.y);
				maxHeight = max(maxHeight, heights_047362_g117895.z);
				maxHeight = max(maxHeight, heights_047362_g117895.w);
				#ifdef TVE_TERRAIN_08
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				#endif
				#ifdef TVE_TERRAIN_12
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				maxHeight = max(maxHeight, heights_127362_g117895.x);
				maxHeight = max(maxHeight, heights_127362_g117895.y);
				maxHeight = max(maxHeight, heights_127362_g117895.z);
				maxHeight = max(maxHeight, heights_127362_g117895.w);
				#endif
				#ifdef TVE_TERRAIN_16
				maxHeight = max(maxHeight, heights_087362_g117895.x);
				maxHeight = max(maxHeight, heights_087362_g117895.y);
				maxHeight = max(maxHeight, heights_087362_g117895.z);
				maxHeight = max(maxHeight, heights_087362_g117895.w);
				maxHeight = max(maxHeight, heights_127362_g117895.x);
				maxHeight = max(maxHeight, heights_127362_g117895.y);
				maxHeight = max(maxHeight, heights_127362_g117895.z);
				maxHeight = max(maxHeight, heights_127362_g117895.w);
				maxHeight = max(maxHeight, heights_167362_g117895.x);
				maxHeight = max(maxHeight, heights_167362_g117895.y);
				maxHeight = max(maxHeight, heights_167362_g117895.z);
				maxHeight = max(maxHeight, heights_167362_g117895.w);
				#endif
				float transition = max(heightTransition7362_g117895, 0.01);
				weightedHeights_04 = float4 ( heights_047362_g117895.x, heights_047362_g117895.y, heights_047362_g117895.z, heights_047362_g117895.w );
				weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
				weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g117895;
				#ifdef TVE_TERRAIN_08
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				#endif
				#ifdef TVE_TERRAIN_12
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				weightedHeights_12 = float4 ( heights_127362_g117895.x, heights_127362_g117895.y, heights_127362_g117895.z, heights_127362_g117895.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g117895;
				#endif
				#ifdef TVE_TERRAIN_16
				weightedHeights_08 = float4 ( heights_087362_g117895.x, heights_087362_g117895.y, heights_087362_g117895.z, heights_087362_g117895.w );
				weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
				weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g117895;
				weightedHeights_12 = float4 ( heights_127362_g117895.x, heights_127362_g117895.y, heights_127362_g117895.z, heights_127362_g117895.w );
				weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
				weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g117895;
				weightedHeights_16 = float4 ( heights_167362_g117895.x, heights_167362_g117895.y, heights_167362_g117895.z, heights_167362_g117895.w );
				weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
				weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g117895;
				#endif
				float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
				float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
				float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
				float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
				float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
				weights_047362_g117895 = weightedHeights_04 / sumHeight.xxxx;
				#ifdef TVE_TERRAIN_08
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_12
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g117895 = weightedHeights_12 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_16
				weights_087362_g117895 = weightedHeights_08 / sumHeight.xxxx;
				weights_127362_g117895 = weightedHeights_12 / sumHeight.xxxx;
				weights_167362_g117895 = weightedHeights_16 / sumHeight.xxxx;
				#endif
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8792_g117895 = weights_047362_g117895;
				#else
				float4 staticSwitch8792_g117895 = control_047362_g117895;
				#endif
				half4 Terrain_Weights_046781_g117895 = staticSwitch8792_g117895;
				half4 Weights52_g117900 = Terrain_Weights_046781_g117895;
				TEXTURE2D(Texture238_g117941) = _TerrainAlbedoTex1;
				float localFilterTexture19_g117998 = ( 0.0 );
				SamplerState SamplerDefault19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g117998 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g117998 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g117998 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g117998 = SamplerDefault19_g117998;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g117998 = SamplerDefault19_g117998;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g117998 = SamplerPoint19_g117998;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g117998 = SamplerLow19_g117998;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g117998 = SamplerMedium19_g117998;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g117998 = SamplerHigh19_g117998;
				#endif
				SamplerState Sampler238_g117941 = SS19_g117998;
				float4 temp_output_37_0_g117941 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117941 = temp_output_37_0_g117941;
				float3 temp_output_279_0_g117941 = Input_Position9197_g117895;
				half3 WorldPosition238_g117941 = temp_output_279_0_g117941;
				half4 localSamplePlanar2D238_g117941 = SamplePlanar2D( Texture238_g117941 , Sampler238_g117941 , Coords238_g117941 , WorldPosition238_g117941 );
				TEXTURE2D(Texture246_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler246_g117941 = SS19_g117998;
				half4 Coords246_g117941 = temp_output_37_0_g117941;
				half3 WorldPosition246_g117941 = temp_output_279_0_g117941;
				float3 temp_output_280_0_g117941 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117941 = temp_output_280_0_g117941;
				half4 localSamplePlanar3D246_g117941 = SamplePlanar3D( Texture246_g117941 , Sampler246_g117941 , Coords246_g117941 , WorldPosition246_g117941 , WorldNormal246_g117941 );
				TEXTURE2D(Texture234_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler234_g117941 = SS19_g117998;
				float4 Coords234_g117941 = temp_output_37_0_g117941;
				float3 WorldPosition234_g117941 = temp_output_279_0_g117941;
				float4 localSampleStochastic2D234_g117941 = SampleStochastic2D( Texture234_g117941 , Sampler234_g117941 , Coords234_g117941 , WorldPosition234_g117941 );
				TEXTURE2D(Texture263_g117941) = _TerrainAlbedoTex1;
				SamplerState Sampler263_g117941 = SS19_g117998;
				half4 Coords263_g117941 = temp_output_37_0_g117941;
				half3 WorldPosition263_g117941 = temp_output_279_0_g117941;
				half3 WorldNormal263_g117941 = temp_output_280_0_g117941;
				half4 localSampleStochastic3D263_g117941 = SampleStochastic3D( Texture263_g117941 , Sampler263_g117941 , Coords263_g117941 , WorldPosition263_g117941 , WorldNormal263_g117941 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8614_g117895 = localSamplePlanar2D238_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8614_g117895 = localSamplePlanar3D246_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8614_g117895 = localSampleStochastic2D234_g117941;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8614_g117895 = localSampleStochastic3D263_g117941;
				#else
				float4 staticSwitch8614_g117895 = localSamplePlanar2D238_g117941;
				#endif
				half4 Layer133_g117900 = staticSwitch8614_g117895;
				TEXTURE2D(Texture238_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler238_g117942 = SS19_g117998;
				float4 temp_output_37_0_g117942 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117942 = temp_output_37_0_g117942;
				float3 temp_output_279_0_g117942 = Input_Position9197_g117895;
				half3 WorldPosition238_g117942 = temp_output_279_0_g117942;
				half4 localSamplePlanar2D238_g117942 = SamplePlanar2D( Texture238_g117942 , Sampler238_g117942 , Coords238_g117942 , WorldPosition238_g117942 );
				TEXTURE2D(Texture246_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler246_g117942 = SS19_g117998;
				half4 Coords246_g117942 = temp_output_37_0_g117942;
				half3 WorldPosition246_g117942 = temp_output_279_0_g117942;
				float3 temp_output_280_0_g117942 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117942 = temp_output_280_0_g117942;
				half4 localSamplePlanar3D246_g117942 = SamplePlanar3D( Texture246_g117942 , Sampler246_g117942 , Coords246_g117942 , WorldPosition246_g117942 , WorldNormal246_g117942 );
				TEXTURE2D(Texture234_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler234_g117942 = SS19_g117998;
				float4 Coords234_g117942 = temp_output_37_0_g117942;
				float3 WorldPosition234_g117942 = temp_output_279_0_g117942;
				float4 localSampleStochastic2D234_g117942 = SampleStochastic2D( Texture234_g117942 , Sampler234_g117942 , Coords234_g117942 , WorldPosition234_g117942 );
				TEXTURE2D(Texture263_g117942) = _TerrainAlbedoTex2;
				SamplerState Sampler263_g117942 = SS19_g117998;
				half4 Coords263_g117942 = temp_output_37_0_g117942;
				half3 WorldPosition263_g117942 = temp_output_279_0_g117942;
				half3 WorldNormal263_g117942 = temp_output_280_0_g117942;
				half4 localSampleStochastic3D263_g117942 = SampleStochastic3D( Texture263_g117942 , Sampler263_g117942 , Coords263_g117942 , WorldPosition263_g117942 , WorldNormal263_g117942 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8629_g117895 = localSamplePlanar2D238_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8629_g117895 = localSamplePlanar3D246_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8629_g117895 = localSampleStochastic2D234_g117942;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8629_g117895 = localSampleStochastic3D263_g117942;
				#else
				float4 staticSwitch8629_g117895 = localSamplePlanar2D238_g117942;
				#endif
				half4 Layer237_g117900 = staticSwitch8629_g117895;
				TEXTURE2D(Texture238_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler238_g117945 = SS19_g117998;
				float4 temp_output_37_0_g117945 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117945 = temp_output_37_0_g117945;
				float3 temp_output_279_0_g117945 = Input_Position9197_g117895;
				half3 WorldPosition238_g117945 = temp_output_279_0_g117945;
				half4 localSamplePlanar2D238_g117945 = SamplePlanar2D( Texture238_g117945 , Sampler238_g117945 , Coords238_g117945 , WorldPosition238_g117945 );
				TEXTURE2D(Texture246_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler246_g117945 = SS19_g117998;
				half4 Coords246_g117945 = temp_output_37_0_g117945;
				half3 WorldPosition246_g117945 = temp_output_279_0_g117945;
				float3 temp_output_280_0_g117945 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117945 = temp_output_280_0_g117945;
				half4 localSamplePlanar3D246_g117945 = SamplePlanar3D( Texture246_g117945 , Sampler246_g117945 , Coords246_g117945 , WorldPosition246_g117945 , WorldNormal246_g117945 );
				TEXTURE2D(Texture234_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler234_g117945 = SS19_g117998;
				float4 Coords234_g117945 = temp_output_37_0_g117945;
				float3 WorldPosition234_g117945 = temp_output_279_0_g117945;
				float4 localSampleStochastic2D234_g117945 = SampleStochastic2D( Texture234_g117945 , Sampler234_g117945 , Coords234_g117945 , WorldPosition234_g117945 );
				TEXTURE2D(Texture263_g117945) = _TerrainAlbedoTex3;
				SamplerState Sampler263_g117945 = SS19_g117998;
				half4 Coords263_g117945 = temp_output_37_0_g117945;
				half3 WorldPosition263_g117945 = temp_output_279_0_g117945;
				half3 WorldNormal263_g117945 = temp_output_280_0_g117945;
				half4 localSampleStochastic3D263_g117945 = SampleStochastic3D( Texture263_g117945 , Sampler263_g117945 , Coords263_g117945 , WorldPosition263_g117945 , WorldNormal263_g117945 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8630_g117895 = localSamplePlanar2D238_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8630_g117895 = localSamplePlanar3D246_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8630_g117895 = localSampleStochastic2D234_g117945;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8630_g117895 = localSampleStochastic3D263_g117945;
				#else
				float4 staticSwitch8630_g117895 = localSamplePlanar2D238_g117945;
				#endif
				half4 Layer338_g117900 = staticSwitch8630_g117895;
				TEXTURE2D(Texture238_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler238_g117947 = SS19_g117998;
				float4 temp_output_37_0_g117947 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117947 = temp_output_37_0_g117947;
				float3 temp_output_279_0_g117947 = Input_Position9197_g117895;
				half3 WorldPosition238_g117947 = temp_output_279_0_g117947;
				half4 localSamplePlanar2D238_g117947 = SamplePlanar2D( Texture238_g117947 , Sampler238_g117947 , Coords238_g117947 , WorldPosition238_g117947 );
				TEXTURE2D(Texture246_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler246_g117947 = SS19_g117998;
				half4 Coords246_g117947 = temp_output_37_0_g117947;
				half3 WorldPosition246_g117947 = temp_output_279_0_g117947;
				float3 temp_output_280_0_g117947 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117947 = temp_output_280_0_g117947;
				half4 localSamplePlanar3D246_g117947 = SamplePlanar3D( Texture246_g117947 , Sampler246_g117947 , Coords246_g117947 , WorldPosition246_g117947 , WorldNormal246_g117947 );
				TEXTURE2D(Texture234_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler234_g117947 = SS19_g117998;
				float4 Coords234_g117947 = temp_output_37_0_g117947;
				float3 WorldPosition234_g117947 = temp_output_279_0_g117947;
				float4 localSampleStochastic2D234_g117947 = SampleStochastic2D( Texture234_g117947 , Sampler234_g117947 , Coords234_g117947 , WorldPosition234_g117947 );
				TEXTURE2D(Texture263_g117947) = _TerrainAlbedoTex4;
				SamplerState Sampler263_g117947 = SS19_g117998;
				half4 Coords263_g117947 = temp_output_37_0_g117947;
				half3 WorldPosition263_g117947 = temp_output_279_0_g117947;
				half3 WorldNormal263_g117947 = temp_output_280_0_g117947;
				half4 localSampleStochastic3D263_g117947 = SampleStochastic3D( Texture263_g117947 , Sampler263_g117947 , Coords263_g117947 , WorldPosition263_g117947 , WorldNormal263_g117947 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8631_g117895 = localSamplePlanar2D238_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8631_g117895 = localSamplePlanar3D246_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8631_g117895 = localSampleStochastic2D234_g117947;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8631_g117895 = localSampleStochastic3D263_g117947;
				#else
				float4 staticSwitch8631_g117895 = localSamplePlanar2D238_g117947;
				#endif
				half4 Layer439_g117900 = staticSwitch8631_g117895;
				float4 weightedBlendVar31_g117900 = Weights52_g117900;
				float4 weightedBlend31_g117900 = ( weightedBlendVar31_g117900.x*Layer133_g117900 + weightedBlendVar31_g117900.y*Layer237_g117900 + weightedBlendVar31_g117900.z*Layer338_g117900 + weightedBlendVar31_g117900.w*Layer439_g117900 );
				half4 Terrain_AAAA_047200_g117895 = weightedBlend31_g117900;
				half4 Layer_045_g117903 = Terrain_AAAA_047200_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8793_g117895 = weights_087362_g117895;
				#else
				float4 staticSwitch8793_g117895 = control_087362_g117895;
				#endif
				half4 Terrain_Weights_087340_g117895 = staticSwitch8793_g117895;
				half4 Weights52_g117910 = Terrain_Weights_087340_g117895;
				TEXTURE2D(Texture238_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler238_g117951 = SS19_g117998;
				float4 temp_output_37_0_g117951 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117951 = temp_output_37_0_g117951;
				float3 temp_output_279_0_g117951 = Input_Position9197_g117895;
				half3 WorldPosition238_g117951 = temp_output_279_0_g117951;
				half4 localSamplePlanar2D238_g117951 = SamplePlanar2D( Texture238_g117951 , Sampler238_g117951 , Coords238_g117951 , WorldPosition238_g117951 );
				TEXTURE2D(Texture246_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler246_g117951 = SS19_g117998;
				half4 Coords246_g117951 = temp_output_37_0_g117951;
				half3 WorldPosition246_g117951 = temp_output_279_0_g117951;
				float3 temp_output_280_0_g117951 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117951 = temp_output_280_0_g117951;
				half4 localSamplePlanar3D246_g117951 = SamplePlanar3D( Texture246_g117951 , Sampler246_g117951 , Coords246_g117951 , WorldPosition246_g117951 , WorldNormal246_g117951 );
				TEXTURE2D(Texture234_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler234_g117951 = SS19_g117998;
				float4 Coords234_g117951 = temp_output_37_0_g117951;
				float3 WorldPosition234_g117951 = temp_output_279_0_g117951;
				float4 localSampleStochastic2D234_g117951 = SampleStochastic2D( Texture234_g117951 , Sampler234_g117951 , Coords234_g117951 , WorldPosition234_g117951 );
				TEXTURE2D(Texture263_g117951) = _TerrainAlbedoTex5;
				SamplerState Sampler263_g117951 = SS19_g117998;
				half4 Coords263_g117951 = temp_output_37_0_g117951;
				half3 WorldPosition263_g117951 = temp_output_279_0_g117951;
				half3 WorldNormal263_g117951 = temp_output_280_0_g117951;
				half4 localSampleStochastic3D263_g117951 = SampleStochastic3D( Texture263_g117951 , Sampler263_g117951 , Coords263_g117951 , WorldPosition263_g117951 , WorldNormal263_g117951 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8690_g117895 = localSamplePlanar2D238_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8690_g117895 = localSamplePlanar3D246_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8690_g117895 = localSampleStochastic2D234_g117951;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8690_g117895 = localSampleStochastic3D263_g117951;
				#else
				float4 staticSwitch8690_g117895 = localSamplePlanar2D238_g117951;
				#endif
				half4 Layer133_g117910 = staticSwitch8690_g117895;
				TEXTURE2D(Texture238_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler238_g117978 = SS19_g117998;
				float4 temp_output_37_0_g117978 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117978 = temp_output_37_0_g117978;
				float3 temp_output_279_0_g117978 = Input_Position9197_g117895;
				half3 WorldPosition238_g117978 = temp_output_279_0_g117978;
				half4 localSamplePlanar2D238_g117978 = SamplePlanar2D( Texture238_g117978 , Sampler238_g117978 , Coords238_g117978 , WorldPosition238_g117978 );
				TEXTURE2D(Texture246_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler246_g117978 = SS19_g117998;
				half4 Coords246_g117978 = temp_output_37_0_g117978;
				half3 WorldPosition246_g117978 = temp_output_279_0_g117978;
				float3 temp_output_280_0_g117978 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117978 = temp_output_280_0_g117978;
				half4 localSamplePlanar3D246_g117978 = SamplePlanar3D( Texture246_g117978 , Sampler246_g117978 , Coords246_g117978 , WorldPosition246_g117978 , WorldNormal246_g117978 );
				TEXTURE2D(Texture234_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler234_g117978 = SS19_g117998;
				float4 Coords234_g117978 = temp_output_37_0_g117978;
				float3 WorldPosition234_g117978 = temp_output_279_0_g117978;
				float4 localSampleStochastic2D234_g117978 = SampleStochastic2D( Texture234_g117978 , Sampler234_g117978 , Coords234_g117978 , WorldPosition234_g117978 );
				TEXTURE2D(Texture263_g117978) = _TerrainAlbedoTex6;
				SamplerState Sampler263_g117978 = SS19_g117998;
				half4 Coords263_g117978 = temp_output_37_0_g117978;
				half3 WorldPosition263_g117978 = temp_output_279_0_g117978;
				half3 WorldNormal263_g117978 = temp_output_280_0_g117978;
				half4 localSampleStochastic3D263_g117978 = SampleStochastic3D( Texture263_g117978 , Sampler263_g117978 , Coords263_g117978 , WorldPosition263_g117978 , WorldNormal263_g117978 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8691_g117895 = localSamplePlanar2D238_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8691_g117895 = localSamplePlanar3D246_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8691_g117895 = localSampleStochastic2D234_g117978;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8691_g117895 = localSampleStochastic3D263_g117978;
				#else
				float4 staticSwitch8691_g117895 = localSamplePlanar2D238_g117978;
				#endif
				half4 Layer237_g117910 = staticSwitch8691_g117895;
				TEXTURE2D(Texture238_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler238_g117979 = SS19_g117998;
				float4 temp_output_37_0_g117979 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117979 = temp_output_37_0_g117979;
				float3 temp_output_279_0_g117979 = Input_Position9197_g117895;
				half3 WorldPosition238_g117979 = temp_output_279_0_g117979;
				half4 localSamplePlanar2D238_g117979 = SamplePlanar2D( Texture238_g117979 , Sampler238_g117979 , Coords238_g117979 , WorldPosition238_g117979 );
				TEXTURE2D(Texture246_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler246_g117979 = SS19_g117998;
				half4 Coords246_g117979 = temp_output_37_0_g117979;
				half3 WorldPosition246_g117979 = temp_output_279_0_g117979;
				float3 temp_output_280_0_g117979 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117979 = temp_output_280_0_g117979;
				half4 localSamplePlanar3D246_g117979 = SamplePlanar3D( Texture246_g117979 , Sampler246_g117979 , Coords246_g117979 , WorldPosition246_g117979 , WorldNormal246_g117979 );
				TEXTURE2D(Texture234_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler234_g117979 = SS19_g117998;
				float4 Coords234_g117979 = temp_output_37_0_g117979;
				float3 WorldPosition234_g117979 = temp_output_279_0_g117979;
				float4 localSampleStochastic2D234_g117979 = SampleStochastic2D( Texture234_g117979 , Sampler234_g117979 , Coords234_g117979 , WorldPosition234_g117979 );
				TEXTURE2D(Texture263_g117979) = _TerrainAlbedoTex7;
				SamplerState Sampler263_g117979 = SS19_g117998;
				half4 Coords263_g117979 = temp_output_37_0_g117979;
				half3 WorldPosition263_g117979 = temp_output_279_0_g117979;
				half3 WorldNormal263_g117979 = temp_output_280_0_g117979;
				half4 localSampleStochastic3D263_g117979 = SampleStochastic3D( Texture263_g117979 , Sampler263_g117979 , Coords263_g117979 , WorldPosition263_g117979 , WorldNormal263_g117979 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8692_g117895 = localSamplePlanar2D238_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8692_g117895 = localSamplePlanar3D246_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8692_g117895 = localSampleStochastic2D234_g117979;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8692_g117895 = localSampleStochastic3D263_g117979;
				#else
				float4 staticSwitch8692_g117895 = localSamplePlanar2D238_g117979;
				#endif
				half4 Layer338_g117910 = staticSwitch8692_g117895;
				TEXTURE2D(Texture238_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler238_g117980 = SS19_g117998;
				float4 temp_output_37_0_g117980 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117980 = temp_output_37_0_g117980;
				float3 temp_output_279_0_g117980 = Input_Position9197_g117895;
				half3 WorldPosition238_g117980 = temp_output_279_0_g117980;
				half4 localSamplePlanar2D238_g117980 = SamplePlanar2D( Texture238_g117980 , Sampler238_g117980 , Coords238_g117980 , WorldPosition238_g117980 );
				TEXTURE2D(Texture246_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler246_g117980 = SS19_g117998;
				half4 Coords246_g117980 = temp_output_37_0_g117980;
				half3 WorldPosition246_g117980 = temp_output_279_0_g117980;
				float3 temp_output_280_0_g117980 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117980 = temp_output_280_0_g117980;
				half4 localSamplePlanar3D246_g117980 = SamplePlanar3D( Texture246_g117980 , Sampler246_g117980 , Coords246_g117980 , WorldPosition246_g117980 , WorldNormal246_g117980 );
				TEXTURE2D(Texture234_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler234_g117980 = SS19_g117998;
				float4 Coords234_g117980 = temp_output_37_0_g117980;
				float3 WorldPosition234_g117980 = temp_output_279_0_g117980;
				float4 localSampleStochastic2D234_g117980 = SampleStochastic2D( Texture234_g117980 , Sampler234_g117980 , Coords234_g117980 , WorldPosition234_g117980 );
				TEXTURE2D(Texture263_g117980) = _TerrainAlbedoTex8;
				SamplerState Sampler263_g117980 = SS19_g117998;
				half4 Coords263_g117980 = temp_output_37_0_g117980;
				half3 WorldPosition263_g117980 = temp_output_279_0_g117980;
				half3 WorldNormal263_g117980 = temp_output_280_0_g117980;
				half4 localSampleStochastic3D263_g117980 = SampleStochastic3D( Texture263_g117980 , Sampler263_g117980 , Coords263_g117980 , WorldPosition263_g117980 , WorldNormal263_g117980 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8693_g117895 = localSamplePlanar2D238_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8693_g117895 = localSamplePlanar3D246_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8693_g117895 = localSampleStochastic2D234_g117980;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8693_g117895 = localSampleStochastic3D263_g117980;
				#else
				float4 staticSwitch8693_g117895 = localSamplePlanar2D238_g117980;
				#endif
				half4 Layer439_g117910 = staticSwitch8693_g117895;
				float4 weightedBlendVar31_g117910 = Weights52_g117910;
				float4 weightedBlend31_g117910 = ( weightedBlendVar31_g117910.x*Layer133_g117910 + weightedBlendVar31_g117910.y*Layer237_g117910 + weightedBlendVar31_g117910.z*Layer338_g117910 + weightedBlendVar31_g117910.w*Layer439_g117910 );
				half4 Terrain_AAAA_088665_g117895 = weightedBlend31_g117910;
				half4 Layer_0810_g117903 = Terrain_AAAA_088665_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8794_g117895 = weights_127362_g117895;
				#else
				float4 staticSwitch8794_g117895 = control_127362_g117895;
				#endif
				half4 Terrain_Weights_127710_g117895 = staticSwitch8794_g117895;
				half4 Weights52_g117917 = Terrain_Weights_127710_g117895;
				TEXTURE2D(Texture238_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler238_g117954 = SS19_g117998;
				float4 temp_output_37_0_g117954 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117954 = temp_output_37_0_g117954;
				float3 temp_output_279_0_g117954 = Input_Position9197_g117895;
				half3 WorldPosition238_g117954 = temp_output_279_0_g117954;
				half4 localSamplePlanar2D238_g117954 = SamplePlanar2D( Texture238_g117954 , Sampler238_g117954 , Coords238_g117954 , WorldPosition238_g117954 );
				TEXTURE2D(Texture246_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler246_g117954 = SS19_g117998;
				half4 Coords246_g117954 = temp_output_37_0_g117954;
				half3 WorldPosition246_g117954 = temp_output_279_0_g117954;
				float3 temp_output_280_0_g117954 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117954 = temp_output_280_0_g117954;
				half4 localSamplePlanar3D246_g117954 = SamplePlanar3D( Texture246_g117954 , Sampler246_g117954 , Coords246_g117954 , WorldPosition246_g117954 , WorldNormal246_g117954 );
				TEXTURE2D(Texture234_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler234_g117954 = SS19_g117998;
				float4 Coords234_g117954 = temp_output_37_0_g117954;
				float3 WorldPosition234_g117954 = temp_output_279_0_g117954;
				float4 localSampleStochastic2D234_g117954 = SampleStochastic2D( Texture234_g117954 , Sampler234_g117954 , Coords234_g117954 , WorldPosition234_g117954 );
				TEXTURE2D(Texture263_g117954) = _TerrainAlbedoTex9;
				SamplerState Sampler263_g117954 = SS19_g117998;
				half4 Coords263_g117954 = temp_output_37_0_g117954;
				half3 WorldPosition263_g117954 = temp_output_279_0_g117954;
				half3 WorldNormal263_g117954 = temp_output_280_0_g117954;
				half4 localSampleStochastic3D263_g117954 = SampleStochastic3D( Texture263_g117954 , Sampler263_g117954 , Coords263_g117954 , WorldPosition263_g117954 , WorldNormal263_g117954 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8872_g117895 = localSamplePlanar2D238_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8872_g117895 = localSamplePlanar3D246_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8872_g117895 = localSampleStochastic2D234_g117954;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8872_g117895 = localSampleStochastic3D263_g117954;
				#else
				float4 staticSwitch8872_g117895 = localSamplePlanar2D238_g117954;
				#endif
				half4 Layer133_g117917 = staticSwitch8872_g117895;
				TEXTURE2D(Texture238_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler238_g117957 = SS19_g117998;
				float4 temp_output_37_0_g117957 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117957 = temp_output_37_0_g117957;
				float3 temp_output_279_0_g117957 = Input_Position9197_g117895;
				half3 WorldPosition238_g117957 = temp_output_279_0_g117957;
				half4 localSamplePlanar2D238_g117957 = SamplePlanar2D( Texture238_g117957 , Sampler238_g117957 , Coords238_g117957 , WorldPosition238_g117957 );
				TEXTURE2D(Texture246_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler246_g117957 = SS19_g117998;
				half4 Coords246_g117957 = temp_output_37_0_g117957;
				half3 WorldPosition246_g117957 = temp_output_279_0_g117957;
				float3 temp_output_280_0_g117957 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117957 = temp_output_280_0_g117957;
				half4 localSamplePlanar3D246_g117957 = SamplePlanar3D( Texture246_g117957 , Sampler246_g117957 , Coords246_g117957 , WorldPosition246_g117957 , WorldNormal246_g117957 );
				TEXTURE2D(Texture234_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler234_g117957 = SS19_g117998;
				float4 Coords234_g117957 = temp_output_37_0_g117957;
				float3 WorldPosition234_g117957 = temp_output_279_0_g117957;
				float4 localSampleStochastic2D234_g117957 = SampleStochastic2D( Texture234_g117957 , Sampler234_g117957 , Coords234_g117957 , WorldPosition234_g117957 );
				TEXTURE2D(Texture263_g117957) = _TerrainAlbedoTex10;
				SamplerState Sampler263_g117957 = SS19_g117998;
				half4 Coords263_g117957 = temp_output_37_0_g117957;
				half3 WorldPosition263_g117957 = temp_output_279_0_g117957;
				half3 WorldNormal263_g117957 = temp_output_280_0_g117957;
				half4 localSampleStochastic3D263_g117957 = SampleStochastic3D( Texture263_g117957 , Sampler263_g117957 , Coords263_g117957 , WorldPosition263_g117957 , WorldNormal263_g117957 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8873_g117895 = localSamplePlanar2D238_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8873_g117895 = localSamplePlanar3D246_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8873_g117895 = localSampleStochastic2D234_g117957;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8873_g117895 = localSampleStochastic3D263_g117957;
				#else
				float4 staticSwitch8873_g117895 = localSamplePlanar2D238_g117957;
				#endif
				half4 Layer237_g117917 = staticSwitch8873_g117895;
				TEXTURE2D(Texture238_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler238_g117958 = SS19_g117998;
				float4 temp_output_37_0_g117958 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117958 = temp_output_37_0_g117958;
				float3 temp_output_279_0_g117958 = Input_Position9197_g117895;
				half3 WorldPosition238_g117958 = temp_output_279_0_g117958;
				half4 localSamplePlanar2D238_g117958 = SamplePlanar2D( Texture238_g117958 , Sampler238_g117958 , Coords238_g117958 , WorldPosition238_g117958 );
				TEXTURE2D(Texture246_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler246_g117958 = SS19_g117998;
				half4 Coords246_g117958 = temp_output_37_0_g117958;
				half3 WorldPosition246_g117958 = temp_output_279_0_g117958;
				float3 temp_output_280_0_g117958 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117958 = temp_output_280_0_g117958;
				half4 localSamplePlanar3D246_g117958 = SamplePlanar3D( Texture246_g117958 , Sampler246_g117958 , Coords246_g117958 , WorldPosition246_g117958 , WorldNormal246_g117958 );
				TEXTURE2D(Texture234_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler234_g117958 = SS19_g117998;
				float4 Coords234_g117958 = temp_output_37_0_g117958;
				float3 WorldPosition234_g117958 = temp_output_279_0_g117958;
				float4 localSampleStochastic2D234_g117958 = SampleStochastic2D( Texture234_g117958 , Sampler234_g117958 , Coords234_g117958 , WorldPosition234_g117958 );
				TEXTURE2D(Texture263_g117958) = _TerrainAlbedoTex11;
				SamplerState Sampler263_g117958 = SS19_g117998;
				half4 Coords263_g117958 = temp_output_37_0_g117958;
				half3 WorldPosition263_g117958 = temp_output_279_0_g117958;
				half3 WorldNormal263_g117958 = temp_output_280_0_g117958;
				half4 localSampleStochastic3D263_g117958 = SampleStochastic3D( Texture263_g117958 , Sampler263_g117958 , Coords263_g117958 , WorldPosition263_g117958 , WorldNormal263_g117958 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8874_g117895 = localSamplePlanar2D238_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8874_g117895 = localSamplePlanar3D246_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8874_g117895 = localSampleStochastic2D234_g117958;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8874_g117895 = localSampleStochastic3D263_g117958;
				#else
				float4 staticSwitch8874_g117895 = localSamplePlanar2D238_g117958;
				#endif
				half4 Layer338_g117917 = staticSwitch8874_g117895;
				TEXTURE2D(Texture238_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler238_g117959 = SS19_g117998;
				float4 temp_output_37_0_g117959 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117959 = temp_output_37_0_g117959;
				float3 temp_output_279_0_g117959 = Input_Position9197_g117895;
				half3 WorldPosition238_g117959 = temp_output_279_0_g117959;
				half4 localSamplePlanar2D238_g117959 = SamplePlanar2D( Texture238_g117959 , Sampler238_g117959 , Coords238_g117959 , WorldPosition238_g117959 );
				TEXTURE2D(Texture246_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler246_g117959 = SS19_g117998;
				half4 Coords246_g117959 = temp_output_37_0_g117959;
				half3 WorldPosition246_g117959 = temp_output_279_0_g117959;
				float3 temp_output_280_0_g117959 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117959 = temp_output_280_0_g117959;
				half4 localSamplePlanar3D246_g117959 = SamplePlanar3D( Texture246_g117959 , Sampler246_g117959 , Coords246_g117959 , WorldPosition246_g117959 , WorldNormal246_g117959 );
				TEXTURE2D(Texture234_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler234_g117959 = SS19_g117998;
				float4 Coords234_g117959 = temp_output_37_0_g117959;
				float3 WorldPosition234_g117959 = temp_output_279_0_g117959;
				float4 localSampleStochastic2D234_g117959 = SampleStochastic2D( Texture234_g117959 , Sampler234_g117959 , Coords234_g117959 , WorldPosition234_g117959 );
				TEXTURE2D(Texture263_g117959) = _TerrainAlbedoTex12;
				SamplerState Sampler263_g117959 = SS19_g117998;
				half4 Coords263_g117959 = temp_output_37_0_g117959;
				half3 WorldPosition263_g117959 = temp_output_279_0_g117959;
				half3 WorldNormal263_g117959 = temp_output_280_0_g117959;
				half4 localSampleStochastic3D263_g117959 = SampleStochastic3D( Texture263_g117959 , Sampler263_g117959 , Coords263_g117959 , WorldPosition263_g117959 , WorldNormal263_g117959 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8875_g117895 = localSamplePlanar2D238_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8875_g117895 = localSamplePlanar3D246_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8875_g117895 = localSampleStochastic2D234_g117959;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8875_g117895 = localSampleStochastic3D263_g117959;
				#else
				float4 staticSwitch8875_g117895 = localSamplePlanar2D238_g117959;
				#endif
				half4 Layer439_g117917 = staticSwitch8875_g117895;
				float4 weightedBlendVar31_g117917 = Weights52_g117917;
				float4 weightedBlend31_g117917 = ( weightedBlendVar31_g117917.x*Layer133_g117917 + weightedBlendVar31_g117917.y*Layer237_g117917 + weightedBlendVar31_g117917.z*Layer338_g117917 + weightedBlendVar31_g117917.w*Layer439_g117917 );
				half4 Terrain_AAAA_128851_g117895 = weightedBlend31_g117917;
				half4 Layer_1243_g117903 = Terrain_AAAA_128851_g117895;
				#ifdef TVE_TERRAIN_BLEND
				float4 staticSwitch8795_g117895 = weights_167362_g117895;
				#else
				float4 staticSwitch8795_g117895 = control_167362_g117895;
				#endif
				half4 Terrain_Weights_167709_g117895 = staticSwitch8795_g117895;
				half4 Weights52_g117924 = Terrain_Weights_167709_g117895;
				TEXTURE2D(Texture238_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler238_g117963 = SS19_g117998;
				float4 temp_output_37_0_g117963 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117963 = temp_output_37_0_g117963;
				float3 temp_output_279_0_g117963 = Input_Position9197_g117895;
				half3 WorldPosition238_g117963 = temp_output_279_0_g117963;
				half4 localSamplePlanar2D238_g117963 = SamplePlanar2D( Texture238_g117963 , Sampler238_g117963 , Coords238_g117963 , WorldPosition238_g117963 );
				TEXTURE2D(Texture246_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler246_g117963 = SS19_g117998;
				half4 Coords246_g117963 = temp_output_37_0_g117963;
				half3 WorldPosition246_g117963 = temp_output_279_0_g117963;
				float3 temp_output_280_0_g117963 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117963 = temp_output_280_0_g117963;
				half4 localSamplePlanar3D246_g117963 = SamplePlanar3D( Texture246_g117963 , Sampler246_g117963 , Coords246_g117963 , WorldPosition246_g117963 , WorldNormal246_g117963 );
				TEXTURE2D(Texture234_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler234_g117963 = SS19_g117998;
				float4 Coords234_g117963 = temp_output_37_0_g117963;
				float3 WorldPosition234_g117963 = temp_output_279_0_g117963;
				float4 localSampleStochastic2D234_g117963 = SampleStochastic2D( Texture234_g117963 , Sampler234_g117963 , Coords234_g117963 , WorldPosition234_g117963 );
				TEXTURE2D(Texture263_g117963) = _TerrainAlbedoTex13;
				SamplerState Sampler263_g117963 = SS19_g117998;
				half4 Coords263_g117963 = temp_output_37_0_g117963;
				half3 WorldPosition263_g117963 = temp_output_279_0_g117963;
				half3 WorldNormal263_g117963 = temp_output_280_0_g117963;
				half4 localSampleStochastic3D263_g117963 = SampleStochastic3D( Texture263_g117963 , Sampler263_g117963 , Coords263_g117963 , WorldPosition263_g117963 , WorldNormal263_g117963 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8972_g117895 = localSamplePlanar2D238_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8972_g117895 = localSamplePlanar3D246_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8972_g117895 = localSampleStochastic2D234_g117963;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8972_g117895 = localSampleStochastic3D263_g117963;
				#else
				float4 staticSwitch8972_g117895 = localSamplePlanar2D238_g117963;
				#endif
				half4 Layer133_g117924 = staticSwitch8972_g117895;
				TEXTURE2D(Texture238_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler238_g117969 = SS19_g117998;
				float4 temp_output_37_0_g117969 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117969 = temp_output_37_0_g117969;
				float3 temp_output_279_0_g117969 = Input_Position9197_g117895;
				half3 WorldPosition238_g117969 = temp_output_279_0_g117969;
				half4 localSamplePlanar2D238_g117969 = SamplePlanar2D( Texture238_g117969 , Sampler238_g117969 , Coords238_g117969 , WorldPosition238_g117969 );
				TEXTURE2D(Texture246_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler246_g117969 = SS19_g117998;
				half4 Coords246_g117969 = temp_output_37_0_g117969;
				half3 WorldPosition246_g117969 = temp_output_279_0_g117969;
				float3 temp_output_280_0_g117969 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117969 = temp_output_280_0_g117969;
				half4 localSamplePlanar3D246_g117969 = SamplePlanar3D( Texture246_g117969 , Sampler246_g117969 , Coords246_g117969 , WorldPosition246_g117969 , WorldNormal246_g117969 );
				TEXTURE2D(Texture234_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler234_g117969 = SS19_g117998;
				float4 Coords234_g117969 = temp_output_37_0_g117969;
				float3 WorldPosition234_g117969 = temp_output_279_0_g117969;
				float4 localSampleStochastic2D234_g117969 = SampleStochastic2D( Texture234_g117969 , Sampler234_g117969 , Coords234_g117969 , WorldPosition234_g117969 );
				TEXTURE2D(Texture263_g117969) = _TerrainAlbedoTex14;
				SamplerState Sampler263_g117969 = SS19_g117998;
				half4 Coords263_g117969 = temp_output_37_0_g117969;
				half3 WorldPosition263_g117969 = temp_output_279_0_g117969;
				half3 WorldNormal263_g117969 = temp_output_280_0_g117969;
				half4 localSampleStochastic3D263_g117969 = SampleStochastic3D( Texture263_g117969 , Sampler263_g117969 , Coords263_g117969 , WorldPosition263_g117969 , WorldNormal263_g117969 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8973_g117895 = localSamplePlanar2D238_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8973_g117895 = localSamplePlanar3D246_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8973_g117895 = localSampleStochastic2D234_g117969;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8973_g117895 = localSampleStochastic3D263_g117969;
				#else
				float4 staticSwitch8973_g117895 = localSamplePlanar2D238_g117969;
				#endif
				half4 Layer237_g117924 = staticSwitch8973_g117895;
				TEXTURE2D(Texture238_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler238_g117970 = SS19_g117998;
				float4 temp_output_37_0_g117970 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117970 = temp_output_37_0_g117970;
				float3 temp_output_279_0_g117970 = Input_Position9197_g117895;
				half3 WorldPosition238_g117970 = temp_output_279_0_g117970;
				half4 localSamplePlanar2D238_g117970 = SamplePlanar2D( Texture238_g117970 , Sampler238_g117970 , Coords238_g117970 , WorldPosition238_g117970 );
				TEXTURE2D(Texture246_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler246_g117970 = SS19_g117998;
				half4 Coords246_g117970 = temp_output_37_0_g117970;
				half3 WorldPosition246_g117970 = temp_output_279_0_g117970;
				float3 temp_output_280_0_g117970 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117970 = temp_output_280_0_g117970;
				half4 localSamplePlanar3D246_g117970 = SamplePlanar3D( Texture246_g117970 , Sampler246_g117970 , Coords246_g117970 , WorldPosition246_g117970 , WorldNormal246_g117970 );
				TEXTURE2D(Texture234_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler234_g117970 = SS19_g117998;
				float4 Coords234_g117970 = temp_output_37_0_g117970;
				float3 WorldPosition234_g117970 = temp_output_279_0_g117970;
				float4 localSampleStochastic2D234_g117970 = SampleStochastic2D( Texture234_g117970 , Sampler234_g117970 , Coords234_g117970 , WorldPosition234_g117970 );
				TEXTURE2D(Texture263_g117970) = _TerrainAlbedoTex15;
				SamplerState Sampler263_g117970 = SS19_g117998;
				half4 Coords263_g117970 = temp_output_37_0_g117970;
				half3 WorldPosition263_g117970 = temp_output_279_0_g117970;
				half3 WorldNormal263_g117970 = temp_output_280_0_g117970;
				half4 localSampleStochastic3D263_g117970 = SampleStochastic3D( Texture263_g117970 , Sampler263_g117970 , Coords263_g117970 , WorldPosition263_g117970 , WorldNormal263_g117970 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8974_g117895 = localSamplePlanar2D238_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8974_g117895 = localSamplePlanar3D246_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8974_g117895 = localSampleStochastic2D234_g117970;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8974_g117895 = localSampleStochastic3D263_g117970;
				#else
				float4 staticSwitch8974_g117895 = localSamplePlanar2D238_g117970;
				#endif
				half4 Layer338_g117924 = staticSwitch8974_g117895;
				TEXTURE2D(Texture238_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler238_g117971 = SS19_g117998;
				float4 temp_output_37_0_g117971 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117971 = temp_output_37_0_g117971;
				float3 temp_output_279_0_g117971 = Input_Position9197_g117895;
				half3 WorldPosition238_g117971 = temp_output_279_0_g117971;
				half4 localSamplePlanar2D238_g117971 = SamplePlanar2D( Texture238_g117971 , Sampler238_g117971 , Coords238_g117971 , WorldPosition238_g117971 );
				TEXTURE2D(Texture246_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler246_g117971 = SS19_g117998;
				half4 Coords246_g117971 = temp_output_37_0_g117971;
				half3 WorldPosition246_g117971 = temp_output_279_0_g117971;
				float3 temp_output_280_0_g117971 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117971 = temp_output_280_0_g117971;
				half4 localSamplePlanar3D246_g117971 = SamplePlanar3D( Texture246_g117971 , Sampler246_g117971 , Coords246_g117971 , WorldPosition246_g117971 , WorldNormal246_g117971 );
				TEXTURE2D(Texture234_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler234_g117971 = SS19_g117998;
				float4 Coords234_g117971 = temp_output_37_0_g117971;
				float3 WorldPosition234_g117971 = temp_output_279_0_g117971;
				float4 localSampleStochastic2D234_g117971 = SampleStochastic2D( Texture234_g117971 , Sampler234_g117971 , Coords234_g117971 , WorldPosition234_g117971 );
				TEXTURE2D(Texture263_g117971) = _TerrainAlbedoTex16;
				SamplerState Sampler263_g117971 = SS19_g117998;
				half4 Coords263_g117971 = temp_output_37_0_g117971;
				half3 WorldPosition263_g117971 = temp_output_279_0_g117971;
				half3 WorldNormal263_g117971 = temp_output_280_0_g117971;
				half4 localSampleStochastic3D263_g117971 = SampleStochastic3D( Texture263_g117971 , Sampler263_g117971 , Coords263_g117971 , WorldPosition263_g117971 , WorldNormal263_g117971 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8975_g117895 = localSamplePlanar2D238_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8975_g117895 = localSamplePlanar3D246_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8975_g117895 = localSampleStochastic2D234_g117971;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8975_g117895 = localSampleStochastic3D263_g117971;
				#else
				float4 staticSwitch8975_g117895 = localSamplePlanar2D238_g117971;
				#endif
				half4 Layer439_g117924 = staticSwitch8975_g117895;
				float4 weightedBlendVar31_g117924 = Weights52_g117924;
				float4 weightedBlend31_g117924 = ( weightedBlendVar31_g117924.x*Layer133_g117924 + weightedBlendVar31_g117924.y*Layer237_g117924 + weightedBlendVar31_g117924.z*Layer338_g117924 + weightedBlendVar31_g117924.w*Layer439_g117924 );
				half4 Terrain_AAAA_168986_g117895 = weightedBlend31_g117924;
				half4 Layer_1644_g117903 = Terrain_AAAA_168986_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117903 = Layer_045_g117903;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 + Layer_1243_g117903 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117903 = ( Layer_045_g117903 + Layer_0810_g117903 + Layer_1243_g117903 + Layer_1644_g117903 );
				#else
				float4 staticSwitch40_g117903 = Layer_045_g117903;
				#endif
				half4 Blend_Albedo7468_g117895 = staticSwitch40_g117903;
				half4 Weights52_g117989 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117989 = _TerrainColor1;
				half4 Layer237_g117989 = _TerrainColor2;
				half4 Layer338_g117989 = _TerrainColor3;
				half4 Layer439_g117989 = _TerrainColor4;
				float4 weightedBlendVar31_g117989 = Weights52_g117989;
				float4 weightedBlend31_g117989 = ( weightedBlendVar31_g117989.x*Layer133_g117989 + weightedBlendVar31_g117989.y*Layer237_g117989 + weightedBlendVar31_g117989.z*Layer338_g117989 + weightedBlendVar31_g117989.w*Layer439_g117989 );
				half4 Terrain_Color_049349_g117895 = weightedBlend31_g117989;
				half4 Layer_045_g117994 = Terrain_Color_049349_g117895;
				half4 Weights52_g117990 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117990 = _TerrainColor5;
				half4 Layer237_g117990 = _TerrainColor6;
				half4 Layer338_g117990 = _TerrainColor7;
				half4 Layer439_g117990 = _TerrainColor8;
				float4 weightedBlendVar31_g117990 = Weights52_g117990;
				float4 weightedBlend31_g117990 = ( weightedBlendVar31_g117990.x*Layer133_g117990 + weightedBlendVar31_g117990.y*Layer237_g117990 + weightedBlendVar31_g117990.z*Layer338_g117990 + weightedBlendVar31_g117990.w*Layer439_g117990 );
				half4 Terrain_Color_089361_g117895 = weightedBlend31_g117990;
				half4 Layer_0810_g117994 = Terrain_Color_089361_g117895;
				half4 Weights52_g117991 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117991 = _TerrainColor9;
				half4 Layer237_g117991 = _TerrainColor10;
				half4 Layer338_g117991 = _TerrainColor11;
				half4 Layer439_g117991 = _TerrainColor12;
				float4 weightedBlendVar31_g117991 = Weights52_g117991;
				float4 weightedBlend31_g117991 = ( weightedBlendVar31_g117991.x*Layer133_g117991 + weightedBlendVar31_g117991.y*Layer237_g117991 + weightedBlendVar31_g117991.z*Layer338_g117991 + weightedBlendVar31_g117991.w*Layer439_g117991 );
				half4 Terrain_Color_129373_g117895 = weightedBlend31_g117991;
				half4 Layer_1243_g117994 = Terrain_Color_129373_g117895;
				half4 Weights52_g117992 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117992 = _TerrainColor13;
				half4 Layer237_g117992 = _TerrainColor14;
				half4 Layer338_g117992 = _TerrainColor15;
				half4 Layer439_g117992 = _TerrainColor16;
				float4 weightedBlendVar31_g117992 = Weights52_g117992;
				float4 weightedBlend31_g117992 = ( weightedBlendVar31_g117992.x*Layer133_g117992 + weightedBlendVar31_g117992.y*Layer237_g117992 + weightedBlendVar31_g117992.z*Layer338_g117992 + weightedBlendVar31_g117992.w*Layer439_g117992 );
				half4 Terrain_Color_169381_g117895 = weightedBlend31_g117992;
				half4 Layer_1644_g117994 = Terrain_Color_169381_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117994 = Layer_045_g117994;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 + Layer_1243_g117994 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117994 = ( Layer_045_g117994 + Layer_0810_g117994 + Layer_1243_g117994 + Layer_1644_g117994 );
				#else
				float4 staticSwitch40_g117994 = Layer_045_g117994;
				#endif
				half4 Blend_TerrainColor9387_g117895 = staticSwitch40_g117994;
				half3 Final_Albedo9144_g117895 = ( (Blend_Albedo7468_g117895).xyz * (Blend_TerrainColor9387_g117895).rgb * (_TerrainColor).rgb );
				half3 Local_Albedo9199_g117893 = Final_Albedo9144_g117895;
				float3 In_Albedo3_g117894 = Local_Albedo9199_g117893;
				float3 In_AlbedoRaw3_g117894 = Local_Albedo9199_g117893;
				float3 ase_worldBitangent = packedInput.ase_texcoord7.xyz;
				float3x3 ase_worldToTangent = float3x3(packedInput.tangentWS.xyz,ase_worldBitangent,packedInput.normalWS);
				half4 Weights52_g117896 = Terrain_Weights_046781_g117895;
				TEXTURE2D(Texture238_g117987) = _TerrainNormalTex1;
				float localFilterTexture29_g118002 = ( 0.0 );
				SamplerState SamplerDefault29_g118002 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g118002 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g118002 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g118002 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g118002 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g118002 = SamplerDefault29_g118002;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g118002 = SamplerDefault29_g118002;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g118002 = SamplerPoint29_g118002;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g118002 = SamplerLow29_g118002;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g118002 = SamplerMedium29_g118002;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g118002 = SamplerHigh29_g118002;
				#endif
				SamplerState Sampler238_g117987 = SS29_g118002;
				float4 temp_output_37_0_g117987 = Input_Terrain_Coords_016785_g117895;
				half4 Coords238_g117987 = temp_output_37_0_g117987;
				float3 temp_output_279_0_g117987 = Input_Position9197_g117895;
				half3 WorldPosition238_g117987 = temp_output_279_0_g117987;
				half4 localSamplePlanar2D238_g117987 = SamplePlanar2D( Texture238_g117987 , Sampler238_g117987 , Coords238_g117987 , WorldPosition238_g117987 );
				TEXTURE2D(Texture246_g117987) = _TerrainNormalTex1;
				SamplerState Sampler246_g117987 = SS29_g118002;
				half4 Coords246_g117987 = temp_output_37_0_g117987;
				half3 WorldPosition246_g117987 = temp_output_279_0_g117987;
				float3 temp_output_280_0_g117987 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117987 = temp_output_280_0_g117987;
				half4 localSamplePlanar3D246_g117987 = SamplePlanar3D( Texture246_g117987 , Sampler246_g117987 , Coords246_g117987 , WorldPosition246_g117987 , WorldNormal246_g117987 );
				TEXTURE2D(Texture234_g117987) = _TerrainNormalTex1;
				SamplerState Sampler234_g117987 = SS29_g118002;
				float4 Coords234_g117987 = temp_output_37_0_g117987;
				float3 WorldPosition234_g117987 = temp_output_279_0_g117987;
				float4 localSampleStochastic2D234_g117987 = SampleStochastic2D( Texture234_g117987 , Sampler234_g117987 , Coords234_g117987 , WorldPosition234_g117987 );
				TEXTURE2D(Texture263_g117987) = _TerrainNormalTex1;
				SamplerState Sampler263_g117987 = SS29_g118002;
				half4 Coords263_g117987 = temp_output_37_0_g117987;
				half3 WorldPosition263_g117987 = temp_output_279_0_g117987;
				half3 WorldNormal263_g117987 = temp_output_280_0_g117987;
				half4 localSampleStochastic3D263_g117987 = SampleStochastic3D( Texture263_g117987 , Sampler263_g117987 , Coords263_g117987 , WorldPosition263_g117987 , WorldNormal263_g117987 );
				#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
				float4 staticSwitch8635_g117895 = localSamplePlanar2D238_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
				float4 staticSwitch8635_g117895 = localSamplePlanar3D246_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
				float4 staticSwitch8635_g117895 = localSampleStochastic2D234_g117987;
				#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
				float4 staticSwitch8635_g117895 = localSampleStochastic3D263_g117987;
				#else
				float4 staticSwitch8635_g117895 = localSamplePlanar2D238_g117987;
				#endif
				half4 Layer133_g117896 = staticSwitch8635_g117895;
				TEXTURE2D(Texture238_g117943) = _TerrainNormalTex2;
				SamplerState Sampler238_g117943 = SS29_g118002;
				float4 temp_output_37_0_g117943 = Input_Terrain_Coords_026787_g117895;
				half4 Coords238_g117943 = temp_output_37_0_g117943;
				float3 temp_output_279_0_g117943 = Input_Position9197_g117895;
				half3 WorldPosition238_g117943 = temp_output_279_0_g117943;
				half4 localSamplePlanar2D238_g117943 = SamplePlanar2D( Texture238_g117943 , Sampler238_g117943 , Coords238_g117943 , WorldPosition238_g117943 );
				TEXTURE2D(Texture246_g117943) = _TerrainNormalTex2;
				SamplerState Sampler246_g117943 = SS29_g118002;
				half4 Coords246_g117943 = temp_output_37_0_g117943;
				half3 WorldPosition246_g117943 = temp_output_279_0_g117943;
				float3 temp_output_280_0_g117943 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117943 = temp_output_280_0_g117943;
				half4 localSamplePlanar3D246_g117943 = SamplePlanar3D( Texture246_g117943 , Sampler246_g117943 , Coords246_g117943 , WorldPosition246_g117943 , WorldNormal246_g117943 );
				TEXTURE2D(Texture234_g117943) = _TerrainNormalTex2;
				SamplerState Sampler234_g117943 = SS29_g118002;
				float4 Coords234_g117943 = temp_output_37_0_g117943;
				float3 WorldPosition234_g117943 = temp_output_279_0_g117943;
				float4 localSampleStochastic2D234_g117943 = SampleStochastic2D( Texture234_g117943 , Sampler234_g117943 , Coords234_g117943 , WorldPosition234_g117943 );
				TEXTURE2D(Texture263_g117943) = _TerrainNormalTex2;
				SamplerState Sampler263_g117943 = SS29_g118002;
				half4 Coords263_g117943 = temp_output_37_0_g117943;
				half3 WorldPosition263_g117943 = temp_output_279_0_g117943;
				half3 WorldNormal263_g117943 = temp_output_280_0_g117943;
				half4 localSampleStochastic3D263_g117943 = SampleStochastic3D( Texture263_g117943 , Sampler263_g117943 , Coords263_g117943 , WorldPosition263_g117943 , WorldNormal263_g117943 );
				#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
				float4 staticSwitch8636_g117895 = localSamplePlanar2D238_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
				float4 staticSwitch8636_g117895 = localSamplePlanar3D246_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
				float4 staticSwitch8636_g117895 = localSampleStochastic2D234_g117943;
				#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
				float4 staticSwitch8636_g117895 = localSampleStochastic3D263_g117943;
				#else
				float4 staticSwitch8636_g117895 = localSamplePlanar2D238_g117943;
				#endif
				half4 Layer237_g117896 = staticSwitch8636_g117895;
				TEXTURE2D(Texture238_g117946) = _TerrainNormalTex3;
				SamplerState Sampler238_g117946 = SS29_g118002;
				float4 temp_output_37_0_g117946 = Input_Terrain_Coords_036789_g117895;
				half4 Coords238_g117946 = temp_output_37_0_g117946;
				float3 temp_output_279_0_g117946 = Input_Position9197_g117895;
				half3 WorldPosition238_g117946 = temp_output_279_0_g117946;
				half4 localSamplePlanar2D238_g117946 = SamplePlanar2D( Texture238_g117946 , Sampler238_g117946 , Coords238_g117946 , WorldPosition238_g117946 );
				TEXTURE2D(Texture246_g117946) = _TerrainNormalTex3;
				SamplerState Sampler246_g117946 = SS29_g118002;
				half4 Coords246_g117946 = temp_output_37_0_g117946;
				half3 WorldPosition246_g117946 = temp_output_279_0_g117946;
				float3 temp_output_280_0_g117946 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117946 = temp_output_280_0_g117946;
				half4 localSamplePlanar3D246_g117946 = SamplePlanar3D( Texture246_g117946 , Sampler246_g117946 , Coords246_g117946 , WorldPosition246_g117946 , WorldNormal246_g117946 );
				TEXTURE2D(Texture234_g117946) = _TerrainNormalTex3;
				SamplerState Sampler234_g117946 = SS29_g118002;
				float4 Coords234_g117946 = temp_output_37_0_g117946;
				float3 WorldPosition234_g117946 = temp_output_279_0_g117946;
				float4 localSampleStochastic2D234_g117946 = SampleStochastic2D( Texture234_g117946 , Sampler234_g117946 , Coords234_g117946 , WorldPosition234_g117946 );
				TEXTURE2D(Texture263_g117946) = _TerrainNormalTex3;
				SamplerState Sampler263_g117946 = SS29_g118002;
				half4 Coords263_g117946 = temp_output_37_0_g117946;
				half3 WorldPosition263_g117946 = temp_output_279_0_g117946;
				half3 WorldNormal263_g117946 = temp_output_280_0_g117946;
				half4 localSampleStochastic3D263_g117946 = SampleStochastic3D( Texture263_g117946 , Sampler263_g117946 , Coords263_g117946 , WorldPosition263_g117946 , WorldNormal263_g117946 );
				#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
				float4 staticSwitch8637_g117895 = localSamplePlanar2D238_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
				float4 staticSwitch8637_g117895 = localSamplePlanar3D246_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
				float4 staticSwitch8637_g117895 = localSampleStochastic2D234_g117946;
				#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
				float4 staticSwitch8637_g117895 = localSampleStochastic3D263_g117946;
				#else
				float4 staticSwitch8637_g117895 = localSamplePlanar2D238_g117946;
				#endif
				half4 Layer338_g117896 = staticSwitch8637_g117895;
				TEXTURE2D(Texture238_g117948) = _TerrainNormalTex4;
				SamplerState Sampler238_g117948 = SS29_g118002;
				float4 temp_output_37_0_g117948 = Input_Terrain_Coords_046791_g117895;
				half4 Coords238_g117948 = temp_output_37_0_g117948;
				float3 temp_output_279_0_g117948 = Input_Position9197_g117895;
				half3 WorldPosition238_g117948 = temp_output_279_0_g117948;
				half4 localSamplePlanar2D238_g117948 = SamplePlanar2D( Texture238_g117948 , Sampler238_g117948 , Coords238_g117948 , WorldPosition238_g117948 );
				TEXTURE2D(Texture246_g117948) = _TerrainNormalTex4;
				SamplerState Sampler246_g117948 = SS29_g118002;
				half4 Coords246_g117948 = temp_output_37_0_g117948;
				half3 WorldPosition246_g117948 = temp_output_279_0_g117948;
				float3 temp_output_280_0_g117948 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117948 = temp_output_280_0_g117948;
				half4 localSamplePlanar3D246_g117948 = SamplePlanar3D( Texture246_g117948 , Sampler246_g117948 , Coords246_g117948 , WorldPosition246_g117948 , WorldNormal246_g117948 );
				TEXTURE2D(Texture234_g117948) = _TerrainNormalTex4;
				SamplerState Sampler234_g117948 = SS29_g118002;
				float4 Coords234_g117948 = temp_output_37_0_g117948;
				float3 WorldPosition234_g117948 = temp_output_279_0_g117948;
				float4 localSampleStochastic2D234_g117948 = SampleStochastic2D( Texture234_g117948 , Sampler234_g117948 , Coords234_g117948 , WorldPosition234_g117948 );
				TEXTURE2D(Texture263_g117948) = _TerrainNormalTex4;
				SamplerState Sampler263_g117948 = SS29_g118002;
				half4 Coords263_g117948 = temp_output_37_0_g117948;
				half3 WorldPosition263_g117948 = temp_output_279_0_g117948;
				half3 WorldNormal263_g117948 = temp_output_280_0_g117948;
				half4 localSampleStochastic3D263_g117948 = SampleStochastic3D( Texture263_g117948 , Sampler263_g117948 , Coords263_g117948 , WorldPosition263_g117948 , WorldNormal263_g117948 );
				#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
				float4 staticSwitch8638_g117895 = localSamplePlanar2D238_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
				float4 staticSwitch8638_g117895 = localSamplePlanar3D246_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
				float4 staticSwitch8638_g117895 = localSampleStochastic2D234_g117948;
				#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
				float4 staticSwitch8638_g117895 = localSampleStochastic3D263_g117948;
				#else
				float4 staticSwitch8638_g117895 = localSamplePlanar2D238_g117948;
				#endif
				half4 Layer439_g117896 = staticSwitch8638_g117895;
				float4 weightedBlendVar31_g117896 = Weights52_g117896;
				float4 weightedBlend31_g117896 = ( weightedBlendVar31_g117896.x*Layer133_g117896 + weightedBlendVar31_g117896.y*Layer237_g117896 + weightedBlendVar31_g117896.z*Layer338_g117896 + weightedBlendVar31_g117896.w*Layer439_g117896 );
				half4 Terrain_B_047202_g117895 = weightedBlend31_g117896;
				half4 Layer_045_g117902 = Terrain_B_047202_g117895;
				half4 Weights52_g117911 = Terrain_Weights_087340_g117895;
				TEXTURE2D(Texture238_g117952) = _TerrainNormalTex5;
				SamplerState Sampler238_g117952 = SS29_g118002;
				float4 temp_output_37_0_g117952 = Input_Terrain_Coords_058750_g117895;
				half4 Coords238_g117952 = temp_output_37_0_g117952;
				float3 temp_output_279_0_g117952 = Input_Position9197_g117895;
				half3 WorldPosition238_g117952 = temp_output_279_0_g117952;
				half4 localSamplePlanar2D238_g117952 = SamplePlanar2D( Texture238_g117952 , Sampler238_g117952 , Coords238_g117952 , WorldPosition238_g117952 );
				TEXTURE2D(Texture246_g117952) = _TerrainNormalTex5;
				SamplerState Sampler246_g117952 = SS29_g118002;
				half4 Coords246_g117952 = temp_output_37_0_g117952;
				half3 WorldPosition246_g117952 = temp_output_279_0_g117952;
				float3 temp_output_280_0_g117952 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117952 = temp_output_280_0_g117952;
				half4 localSamplePlanar3D246_g117952 = SamplePlanar3D( Texture246_g117952 , Sampler246_g117952 , Coords246_g117952 , WorldPosition246_g117952 , WorldNormal246_g117952 );
				TEXTURE2D(Texture234_g117952) = _TerrainNormalTex5;
				SamplerState Sampler234_g117952 = SS29_g118002;
				float4 Coords234_g117952 = temp_output_37_0_g117952;
				float3 WorldPosition234_g117952 = temp_output_279_0_g117952;
				float4 localSampleStochastic2D234_g117952 = SampleStochastic2D( Texture234_g117952 , Sampler234_g117952 , Coords234_g117952 , WorldPosition234_g117952 );
				TEXTURE2D(Texture263_g117952) = _TerrainNormalTex5;
				SamplerState Sampler263_g117952 = SS29_g118002;
				half4 Coords263_g117952 = temp_output_37_0_g117952;
				half3 WorldPosition263_g117952 = temp_output_279_0_g117952;
				half3 WorldNormal263_g117952 = temp_output_280_0_g117952;
				half4 localSampleStochastic3D263_g117952 = SampleStochastic3D( Texture263_g117952 , Sampler263_g117952 , Coords263_g117952 , WorldPosition263_g117952 , WorldNormal263_g117952 );
				#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
				float4 staticSwitch8686_g117895 = localSamplePlanar2D238_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
				float4 staticSwitch8686_g117895 = localSamplePlanar3D246_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
				float4 staticSwitch8686_g117895 = localSampleStochastic2D234_g117952;
				#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
				float4 staticSwitch8686_g117895 = localSampleStochastic3D263_g117952;
				#else
				float4 staticSwitch8686_g117895 = localSamplePlanar2D238_g117952;
				#endif
				half4 Layer133_g117911 = staticSwitch8686_g117895;
				TEXTURE2D(Texture238_g117981) = _TerrainNormalTex6;
				SamplerState Sampler238_g117981 = SS29_g118002;
				float4 temp_output_37_0_g117981 = Input_Terrain_Coords_068751_g117895;
				half4 Coords238_g117981 = temp_output_37_0_g117981;
				float3 temp_output_279_0_g117981 = Input_Position9197_g117895;
				half3 WorldPosition238_g117981 = temp_output_279_0_g117981;
				half4 localSamplePlanar2D238_g117981 = SamplePlanar2D( Texture238_g117981 , Sampler238_g117981 , Coords238_g117981 , WorldPosition238_g117981 );
				TEXTURE2D(Texture246_g117981) = _TerrainNormalTex6;
				SamplerState Sampler246_g117981 = SS29_g118002;
				half4 Coords246_g117981 = temp_output_37_0_g117981;
				half3 WorldPosition246_g117981 = temp_output_279_0_g117981;
				float3 temp_output_280_0_g117981 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117981 = temp_output_280_0_g117981;
				half4 localSamplePlanar3D246_g117981 = SamplePlanar3D( Texture246_g117981 , Sampler246_g117981 , Coords246_g117981 , WorldPosition246_g117981 , WorldNormal246_g117981 );
				TEXTURE2D(Texture234_g117981) = _TerrainNormalTex6;
				SamplerState Sampler234_g117981 = SS29_g118002;
				float4 Coords234_g117981 = temp_output_37_0_g117981;
				float3 WorldPosition234_g117981 = temp_output_279_0_g117981;
				float4 localSampleStochastic2D234_g117981 = SampleStochastic2D( Texture234_g117981 , Sampler234_g117981 , Coords234_g117981 , WorldPosition234_g117981 );
				TEXTURE2D(Texture263_g117981) = _TerrainNormalTex6;
				SamplerState Sampler263_g117981 = SS29_g118002;
				half4 Coords263_g117981 = temp_output_37_0_g117981;
				half3 WorldPosition263_g117981 = temp_output_279_0_g117981;
				half3 WorldNormal263_g117981 = temp_output_280_0_g117981;
				half4 localSampleStochastic3D263_g117981 = SampleStochastic3D( Texture263_g117981 , Sampler263_g117981 , Coords263_g117981 , WorldPosition263_g117981 , WorldNormal263_g117981 );
				#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
				float4 staticSwitch8687_g117895 = localSamplePlanar2D238_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
				float4 staticSwitch8687_g117895 = localSamplePlanar3D246_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
				float4 staticSwitch8687_g117895 = localSampleStochastic2D234_g117981;
				#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
				float4 staticSwitch8687_g117895 = localSampleStochastic3D263_g117981;
				#else
				float4 staticSwitch8687_g117895 = localSamplePlanar2D238_g117981;
				#endif
				half4 Layer237_g117911 = staticSwitch8687_g117895;
				TEXTURE2D(Texture238_g117982) = _TerrainNormalTex7;
				SamplerState Sampler238_g117982 = SS29_g118002;
				float4 temp_output_37_0_g117982 = Input_Terrain_Coords_078752_g117895;
				half4 Coords238_g117982 = temp_output_37_0_g117982;
				float3 temp_output_279_0_g117982 = Input_Position9197_g117895;
				half3 WorldPosition238_g117982 = temp_output_279_0_g117982;
				half4 localSamplePlanar2D238_g117982 = SamplePlanar2D( Texture238_g117982 , Sampler238_g117982 , Coords238_g117982 , WorldPosition238_g117982 );
				TEXTURE2D(Texture246_g117982) = _TerrainNormalTex7;
				SamplerState Sampler246_g117982 = SS29_g118002;
				half4 Coords246_g117982 = temp_output_37_0_g117982;
				half3 WorldPosition246_g117982 = temp_output_279_0_g117982;
				float3 temp_output_280_0_g117982 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117982 = temp_output_280_0_g117982;
				half4 localSamplePlanar3D246_g117982 = SamplePlanar3D( Texture246_g117982 , Sampler246_g117982 , Coords246_g117982 , WorldPosition246_g117982 , WorldNormal246_g117982 );
				TEXTURE2D(Texture234_g117982) = _TerrainNormalTex7;
				SamplerState Sampler234_g117982 = SS29_g118002;
				float4 Coords234_g117982 = temp_output_37_0_g117982;
				float3 WorldPosition234_g117982 = temp_output_279_0_g117982;
				float4 localSampleStochastic2D234_g117982 = SampleStochastic2D( Texture234_g117982 , Sampler234_g117982 , Coords234_g117982 , WorldPosition234_g117982 );
				TEXTURE2D(Texture263_g117982) = _TerrainNormalTex7;
				SamplerState Sampler263_g117982 = SS29_g118002;
				half4 Coords263_g117982 = temp_output_37_0_g117982;
				half3 WorldPosition263_g117982 = temp_output_279_0_g117982;
				half3 WorldNormal263_g117982 = temp_output_280_0_g117982;
				half4 localSampleStochastic3D263_g117982 = SampleStochastic3D( Texture263_g117982 , Sampler263_g117982 , Coords263_g117982 , WorldPosition263_g117982 , WorldNormal263_g117982 );
				#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
				float4 staticSwitch8688_g117895 = localSamplePlanar2D238_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
				float4 staticSwitch8688_g117895 = localSamplePlanar3D246_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
				float4 staticSwitch8688_g117895 = localSampleStochastic2D234_g117982;
				#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
				float4 staticSwitch8688_g117895 = localSampleStochastic3D263_g117982;
				#else
				float4 staticSwitch8688_g117895 = localSamplePlanar2D238_g117982;
				#endif
				half4 Layer338_g117911 = staticSwitch8688_g117895;
				TEXTURE2D(Texture238_g117983) = _TerrainNormalTex8;
				SamplerState Sampler238_g117983 = SS29_g118002;
				float4 temp_output_37_0_g117983 = Input_Terrain_Coords_088749_g117895;
				half4 Coords238_g117983 = temp_output_37_0_g117983;
				float3 temp_output_279_0_g117983 = Input_Position9197_g117895;
				half3 WorldPosition238_g117983 = temp_output_279_0_g117983;
				half4 localSamplePlanar2D238_g117983 = SamplePlanar2D( Texture238_g117983 , Sampler238_g117983 , Coords238_g117983 , WorldPosition238_g117983 );
				TEXTURE2D(Texture246_g117983) = _TerrainNormalTex8;
				SamplerState Sampler246_g117983 = SS29_g118002;
				half4 Coords246_g117983 = temp_output_37_0_g117983;
				half3 WorldPosition246_g117983 = temp_output_279_0_g117983;
				float3 temp_output_280_0_g117983 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117983 = temp_output_280_0_g117983;
				half4 localSamplePlanar3D246_g117983 = SamplePlanar3D( Texture246_g117983 , Sampler246_g117983 , Coords246_g117983 , WorldPosition246_g117983 , WorldNormal246_g117983 );
				TEXTURE2D(Texture234_g117983) = _TerrainNormalTex8;
				SamplerState Sampler234_g117983 = SS29_g118002;
				float4 Coords234_g117983 = temp_output_37_0_g117983;
				float3 WorldPosition234_g117983 = temp_output_279_0_g117983;
				float4 localSampleStochastic2D234_g117983 = SampleStochastic2D( Texture234_g117983 , Sampler234_g117983 , Coords234_g117983 , WorldPosition234_g117983 );
				TEXTURE2D(Texture263_g117983) = _TerrainNormalTex8;
				SamplerState Sampler263_g117983 = SS29_g118002;
				half4 Coords263_g117983 = temp_output_37_0_g117983;
				half3 WorldPosition263_g117983 = temp_output_279_0_g117983;
				half3 WorldNormal263_g117983 = temp_output_280_0_g117983;
				half4 localSampleStochastic3D263_g117983 = SampleStochastic3D( Texture263_g117983 , Sampler263_g117983 , Coords263_g117983 , WorldPosition263_g117983 , WorldNormal263_g117983 );
				#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
				float4 staticSwitch8689_g117895 = localSamplePlanar2D238_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
				float4 staticSwitch8689_g117895 = localSamplePlanar3D246_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
				float4 staticSwitch8689_g117895 = localSampleStochastic2D234_g117983;
				#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
				float4 staticSwitch8689_g117895 = localSampleStochastic3D263_g117983;
				#else
				float4 staticSwitch8689_g117895 = localSamplePlanar2D238_g117983;
				#endif
				half4 Layer439_g117911 = staticSwitch8689_g117895;
				float4 weightedBlendVar31_g117911 = Weights52_g117911;
				float4 weightedBlend31_g117911 = ( weightedBlendVar31_g117911.x*Layer133_g117911 + weightedBlendVar31_g117911.y*Layer237_g117911 + weightedBlendVar31_g117911.z*Layer338_g117911 + weightedBlendVar31_g117911.w*Layer439_g117911 );
				half4 Terrain_B_088684_g117895 = weightedBlend31_g117911;
				half4 Layer_0810_g117902 = Terrain_B_088684_g117895;
				half4 Weights52_g117918 = Terrain_Weights_127710_g117895;
				TEXTURE2D(Texture238_g117955) = _TerrainNormalTex9;
				SamplerState Sampler238_g117955 = SS29_g118002;
				float4 temp_output_37_0_g117955 = Input_Terrain_Coords_098833_g117895;
				half4 Coords238_g117955 = temp_output_37_0_g117955;
				float3 temp_output_279_0_g117955 = Input_Position9197_g117895;
				half3 WorldPosition238_g117955 = temp_output_279_0_g117955;
				half4 localSamplePlanar2D238_g117955 = SamplePlanar2D( Texture238_g117955 , Sampler238_g117955 , Coords238_g117955 , WorldPosition238_g117955 );
				TEXTURE2D(Texture246_g117955) = _TerrainNormalTex9;
				SamplerState Sampler246_g117955 = SS29_g118002;
				half4 Coords246_g117955 = temp_output_37_0_g117955;
				half3 WorldPosition246_g117955 = temp_output_279_0_g117955;
				float3 temp_output_280_0_g117955 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117955 = temp_output_280_0_g117955;
				half4 localSamplePlanar3D246_g117955 = SamplePlanar3D( Texture246_g117955 , Sampler246_g117955 , Coords246_g117955 , WorldPosition246_g117955 , WorldNormal246_g117955 );
				TEXTURE2D(Texture234_g117955) = _TerrainNormalTex9;
				SamplerState Sampler234_g117955 = SS29_g118002;
				float4 Coords234_g117955 = temp_output_37_0_g117955;
				float3 WorldPosition234_g117955 = temp_output_279_0_g117955;
				float4 localSampleStochastic2D234_g117955 = SampleStochastic2D( Texture234_g117955 , Sampler234_g117955 , Coords234_g117955 , WorldPosition234_g117955 );
				TEXTURE2D(Texture263_g117955) = _TerrainNormalTex9;
				SamplerState Sampler263_g117955 = SS29_g118002;
				half4 Coords263_g117955 = temp_output_37_0_g117955;
				half3 WorldPosition263_g117955 = temp_output_279_0_g117955;
				half3 WorldNormal263_g117955 = temp_output_280_0_g117955;
				half4 localSampleStochastic3D263_g117955 = SampleStochastic3D( Texture263_g117955 , Sampler263_g117955 , Coords263_g117955 , WorldPosition263_g117955 , WorldNormal263_g117955 );
				#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
				float4 staticSwitch8849_g117895 = localSamplePlanar2D238_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
				float4 staticSwitch8849_g117895 = localSamplePlanar3D246_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
				float4 staticSwitch8849_g117895 = localSampleStochastic2D234_g117955;
				#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
				float4 staticSwitch8849_g117895 = localSampleStochastic3D263_g117955;
				#else
				float4 staticSwitch8849_g117895 = localSamplePlanar2D238_g117955;
				#endif
				half4 Layer133_g117918 = staticSwitch8849_g117895;
				TEXTURE2D(Texture238_g117960) = _TerrainNormalTex10;
				SamplerState Sampler238_g117960 = SS29_g118002;
				float4 temp_output_37_0_g117960 = Input_Terrain_Coords_108834_g117895;
				half4 Coords238_g117960 = temp_output_37_0_g117960;
				float3 temp_output_279_0_g117960 = Input_Position9197_g117895;
				half3 WorldPosition238_g117960 = temp_output_279_0_g117960;
				half4 localSamplePlanar2D238_g117960 = SamplePlanar2D( Texture238_g117960 , Sampler238_g117960 , Coords238_g117960 , WorldPosition238_g117960 );
				TEXTURE2D(Texture246_g117960) = _TerrainNormalTex10;
				SamplerState Sampler246_g117960 = SS29_g118002;
				half4 Coords246_g117960 = temp_output_37_0_g117960;
				half3 WorldPosition246_g117960 = temp_output_279_0_g117960;
				float3 temp_output_280_0_g117960 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117960 = temp_output_280_0_g117960;
				half4 localSamplePlanar3D246_g117960 = SamplePlanar3D( Texture246_g117960 , Sampler246_g117960 , Coords246_g117960 , WorldPosition246_g117960 , WorldNormal246_g117960 );
				TEXTURE2D(Texture234_g117960) = _TerrainNormalTex10;
				SamplerState Sampler234_g117960 = SS29_g118002;
				float4 Coords234_g117960 = temp_output_37_0_g117960;
				float3 WorldPosition234_g117960 = temp_output_279_0_g117960;
				float4 localSampleStochastic2D234_g117960 = SampleStochastic2D( Texture234_g117960 , Sampler234_g117960 , Coords234_g117960 , WorldPosition234_g117960 );
				TEXTURE2D(Texture263_g117960) = _TerrainNormalTex10;
				SamplerState Sampler263_g117960 = SS29_g118002;
				half4 Coords263_g117960 = temp_output_37_0_g117960;
				half3 WorldPosition263_g117960 = temp_output_279_0_g117960;
				half3 WorldNormal263_g117960 = temp_output_280_0_g117960;
				half4 localSampleStochastic3D263_g117960 = SampleStochastic3D( Texture263_g117960 , Sampler263_g117960 , Coords263_g117960 , WorldPosition263_g117960 , WorldNormal263_g117960 );
				#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
				float4 staticSwitch8876_g117895 = localSamplePlanar2D238_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
				float4 staticSwitch8876_g117895 = localSamplePlanar3D246_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
				float4 staticSwitch8876_g117895 = localSampleStochastic2D234_g117960;
				#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
				float4 staticSwitch8876_g117895 = localSampleStochastic3D263_g117960;
				#else
				float4 staticSwitch8876_g117895 = localSamplePlanar2D238_g117960;
				#endif
				half4 Layer237_g117918 = staticSwitch8876_g117895;
				TEXTURE2D(Texture238_g117961) = _TerrainNormalTex11;
				SamplerState Sampler238_g117961 = SS29_g118002;
				float4 temp_output_37_0_g117961 = Input_Terrain_Coords_118835_g117895;
				half4 Coords238_g117961 = temp_output_37_0_g117961;
				float3 temp_output_279_0_g117961 = Input_Position9197_g117895;
				half3 WorldPosition238_g117961 = temp_output_279_0_g117961;
				half4 localSamplePlanar2D238_g117961 = SamplePlanar2D( Texture238_g117961 , Sampler238_g117961 , Coords238_g117961 , WorldPosition238_g117961 );
				TEXTURE2D(Texture246_g117961) = _TerrainNormalTex11;
				SamplerState Sampler246_g117961 = SS29_g118002;
				half4 Coords246_g117961 = temp_output_37_0_g117961;
				half3 WorldPosition246_g117961 = temp_output_279_0_g117961;
				float3 temp_output_280_0_g117961 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117961 = temp_output_280_0_g117961;
				half4 localSamplePlanar3D246_g117961 = SamplePlanar3D( Texture246_g117961 , Sampler246_g117961 , Coords246_g117961 , WorldPosition246_g117961 , WorldNormal246_g117961 );
				TEXTURE2D(Texture234_g117961) = _TerrainNormalTex11;
				SamplerState Sampler234_g117961 = SS29_g118002;
				float4 Coords234_g117961 = temp_output_37_0_g117961;
				float3 WorldPosition234_g117961 = temp_output_279_0_g117961;
				float4 localSampleStochastic2D234_g117961 = SampleStochastic2D( Texture234_g117961 , Sampler234_g117961 , Coords234_g117961 , WorldPosition234_g117961 );
				TEXTURE2D(Texture263_g117961) = _TerrainNormalTex11;
				SamplerState Sampler263_g117961 = SS29_g118002;
				half4 Coords263_g117961 = temp_output_37_0_g117961;
				half3 WorldPosition263_g117961 = temp_output_279_0_g117961;
				half3 WorldNormal263_g117961 = temp_output_280_0_g117961;
				half4 localSampleStochastic3D263_g117961 = SampleStochastic3D( Texture263_g117961 , Sampler263_g117961 , Coords263_g117961 , WorldPosition263_g117961 , WorldNormal263_g117961 );
				#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
				float4 staticSwitch8850_g117895 = localSamplePlanar2D238_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
				float4 staticSwitch8850_g117895 = localSamplePlanar3D246_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
				float4 staticSwitch8850_g117895 = localSampleStochastic2D234_g117961;
				#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
				float4 staticSwitch8850_g117895 = localSampleStochastic3D263_g117961;
				#else
				float4 staticSwitch8850_g117895 = localSamplePlanar2D238_g117961;
				#endif
				half4 Layer338_g117918 = staticSwitch8850_g117895;
				TEXTURE2D(Texture238_g117962) = _TerrainNormalTex12;
				SamplerState Sampler238_g117962 = SS29_g118002;
				float4 temp_output_37_0_g117962 = Input_Terrain_Coords_128836_g117895;
				half4 Coords238_g117962 = temp_output_37_0_g117962;
				float3 temp_output_279_0_g117962 = Input_Position9197_g117895;
				half3 WorldPosition238_g117962 = temp_output_279_0_g117962;
				half4 localSamplePlanar2D238_g117962 = SamplePlanar2D( Texture238_g117962 , Sampler238_g117962 , Coords238_g117962 , WorldPosition238_g117962 );
				TEXTURE2D(Texture246_g117962) = _TerrainNormalTex12;
				SamplerState Sampler246_g117962 = SS29_g118002;
				half4 Coords246_g117962 = temp_output_37_0_g117962;
				half3 WorldPosition246_g117962 = temp_output_279_0_g117962;
				float3 temp_output_280_0_g117962 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117962 = temp_output_280_0_g117962;
				half4 localSamplePlanar3D246_g117962 = SamplePlanar3D( Texture246_g117962 , Sampler246_g117962 , Coords246_g117962 , WorldPosition246_g117962 , WorldNormal246_g117962 );
				TEXTURE2D(Texture234_g117962) = _TerrainNormalTex12;
				SamplerState Sampler234_g117962 = SS29_g118002;
				float4 Coords234_g117962 = temp_output_37_0_g117962;
				float3 WorldPosition234_g117962 = temp_output_279_0_g117962;
				float4 localSampleStochastic2D234_g117962 = SampleStochastic2D( Texture234_g117962 , Sampler234_g117962 , Coords234_g117962 , WorldPosition234_g117962 );
				TEXTURE2D(Texture263_g117962) = _TerrainNormalTex12;
				SamplerState Sampler263_g117962 = SS29_g118002;
				half4 Coords263_g117962 = temp_output_37_0_g117962;
				half3 WorldPosition263_g117962 = temp_output_279_0_g117962;
				half3 WorldNormal263_g117962 = temp_output_280_0_g117962;
				half4 localSampleStochastic3D263_g117962 = SampleStochastic3D( Texture263_g117962 , Sampler263_g117962 , Coords263_g117962 , WorldPosition263_g117962 , WorldNormal263_g117962 );
				#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
				float4 staticSwitch8877_g117895 = localSamplePlanar2D238_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
				float4 staticSwitch8877_g117895 = localSamplePlanar3D246_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
				float4 staticSwitch8877_g117895 = localSampleStochastic2D234_g117962;
				#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
				float4 staticSwitch8877_g117895 = localSampleStochastic3D263_g117962;
				#else
				float4 staticSwitch8877_g117895 = localSamplePlanar2D238_g117962;
				#endif
				half4 Layer439_g117918 = staticSwitch8877_g117895;
				float4 weightedBlendVar31_g117918 = Weights52_g117918;
				float4 weightedBlend31_g117918 = ( weightedBlendVar31_g117918.x*Layer133_g117918 + weightedBlendVar31_g117918.y*Layer237_g117918 + weightedBlendVar31_g117918.z*Layer338_g117918 + weightedBlendVar31_g117918.w*Layer439_g117918 );
				half4 Terrain_B_128865_g117895 = weightedBlend31_g117918;
				half4 Layer_1243_g117902 = Terrain_B_128865_g117895;
				half4 Weights52_g117925 = Terrain_Weights_167709_g117895;
				TEXTURE2D(Texture238_g117965) = _TerrainNormalTex13;
				SamplerState Sampler238_g117965 = SS29_g118002;
				float4 temp_output_37_0_g117965 = Input_Terrain_Coords_138960_g117895;
				half4 Coords238_g117965 = temp_output_37_0_g117965;
				float3 temp_output_279_0_g117965 = Input_Position9197_g117895;
				half3 WorldPosition238_g117965 = temp_output_279_0_g117965;
				half4 localSamplePlanar2D238_g117965 = SamplePlanar2D( Texture238_g117965 , Sampler238_g117965 , Coords238_g117965 , WorldPosition238_g117965 );
				TEXTURE2D(Texture246_g117965) = _TerrainNormalTex13;
				SamplerState Sampler246_g117965 = SS29_g118002;
				half4 Coords246_g117965 = temp_output_37_0_g117965;
				half3 WorldPosition246_g117965 = temp_output_279_0_g117965;
				float3 temp_output_280_0_g117965 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117965 = temp_output_280_0_g117965;
				half4 localSamplePlanar3D246_g117965 = SamplePlanar3D( Texture246_g117965 , Sampler246_g117965 , Coords246_g117965 , WorldPosition246_g117965 , WorldNormal246_g117965 );
				TEXTURE2D(Texture234_g117965) = _TerrainNormalTex13;
				SamplerState Sampler234_g117965 = SS29_g118002;
				float4 Coords234_g117965 = temp_output_37_0_g117965;
				float3 WorldPosition234_g117965 = temp_output_279_0_g117965;
				float4 localSampleStochastic2D234_g117965 = SampleStochastic2D( Texture234_g117965 , Sampler234_g117965 , Coords234_g117965 , WorldPosition234_g117965 );
				TEXTURE2D(Texture263_g117965) = _TerrainNormalTex13;
				SamplerState Sampler263_g117965 = SS29_g118002;
				half4 Coords263_g117965 = temp_output_37_0_g117965;
				half3 WorldPosition263_g117965 = temp_output_279_0_g117965;
				half3 WorldNormal263_g117965 = temp_output_280_0_g117965;
				half4 localSampleStochastic3D263_g117965 = SampleStochastic3D( Texture263_g117965 , Sampler263_g117965 , Coords263_g117965 , WorldPosition263_g117965 , WorldNormal263_g117965 );
				#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
				float4 staticSwitch8991_g117895 = localSamplePlanar2D238_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
				float4 staticSwitch8991_g117895 = localSamplePlanar3D246_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
				float4 staticSwitch8991_g117895 = localSampleStochastic2D234_g117965;
				#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
				float4 staticSwitch8991_g117895 = localSampleStochastic3D263_g117965;
				#else
				float4 staticSwitch8991_g117895 = localSamplePlanar2D238_g117965;
				#endif
				half4 Layer133_g117925 = staticSwitch8991_g117895;
				TEXTURE2D(Texture238_g117972) = _TerrainNormalTex14;
				SamplerState Sampler238_g117972 = SS29_g118002;
				float4 temp_output_37_0_g117972 = Input_Terrain_Coords_148961_g117895;
				half4 Coords238_g117972 = temp_output_37_0_g117972;
				float3 temp_output_279_0_g117972 = Input_Position9197_g117895;
				half3 WorldPosition238_g117972 = temp_output_279_0_g117972;
				half4 localSamplePlanar2D238_g117972 = SamplePlanar2D( Texture238_g117972 , Sampler238_g117972 , Coords238_g117972 , WorldPosition238_g117972 );
				TEXTURE2D(Texture246_g117972) = _TerrainNormalTex14;
				SamplerState Sampler246_g117972 = SS29_g118002;
				half4 Coords246_g117972 = temp_output_37_0_g117972;
				half3 WorldPosition246_g117972 = temp_output_279_0_g117972;
				float3 temp_output_280_0_g117972 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117972 = temp_output_280_0_g117972;
				half4 localSamplePlanar3D246_g117972 = SamplePlanar3D( Texture246_g117972 , Sampler246_g117972 , Coords246_g117972 , WorldPosition246_g117972 , WorldNormal246_g117972 );
				TEXTURE2D(Texture234_g117972) = _TerrainNormalTex14;
				SamplerState Sampler234_g117972 = SS29_g118002;
				float4 Coords234_g117972 = temp_output_37_0_g117972;
				float3 WorldPosition234_g117972 = temp_output_279_0_g117972;
				float4 localSampleStochastic2D234_g117972 = SampleStochastic2D( Texture234_g117972 , Sampler234_g117972 , Coords234_g117972 , WorldPosition234_g117972 );
				TEXTURE2D(Texture263_g117972) = _TerrainNormalTex14;
				SamplerState Sampler263_g117972 = SS29_g118002;
				half4 Coords263_g117972 = temp_output_37_0_g117972;
				half3 WorldPosition263_g117972 = temp_output_279_0_g117972;
				half3 WorldNormal263_g117972 = temp_output_280_0_g117972;
				half4 localSampleStochastic3D263_g117972 = SampleStochastic3D( Texture263_g117972 , Sampler263_g117972 , Coords263_g117972 , WorldPosition263_g117972 , WorldNormal263_g117972 );
				#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
				float4 staticSwitch8990_g117895 = localSamplePlanar2D238_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
				float4 staticSwitch8990_g117895 = localSamplePlanar3D246_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
				float4 staticSwitch8990_g117895 = localSampleStochastic2D234_g117972;
				#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
				float4 staticSwitch8990_g117895 = localSampleStochastic3D263_g117972;
				#else
				float4 staticSwitch8990_g117895 = localSamplePlanar2D238_g117972;
				#endif
				half4 Layer237_g117925 = staticSwitch8990_g117895;
				TEXTURE2D(Texture238_g117973) = _TerrainNormalTex15;
				SamplerState Sampler238_g117973 = SS29_g118002;
				float4 temp_output_37_0_g117973 = Input_Terrain_Coords_158962_g117895;
				half4 Coords238_g117973 = temp_output_37_0_g117973;
				float3 temp_output_279_0_g117973 = Input_Position9197_g117895;
				half3 WorldPosition238_g117973 = temp_output_279_0_g117973;
				half4 localSamplePlanar2D238_g117973 = SamplePlanar2D( Texture238_g117973 , Sampler238_g117973 , Coords238_g117973 , WorldPosition238_g117973 );
				TEXTURE2D(Texture246_g117973) = _TerrainNormalTex15;
				SamplerState Sampler246_g117973 = SS29_g118002;
				half4 Coords246_g117973 = temp_output_37_0_g117973;
				half3 WorldPosition246_g117973 = temp_output_279_0_g117973;
				float3 temp_output_280_0_g117973 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117973 = temp_output_280_0_g117973;
				half4 localSamplePlanar3D246_g117973 = SamplePlanar3D( Texture246_g117973 , Sampler246_g117973 , Coords246_g117973 , WorldPosition246_g117973 , WorldNormal246_g117973 );
				TEXTURE2D(Texture234_g117973) = _TerrainNormalTex15;
				SamplerState Sampler234_g117973 = SS29_g118002;
				float4 Coords234_g117973 = temp_output_37_0_g117973;
				float3 WorldPosition234_g117973 = temp_output_279_0_g117973;
				float4 localSampleStochastic2D234_g117973 = SampleStochastic2D( Texture234_g117973 , Sampler234_g117973 , Coords234_g117973 , WorldPosition234_g117973 );
				TEXTURE2D(Texture263_g117973) = _TerrainNormalTex15;
				SamplerState Sampler263_g117973 = SS29_g118002;
				half4 Coords263_g117973 = temp_output_37_0_g117973;
				half3 WorldPosition263_g117973 = temp_output_279_0_g117973;
				half3 WorldNormal263_g117973 = temp_output_280_0_g117973;
				half4 localSampleStochastic3D263_g117973 = SampleStochastic3D( Texture263_g117973 , Sampler263_g117973 , Coords263_g117973 , WorldPosition263_g117973 , WorldNormal263_g117973 );
				#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
				float4 staticSwitch8989_g117895 = localSamplePlanar2D238_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
				float4 staticSwitch8989_g117895 = localSamplePlanar3D246_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
				float4 staticSwitch8989_g117895 = localSampleStochastic2D234_g117973;
				#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
				float4 staticSwitch8989_g117895 = localSampleStochastic3D263_g117973;
				#else
				float4 staticSwitch8989_g117895 = localSamplePlanar2D238_g117973;
				#endif
				half4 Layer338_g117925 = staticSwitch8989_g117895;
				TEXTURE2D(Texture238_g117974) = _TerrainNormalTex16;
				SamplerState Sampler238_g117974 = SS29_g118002;
				float4 temp_output_37_0_g117974 = Input_Terrain_Coords_168959_g117895;
				half4 Coords238_g117974 = temp_output_37_0_g117974;
				float3 temp_output_279_0_g117974 = Input_Position9197_g117895;
				half3 WorldPosition238_g117974 = temp_output_279_0_g117974;
				half4 localSamplePlanar2D238_g117974 = SamplePlanar2D( Texture238_g117974 , Sampler238_g117974 , Coords238_g117974 , WorldPosition238_g117974 );
				TEXTURE2D(Texture246_g117974) = _TerrainNormalTex16;
				SamplerState Sampler246_g117974 = SS29_g118002;
				half4 Coords246_g117974 = temp_output_37_0_g117974;
				half3 WorldPosition246_g117974 = temp_output_279_0_g117974;
				float3 temp_output_280_0_g117974 = Input_Normal9199_g117895;
				half3 WorldNormal246_g117974 = temp_output_280_0_g117974;
				half4 localSamplePlanar3D246_g117974 = SamplePlanar3D( Texture246_g117974 , Sampler246_g117974 , Coords246_g117974 , WorldPosition246_g117974 , WorldNormal246_g117974 );
				TEXTURE2D(Texture234_g117974) = _TerrainNormalTex16;
				SamplerState Sampler234_g117974 = SS29_g118002;
				float4 Coords234_g117974 = temp_output_37_0_g117974;
				float3 WorldPosition234_g117974 = temp_output_279_0_g117974;
				float4 localSampleStochastic2D234_g117974 = SampleStochastic2D( Texture234_g117974 , Sampler234_g117974 , Coords234_g117974 , WorldPosition234_g117974 );
				TEXTURE2D(Texture263_g117974) = _TerrainNormalTex16;
				SamplerState Sampler263_g117974 = SS29_g118002;
				half4 Coords263_g117974 = temp_output_37_0_g117974;
				half3 WorldPosition263_g117974 = temp_output_279_0_g117974;
				half3 WorldNormal263_g117974 = temp_output_280_0_g117974;
				half4 localSampleStochastic3D263_g117974 = SampleStochastic3D( Texture263_g117974 , Sampler263_g117974 , Coords263_g117974 , WorldPosition263_g117974 , WorldNormal263_g117974 );
				#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
				float4 staticSwitch8988_g117895 = localSamplePlanar2D238_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
				float4 staticSwitch8988_g117895 = localSamplePlanar3D246_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
				float4 staticSwitch8988_g117895 = localSampleStochastic2D234_g117974;
				#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
				float4 staticSwitch8988_g117895 = localSampleStochastic3D263_g117974;
				#else
				float4 staticSwitch8988_g117895 = localSamplePlanar2D238_g117974;
				#endif
				half4 Layer439_g117925 = staticSwitch8988_g117895;
				float4 weightedBlendVar31_g117925 = Weights52_g117925;
				float4 weightedBlend31_g117925 = ( weightedBlendVar31_g117925.x*Layer133_g117925 + weightedBlendVar31_g117925.y*Layer237_g117925 + weightedBlendVar31_g117925.z*Layer338_g117925 + weightedBlendVar31_g117925.w*Layer439_g117925 );
				half4 Terrain_B_168987_g117895 = weightedBlend31_g117925;
				half4 Layer_1644_g117902 = Terrain_B_168987_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117902 = Layer_045_g117902;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 + Layer_1243_g117902 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117902 = ( Layer_045_g117902 + Layer_0810_g117902 + Layer_1243_g117902 + Layer_1644_g117902 );
				#else
				float4 staticSwitch40_g117902 = Layer_045_g117902;
				#endif
				half4 Blend_Normal7512_g117895 = staticSwitch40_g117902;
				half4 Normal_Packed45_g117996 = Blend_Normal7512_g117895;
				float2 appendResult58_g117996 = (float2(( (Normal_Packed45_g117996).x * (Normal_Packed45_g117996).w ) , (Normal_Packed45_g117996).y));
				half2 Normal_Default50_g117996 = appendResult58_g117996;
				half2 Normal_ASTC41_g117996 = (Normal_Packed45_g117996).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g117996 = Normal_ASTC41_g117996;
				#else
				float2 staticSwitch38_g117996 = Normal_Default50_g117996;
				#endif
				half2 Normal_NO_DTX544_g117996 = (Normal_Packed45_g117996).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g117996 = Normal_NO_DTX544_g117996;
				#else
				float2 staticSwitch37_g117996 = staticSwitch38_g117996;
				#endif
				half4 Weights52_g117898 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117898 = temp_output_6970_0_g117895;
				half4 Layer237_g117898 = temp_output_6977_0_g117895;
				half4 Layer338_g117898 = temp_output_6978_0_g117895;
				half4 Layer439_g117898 = temp_output_6983_0_g117895;
				float4 weightedBlendVar31_g117898 = Weights52_g117898;
				float4 weightedBlend31_g117898 = ( weightedBlendVar31_g117898.x*Layer133_g117898 + weightedBlendVar31_g117898.y*Layer237_g117898 + weightedBlendVar31_g117898.z*Layer338_g117898 + weightedBlendVar31_g117898.w*Layer439_g117898 );
				half4 Terrain_Shaders_047203_g117895 = weightedBlend31_g117898;
				half4 Layer_045_g117904 = Terrain_Shaders_047203_g117895;
				half4 Weights52_g117914 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117914 = temp_output_8714_0_g117895;
				half4 Layer237_g117914 = temp_output_8721_0_g117895;
				half4 Layer338_g117914 = temp_output_8724_0_g117895;
				half4 Layer439_g117914 = temp_output_8727_0_g117895;
				float4 weightedBlendVar31_g117914 = Weights52_g117914;
				float4 weightedBlend31_g117914 = ( weightedBlendVar31_g117914.x*Layer133_g117914 + weightedBlendVar31_g117914.y*Layer237_g117914 + weightedBlendVar31_g117914.z*Layer338_g117914 + weightedBlendVar31_g117914.w*Layer439_g117914 );
				half4 Terrain_Shaders_088730_g117895 = weightedBlend31_g117914;
				half4 Layer_0810_g117904 = Terrain_Shaders_088730_g117895;
				half4 Weights52_g117921 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117921 = temp_output_8815_0_g117895;
				half4 Layer237_g117921 = temp_output_8818_0_g117895;
				half4 Layer338_g117921 = temp_output_8819_0_g117895;
				half4 Layer439_g117921 = temp_output_8820_0_g117895;
				float4 weightedBlendVar31_g117921 = Weights52_g117921;
				float4 weightedBlend31_g117921 = ( weightedBlendVar31_g117921.x*Layer133_g117921 + weightedBlendVar31_g117921.y*Layer237_g117921 + weightedBlendVar31_g117921.z*Layer338_g117921 + weightedBlendVar31_g117921.w*Layer439_g117921 );
				half4 Terrain_Shaders_128871_g117895 = weightedBlend31_g117921;
				half4 Layer_1243_g117904 = Terrain_Shaders_128871_g117895;
				half4 Weights52_g117928 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117928 = temp_output_8931_0_g117895;
				half4 Layer237_g117928 = temp_output_8934_0_g117895;
				half4 Layer338_g117928 = temp_output_8935_0_g117895;
				half4 Layer439_g117928 = temp_output_8936_0_g117895;
				float4 weightedBlendVar31_g117928 = Weights52_g117928;
				float4 weightedBlend31_g117928 = ( weightedBlendVar31_g117928.x*Layer133_g117928 + weightedBlendVar31_g117928.y*Layer237_g117928 + weightedBlendVar31_g117928.z*Layer338_g117928 + weightedBlendVar31_g117928.w*Layer439_g117928 );
				half4 Terrain_Shaders_169014_g117895 = weightedBlend31_g117928;
				half4 Layer_1644_g117904 = Terrain_Shaders_169014_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117904 = Layer_045_g117904;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 + Layer_1243_g117904 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117904 = ( Layer_045_g117904 + Layer_0810_g117904 + Layer_1243_g117904 + Layer_1644_g117904 );
				#else
				float4 staticSwitch40_g117904 = Layer_045_g117904;
				#endif
				half4 Blend_Shaders7420_g117895 = staticSwitch40_g117904;
				half4 Normal_Packed45_g117995 = Blend_Shaders7420_g117895;
				half2 Normal_NO_DTX544_g117995 = (Normal_Packed45_g117995).wy;
				#ifdef TVE_TERRAIN_PACKED
				float2 staticSwitch9080_g117895 = (Normal_NO_DTX544_g117995*2.0 + -1.0);
				#else
				float2 staticSwitch9080_g117895 = (staticSwitch37_g117996*2.0 + -1.0);
				#endif
				half4 Weights52_g117899 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117899 = _TerrainParams1;
				half4 Layer237_g117899 = _TerrainParams2;
				half4 Layer338_g117899 = _TerrainParams3;
				half4 Layer439_g117899 = _TerrainParams4;
				float4 weightedBlendVar31_g117899 = Weights52_g117899;
				float4 weightedBlend31_g117899 = ( weightedBlendVar31_g117899.x*Layer133_g117899 + weightedBlendVar31_g117899.y*Layer237_g117899 + weightedBlendVar31_g117899.z*Layer338_g117899 + weightedBlendVar31_g117899.w*Layer439_g117899 );
				half4 Terrain_Params_047533_g117895 = weightedBlend31_g117899;
				half4 Layer_045_g117905 = Terrain_Params_047533_g117895;
				half4 Weights52_g117915 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117915 = _TerrainParams5;
				half4 Layer237_g117915 = _TerrainParams6;
				half4 Layer338_g117915 = _TerrainParams7;
				half4 Layer439_g117915 = _TerrainParams8;
				float4 weightedBlendVar31_g117915 = Weights52_g117915;
				float4 weightedBlend31_g117915 = ( weightedBlendVar31_g117915.x*Layer133_g117915 + weightedBlendVar31_g117915.y*Layer237_g117915 + weightedBlendVar31_g117915.z*Layer338_g117915 + weightedBlendVar31_g117915.w*Layer439_g117915 );
				half4 Terrain_Params_088739_g117895 = weightedBlend31_g117915;
				half4 Layer_0810_g117905 = Terrain_Params_088739_g117895;
				half4 Weights52_g117922 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117922 = _TerrainParams9;
				half4 Layer237_g117922 = _TerrainParams10;
				half4 Layer338_g117922 = _TerrainParams11;
				half4 Layer439_g117922 = _TerrainParams12;
				float4 weightedBlendVar31_g117922 = Weights52_g117922;
				float4 weightedBlend31_g117922 = ( weightedBlendVar31_g117922.x*Layer133_g117922 + weightedBlendVar31_g117922.y*Layer237_g117922 + weightedBlendVar31_g117922.z*Layer338_g117922 + weightedBlendVar31_g117922.w*Layer439_g117922 );
				half4 Terrain_Params_128867_g117895 = weightedBlend31_g117922;
				half4 Layer_1243_g117905 = Terrain_Params_128867_g117895;
				half4 Weights52_g117929 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117929 = _TerrainParams13;
				half4 Layer237_g117929 = _TerrainParams14;
				half4 Layer338_g117929 = _TerrainParams15;
				half4 Layer439_g117929 = _TerrainParams16;
				float4 weightedBlendVar31_g117929 = Weights52_g117929;
				float4 weightedBlend31_g117929 = ( weightedBlendVar31_g117929.x*Layer133_g117929 + weightedBlendVar31_g117929.y*Layer237_g117929 + weightedBlendVar31_g117929.z*Layer338_g117929 + weightedBlendVar31_g117929.w*Layer439_g117929 );
				half4 Terrain_Params_169017_g117895 = weightedBlend31_g117929;
				half4 Layer_1644_g117905 = Terrain_Params_169017_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117905 = Layer_045_g117905;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 + Layer_1243_g117905 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117905 = ( Layer_045_g117905 + Layer_0810_g117905 + Layer_1243_g117905 + Layer_1644_g117905 );
				#else
				float4 staticSwitch40_g117905 = Layer_045_g117905;
				#endif
				half4 Blend_Params7547_g117895 = staticSwitch40_g117905;
				half2 Normal_Planar45_g117997 = ( ( staticSwitch9080_g117895 * (Blend_Params7547_g117895).z ) * _TerrainNormalValue );
				float2 break71_g117997 = Normal_Planar45_g117997;
				float3 appendResult72_g117997 = (float3(break71_g117997.x , 0.0 , break71_g117997.y));
				half2 Final_NormalTS9145_g117895 = (mul( ase_worldToTangent, appendResult72_g117997 )).xy;
				half2 Local_Normal9200_g117893 = Final_NormalTS9145_g117895;
				float2 In_NormalTS3_g117894 = Local_Normal9200_g117893;
				float3 appendResult68_g118005 = (float3(Local_Normal9200_g117893 , 1.0));
				float3 tanToWorld0 = float3( packedInput.tangentWS.xyz.x, ase_worldBitangent.x, packedInput.normalWS.x );
				float3 tanToWorld1 = float3( packedInput.tangentWS.xyz.y, ase_worldBitangent.y, packedInput.normalWS.y );
				float3 tanToWorld2 = float3( packedInput.tangentWS.xyz.z, ase_worldBitangent.z, packedInput.normalWS.z );
				float3 tanNormal74_g118005 = appendResult68_g118005;
				float3 worldNormal74_g118005 = normalize( float3(dot(tanToWorld0,tanNormal74_g118005), dot(tanToWorld1,tanNormal74_g118005), dot(tanToWorld2,tanNormal74_g118005)) );
				float3 In_NormalWS3_g117894 = worldNormal74_g118005;
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9139_g117895 = 0.0;
				#else
				float staticSwitch9139_g117895 = ( (Blend_Shaders7420_g117895).x * (Blend_Params7547_g117895).x * _TerrainMetallicValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9097_g117895 = 1.0;
				#else
				float staticSwitch9097_g117895 = ( (Blend_Shaders7420_g117895).y * _TerrainOcclusionValue );
				#endif
				#ifdef TVE_TERRAIN_PACKED
				float staticSwitch9105_g117895 = (Blend_Shaders7420_g117895).x;
				#else
				float staticSwitch9105_g117895 = (Blend_Shaders7420_g117895).w;
				#endif
				float4 appendResult9147_g117895 = (float4(staticSwitch9139_g117895 , staticSwitch9097_g117895 , (Blend_Shaders7420_g117895).z , ( staticSwitch9105_g117895 * (Blend_Params7547_g117895).w * _TerrainSmoothnessValue )));
				half4 Final_Shaders9146_g117895 = appendResult9147_g117895;
				half4 Local_Shader9201_g117893 = Final_Shaders9146_g117895;
				float4 In_Shader3_g117894 = Local_Shader9201_g117893;
				half4 Weights52_g117988 = Terrain_Weights_046781_g117895;
				half4 Layer133_g117988 = _TerrainSpecular1;
				half4 Layer237_g117988 = _TerrainSpecular2;
				half4 Layer338_g117988 = _TerrainSpecular3;
				half4 Layer439_g117988 = _TerrainSpecular4;
				float4 weightedBlendVar31_g117988 = Weights52_g117988;
				float4 weightedBlend31_g117988 = ( weightedBlendVar31_g117988.x*Layer133_g117988 + weightedBlendVar31_g117988.y*Layer237_g117988 + weightedBlendVar31_g117988.z*Layer338_g117988 + weightedBlendVar31_g117988.w*Layer439_g117988 );
				half4 Terrain_Specular_047390_g117895 = weightedBlend31_g117988;
				half4 Layer_045_g117993 = Terrain_Specular_047390_g117895;
				half4 Weights52_g117916 = Terrain_Weights_087340_g117895;
				half4 Layer133_g117916 = _TerrainSpecular5;
				half4 Layer237_g117916 = _TerrainSpecular6;
				half4 Layer338_g117916 = _TerrainSpecular7;
				half4 Layer439_g117916 = _TerrainSpecular8;
				float4 weightedBlendVar31_g117916 = Weights52_g117916;
				float4 weightedBlend31_g117916 = ( weightedBlendVar31_g117916.x*Layer133_g117916 + weightedBlendVar31_g117916.y*Layer237_g117916 + weightedBlendVar31_g117916.z*Layer338_g117916 + weightedBlendVar31_g117916.w*Layer439_g117916 );
				half4 Terrain_Specular_088745_g117895 = weightedBlend31_g117916;
				half4 Layer_0810_g117993 = Terrain_Specular_088745_g117895;
				half4 Weights52_g117923 = Terrain_Weights_127710_g117895;
				half4 Layer133_g117923 = _TerrainSpecular9;
				half4 Layer237_g117923 = _TerrainSpecular10;
				half4 Layer338_g117923 = _TerrainSpecular11;
				half4 Layer439_g117923 = _TerrainSpecular12;
				float4 weightedBlendVar31_g117923 = Weights52_g117923;
				float4 weightedBlend31_g117923 = ( weightedBlendVar31_g117923.x*Layer133_g117923 + weightedBlendVar31_g117923.y*Layer237_g117923 + weightedBlendVar31_g117923.z*Layer338_g117923 + weightedBlendVar31_g117923.w*Layer439_g117923 );
				half4 Terrain_Specular_128869_g117895 = weightedBlend31_g117923;
				half4 Layer_1243_g117993 = Terrain_Specular_128869_g117895;
				half4 Weights52_g117930 = Terrain_Weights_167709_g117895;
				half4 Layer133_g117930 = _TerrainSpecular13;
				half4 Layer237_g117930 = _TerrainSpecular14;
				half4 Layer338_g117930 = _TerrainSpecular15;
				half4 Layer439_g117930 = _TerrainSpecular16;
				float4 weightedBlendVar31_g117930 = Weights52_g117930;
				float4 weightedBlend31_g117930 = ( weightedBlendVar31_g117930.x*Layer133_g117930 + weightedBlendVar31_g117930.y*Layer237_g117930 + weightedBlendVar31_g117930.z*Layer338_g117930 + weightedBlendVar31_g117930.w*Layer439_g117930 );
				half4 Terrain_Specular_169019_g117895 = weightedBlend31_g117930;
				half4 Layer_1644_g117993 = Terrain_Specular_169019_g117895;
				#if defined( TVE_TERRAIN_04 )
				float4 staticSwitch40_g117993 = Layer_045_g117993;
				#elif defined( TVE_TERRAIN_08 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 );
				#elif defined( TVE_TERRAIN_12 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 + Layer_1243_g117993 );
				#elif defined( TVE_TERRAIN_16 )
				float4 staticSwitch40_g117993 = ( Layer_045_g117993 + Layer_0810_g117993 + Layer_1243_g117993 + Layer_1644_g117993 );
				#else
				float4 staticSwitch40_g117993 = Layer_045_g117993;
				#endif
				half4 Blend_TerrainSpecular7446_g117895 = staticSwitch40_g117993;
				float3 temp_output_9088_0_g117895 = (Blend_TerrainSpecular7446_g117895).rgb;
				float4 appendResult9189_g117895 = (float4(temp_output_9088_0_g117895 , 1.0));
				half4 Final_Emissive9151_g117895 = appendResult9189_g117895;
				half4 Local_EmissiveLDR9202_g117893 = Final_Emissive9151_g117895;
				float4 In_Emissive3_g117894 = Local_EmissiveLDR9202_g117893;
				float3 temp_output_3_0_g118006 = Local_Albedo9199_g117893;
				float dotResult20_g118006 = dot( temp_output_3_0_g118006 , float3(0.2126,0.7152,0.0722) );
				float temp_output_9165_0_g117893 = dotResult20_g118006;
				float In_Grayscale3_g117894 = temp_output_9165_0_g117893;
				float clampResult9168_g117893 = clamp( saturate( ( temp_output_9165_0_g117893 * 5.0 ) ) , 0.2 , 1.0 );
				float In_Luminosity3_g117894 = clampResult9168_g117893;
				half Final_MultiShader9150_g117895 = ( (Blend_TerrainSpecular7446_g117895).a * (Blend_Albedo7468_g117895).w );
				half Local_MultiMask9203_g117893 = Final_MultiShader9150_g117895;
				float In_MultiMask3_g117894 = Local_MultiMask9203_g117893;
				float4 temp_output_35_0_g118004 = appendResult9125_g117895;
				float2 InputScale48_g118004 = (temp_output_35_0_g118004).zw;
				half2 FinalScale53_g118004 = ( 1.0 / InputScale48_g118004 );
				float2 InputPosition52_g118004 = (temp_output_35_0_g118004).xy;
				half2 FinalPosition58_g118004 = -( FinalScale53_g118004 * InputPosition52_g118004 );
				float2 temp_output_65_0_g118004 = ( ( (ase_worldPos).xz * FinalScale53_g118004 ) + FinalPosition58_g118004 );
				float2 Terrain_Holes_UV9406_g117895 = temp_output_65_0_g118004;
				#ifdef TVE_ALPHA_CLIP
				float staticSwitch9188_g117895 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9406_g117895 ).r;
				#else
				float staticSwitch9188_g117895 = 1.0;
				#endif
				half Terrain_Holes7437_g117895 = staticSwitch9188_g117895;
				half Local_HoleMask9204_g117893 = Terrain_Holes7437_g117895;
				float In_AlphaClip3_g117894 = Local_HoleMask9204_g117893;
				float In_AlphaFade3_g117894 = 1.0;
				float3 temp_cast_9 = (1.0).xxx;
				float3 In_Translucency3_g117894 = temp_cast_9;
				float In_Transmission3_g117894 = 1.0;
				float In_Thickness3_g117894 = 0.0;
				float In_Diffusion3_g117894 = 0.0;
				Data3_g117894.Dummy = In_Dummy3_g117894;
				Data3_g117894.Albedo = In_Albedo3_g117894;
				Data3_g117894.AlbedoRaw = In_AlbedoRaw3_g117894;
				Data3_g117894.NormalTS = In_NormalTS3_g117894;
				Data3_g117894.NormalWS = In_NormalWS3_g117894;
				Data3_g117894.Shader = In_Shader3_g117894;
				Data3_g117894.Emissive= In_Emissive3_g117894;
				Data3_g117894.MultiMask = In_MultiMask3_g117894;
				Data3_g117894.Grayscale = In_Grayscale3_g117894;
				Data3_g117894.Luminosity = In_Luminosity3_g117894;
				Data3_g117894.AlphaClip = In_AlphaClip3_g117894;
				Data3_g117894.AlphaFade = In_AlphaFade3_g117894;
				Data3_g117894.Translucency = In_Translucency3_g117894;
				Data3_g117894.Transmission = In_Transmission3_g117894;
				Data3_g117894.Thickness = In_Thickness3_g117894;
				Data3_g117894.Diffusion = In_Diffusion3_g117894;
				TVEVisualData Data4_g118029 = Data3_g117894;
				float Out_Dummy4_g118029 = 0;
				float3 Out_Albedo4_g118029 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118029 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118029 = float2( 0,0 );
				float3 Out_NormalWS4_g118029 = float3( 0,0,0 );
				float4 Out_Shader4_g118029 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118029 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118029 = 0;
				float Out_Grayscale4_g118029 = 0;
				float Out_Luminosity4_g118029 = 0;
				float Out_AlphaClip4_g118029 = 0;
				float Out_AlphaFade4_g118029 = 0;
				float3 Out_Translucency4_g118029 = float3( 0,0,0 );
				float Out_Transmission4_g118029 = 0;
				float Out_Thickness4_g118029 = 0;
				float Out_Diffusion4_g118029 = 0;
				Out_Dummy4_g118029 = Data4_g118029.Dummy;
				Out_Albedo4_g118029 = Data4_g118029.Albedo;
				Out_AlbedoRaw4_g118029 = Data4_g118029.AlbedoRaw;
				Out_NormalTS4_g118029 = Data4_g118029.NormalTS;
				Out_NormalWS4_g118029 = Data4_g118029.NormalWS;
				Out_Shader4_g118029 = Data4_g118029.Shader;
				Out_Emissive4_g118029= Data4_g118029.Emissive;
				Out_MultiMask4_g118029 = Data4_g118029.MultiMask;
				Out_Grayscale4_g118029 = Data4_g118029.Grayscale;
				Out_Luminosity4_g118029= Data4_g118029.Luminosity;
				Out_AlphaClip4_g118029 = Data4_g118029.AlphaClip;
				Out_AlphaFade4_g118029 = Data4_g118029.AlphaFade;
				Out_Translucency4_g118029 = Data4_g118029.Translucency;
				Out_Transmission4_g118029 = Data4_g118029.Transmission;
				Out_Thickness4_g118029 = Data4_g118029.Thickness;
				Out_Diffusion4_g118029 = Data4_g118029.Diffusion;
				half3 Visual_Albedo139_g118007 = Out_Albedo4_g118029;
				float temp_output_200_12_g118007 = Out_Grayscale4_g118029;
				half Visual_Grayscale150_g118007 = temp_output_200_12_g118007;
				float3 temp_cast_10 = (Visual_Grayscale150_g118007).xxx;
				float localBuildGlobalData204_g117810 = ( 0.0 );
				TVEGlobalData Data204_g117810 = (TVEGlobalData)0;
				half Dummy211_g117810 = ( _GlobalCategory + _GlobalEnd );
				float In_Dummy204_g117810 = Dummy211_g117810;
				half4 Coat_Params302_g117810 = TVE_CoatParams;
				float4 In_CoatParams204_g117810 = Coat_Params302_g117810;
				float temp_output_82_0_g117811 = _GlobalPaintLayerValue;
				float temp_output_19_0_g117813 = TVE_PaintLayers[(int)temp_output_82_0_g117811];
				TVEModelData Data16_g117809 = (TVEModelData)0;
				float In_Dummy16_g117809 = 0.0;
				float3 vertexToFrag73_g117794 = packedInput.ase_texcoord8.xyz;
				half3 PositionWS122_g117794 = vertexToFrag73_g117794;
				float3 In_PositionWS16_g117809 = PositionWS122_g117794;
				float3 localObjectPosition_UNITY_MATRIX_M14_g117796 = ObjectPosition_UNITY_MATRIX_M();
				#ifdef SHADEROPTIONS_CAMERA_RELATIVE_RENDERING
				float3 staticSwitch13_g117796 = ( localObjectPosition_UNITY_MATRIX_M14_g117796 + _WorldSpaceCameraPos );
				#else
				float3 staticSwitch13_g117796 = localObjectPosition_UNITY_MATRIX_M14_g117796;
				#endif
				half3 ObjectData20_g117798 = staticSwitch13_g117796;
				half3 WorldData19_g117798 = ase_worldPos;
				#ifdef TVE_OBJECT_BATCHED
				float3 staticSwitch14_g117798 = WorldData19_g117798;
				#else
				float3 staticSwitch14_g117798 = ObjectData20_g117798;
				#endif
				float3 temp_output_124_0_g117796 = staticSwitch14_g117798;
				float3 temp_output_239_7_g117794 = temp_output_124_0_g117796;
				half3 PivotWS121_g117794 = temp_output_239_7_g117794;
				#ifdef TVE_SCOPE_DYNAMIC
				float3 staticSwitch204_g117794 = ( PositionWS122_g117794 - PivotWS121_g117794 );
				#else
				float3 staticSwitch204_g117794 = PositionWS122_g117794;
				#endif
				half3 PositionWO132_g117794 = ( staticSwitch204_g117794 - TVE_WorldOrigin );
				float3 In_PositionWO16_g117809 = PositionWO132_g117794;
				float3 In_PivotWS16_g117809 = PivotWS121_g117794;
				half3 PivotWO133_g117794 = ( PivotWS121_g117794 - TVE_WorldOrigin );
				float3 In_PivotWO16_g117809 = PivotWO133_g117794;
				float3 normalizedWorldNormal = normalize( packedInput.normalWS );
				half3 Normal_WS95_g117794 = normalizedWorldNormal;
				float3 In_NormalWS16_g117809 = Normal_WS95_g117794;
				float3 normalizeResult296_g117794 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g117794 ) );
				half3 ViewDirWS169_g117794 = normalizeResult296_g117794;
				float3 In_ViewDirWS16_g117809 = ViewDirWS169_g117794;
				half4 VertexMasks171_g117794 = packedInput.ase_color;
				float4 In_VertexData16_g117809 = VertexMasks171_g117794;
				float4 In_BoundsData16_g117809 = float4( 1,1,1,1 );
				Data16_g117809.Dummy = In_Dummy16_g117809;
				Data16_g117809.PositionWS = In_PositionWS16_g117809;
				Data16_g117809.PositionWO = In_PositionWO16_g117809;
				Data16_g117809.PivotWS = In_PivotWS16_g117809;
				Data16_g117809.PivotWO = In_PivotWO16_g117809;
				Data16_g117809.NormalWS = In_NormalWS16_g117809;
				Data16_g117809.ViewDirWS = In_ViewDirWS16_g117809;
				Data16_g117809.VertexData = In_VertexData16_g117809;
				Data16_g117809.BoundsData = In_BoundsData16_g117809;
				TVEModelData Data15_g117892 = Data16_g117809;
				float Out_Dummy15_g117892 = 0;
				float3 Out_PositionWS15_g117892 = float3( 0,0,0 );
				float3 Out_PositionWO15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWS15_g117892 = float3( 0,0,0 );
				float3 Out_PivotWO15_g117892 = float3( 0,0,0 );
				float3 Out_NormalWS15_g117892 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g117892 = float3( 0,0,0 );
				float4 Out_VertexData15_g117892 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g117892 = float4( 0,0,0,0 );
				Out_Dummy15_g117892 = Data15_g117892.Dummy;
				Out_PositionWS15_g117892 = Data15_g117892.PositionWS;
				Out_PositionWO15_g117892 = Data15_g117892.PositionWO;
				Out_PivotWS15_g117892 = Data15_g117892.PivotWS;
				Out_PivotWO15_g117892 = Data15_g117892.PivotWO;
				Out_NormalWS15_g117892 = Data15_g117892.NormalWS;
				Out_ViewDirWS15_g117892 = Data15_g117892.ViewDirWS;
				Out_VertexData15_g117892 = Data15_g117892.VertexData;
				Out_BoundsData15_g117892 = Data15_g117892.BoundsData;
				half3 Model_PositionWS143_g117810 = Out_PositionWS15_g117892;
				half3 Input_Position180_g117814 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117814 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_82_0_g117814 = temp_output_82_0_g117811;
				float2 temp_output_119_0_g117814 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117814).xz ) );
				float temp_output_7_0_g117819 = 1.0;
				float temp_output_10_0_g117819 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117819 );
				float4 lerpResult131_g117814 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117814,temp_output_82_0_g117814, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, temp_output_119_0_g117814,temp_output_82_0_g117814, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117814 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117819 ) / temp_output_10_0_g117819 ) ));
				float4 temp_output_17_0_g117813 = lerpResult131_g117814;
				float4 temp_output_3_0_g117813 = TVE_PaintParams;
				float4 ifLocalVar18_g117813 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117813 >= 0.5 )
				ifLocalVar18_g117813 = temp_output_17_0_g117813;
				else
				ifLocalVar18_g117813 = temp_output_3_0_g117813;
				float4 lerpResult22_g117813 = lerp( temp_output_3_0_g117813 , temp_output_17_0_g117813 , temp_output_19_0_g117813);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117813 = lerpResult22_g117813;
				#else
				float4 staticSwitch24_g117813 = ifLocalVar18_g117813;
				#endif
				half4 Paint_Params71_g117810 = staticSwitch24_g117813;
				float4 In_PaintParams204_g117810 = Paint_Params71_g117810;
				float temp_output_82_0_g117829 = _GlobalGlowLayerValue;
				float temp_output_19_0_g117831 = TVE_GlowLayers[(int)temp_output_82_0_g117829];
				half3 Input_Position180_g117832 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117832 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_82_0_g117832 = temp_output_82_0_g117829;
				float2 temp_output_119_0_g117832 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117832).xz ) );
				float temp_output_7_0_g117837 = 1.0;
				float temp_output_10_0_g117837 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117837 );
				float4 lerpResult131_g117832 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117832,temp_output_82_0_g117832, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, temp_output_119_0_g117832,temp_output_82_0_g117832, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117832 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117837 ) / temp_output_10_0_g117837 ) ));
				float4 temp_output_17_0_g117831 = lerpResult131_g117832;
				float4 temp_output_3_0_g117831 = TVE_GlowParams;
				float4 ifLocalVar18_g117831 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117831 >= 0.5 )
				ifLocalVar18_g117831 = temp_output_17_0_g117831;
				else
				ifLocalVar18_g117831 = temp_output_3_0_g117831;
				float4 lerpResult22_g117831 = lerp( temp_output_3_0_g117831 , temp_output_17_0_g117831 , temp_output_19_0_g117831);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117831 = lerpResult22_g117831;
				#else
				float4 staticSwitch24_g117831 = ifLocalVar18_g117831;
				#endif
				half4 Glow_Params248_g117810 = staticSwitch24_g117831;
				float4 In_GlowParams204_g117810 = Glow_Params248_g117810;
				float temp_output_132_0_g117874 = _GlobalAtmoLayerValue;
				float temp_output_19_0_g117876 = TVE_AtmoLayers[(int)temp_output_132_0_g117874];
				half3 Input_Position180_g117877 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117877 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_82_0_g117877 = temp_output_132_0_g117874;
				float2 temp_output_119_0_g117877 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117877).xz ) );
				float temp_output_7_0_g117882 = 1.0;
				float temp_output_10_0_g117882 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117882 );
				float4 lerpResult131_g117877 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117877,temp_output_82_0_g117877, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, temp_output_119_0_g117877,temp_output_82_0_g117877, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117877 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117882 ) / temp_output_10_0_g117882 ) ));
				float4 temp_output_17_0_g117876 = lerpResult131_g117877;
				float4 temp_output_3_0_g117876 = TVE_AtmoParams;
				float4 ifLocalVar18_g117876 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117876 >= 0.5 )
				ifLocalVar18_g117876 = temp_output_17_0_g117876;
				else
				ifLocalVar18_g117876 = temp_output_3_0_g117876;
				float4 lerpResult22_g117876 = lerp( temp_output_3_0_g117876 , temp_output_17_0_g117876 , temp_output_19_0_g117876);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117876 = lerpResult22_g117876;
				#else
				float4 staticSwitch24_g117876 = ifLocalVar18_g117876;
				#endif
				half4 Atmo_Params80_g117810 = staticSwitch24_g117876;
				float4 In_AtmoParams204_g117810 = Atmo_Params80_g117810;
				float temp_output_132_0_g117883 = _GlobalFadeLayerValue;
				float temp_output_19_0_g117885 = TVE_FadeLayers[(int)temp_output_132_0_g117883];
				half3 Input_Position180_g117886 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117886 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_82_0_g117886 = temp_output_132_0_g117883;
				float2 temp_output_119_0_g117886 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117886).xz ) );
				float temp_output_7_0_g117891 = 1.0;
				float temp_output_10_0_g117891 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117891 );
				float4 lerpResult131_g117886 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117886,temp_output_82_0_g117886, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, temp_output_119_0_g117886,temp_output_82_0_g117886, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117886 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117891 ) / temp_output_10_0_g117891 ) ));
				float4 temp_output_17_0_g117885 = lerpResult131_g117886;
				float4 temp_output_3_0_g117885 = TVE_FadeParams;
				float4 ifLocalVar18_g117885 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117885 >= 0.5 )
				ifLocalVar18_g117885 = temp_output_17_0_g117885;
				else
				ifLocalVar18_g117885 = temp_output_3_0_g117885;
				float4 lerpResult22_g117885 = lerp( temp_output_3_0_g117885 , temp_output_17_0_g117885 , temp_output_19_0_g117885);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117885 = lerpResult22_g117885;
				#else
				float4 staticSwitch24_g117885 = ifLocalVar18_g117885;
				#endif
				half4 Fade_Params387_g117810 = staticSwitch24_g117885;
				float4 In_FadeParams204_g117810 = Fade_Params387_g117810;
				half4 Form_Params112_g117810 = TVE_FormParams;
				float4 In_FormParams204_g117810 = Form_Params112_g117810;
				float temp_output_130_0_g117847 = _GlobalLandLayerValue;
				float temp_output_19_0_g117849 = TVE_LandLayers[(int)temp_output_130_0_g117847];
				half3 Input_Position180_g117850 = Model_PositionWS143_g117810;
				float2 temp_output_75_0_g117850 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_82_0_g117850 = temp_output_130_0_g117847;
				float2 temp_output_119_0_g117850 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g117850).xz ) );
				float temp_output_7_0_g117855 = 1.0;
				float temp_output_10_0_g117855 = ( TVE_RenderNearFadeValue - temp_output_7_0_g117855 );
				float4 lerpResult131_g117850 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandBaseTex, sampler_Linear_Clamp, temp_output_75_0_g117850,temp_output_82_0_g117850, 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_LandNearTex, sampler_Linear_Repeat, temp_output_119_0_g117850,temp_output_82_0_g117850, 0.0 ) , saturate( ( ( saturate( ( distance( Input_Position180_g117850 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g117855 ) / temp_output_10_0_g117855 ) ));
				float4 temp_output_17_0_g117849 = lerpResult131_g117850;
				float4 temp_output_3_0_g117849 = TVE_LandParams;
				float4 ifLocalVar18_g117849 = 0;
				UNITY_BRANCH 
				if( temp_output_19_0_g117849 >= 0.5 )
				ifLocalVar18_g117849 = temp_output_17_0_g117849;
				else
				ifLocalVar18_g117849 = temp_output_3_0_g117849;
				float4 lerpResult22_g117849 = lerp( temp_output_3_0_g117849 , temp_output_17_0_g117849 , temp_output_19_0_g117849);
				#ifdef SHADER_API_MOBILE
				float4 staticSwitch24_g117849 = lerpResult22_g117849;
				#else
				float4 staticSwitch24_g117849 = ifLocalVar18_g117849;
				#endif
				half4 Land_Params375_g117810 = staticSwitch24_g117849;
				float4 In_LandParams204_g117810 = Land_Params375_g117810;
				half4 Wind_Params88_g117810 = TVE_WindParams;
				float4 In_WindParams204_g117810 = Wind_Params88_g117810;
				half4 Push_Params335_g117810 = TVE_PushParams;
				float4 In_PushParams204_g117810 = Push_Params335_g117810;
				Data204_g117810.Dummy = In_Dummy204_g117810;
				Data204_g117810.CoatParams = In_CoatParams204_g117810;
				Data204_g117810.PaintParams = In_PaintParams204_g117810;
				Data204_g117810.GlowParams = In_GlowParams204_g117810;
				Data204_g117810.AtmoParams = In_AtmoParams204_g117810;
				Data204_g117810.FadeParams = In_FadeParams204_g117810;
				Data204_g117810.FormParams= In_FormParams204_g117810;
				Data204_g117810.LandParams = In_LandParams204_g117810;
				Data204_g117810.WindParams = In_WindParams204_g117810;
				Data204_g117810.PushParams = In_PushParams204_g117810;
				TVEGlobalData Data15_g118008 = Data204_g117810;
				float Out_Dummy15_g118008 = 0;
				float4 Out_CoatParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118008 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118008 = float4( 0,0,0,0 );
				Out_Dummy15_g118008 = Data15_g118008.Dummy;
				Out_CoatParams15_g118008 = Data15_g118008.CoatParams;
				Out_PaintParams15_g118008 = Data15_g118008.PaintParams;
				Out_GlowParams15_g118008 = Data15_g118008.GlowParams;
				Out_AtmoParams15_g118008= Data15_g118008.AtmoParams;
				Out_FadeParams15_g118008= Data15_g118008.FadeParams;
				Out_FormParams15_g118008 = Data15_g118008.FormParams;
				Out_LandParams15_g118008 = Data15_g118008.LandParams;
				Out_WindParams15_g118008 = Data15_g118008.WindParams;
				Out_PushParams15_g118008 = Data15_g118008.PushParams;
				half4 Global_PaintParams209_g118007 = Out_PaintParams15_g118008;
				float temp_output_6_0_g118009 = ( saturate( (Global_PaintParams209_g118007).w ) * TVE_IsEnabled );
				#ifdef TVE_REGISTER
				float staticSwitch14_g118009 = ( temp_output_6_0_g118009 + ( _TintingElementMode * 0.0 ) );
				#else
				float staticSwitch14_g118009 = temp_output_6_0_g118009;
				#endif
				#ifdef TVE_TINTING_ELEMENT
				float staticSwitch283_g118007 = staticSwitch14_g118009;
				#else
				float staticSwitch283_g118007 = 1.0;
				#endif
				half Tinting_GlobalValue285_g118007 = staticSwitch283_g118007;
				float3 lerpResult368_g118007 = lerp( Visual_Albedo139_g118007 , temp_cast_10 , ( Tinting_GlobalValue285_g118007 * _TintingGrayValue ));
				float3 temp_cast_32 = (1.0).xxx;
				#ifdef TVE_TINTING_ELEMENT
				float3 staticSwitch288_g118007 = (Global_PaintParams209_g118007).xyz;
				#else
				float3 staticSwitch288_g118007 = temp_cast_32;
				#endif
				half3 Tinting_ColorGlobal290_g118007 = staticSwitch288_g118007;
				float temp_output_200_11_g118007 = Out_MultiMask4_g118029;
				half Visual_MultiMask181_g118007 = temp_output_200_11_g118007;
				float lerpResult147_g118007 = lerp( 1.0 , Visual_MultiMask181_g118007 , _TintingMultiValue);
				half Tinting_MutiMask121_g118007 = lerpResult147_g118007;
				half Tinting_TexMask385_g118007 = 1.0;
				float temp_output_200_15_g118007 = Out_Luminosity4_g118029;
				half Visual_Luminosity257_g118007 = temp_output_200_15_g118007;
				float clampResult17_g118021 = clamp( Visual_Luminosity257_g118007 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118020 = _TintingLumaRemap.x;
				float temp_output_10_0_g118020 = ( _TintingLumaRemap.y - temp_output_7_0_g118020 );
				float lerpResult228_g118007 = lerp( 1.0 , saturate( ( ( clampResult17_g118021 - temp_output_7_0_g118020 ) / ( temp_output_10_0_g118020 + 0.0001 ) ) ) , _TintingLumaValue);
				half Tinting_LumaMask153_g118007 = lerpResult228_g118007;
				half Tinting_VertMask309_g118007 = 1.0;
				half Tinting_NoiseMask213_g118007 = 1.0;
				half Custom_Mask345_g118007 = 1.0;
				float temp_output_7_0_g118016 = _TintingBlendRemap.x;
				float temp_output_10_0_g118016 = ( _TintingBlendRemap.y - temp_output_7_0_g118016 );
				half Tinting_Mask242_g118007 = ( saturate( ( ( ( _TintingIntensityValue * Tinting_MutiMask121_g118007 * Tinting_TexMask385_g118007 * Tinting_LumaMask153_g118007 * Tinting_VertMask309_g118007 * Tinting_NoiseMask213_g118007 * Tinting_GlobalValue285_g118007 * Custom_Mask345_g118007 ) - temp_output_7_0_g118016 ) / ( temp_output_10_0_g118016 + 0.0001 ) ) ) * TVE_IsEnabled );
				float3 lerpResult90_g118007 = lerp( Visual_Albedo139_g118007 , ( lerpResult368_g118007 * 4.594794 * Tinting_ColorGlobal290_g118007 * (_TintingColor).rgb ) , Tinting_Mask242_g118007);
				#ifdef TVE_TINTING
				float3 staticSwitch286_g118007 = lerpResult90_g118007;
				#else
				float3 staticSwitch286_g118007 = Visual_Albedo139_g118007;
				#endif
				half3 Final_Albedo97_g118007 = staticSwitch286_g118007;
				float3 In_Albedo3_g118028 = Final_Albedo97_g118007;
				float3 In_AlbedoRaw3_g118028 = Out_AlbedoRaw4_g118029;
				float2 In_NormalTS3_g118028 = Out_NormalTS4_g118029;
				float3 In_NormalWS3_g118028 = Out_NormalWS4_g118029;
				float4 In_Shader3_g118028 = Out_Shader4_g118029;
				float4 In_Emissive3_g118028 = Out_Emissive4_g118029;
				float In_Grayscale3_g118028 = temp_output_200_12_g118007;
				float In_Luminosity3_g118028 = temp_output_200_15_g118007;
				float In_MultiMask3_g118028 = temp_output_200_11_g118007;
				float In_AlphaClip3_g118028 = Out_AlphaClip4_g118029;
				float In_AlphaFade3_g118028 = Out_AlphaFade4_g118029;
				float3 In_Translucency3_g118028 = Out_Translucency4_g118029;
				float In_Transmission3_g118028 = Out_Transmission4_g118029;
				float In_Thickness3_g118028 = Out_Thickness4_g118029;
				float In_Diffusion3_g118028 = Out_Diffusion4_g118029;
				Data3_g118028.Dummy = In_Dummy3_g118028;
				Data3_g118028.Albedo = In_Albedo3_g118028;
				Data3_g118028.AlbedoRaw = In_AlbedoRaw3_g118028;
				Data3_g118028.NormalTS = In_NormalTS3_g118028;
				Data3_g118028.NormalWS = In_NormalWS3_g118028;
				Data3_g118028.Shader = In_Shader3_g118028;
				Data3_g118028.Emissive= In_Emissive3_g118028;
				Data3_g118028.MultiMask = In_MultiMask3_g118028;
				Data3_g118028.Grayscale = In_Grayscale3_g118028;
				Data3_g118028.Luminosity = In_Luminosity3_g118028;
				Data3_g118028.AlphaClip = In_AlphaClip3_g118028;
				Data3_g118028.AlphaFade = In_AlphaFade3_g118028;
				Data3_g118028.Translucency = In_Translucency3_g118028;
				Data3_g118028.Transmission = In_Transmission3_g118028;
				Data3_g118028.Thickness = In_Thickness3_g118028;
				Data3_g118028.Diffusion = In_Diffusion3_g118028;
				TVEVisualData Data4_g118033 = Data3_g118028;
				float Out_Dummy4_g118033 = 0;
				float3 Out_Albedo4_g118033 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118033 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118033 = float2( 0,0 );
				float3 Out_NormalWS4_g118033 = float3( 0,0,0 );
				float4 Out_Shader4_g118033 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118033 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118033 = 0;
				float Out_Grayscale4_g118033 = 0;
				float Out_Luminosity4_g118033 = 0;
				float Out_AlphaClip4_g118033 = 0;
				float Out_AlphaFade4_g118033 = 0;
				float3 Out_Translucency4_g118033 = float3( 0,0,0 );
				float Out_Transmission4_g118033 = 0;
				float Out_Thickness4_g118033 = 0;
				float Out_Diffusion4_g118033 = 0;
				Out_Dummy4_g118033 = Data4_g118033.Dummy;
				Out_Albedo4_g118033 = Data4_g118033.Albedo;
				Out_AlbedoRaw4_g118033 = Data4_g118033.AlbedoRaw;
				Out_NormalTS4_g118033 = Data4_g118033.NormalTS;
				Out_NormalWS4_g118033 = Data4_g118033.NormalWS;
				Out_Shader4_g118033 = Data4_g118033.Shader;
				Out_Emissive4_g118033= Data4_g118033.Emissive;
				Out_MultiMask4_g118033 = Data4_g118033.MultiMask;
				Out_Grayscale4_g118033 = Data4_g118033.Grayscale;
				Out_Luminosity4_g118033= Data4_g118033.Luminosity;
				Out_AlphaClip4_g118033 = Data4_g118033.AlphaClip;
				Out_AlphaFade4_g118033 = Data4_g118033.AlphaFade;
				Out_Translucency4_g118033 = Data4_g118033.Translucency;
				Out_Transmission4_g118033 = Data4_g118033.Transmission;
				Out_Thickness4_g118033 = Data4_g118033.Thickness;
				Out_Diffusion4_g118033 = Data4_g118033.Diffusion;
				half3 Visual_Albedo292_g118031 = Out_Albedo4_g118033;
				float temp_output_280_12_g118031 = Out_Grayscale4_g118033;
				half Visual_Grayscale308_g118031 = temp_output_280_12_g118031;
				float3 temp_cast_33 = (Visual_Grayscale308_g118031).xxx;
				TVEGlobalData Data15_g118032 = Data204_g117810;
				float Out_Dummy15_g118032 = 0;
				float4 Out_CoatParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118032 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118032 = float4( 0,0,0,0 );
				Out_Dummy15_g118032 = Data15_g118032.Dummy;
				Out_CoatParams15_g118032 = Data15_g118032.CoatParams;
				Out_PaintParams15_g118032 = Data15_g118032.PaintParams;
				Out_GlowParams15_g118032 = Data15_g118032.GlowParams;
				Out_AtmoParams15_g118032= Data15_g118032.AtmoParams;
				Out_FadeParams15_g118032= Data15_g118032.FadeParams;
				Out_FormParams15_g118032 = Data15_g118032.FormParams;
				Out_LandParams15_g118032 = Data15_g118032.LandParams;
				Out_WindParams15_g118032 = Data15_g118032.WindParams;
				Out_PushParams15_g118032 = Data15_g118032.PushParams;
				half4 Global_AtmoParams314_g118031 = Out_AtmoParams15_g118032;
				#ifdef TVE_DRYNESS_ELEMENT
				float staticSwitch351_g118031 = ( (Global_AtmoParams314_g118031).x * TVE_IsEnabled );
				#else
				float staticSwitch351_g118031 = 1.0;
				#endif
				half Dryness_GlobalMask352_g118031 = staticSwitch351_g118031;
				float3 lerpResult485_g118031 = lerp( Visual_Albedo292_g118031 , temp_cast_33 , ( Dryness_GlobalMask352_g118031 * _DrynessGrayValue ));
				half3 hsvTorgb58_g118052 = RGBToHSV( lerpResult485_g118031 );
				half3 hsvTorgb61_g118052 = HSVToRGB( half3(( hsvTorgb58_g118052.x + _DrynessShiftValue ),hsvTorgb58_g118052.y,hsvTorgb58_g118052.z) );
				#ifdef TVE_DRYNESS_SHIFT
				float3 staticSwitch499_g118031 = hsvTorgb61_g118052;
				#else
				float3 staticSwitch499_g118031 = lerpResult485_g118031;
				#endif
				half Dryness_TexMask478_g118031 = 1.0;
				float temp_output_280_11_g118031 = Out_MultiMask4_g118033;
				half Visual_MultiMask310_g118031 = temp_output_280_11_g118031;
				float lerpResult283_g118031 = lerp( 1.0 , Visual_MultiMask310_g118031 , _DrynessMultiValue);
				half Dryness_MultiMask302_g118031 = lerpResult283_g118031;
				float temp_output_280_15_g118031 = Out_Luminosity4_g118033;
				half Visual_Luminosity309_g118031 = temp_output_280_15_g118031;
				float clampResult17_g118047 = clamp( Visual_Luminosity309_g118031 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118046 = _DrynessLumaRemap.x;
				float temp_output_10_0_g118046 = ( _DrynessLumaRemap.y - temp_output_7_0_g118046 );
				float lerpResult295_g118031 = lerp( 1.0 , saturate( ( ( clampResult17_g118047 - temp_output_7_0_g118046 ) / ( temp_output_10_0_g118046 + 0.0001 ) ) ) , _DrynessLumaValue);
				half Dryness_LumaMask301_g118031 = lerpResult295_g118031;
				half Dryness_VertMask378_g118031 = 1.0;
				half Dryness_MaskNoise291_g118031 = 1.0;
				half Custom_Mask411_g118031 = 1.0;
				float temp_output_7_0_g118045 = _DrynessBlendRemap.x;
				float temp_output_10_0_g118045 = ( _DrynessBlendRemap.y - temp_output_7_0_g118045 );
				half Dryness_Mask329_g118031 = saturate( ( ( ( _DrynessIntensityValue * Dryness_TexMask478_g118031 * Dryness_MultiMask302_g118031 * Dryness_LumaMask301_g118031 * Dryness_VertMask378_g118031 * Dryness_MaskNoise291_g118031 * Dryness_GlobalMask352_g118031 * Custom_Mask411_g118031 ) - temp_output_7_0_g118045 ) / ( temp_output_10_0_g118045 + 0.0001 ) ) );
				float3 lerpResult336_g118031 = lerp( Visual_Albedo292_g118031 , ( staticSwitch499_g118031 * 4.594794 * (_DrynessColor).rgb ) , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float3 staticSwitch356_g118031 = lerpResult336_g118031;
				#else
				float3 staticSwitch356_g118031 = Visual_Albedo292_g118031;
				#endif
				half3 Final_Albedo331_g118031 = staticSwitch356_g118031;
				float3 In_Albedo3_g118034 = Final_Albedo331_g118031;
				float3 In_AlbedoRaw3_g118034 = Out_AlbedoRaw4_g118033;
				float2 In_NormalTS3_g118034 = Out_NormalTS4_g118033;
				float3 In_NormalWS3_g118034 = Out_NormalWS4_g118033;
				half4 Visual_Shader415_g118031 = Out_Shader4_g118033;
				float4 break438_g118031 = Visual_Shader415_g118031;
				float4 appendResult439_g118031 = (float4(break438_g118031.x , break438_g118031.y , break438_g118031.z , ( break438_g118031.w * _DrynessSmoothnessValue )));
				float4 lerpResult427_g118031 = lerp( Visual_Shader415_g118031 , appendResult439_g118031 , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float4 staticSwitch426_g118031 = lerpResult427_g118031;
				#else
				float4 staticSwitch426_g118031 = Visual_Shader415_g118031;
				#endif
				half4 Final_Shader433_g118031 = staticSwitch426_g118031;
				float4 In_Shader3_g118034 = Final_Shader433_g118031;
				float4 In_Emissive3_g118034 = Out_Emissive4_g118033;
				float In_Grayscale3_g118034 = temp_output_280_12_g118031;
				float In_Luminosity3_g118034 = temp_output_280_15_g118031;
				float In_MultiMask3_g118034 = temp_output_280_11_g118031;
				float In_AlphaClip3_g118034 = Out_AlphaClip4_g118033;
				float In_AlphaFade3_g118034 = Out_AlphaFade4_g118033;
				float3 In_Translucency3_g118034 = Out_Translucency4_g118033;
				half Visual_Transmission416_g118031 = Out_Transmission4_g118033;
				float lerpResult421_g118031 = lerp( Visual_Transmission416_g118031 , ( Visual_Transmission416_g118031 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g118031);
				#ifdef TVE_DRYNESS
				float staticSwitch418_g118031 = lerpResult421_g118031;
				#else
				float staticSwitch418_g118031 = Visual_Transmission416_g118031;
				#endif
				half Final_Transmission425_g118031 = staticSwitch418_g118031;
				float In_Transmission3_g118034 = Final_Transmission425_g118031;
				float In_Thickness3_g118034 = Out_Thickness4_g118033;
				float In_Diffusion3_g118034 = Out_Diffusion4_g118033;
				Data3_g118034.Dummy = In_Dummy3_g118034;
				Data3_g118034.Albedo = In_Albedo3_g118034;
				Data3_g118034.AlbedoRaw = In_AlbedoRaw3_g118034;
				Data3_g118034.NormalTS = In_NormalTS3_g118034;
				Data3_g118034.NormalWS = In_NormalWS3_g118034;
				Data3_g118034.Shader = In_Shader3_g118034;
				Data3_g118034.Emissive= In_Emissive3_g118034;
				Data3_g118034.MultiMask = In_MultiMask3_g118034;
				Data3_g118034.Grayscale = In_Grayscale3_g118034;
				Data3_g118034.Luminosity = In_Luminosity3_g118034;
				Data3_g118034.AlphaClip = In_AlphaClip3_g118034;
				Data3_g118034.AlphaFade = In_AlphaFade3_g118034;
				Data3_g118034.Translucency = In_Translucency3_g118034;
				Data3_g118034.Transmission = In_Transmission3_g118034;
				Data3_g118034.Thickness = In_Thickness3_g118034;
				Data3_g118034.Diffusion = In_Diffusion3_g118034;
				TVEVisualData Data4_g118055 = Data3_g118034;
				float Out_Dummy4_g118055 = 0;
				float3 Out_Albedo4_g118055 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118055 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118055 = float2( 0,0 );
				float3 Out_NormalWS4_g118055 = float3( 0,0,0 );
				float4 Out_Shader4_g118055 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118055 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118055 = 0;
				float Out_Grayscale4_g118055 = 0;
				float Out_Luminosity4_g118055 = 0;
				float Out_AlphaClip4_g118055 = 0;
				float Out_AlphaFade4_g118055 = 0;
				float3 Out_Translucency4_g118055 = float3( 0,0,0 );
				float Out_Transmission4_g118055 = 0;
				float Out_Thickness4_g118055 = 0;
				float Out_Diffusion4_g118055 = 0;
				Out_Dummy4_g118055 = Data4_g118055.Dummy;
				Out_Albedo4_g118055 = Data4_g118055.Albedo;
				Out_AlbedoRaw4_g118055 = Data4_g118055.AlbedoRaw;
				Out_NormalTS4_g118055 = Data4_g118055.NormalTS;
				Out_NormalWS4_g118055 = Data4_g118055.NormalWS;
				Out_Shader4_g118055 = Data4_g118055.Shader;
				Out_Emissive4_g118055= Data4_g118055.Emissive;
				Out_MultiMask4_g118055 = Data4_g118055.MultiMask;
				Out_Grayscale4_g118055 = Data4_g118055.Grayscale;
				Out_Luminosity4_g118055= Data4_g118055.Luminosity;
				Out_AlphaClip4_g118055 = Data4_g118055.AlphaClip;
				Out_AlphaFade4_g118055 = Data4_g118055.AlphaFade;
				Out_Translucency4_g118055 = Data4_g118055.Translucency;
				Out_Transmission4_g118055 = Data4_g118055.Transmission;
				Out_Thickness4_g118055 = Data4_g118055.Thickness;
				Out_Diffusion4_g118055 = Data4_g118055.Diffusion;
				half3 Visual_Albedo127_g118054 = Out_Albedo4_g118055;
				float3 temp_output_622_0_g118054 = (_OverlayColor).rgb;
				TEXTURE2D(Texture238_g118058) = _OverlayAlbedoTex;
				float localFilterTexture19_g118087 = ( 0.0 );
				SamplerState SamplerDefault19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerPoint19_g118087 = sampler_Point_Repeat;
				SamplerState SamplerLow19_g118087 = sampler_Linear_Repeat;
				SamplerState SamplerMedium19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh19_g118087 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS19_g118087 = SamplerDefault19_g118087;
				#if defined (TVE_FILTER_DEFAULT)
				    SS19_g118087 = SamplerDefault19_g118087;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS19_g118087 = SamplerPoint19_g118087;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS19_g118087 = SamplerLow19_g118087;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS19_g118087 = SamplerMedium19_g118087;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS19_g118087 = SamplerHigh19_g118087;
				#endif
				SamplerState Sampler238_g118058 = SS19_g118087;
				float4 temp_output_6_0_g118059 = _overlay_coord_value;
				#ifdef TVE_REGISTER
				float4 staticSwitch14_g118059 = ( temp_output_6_0_g118059 + ( ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) * float4( 0,0,0,0 ) ) );
				#else
				float4 staticSwitch14_g118059 = temp_output_6_0_g118059;
				#endif
				half4 Overlay_Coords639_g118054 = staticSwitch14_g118059;
				float4 temp_output_37_0_g118058 = Overlay_Coords639_g118054;
				half4 Coords238_g118058 = temp_output_37_0_g118058;
				TVEModelData Data15_g118089 = Data16_g117809;
				float Out_Dummy15_g118089 = 0;
				float3 Out_PositionWS15_g118089 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118089 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118089 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118089 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118089 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g118089 = float3( 0,0,0 );
				float4 Out_VertexData15_g118089 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118089 = float4( 0,0,0,0 );
				Out_Dummy15_g118089 = Data15_g118089.Dummy;
				Out_PositionWS15_g118089 = Data15_g118089.PositionWS;
				Out_PositionWO15_g118089 = Data15_g118089.PositionWO;
				Out_PivotWS15_g118089 = Data15_g118089.PivotWS;
				Out_PivotWO15_g118089 = Data15_g118089.PivotWO;
				Out_NormalWS15_g118089 = Data15_g118089.NormalWS;
				Out_ViewDirWS15_g118089 = Data15_g118089.ViewDirWS;
				Out_VertexData15_g118089 = Data15_g118089.VertexData;
				Out_BoundsData15_g118089 = Data15_g118089.BoundsData;
				half3 Model_PositionWO602_g118054 = Out_PositionWO15_g118089;
				float3 temp_output_279_0_g118058 = Model_PositionWO602_g118054;
				half3 WorldPosition238_g118058 = temp_output_279_0_g118058;
				half4 localSamplePlanar2D238_g118058 = SamplePlanar2D( Texture238_g118058 , Sampler238_g118058 , Coords238_g118058 , WorldPosition238_g118058 );
				TEXTURE2D(Texture246_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler246_g118058 = SS19_g118087;
				half4 Coords246_g118058 = temp_output_37_0_g118058;
				half3 WorldPosition246_g118058 = temp_output_279_0_g118058;
				half3 Model_NormalWS712_g118054 = Out_NormalWS15_g118089;
				float3 temp_output_280_0_g118058 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118058 = temp_output_280_0_g118058;
				half4 localSamplePlanar3D246_g118058 = SamplePlanar3D( Texture246_g118058 , Sampler246_g118058 , Coords246_g118058 , WorldPosition246_g118058 , WorldNormal246_g118058 );
				TEXTURE2D(Texture234_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler234_g118058 = SS19_g118087;
				float4 Coords234_g118058 = temp_output_37_0_g118058;
				float3 WorldPosition234_g118058 = temp_output_279_0_g118058;
				float4 localSampleStochastic2D234_g118058 = SampleStochastic2D( Texture234_g118058 , Sampler234_g118058 , Coords234_g118058 , WorldPosition234_g118058 );
				TEXTURE2D(Texture263_g118058) = _OverlayAlbedoTex;
				SamplerState Sampler263_g118058 = SS19_g118087;
				half4 Coords263_g118058 = temp_output_37_0_g118058;
				half3 WorldPosition263_g118058 = temp_output_279_0_g118058;
				half3 WorldNormal263_g118058 = temp_output_280_0_g118058;
				half4 localSampleStochastic3D263_g118058 = SampleStochastic3D( Texture263_g118058 , Sampler263_g118058 , Coords263_g118058 , WorldPosition263_g118058 , WorldNormal263_g118058 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch676_g118054 = localSamplePlanar2D238_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch676_g118054 = localSamplePlanar3D246_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch676_g118054 = localSampleStochastic2D234_g118058;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch676_g118054 = localSampleStochastic3D263_g118058;
				#else
				float4 staticSwitch676_g118054 = localSamplePlanar2D238_g118058;
				#endif
				half3 Overlay_Albedo526_g118054 = (staticSwitch676_g118054).xyz;
				#ifdef TVE_OVERLAY_TEX
				float3 staticSwitch578_g118054 = ( temp_output_622_0_g118054 * Overlay_Albedo526_g118054 );
				#else
				float3 staticSwitch578_g118054 = temp_output_622_0_g118054;
				#endif
				float3 temp_output_6_0_g118065 = staticSwitch578_g118054;
				#ifdef TVE_REGISTER
				float3 staticSwitch14_g118065 = ( temp_output_6_0_g118065 + ( _OverlayTextureMode * 0.0 ) );
				#else
				float3 staticSwitch14_g118065 = temp_output_6_0_g118065;
				#endif
				float3 temp_cast_34 = (0.0).xxx;
				TEXTURE2D(Texture246_g118062) = _OverlayGlitterTexRT;
				SamplerState Sampler246_g118062 = sampler_Linear_Repeat;
				float4 appendResult863_g118054 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g118062 = appendResult863_g118054;
				half4 Coords246_g118062 = temp_output_37_0_g118062;
				float3 temp_output_279_0_g118062 = Model_PositionWO602_g118054;
				half3 WorldPosition246_g118062 = temp_output_279_0_g118062;
				float3 temp_output_280_0_g118062 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118062 = temp_output_280_0_g118062;
				half4 localSamplePlanar3D246_g118062 = SamplePlanar3D( Texture246_g118062 , Sampler246_g118062 , Coords246_g118062 , WorldPosition246_g118062 , WorldNormal246_g118062 );
				half Overlay_GlitterTex854_g118054 = (localSamplePlanar3D246_g118062).x;
				half3 Model_PositionWS879_g118054 = Out_PositionWS15_g118089;
				#ifdef TVE_OVERLAY_GLITTER
				float3 staticSwitch868_g118054 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g118054 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g118054 ) / _OverlayGlitterDistValue ) ) ) );
				#else
				float3 staticSwitch868_g118054 = temp_cast_34;
				#endif
				half3 Overlay_GlitterColor865_g118054 = staticSwitch868_g118054;
				half Overlay_TexMask908_g118054 = 1.0;
				float3 temp_output_739_21_g118054 = Out_NormalWS4_g118055;
				half3 Visual_NormalWS749_g118054 = temp_output_739_21_g118054;
				float clampResult17_g118075 = clamp( saturate( (Visual_NormalWS749_g118054).y ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g118074 = _OverlayProjRemap.x;
				float temp_output_10_0_g118074 = ( _OverlayProjRemap.y - temp_output_7_0_g118074 );
				float lerpResult842_g118054 = lerp( 1.0 , saturate( ( ( clampResult17_g118075 - temp_output_7_0_g118074 ) / ( temp_output_10_0_g118074 + 0.0001 ) ) ) , _OverlayProjValue);
				half Overlay_MaskProj457_g118054 = lerpResult842_g118054;
				float temp_output_739_15_g118054 = Out_Luminosity4_g118055;
				half Visual_Luminosity654_g118054 = temp_output_739_15_g118054;
				float clampResult17_g118077 = clamp( Visual_Luminosity654_g118054 , 0.0001 , 0.9999 );
				float temp_output_7_0_g118076 = _OverlayLumaRemap.x;
				float temp_output_10_0_g118076 = ( _OverlayLumaRemap.y - temp_output_7_0_g118076 );
				float lerpResult587_g118054 = lerp( 1.0 , saturate( ( ( clampResult17_g118077 - temp_output_7_0_g118076 ) / ( temp_output_10_0_g118076 + 0.0001 ) ) ) , _OverlayLumaValue);
				half Overlay_MaskLuma438_g118054 = lerpResult587_g118054;
				half Overlay_VertMask801_g118054 = 1.0;
				half Overlay_MaskNoise427_g118054 = 1.0;
				TVEGlobalData Data15_g118056 = Data204_g117810;
				float Out_Dummy15_g118056 = 0;
				float4 Out_CoatParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118056 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118056 = float4( 0,0,0,0 );
				Out_Dummy15_g118056 = Data15_g118056.Dummy;
				Out_CoatParams15_g118056 = Data15_g118056.CoatParams;
				Out_PaintParams15_g118056 = Data15_g118056.PaintParams;
				Out_GlowParams15_g118056 = Data15_g118056.GlowParams;
				Out_AtmoParams15_g118056= Data15_g118056.AtmoParams;
				Out_FadeParams15_g118056= Data15_g118056.FadeParams;
				Out_FormParams15_g118056 = Data15_g118056.FormParams;
				Out_LandParams15_g118056 = Data15_g118056.LandParams;
				Out_WindParams15_g118056 = Data15_g118056.WindParams;
				Out_PushParams15_g118056 = Data15_g118056.PushParams;
				half4 Global_AtmoParams516_g118054 = Out_AtmoParams15_g118056;
				#ifdef TVE_OVERLAY_ELEMENT
				float staticSwitch705_g118054 = ( (Global_AtmoParams516_g118054).z * TVE_IsEnabled );
				#else
				float staticSwitch705_g118054 = 1.0;
				#endif
				half Overlay_MaskGlobal429_g118054 = staticSwitch705_g118054;
				half Custom_Mask646_g118054 = 1.0;
				float temp_output_7_0_g118083 = _OverlayBlendRemap1.x;
				float temp_output_10_0_g118083 = ( _OverlayBlendRemap1.y - temp_output_7_0_g118083 );
				half Overlay_Mask494_g118054 = saturate( ( ( ( _OverlayIntensityValue * Overlay_TexMask908_g118054 * Overlay_MaskProj457_g118054 * Overlay_MaskLuma438_g118054 * Overlay_VertMask801_g118054 * Overlay_MaskNoise427_g118054 * Overlay_MaskGlobal429_g118054 * Custom_Mask646_g118054 ) - temp_output_7_0_g118083 ) / ( temp_output_10_0_g118083 + 0.0001 ) ) );
				float3 lerpResult467_g118054 = lerp( Visual_Albedo127_g118054 , ( staticSwitch14_g118065 + Overlay_GlitterColor865_g118054 ) , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float3 staticSwitch577_g118054 = lerpResult467_g118054;
				#else
				float3 staticSwitch577_g118054 = Visual_Albedo127_g118054;
				#endif
				half3 Final_Albedo493_g118054 = staticSwitch577_g118054;
				float3 In_Albedo3_g118057 = Final_Albedo493_g118054;
				float3 In_AlbedoRaw3_g118057 = Out_AlbedoRaw4_g118055;
				half2 Visual_NormalTS535_g118054 = Out_NormalTS4_g118055;
				TEXTURE2D(Texture238_g118060) = _OverlayNormalTex;
				float localFilterTexture29_g118088 = ( 0.0 );
				SamplerState SamplerDefault29_g118088 = sampler_Linear_Repeat;
				SamplerState SamplerPoint29_g118088 = sampler_Point_Repeat;
				SamplerState SamplerLow29_g118088 = sampler_Linear_Repeat;
				SamplerState SamplerMedium29_g118088 = sampler_Linear_Repeat_Aniso8;
				SamplerState SamplerHigh29_g118088 = sampler_Linear_Repeat_Aniso8;
				SamplerState SS29_g118088 = SamplerDefault29_g118088;
				#if defined (TVE_FILTER_DEFAULT)
				    SS29_g118088 = SamplerDefault29_g118088;
				#endif
				#if defined (TVE_FILTER_POINT)
				    SS29_g118088 = SamplerPoint29_g118088;
				#endif
				#if defined (TVE_FILTER_LOW)
				    SS29_g118088 = SamplerLow29_g118088;
				#endif
				#if defined (TVE_FILTER_MEDIUM)
				    SS29_g118088 = SamplerMedium29_g118088;
				#endif
				#if defined (TVE_FILTER_HIGH)
				    SS29_g118088 = SamplerHigh29_g118088;
				#endif
				SamplerState Sampler238_g118060 = SS29_g118088;
				float4 temp_output_37_0_g118060 = Overlay_Coords639_g118054;
				half4 Coords238_g118060 = temp_output_37_0_g118060;
				float3 temp_output_279_0_g118060 = Model_PositionWO602_g118054;
				half3 WorldPosition238_g118060 = temp_output_279_0_g118060;
				half4 localSamplePlanar2D238_g118060 = SamplePlanar2D( Texture238_g118060 , Sampler238_g118060 , Coords238_g118060 , WorldPosition238_g118060 );
				TEXTURE2D(Texture246_g118060) = _OverlayNormalTex;
				SamplerState Sampler246_g118060 = SS29_g118088;
				half4 Coords246_g118060 = temp_output_37_0_g118060;
				half3 WorldPosition246_g118060 = temp_output_279_0_g118060;
				float3 temp_output_280_0_g118060 = Model_NormalWS712_g118054;
				half3 WorldNormal246_g118060 = temp_output_280_0_g118060;
				half4 localSamplePlanar3D246_g118060 = SamplePlanar3D( Texture246_g118060 , Sampler246_g118060 , Coords246_g118060 , WorldPosition246_g118060 , WorldNormal246_g118060 );
				TEXTURE2D(Texture234_g118060) = _OverlayNormalTex;
				SamplerState Sampler234_g118060 = SS29_g118088;
				float4 Coords234_g118060 = temp_output_37_0_g118060;
				float3 WorldPosition234_g118060 = temp_output_279_0_g118060;
				float4 localSampleStochastic2D234_g118060 = SampleStochastic2D( Texture234_g118060 , Sampler234_g118060 , Coords234_g118060 , WorldPosition234_g118060 );
				TEXTURE2D(Texture263_g118060) = _OverlayNormalTex;
				SamplerState Sampler263_g118060 = SS29_g118088;
				half4 Coords263_g118060 = temp_output_37_0_g118060;
				half3 WorldPosition263_g118060 = temp_output_279_0_g118060;
				half3 WorldNormal263_g118060 = temp_output_280_0_g118060;
				half4 localSampleStochastic3D263_g118060 = SampleStochastic3D( Texture263_g118060 , Sampler263_g118060 , Coords263_g118060 , WorldPosition263_g118060 , WorldNormal263_g118060 );
				#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
				float4 staticSwitch686_g118054 = localSamplePlanar2D238_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
				float4 staticSwitch686_g118054 = localSamplePlanar3D246_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
				float4 staticSwitch686_g118054 = localSampleStochastic2D234_g118060;
				#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
				float4 staticSwitch686_g118054 = localSampleStochastic3D263_g118060;
				#else
				float4 staticSwitch686_g118054 = localSamplePlanar2D238_g118060;
				#endif
				half4 Normal_Packed45_g118064 = staticSwitch686_g118054;
				float2 appendResult58_g118064 = (float2(( (Normal_Packed45_g118064).x * (Normal_Packed45_g118064).w ) , (Normal_Packed45_g118064).y));
				half2 Normal_Default50_g118064 = appendResult58_g118064;
				half2 Normal_ASTC41_g118064 = (Normal_Packed45_g118064).xy;
				#ifdef UNITY_ASTC_NORMALMAP_ENCODING
				float2 staticSwitch38_g118064 = Normal_ASTC41_g118064;
				#else
				float2 staticSwitch38_g118064 = Normal_Default50_g118064;
				#endif
				half2 Normal_NO_DTX544_g118064 = (Normal_Packed45_g118064).wy;
				#ifdef UNITY_NO_DXT5nm
				float2 staticSwitch37_g118064 = Normal_NO_DTX544_g118064;
				#else
				float2 staticSwitch37_g118064 = staticSwitch38_g118064;
				#endif
				half2 Normal_Planar45_g118063 = (staticSwitch37_g118064*2.0 + -1.0);
				float2 break71_g118063 = Normal_Planar45_g118063;
				float3 appendResult72_g118063 = (float3(break71_g118063.x , 0.0 , break71_g118063.y));
				half2 Overlay_Normal528_g118054 = (mul( ase_worldToTangent, appendResult72_g118063 )).xy;
				#ifdef TVE_OVERLAY_TEX
				float2 staticSwitch579_g118054 = Overlay_Normal528_g118054;
				#else
				float2 staticSwitch579_g118054 = Visual_NormalTS535_g118054;
				#endif
				float2 lerpResult551_g118054 = lerp( Visual_NormalTS535_g118054 , ( staticSwitch579_g118054 * _OverlayNormalValue ) , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float2 staticSwitch583_g118054 = lerpResult551_g118054;
				#else
				float2 staticSwitch583_g118054 = Visual_NormalTS535_g118054;
				#endif
				half2 Final_NormalTS499_g118054 = staticSwitch583_g118054;
				float2 In_NormalTS3_g118057 = Final_NormalTS499_g118054;
				float3 In_NormalWS3_g118057 = temp_output_739_21_g118054;
				half4 Visual_Masks536_g118054 = Out_Shader4_g118055;
				float4 appendResult585_g118054 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
				float4 lerpResult584_g118054 = lerp( Visual_Masks536_g118054 , appendResult585_g118054 , Overlay_Mask494_g118054);
				#ifdef TVE_OVERLAY
				float4 staticSwitch586_g118054 = lerpResult584_g118054;
				#else
				float4 staticSwitch586_g118054 = Visual_Masks536_g118054;
				#endif
				half4 Final_Masks482_g118054 = staticSwitch586_g118054;
				float4 In_Shader3_g118057 = Final_Masks482_g118054;
				float4 In_Emissive3_g118057 = Out_Emissive4_g118055;
				float temp_output_739_12_g118054 = Out_Grayscale4_g118055;
				float In_Grayscale3_g118057 = temp_output_739_12_g118054;
				float In_Luminosity3_g118057 = temp_output_739_15_g118054;
				float In_MultiMask3_g118057 = Out_MultiMask4_g118055;
				float In_AlphaClip3_g118057 = Out_AlphaClip4_g118055;
				float In_AlphaFade3_g118057 = Out_AlphaFade4_g118055;
				float3 In_Translucency3_g118057 = Out_Translucency4_g118055;
				half Visual_Transmission699_g118054 = Out_Transmission4_g118055;
				float lerpResult746_g118054 = lerp( Visual_Transmission699_g118054 , ( Visual_Transmission699_g118054 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g118054 * Overlay_MaskNoise427_g118054 * Overlay_MaskGlobal429_g118054 ));
				#ifdef TVE_OVERLAY
				float staticSwitch703_g118054 = lerpResult746_g118054;
				#else
				float staticSwitch703_g118054 = Visual_Transmission699_g118054;
				#endif
				half Final_Transmission702_g118054 = staticSwitch703_g118054;
				float In_Transmission3_g118057 = Final_Transmission702_g118054;
				float In_Thickness3_g118057 = Out_Thickness4_g118055;
				float In_Diffusion3_g118057 = Out_Diffusion4_g118055;
				Data3_g118057.Dummy = In_Dummy3_g118057;
				Data3_g118057.Albedo = In_Albedo3_g118057;
				Data3_g118057.AlbedoRaw = In_AlbedoRaw3_g118057;
				Data3_g118057.NormalTS = In_NormalTS3_g118057;
				Data3_g118057.NormalWS = In_NormalWS3_g118057;
				Data3_g118057.Shader = In_Shader3_g118057;
				Data3_g118057.Emissive= In_Emissive3_g118057;
				Data3_g118057.MultiMask = In_MultiMask3_g118057;
				Data3_g118057.Grayscale = In_Grayscale3_g118057;
				Data3_g118057.Luminosity = In_Luminosity3_g118057;
				Data3_g118057.AlphaClip = In_AlphaClip3_g118057;
				Data3_g118057.AlphaFade = In_AlphaFade3_g118057;
				Data3_g118057.Translucency = In_Translucency3_g118057;
				Data3_g118057.Transmission = In_Transmission3_g118057;
				Data3_g118057.Thickness = In_Thickness3_g118057;
				Data3_g118057.Diffusion = In_Diffusion3_g118057;
				TVEVisualData Data4_g118091 = Data3_g118057;
				float Out_Dummy4_g118091 = 0;
				float3 Out_Albedo4_g118091 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118091 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118091 = float2( 0,0 );
				float3 Out_NormalWS4_g118091 = float3( 0,0,0 );
				float4 Out_Shader4_g118091 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118091 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118091 = 0;
				float Out_Grayscale4_g118091 = 0;
				float Out_Luminosity4_g118091 = 0;
				float Out_AlphaClip4_g118091 = 0;
				float Out_AlphaFade4_g118091 = 0;
				float3 Out_Translucency4_g118091 = float3( 0,0,0 );
				float Out_Transmission4_g118091 = 0;
				float Out_Thickness4_g118091 = 0;
				float Out_Diffusion4_g118091 = 0;
				Out_Dummy4_g118091 = Data4_g118091.Dummy;
				Out_Albedo4_g118091 = Data4_g118091.Albedo;
				Out_AlbedoRaw4_g118091 = Data4_g118091.AlbedoRaw;
				Out_NormalTS4_g118091 = Data4_g118091.NormalTS;
				Out_NormalWS4_g118091 = Data4_g118091.NormalWS;
				Out_Shader4_g118091 = Data4_g118091.Shader;
				Out_Emissive4_g118091= Data4_g118091.Emissive;
				Out_MultiMask4_g118091 = Data4_g118091.MultiMask;
				Out_Grayscale4_g118091 = Data4_g118091.Grayscale;
				Out_Luminosity4_g118091= Data4_g118091.Luminosity;
				Out_AlphaClip4_g118091 = Data4_g118091.AlphaClip;
				Out_AlphaFade4_g118091 = Data4_g118091.AlphaFade;
				Out_Translucency4_g118091 = Data4_g118091.Translucency;
				Out_Transmission4_g118091 = Data4_g118091.Transmission;
				Out_Thickness4_g118091 = Data4_g118091.Thickness;
				Out_Diffusion4_g118091 = Data4_g118091.Diffusion;
				half3 Visual_Albedo127_g118090 = Out_Albedo4_g118091;
				TVEGlobalData Data15_g118096 = Data204_g117810;
				float Out_Dummy15_g118096 = 0;
				float4 Out_CoatParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118096 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118096 = float4( 0,0,0,0 );
				Out_Dummy15_g118096 = Data15_g118096.Dummy;
				Out_CoatParams15_g118096 = Data15_g118096.CoatParams;
				Out_PaintParams15_g118096 = Data15_g118096.PaintParams;
				Out_GlowParams15_g118096 = Data15_g118096.GlowParams;
				Out_AtmoParams15_g118096= Data15_g118096.AtmoParams;
				Out_FadeParams15_g118096= Data15_g118096.FadeParams;
				Out_FormParams15_g118096 = Data15_g118096.FormParams;
				Out_LandParams15_g118096 = Data15_g118096.LandParams;
				Out_WindParams15_g118096 = Data15_g118096.WindParams;
				Out_PushParams15_g118096 = Data15_g118096.PushParams;
				half4 Global_AtmoParams516_g118090 = Out_AtmoParams15_g118096;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch663_g118090 = ( (Global_AtmoParams516_g118090).y * TVE_IsEnabled );
				#else
				float staticSwitch663_g118090 = 1.0;
				#endif
				half Global_Wetness429_g118090 = staticSwitch663_g118090;
				half Wetness_Value1042_g118090 = ( _WetnessIntensityValue * Global_Wetness429_g118090 );
				half Wetness_VertMask1024_g118090 = 1.0;
				float temp_output_1043_0_g118090 = ( Wetness_Value1042_g118090 * Wetness_VertMask1024_g118090 );
				half Wetness_Mask866_g118090 = temp_output_1043_0_g118090;
				half Water_VertMask1094_g118090 = 1.0;
				half4 Visual_Masks536_g118090 = Out_Shader4_g118091;
				float lerpResult1013_g118090 = lerp( 1.0 , (Visual_Masks536_g118090).z , _WetnessWaterBaseValue);
				half Water_HeightMask782_g118090 = lerpResult1013_g118090;
				float clampResult17_g118105 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g118090 * Water_VertMask1094_g118090 ) - Water_HeightMask782_g118090 ) , 0.0001 , 0.9999 );
				float temp_output_7_0_g118106 = _WetnessWaterBlendRemap.x;
				float temp_output_10_0_g118106 = ( _WetnessWaterBlendRemap.y - temp_output_7_0_g118106 );
				TVEModelData Data15_g118104 = Data16_g117809;
				float Out_Dummy15_g118104 = 0;
				float3 Out_PositionWS15_g118104 = float3( 0,0,0 );
				float3 Out_PositionWO15_g118104 = float3( 0,0,0 );
				float3 Out_PivotWS15_g118104 = float3( 0,0,0 );
				float3 Out_PivotWO15_g118104 = float3( 0,0,0 );
				float3 Out_NormalWS15_g118104 = float3( 0,0,0 );
				float3 Out_ViewDirWS15_g118104 = float3( 0,0,0 );
				float4 Out_VertexData15_g118104 = float4( 0,0,0,0 );
				float4 Out_BoundsData15_g118104 = float4( 0,0,0,0 );
				Out_Dummy15_g118104 = Data15_g118104.Dummy;
				Out_PositionWS15_g118104 = Data15_g118104.PositionWS;
				Out_PositionWO15_g118104 = Data15_g118104.PositionWO;
				Out_PivotWS15_g118104 = Data15_g118104.PivotWS;
				Out_PivotWO15_g118104 = Data15_g118104.PivotWO;
				Out_NormalWS15_g118104 = Data15_g118104.NormalWS;
				Out_ViewDirWS15_g118104 = Data15_g118104.ViewDirWS;
				Out_VertexData15_g118104 = Data15_g118104.VertexData;
				Out_BoundsData15_g118104 = Data15_g118104.BoundsData;
				half3 Model_NormalWS798_g118090 = Out_NormalWS15_g118104;
				float temp_output_786_0_g118090 = saturate( (Model_NormalWS798_g118090).y );
				half Wetness_ProjMask790_g118090 = temp_output_786_0_g118090;
				half Water_Mask760_g118090 = ( saturate( ( ( clampResult17_g118105 - temp_output_7_0_g118106 ) / ( temp_output_10_0_g118106 + 0.0001 ) ) ) * Wetness_ProjMask790_g118090 );
				float3 lerpResult918_g118090 = lerp( Visual_Albedo127_g118090 , ( Visual_Albedo127_g118090 * (_WetnessWaterColor).rgb ) , Water_Mask760_g118090);
				#ifdef TVE_WETNESS_WATER
				float3 staticSwitch946_g118090 = lerpResult918_g118090;
				#else
				float3 staticSwitch946_g118090 = Visual_Albedo127_g118090;
				#endif
				float3 lerpResult768_g118090 = lerp( staticSwitch946_g118090 , ( staticSwitch946_g118090 * staticSwitch946_g118090 ) , _WetnessContrastValue);
				float3 lerpResult651_g118090 = lerp( Visual_Albedo127_g118090 , lerpResult768_g118090 , Wetness_Mask866_g118090);
				#ifdef TVE_WETNESS
				float3 staticSwitch577_g118090 = lerpResult651_g118090;
				#else
				float3 staticSwitch577_g118090 = Visual_Albedo127_g118090;
				#endif
				half3 Final_Albedo493_g118090 = staticSwitch577_g118090;
				float3 In_Albedo3_g118092 = Final_Albedo493_g118090;
				float3 In_AlbedoRaw3_g118092 = Out_AlbedoRaw4_g118091;
				half2 Visual_Normal535_g118090 = Out_NormalTS4_g118091;
				float lerpResult877_g118090 = lerp( 1.0 , 0.0 , ( Water_Mask760_g118090 * Water_Mask760_g118090 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch957_g118090 = ( Visual_Normal535_g118090 * lerpResult877_g118090 );
				#else
				float2 staticSwitch957_g118090 = Visual_Normal535_g118090;
				#endif
				float2 temp_cast_35 = (0.0).xx;
				TEXTURE2D(Texture238_g118102) = _WetnessDropsTexRT;
				SamplerState Sampler238_g118102 = sampler_Linear_Repeat_Aniso8;
				float4 appendResult924_g118090 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
				float4 temp_output_37_0_g118102 = appendResult924_g118090;
				half4 Coords238_g118102 = temp_output_37_0_g118102;
				half3 Model_PositionWO602_g118090 = Out_PositionWO15_g118104;
				float3 temp_output_279_0_g118102 = Model_PositionWO602_g118090;
				half3 WorldPosition238_g118102 = temp_output_279_0_g118102;
				half4 localSamplePlanar2D238_g118102 = SamplePlanar2D( Texture238_g118102 , Sampler238_g118102 , Coords238_g118102 , WorldPosition238_g118102 );
				float4 temp_output_1010_0_g118090 = localSamplePlanar2D238_g118102;
				half2 Rain_DropsNormal919_g118090 = (temp_output_1010_0_g118090).zw;
				float2 temp_output_903_0_g118090 = (Rain_DropsNormal919_g118090*2.0 + -1.0);
				half2 Rain_RingsNormal713_g118090 = (temp_output_1010_0_g118090).xy;
				float2 lerpResult904_g118090 = lerp( temp_output_903_0_g118090 , (Rain_RingsNormal713_g118090*2.0 + -1.0) , ( Water_Mask760_g118090 * Water_Mask760_g118090 ));
				#ifdef TVE_WETNESS_WATER
				float2 staticSwitch960_g118090 = lerpResult904_g118090;
				#else
				float2 staticSwitch960_g118090 = temp_output_903_0_g118090;
				#endif
				half2 Rain_Drops1002_g118090 = ( staticSwitch960_g118090 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
				half3 Model_PositionWS823_g118090 = Out_PositionWS15_g118104;
				#ifdef TVE_WETNESS_ELEMENT
				float staticSwitch949_g118090 = ( (Global_AtmoParams516_g118090).w * TVE_IsEnabled );
				#else
				float staticSwitch949_g118090 = 1.0;
				#endif
				half Global_Rain955_g118090 = staticSwitch949_g118090;
				half Rain_Value1067_g118090 = Global_Rain955_g118090;
				half Rain_VertMask1108_g118090 = 1.0;
				half Rain_Mask999_g118090 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g118090 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g118090 * Rain_VertMask1108_g118090 );
				half2 Normal_Planar45_g118101 = ( Rain_Drops1002_g118090 * Rain_Mask999_g118090 * Wetness_ProjMask790_g118090 );
				float2 break71_g118101 = Normal_Planar45_g118101;
				float3 appendResult72_g118101 = (float3(break71_g118101.x , 0.0 , break71_g118101.y));
				half2 Wetness_Normal526_g118090 = (mul( ase_worldToTangent, appendResult72_g118101 )).xy;
				#ifdef TVE_WETNESS_DROPS
				float2 staticSwitch583_g118090 = Wetness_Normal526_g118090;
				#else
				float2 staticSwitch583_g118090 = temp_cast_35;
				#endif
				#ifdef TVE_WETNESS
				float2 staticSwitch774_g118090 = ( staticSwitch957_g118090 + staticSwitch583_g118090 );
				#else
				float2 staticSwitch774_g118090 = Visual_Normal535_g118090;
				#endif
				half2 Final_Normal499_g118090 = staticSwitch774_g118090;
				float2 In_NormalTS3_g118092 = Final_Normal499_g118090;
				float3 In_NormalWS3_g118092 = Out_NormalWS4_g118091;
				float4 break658_g118090 = Visual_Masks536_g118090;
				float temp_output_935_0_g118090 = ( Wetness_Mask866_g118090 * _WetnessSmoothnessValue );
				float lerpResult941_g118090 = lerp( temp_output_935_0_g118090 , 2.0 , Water_Mask760_g118090);
				#ifdef TVE_WETNESS_WATER
				float staticSwitch959_g118090 = lerpResult941_g118090;
				#else
				float staticSwitch959_g118090 = temp_output_935_0_g118090;
				#endif
				float4 appendResult661_g118090 = (float4(break658_g118090.x , break658_g118090.y , break658_g118090.z , saturate( ( break658_g118090.w + staticSwitch959_g118090 ) )));
				#ifdef TVE_WETNESS
				float4 staticSwitch586_g118090 = appendResult661_g118090;
				#else
				float4 staticSwitch586_g118090 = Visual_Masks536_g118090;
				#endif
				half4 Final_Masks482_g118090 = staticSwitch586_g118090;
				float4 In_Shader3_g118092 = Final_Masks482_g118090;
				float4 In_Emissive3_g118092 = Out_Emissive4_g118091;
				float In_Grayscale3_g118092 = Out_Grayscale4_g118091;
				float In_Luminosity3_g118092 = Out_Luminosity4_g118091;
				float In_MultiMask3_g118092 = Out_MultiMask4_g118091;
				float In_AlphaClip3_g118092 = Out_AlphaClip4_g118091;
				float In_AlphaFade3_g118092 = Out_AlphaFade4_g118091;
				float3 In_Translucency3_g118092 = Out_Translucency4_g118091;
				float In_Transmission3_g118092 = Out_Transmission4_g118091;
				float In_Thickness3_g118092 = Out_Thickness4_g118091;
				float In_Diffusion3_g118092 = Out_Diffusion4_g118091;
				Data3_g118092.Dummy = In_Dummy3_g118092;
				Data3_g118092.Albedo = In_Albedo3_g118092;
				Data3_g118092.AlbedoRaw = In_AlbedoRaw3_g118092;
				Data3_g118092.NormalTS = In_NormalTS3_g118092;
				Data3_g118092.NormalWS = In_NormalWS3_g118092;
				Data3_g118092.Shader = In_Shader3_g118092;
				Data3_g118092.Emissive= In_Emissive3_g118092;
				Data3_g118092.MultiMask = In_MultiMask3_g118092;
				Data3_g118092.Grayscale = In_Grayscale3_g118092;
				Data3_g118092.Luminosity = In_Luminosity3_g118092;
				Data3_g118092.AlphaClip = In_AlphaClip3_g118092;
				Data3_g118092.AlphaFade = In_AlphaFade3_g118092;
				Data3_g118092.Translucency = In_Translucency3_g118092;
				Data3_g118092.Transmission = In_Transmission3_g118092;
				Data3_g118092.Thickness = In_Thickness3_g118092;
				Data3_g118092.Diffusion = In_Diffusion3_g118092;
				TVEVisualData Data4_g118128 = Data3_g118092;
				float Out_Dummy4_g118128 = 0;
				float3 Out_Albedo4_g118128 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118128 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118128 = float2( 0,0 );
				float3 Out_NormalWS4_g118128 = float3( 0,0,0 );
				float4 Out_Shader4_g118128 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118128 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118128 = 0;
				float Out_Grayscale4_g118128 = 0;
				float Out_Luminosity4_g118128 = 0;
				float Out_AlphaClip4_g118128 = 0;
				float Out_AlphaFade4_g118128 = 0;
				float3 Out_Translucency4_g118128 = float3( 0,0,0 );
				float Out_Transmission4_g118128 = 0;
				float Out_Thickness4_g118128 = 0;
				float Out_Diffusion4_g118128 = 0;
				Out_Dummy4_g118128 = Data4_g118128.Dummy;
				Out_Albedo4_g118128 = Data4_g118128.Albedo;
				Out_AlbedoRaw4_g118128 = Data4_g118128.AlbedoRaw;
				Out_NormalTS4_g118128 = Data4_g118128.NormalTS;
				Out_NormalWS4_g118128 = Data4_g118128.NormalWS;
				Out_Shader4_g118128 = Data4_g118128.Shader;
				Out_Emissive4_g118128= Data4_g118128.Emissive;
				Out_MultiMask4_g118128 = Data4_g118128.MultiMask;
				Out_Grayscale4_g118128 = Data4_g118128.Grayscale;
				Out_Luminosity4_g118128= Data4_g118128.Luminosity;
				Out_AlphaClip4_g118128 = Data4_g118128.AlphaClip;
				Out_AlphaFade4_g118128 = Data4_g118128.AlphaFade;
				Out_Translucency4_g118128 = Data4_g118128.Translucency;
				Out_Transmission4_g118128 = Data4_g118128.Transmission;
				Out_Thickness4_g118128 = Data4_g118128.Thickness;
				Out_Diffusion4_g118128 = Data4_g118128.Diffusion;
				float3 temp_output_297_0_g118119 = Out_Albedo4_g118128;
				float3 In_Albedo3_g118129 = temp_output_297_0_g118119;
				float3 temp_output_297_23_g118119 = Out_AlbedoRaw4_g118128;
				float3 In_AlbedoRaw3_g118129 = temp_output_297_23_g118119;
				float2 In_NormalTS3_g118129 = Out_NormalTS4_g118128;
				float3 In_NormalWS3_g118129 = Out_NormalWS4_g118128;
				float4 In_Shader3_g118129 = Out_Shader4_g118128;
				float4 temp_cast_36 = (0.0).xxxx;
				half4 Visual_Emissive255_g118119 = Out_Emissive4_g118128;
				half Emissive_MeshMask221_g118119 = 1.0;
				half Emissive_Mask103_g118119 = 1.0;
				float temp_output_279_0_g118119 = ( Emissive_MeshMask221_g118119 * Emissive_Mask103_g118119 );
				float3 appendResult293_g118119 = (float3(temp_output_279_0_g118119 , temp_output_279_0_g118119 , temp_output_279_0_g118119));
				half3 Local_EmissiveColor278_g118119 = appendResult293_g118119;
				float3 temp_cast_37 = (1.0).xxx;
				TVEGlobalData Data15_g118120 = Data204_g117810;
				float Out_Dummy15_g118120 = 0;
				float4 Out_CoatParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118120 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118120 = float4( 0,0,0,0 );
				Out_Dummy15_g118120 = Data15_g118120.Dummy;
				Out_CoatParams15_g118120 = Data15_g118120.CoatParams;
				Out_PaintParams15_g118120 = Data15_g118120.PaintParams;
				Out_GlowParams15_g118120 = Data15_g118120.GlowParams;
				Out_AtmoParams15_g118120= Data15_g118120.AtmoParams;
				Out_FadeParams15_g118120= Data15_g118120.FadeParams;
				Out_FormParams15_g118120 = Data15_g118120.FormParams;
				Out_LandParams15_g118120 = Data15_g118120.LandParams;
				Out_WindParams15_g118120 = Data15_g118120.WindParams;
				Out_PushParams15_g118120 = Data15_g118120.PushParams;
				half4 Global_GlowParams179_g118119 = Out_GlowParams15_g118120;
				float3 lerpResult299_g118119 = lerp( float3( 1,1,1 ) , (Global_GlowParams179_g118119).xyz , TVE_IsEnabled);
				#ifdef TVE_EMISSIVE_ELEMENT
				float3 staticSwitch228_g118119 = lerpResult299_g118119;
				#else
				float3 staticSwitch228_g118119 = temp_cast_37;
				#endif
				half3 Emissive_GlobalMask248_g118119 = staticSwitch228_g118119;
				half3 Visual_AlbedoRaw306_g118119 = temp_output_297_23_g118119;
				float3 lerpResult307_g118119 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g118119 , _EmissiveColorMode);
				half3 Local_EmissiveValue88_g118119 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g118119 * lerpResult307_g118119 );
				half3 Emissive_Blend260_g118119 = ( ( (Visual_Emissive255_g118119).xyz * Local_EmissiveColor278_g118119 ) * Local_EmissiveValue88_g118119 );
				float3 temp_output_3_0_g118133 = Emissive_Blend260_g118119;
				float temp_output_15_0_g118133 = _emissive_power_value;
				float3 hdEmission22_g118133 = ASEGetEmissionHDRColor(temp_output_3_0_g118133,temp_output_15_0_g118133,_EmissiveExposureValue,GetInverseCurrentExposureMultiplier());
				half Local_EmissiveMask294_g118119 = temp_output_279_0_g118119;
				float4 appendResult295_g118119 = (float4(hdEmission22_g118133 , Local_EmissiveMask294_g118119));
				#ifdef TVE_EMISSIVE
				float4 staticSwitch129_g118119 = appendResult295_g118119;
				#else
				float4 staticSwitch129_g118119 = temp_cast_36;
				#endif
				half4 Final_Emissive184_g118119 = staticSwitch129_g118119;
				float4 In_Emissive3_g118129 = Final_Emissive184_g118119;
				float In_Grayscale3_g118129 = Out_Grayscale4_g118128;
				float In_Luminosity3_g118129 = Out_Luminosity4_g118128;
				float temp_output_297_11_g118119 = Out_MultiMask4_g118128;
				float In_MultiMask3_g118129 = temp_output_297_11_g118119;
				float In_AlphaClip3_g118129 = Out_AlphaClip4_g118128;
				float In_AlphaFade3_g118129 = Out_AlphaFade4_g118128;
				float3 In_Translucency3_g118129 = Out_Translucency4_g118128;
				float In_Transmission3_g118129 = Out_Transmission4_g118128;
				float In_Thickness3_g118129 = Out_Thickness4_g118128;
				float In_Diffusion3_g118129 = Out_Diffusion4_g118128;
				Data3_g118129.Dummy = In_Dummy3_g118129;
				Data3_g118129.Albedo = In_Albedo3_g118129;
				Data3_g118129.AlbedoRaw = In_AlbedoRaw3_g118129;
				Data3_g118129.NormalTS = In_NormalTS3_g118129;
				Data3_g118129.NormalWS = In_NormalWS3_g118129;
				Data3_g118129.Shader = In_Shader3_g118129;
				Data3_g118129.Emissive= In_Emissive3_g118129;
				Data3_g118129.MultiMask = In_MultiMask3_g118129;
				Data3_g118129.Grayscale = In_Grayscale3_g118129;
				Data3_g118129.Luminosity = In_Luminosity3_g118129;
				Data3_g118129.AlphaClip = In_AlphaClip3_g118129;
				Data3_g118129.AlphaFade = In_AlphaFade3_g118129;
				Data3_g118129.Translucency = In_Translucency3_g118129;
				Data3_g118129.Transmission = In_Transmission3_g118129;
				Data3_g118129.Thickness = In_Thickness3_g118129;
				Data3_g118129.Diffusion = In_Diffusion3_g118129;
				TVEVisualData Data4_g118145 = Data3_g118129;
				float Out_Dummy4_g118145 = 0;
				float3 Out_Albedo4_g118145 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118145 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118145 = float2( 0,0 );
				float3 Out_NormalWS4_g118145 = float3( 0,0,0 );
				float4 Out_Shader4_g118145 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118145 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118145 = 0;
				float Out_Grayscale4_g118145 = 0;
				float Out_Luminosity4_g118145 = 0;
				float Out_AlphaClip4_g118145 = 0;
				float Out_AlphaFade4_g118145 = 0;
				float3 Out_Translucency4_g118145 = float3( 0,0,0 );
				float Out_Transmission4_g118145 = 0;
				float Out_Thickness4_g118145 = 0;
				float Out_Diffusion4_g118145 = 0;
				Out_Dummy4_g118145 = Data4_g118145.Dummy;
				Out_Albedo4_g118145 = Data4_g118145.Albedo;
				Out_AlbedoRaw4_g118145 = Data4_g118145.AlbedoRaw;
				Out_NormalTS4_g118145 = Data4_g118145.NormalTS;
				Out_NormalWS4_g118145 = Data4_g118145.NormalWS;
				Out_Shader4_g118145 = Data4_g118145.Shader;
				Out_Emissive4_g118145= Data4_g118145.Emissive;
				Out_MultiMask4_g118145 = Data4_g118145.MultiMask;
				Out_Grayscale4_g118145 = Data4_g118145.Grayscale;
				Out_Luminosity4_g118145= Data4_g118145.Luminosity;
				Out_AlphaClip4_g118145 = Data4_g118145.AlphaClip;
				Out_AlphaFade4_g118145 = Data4_g118145.AlphaFade;
				Out_Translucency4_g118145 = Data4_g118145.Translucency;
				Out_Transmission4_g118145 = Data4_g118145.Transmission;
				Out_Thickness4_g118145 = Data4_g118145.Thickness;
				Out_Diffusion4_g118145 = Data4_g118145.Diffusion;
				float3 In_Albedo3_g118135 = Out_Albedo4_g118145;
				float3 In_AlbedoRaw3_g118135 = Out_AlbedoRaw4_g118145;
				float2 In_NormalTS3_g118135 = Out_NormalTS4_g118145;
				float3 In_NormalWS3_g118135 = Out_NormalWS4_g118145;
				float4 In_Shader3_g118135 = Out_Shader4_g118145;
				float4 In_Emissive3_g118135 = Out_Emissive4_g118145;
				float In_Grayscale3_g118135 = Out_Grayscale4_g118145;
				float In_Luminosity3_g118135 = Out_Luminosity4_g118145;
				float temp_output_836_11_g118134 = Out_MultiMask4_g118145;
				float In_MultiMask3_g118135 = temp_output_836_11_g118134;
				half Visual_AlphaClip667_g118134 = Out_AlphaClip4_g118145;
				half Input_True57_g118142 = Visual_AlphaClip667_g118134;
				half True36_g118142 = Input_True57_g118142;
				TVEGlobalData Data15_g118144 = Data204_g117810;
				float Out_Dummy15_g118144 = 0;
				float4 Out_CoatParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_PaintParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_GlowParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_AtmoParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_FadeParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_FormParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_LandParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_WindParams15_g118144 = float4( 0,0,0,0 );
				float4 Out_PushParams15_g118144 = float4( 0,0,0,0 );
				Out_Dummy15_g118144 = Data15_g118144.Dummy;
				Out_CoatParams15_g118144 = Data15_g118144.CoatParams;
				Out_PaintParams15_g118144 = Data15_g118144.PaintParams;
				Out_GlowParams15_g118144 = Data15_g118144.GlowParams;
				Out_AtmoParams15_g118144= Data15_g118144.AtmoParams;
				Out_FadeParams15_g118144= Data15_g118144.FadeParams;
				Out_FormParams15_g118144 = Data15_g118144.FormParams;
				Out_LandParams15_g118144 = Data15_g118144.LandParams;
				Out_WindParams15_g118144 = Data15_g118144.WindParams;
				Out_PushParams15_g118144 = Data15_g118144.PushParams;
				half4 Global_FadeParams516_g118134 = Out_FadeParams15_g118144;
				#ifdef TVE_CUTOUT_ELEMENT
				float staticSwitch663_g118134 = saturate( (Global_FadeParams516_g118134).w );
				#else
				float staticSwitch663_g118134 = 1.0;
				#endif
				half Local_GlobalMask429_g118134 = staticSwitch663_g118134;
				half Local_AlphaMask814_g118134 = 1.0;
				half Local_NoiseMask678_g118134 = 1.0;
				half Local_VertMask766_g118134 = 1.0;
				half Local_MultiMask685_g118134 = 1.0;
				float lerpResult728_g118134 = lerp( Visual_AlphaClip667_g118134 , min( Visual_AlphaClip667_g118134 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g118134 ) - ( Local_AlphaMask814_g118134 * Local_NoiseMask678_g118134 * Local_VertMask766_g118134 ) ) ) ) , Local_MultiMask685_g118134);
				half Local_AlphaClip784_g118134 = lerpResult728_g118134;
				half Input_False58_g118142 = Local_AlphaClip784_g118134;
				half False36_g118142 = Input_False58_g118142;
				half localShadowPassCheck36_g118142 = ShadowPassCheck36_g118142( True36_g118142 , False36_g118142 );
				#ifdef TVE_CUTOUT_SHADOW
				float staticSwitch791_g118134 = Local_AlphaClip784_g118134;
				#else
				float staticSwitch791_g118134 = localShadowPassCheck36_g118142;
				#endif
				float temp_output_6_0_g118143 = staticSwitch791_g118134;
				#ifdef TVE_REGISTER
				float staticSwitch14_g118143 = ( temp_output_6_0_g118143 + ( _CutoutShadowMode * 0.0 ) );
				#else
				float staticSwitch14_g118143 = temp_output_6_0_g118143;
				#endif
				float temp_output_798_0_g118134 = staticSwitch14_g118143;
				#ifdef TVE_CUTOUT
				float staticSwitch577_g118134 = temp_output_798_0_g118134;
				#else
				float staticSwitch577_g118134 = Visual_AlphaClip667_g118134;
				#endif
				half Final_AlphaClip795_g118134 = staticSwitch577_g118134;
				float In_AlphaClip3_g118135 = Final_AlphaClip795_g118134;
				float In_AlphaFade3_g118135 = Out_AlphaFade4_g118145;
				float3 In_Translucency3_g118135 = Out_Translucency4_g118145;
				float In_Transmission3_g118135 = Out_Transmission4_g118145;
				float In_Thickness3_g118135 = Out_Thickness4_g118145;
				float In_Diffusion3_g118135 = Out_Diffusion4_g118145;
				Data3_g118135.Dummy = In_Dummy3_g118135;
				Data3_g118135.Albedo = In_Albedo3_g118135;
				Data3_g118135.AlbedoRaw = In_AlbedoRaw3_g118135;
				Data3_g118135.NormalTS = In_NormalTS3_g118135;
				Data3_g118135.NormalWS = In_NormalWS3_g118135;
				Data3_g118135.Shader = In_Shader3_g118135;
				Data3_g118135.Emissive= In_Emissive3_g118135;
				Data3_g118135.MultiMask = In_MultiMask3_g118135;
				Data3_g118135.Grayscale = In_Grayscale3_g118135;
				Data3_g118135.Luminosity = In_Luminosity3_g118135;
				Data3_g118135.AlphaClip = In_AlphaClip3_g118135;
				Data3_g118135.AlphaFade = In_AlphaFade3_g118135;
				Data3_g118135.Translucency = In_Translucency3_g118135;
				Data3_g118135.Transmission = In_Transmission3_g118135;
				Data3_g118135.Thickness = In_Thickness3_g118135;
				Data3_g118135.Diffusion = In_Diffusion3_g118135;
				TVEVisualData Data4_g118158 = Data3_g118135;
				float Out_Dummy4_g118158 = 0;
				float3 Out_Albedo4_g118158 = float3( 0,0,0 );
				float3 Out_AlbedoRaw4_g118158 = float3( 0,0,0 );
				float2 Out_NormalTS4_g118158 = float2( 0,0 );
				float3 Out_NormalWS4_g118158 = float3( 0,0,0 );
				float4 Out_Shader4_g118158 = float4( 0,0,0,0 );
				float4 Out_Emissive4_g118158 = float4( 0,0,0,0 );
				float Out_MultiMask4_g118158 = 0;
				float Out_Grayscale4_g118158 = 0;
				float Out_Luminosity4_g118158 = 0;
				float Out_AlphaClip4_g118158 = 0;
				float Out_AlphaFade4_g118158 = 0;
				float3 Out_Translucency4_g118158 = float3( 0,0,0 );
				float Out_Transmission4_g118158 = 0;
				float Out_Thickness4_g118158 = 0;
				float Out_Diffusion4_g118158 = 0;
				Out_Dummy4_g118158 = Data4_g118158.Dummy;
				Out_Albedo4_g118158 = Data4_g118158.Albedo;
				Out_AlbedoRaw4_g118158 = Data4_g118158.AlbedoRaw;
				Out_NormalTS4_g118158 = Data4_g118158.NormalTS;
				Out_NormalWS4_g118158 = Data4_g118158.NormalWS;
				Out_Shader4_g118158 = Data4_g118158.Shader;
				Out_Emissive4_g118158= Data4_g118158.Emissive;
				Out_MultiMask4_g118158 = Data4_g118158.MultiMask;
				Out_Grayscale4_g118158 = Data4_g118158.Grayscale;
				Out_Luminosity4_g118158= Data4_g118158.Luminosity;
				Out_AlphaClip4_g118158 = Data4_g118158.AlphaClip;
				Out_AlphaFade4_g118158 = Data4_g118158.AlphaFade;
				Out_Translucency4_g118158 = Data4_g118158.Translucency;
				Out_Transmission4_g118158 = Data4_g118158.Transmission;
				Out_Thickness4_g118158 = Data4_g118158.Thickness;
				Out_Diffusion4_g118158 = Data4_g118158.Diffusion;
				float temp_output_3_0_g118160 = Out_AlphaClip4_g118158;
				float Alpha19_g118160 = temp_output_3_0_g118160;
				float temp_output_15_0_g118160 = 0.5;
				float Treshold19_g118160 = temp_output_15_0_g118160;
				#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_DITHER)
				#if defined ( TVE_PIPELINE_HD)
				#if !defined(SHADERPASS_FORWARD_BYPASS_ALPHA_TEST) && !defined(SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST)
				clip(Alpha19_g118160 - Treshold19_g118160);
				#endif
				#else
				clip(Alpha19_g118160 - Treshold19_g118160);
				#endif
				#endif
				
				surfaceDescription.Alpha = Alpha19_g118160;

				#ifdef _ALPHATEST_ON
				surfaceDescription.AlphaClipThreshold =  _AlphaCutoff;
				#endif

				outColor = _SelectionID;
			}

            ENDHLSL
		}

        Pass
        {

            Name "FullScreenDebug"
            Tags 
			{ 
				"LightMode" = "FullScreenDebug" 
            }

            Cull [_CullMode]
			ZTest LEqual
			ZWrite Off

            HLSLPROGRAM
            /*ase_pragma_before*/
            #pragma multi_compile _ DOTS_INSTANCING_ON

			#pragma vertex Vert
			#pragma fragment Frag

            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
            #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC _TRANSPARENT_REFRACTIVE_SORT
            #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT

			#define SHADERPASS SHADERPASS_FULL_SCREEN_DEBUG

			#define ATTRIBUTES_NEED_NORMAL
			#define ATTRIBUTES_NEED_TANGENT

			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/DebugMipmapStreamingMacros.hlsl"
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl"

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"

			#ifndef SHADER_UNLIT
			#if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
			#define VARYINGS_NEED_CULLFACE
			#endif
			#endif

            #if _MATERIAL_FEATURE_COLORED_TRANSMISSION
            #undef _MATERIAL_FEATURE_CLEAR_COAT
            #endif

		    #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
		    #define OUTPUT_SPLIT_LIGHTING
		    #endif

            #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
            #endif

			#if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
			#if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
				#define WRITE_NORMAL_BUFFER
			#endif
			#endif

            #if SHADERPASS == SHADERPASS_MOTION_VECTORS && defined(WRITE_DECAL_BUFFER_AND_RENDERING_LAYER)
                #define WRITE_DECAL_BUFFER
            #endif

			#ifndef DEBUG_DISPLAY
				#if !defined(_SURFACE_TYPE_TRANSPARENT)
					#if SHADERPASS == SHADERPASS_FORWARD
					#define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
					#elif SHADERPASS == SHADERPASS_GBUFFER
					#define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
					#endif
				#endif
			#endif

            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            #if (defined(_TRANSPARENT_WRITES_MOTION_VEC) || defined(_TRANSPARENT_REFRACTIVE_SORT)) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif

            #ifdef DEBUG_DISPLAY
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
            #endif

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
			#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"

            struct AttributesMesh
			{
				float3 positionOS : POSITION;
				float3 normalOS : NORMAL;
				float4 tangentOS : TANGENT;
				#if UNITY_ANY_INSTANCING_ENABLED || defined(ATTRIBUTES_NEED_INSTANCEID)
					uint instanceID : INSTANCEID_SEMANTIC;
				#endif
			};

			struct VaryingsMeshToPS
			{
				SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
				#if UNITY_ANY_INSTANCING_ENABLED || defined(ATTRIBUTES_NEED_INSTANCEID)
					uint instanceID : CUSTOM_INSTANCE_ID;
				#endif
			};

			struct VertexDescriptionInputs
			{
				 float3 ObjectSpaceNormal;
				 float3 ObjectSpaceTangent;
				 float3 ObjectSpacePosition;
			};

			struct SurfaceDescriptionInputs
			{
				 float3 TangentSpaceNormal;
			};

			struct PackedVaryingsMeshToPS
			{
				SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
				#if UNITY_ANY_INSTANCING_ENABLED || defined(ATTRIBUTES_NEED_INSTANCEID)
					uint instanceID : CUSTOM_INSTANCE_ID;
				#endif
			};

            PackedVaryingsMeshToPS PackVaryingsMeshToPS (VaryingsMeshToPS input)
			{
				PackedVaryingsMeshToPS output;
				ZERO_INITIALIZE(PackedVaryingsMeshToPS, output);
				output.positionCS = input.positionCS;
				#if UNITY_ANY_INSTANCING_ENABLED || defined(ATTRIBUTES_NEED_INSTANCEID)
				output.instanceID = input.instanceID;
				#endif
				return output;
			}

			VaryingsMeshToPS UnpackVaryingsMeshToPS (PackedVaryingsMeshToPS input)
			{
				VaryingsMeshToPS output;
				output.positionCS = input.positionCS;
				#if UNITY_ANY_INSTANCING_ENABLED || defined(ATTRIBUTES_NEED_INSTANCEID)
				output.instanceID = input.instanceID;
				#endif
				return output;
			}

            struct VertexDescription
			{
				float3 Position;
				float3 Normal;
				float3 Tangent;
			};

			VertexDescription VertexDescriptionFunction(VertexDescriptionInputs IN)
			{
				VertexDescription description = (VertexDescription)0;
				description.Position = IN.ObjectSpacePosition;
				description.Normal = IN.ObjectSpaceNormal;
				description.Tangent = IN.ObjectSpaceTangent;
				return description;
			}

            struct SurfaceDescription
			{
				float3 BaseColor;
				float3 Emission;
				float Alpha;
				float3 BentNormal;
				float Smoothness;
				float Occlusion;
				float3 NormalTS;
				float Metallic;
			};

			SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
			{
				SurfaceDescription surface = (SurfaceDescription)0;
				surface.BaseColor = IsGammaSpace() ? float3(0.5, 0.5, 0.5) : SRGBToLinear(float3(0.5, 0.5, 0.5));
				surface.Emission = float3(0, 0, 0);
				surface.Alpha = 1;
				surface.BentNormal = IN.TangentSpaceNormal;
				surface.Smoothness = 0.5;
				surface.Occlusion = 1;
				surface.NormalTS = IN.TangentSpaceNormal;
				surface.Metallic = 0;
				return surface;
			}

			VertexDescriptionInputs AttributesMeshToVertexDescriptionInputs(AttributesMesh input)
			{
				VertexDescriptionInputs output;
				ZERO_INITIALIZE(VertexDescriptionInputs, output);

				output.ObjectSpaceNormal =                          input.normalOS;
				output.ObjectSpaceTangent =                         input.tangentOS.xyz;
				output.ObjectSpacePosition =                        input.positionOS;
				#if UNITY_ANY_INSTANCING_ENABLED
                #else
                #endif

				return output;
			}

			AttributesMesh ApplyMeshModification(AttributesMesh input, float3 timeParameters  )
			{
				VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);

				VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);

				input.positionOS = vertexDescription.Position;
				input.normalOS = vertexDescription.Normal;
				input.tangentOS.xyz = vertexDescription.Tangent;
				return input;
			}

			FragInputs BuildFragInputs(VaryingsMeshToPS input)
			{
				FragInputs output;
				ZERO_INITIALIZE(FragInputs, output);

				output.tangentToWorld = k_identity3x3;
				output.positionSS = input.positionCS; // input.positionCS is SV_Position
				#if UNITY_ANY_INSTANCING_ENABLED
                #else
                #endif

				return output;
			}

			FragInputs UnpackVaryingsMeshToFragInputs(PackedVaryingsMeshToPS input)
			{
				UNITY_SETUP_INSTANCE_ID(input);
				VaryingsMeshToPS unpacked = UnpackVaryingsMeshToPS(input);
				return BuildFragInputs(unpacked);
			}

			#define DEBUG_DISPLAY
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/FullScreenDebug.hlsl"

			#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/VertMesh.hlsl"

			PackedVaryingsType Vert(AttributesMesh inputMesh)
			{
				VaryingsType varyingsType;
				varyingsType.vmesh = VertMesh(inputMesh);
				return PackVaryingsType(varyingsType);
			}

			#if !defined(_DEPTHOFFSET_ON)
			[earlydepthstencil]
			#endif
			void Frag(PackedVaryingsToPS packedInput)
			{
				UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(packedInput);
				FragInputs input = UnpackVaryingsToFragInputs(packedInput);

				PositionInputs posInput = GetPositionInput(input.positionSS.xy, _ScreenSize.zw, input.positionSS.z, input.positionSS.w, input.positionRWS.xyz);

			#ifdef PLATFORM_SUPPORTS_PRIMITIVE_ID_IN_PIXEL_SHADER
				if (_DebugFullScreenMode == FULLSCREENDEBUGMODE_QUAD_OVERDRAW)
				{
					IncrementQuadOverdrawCounter(posInput.positionSS.xy, input.primitiveID);
				}
			#endif
			}
            ENDHLSL
        }
		
	}
	
	CustomEditor "TVEShaderGUICore"
	
	Fallback Off
}
/*ASEBEGIN
Version=19603
Node;AmplifyShaderEditor.FunctionNode;1087;-4352,-384;Inherit;False;Block Model;471;;117794;7ad7765e793a6714babedee0033c36e9;14,289,0,240,0,290,0,291,0,181,0,183,0,185,0,188,0,190,0,184,0,192,0,189,0,300,0,193,0;10;102;FLOAT3;0,0,0;False;163;FLOAT3;0,0,0;False;186;FLOAT3;0,0,0;False;187;FLOAT3;0,0,0;False;166;FLOAT3;0,0,0;False;164;FLOAT3;0,0,0;False;301;FLOAT3;0,0,0;False;167;FLOAT4;0,0,0,0;False;172;FLOAT4;0,0,0,0;False;175;FLOAT4;0,0,0,0;False;2;OBJECT;128;OBJECT;314
Node;AmplifyShaderEditor.RegisterLocalVarNode;1088;-4032,-320;Half;False;Model Frag;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;1089;-3584,-384;Inherit;False;1088;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1090;-3328,-384;Inherit;False;Block Global;36;;117810;212e17d4006dc88449d56ce0340cb5ff;20,315,0,311,1,388,1,317,1,321,1,319,0,376,1,323,0,337,0,282,0,371,0,349,0,385,0,287,0,285,0,276,0,283,0,308,0,348,1,289,1;1;206;OBJECT;0,0,0,0;False;1;OBJECT;151
Node;AmplifyShaderEditor.RegisterLocalVarNode;1091;-3008,-384;Half;False;Global Data;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;1092;-1536,-256;Inherit;False;1091;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1093;-1536,-384;Inherit;False;Block Terrain Layers;85;;117893;ef8fd3ec282e419478dcf625231d8508;0;0;1;OBJECT;9091
Node;AmplifyShaderEditor.GetLocalVarNode;1094;-1152,-256;Inherit;False;1091;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1095;-1152,-384;Inherit;False;Block Tinting;272;;118007;9f39e156ea8d89e4997ea2a1e194137e;7,352,0,400,0,334,1,336,1,339,0,355,0,344,0;4;198;OBJECT;0,0,0,0;False;223;OBJECT;0,0,0,0;False;207;OBJECT;0,0,0,0;False;346;FLOAT;1;False;1;OBJECT;204
Node;AmplifyShaderEditor.GetLocalVarNode;1096;-768,-192;Inherit;False;1091;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1097;-768,-384;Inherit;False;Block Dryness;301;;118031;f05795de23f951c45bb73c8b4321e4b7;7,398,0,482,0,400,1,403,1,405,0,442,0,410,0;4;279;OBJECT;0,0,0,0;False;297;OBJECT;0,0,0,0;False;281;OBJECT;0,0,0,0;False;409;FLOAT;1;False;1;OBJECT;346
Node;AmplifyShaderEditor.GetLocalVarNode;1098;-768,-256;Inherit;False;1088;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;1099;-384,-192;Inherit;False;1091;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;1100;-384,-256;Inherit;False;1088;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1101;-384,-384;Inherit;False;Block Overlay;333;;118054;8ae9c8285a7817844a51243251284d21;9,821,1,819,1,813,0,910,0,826,1,823,1,828,0,844,0,447,0;4;572;OBJECT;0,0,0,0;False;596;OBJECT;0,0,0,0;False;600;OBJECT;0,0,0,0;False;445;FLOAT;1;False;1;OBJECT;566
Node;AmplifyShaderEditor.GetLocalVarNode;1102;0,-256;Inherit;False;1091;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1103;0,-384;Inherit;False;Block Wetness;379;;118090;52c5a1f52507fc44e926833b126e7855;8,850,0,1075,0,857,1,945,1,930,1,1092,0,851,1,1107,0;3;572;OBJECT;0,0,0,0;False;596;OBJECT;0,0,0,0;False;600;OBJECT;0,0,0,0;False;1;OBJECT;566
Node;AmplifyShaderEditor.RegisterLocalVarNode;1104;-4032,-384;Half;False;Model Vert;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;1105;384,-256;Inherit;False;1091;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1106;384,-384;Inherit;False;Block Emissive;438;;118119;64497f287b9096b43b688b52b4a0bf20;5,282,0,273,1,275,0,264,0,267,0;3;146;OBJECT;0,0,0,0;False;148;OBJECT;0,0,0,0;False;178;OBJECT;0,0,0,0;False;1;OBJECT;183
Node;AmplifyShaderEditor.GetLocalVarNode;1107;-2560,-256;Inherit;False;1091;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;1108;-2560,-384;Inherit;False;1104;Model Vert;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode;1109;768,-384;Inherit;False;Block Cutout;420;;118134;866b4a5fe67e7f34085520e1bb5be2b7;5,775,0,777,0,815,0,779,0,817,0;3;572;OBJECT;0,0,0,0;False;596;OBJECT;0,0,0,0;False;600;OBJECT;0,0,0,0;False;1;OBJECT;566
Node;AmplifyShaderEditor.FunctionNode;1110;-2304,-384;Inherit;False;Block Terrain Surface;462;;118147;96b819750ac2c854b90e8e52674e7c45;0;2;146;OBJECT;0,0,0,0;False;212;OBJECT;0,0,0,0;False;1;OBJECT;128
Node;AmplifyShaderEditor.RegisterLocalVarNode;1111;-1984,-384;Half;False;Model Data;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.RegisterLocalVarNode;1112;1088,-384;Half;False;Visual Data;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;837;1792,-384;Inherit;False;1112;Visual Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode;810;1792,-320;Inherit;False;1111;Model Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.RangedFloatNode;1026;1792,-640;Half;False;Property;_IsTerrainShader;_IsTerrainShader;481;1;[HideInInspector];Create;True;0;2;Opaque;0;Transparent;1;0;True;0;False;1;1;0;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.FunctionNode;785;2560,-640;Inherit;False;Base Compile;-1;;118153;e67c8238031dbf04ab79a5d4d63d1b4f;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.RangedFloatNode;1027;2048,-640;Half;False;Property;_IsStandardShader;_IsStandardShader;482;1;[HideInInspector];Create;True;0;2;Opaque;0;Transparent;1;0;True;0;False;1;1;0;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.FunctionNode;1060;2048,-384;Inherit;False;Block Terrain Render;0;;118154;494080da1e9aade47a313fe971224c33;0;2;17;OBJECT;;False;19;OBJECT;;False;15;FLOAT3;21;FLOAT3;22;FLOAT3;34;FLOAT3;77;FLOAT;26;FLOAT;27;FLOAT;109;FLOAT;108;FLOAT;72;FLOAT;28;FLOAT;71;FLOAT3;37;FLOAT3;30;FLOAT3;32;FLOAT4;33
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;1049;2720,-384;Float;False;False;-1;2;Rendering.HighDefinition.LightingShaderGraphGUI;0;1;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;META;0;1;META;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;3;RenderPipeline=HDRenderPipeline;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;True;5;True;7;d3d11;metal;vulkan;xboxone;xboxseries;playstation;switch;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;2;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;1;LightMode=Meta;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;1050;2720,-384;Float;False;False;-1;2;Rendering.HighDefinition.LightingShaderGraphGUI;0;1;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;ShadowCaster;0;2;ShadowCaster;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;3;RenderPipeline=HDRenderPipeline;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;True;5;True;7;d3d11;metal;vulkan;xboxone;xboxseries;playstation;switch;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;0;True;_CullMode;False;True;False;False;False;False;0;False;;False;False;False;False;False;False;False;False;False;True;1;False;;True;3;False;;False;True;1;LightMode=ShadowCaster;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;1051;2720,-384;Float;False;False;-1;2;Rendering.HighDefinition.LightingShaderGraphGUI;0;1;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;SceneSelectionPass;0;3;SceneSelectionPass;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;3;RenderPipeline=HDRenderPipeline;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;True;5;True;7;d3d11;metal;vulkan;xboxone;xboxseries;playstation;switch;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;2;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;1;LightMode=SceneSelectionPass;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;1052;2720,-384;Float;False;False;-1;2;Rendering.HighDefinition.LightingShaderGraphGUI;0;1;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;DepthOnly;0;4;DepthOnly;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;3;RenderPipeline=HDRenderPipeline;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;True;5;True;7;d3d11;metal;vulkan;xboxone;xboxseries;playstation;switch;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;0;True;_CullMode;False;False;False;False;False;False;False;False;False;True;True;0;True;_StencilRefDepth;255;False;;255;True;_StencilWriteMaskDepth;7;False;;3;False;;0;False;;0;False;;7;False;;3;False;;0;False;;0;False;;False;True;1;False;;False;False;True;1;LightMode=DepthOnly;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;1053;2720,-384;Float;False;False;-1;2;Rendering.HighDefinition.LightingShaderGraphGUI;0;1;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;MotionVectors;0;5;MotionVectors;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;3;RenderPipeline=HDRenderPipeline;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;True;5;True;7;d3d11;metal;vulkan;xboxone;xboxseries;playstation;switch;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;0;True;_CullMode;False;False;False;False;False;False;False;False;False;True;True;0;True;_StencilRefMV;255;False;;255;True;_StencilWriteMaskMV;7;False;;3;False;;0;False;;0;False;;7;False;;3;False;;0;False;;0;False;;False;True;1;False;;False;False;True;1;LightMode=MotionVectors;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;1054;2720,-384;Float;False;False;-1;2;Rendering.HighDefinition.LightingShaderGraphGUI;0;1;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;TransparentBackface;0;6;TransparentBackface;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;3;RenderPipeline=HDRenderPipeline;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;True;5;True;7;d3d11;metal;vulkan;xboxone;xboxseries;playstation;switch;0;False;False;False;False;True;2;5;False;;10;False;;0;1;False;;0;False;;False;False;True;3;1;False;;10;False;;0;1;False;;0;False;;False;False;True;3;1;False;;10;False;;0;1;False;;0;False;;False;False;False;True;1;False;;False;False;False;True;True;True;True;True;0;True;_ColorMaskTransparentVelOne;False;True;True;True;True;True;0;True;_ColorMaskTransparentVelTwo;False;False;False;False;False;True;0;True;_ZWrite;True;0;True;_ZTestTransparent;False;True;1;LightMode=TransparentBackface;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;1055;2720,-384;Float;False;False;-1;2;Rendering.HighDefinition.LightingShaderGraphGUI;0;1;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;TransparentDepthPrepass;0;7;TransparentDepthPrepass;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;3;RenderPipeline=HDRenderPipeline;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;True;5;True;7;d3d11;metal;vulkan;xboxone;xboxseries;playstation;switch;0;False;True;1;1;False;;0;False;;0;1;False;;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;True;0;True;_CullMode;False;False;False;False;False;False;False;False;False;True;True;0;True;_StencilRefDepth;255;False;;255;True;_StencilWriteMaskDepth;7;False;;3;False;;0;False;;0;False;;7;False;;3;False;;0;False;;0;False;;False;True;1;False;;False;False;True;1;LightMode=TransparentDepthPrepass;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;1056;2720,-384;Float;False;False;-1;2;Rendering.HighDefinition.LightingShaderGraphGUI;0;1;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;TransparentDepthPostpass;0;8;TransparentDepthPostpass;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;3;RenderPipeline=HDRenderPipeline;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;True;5;True;7;d3d11;metal;vulkan;xboxone;xboxseries;playstation;switch;0;False;True;1;1;False;;0;False;;0;1;False;;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;True;0;True;_CullMode;False;True;False;False;False;False;0;False;;False;False;False;False;False;False;False;False;False;True;1;False;;False;False;True;1;LightMode=TransparentDepthPostpass;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;1057;2720,-384;Float;False;False;-1;2;Rendering.HighDefinition.LightingShaderGraphGUI;0;1;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;Forward;0;9;Forward;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;3;RenderPipeline=HDRenderPipeline;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;True;5;True;7;d3d11;metal;vulkan;xboxone;xboxseries;playstation;switch;0;False;False;False;False;True;2;5;False;;10;False;;0;1;False;;0;False;;False;False;True;1;1;False;;0;True;_DstBlend2;0;1;False;;0;False;;False;False;True;1;1;False;;0;True;_DstBlend2;0;1;False;;0;False;;False;False;False;True;0;True;_CullModeForward;False;False;False;True;True;True;True;True;0;True;_ColorMaskTransparentVelOne;False;True;True;True;True;True;0;True;_ColorMaskTransparentVelTwo;False;False;False;True;True;0;True;_StencilRef;255;False;;255;True;_StencilWriteMask;7;False;;3;False;;0;False;;0;False;;7;False;;3;False;;0;False;;0;False;;False;True;0;True;_ZWrite;True;0;True;_ZTestDepthEqualForOpaque;False;True;1;LightMode=Forward;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;1058;2720,-384;Float;False;False;-1;2;Rendering.HighDefinition.LightingShaderGraphGUI;0;1;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;ScenePickingPass;0;10;ScenePickingPass;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;3;RenderPipeline=HDRenderPipeline;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;True;5;True;7;d3d11;metal;vulkan;xboxone;xboxseries;playstation;switch;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;0;True;_CullMode;False;False;False;False;False;False;False;False;False;False;False;True;2;False;;True;3;False;;False;True;1;LightMode=Picking;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode;1048;2560,-384;Float;False;True;-1;2;TVEShaderGUICore;0;16;BOXOPHOBIC/The Visual Engine/Landscape/Terrain Standard Lit;28cd5599e02859647ae1798e4fcaef6c;True;GBuffer;0;0;GBuffer;34;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;4;RenderPipeline=HDRenderPipeline;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;TerrainCompatible=True;True;5;True;9;d3d11;metal;vulkan;xboxone;xboxseries;playstation;ps4;ps5;switch;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;0;True;_CullMode;False;False;False;False;False;False;False;False;False;True;True;0;True;_StencilRefGBuffer;255;False;;255;True;_StencilWriteMaskGBuffer;7;False;;3;False;;0;False;;0;False;;7;False;;3;False;;0;False;;0;False;;False;False;True;0;True;_ZTestGBuffer;False;True;1;LightMode=GBuffer;False;False;0;;0;0;Standard;38;Surface Type;0;0;  Rendering Pass;1;0;  Refraction Model;0;0;    Blending Mode;0;0;    Blend Preserves Specular;1;0;  Back Then Front Rendering;0;0;  Transparent Depth Prepass;0;0;  Transparent Depth Postpass;0;0;  ZWrite;0;0;  Z Test;4;0;Double-Sided;0;0;Alpha Clipping;0;0;  Use Shadow Threshold;0;0;Material Type,InvertActionOnDeselection;4;638504318655869354;  Energy Conserving Specular;1;0;  Transmission,InvertActionOnDeselection;0;0;Receive Decals;1;0;Receive SSR;1;0;Receive SSR Transparent;0;0;Motion Vectors;0;638509654690735861;  Add Precomputed Velocity;0;0;Specular AA;0;0;Specular Occlusion Mode;1;0;Override Baked GI;0;0;Depth Offset;0;0;  Conserative;1;0;GPU Instancing;0;638536052091280644;LOD CrossFade;0;638504318420745472;Tessellation;0;0;  Phong;0;0;  Strength;0.5,False,;0;  Type;0;0;  Tess;16,False,;0;  Min;10,False,;0;  Max;25,False,;0;  Edge Length;16,False,;0;  Max Displacement;25,False,;0;Vertex Position;0;638504318408748697;0;11;True;True;True;True;True;False;False;False;False;True;True;True;;True;0
WireConnection;1088;0;1087;314
WireConnection;1090;206;1089;0
WireConnection;1091;0;1090;151
WireConnection;1095;198;1093;9091
WireConnection;1095;207;1092;0
WireConnection;1097;279;1095;204
WireConnection;1097;281;1094;0
WireConnection;1101;572;1097;346
WireConnection;1101;596;1098;0
WireConnection;1101;600;1096;0
WireConnection;1103;572;1101;566
WireConnection;1103;596;1100;0
WireConnection;1103;600;1099;0
WireConnection;1104;0;1087;128
WireConnection;1106;146;1103;566
WireConnection;1106;178;1102;0
WireConnection;1109;572;1106;183
WireConnection;1109;600;1105;0
WireConnection;1110;146;1108;0
WireConnection;1110;212;1107;0
WireConnection;1111;0;1110;128
WireConnection;1112;0;1109;566
WireConnection;1060;17;837;0
WireConnection;1060;19;810;0
WireConnection;1048;0;1060;21
WireConnection;1048;1;1060;22
WireConnection;1048;5;1060;77
WireConnection;1048;6;1060;34
WireConnection;1048;7;1060;27
WireConnection;1048;8;1060;26
WireConnection;1048;9;1060;28
WireConnection;1048;11;1060;30
WireConnection;1048;12;1060;32
WireConnection;1048;27;1060;33
ASEEND*/
//CHKSM=34507EB79C584746613AE5E78B7543D70D12B951